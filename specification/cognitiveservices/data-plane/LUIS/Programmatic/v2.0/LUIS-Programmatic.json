{
  "swagger": "2.0",
  "info": {
    "title": "LUIS Programmatic API",
    "version": "v2.0"
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{AzureRegion}.api.cognitive.microsoft.com",
    "parameters": [
      {
        "$ref": "../../../Common/ExtendedRegions.json#/parameters/AzureRegion"
      }
    ]
  },
  "basePath": "/luis/api/v2.0",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "apiKeyHeader": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    }
  },
  "security": [
    {
      "apiKeyHeader": []
    }
  ],
  "paths": {
    "/apps/{appId}/versions/{versionId}/patterns": {
      "post": {
        "description": "Creates a new pattern feature.",
        "operationId": "Features_CreatePatternFeature",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "patternCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatternCreateObject"
            },
            "description": "The Name and Pattern of the feature."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created feature.",
            "schema": {
              "$ref": "#/definitions/FeatureIDResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Create Pattern Feature request": {
            "$ref": "./examples/features/SuccessfulCreatePatternFeatureRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets all application version pattern features.",
        "operationId": "Features_GetApplicationVersionPatternFeatures",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of all pattern features.",
            "schema": {
              "$ref": "#/definitions/PatternFeatureInfoList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Pattern Features request": {
            "$ref": "./examples/features/SuccessfulGetApplicationVersionPatternFeaturesRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/phraselists": {
      "post": {
        "description": "Creates a new phraselist feature.",
        "operationId": "Features_CreatePhraselistFeature",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "phraselistCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PhraselistCreateObject"
            },
            "description": "A Phraselist object containing Name, comma-separated Phrases and the isExchangeable boolean. Default value for isExchangeable is true."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created feature.",
            "schema": {
              "$ref": "#/definitions/FeatureIDResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Create Phraselist Feature request": {
            "$ref": "./examples/features/SuccessfulCreatePhraselistFeatureRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets phraselist features.",
        "operationId": "Features_GetApplicationVersionPhraselistFeatures",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of all phraselist features.",
            "schema": {
              "$ref": "#/definitions/PhraseListFeatureInfoList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Phraselist Features request": {
            "$ref": "./examples/features/SuccessfulGetApplicationVersionPhraselistFeaturesRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/features": {
      "get": {
        "description": "Gets all application version features.",
        "operationId": "Features_GetApplicationVersionFeatures",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of all phraselist features and a list of all pattern features in the application.",
            "schema": {
              "$ref": "#/definitions/FeaturesResponseObject"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Features request": {
            "$ref": "./examples/features/SuccessfulGetApplicationVersionFeaturesRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patterns/{patternId}": {
      "get": {
        "description": "Gets pattern feature info.",
        "operationId": "Features_GetPatternFeatureInfo",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "patternId",
            "in": "path",
            "description": "The pattern feature ID.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "The pattern feature info.",
            "schema": {
              "$ref": "#/definitions/PatternFeatureInfo"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Pattern Feature Info request": {
            "$ref": "./examples/features/SuccessfulGetPatternFeatureInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the pattern, the name and the state of the pattern feature.",
        "operationId": "Features_UpdatePatternFeature",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "patternId",
            "in": "path",
            "description": "The pattern feature ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "patternUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatternUpdateObject"
            },
            "description": "The new values for: - Just a boolean called IsActive, in which case the status of the feature will be changed. - Name, Pattern and a boolean called IsActive to update the feature."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "No Content. Successful operation."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Update Pattern Feature Info request": {
            "$ref": "./examples/features/SuccessfulUpdatePatternFeatureInfoRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes a pattern feature from an application version.",
        "operationId": "Features_DeletePatternFeature",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "patternId",
            "in": "path",
            "description": "The pattern feature ID.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "No Content. Successful operation."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Pattern Feature Info request": {
            "$ref": "./examples/features/SuccessfulDeletePatternFeatureInfoRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/phraselists/{phraselistId}": {
      "get": {
        "description": "Gets phraselist feature info.",
        "operationId": "Features_GetPhraselistFeatureInfo",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "phraselistId",
            "in": "path",
            "description": "The ID of the feature to be retrieved.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A phraselist feature info.",
            "schema": {
              "$ref": "#/definitions/PhraseListFeatureInfo"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Phraselist Feature Info request": {
            "$ref": "./examples/features/SuccessfulGetPhraselistFeatureInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the phrases, the state and the name of the phraselist feature.",
        "operationId": "Features_UpdatePhraselistFeature",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "phraselistId",
            "in": "path",
            "description": "The ID of the feature to be updated.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "phraselistUpdateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PhraselistUpdateObject"
            },
            "description": "A PhraselistUpdateObject object containing either: - Just a boolean called IsActive, in which case the status of the feature will be changed. - Name, Pattern, Mode, and a boolean called IsActive to update the feature."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "No Content. Successfully updated phraselist."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Update Phraselist Feature Info request": {
            "$ref": "./examples/features/SuccessfulUpdatePhraselistFeatureInfoRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes a phraselist feature from an application.",
        "operationId": "Features_DeletePhraselistFeature",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "phraselistId",
            "in": "path",
            "description": "The ID of the feature to be deleted.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "No Content. Successfully deleted phraselist."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Phraselist Feature Info request": {
            "$ref": "./examples/features/SuccessfulDeletePhraselistFeatureInfoRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/example": {
      "post": {
        "description": "Adds a labeled example to the application.",
        "operationId": "Examples_AddLabel",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "exampleLabelObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExampleLabelObject"
            },
            "description": "An example label with the expected intent and entities."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created example.",
            "schema": {
              "$ref": "#/definitions/LabelExampleResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Add Label request": {
            "$ref": "./examples/examples/SuccessfulAddLabelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/examples": {
      "post": {
        "description": "Adds a batch of labeled examples to the specified application.",
        "operationId": "Examples_BatchAddLabels",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "exampleLabelObjectArray",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExampleLabelObjectArray"
            },
            "description": "Array of example labels."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "A string array determining which labels were added successfully.",
            "schema": {
              "$ref": "#/definitions/BatchLabelExampleResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Batch Add Labels request": {
            "$ref": "./examples/examples/SuccessfulBatchAddLabelsRequest.json"
          }
        }
      },
      "get": {
        "description": "Returns examples to be reviewed.",
        "operationId": "Examples_ReviewLabeledExamples",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of predictions and label pairs for every example in the application.",
            "schema": {
              "$ref": "#/definitions/LabeledUtterances"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Review Labeled Examples request": {
            "$ref": "./examples/examples/SuccessfulReviewLabeledExamplesRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/examples/{exampleId}": {
      "delete": {
        "description": "Deletes the label with the specified ID.",
        "operationId": "Examples_DeleteExampleLabels",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "exampleId",
            "in": "path",
            "description": "The example ID.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "No Content. Successfully deleted example label."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Example Label request": {
            "$ref": "./examples/examples/SuccessfulDeleteExampleLabelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/intents": {
      "post": {
        "description": "Adds an intent classifier to the application.",
        "operationId": "Model_CreateIntentClassifier",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "intentCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelCreateObject"
            },
            "description": "A model object containing the name of the new intent classifier."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Create Intent Classifier request": {
            "$ref": "./examples/model/SuccessfulCreateIntentClassifierRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets information about the intent models.",
        "operationId": "Model_GetApplicationVersionIntentInfos",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of intent model infos.",
            "schema": {
              "$ref": "#/definitions/IntentClassifiersList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Intent Infos request": {
            "$ref": "./examples/model/SuccessfulGetApplicationVersionIntentInfosRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/entities": {
      "post": {
        "description": "Adds an entity extractor to the application.",
        "operationId": "Model_CreateEntityExtractor",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "modelCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelCreateObject"
            },
            "description": "A model object containing the name for the new entity extractor."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Create Entity Extractor request": {
            "$ref": "./examples/model/SuccessfulCreateEntityExtractorRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets information about the entity models.",
        "operationId": "Model_GetApplicationVersionEntityInfos",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of entity model infos.",
            "schema": {
              "$ref": "#/definitions/EntityExtractorsList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Entity Infos request": {
            "$ref": "./examples/model/SuccessfulGetApplicationVersionEntityInfosRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities": {
      "post": {
        "description": "Adds a hierarchical entity extractor to the application version.",
        "operationId": "Model_CreateHierarchicalEntityExtractor",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "hierarchicalModelCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HierarchicalModelCreateObject"
            },
            "description": "A model object containing the name and children of the new entity extractor."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Create Hierarchical Entity Extractor request": {
            "$ref": "./examples/model/SuccessfulCreateHierarchicalEntityExtractorRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets information about the hierarchical entity models.",
        "operationId": "Model_GetApplicationVersionHierarchicalEntityInfos",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of hierarchical entity model infos.",
            "schema": {
              "$ref": "#/definitions/HierarchicalEntityExtractorsList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Hierarchical Entity Infos request": {
            "$ref": "./examples/model/SuccessfulGetApplicationVersionHierarchicalEntityInfosRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities": {
      "post": {
        "description": "Adds a composite entity extractor to the application.",
        "operationId": "Model_CreateCompositeEntityExtractor",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "hierarchicalModelCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HierarchicalModelCreateObject"
            },
            "description": "A model object containing the name and children of the new entity extractor."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created Model.",
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Create Composite Entity Extractor": {
            "$ref": "./examples/model/SuccessfulCreateCompositeEntityExtractorRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets information about the composite entity models.",
        "operationId": "Model_GetApplicationVersionCompositeEntityInfos",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of composite entity model infos.",
            "schema": {
              "$ref": "#/definitions/CompositeEntityExtractorsList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Composite Entity Infos request": {
            "$ref": "./examples/model/SuccessfulGetApplicationVersionCompositeEntityInfosRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists": {
      "get": {
        "description": "Gets information about the closedlist models.",
        "operationId": "Model_GetApplicationVersionClosedListInfos",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of closedlist entity model infos.",
            "schema": {
              "$ref": "#/definitions/ClosedListEntityExtractorsList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Closed List Infos request": {
            "$ref": "./examples/model/SuccessfulGetApplicationVersionClosedListInfosRequest.json"
          }
        }
      },
      "post": {
        "description": "Adds a closed list model to the application.",
        "operationId": "Model_CreateClosedListEntityModel",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "closedListModelCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClosedListModelCreateObject"
            },
            "description": "A model object containing the name and words for the new closed list entity extractor."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Create Closed List Entity Model request": {
            "$ref": "./examples/model/SuccessfulCreateClosedListEntityModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/prebuilts": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        }
      ],
      "post": {
        "description": "Adds a list of prebuilt entity extractors to the application.",
        "operationId": "Model_AddPrebuiltEntityExtractors",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "prebuiltExtractorNames",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrebuiltExtractorNames"
            },
            "description": "An array of prebuilt entity extractor names."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "An array of the created prebuilt extractor infos.",
            "schema": {
              "$ref": "#/definitions/PrebuiltEntityExtractorsList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Add Application Version Prebuilt Infos request": {
            "$ref": "./examples/model/SuccessfulAddApplicationVersionPrebuiltInfosRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets information about the prebuilt entity models.",
        "operationId": "Model_GetApplicationVersionPrebuiltInfos",
        "parameters": [
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of prebuilt entity models infos.",
            "schema": {
              "$ref": "#/definitions/PrebuiltEntityExtractorsList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Prebuilt Infos request": {
            "$ref": "./examples/model/SuccessfulGetApplicationVersionPrebuiltInfosRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/listprebuilts": {
      "get": {
        "description": "Gets all the available prebuilt entity extractors for the application.",
        "operationId": "Model_GetAvailablePrebuiltEntityExtractors",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the possible prebuilt entity extractors.",
            "schema": {
              "$ref": "#/definitions/AvailablePrebuiltEntityModels"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Available Prebuilt Entity Extractors request": {
            "$ref": "./examples/model/SuccessfulGetAvailablePrebuiltEntityExtractorsRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/models": {
      "get": {
        "description": "Gets information about the application version models.",
        "operationId": "Model_GetApplicationVersionModelInfos",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of application models infos.",
            "schema": {
              "$ref": "#/definitions/ModelsInfoResponseObject"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Model Infos request": {
            "$ref": "./examples/model/SuccessfulGetApplicationVersionModelInfosRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/intents/{intentId}": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        },
        {
          "$ref": "#/parameters/IntentIdInPath"
        }
      ],
      "get": {
        "description": "Gets information about the intent model.",
        "operationId": "Model_GetIntentInfo",
        "responses": {
          "200": {
            "description": "An intent model info.",
            "schema": {
              "$ref": "#/definitions/IntentClassifier"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Intent Info request": {
            "$ref": "./examples/model/SuccessfulGetIntentInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the name of an intent classifier.",
        "operationId": "Model_RenameIntentModel",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/IntentIdInPath"
          },
          {
            "name": "modelUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelUpdateObject"
            },
            "description": "A model object containing the new intent classifier name."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "No Content. Successful operation."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Rename Intent Model request": {
            "$ref": "./examples/model/SuccessfulRenameIntentModelRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes an intent classifier from the application.",
        "operationId": "Model_DeleteIntentModel",
        "responses": {
          "200": {
            "description": "No Content. Successful operation."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Intent Model request": {
            "$ref": "./examples/model/SuccessfulDeleteIntentModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/entities/{entityId}": {
      "get": {
        "description": "Gets information about the entity model.",
        "operationId": "Model_GetEntityInfo",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "Format - guid. The entity extractor ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An entity model info.",
            "schema": {
              "$ref": "#/definitions/EntityExtractor"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Entity Info request": {
            "$ref": "./examples/model/SuccessfulGetEntityInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the name of an entity extractor.",
        "operationId": "Model_RenameEntityModel",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "Format - guid. The entity extractor ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "modelUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelUpdateObject"
            },
            "description": "A model object containing the new entity extractor name."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "No Content. Successfully updated entity extractor name."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Rename Entity Info request": {
            "$ref": "./examples/model/SuccessfulRenameEntityExtractorRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes an entity extractor from the application.",
        "operationId": "Model_DeleteEntityModel",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "Format - guid. The entity extractor ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No Content. Successfully deleted entity."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Entity Info request": {
            "$ref": "./examples/model/SuccessfulDeleteEntityExtractorRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}": {
      "get": {
        "description": "Gets information about the hierarchical entity model.",
        "operationId": "Model_GetHierarchicalEntityInfo",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A hierarchical entity model info.",
            "schema": {
              "$ref": "#/definitions/HierarchicalEntityExtractor"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Hierarchical Entity Info request": {
            "$ref": "./examples/model/SuccessfulGetHierarchicalEntityInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the name and children of a hierarchical entity model.",
        "operationId": "Model_UpdateHierarchicalEntityModel",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          },
          {
            "name": "hierarchicalModelUpdateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/HierarchicalModelUpdateObject"
            },
            "description": "Model containing names of the children of the hierarchical entity."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "No Content. Successful operation."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Hierarchical Entity Info request": {
            "$ref": "./examples/model/SuccessfulUpdateHierarchicalEntityModelRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes a hierarchical entity extractor from the application version.",
        "operationId": "Model_DeleteHierarchicalEntityModel",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "No Content. Successfully deleted entity."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Hierarchical Entity Model request": {
            "$ref": "./examples/model/SuccessfulDeleteHierarchicalEntityModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}": {
      "get": {
        "description": "Gets information about the composite entity model.",
        "operationId": "Model_GetCompositeEntityInfo",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/CEntityIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "The composite entity model info.",
            "schema": {
              "$ref": "#/definitions/CompositeEntityExtractor"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Composite Entity Info request": {
            "$ref": "./examples/model/SuccessfulGetCompositeEntityInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the composite entity extractor.",
        "operationId": "Model_UpdateCompositeEntityModel",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/CEntityIdInPath"
          },
          {
            "name": "hierarchicalModelUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HierarchicalModelUpdateObject"
            },
            "description": "A model object containing the new entity extractor name and children."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Update Composite Entity Extractor request": {
            "$ref": "./examples/model/SuccessfulUpdateCompositeEntityModelRequest.json"
          }
        },
        "responses": {
          "200": {
            "description": "No Content. Successfully updated composite entity."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a composite entity extractor from the application.",
        "operationId": "Model_DeleteCompositeEntityModel",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/CEntityIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "No Content. Successfully deleted composite entity."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Entity Info request": {
            "$ref": "./examples/model/SuccessfulDeleteCompositeEntityModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}": {
      "get": {
        "description": "Gets information of a closed list model.",
        "operationId": "Model_GetClosedListEntityInfo",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "clEntityId",
            "in": "path",
            "description": "Format - guid. The closed list model ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The closed list model info.",
            "schema": {
              "$ref": "#/definitions/ClosedListEntityExtractor"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Closed List Entity Info request": {
            "$ref": "./examples/model/SuccessfulGetClosedListEntityInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the closed list model.",
        "operationId": "Model_UpdateClosedListEntityModel",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "clEntityId",
            "in": "path",
            "description": "Format - guid. The closed list model ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "closedListModelUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClosedListModelUpdateObject"
            },
            "description": "The new entity name and words list."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "No Content. Successfully updated Closed List name and words list."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Update Closed List Entity Info request": {
            "$ref": "./examples/model/SuccessfulUpdateClosedListEntityModelRequest.json"
          }
        }
      },
      "patch": {
        "description": "Adds a batch of sublists to an existing closedlist.",
        "operationId": "Model_PatchClosedListEntityModel",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "clEntityId",
            "in": "path",
            "description": "Format - guid. The closed list model ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "closedListModelPatchObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClosedListModelPatchObject"
            },
            "description": "A words list batch."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "No Content. Successfully added sublists to Closed List."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Add SubLists to Closed List Entity request": {
            "$ref": "./examples/model/SuccessfulPatchClosedListEntityModelRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes a closed list model from the application.",
        "operationId": "Model_DeleteClosedListEntityModel",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "clEntityId",
            "in": "path",
            "description": "Format - guid. The closed list model ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No Content. Successfully delete Closed List from application."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Closed List Entity Info request": {
            "$ref": "./examples/model/SuccessfulDeleteClosedListEntityModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/prebuilts/{prebuiltId}": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        },
        {
          "name": "prebuiltId",
          "in": "path",
          "description": "Format - guid. The prebuilt entity extractor ID.",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "description": "Gets information about the prebuilt entity model.",
        "operationId": "Model_GetPrebuiltInfo",
        "responses": {
          "200": {
            "description": "A prebuilt entity models info.",
            "schema": {
              "$ref": "#/definitions/PrebuiltEntityExtractor"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Prebuilt Info request": {
            "$ref": "./examples/model/SuccessfulGetPrebuiltInfoRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes a prebuilt entity extractor from the application.",
        "operationId": "Model_DeletePrebuiltModel",
        "responses": {
          "200": {
            "description": "No Content. Successful operation."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Prebuilt Info request": {
            "$ref": "./examples/model/SuccessfulDeletePrebuiltEntityRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists/{subListId}": {
      "delete": {
        "description": "Deletes a sublist of a specific closed list model.",
        "operationId": "Model_DeleteSubList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "clEntityId",
            "in": "path",
            "description": "Format - guid. The closed list entity extractor ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subListId",
            "in": "path",
            "description": "The sublist ID.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "No Content. Successfully deleted sublist."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Sublist request": {
            "$ref": "./examples/model/SuccessfulDeleteSublistRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates one of the closed list's sublists",
        "operationId": "Model_UpdateSubList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "clEntityId",
            "in": "path",
            "description": "Format - guid. The closed list entity extractor ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subListId",
            "in": "path",
            "description": "The sublist ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "wordListBaseUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WordListBaseUpdateObject"
            },
            "description": "A sublist update object containing the new canonical form and the list of words."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "No Content. Successfully updated sublist."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Update Sublist request": {
            "$ref": "./examples/model/SuccessfulUpdateSublistRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/intents/{intentId}/suggest": {
      "get": {
        "description": "Suggests examples that would improve the accuracy of the intent model.",
        "operationId": "Model_SuggestEndpointQueriesForIntents",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/IntentIdInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "If there's no trained model, nothing is returned in the response.</br>If there's a trained model and the active learning algorithm finds any relevant queries, they are returned with the model predictions.</br>If there's a trained model but the active learning algorithm didn't find any relevant queries, an empty list is returned in the response.",
            "schema": {
              "$ref": "#/definitions/IntentsSuggestionExamples"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Intents Suggestion Examples": {
            "$ref": "./examples/model/SuccessfulGetIntentsSuggestionExamples.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/entities/{entityId}/suggest": {
      "get": {
        "description": "Get suggestion examples that would improve the accuracy of the entity model.",
        "operationId": "Model_SuggestEndpointQueriesForEntities",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "Format - guid. The target entity extractor model to enhance.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "If there's no trained model, nothing is returned in the response. If there's a trained model and the active learning algorithm finds any relevant queries, they are returned with the model predictions. If there's a trained model but the active learning algorithm didn't find any relevant queries, an empty list is returned in the response.",
            "schema": {
              "$ref": "#/definitions/EntitiesSuggestionExamples"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Entity Suggestion Examples": {
            "$ref": "./examples/model/SuccessfulGetEntitySuggestionExamples.json"
          }
        }
      }
    },
    "/apps/": {
      "post": {
        "description": "Creates a new LUIS app.",
        "operationId": "Apps_AddApplication",
        "parameters": [
          {
            "name": "applicationCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationCreateObject"
            },
            "description": "A model containing Name, Description (optional), Culture, Usage Scenario (optional), Domain (optional) and initial version ID (optional) of the application. \r\nDefault value for the version ID is 0.1. \r\nNote that the culture cannot be changed after the app is created."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created application.",
            "examples": {
              "application/json": "\"363187f1-c573-46b3-bc4c-ae01d686e68e\""
            },
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Application Creation": {
            "$ref": "./examples/apps/SuccessfulAddApplicationRequest.json"
          }
        }
      },
      "get": {
        "description": "Lists all of the user applications.",
        "operationId": "Apps_GetApplicationsList",
        "parameters": [
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the user applications.",
            "schema": {
              "$ref": "#/definitions/ApplicationsInfoList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Applications List request": {
            "$ref": "./examples/apps/SuccessfulGetApplicationsListRequest.json"
          }
        }
      }
    },
    "/apps/import": {
      "post": {
        "description": "Imports an application to LUIS, the application's structure should be included in in the request body.",
        "operationId": "Apps_ImportApplication",
        "parameters": [
          {
            "name": "appName",
            "in": "query",
            "description": "The application name to create. If not specified, the application name will be read from the imported object.",
            "type": "string"
          },
          {
            "name": "luisApp",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LuisApp"
            },
            "description": "A LUIS application structure."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the imported application.",
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Import Application": {
            "$ref": "./examples/apps/SuccessfulImportApplicationRequest.json"
          }
        }
      }
    },
    "/apps/assistants": {
      "get": {
        "description": "Gets the endpoint URLs for the prebuilt Cortana applications.",
        "operationId": "Apps_GetPersonalAssistantApplications",
        "responses": {
          "200": {
            "description": "A personal assistant apps JSON object containing the endpoint URLs for Cortana applications and the user's endpoint keys.",
            "schema": {
              "$ref": "#/definitions/PersonalAssistantsResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Personal Assistant Applications": {
            "$ref": "./examples/apps/SuccessfulGetPersonalAssistantApplications.json"
          }
        }
      }
    },
    "/apps/domains": {
      "get": {
        "description": "Gets the available application domains.",
        "operationId": "Apps_GetApplicationDomains",
        "responses": {
          "200": {
            "description": "A list object containing the available application domains.",
            "schema": {
              "$ref": "#/definitions/AvailableDomains"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Domains request": {
            "$ref": "./examples/apps/SuccessfulGetApplicationDomainsRequest.json"
          }
        }
      }
    },
    "/apps/usagescenarios": {
      "get": {
        "description": "Gets the application available usage scenarios.",
        "operationId": "Apps_GetApplicationUsageScenarios",
        "responses": {
          "200": {
            "description": "A list object containing the available application usage scenarios.",
            "schema": {
              "$ref": "#/definitions/ApplicationUsageScenarios"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Usage Scenarios request": {
            "$ref": "./examples/apps/SuccessfulGetApplicationUsageScenariosListRequest.json"
          }
        }
      }
    },
    "/apps/cultures": {
      "get": {
        "description": "Gets the supported application cultures.",
        "operationId": "Apps_GetApplicationCultures",
        "responses": {
          "200": {
            "description": "A list object containing the supported application cultures.",
            "schema": {
              "$ref": "#/definitions/AvailableCultures"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Cultures request": {
            "$ref": "./examples/apps/SuccessfulGetApplicationCulturesRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/querylogs": {
      "get": {
        "description": "Gets the query logs of the past month for the application.",
        "operationId": "Apps_DownloadApplicationQueryLogs",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A CSV file containing the query logs for the past month.",
            "schema": {
              "type": "file",
              "description": "The query logs of an application for the past month in CSV format."
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/octet-stream"
        ],
        "x-ms-examples": {
          "Successful Download Application Query logs request": {
            "$ref": "./examples/apps/SuccessfulDownloadApplicationQueryLogsRequest.json"
          }
        }
      }
    },
    "/apps/{appId}": {
      "get": {
        "description": "Gets the application info.",
        "operationId": "Apps_GetApplicationInfo",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the application info.",
            "schema": {
              "$ref": "#/definitions/ApplicationInfoResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Info request": {
            "$ref": "./examples/apps/SuccessfulGetApplicationInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the name or description of the application.",
        "operationId": "Apps_RenameApplication",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "applicationUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationUpdateObject"
            },
            "description": "A model containing Name and Description of the application."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "No Content. Successfully updated application name and description."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Rename Application request": {
            "$ref": "./examples/apps/SuccessfulRenameApplicationRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes an application.",
        "operationId": "Apps_DeleteApplication",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "No Content. Successfully deleted application."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Rename Application request": {
            "$ref": "./examples/apps/SuccessfulDeleteApplicationRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/clone": {
      "post": {
        "description": "Creates a new version equivalent to the current snapshot of the selected application version.",
        "operationId": "Versions_CloneVersion",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "versionCloneObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TaskUpdateObject"
            },
            "description": "An model containing the new version ID."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The version ID of the created task.",
            "schema": {
              "type": "string",
              "example": "0.2"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Clone Application Version request": {
            "$ref": "./examples/versions/SuccessfulCloneApplicatioVersionRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/publish": {
      "post": {
        "description": "Publishes a specific version of the application.",
        "operationId": "Apps_PublishApplication",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "applicationPublishObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationPublishObject"
            },
            "description": "The application publish object. The region is the target region that the application is published to. Possible values are \"westus\", \"eastus2\", \"westcentralus\" or \"southeastasia\" for applications created in west US, and \"westeurope\" for applications created in West Europe."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "An object containing the application endpoint URL and its assigned endpoint key.",
            "schema": {
              "$ref": "#/definitions/ProductionOrStagingEndpointInfo"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Publish Application request": {
            "$ref": "./examples/apps/SuccessfulPublishApplicationRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions": {
      "get": {
        "description": "Gets the application versions info.",
        "operationId": "Versions_GetApplicationVersions",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of all versions of the application.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VersionInfo"
              }
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Versions info request": {
            "$ref": "./examples/versions/SuccessfulGetApplicationVersionsInfoRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        }
      ],
      "get": {
        "description": "Gets the task info.",
        "operationId": "Versions_GetApplicationVersion",
        "responses": {
          "200": {
            "description": "A model containing the task info.",
            "schema": {
              "$ref": "#/definitions/VersionInfo"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version info request": {
            "$ref": "./examples/versions/SuccessfulGetApplicationVersionInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the name or description of the application version.",
        "operationId": "Versions_RenameApplicationVersion",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "versionUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskUpdateObject"
            },
            "description": "A model containing Name and Description of the application."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "No Content. Successful operation."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Rename Application Version request": {
            "$ref": "./examples/versions/SuccessfulRenameApplicationVersionRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes an application version.",
        "operationId": "Versions_DeleteApplicationVersion",
        "responses": {
          "200": {
            "description": "No Content. Successful operation."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Application Version request": {
            "$ref": "./examples/versions/SuccessfulDeleteApplicationVersionRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/export": {
      "get": {
        "description": "Exports a LUIS application to JSON format.",
        "operationId": "Versions_ExportApplicationVersion",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/LuisApp"
            },
            "description": "A LUIS application structure."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Export Application Version": {
            "$ref": "./examples/versions/SuccessfulExportApplicationVersionRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/train": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        }
      ],
      "post": {
        "description": "Sends a training request for a version of a specified LUIS app. This POST request initiates a request asynchronously. To determine whether the training request is successful, submit a GET request to get training status. Note: The application version is not fully trained unless all the models (intents and entities) are trained successfully or are up to date. To verify training success, get the training status at least once after training is complete.",
        "operationId": "Train_TrainApplicationVersion",
        "responses": {
          "202": {
            "description": "This response indicates the initial training status.",
            "schema": {
              "$ref": "#/definitions/EnqueueTrainingResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Train Application Version request": {
            "$ref": "./examples/train/SuccessfulTrainApplicationVersionRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets the training status of all models (intents and entities) for the specified LUIS app. You must call the train API to train the LUIS app before you call this API to get training status. \"appID\" specifies the LUIS app ID. \"versionId\" specifies the version number of the LUIS app. For example, \"0.1\".",
        "operationId": "Train_GetApplicationVersionTrainingStatus",
        "responses": {
          "200": {
            "description": "A successful response provides an array of training status details for a LUIS app that you submitted for training. Each element in the response array provides training status for a model (intent or entity) in the LUIS app.  <br/><br/><b>Note:</b> Training status is not provided for prebuilt entities because they are pretrained. <br/></br>The <b>modelId</b> property identifies which intent or entity the training status corresponds to. To get the name and type of each model, use the models API which has a request URL in this format: <br/></br>https://westus.api.cognitive.microsoft.com/luis/api/v2.0/apps/{appId}/versions/{versionId}/models<br/></br> The details property for each model can contain the following fields: <br/><br/><b>statusId</b>: An integer from 0 to 3 that corresponds to the value of the <b>status</b> field. <br/><br/><b>status</b>: A string with one of the following values: “Success”, “UpToDate”, “InProgress”, “Fail”. If the status is “Fail”, the <b>failureReason</b> property provides the reason for failure. <br/><br/><b>exampleCount</b>: The number of examples used for training. In the case of the None intent or prebuilt domain intents and entities, this number includes example provided internally by the system as well as examples you added to your LUIS app. <br/></br><b>failureReason</b>:  A string that indicates the reason training failed.  The value \"FewLabels\" means that no labeled examples were provided for training. <br/></br><b>trainingDateTime</b>: A string indicating the time the model was last trained. The value uses the ISO 8601 format for representing times in UTC (Coordinated Universal Time) with a UTC designator (“Z”), for example: \"2017-08-10T01:08:34Z\".",
            "schema": {
              "$ref": "#/definitions/ModelTrainingInfoList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json",
          "JSON"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Training Status request": {
            "$ref": "./examples/train/SuccessfulGetApplicationVersionTrainingStatusRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/import": {
      "post": {
        "description": "Imports a new version into a LUIS application.",
        "operationId": "Versions_ImportVersionToApplication",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "versionId",
            "in": "query",
            "description": "The new versionId to import. If not specified, the versionId will be read from the imported object.",
            "type": "string"
          },
          {
            "name": "luisApp",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LuisApp"
            },
            "description": "A LUIS application structure."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The created application version.",
            "schema": {
              "$ref": "#/definitions/VersionResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Import Application": {
            "$ref": "./examples/versions/SuccessfulImportApplicationVersionRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/settings": {
      "get": {
        "description": "Get the application settings",
        "operationId": "Apps_GetApplicationSettings",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "An object containing the application settings.",
            "schema": {
              "$ref": "#/definitions/ApplicationSettings"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Settings request": {
            "$ref": "./examples/apps/SuccessfulGetApplicationSettingsRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the application settings",
        "operationId": "Apps_UpdateApplicationSettings",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "applicationSettingUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationSettingUpdateObject"
            },
            "description": "An object containing the new application settings."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "No Content. Successfully updated application settings."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Update Application Settings request": {
            "$ref": "./examples/apps/SuccessfulUpdateApplicationSettingsRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/suggest": {
      "delete": {
        "description": "Deleted an unlabelled utterance.",
        "operationId": "Versions_DeleteUnlabelledUtterance",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "utterance",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The utterance text to delete"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "No Content. Successful operation."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Unlabelled Utterance": {
            "$ref": "./examples/versions/SuccessfulDeleteUnlabelledUtteranceRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/permissions": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        }
      ],
      "get": {
        "description": "Gets the list of user emails that have permissions to access your application.",
        "operationId": "Permissions_GetApplicationUserAccessList",
        "responses": {
          "200": {
            "description": "The list includes a single owner. All collaborators are listed in the emails array.",
            "schema": {
              "$ref": "#/definitions/UserAccessList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application User Access List": {
            "$ref": "./examples/permissions/SuccessfulGetApplicationUserAccessListRequest.json"
          }
        }
      },
      "post": {
        "description": "Adds a user to the allowed list of users to access this LUIS application. Users are added using their email address.",
        "operationId": "Permissions_AddUserToAccessList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "userToAdd",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCollaborator"
            },
            "description": "A model containing the user's email address."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "No Content. Successful operation."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Add User To Access List": {
            "$ref": "./examples/permissions/SuccessfulAddUserToAccessListRequest.json"
          }
        }
      },
      "delete": {
        "description": "Removed a user to the allowed list of users to access this LUIS application. Users are removed using their email address.",
        "operationId": "Permissions_RemoveUserFromAccessList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "userToDelete",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCollaborator"
            },
            "description": "A model containing the user's email address."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "No Content. Successful operation."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Remove User From Access List": {
            "$ref": "./examples/permissions/SuccessfulRemoveUserFromAccessListRequest.json"
          }
        }
      },
      "put": {
        "description": "Replaces the current users access list with the one sent in the body. If an empty list is sent, all access to other users will be removed.",
        "operationId": "Permissions_UpdateAccessList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "collaborators",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CollaboratorsArray"
            },
            "description": "A model containing a list of user's email addresses."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "No Content. Successful operation."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Replaces Users From Access List": {
            "$ref": "./examples/permissions/SuccessfulReplacesUsersFromAccessListRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/endpoints": {
      "get": {
        "description": "Returns the available endpoint deployment regions and URLs",
        "operationId": "Apps_GetEndpoints",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of endpoints regions and their corresponding endpoint URL",
            "schema": {
              "$ref": "#/definitions/AvailableEndpoints"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Endpoints request": {
            "$ref": "./examples/apps/SuccessfulGetEndpointsRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists": {
      "post": {
        "description": "Adds a list to an existing closed list",
        "operationId": "Model_AddSubList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "clEntityId",
            "in": "path",
            "description": "Format - guid. The closed list entity extractor ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "wordListCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WordListObject"
            },
            "description": "Words list."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The id of the newly created list",
            "schema": {
              "type": "string",
              "example": "90440"
            },
            "examples": {
              "application/json": "90440"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Add Sublist request": {
            "$ref": "./examples/model/SuccessfulAddSublistToClosedListEntityModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltdomains": {
      "post": {
        "description": "Adds a customizable prebuilt domain along with all of its models to this application.",
        "operationId": "Model_AddCustomPrebuiltDomainToApplication",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "prebuiltDomainObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrebuiltDomainCreateBaseObject"
            },
            "description": "A prebuilt domain create object containing the name of the domain"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "An array of the created custom prebuilt domain model Ids.",
            "schema": {
              "$ref": "#/definitions/GuidList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Add Custom Prebuilt Domain to Application request": {
            "$ref": "./examples/model/SuccessfulAddCustomPrebuildDomainToApplicationRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltintents": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        }
      ],
      "post": {
        "description": "Adds a custom prebuilt intent model to the application",
        "operationId": "Model_AddCustomPrebuiltIntentModel",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "prebuiltDomainModelCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrebuiltDomainModelCreateObject"
            },
            "description": "A model object containing the name of the custom prebuilt intent and the name of the domain to which this model belongs."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Add Custom Prebuilt Intent request": {
            "$ref": "./examples/model/SuccessfulAddCustomPrebuildIntentRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets custom prebuilt intents information of this application",
        "operationId": "Model_GetCustomPrebuiltDomainIntentsInfo",
        "responses": {
          "200": {
            "description": "Returns a list of all custom prebuilt intents and their representations.",
            "schema": {
              "$ref": "#/definitions/IntentClassifiersList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Custom Prebuilt Intent request": {
            "$ref": "./examples/model/SuccessfulGetCustomPrebuildIntentRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltentities": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        }
      ],
      "post": {
        "description": "Adds a custom prebuilt entity model to the application",
        "operationId": "Model_AddCustomPrebuiltEntityModel",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "prebuiltDomainModelCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrebuiltDomainModelCreateObject"
            },
            "description": "A model object containing the name of the custom prebuilt entity and the name of the domain to which this model belongs."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Add Custom Prebuilt Entity request": {
            "$ref": "./examples/model/SuccessfulAddCustomPrebuiltEntityRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets all custom prebuilt entities information of this application",
        "operationId": "Model_GetCustomPrebuiltDomainEntitiesInfo",
        "responses": {
          "200": {
            "description": "Returns a list of all custom prebuilt entities and their representations.",
            "schema": {
              "$ref": "#/definitions/EntityExtractorsList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Custom Prebuilt Domain Entities request": {
            "$ref": "./examples/model/SuccessfulGetCustomPrebuiltDomainEntitiesRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltmodels": {
      "get": {
        "description": "Gets all custom prebuilt models information of this application",
        "operationId": "Model_GetCustomPrebuiltDomainModelsInfo",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of all custom prebuilt models and their representations.",
            "schema": {
              "$ref": "#/definitions/CustomPrebuiltModelList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Custom Prebuilt Domain Models request": {
            "$ref": "./examples/model/SuccessfulGetCustomPrebuiltDomainModelsRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltdomains/{domainName}": {
      "delete": {
        "description": "Deletes a prebuilt domain's models from the application.",
        "operationId": "Model_DeleteCustomPrebuiltDomainModels",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Domain name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No Content. Successful operation."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Prebuilt Domain from Application request": {
            "$ref": "./examples/model/SuccessfulDeletePrebuiltDomainFromApplicationRequest.json"
          }
        }
      }
    },
    "/apps/customprebuiltdomains": {
      "get": {
        "description": "Gets all the available custom prebuilt domains for all cultures",
        "operationId": "Apps_GetAvailableCustomPrebuiltDomains",
        "responses": {
          "200": {
            "description": "Returns a list of all custom prebuilt domains and their intents/entities representation",
            "schema": {
              "$ref": "#/definitions/PrebuiltDomainsList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Available Custom Prebuilt Domains request": {
            "$ref": "./examples/apps/SuccessfulGetAvailableCustomPrebuiltDomainsRequest.json"
          }
        }
      },
      "post": {
        "description": "Adds a prebuilt domain along with its models as a new application.",
        "operationId": "Apps_AddCustomPrebuiltApplication",
        "parameters": [
          {
            "name": "prebuiltDomainCreateObject",
            "in": "body",
            "required": true,
            "description": "A prebuilt domain create object containing the name and culture of the domain",
            "schema": {
              "$ref": "#/definitions/PrebuiltDomainCreateObject"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created application.",
            "examples": {
              "application/json": "\"739f1513-11f0-4aae-8a19-f660804e6da5\""
            },
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Add Custom Prebuilt Application request": {
            "$ref": "./examples/apps/SuccessfulAddCustomPrebuiltApplicationRequest.json"
          }
        }
      }
    },
    "/apps/customprebuiltdomains/{culture}": {
      "get": {
        "description": "Gets all the available custom prebuilt domains for a specific culture",
        "operationId": "Apps_GetAvailableCustomPrebuiltDomainsForCulture",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "description": "Format - string. Culture",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of all domains and their intents/entities representation for a specific culture",
            "schema": {
              "$ref": "#/definitions/PrebuiltDomainsList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get AvailableCustomPrebuiltDomainsForCulture request": {
            "$ref": "./examples/apps/SuccessfulGetAvailableCustomPrebuiltDomainsForCultureRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/children/{hChildId}": {
      "get": {
        "description": "Gets information about the hierarchical entity child model.",
        "operationId": "Model_GetHierarchicalEntityChildInfo",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          },
          {
            "name": "hChildId",
            "in": "path",
            "description": "Format - guid. The hierarchical entity extractor child ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The hierarchical entity child model info.",
            "schema": {
              "$ref": "#/definitions/HierarchicalChildEntity"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Hierarchical Entity Child Info request": {
            "$ref": "./examples/model/SuccessfulGetHierarchicalChildEntityInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Renames a single child in an existing hierarchical entity model.",
        "operationId": "Model_UpdateHierarchicalEntityChildModel",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          },
          {
            "name": "hChildId",
            "in": "path",
            "required": true,
            "description": "Format - guid. The hierarchical entity extractor child ID.",
            "type": "string"
          },
          {
            "name": "hierarchicalChildModelUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            },
            "description": "Model object containing new name of the hierarchical entity child."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "No Content. Successfully updated entity child."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Update Hierarchical Entity Child Model request": {
            "$ref": "./examples/model/SuccessfulUpdateHierarchicalChildModelRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes a hierarchical entity extractor child from the application.",
        "operationId": "Model_DeleteHierarchicalEntityChildModel",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          },
          {
            "name": "hChildId",
            "in": "path",
            "description": "Format - guid. The hierarchical entity extractor child ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No Content. Successfully deleted entity."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Hierarchical Entity Child Model request": {
            "$ref": "./examples/model/SuccessfulDeleteHierarchicalChildModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/children": {
      "post": {
        "description": "Creates a single child in an existing hierarchical entity model.",
        "operationId": "Model_CreateHierarchicalEntityChildModel",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          },
          {
            "name": "hierarchicalChildModelCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
                "properties": {
                "name": {
                  "type": "string"
                }
              }
            },
            "description": "A model object containing the name of the new hierarchical child model."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Create Hierarchical Entity Child Model request": {
            "$ref": "./examples/model/SuccessfulCreateHierarchicalChildModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/children": {
      "post": {
        "description": "Creates a single child in an existing composite entity model.",
        "operationId": "Model_CreateCompositeEntityChildModel",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/CEntityIdInPath"
          },
          {
            "name": "compositeChildModelCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            },
            "description": "A model object containing the name of the new composite child model."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Create Composite Entity Child Model request": {
            "$ref": "./examples/model/SuccessfulCreateCompositeChildModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/children/{cChildId}": {
      "delete": {
        "description": "Deletes a composite entity extractor child from the application.",
        "operationId": "Model_DeleteCompositeEntityChildModel",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/CEntityIdInPath"
          },
          {
            "name": "cChildId",
            "in": "path",
            "description": "Format - guid. The hierarchical entity extractor child ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No Content. Successfully deleted entity."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Composite Entity Child Model request": {
            "$ref": "./examples/model/SuccessfulDeleteCompositeChildModelRequest.json"
          }
        }
      }
    }
  },
  "definitions": {
    "ApplicationCreateBaseObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "culture": {
          "type": "string"
        },
        "usageScenario": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "EntityLabelObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "entityName": {
          "type": "string"
        },
        "startCharIndex": {
          "type": "integer"
        },
        "endCharIndex": {
          "type": "integer"
        }
      }
    },
    "ApplicationCreateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "culture": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "initialVersionId": {
          "type": "string"
        },
        "usageScenario": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "example": {
        "name": "MyFirstDummyApp",
        "description": "This is my first dummy application",
        "culture": "en-us",
        "usageScenario": "IoT",
        "domain": "Comics",
        "initialVersionId": "1.0"
      }
    },
    "PrebuiltDomainCreateBaseObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "domainName": {
          "type": "string"
        }
      },
      "example": { "domainName": "Camera" }
    },
    "PrebuiltDomainCreateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "domainName": {
          "type": "string"
        },
        "culture": {
          "type": "string"
        }
      },
      "example": {
        "domainName": "Web",
        "culture": "en-US"
      }
    },
    "PrebuiltDomainModelCreateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "domainName": {
          "type": "string"
        },
        "modelName": {
          "type": "string"
        }
      },
      "example": {
        "domainName": "Camera",
        "modelName": "AppName"
      }
    },
    "HierarchicalModelUpdateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "children": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        }
      },
      "example": {
        "name": "Reservation",
        "children": [ "Location::To" ]
      }
    },
    "JSONEntity": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "startPos": {
          "type": "integer"
        },
        "endPos": {
          "type": "integer"
        },
        "entity": {
          "type": "string"
        }
      }
    },
    "ApplicationSettingUpdateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "public": {
          "type": "boolean",
          "x-nullable": false
        }
      },
      "example": {
        "public": true
      }
    },
    "ExampleLabelObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        },
        "entityLabels": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/EntityLabelObject"
          },
          "type": "array"
        },
        "intentName": {
          "type": "string"
        }
      },
      "example": {
        "text": "whats the weather in buenos aires?",
        "intentName": "WeatherInPlace",
        "entityLabels": [
          {
          "entityName": "Place",
          "startCharIndex": 21,
          "endCharIndex": 34
          }
        ]
      }
    },
    "PhraselistCreateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "phrases": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "isExchangeable": {
          "default": true,
          "type": "boolean"
        }
      },
      "example": {
        "name": "DaysOfWeek",
        "phrases": "monday,tuesday,wednesday,thursday,friday,saturday,sunday",
        "isExchangeable": true
      }
    },
    "SubClosedList": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "canonicalForm": {
          "type": "string"
        },
        "list": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "SubClosedListResponse": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SubClosedList"
        }
      ],
      "properties": {
        "id": {
          "type": "integer",
          "x-nullable": false,
          "example": "123456"
        }
      }
    },
    "JSONAction": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "actionName": {
          "type": "string"
        },
        "actionParameters": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/JSONActionParam"
          },
          "type": "array"
        },
        "intentName": {
          "type": "string"
        },
        "channel": {
          "type": "object",
          "$ref": "#/definitions/Channel"
        }
      }
    },
    "ApplicationUpdateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "example": {
        "name": "MyFirstRenamedDummyAp",
        "description": "This is my first modified dummy description"
      }
    },
    "Channel": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "settings": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/Setting"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "method": {
          "type": "string"
        }
      }
    },
    "PrebuiltExtractorNames": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "example": [ "number", "ordinal" ]
    },
    "JSONRegexFeature": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "pattern": {
          "type": "string"
        },
        "activated": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "PatternUpdateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "pattern": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "isActive": {
          "default": true,
          "type": "boolean"
        }
      },
      "example": {
        "name": "ModifiedEmailPattern",
        "pattern": "\\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}\\b"
      }
    },
    "ClosedList": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "subLists": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/SubClosedList"
          },
          "type": "array"
        }
      }
    },
    "JSONActionParam": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "phraseListFeatureName": {
          "type": "string"
        },
        "parameterName": {
          "type": "string"
        },
        "entityName": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "question": {
          "type": "string"
        }
      }
    },
    "ClosedListModelPatchObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "subLists": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/WordListObject"
          },
          "type": "array"
        }
      },
      "example": {
        "subLists":
        [
          {
            "canonicalForm": "Ohio",
            "list": [ "Ohio", "OH" ]
          }
        ]
      }
    },
    "KeyValue": {
      "type": "string",
      "example": "\"DummyKey\""
    },
    "JSONModelFeature": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "activated": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "words": {
          "type": "string"
        },
        "mode": {
          "type": "boolean"
        }
      }
    },
    "ModelCreateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "example": {
        "name": "DayOfWeek"
      }
    },
    "Setting": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "PatternCreateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "pattern": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "example": {
        "name": "EmailPattern",
        "pattern": "\\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}\\b"
      }
    },
    "WordListObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "canonicalForm": {
          "type": "string"
        },
        "list": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "example": {
          "canonicalForm": "California",
          "list": ["California", "CA", "Calif.", "Cal."]
      }
    },
    "WordListBaseUpdateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "canonicalForm": {
          "type": "string"
        },
        "list": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "example": {
          "canonicalForm": "California",
          "list": ["California", "CA", "Calif.", "Cal."]
      }
    },
    "JSONUtterance": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        },
        "intent": {
          "type": "string"
        },
        "entities": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/JSONEntity"
          },
          "type": "array"
        }
      }
    },
    "ModelUpdateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "example": {
        "name": "New Name"
      }
    },
    "ClosedListModelUpdateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "subLists": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/WordListObject"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        }
      },
      "example": {
        "name": "States",
        "subLists": [
          {
            "canonicalForm": "new york",
            "list": [
              "ny",
              "new york"
            ]
          },
          {
            "canonicalForm": "washington",
            "list": [
              "washington",
              "wa"
            ]
          },
          {
            "canonicalForm": "california",
            "list": [
              "california",
              "ca",
              "calif.",
              "cal."
            ]
          },
          {
            "canonicalForm": "Texas",
            "list": [
              "Texas",
              "TX"
            ]
          }
        ]
      }
    },
    "ClosedListModelCreateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "subLists": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/WordListObject"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        }
      },
      "example": {
        "name": "States",
        "subLists": [{
            "canonicalForm": "New York",
            "list": ["NY", "New York"]
        }, {
            "canonicalForm": "Washington",
            "list": ["Washington", "WA"]
        }, {
            "canonicalForm": "California",
            "list": ["California", "CA", "Calif.", "Cal."]
        }]
      }
    },
    "ExampleLabelObjectArray": {
      "items": {
        "type": "object",
        "$ref": "#/definitions/ExampleLabelObject"
      },
      "type": "array",
      "example": [
         {
            "text":"Book me a flight from Cairo to Redmond next Thursday",
            "intentName":"BookFlight",
            "entityLabels":[
               {
                  "entityName":"Location::From",
                  "startCharIndex":22,
                  "endCharIndex":26
               },
               {
                  "entityName":"Location::To",
                  "startCharIndex":31,
                  "endCharIndex":37
               }
            ]
         },
         {
            "text":"What's the weather like in Seattle?",
            "intentName":"GetWeather",
            "entityLabels":[
               {
                  "entityName":"Location",
                  "startCharIndex":27,
                  "endCharIndex":33
               }
            ]
         }
      ]
    },
    "VersionInfo": {
      "type": "object",
      "required": [ "version", "trainingStatus" ],
      "properties": {
        "version": {
          "type": "string"
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastTrainedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastPublishedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "endpointUrl": {
          "type": "string"
        },
        "assignedEndpointKey": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "externalApiKeys": {
          "type": "object"
        },
        "intentsCount": {
          "type": "integer"
        },
        "entitiesCount": {
          "type": "integer"
        },
        "endpointHitsCount": {
          "type": "integer"
        },
        "trainingStatus": {
          "type": "string",
          "enum": [
            "NeedsTraining",
            "InProgress",
            "Trained"
          ],
          "x-ms-enum": {
            "name": "TrainingStatus"
          }
        }
      }
    },
    "TaskUpdateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        }
      },
      "example": {
        "version": "1.0"
      }
    },
    "PhraselistUpdateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "phrases": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "isActive": {
          "default": true,
          "type": "boolean"
        },
        "isExchangeable": {
          "default": true,
          "type": "boolean"
        }
      },
      "example": {
        "name": "DaysOfWeek",
        "phrases": "monday,tuesday,wednesday,thursday,friday,saturday,sunday"
      }
    },
    "HierarchicalModel": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "children": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "HierarchicalModelCreateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "children": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        }
      },
      "example": {
        "name": "Reservation",
        "children": [ "Location::To", "datetime" ]
      }
    },
    "ApplicationPublishObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "versionId": {
          "type": "string"
        },
        "isStaging": {
          "default": false,
          "type": "boolean"
        },
        "region": {
          "type": "string"
        }
      },
      "example": {
       "versionId": "0.1",
       "isStaging": false,
       "region": "westus"
      }
    },
    "LuisApp": {
      "additionalProperties": true,
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "versionId": {
          "type": "string"
        },
        "desc": {
          "type": "string"
        },
        "culture": {
          "type": "string"
        },
        "intents": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/HierarchicalModel"
          },
          "type": "array"
        },
        "entities": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/HierarchicalModel"
          },
          "type": "array"
        },
        "bing_entities": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "actions": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/JSONAction"
          },
          "type": "array"
        },
        "closedLists": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/ClosedList"
          },
          "type": "array"
        },
        "composites": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/HierarchicalModel"
          },
          "type": "array"
        },
        "regex_features": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/JSONRegexFeature"
          },
          "type": "array"
        },
        "model_features": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/JSONModelFeature"
          },
          "type": "array"
        },
        "utterances": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/JSONUtterance"
          },
          "type": "array"
        }
      },
      "example": {
        "luis_schema_version": "2.1.0",
        "versionId": "0.1",
        "name": "LuisBot",
        "desc": "",
        "culture": "en-us",
        "intents": [
          {
            "name": "dateintent"
          },
          {
            "name": "Help"
          },
          {
            "name": "None"
          },
          {
            "name": "SearchHotels"
          },
          {
            "name": "ShowHotelsReviews"
          }
        ],
        "entities": [
          {
            "name": "AirportCode"
          },
          {
            "name": "Hotel"
          }
        ],
        "composites": [],
        "closedLists": [],
        "bing_entities": [
          "datetimeV2",
          "geography"
        ],
        "model_features": [
          {
            "name": "Near",
            "mode": true,
            "words": "near,around,close,nearby",
            "activated": true
          },
          {
            "name": "Show",
            "mode": true,
            "words": "show,find,look,search",
            "activated": true
          }
        ],
        "regex_features": [
          {
            "name": "AirportCodeRegex",
            "pattern": "[a-z]{3}",
            "activated": true
          }
        ],
        "utterances": [
          {
            "text": "i need help",
            "intent": "Help",
            "entities": []
          },
          {
            "text": "help me",
            "intent": "Help",
            "entities": []
          },
          {
            "text": "tomorrow",
            "intent": "dateintent",
            "entities": []
          },
          {
            "text": "search for hotels in seattle",
            "intent": "SearchHotels",
            "entities": []
          },
          {
            "text": "what can i do?",
            "intent": "Help",
            "entities": []
          },
          {
            "text": "next monday",
            "intent": "dateintent",
            "entities": []
          },
          {
            "text": "next year",
            "intent": "dateintent",
            "entities": []
          },
          {
            "text": "look for hotels in miami",
            "intent": "SearchHotels",
            "entities": []
          },
          {
            "text": "show me hotels in california",
            "intent": "SearchHotels",
            "entities": []
          },
          {
            "text": "show me the reviews of the amazing bot resort",
            "intent": "ShowHotelsReviews",
            "entities": [
              {
                "entity": "Hotel",
                "startPos": 23,
                "endPos": 44
              }
            ]
          },
          {
            "text": "can i see the reviews of extended bot hotel?",
            "intent": "ShowHotelsReviews",
            "entities": [
              {
                "entity": "Hotel",
                "startPos": 25,
                "endPos": 42
              }
            ]
          },
          {
            "text": "find reviews of hotelxya",
            "intent": "ShowHotelsReviews",
            "entities": [
              {
                "entity": "Hotel",
                "startPos": 16,
                "endPos": 23
              }
            ]
          },
          {
            "text": "show me reviews of the amazing hotel",
            "intent": "ShowHotelsReviews",
            "entities": [
              {
                "entity": "Hotel",
                "startPos": 19,
                "endPos": 35
              }
            ]
          },
          {
            "text": "what are the available options?",
            "intent": "Help",
            "entities": []
          },
          {
            "text": "best hotels in seattle",
            "intent": "SearchHotels",
            "entities": []
          },
          {
            "text": "hotels in los angeles",
            "intent": "SearchHotels",
            "entities": []
          },
          {
            "text": "can you show me hotels from los angeles?",
            "intent": "SearchHotels",
            "entities": []
          },
          {
            "text": "can you show me the reviews of the amazing resort & hotel",
            "intent": "ShowHotelsReviews",
            "entities": [
              {
                "entity": "Hotel",
                "startPos": 31,
                "endPos": 56
              }
            ]
          },
          {
            "text": "what are the reviews of the hotel bot framework?",
            "intent": "ShowHotelsReviews",
            "entities": [
              {
                "entity": "Hotel",
                "startPos": 24,
                "endPos": 46
              }
            ]
          },
          {
            "text": "find hotels near eze",
            "intent": "SearchHotels",
            "entities": [
              {
                "entity": "AirportCode",
                "startPos": 17,
                "endPos": 19
              }
            ]
          },
          {
            "text": "where can i stay near nnn?",
            "intent": "SearchHotels",
            "entities": [
              {
                "entity": "AirportCode",
                "startPos": 22,
                "endPos": 24
              }
            ]
          },
          {
            "text": "show hotels near att airport",
            "intent": "SearchHotels",
            "entities": [
              {
                "entity": "AirportCode",
                "startPos": 17,
                "endPos": 19
              }
            ]
          },
          {
            "text": "find hotels near agl",
            "intent": "SearchHotels",
            "entities": [
              {
                "entity": "AirportCode",
                "startPos": 17,
                "endPos": 19
              }
            ]
          },
          {
            "text": "find hotels around eze airport",
            "intent": "SearchHotels",
            "entities": [
              {
                "entity": "AirportCode",
                "startPos": 19,
                "endPos": 21
              }
            ]
          },
          {
            "text": "01/7",
            "intent": "dateintent",
            "entities": []
          }
        ]
      }
    },
    "GuidResponse": {
      "type": "string",
      "example": "363187f1-c573-46b3-bc4c-ae01d686e68e"
    },
    "VersionResponse": {
      "type": "string",
      "example": "0.1"
    },
    "FeatureIDResponse": {
      "type": "integer",
      "x-nullable": false,
      "example": 398102
    },
    "LabeledUtterances": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/LabeledUtterance"
      }
    },
    "LabeledUtterance": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "description": "ID of Labeled Utterance."
        },
        "text": {
          "type": "string",
          "description": "what's the weather like in seattle?"
        },
        "tokenizedText": {
          "type": "array",
          "description": "the utterance tokenized",
          "items": {
            "type": "string"
          }
        },
        "intentLabel": {
          "type": "string"
        },
        "entityLabels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityLabel"
          }
        },
        "intentPredictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IntentPrediction"
          }
        },
        "entityPredictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityPrediction"
          }
        }
      }
    },
    "IntentsSuggestionExamples": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/IntentsSuggestionExample"
      }
    },
    "IntentsSuggestionExample": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "what's the weather like in seattle?"
        },
        "tokenizedText": {
          "type": "array",
          "description": "the utterance tokenized",
          "items": {
            "type": "string"
          }
        },
        "intentPredictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IntentPrediction"
          }
        },
        "entityPredictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityPrediction"
          }
        }
      }
    },
    "EntitiesSuggestionExamples": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/EntitiesSuggestionExample"
      }
    },
    "EntitiesSuggestionExample": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "what's the weather like in seattle?"
        },
        "tokenizedText": {
          "type": "array",
          "description": "the utterance tokenized",
          "items": {
            "type": "string"
          }
        },
        "intentPredictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IntentPrediction"
          }
        },
        "entityPredictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityPrediction"
          }
        }
      }
    },
    "EntityLabel": {
      "type": "object",
      "properties": {
        "entityName": {
          "type": "string"
        },
        "startTokenIndex": {
          "type": "number"
        },
        "endTokenIndex": {
          "type": "number"
        }
      },
      "required": [
        "entityName", "startTokenIndex", "endTokenIndex"
      ]
    },
    "IntentPrediction": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "score": {
          "type": "number"
        }
      }
    },
    "EntityPrediction": {
      "type": "object",
      "properties": {
        "entityName": {
          "type": "string"
        },
        "startTokenIndex": {
          "type": "number"
        },
        "endTokenIndex": {
          "type": "number"
        },
        "phrase": {
          "type": "string",
          "description": "The actual token(s) that comprise the entity."
        }
      }
    },
    "PersonalAssistantsResponse": {
      "type": "object",
      "description": "Response containing user's endpoint keys and the endpoint URLs of the prebuilt Cortana applications.",
      "properties": {
        "endpointKeys": {
          "$ref": "#/definitions/EndpointKeys"
        },
        "endpointUrls": {
          "$ref": "#/definitions/PersonalAssistantUrls"
        }
      }
    },
    "EndpointKeys": {
      "type": "array",
      "description": "An a array of GUIDs, comprised of Azure Endpoint Keys and the Programmatic API key.",
      "items": {
        "type": "string"
      }
    },
    "PersonalAssistantUrls": {
      "type": "object",
      "description": "Endpoint URLs for prebuilt Cortana applications.",
      "additionalProperties": {
        "type": "string"
      }
    },
    "ModelsResponseObject" : {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ModelInfo"
      }
    },
    "ModelInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The GUID of the Entity Model."
        },
        "name": {
          "type": "string",
          "description": "Name of the Entity Model."
        },
        "typeId": {
          "type": "number",
          "description": "The type ID of the Entity Model."
        },
        "readableType": {
          "$ref": "#/definitions/ReadableType"
        }
      },
      "required": [
        "readableType"
      ]
    },
    "ModelsInfoResponseObject" : {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ModelInfoResponse"
      }
    },
    "ModelInfoResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The GUID of the Entity Model."
        },
        "name": {
          "type": "string",
          "description": "Name of the Entity Model."
        },
        "typeId": {
          "type": "number",
          "description": "The type ID of the Entity Model."
        },
        "readableType": {
          "$ref": "#/definitions/ReadableType"
        }
      },
      "required": [
        "readableType"
      ],
      "discriminator": "readableType",
      "allOf": [
        { "$ref": "#/definitions/HierarchicalEntityExtractor" },
        { "$ref": "#/definitions/CompositeEntityExtractor"},
        { "$ref": "#/definitions/ClosedListEntityExtractor" },
        { "$ref": "#/definitions/IntentClassifier" },
        { "$ref": "#/definitions/EntityExtractor" }
      ]
    },
    "ReadableType": {
      "type": "string",
      "enum": [
        "Entity Extractor",
        "Hierarchical Entity Extractor",
        "Hierarchical Child Entity Extractor",
        "Composite Entity Extractor",
        "Closed List Entity Extractor",
        "Prebuilt Entity Extractor",
        "Intent Classifier"
      ]
    },
    "HierarchicalEntityExtractor": {
      "type": "object",
      "x-ms-discriminator-value": "Hierarchical Entity Extractor",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        }
      ],
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChildEntity"
          }
        }
      }
    },
    "HierarchicalEntityExtractorsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/HierarchicalEntityExtractor"
      }
    },
    "CompositeEntityExtractor": {
      "type": "object",
      "x-ms-discriminator-value": "Composite Entity Extractor",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        }
      ],
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChildEntity"
          }
        }
      }
    },
    "CompositeEntityExtractorsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CompositeEntityExtractor"
      }
    },
    "ClosedListEntityExtractor": {
      "type": "object",
      "x-ms-discriminator-value": "Closed List Entity Extractor",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        }
      ],
      "properties": {
        "subLists": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubClosedListResponse"
          }
        }
      }
    },
    "ClosedListEntityExtractorsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ClosedListEntityExtractor"
      }
    },
    "PrebuiltEntityExtractor": {
      "type": "object",
      "x-ms-discriminator-value": "Prebuilt Entity Extractor",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        }
      ]
    },
    "PrebuiltEntityExtractorsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PrebuiltEntityExtractor"
      }
    },
    "ChildEntity": {
      "type": "object",
      "description": "The base child entity class.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The GUID belonging to a child entity."
        },
        "name": {
          "type": "string",
          "description": "The name of a child entity."
        }
      }
    },
    "HierarchicalChildEntity": {
      "type": "object",
      "properties": {
        "typeId": {
          "type": "number"
        },
        "readableType": {
          "$ref": "#/definitions/ReadableType"
        }
      },
      "allOf": [
        { "$ref": "#/definitions/ChildEntity" }
      ]
    },
    "CustomPrebuiltModel": {
      "allOf": [
        { "$ref": "#/definitions/ModelInfo" },
        { "$ref": "#/definitions/IntentClassifier" },
        { "$ref": "#/definitions/EntityExtractor" }
      ]
    },
    "CustomPrebuiltModelList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CustomPrebuiltModel"
      }
    },
    "IntentClassifier": {
      "type": "object",
      "x-ms-discriminator-value": "Intent Classifier",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        }
      ],
      "properties": {
        "customPrebuiltDomainName": {
          "type": "string"
        },
        "customPrebuiltModelName": {
          "type": "string"
        }
      }
    },
    "EntityExtractor": {
      "type": "object",
      "x-ms-discriminator-value": "Entity Extractor",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        }
      ],
      "properties": {
        "customPrebuiltDomainName": {
          "type": "string"
        },
        "customPrebuiltModelName": {
          "type": "string"
        }
      }
    },
    "IntentClassifiersList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/IntentClassifier"
      }
    },
    "EntityExtractorsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/EntityExtractor"
      }
    },
    "FeaturesResponseObject": {
      "type": "object",
      "properties": {
        "phraselistFeatures": {
          "$ref": "#/definitions/PhraseListFeatureInfoList"
        },
        "patternFeatures": {
            "$ref": "#/definitions/PatternFeatureInfoList"
        }
      }
    },
    "FeatureInfoObject": {
      "description": "The base class Features-related response objects inherit from.",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "A six-digit ID used for Features."
        },
        "name": {
          "type": "string",
          "description": "The name of the Feature."
        },
        "isActive": {
          "type": "boolean"
        }
      }
    },
    "PatternFeatureInfo": {
      "type": "object",
      "properties": {
        "pattern": {
          "type": "string"
        }
      },
      "allOf": [
        { "$ref": "#/definitions/FeatureInfoObject" }
      ]
    },
    "PatternFeatureInfoList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PatternFeatureInfo"
      }
    },
    "PhraseListFeatureInfo": {
      "type": "object",
      "properties": {
        "phrases": {
          "type": "string",
          "description": "A list of comma-separated values."
        },
        "isExchangeable": {
          "type": "boolean"
        }
      },
      "allOf": [
        { "$ref": "#/definitions/FeatureInfoObject" }
      ]
    },
    "PhraseListFeatureInfoList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PhraseListFeatureInfo"
      }
    },
    "LabelExampleResponse": {
      "type": "object",
      "properties": {
        "UtteranceText": {
          "type": "string",
          "example": "book me a flight from cairo to redmond next thursday"
        },
        "ExampleId": {
          "type": "number",
          "example": "-6830368"
        }
      }
    },
    "BatchLabelExample": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/LabelExampleResponse"
        },
        "hasError": {
          "type": "boolean"
        }
      }
    },
    "BatchLabelExampleResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/BatchLabelExample"
      }
    },
    "ApplicationInfoResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The GUID of the application."
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "culture": {
          "type": "string"
        },
        "usageScenario": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "versionsCount": {
          "type": "number"
        },
        "createdDateTime": {
          "type": "string"
        },
        "endpoints": {
          "type": "object"
        },
        "endpointHitsCount": {
          "type": "number"
        },
        "activeVersion": {
          "type": "string"
        }
      }
    },
    "ApplicationsInfoList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ApplicationInfoResponse"
      }
    },
    "ProductionOrStagingEndpointInfo": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EndpointInfo"
        }
      ]
    },
    "EndpointInfo": {
      "type": "object",
      "description": "The base class \"ProductionOrStagingEndpointInfo\" inherits from.",
      "properties": {
        "versionId": {
          "type": "string"
        },
        "isStaging": {
          "type": "boolean"
        },
        "endpointUrl": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "assignedEndpointKey": {
          "type": "string"
        },
        "endpointRegion": {
          "type": "string",
          "description": "The endpoint's region."
        },
        "publishedDateTime": {
          "type": "string"
        }
      }
    },
    "AvailableEndpoints": {
      "type": "object",
      "description": "Collection of endpoint URLs the selected application is deployed to.",
      "properties": {
        "westus": {
          "type": "string",
          "example": "https://westus.api.cognitive.microsoft.com/api/v2.0/apps/bb25e72c-2279-46bb-a99b-89fcb921b58a"
        },
        "eastus2": {
          "type": "string",
          "example": "https://eastus2.api.cognitive.microsoft.com/api/v2.0/apps/bb25e72c-2279-46bb-a99b-89fcb921b58a"
        },
        "westcentralus": {
          "type": "string",
          "example": "https://westcentralus.api.cognitive.microsoft.com/api/v2.0/apps/bb25e72c-2279-46bb-a99b-89fcb921b58a"
        },
        "southeastasia": {
          "type": "string",
          "example": "https://southeastasia.api.cognitive.microsoft.com/api/v2.0/apps/bb25e72c-2279-46bb-a99b-89fcb921b58a"
        },
        "westeurope": {
          "type": "string",
          "example": "https://westeurope.dev.cognitive.microsoft.com/docs/services/5890b47c39e2bb17b84a55ff/operations/590aff885aca2f09e404ec3f"
        }
      }
    },
    "AvailableCulture": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      }
    },
    "AvailableCultures": {
      "type": "array",
      "description": "A list object containing the available application domains.",
      "items": {
        "$ref": "#/definitions/AvailableCulture"
      }
    },
    "AvailableDomains": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "ApplicationUsageScenarios": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "ApplicationSettings": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "public": {
          "type": "boolean",
          "x-nullable": false
        }
      }
    },
    "AvailablePrebuiltEntityModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "examples": {
          "type": "string"
        }
      }
    },
    "AvailablePrebuiltEntityModels": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AvailablePrebuiltEntityModel"
      }
    },
    "EnqueueTrainingResponse": {
      "type": "object",
      "properties": {
        "statusId": {
          "type": "number"
        },
        "status": {
          "$ref": "#/definitions/TrainingStatus"
        }
      }
    },
    "TrainingStatus": {
      "type": "string",
      "enum": [
        "Queued",
        "InProgress",
        "UpToDate",
        "Fail",
        "Success"
      ]
    },
    "ModelTrainingInfo": {
      "type": "object",
      "properties": {
        "modelId": {
          "type": "string",
          "description": "The GUID of the model."
        },
        "details": {
          "$ref": "#/definitions/ModelTrainingDetails"
        }
      }
    },
    "ModelTrainingDetails": {
      "type": "object",
      "properties": {
        "statusId": {
          "type": "number"
        },
        "status": {
          "$ref": "#/definitions/TrainingStatus"
        },
        "exampleCount": {
          "type": "number"
        },
        "trainingDateTime": {
          "type": "string"
        },
        "failureReason": {
          "type": "string"
        }
      }
    },
    "ModelTrainingInfoList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ModelTrainingInfo"
      }
    },
    "UserAccessList": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string",
          "description": "The email address of owner of the application."
        },
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UserCollaborator": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "The email address of the user."
        }
      }
    },
    "CollaboratorsArray": {
      "type": "object",
      "properties": {
        "emails": {
          "type": "array",
          "description": "The email address of the users.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "integer",
          "example": "401",
          "x-nullable": false
        },
        "message": {
          "type": "string",
          "x-nullable": false,
          "example": "Access denied due to invalid subscription key. Make sure to provide a valid key for an active subscription."
        }
      }
    },
    "PrebuiltDomainsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PrebuiltDomain"
      }
    },
    "PrebuiltDomain": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "culture": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "examples": {
          "type": "string"
        },
        "intents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrebuiltDomainItem"
          }
        },
        "entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrebuiltDomainItem"
          }
        }
      }
    },
    "PrebuiltDomainItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "examples": {
          "type": "string"
        }
      }
    },
    "GuidList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/GuidResponse"
      },
      "example": [
        "2639049a-e41d-4285-a3c6-8a17ed299473",
        "200d6173-ecfa-4967-bf95-3c319902dc52",
        "f80aa9ba-64c8-4a36-8cc5-92010d0aadf1"
      ]
    }
  },
  "parameters": {
    "AppIdInPath": {
      "name": "appId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Format - guid. The application ID.",
      "x-ms-parameter-location": "method"
    },
    "VersionIdInPath": {
      "name": "versionId",
      "in": "path",
      "description": "The version ID of the task.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "CEntityIdInPath": {
      "name": "cEntityId",
      "in": "path",
      "description": "Format - guid. The hierarchical entity extractor ID.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "HEntityIdInPath": {
      "name": "hEntityId",
      "in": "path",
      "description": "Format - guid. The hierarchical entity extractor ID.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "IntentIdInPath": {
      "name": "intentId",
      "in": "path",
      "description": "Format - guid. The intent classifier ID.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SkipInPath": {
      "name": "skip",
      "in": "query",
      "description": "The number of entries to skip. Default value is 0.",
      "type": "integer",
      "default": 0,
      "x-ms-parameter-location": "method"
    },
    "TakeInPath": {
      "name": "take",
      "in": "query",
      "description": "The number of entries to return. Maximum page size is 500. Default is 100.",
      "type": "integer",
      "default": 100,
      "x-ms-parameter-location": "method"
    }
  }
}