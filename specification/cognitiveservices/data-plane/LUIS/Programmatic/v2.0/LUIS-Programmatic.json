{
  "swagger": "2.0",
  "info": {
    "title": "LUIS Programmatic API",
    "version": "v2.0"
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{AzureRegion}.api.cognitive.microsoft.com",
    "parameters": [
      {
        "$ref": "../../../Common/ExtendedRegions.json#/parameters/AzureRegion"
      }
    ]
  },
  "basePath": "/luis/api/v2.0",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "apiKeyHeader": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    }
  },
  "security": [
    {
      "apiKeyHeader": []
    }
  ],
  "paths": {
    "/apps/{appId}/versions/{versionId}/patterns": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        } 
      ],
      "post": {
        "description": "Creates a new pattern feature.",
        "operationId": "Features_CreatePatternFeature",
        "parameters": [
          {
            "name": "patternCreateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PatternCreateObject"
            },
            "description": "A JSON object containing Name and Pattern of the feature."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created feature.",
            "schema": {
              "$ref": "#/definitions/FeatureIDResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Create Pattern Feature request": {
            "$ref": "./examples/features/SuccessfulCreatePatternFeatureRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets all application version pattern features.",
        "operationId": "Features_GetApplicationVersionPatternFeatures",
        "parameters": [
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing a list of all pattern features.",
            "schema": {
              "$ref": "#/definitions/PatternFeatureInfoList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Pattern Features request": {
            "$ref": "./examples/features/SuccessfulGetApplicationVersionPatternFeaturesRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/phraselists": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        } 
      ],
      "post": {
        "description": "Creates a new phraselist feature.",
        "operationId": "Features_CreatePhraselistFeature",
        "parameters": [
          {
            "name": "phraselistCreateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PhraselistCreateObject"
            },
            "description": "A JSON object containing Name, comma-separated Phrases and the isExchangeable boolean.            Default value for isExchangeable is true."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created feature.",
            "schema": {
              "$ref": "#/definitions/FeatureIDResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ], 
        "x-ms-examples": {
          "Successful Create Phraselist Feature request": {
            "$ref": "./examples/features/SuccessfulCreatePhraselistFeatureRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets all application phraselist features.",
        "operationId": "Features_GetApplicationVersionPhraselistFeatures",
        "parameters": [
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing a list of all phraselist features.",
            "schema": {
              "$ref": "#/definitions/PhraseListFeatureInfoList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Phraselist Features request": {
            "$ref": "./examples/features/SuccessfulGetApplicationVersionPhraselistFeaturesRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/features": {
      "get": {
        "description": "Gets all application version features.",
        "operationId": "Features_GetApplicationVersionFeatures",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing a list of all phraselist features and a list of all pattern featuers in the application.",
            "schema": {
              "$ref": "#/definitions/FeaturesResponseObject"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Features request": {
            "$ref": "./examples/features/SuccessfulGetApplicationVersionFeaturesRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patterns/{patternId}": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        },
        {
          "name": "patternId",
          "in": "path",
          "description": "The pattern feature ID.",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "description": "Gets pattern feature info.",
        "operationId": "Features_GetPatternFeatureInfo",
        "responses": {
          "200": {
            "description": "A JSON object containing the pattern feature info.",
            "schema": {
              "$ref": "#/definitions/PatternFeatureInfo"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Pattern Feature Info request": {
            "$ref": "./examples/features/SuccessfulGetPatternFeatureInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the pattern, the name and the state of the pattern feature.",
        "operationId": "Features_UpdatePatternFeature",
        "parameters": [
          {
            "name": "patternUpdateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PatternUpdateObject"
            },
            "description": "A JSON object containing either:</br>1- Just a boolean called IsActive, in which case the status of the feature will be changed.</br>2- Name, Pattern and a boolean called IsActive to update the feature."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a pattern feature from an application version.",
        "operationId": "Features_DeletePatternFeature",
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/phraselists/{phraselistId}": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        },
        {
          "name": "phraselistId",
          "in": "path",
          "description": "The ID of the feature to be deleted.",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "description": "Gets phraselist feature info.",
        "operationId": "Features_GetPhraselistFeatureInfo",
        "responses": {
          "200": {
            "description": "A JSON object containing the phraselist feature info.",
            "schema": {
              "$ref": "#/definitions/PhraseListFeatureInfo"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Phraselist Feature Info request": {
            "$ref": "./examples/features/SuccessfulGetPhraselistFeatureInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the phrases, the state and the name of the phraselist feature.",
        "operationId": "Features_UpdatePhraselistFeature",
        "parameters": [
          {
            "name": "phraselistUpdateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PhraselistUpdateObject"
            },
            "description": "A JSON object containing either:</br>1- Just a boolean called IsActive, in which case the status of the feature will be changed.</br>2- Name, Pattern, Mode, and a boolean called IsActive to update the feature."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a phraselist feature from an application.",
        "operationId": "Features_DeletePhraselistFeature",
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/example": {
      "post": {
        "description": "Adds a labeled example to the application.",
        "operationId": "Examples_AddLabel",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "exampleLabelObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ExampleLabelObject"
            },
            "description": "A JSON object containing the example label."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created example.",
            "schema": {
              "$ref": "#/definitions/LabelExampleResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Add Label request": {
            "$ref": "./examples/examples/SuccessfulAddLabelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/examples": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        }
      ],
      "post": {
        "description": "Adds a batch of labeled examples to the specified application.",
        "operationId": "Examples_BatchAddLabels",
        "parameters": [

          {
            "name": "exampleLabelObjectArray",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ExampleLabelObjectArray"
            },
            "description": "A JSON array containing example labels."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "A string array determining which labels were added successfully.",
            "schema": {
              "$ref": "#/definitions/BatchLabelExampleResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Batch Add Labels request": {
            "$ref": "./examples/examples/SuccessfulBatchAddLabelsRequest.json"
          }
        }
      },
      "get": {
        "description": "Returns examples to be reviewed.",
        "operationId": "Examples_ReviewLabeledExamples",
        "parameters": [
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of predictions and label pairs for every example in the application.",
            "schema": {
              "$ref": "#/definitions/LabeledUtterances"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Review Labeled Examples request": {
            "$ref": "./examples/examples/SuccessfulReviewLabeledExamplesRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/examples/{exampleId}": {
      "delete": {
        "description": "Deletes the label with the specified ID.",
        "operationId": "Examples_DeleteExampleLabels",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "exampleId",
            "in": "path",
            "description": "The example ID.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/intents": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        }
      ],
      "post": {
        "description": "Adds an intent classifier to the application.",
        "operationId": "Model_CreateIntentClassifier",
        "parameters": [
          {
            "name": "modelCreateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ModelCreateObject"
            },
            "description": "A model object containing the name of the new intent classifier."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Create Intent Classifier request": {
            "$ref": "./examples/model/SuccessfulCreateIntentClassifierRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets information about the intent models.",
        "operationId": "Model_GetApplicationVersionIntentInfos",
        "parameters": [
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of intent model infos.",
            "schema": {
              "$ref": "#/definitions/IntentClassifiersList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Intent Infos request": {
            "$ref": "./examples/model/SuccessfulGetApplicationVersionIntentInfosRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/entities": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        }
      ],
      "post": {
        "description": "Adds an entity extractor to the application.",
        "operationId": "Model_CreateEntityExtractor",
        "parameters": [
          {
            "name": "modelCreateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ModelCreateObject"
            },
            "description": "A model object containing the name for the new entity extractor."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Create Entity Extractor request": {
            "$ref": "./examples/model/SuccessfulCreateEntityExtractorRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets information about the entity models.",
        "operationId": "Model_GetApplicationVersionEntityInfos",
        "parameters": [
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of entity model infos.",
            "schema": {
              "$ref": "#/definitions/EntityExtractorsList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Entity Infos request": {
            "$ref": "./examples/model/SuccessfulGetApplicationVersionEntityInfosRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        }
      ],
      "post": {
        "description": "Adds a hierarchical entity extractor to the application version.",
        "operationId": "Model_CreateHierarchicalEntityExtractor",
        "parameters": [
          {
            "name": "hierarchicalModelCreateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/HierarchicalModelCreateObject"
            },
            "description": "A model object containing the name and children of the new entity extractor."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Create Hierarchical Entity Extractor request": {
            "$ref": "./examples/model/SuccessfulCreateHierarchicalEntityExtractorRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets information about the hierarchical entity models.",
        "operationId": "Model_GetApplicationVersionHierarchicalEntityInfos",
        "parameters": [
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of hierarchical entity model infos.",
            "schema": {
              "$ref": "#/definitions/HierarchicalEntityExtractorsList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Hierarchical Entity Infos request": {
            "$ref": "./examples/model/SuccessfulGetApplicationVersionHierarchicalEntityInfosRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        }
      ],
      "post": {
        "description": "Adds a composite entity extractor to the application.",
        "operationId": "Model_CreateCompositeEntityExtractor",
        "parameters": [
          {
            "name": "hierarchicalModelCreateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/HierarchicalModelCreateObject"
            },
            "description": "A model object containing the name and children of the new entity extractor."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created Model.",
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Create Composite Entity Extractor": {
            "$ref": "./examples/model/SuccessfulCreateCompositeEntityExtractorRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets information about the composite entity models.",
        "operationId": "Model_GetApplicationVersionCompositeEntityInfos",
        "parameters": [
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of composite entity model infos.",
            "schema": {
              "$ref": "#/definitions/CompositeEntityExtractorsList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Composite Entity Infos request": {
            "$ref": "./examples/model/SuccessfulGetApplicationVersionCompositeEntityInfosRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        }
      ],
      "post": {
        "description": "Adds a closed list model to the application.",
        "operationId": "Model_CreateClosedListEntityModel",
        "parameters": [
          {
            "name": "closedListModelCreateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ClosedListModelCreateObject"
            },
            "description": "A model object containing the name and words for the new closed list entity extractor."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Create Closed List Entity Model request": {
            "$ref": "./examples/model/SuccessfulCreateClosedListEntityModelRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets information about the closedlist models.",
        "operationId": "Model_GetApplicationVersionClosedListInfos",
        "parameters": [
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of closedlist entity model infos.",
            "schema": {
              "$ref": "#/definitions/ClosedListEntityExtractorsList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Closed List Infos request": {
            "$ref": "./examples/model/SuccessfulGetApplicationVersionClosedListInfosRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/prebuilts": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        }
      ],
      "post": {
        "description": "Adds a list of prebuilt entity extractors to the application.",
        "operationId": "Model_AddPrebuiltEntityExtractors",
        "parameters": [
          {
            "name": "prebuiltExtractorNames",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PrebuiltExtractorNames"
            },
            "description": "An array of prebuilt entity extractor names."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "An array of the created prebuilt extractor infos.",
            "examples": {
              "application/json": "[  {    \"id\": \"a18eaa87-ecd9-4a67-a951-e70cf5b87c7e\",    \"name\": \"datetime\",    \"typeId\": 2,    \"readableType\": \"Prebuilt Entity Extractor\"  }]"
            },
            "schema": {
              "$ref": "#/definitions/PrebuiltEntityExtractorsList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "get": {
        "description": "Gets information about the prebuilt entity models.",
        "operationId": "Model_GetApplicationVersionPrebuiltInfos",
        "parameters": [
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of prebuilt entity models infos.",
            "schema": {
              "$ref": "#/definitions/PrebuiltEntityExtractorsList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Prebuilt Infos request": {
            "$ref": "./examples/model/SuccessfulGetApplicationVersionPrebuiltInfosRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/listprebuilts": {
      "get": {
        "description": "Gets all the available prebuilt entity extractors for the application.",
        "operationId": "Model_GetAvailablePrebuiltEntityExtractors",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the possible prebuilt entity extractors.",
            "schema": {
              "$ref": "#/definitions/AvailablePrebuiltEntityModels"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Available Prebuilt Entity Extractors request": {
            "$ref": "./examples/model/SuccessfulGetAvailablePrebuiltEntityExtractorsRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/models": {
      "get": {
        "description": "Gets information about the application version models.",
        "operationId": "Model_GetApplicationVersionModelInfos",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of application models infos.",
            "schema": {
              "$ref": "#/definitions/ModelsResponseObject"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Model Infos request": {
            "$ref": "./examples/model/SuccessfulGetApplicationVersionModelInfosRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/intents/{intentId}": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        },
        {
          "$ref": "#/parameters/IntentIdInPath"
        }
      ],
      "get": {
        "description": "Gets information about the intent model.",
        "operationId": "Model_GetIntentInfo",
        "responses": {
          "200": {
            "description": "An intent model info.",
            "schema": {
              "$ref": "#/definitions/IntentClassifier"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Intent Info request": {
            "$ref": "./examples/model/SuccessfulGetIntentInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the name of an intent classifier.",
        "operationId": "Model_RenameIntentModel",
        "parameters": [
          {
            "name": "modelUpdateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ModelUpdateObject"
            },
            "description": "A model object containing the new intent classifier name."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes an intent classifier from the application.",
        "operationId": "Model_DeleteIntentModel",
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/entities/{entityId}": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        },
        {
          "name": "entityId",
          "in": "path",
          "description": "Format - guid. The entity extractor ID.",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "description": "Gets information about the entity model.",
        "operationId": "Model_GetEntityInfo",
        "responses": {
          "200": {
            "description": "An entity model info.",
            "schema": {
              "$ref": "#/definitions/EntityExtractor"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Entity Info request": {
            "$ref": "./examples/model/SuccessfulGetEntityInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the name of an entity extractor.",
        "operationId": "Model_RenameEntityModel",
        "parameters": [
          {
            "name": "modelUpdateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ModelUpdateObject"
            },
            "description": "A model object containing the new entity extractor name."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes an entity extractor from the application.",
        "operationId": "Model_DeleteEntityModel",
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        },
        {
          "$ref": "#/parameters/HEntityIdInPath"
        }
      ],
      "get": {
        "description": "Gets information about the hierarchical entity model.",
        "operationId": "Model_GetHierarchicalEntityInfo",
        "responses": {
          "200": {
            "description": "A hierarchical entity model info.",
            "schema": {
              "$ref": "#/definitions/HierarchicalEntityExtractor"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Hierarchical Entity Info request": {
            "$ref": "./examples/model/SuccessfulGetHierarchicalEntityInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the name and children of a hierarchical entity model.",
        "operationId": "Model_UpdateHierarchicalEntityModel",
        "parameters": [
          {
            "name": "hierarchicalModelUpdateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/HierarchicalModelUpdateObject"
            },
            "description": "Model containing names of the children of the hierarchical entity."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a hierarchical entity extractor from the application version.",
        "operationId": "Model_DeleteHierarchicalEntityModel",
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        },
        {
          "$ref": "#/parameters/CEntityIdInPath"
        }
      ],
      "get": {
        "description": "Gets information about the composite entity model.",
        "operationId": "Model_GetCompositeEntityInfo",
        "responses": {
          "200": {
            "description": "The composite entity model info.",
            "schema": {
              "$ref": "#/definitions/CompositeEntityExtractor"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Composite Entity Info request": {
            "$ref": "./examples/model/SuccessfulGetCompositeEntityInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the composite entity extractor.",
        "operationId": "Model_UpdateCompositeEntityModel",
        "parameters": [
          {
            "name": "hierarchicalModelUpdateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/HierarchicalModelUpdateObject"
            },
            "description": "A model object containing the new entity extractor name and children."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a composite entity extractor from the application.",
        "operationId": "Model_DeleteCompositeEntityModel",
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        },
        {
          "name": "clEntityId",
          "in": "path",
          "description": "Format - guid. The closed list model ID.",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "description": "Gets information of a closed list model.",
        "operationId": "Model_GetClosedListEntityInfo",
        "responses": {
          "200": {
            "description": "The closed list model info.",
            "schema": {
              "$ref": "#/definitions/ClosedListEntityExtractor"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Closed List Entity Info request": {
            "$ref": "./examples/model/SuccessfulGetClosedListEntityInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the closed list model.",
        "operationId": "Model_UpdateClosedListEntityModel",
        "parameters": [
          {
            "name": "closedListModelUpdateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ClosedListModelUpdateObject"
            },
            "description": "A json object containing the new entity name and words list."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "description": "Adds a batch of sublists to an existing closedlist.",
        "operationId": "Model_PatchClosedListEntityModel",
        "parameters": [
          {
            "name": "closedListModelPatchObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ClosedListModelPatchObject"
            },
            "description": "A json object containing words list batch."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a closed list model from the application.",
        "operationId": "Model_DeleteClosedListEntityModel",
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/prebuilts/{prebuiltId}": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        },
        {
          "name": "prebuiltId",
          "in": "path",
          "description": "Format - guid. The prebuilt entity extractor ID.",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "description": "Gets information about the prebuilt entity model.",
        "operationId": "Model_GetPrebuiltInfo",
        "responses": {
          "200": {
            "description": "A prebuilt entity models info.",
            "schema": {
              "$ref": "#/definitions/PrebuiltEntityExtractor"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Prebuilt Info request": {
            "$ref": "./examples/model/SuccessfulGetPrebuiltInfoRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes a prebuilt entity extractor from the application.",
        "operationId": "Model_DeletePrebuiltModel",
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists/{subListId}": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        },
        {
          "name": "clEntityId",
          "in": "path",
          "description": "Format - guid. The closed list entity extractor ID.",
          "required": true,
          "type": "string"
        },
        {
          "name": "subListId",
          "in": "path",
          "description": "The sublist ID.",
          "required": true,
          "type": "integer"
        }
      ],
      "delete": {
        "description": "Deletes a sublist of a specific closed list model.",
        "operationId": "Model_DeleteSubList",
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "Updates one of the closed list's sublists",
        "operationId": "Model_UpdateSubList",
        "parameters": [
          {
            "name": "wordListBaseUpdateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/WordListBaseUpdateObject"
            },
            "description": "A sublist update object containing the new canonical form and the list of words."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/intents/{intentId}/suggest": {
      "get": {
        "description": "Suggests examples that would improve the accuracy of the intent model.",
        "operationId": "Model_SuggestEndpointQueriesForIntents",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/IntentIdInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "If there's no trained model, nothing is returned in the response.</br>If there's a trained model and the active learning algorithm finds any relevant queries, they are returned with the model predictions.</br>If there's a trained model but the active learning algorithm didn't find any relevant queries, an empty list is returned in the response.",
            "examples": {
              "application/json": "[  {    \"text\": \"hello, world!\",    \"tokenizedText\": [      \"hello\",      \",\",      \"world\",      \"!\"    ],    \"intentPredictions\": [      {        \"name\": \"None\",        \"score\": 0.63      },      {        \"name\": \"GetWeather\",        \"score\": 0      },      {        \"name\": \"BookFlight\",        \"score\": 0      }    ],    \"entityPredictions\": []  }]"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/apps/{appId}/versions/{versionId}/entities/{entityId}/suggest": {
      "get": {
        "description": "Suggests examples that would improve the accuracy of the entity model.",
        "operationId": "Model_SuggestEndpointQueriesForEntities",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "Format - guid. The target entity extractor model to enhance.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "If there's no trained model, nothing is returned in the response.</br>If there's a trained model and the active learning algorithm finds any relevant queries, they are returned with the model predictions.</br>If there's a trained model but the active learning algorithm didn't find any relevant queries, an empty list is returned in the response.",
            "examples": {
              "application/json": "[  {    \"text\": \"hello, world!\",    \"tokenizedText\": [      \"hello\",      \",\",      \"world\",      \"!\"    ],    \"intentPredictions\": [      {        \"name\": \"None\",        \"score\": 0.63      },      {        \"name\": \"BookFlight\",        \"score\": 0      },      {        \"name\": \"GetWeather\",        \"score\": 0      }    ],    \"entityPredictions\": []  }]"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/apps/": {
      "post": {
        "description": "Creates a new LUIS app.",
        "operationId": "Apps_AddApplication",
        "parameters": [
          {
            "name": "applicationCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationCreateObject"
            },
            "description": "A JSON object containing Name, Description (optional), Culture, Usage Scenario (optional), Domain (optional) and initial version ID (optional) of the application. \r\nDefault value for the version ID is 0.1. \r\nNote that the culture cannot be changed after the app is created."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created application.",
            "examples": {
              "application/json": "\"363187f1-c573-46b3-bc4c-ae01d686e68e\""
            },
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Application Creation": {
            "$ref": "./examples/apps/SuccessfulAddApplicationRequest.json"
          }
        }
      },
      "get": {
        "description": "Lists all of the user applications.",
        "operationId": "Apps_GetApplicationsList",
        "parameters": [
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the user applications.",
            "schema": {
              "$ref": "#/definitions/ApplicationsInfoList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Applications List request": {
            "$ref": "./examples/apps/SuccessfulGetApplicationsListRequest.json"
          }
        }
      }
    },
    "/apps/import": {
      "post": {
        "description": "Imports an application to LUIS, the application's JSON should be included in in the request body.",
        "operationId": "Apps_ImportApplication",
        "parameters": [
          {
            "name": "appName",
            "in": "query",
            "description": "The imported application name.",
            "type": "string"
          },
          {
            "name": "jSONApp",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/JSONApp"
            },
            "description": "A JSON representing the LUIS application structure."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the imported application.",
            "examples": {
              "application/json": "\"f8c64e2a-8635-4a09-8f78-39d7adc76ec5\""
            },
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/apps/assistants": {
      "get": {
        "description": "Gets the endpoint URLs for the prebuilt Cortana applications.",
        "operationId": "Apps_GetPersonalAssistantApplications",
        "responses": {
          "200": {
            "description": "A personal assistant apps JSON object containing the endpoint URLs for Cortana applications and the user's endpoint keys.",
            "schema": {
              "$ref": "#/definitions/PersonalAssistantsResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Personal Assistant Applications": {
            "$ref": "./examples/apps/SuccessfulGetPersonalAssistantApplications.json"
          }
        }
      }
    },
    "/apps/domains": {
      "get": {
        "description": "Gets the available application domains.",
        "operationId": "Apps_GetApplicationDomains",
        "responses": {
          "200": {
            "description": "A list object containing the available application domains.",
            "schema": {
              "$ref": "#/definitions/AvailableDomains"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Domains request": {
            "$ref": "./examples/apps/SuccessfulGetApplicationDomainsRequest.json"
          }
        }
      }
    },
    "/apps/usagescenarios": {
      "get": {
        "description": "Gets the application available usage scenarios.",
        "operationId": "Apps_GetApplicationUsageScenarios",
        "responses": {
          "200": {
            "description": "A list object containing the available application usage scenarios.",
            "schema": {
              "$ref": "#/definitions/ApplicationUsageScenarios"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Usage Scenarios request": {
            "$ref": "./examples/apps/SuccessfulGetApplicationUsageScenariosListRequest.json"
          }
        }
      }
    },
    "/apps/cultures": {
      "get": {
        "description": "Gets the supported application cultures.",
        "operationId": "Apps_GetApplicationCultures",
        "responses": {
          "200": {
            "description": "A list object containing the supported application cultures.",
            "schema": {
              "$ref": "#/definitions/AvailableCultures"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Cultures request": {
            "$ref": "./examples/apps/SuccessfulGetApplicationCulturesRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/querylogs": {
      "get": {
        "description": "Gets the query logs of the past month for the application.",
        "operationId": "Apps_DownloadApplicationQueryLogs",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A CSV file containing the query logs for the past month.",
            "schema": {
              "type": "file",
              "description": "The query logs of an application for the past month in CSV format."
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/octet-stream"
        ]
      }
    },
    "/apps/{appId}": {
      "get": {
        "description": "Gets the application info.",
        "operationId": "Apps_GetApplicationInfo",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the application info.",
            "schema": {
              "$ref": "#/definitions/ApplicationInfoResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Info request": {
            "$ref": "./examples/apps/SuccessfulGetApplicationInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the name or description of the application.",
        "operationId": "Apps_RenameApplication",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "applicationUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationUpdateObject"
            },
            "description": "A JSON object containing Name and Description of the application."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "No Content. Successfully updated application name and description."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Rename Application request": {
            "$ref": "./examples/apps/SuccessfulRenameApplicationRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes an application.",
        "operationId": "Apps_DeleteApplication",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/clone": {
      "post": {
        "description": "Creates a new version equivalent to the current snapshot of the selected application version.",
        "operationId": "Versions_CloneVersion",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "taskUpdateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TaskUpdateObject"
            },
            "description": "An object containing the new version ID."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The version ID of the created task.",
            "examples": {
              "application/json": "\"0.2\""
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/apps/{appId}/publish": {
      "post": {
        "description": "Publishes a specific version of the application.",
        "operationId": "Apps_PublishApplication",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "applicationPublishObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ApplicationPublishObject"
            },
            "description": "The application publish object.The region is the target region that the application is published to. Possible values are \"westus\", \"eastus2\", \"westcentralus\" or \"southeastasia\" for applications created in west US, and \"westeurope\" for applications created in West Europe."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "An object containing the application endpoint URL and its assigned endpoint key.",
            "schema": {
              "$ref": "#/definitions/ApplicationPublishResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Publish Application request": {
            "$ref": "./examples/apps/SuccessfulPublishApplicationRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions": {
      "get": {
        "description": "Gets the application versions info.",
        "operationId": "Versions_GetApplicationVersions",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the tasks info.",
            "examples": {
              "application/json": "[  {    \"version\": \"0.1\",    \"createdDateTime\": \"2017-01-31T16:38:06Z\",    \"lastModifiedDateTime\": \"2017-01-31T18:04:35Z\",    \"lastTrainedDateTime\": \"2017-01-31T17:05:25Z\",    \"lastPublishedDateTime\": \"2017-01-31T17:05:37Z\",    \"endpointUrl\": \"DummyUrl\",    \"assignedEndpointKey\": {      \"SubscriptionKey\": \"\",      \"SubscriptionName\": \"\"    },    \"externalApiKeys\": {},    \"intentsCount\": 3,    \"entitiesCount\": 2,    \"endpointHitsCount\": 0  },  {    \"version\": \"0.2\",    \"createdDateTime\": \"2017-01-31T19:10:29Z\",    \"lastModifiedDateTime\": \"2017-01-31T19:12:47Z\",    \"lastTrainedDateTime\": \"2017-01-31T19:13:00Z\",    \"lastPublishedDateTime\": \"2017-01-31T19:13:20Z\",    \"endpointUrl\": \"DummyUrl\",    \"assignedEndpointKey\": {      \"SubscriptionKey\": \"\",      \"SubscriptionName\": \"\"    },    \"externalApiKeys\": {},    \"intentsCount\": 3,    \"entitiesCount\": 2,    \"endpointHitsCount\": 0  }]"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/apps/{appId}/versions/{versionId}/": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        }
      ],
      "get": {
        "description": "Gets the task info.",
        "operationId": "Versions_GetApplicationVersion",
        "responses": {
          "200": {
            "description": "A JSON object containing the task info.",
            "examples": {
              "application/json": {
                "version": "0.1",
                "createdDateTime": "2017-01-31T16:38:06Z",
                "lastModifiedDateTime": "2017-01-31T18:04:35Z",
                "lastTrainedDateTime": "2017-01-31T17:05:25Z",
                "lastPublishedDateTime": "2017-01-31T17:05:37Z",
                "endpointUrl": "DummyUrl",
                "assignedEndpointKey": {
                  "SubscriptionKey": "",
                  "SubscriptionName": ""
                },
                "externalApiKeys": {},
                "intentsCount": 3,
                "entitiesCount": 2,
                "endpointHitsCount": 0
              }
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "description": "Updates the name or description of the application version.",
        "operationId": "Versions_RenameApplicationVersion",
        "parameters": [
          {
            "name": "taskUpdateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TaskUpdateObject"
            },
            "description": "A JSON object containing Name and Description of the application."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes an application version.",
        "operationId": "Versions_DeleteApplicationVersion",
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/export": {
      "get": {
        "description": "Exports a LUIS application to JSON format.",
        "operationId": "Versions_ExportApplicationVersion",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "The JSON string of the exported application.",
            "examples": {
              "application/json": {
                "luis_schema_version": "1.3.0",
                "name": "DummyImportedApp",
                "desc": "This is my dummy imported application",
                "culture": "en-us",
                "intents": [
                  {
                    "name": "BookFlight"
                  },
                  {
                    "name": "GetWeather"
                  },
                  {
                    "name": "None"
                  }
                ],
                "entities": [
                  {
                    "name": "Location",
                    "children": [
                      "To",
                      "From"
                    ]
                  }
                ],
                "composites": [],
                "closedLists": [],
                "bing_entities": [
                  "datetime"
                ],
                "actions": [],
                "model_features": [
                  {
                    "name": "Cities",
                    "mode": true,
                    "words": "Seattle,New York,Paris,Moscow,Beijin",
                    "activated": true
                  }
                ],
                "regex_features": [],
                "utterances": [
                  {
                    "text": "what's the weather like in paris?",
                    "intent": "GetWeather",
                    "entities": [
                      {
                        "entity": "Location",
                        "startPos": 7,
                        "endPos": 7
                      }
                    ]
                  },
                  {
                    "text": "what's the weather like in seattle?",
                    "intent": "GetWeather",
                    "entities": [
                      {
                        "entity": "Location",
                        "startPos": 7,
                        "endPos": 7
                      }
                    ]
                  },
                  {
                    "text": "book me a flight from cairo to redmond next thursday",
                    "intent": "BookFlight",
                    "entities": [
                      {
                        "entity": "Location::To",
                        "startPos": 7,
                        "endPos": 7
                      },
                      {
                        "entity": "Location::From",
                        "startPos": 5,
                        "endPos": 5
                      }
                    ]
                  }
                ]
              }
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/apps/{appId}/versions/{versionId}/assignedkey": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        }
      ],
      "get": {
        "description": "Gets the given application version's subscription key.",
        "operationId": "Versions_GetApplicationVersionSubscriptionKey",
        "responses": {
          "200": {
            "description": "The subscription key for this application's endpoint.",
            "examples": {
              "application/json": {
                "subscriptionName": "DummyName",
                "subscriptionKey": "DummyKey"
              }
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "description": "Assigns a subscription key to the given application version.",
        "operationId": "Versions_AssignSubscriptionKeyToVersion",
        "parameters": [
          {
            "name": "keyValue",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/KeyValue"
            },
            "description": "The value of the endpoint key to assign to the application."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/externalKeys": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        }
      ],
      "put": {
        "description": "Assigns an external API key to the given application according to the specified key type.",
        "operationId": "Versions_UpdateApplicationVersionExternalKey",
        "parameters": [
          {
            "name": "externalKeyUpdateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ExternalKeyUpdateObject"
            },
            "description": "The external api key to be assigned."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "description": "Gets the given application versions's external keys.",
        "operationId": "Versions_GetApplicationVersionExternalApiKeys",
        "responses": {
          "200": {
            "description": "An array containing the external keys.",
            "examples": {
              "application/json": {
                "BingSpellCheck": "40fd1383c949492cb16d7b082dcaac82"
              }
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/apps/{appId}/versions/{versionId}/externalKeys/{keyType}": {
      "delete": {
        "description": "Deletes an external API key currently associated to the given application according for the specified key type.",
        "operationId": "Versions_DeleteApplicationVersionExternalKey",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "keyType",
            "in": "path",
            "description": "The external key type.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/train": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        }
      ],
      "post": {
        "description": "Sends a training request for a version of a specified LUIS app. This POST request initiates a request asynchronously. To determine whether the training request is successful, submit a GET request to get training status. Note: The application version is not fully trained unless all the models (intents and entities) are trained successfully or are up to date. To verify training success, get the training status at least once after training is complete.",
        "operationId": "Train_TrainApplicationVersion",
        "responses": {
          "202": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EnqueueTrainingResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json",
          "JSON"
        ],
        "x-ms-examples": {
          "Successful Train Application Version request": {
            "$ref": "./examples/train/SuccessfulTrainApplicationVersionRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets the training status of all models (intents and entities) for the specified LUIS app. You must call the train API to train the LUIS app before you call this API to get training status. \"appID\" specifies the LUIS app ID. \"versionId\" specifies the version number of the LUIS app. For example, \"0.1\".",
        "operationId": "Train_GetApplicationVersionTrainingStatus",
        "responses": {
          "200": {
            "description": "A successful response provides an array of training status details for a LUIS app that you submitted for training. Each element in the response array provides training status for a model (intent or entity) in the LUIS app.  <br/><br/><b>Note:</b> Training status is not provided for prebuilt entities because they are pretrained. <br/></br>The <b>modelId</b> property identifies which intent or entity the training status corresponds to. To get the name and type of each model, use the models API which has a request URL in this format: <br/></br>https://westus.api.cognitive.microsoft.com/luis/api/v2.0/apps/{appId}/versions/{versionId}/models<br/></br> The details property for each model can contain the following fields: <br/><br/><b>statusId</b>: An integer from 0 to 3 that corresponds to the value of the <b>status</b> field. <br/><br/><b>status</b>: A string with one of the following values: “Success”, “UpToDate”, “InProgress”, “Fail”. If the status is “Fail”, the <b>failureReason</b> property provides the reason for failure. <br/><br/><b>exampleCount</b>: The number of examples used for training. In the case of the None intent or prebuilt domain intents and entities, this number includes example provided internally by the system as well as examples you added to your LUIS app. <br/></br><b>failureReason</b>:  A string that indicates the reason training failed.  The value \"FewLabels\" means that no labeled examples were provided for training. <br/></br><b>trainingDateTime</b>: A string indicating the time the model was last trained. The value uses the ISO 8601 format for representing times in UTC (Coordinated Universal Time) with a UTC designator (“Z”), for example: \"2017-08-10T01:08:34Z\".",
            "schema": {
              "$ref": "#/definitions/ModelTrainingInfoList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json",
          "JSON"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Training Status request": {
            "$ref": "./examples/train/SuccessfulGetApplicationVersionTrainingStatusRequest.json"
          }
        }
      }
    },
    "/subscriptions": {
      "post": {
        "description": "Adds a subscription key to the user.",
        "operationId": "User_AddSubscriptionKey",
        "parameters": [
          {
            "name": "userSubscriptionCreateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserSubscriptionCreateObject"
            },
            "description": "Subscription key object."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Returns the added subscription key information",
            "examples": {
              "application/json": {
                "subscriptionKey": "DummyKey",
                "subscriptionName": "DummyName",
                "subscriptionRegion": "westus"
              }
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "get": {
        "description": "Gets the user's endpoint subscription keys.",
        "operationId": "User_GetUserSubscriptionKeys",
        "responses": {
          "200": {
            "description": "A list containing subscription keys info.",
            "examples": {
              "application/json": "[  {    \"subscriptionKey\": \"dummykey\",    \"subscriptionName\": \"DummyName\",    \"subscriptionRegion\":\"westus\"  }]"
            },
            "schema": {
              "$ref": "#/definitions/SubscriptionKeyList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "description": "Renames a subscription key owned by the user.",
        "operationId": "User_RenameSubscriptionKey",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "example": "{\t\"subscriptionName\": \"DummyName\",\t\"subscriptionKey\": \"DummyKey\"}"
            },
            "description": "Subscription key object."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionKey}": {
      "delete": {
        "description": "Deletes a user subscription key.",
        "operationId": "User_DeleteSubscriptionKey",
        "parameters": [
          {
            "name": "subscriptionKey",
            "in": "path",
            "description": "The subscription key.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/externalKeys": {
      "post": {
        "description": "Adds an external API key to the user.",
        "operationId": "User_AddExternalApiKey",
        "parameters": [
          {
            "name": "externalKeyCreateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ExternalKeyCreateObject"
            },
            "description": "External API key object."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "description": "Gets a list of the user's external api keys.",
        "operationId": "User_GetUserExternalApiKeys",
        "responses": {
          "200": {
            "description": "A list containing user's external keys info.",
            "examples": {
              "application/json": "[  {    \"type\": \"bingspellcheck\",    \"values\": [      \"ee29eff4fe914fe282ad75d16328d717\"    ]  }]"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/programmatickey": {
      "put": {
        "description": "Resets the user programmatic key.",
        "operationId": "User_ResetProgrammaticKey",
        "responses": {
          "200": {
            "description": "The new programmatic key.",
            "examples": {
              "application/json": "\"NewDummyProgrammaticKey\""
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/externalKeys/{externalKeyValue}": {
      "delete": {
        "description": "Deletes a user external API key.",
        "operationId": "User_DeleteExternalApiKey",
        "parameters": [
          {
            "name": "externalKeyValue",
            "in": "path",
            "description": "The external API key.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/import": {
      "post": {
        "description": "Imports a new version into a LUIS application, the version's JSON should be included in in the request body.",
        "operationId": "Versions_ImportVersionToApplication",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "versionId",
            "in": "query",
            "description": "The imported versionId.",
            "type": "string"
          },
          {
            "name": "jSONApp",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/JSONApp"
            },
            "description": "A JSON representing the LUIS application structure."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The created application version.",
            "examples": {
              "application/json": "\"0.2\""
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/apps/{appId}/settings": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        }
      ],
      "get": {
        "description": "Get the application settings",
        "operationId": "Apps_GetApplicationSettings",
        "responses": {
          "200": {
            "description": "A JSON object containing the application settings.",
            "schema": {
              "$ref": "#/definitions/ApplicationSettings"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Settings request": {
            "$ref": "./examples/apps/SuccessfulGetApplicationSettingsRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the application settings",
        "operationId": "Apps_UpdateApplicationSettings",
        "parameters": [
          {
            "name": "applicationSettingUpdateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ApplicationSettingUpdateObject"
            },
            "description": "An app setting object contains the new app settings"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/suggest": {
      "delete": {
        "description": "Deleted an unlabelled utterance.",
        "operationId": "Versions_DeleteUnlabelledUtterance",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "example": "\"Dummy text\""
            },
            "description": "The utterance text to delete"
          }
        ],
        "consumes": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apps/{appId}/permissions": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        }
      ],
      "get": {
        "description": "Gets the list of user emails that have permissions to access your application.",
        "operationId": "Permissions_GetApplicationUserAccessList",
        "responses": {
          "200": {
            "description": "The list includes a single owner. All collaborators are listed in the emails array.",
            "schema": {
              "$ref": "#/definitions/UserAccessList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "successful Get Application User Access List": {
            "$ref": "./examples/permissions/SuccessfulGetApplicationUserAccessListRequest.json"
          }
        }
      },
      "post": {
        "description": "Adds a user to the allowed list of users to access this LUIS application. Users are added using their email address.",
        "operationId": "Permissions_AddUserToAccessList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "userToAdd",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCollaborator"
            },
            "description": "A JSON object containing the user's email address."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "No Content. Successfully operation."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "successful Add User To Access List": {
            "$ref": "./examples/permissions/SuccessfulAddUserToAccessListRequest.json"
          }
        }
      },
      "delete": {
        "description": "Removed a user to the allowed list of users to access this LUIS application. Users are removed using their email address.",
        "operationId": "Permissions_RemoveUserFromAccessList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "userToDelete",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCollaborator"
            },
            "description": "A JSON object containing the user's email address."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "No Content. Successfully operation."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "successful Remove User From Access List": {
            "$ref": "./examples/permissions/SuccessfulRemoveUserFromAccessListRequest.json"
          }
        }
      },
      "put": {
        "description": "Replaces the current users access list with the one sent in the body. If an empty list is sent, all access to other users will be removed.",
        "operationId": "Permissions_UpdateAccessList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "collaborators",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CollaboratorsArray"
            },
            "description": "A JSON object containing a list of user's email addresses."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "No Content. Successfully operation."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "successful Replaces Users From Access List": {
            "$ref": "./examples/permissions/SuccessfulReplacesUsersFromAccessListRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/endpoints": {
      "get": {
        "description": "Returns the available endpoint deployment regions and urls",
        "operationId": "Apps_GetEndpoints",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of endpoints regions and their corresponding endpoint URL",
            "schema": {
              "$ref": "#/definitions/AvailableEndpoints"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Endpoints request": {
            "$ref": "./examples/apps/SuccessfulGetEndpointsRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists": {
      "post": {
        "description": "Adds a list to an existing closed list",
        "operationId": "Model_AddSubList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "clEntityId",
            "in": "path",
            "description": "Format - guid. The closed list entity extractor ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "wordListCreateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/WordListCreateObject"
            },
            "description": "A json object containing words list."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The id of the newly created list",
            "examples": {
              "application/json": "90440"
            },
            "schema": {
              "$ref": "#/definitions/ApplicationsInfoList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltdomains": {
      "post": {
        "description": "Adds a customizable prebuilt domain along with all of its models to this application.",
        "operationId": "Model_AddCustomPrebuiltDomainToApplication",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "prebuiltDomainCreateBaseObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PrebuiltDomainCreateBaseObject"
            },
            "description": "A prebuilt domain create object containing the name of the domain"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "An array of the created custom prebuilt domain model Ids.",
            "examples": {
              "application/json": "[  \"9500536f-ffec-4fab-93ad-6268abb0f73c\",  \"72a15bcc-538a-4e59-be8c-9fdd43b5338f\",  \"3397fc83-5b1d-4f5f-b4cd-0f2169f076c6\",  \"d116d287-3e53-4bd8-8b7b-4728c58c34d1\",  \"facd34fa-86a3-4805-8bf3-b99e40043b10\",  \"ad2cac73-2abf-41cb-99e2-f79d0dd6ca46\",  \"b8e31be4-300f-455e-894b-6f079abca0a2\",  \"70de3f00-3943-4a93-a88c-09392016b776\"]"
            },
            "schema": {
              "$ref": "#/definitions/GuidList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltintents": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        }
      ],
      "post": {
        "description": "Adds a custom prebuilt intent model to the application",
        "operationId": "Model_AddCustomPrebuiltIntentModel",
        "parameters": [
          {
            "name": "prebuiltDomainModelCreateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PrebuiltDomainModelCreateObject"
            },
            "description": "A model object containing the name of the custom prebuilt intent and the name of the domain to which this model belongs."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "examples": {
              "application/json": "\"c0d59374-cf44-4302-98d1-e853886a4674\""
            },
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "get": {
        "description": "Gets custom prebuilt intents information of this application",
        "operationId": "Model_GetCustomPrebuiltDomainIntentsInfo",
        "responses": {
          "200": {
            "description": "Returns a list of all custom prebuilt intents and their representations.",
            "examples": {
              "application/json": "[  {    \"id\": \"9500536f-ffec-4fab-93ad-6268abb0f73c\",    \"name\": \"$Camera.CapturePhoto\",    \"typeId\": 0,    \"readableType\": \"Intent Classifier\",    \"customPrebuiltDomainName\": \"Camera\",    \"customPrebuiltModelName\": \"CapturePhoto\"  },  {    \"id\": \"facd34fa-86a3-4805-8bf3-b99e40043b10\",    \"name\": \"$Camera.CaptureScreenshot\",    \"typeId\": 0,    \"readableType\": \"Intent Classifier\",    \"customPrebuiltDomainName\": \"Camera\",    \"customPrebuiltModelName\": \"CaptureScreenshot\"  },  {    \"id\": \"d116d287-3e53-4bd8-8b7b-4728c58c34d1\",    \"name\": \"$Camera.CaptureSelfie\",    \"typeId\": 0,    \"readableType\": \"Intent Classifier\",    \"customPrebuiltDomainName\": \"Camera\",    \"customPrebuiltModelName\": \"CaptureSelfie\"  },  {    \"id\": \"ad2cac73-2abf-41cb-99e2-f79d0dd6ca46\",    \"name\": \"$Camera.CaptureVideo\",    \"typeId\": 0,    \"readableType\": \"Intent Classifier\",    \"customPrebuiltDomainName\": \"Camera\",    \"customPrebuiltModelName\": \"CaptureVideo\"  },  {    \"id\": \"70de3f00-3943-4a93-a88c-09392016b776\",    \"name\": \"$Camera.StartBroadcasting\",    \"typeId\": 0,    \"readableType\": \"Intent Classifier\",    \"customPrebuiltDomainName\": \"Camera\",    \"customPrebuiltModelName\": \"StartBroadcasting\"  },  {    \"id\": \"3397fc83-5b1d-4f5f-b4cd-0f2169f076c6\",    \"name\": \"$Camera.StopBroadcasting\",    \"typeId\": 0,    \"readableType\": \"Intent Classifier\",    \"customPrebuiltDomainName\": \"Camera\",    \"customPrebuiltModelName\": \"StopBroadcasting\"  },  {    \"id\": \"72a15bcc-538a-4e59-be8c-9fdd43b5338f\",    \"name\": \"$Camera.StopVideoRecording\",    \"typeId\": 0,    \"readableType\": \"Intent Classifier\",    \"customPrebuiltDomainName\": \"Camera\",    \"customPrebuiltModelName\": \"StopVideoRecording\"  }]"
            },
            "schema": {
              "$ref": "#/definitions/ModelsResponseObject"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltentities": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        }
      ],
      "post": {
        "description": "Adds a custom prebuilt entity model to the application",
        "operationId": "Model_AddCustomPrebuiltEntityModel",
        "parameters": [
          {
            "name": "prebuiltDomainModelCreateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PrebuiltDomainModelCreateObject"
            },
            "description": "A model object containing the name of the custom prebuilt entity and the name of the domain to which this model belongs."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "examples": {
              "application/json": "\"1c2e70c1-3cbf-4e89-9703-9583b81102b9\""
            },
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "get": {
        "description": "Gets all custom prebuilt entities information of this application",
        "operationId": "Model_GetCustomPrebuiltDomainEntitiesInfo",
        "responses": {
          "200": {
            "description": "Returns a list of all custom prebuilt entities and their representations.",
            "examples": {
              "application/json": "[  {    \"id\": \"b8e31be4-300f-455e-894b-6f079abca0a2\",    \"name\": \"$Camera.AppName\",    \"typeId\": 1,    \"readableType\": \"Entity Extractor\",    \"customPrebuiltDomainName\": \"Camera\",    \"customPrebuiltModelName\": \"AppName\"  }]"
            },
            "schema": {
              "$ref": "#/definitions/ModelsResponseObject"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltmodels": {
      "get": {
        "description": "Gets all custom prebuilt models information of this application",
        "operationId": "Model_GetCustomPrebuiltDomainModelsInfo",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of all custom prebuilt models and their representations.",
            "examples": {
              "application/json": "[  {    \"id\": \"b8e31be4-300f-455e-894b-6f079abca0a2\",    \"name\": \"$Camera.AppName\",    \"typeId\": 1,    \"readableType\": \"Entity Extractor\",    \"customPrebuiltDomainName\": \"Camera\",    \"customPrebuiltModelName\": \"AppName\"  },  {    \"id\": \"9500536f-ffec-4fab-93ad-6268abb0f73c\",    \"name\": \"$Camera.CapturePhoto\",    \"typeId\": 0,    \"readableType\": \"Intent Classifier\",    \"customPrebuiltDomainName\": \"Camera\",    \"customPrebuiltModelName\": \"CapturePhoto\"  },  {    \"id\": \"facd34fa-86a3-4805-8bf3-b99e40043b10\",    \"name\": \"$Camera.CaptureScreenshot\",    \"typeId\": 0,    \"readableType\": \"Intent Classifier\",    \"customPrebuiltDomainName\": \"Camera\",    \"customPrebuiltModelName\": \"CaptureScreenshot\"  },  {    \"id\": \"d116d287-3e53-4bd8-8b7b-4728c58c34d1\",    \"name\": \"$Camera.CaptureSelfie\",    \"typeId\": 0,    \"readableType\": \"Intent Classifier\",    \"customPrebuiltDomainName\": \"Camera\",    \"customPrebuiltModelName\": \"CaptureSelfie\"  },  {    \"id\": \"ad2cac73-2abf-41cb-99e2-f79d0dd6ca46\",    \"name\": \"$Camera.CaptureVideo\",    \"typeId\": 0,    \"readableType\": \"Intent Classifier\",    \"customPrebuiltDomainName\": \"Camera\",    \"customPrebuiltModelName\": \"CaptureVideo\"  },  {    \"id\": \"70de3f00-3943-4a93-a88c-09392016b776\",    \"name\": \"$Camera.StartBroadcasting\",    \"typeId\": 0,    \"readableType\": \"Intent Classifier\",    \"customPrebuiltDomainName\": \"Camera\",    \"customPrebuiltModelName\": \"StartBroadcasting\"  },  {    \"id\": \"3397fc83-5b1d-4f5f-b4cd-0f2169f076c6\",    \"name\": \"$Camera.StopBroadcasting\",    \"typeId\": 0,    \"readableType\": \"Intent Classifier\",    \"customPrebuiltDomainName\": \"Camera\",    \"customPrebuiltModelName\": \"StopBroadcasting\"  },  {    \"id\": \"72a15bcc-538a-4e59-be8c-9fdd43b5338f\",    \"name\": \"$Camera.StopVideoRecording\",    \"typeId\": 0,    \"readableType\": \"Intent Classifier\",    \"customPrebuiltDomainName\": \"Camera\",    \"customPrebuiltModelName\": \"StopVideoRecording\"  }]"
            },
            "schema": {
              "$ref": "#/definitions/ModelsResponseObject"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltdomains/{domainName}": {
      "delete": {
        "description": "Deletes a prebuilt domain's models from the application.",
        "operationId": "Model_DeleteCustomPrebuiltDomainModels",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Domain name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apps/customprebuiltdomains": {
      "get": {
        "description": "Gets all the available custom prebuilt domains for all cultures",
        "operationId": "Apps_GetAvailableCustomPrebuiltDomains",
        "responses": {
          "200": {
            "description": "Returns a list of all custom prebuilt domains and their intents/entities representation",
            "schema": {
              "$ref": "#/definitions/PrebuiltDomainsList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Available Custom Prebuilt Domains request": {
            "$ref": "./examples/apps/SuccessfulGetAvailableCustomPrebuiltDomainsRequest.json"
          }
        }
      },
      "post": {
        "description": "Adds a prebuilt domain along with its models as a new application.",
        "operationId": "Apps_AddCustomPrebuiltApplication",
        "parameters": [
          {
            "name": "prebuiltDomainCreateObject",
            "in": "body",
            "required": true,
            "description": "A prebuilt domain create object containing the name and culture of the domain",
            "schema": {
              "$ref": "#/definitions/PrebuiltDomainCreateObject"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created application.",
            "examples": {
              "application/json": "\"739f1513-11f0-4aae-8a19-f660804e6da5\""
            },
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Add Custom Prebuilt Application request": {
            "$ref": "./examples/apps/SuccessfulAddCustomPrebuiltApplicationRequest.json"
          }
        }
      }
    },
    "/apps/customprebuiltdomains/{culture}": {
      "get": {
        "description": "Gets all the available custom prebuilt domains for a specific culture",
        "operationId": "Apps_GetAvailableCustomPrebuiltDomainsForCulture",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "description": "Format - string. Culture",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of all domains and their intents/entities representation for a specific culture",
            "schema": {
              "$ref": "#/definitions/PrebuiltDomainsList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get AvailableCustomPrebuiltDomainsForCulture request": {
            "$ref": "./examples/apps/SuccessfulGetAvailableCustomPrebuiltDomainsForCultureRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/children/{hChildId}": {
      "parameters": [
        {
          "$ref": "#/parameters/AppIdInPath"
        },
        {
          "$ref": "#/parameters/VersionIdInPath"
        },
        {
          "$ref": "#/parameters/HEntityIdInPath"
        },
        {
          "name": "hChildId",
          "in": "path",
          "description": "Format - guid. The hierarchical entity extractor child ID.",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "description": "Gets information about the hierarchical entity child model.",
        "operationId": "Model_GetHierarchicalEntityChildInfo",
        "responses": {
          "200": {
            "description": "The hierarchical entity child model info.",
            "schema": {
              "$ref": "#/definitions/HierarchicalChildEntity"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Hierarchical Entity Child Info request": {
            "$ref": "./examples/model/SuccessfulGetHierarchicalChildEntityInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Renames a single child in an existing hierarchical entity model.",
        "operationId": "Model_UpdateHierarchicalEntityChildModel",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "example": "{\t\"name\": \"Source\"}"
            },
            "description": "Model object containing new name of the hierarchical entity child."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a hierarchical entity extractor child from the application.",
        "operationId": "Model_DeleteHierarchicalEntityChildModel",
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/children": {
      "post": {
        "description": "Creates a single child in an existing hierarchical entity model.",
        "operationId": "Model_CreateHierarchicalEntityChildModel",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "example": "{\t\"name\" : \"To\"}"
            },
            "description": "A model object containing the name of the new hierarchical child model."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "examples": {
              "application/json": "\"891c235f-4f42-4320-bc36-b6256b6c3f2b\""
            },
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/children": {
      "post": {
        "description": "Creates a single child in an existing composite entity model.",
        "operationId": "Model_CreateCompositeEntityChildModel",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/CEntityIdInPath"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "example": "{\t\"name\" : \"datetime\"}"
            },
            "description": "A model object containing the name of the new composite child model."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "examples": {
              "application/json": "\"891c235f-4f42-4320-bc36-b6256b6c3f2b\""
            },
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/children/{cChildId}": {
      "delete": {
        "description": "Deletes a composite entity extractor child from the application.",
        "operationId": "Model_DeleteCompositeEntityChildModel",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/CEntityIdInPath"
          },
          {
            "name": "cChildId",
            "in": "path",
            "description": "Format - guid. The hierarchical entity extractor child ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApplicationCreateBaseObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Culture": {
          "type": "string"
        },
        "UsageScenario": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Domain": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "EntityLabelObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "EntityName": {
          "type": "string"
        },
        "StartCharIndex": {
          "type": "integer"
        },
        "EndCharIndex": {
          "type": "integer"
        }
      }
    },
    "ApplicationCreateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "culture": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "initialVersionId": {
          "type": "string"
        },
        "usageScenario": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "example": {
        "name": "MyFirstDummyApp",
        "description": "This is my first dummy application",
        "culture": "en-us",
        "usageScenario": "IoT",
        "domain": "Comics",
        "initialVersionId": "1.0"
      }
    },
    "PrebuiltDomainCreateBaseObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "DomainName": {
          "type": "string"
        }
      },
      "example": "{ \t\"domainName\": \"Camera\" }"
    },
    "PrebuiltDomainCreateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "domainName": {
          "type": "string"
        },
        "culture": {
          "type": "string"
        }
      },
      "example": {
        "domainName": "Web",
        "culture": "en-US"
      }
    },
    "PrebuiltDomainModelCreateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "DomainName": {
          "type": "string"
        },
        "ModelName": {
          "type": "string"
        }
      },
      "example": "{\t\"domainName\": \"Camera\",        \"modelName\": \"AppName\"}"
    },
    "HierarchicalModelUpdateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Children": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "Name": {
          "type": "string"
        }
      },
      "example": "{\t\"name\": \"Reservation\",\t\"children\": [ \"Location::To\" ]}"
    },
    "JSONEntity": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "startPos": {
          "type": "integer"
        },
        "endPos": {
          "type": "integer"
        },
        "entity": {
          "type": "string"
        }
      }
    },
    "ApplicationSettingUpdateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Public": {
          "type": "boolean"
        }
      },
      "example": "{\t\"public\": true}"
    },
    "ExampleLabelObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Text": {
          "type": "string"
        },
        "EntityLabels": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/EntityLabelObject"
          },
          "type": "array"
        },
        "IntentName": {
          "type": "string"
        }
      },
      "example": "{\t\"text\": \"Book me a flight from Cairo to Redmond next Thursday\",\t\"intentName\": \"BookFlight\",\t\"entityLabels\":\t[\t\t{\t\t\t\"entityName\": \"Location::From\",\t\t\t\"startCharIndex\": 22,\t\t\t\"endCharIndex\": 26\t\t},\t\t{\t\t\t\"entityName\": \"Location::To\",\t\t\t\"startCharIndex\": 31,\t\t\t\"endCharIndex\": 37\t\t}\t]}"
    },
    "PhraselistCreateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Phrases": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "IsExchangeable": {
          "default": true,
          "type": "boolean"
        }
      },
      "example": "{\t\"name\": \"DaysOfWeek\",\t\"phrases\": \"monday,tuesday,wednesday,thursday,friday,saturday,sunday\",        \"isExchangeable\": true}"
    },
    "JSONSubClosedList": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "CanonicalForm": {
          "type": "string"
        },
        "List": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "JSONSubClosedListResponse": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JSONSubClosedList"
        }
      ],
      "properties": {
        "id": {
          "type": "number",
          "example": "123456"
        }
      }
    },
    "JSONAction": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "actionName": {
          "type": "string"
        },
        "actionParameters": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/JSONActionParam"
          },
          "type": "array"
        },
        "intentName": {
          "type": "string"
        },
        "channel": {
          "type": "object",
          "$ref": "#/definitions/Channel"
        }
      }
    },
    "ApplicationUpdateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "example": {
        "name": "MyFirstRenamedDummyAp",
        "description": "This is my first modified dummy description"
      }
    },
    "Channel": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Settings": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/Setting"
          },
          "type": "array"
        },
        "Name": {
          "type": "string"
        },
        "Method": {
          "type": "string"
        }
      }
    },
    "PrebuiltExtractorNames": {
      "items": {
        "type": "string"
      },
      "type": "array",
      "example": "[ \"datetimeV2\" ]"
    },
    "JSONRegexFeature": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "pattern": {
          "type": "string"
        },
        "activated": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "PatternUpdateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Pattern": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "IsActive": {
          "default": true,
          "type": "boolean"
        }
      },
      "example": "{\t\"name\": \"ModifiedEmailPattern\",        \"pattern\": \"\\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\\\\.[A-Z]{2,}\\b\"}"
    },
    "JSONClosedList": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "SubLists": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/JSONSubClosedList"
          },
          "type": "array"
        }
      }
    },
    "JSONActionParam": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "phraseListFeatureName": {
          "type": "string"
        },
        "parameterName": {
          "type": "string"
        },
        "entityName": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "question": {
          "type": "string"
        }
      }
    },
    "ClosedListModelPatchObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "SubLists": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/WordListCreateObject"
          },
          "type": "array"
        }
      },
      "example": "{\t\"sublists\":\t[\t\t{\t\t\t\"canonicalForm\": \"Ohio\",\t\t\t\"list\": [ \"Ohio\", \"OH\" ]\t\t}\t]}"
    },
    "KeyValue": {
      "type": "string",
      "example": "\"DummyKey\""
    },
    "ExternalKeyCreateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Type": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      },
      "example": "{\t\"type\": \"BingSpellCheck\",\t\"value\": \"ee29eff4fe914fe282ad75d16328d717\"}"
    },
    "UserSubscriptionCreateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "SubscriptionName": {
          "type": "string"
        },
        "SubscriptionKey": {
          "type": "string"
        }
      },
      "example": "{\t\"subscriptionName\": \"DummyName\",\t\"subscriptionKey\": \"DummyKey\"}"
    },
    "JSONModelFeature": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "activated": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "words": {
          "type": "string"
        },
        "mode": {
          "type": "boolean"
        }
      }
    },
    "ModelCreateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        }
      },
      "example": "{\t\"name\": \"DayOfWeek\"}"
    },
    "Setting": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "PatternCreateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Pattern": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        }
      },
      "example": "{\t\"name\": \"EmailPattern\",\t\"pattern\": \"\\\\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\\\\.[A-Z]{2,}\\\\b\"}"
    },
    "WordListCreateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "CanonicalForm": {
          "type": "string"
        },
        "List": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "example": "{\t\"canonicalForm\": \"BankName\",\t\"list\": [\t\t\"HSBC\",\t\t\"CitiBank\"\t]}"
    },
    "WordListBaseUpdateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "CanonicalForm": {
          "type": "string"
        },
        "List": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "example": "{\t\"canonicalForm\": \"NewYorkCities\",\t\"list\" : [\"Yonkers\", \"Utica\", \"Olean\", \"Cohoes\", \"Buffalo\"]} "
    },
    "JSONUtterance": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        },
        "intent": {
          "type": "string"
        },
        "entities": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/JSONEntity"
          },
          "type": "array"
        }
      }
    },
    "ModelUpdateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        }
      },
      "example": "{\t\"name\": \"DaysOfWeek\"}"
    },
    "ClosedListModelUpdateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "SubLists": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/WordListCreateObject"
          },
          "type": "array"
        },
        "Name": {
          "type": "string"
        }
      },
      "example": "{  \"name\": \"States\",  \"subLists\": [    {      \"canonicalForm\": \"new york\",      \"list\": [        \"ny\",        \"new york\"      ]    },    {      \"canonicalForm\": \"washington\",      \"list\": [        \"washington\",        \"wa\"      ]    },    {      \"canonicalForm\": \"california\",      \"list\": [        \"california\",        \"ca\",        \"calif.\",        \"cal.\"      ]    },    {    \t\"canonicalForm\": \"Texas\",    \t\"list\": [    \t\t\"Texas\",    \t\t\"TX\"    \t]    }  ]}"
    },
    "ExternalKeyUpdateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Type": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      },
      "example": "{\t\"type\": \"BingSpellCheck\",        \"value\": \"ee29eff4fe914fe282ad75d16328d717\"}"
    },
    "ClosedListModelCreateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "SubLists": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/WordListCreateObject"
          },
          "type": "array"
        },
        "Name": {
          "type": "string"
        }
      },
      "example": "{\t\"name\": \"States\",\t\"sublists\": \t[\t\t{\t\t\t\"canonicalForm\": \"New York\",\t\t\t\"list\": [ \"NY\", \"New York\" ]\t\t},\t\t{\t\t\t\"canonicalForm\": \"Washington\",\t\t\t\"list\": [ \"Washington\", \"WA\" ]\t\t},\t\t{\t\t\t\"canonicalForm\": \"California\",\t\t\t\"list\": [ \"California\", \"CA\", \"Calif.\", \"Cal.\" ]\t\t}\t]}"
    },
    "ExampleLabelObjectArray": {
      "items": {
        "type": "object",
        "$ref": "#/definitions/ExampleLabelObject"
      },
      "type": "array",
      "example": "[\t{\t\t\"text\": \"Book me a flight from Cairo to Redmond next Thursday\",\t\t\"intentName\": \"BookFlight\",\t\t\"entityLabels\":\t\t[\t\t\t{\t\t\t\t\"entityName\": \"Location::From\",\t\t\t\t\"startCharIndex\": 22,\t\t\t\t\"endCharIndex\": 26\t\t\t},\t\t\t{\t\t\t\t\"entityName\": \"Location::To\",\t\t\t\t\"startCharIndex\": 31,\t\t\t\t\"endCharIndex\": 37\t\t\t}\t\t]\t},\t{\t\t\"text\": \"What's the weather like in Seattle?\",\t\t\"intentName\": \"GetWeather\",\t\t\"entityLabels\":\t\t[\t\t\t{\t\t\t\t\"entityName\": \"Location\",\t\t\t\t\"startCharIndex\": 27,\t\t\t\t\"endCharIndex\": 33\t\t\t}\t\t]\t}]"
    },
    "TaskUpdateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Version": {
          "type": "string"
        }
      },
      "example": "{\t\"version\": \"1.0\"}"
    },
    "PhraselistUpdateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Phrases": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "IsActive": {
          "default": true,
          "type": "boolean"
        },
        "IsExchangeable": {
          "default": true,
          "type": "boolean"
        }
      },
      "example": "{\t\"name\": \"BusinessDaysOfWeek\",\t\"phrases\": \"monday,tuesday,wednesday,thursday,friday\"}"
    },
    "HierarchicalModel": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Children": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "HierarchicalModelCreateObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Children": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "Name": {
          "type": "string"
        }
      },
      "example": "{\t\"name\": \"Reservation\",\t\"children\": [ \"Location::To\", \"datetime\" ]}"
    },
    "ApplicationPublishObject": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "versionId": {
          "type": "string"
        },
        "isStaging": {
          "default": false,
          "type": "boolean"
        }
      },
      "example": "{   \"versionId\": \"0.1\",   \"isStaging\": false,   \"region\"\" \"westus\"}"
    },
    "JSONApp": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "versionId": {
          "type": "string"
        },
        "desc": {
          "type": "string"
        },
        "culture": {
          "type": "string"
        },
        "intents": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/HierarchicalModel"
          },
          "type": "array"
        },
        "entities": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/HierarchicalModel"
          },
          "type": "array"
        },
        "bing_entities": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-ms-client-name": "bing_entities"
        },
        "actions": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/JSONAction"
          },
          "type": "array"
        },
        "closedLists": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/JSONClosedList"
          },
          "type": "array"
        },
        "composites": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/HierarchicalModel"
          },
          "type": "array"
        },
        "regex_features": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/JSONRegexFeature"
          },
          "type": "array"
        },
        "model_features": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/JSONModelFeature"
          },
          "type": "array"
        },
        "utterances": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/JSONUtterance"
          },
          "type": "array"
        }
      },
      "example": "{  \"luis_schema_version\": \"1.3.1\",  \"name\": \"DummyImportedApp\",  \"versionId\": \"0.2\",  \"desc\": \"This is my dummy imported application\",  \"culture\": \"en-us\",  \"intents\": [    {      \"name\": \"BookFlight\"    },    {      \"name\": \"GetWeather\"    },    {      \"name\": \"None\"    }  ],  \"entities\": [    {      \"name\": \"Location\",      \"children\": [        \"To\",        \"From\"      ]    }  ],  \"composites\": [],  \"closedLists\": [],  \"bing_entities\": [    \"datetime\"  ],  \"actions\": [],  \"model_features\": [    {      \"name\": \"Cities\",      \"mode\": true,      \"words\": \"Seattle,New York,Paris,Moscow,Beijin\",      \"activated\": true    }  ],  \"regex_features\": [],  \"utterances\": [    {      \"text\": \"book me a flight from redmond to new york next saturday\",      \"intent\": \"BookFlight\",      \"entities\": [        {          \"entity\": \"Location::From\",          \"startPos\": 5,          \"endPos\": 5        },        {          \"entity\": \"Location::To\",          \"startPos\": 7,          \"endPos\": 8        }      ]    },    {      \"text\": \"what's the weather like in paris?\",      \"intent\": \"GetWeather\",      \"entities\": [        {          \"entity\": \"Location\",          \"startPos\": 7,          \"endPos\": 7        }      ]    }  ]}"
    },
    "GuidResponse": {
      "type": "string",
      "example": "\"363187f1-c573-46b3-bc4c-ae01d686e68e\""
    },
    "FeatureIDResponse": {
      "type": "number",
      "example": "398102"
    },
    "LabeledUtterances": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/LabeledUtterance"
      }
    },
    "LabeledUtterance": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "description": "ID of Labeled Utterance."
        },
        "text": {
          "type": "string",
          "description": "what's the weather like in seattle?"
        },
        "tokenizedText": {
          "type": "array",
          "description": "the utterance tokenized",
          "items": {
            "type": "string"
          }
        },
        "intentLabel": {
          "type": "string"
        },
        "entityLabels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityLabel"
          },
          "x-nullable": true
        },
        "intentPredictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IntentPrediction"
          }
        },
        "entityPredictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityPrediction"
          },
          "x-nullable": true
        }
      }
    },
    "EntityLabel": {
      "type": "object",
      "properties": {
        "entityName": {
          "type": "string"
        },
        "startTokenIndex": {
          "type": "number"
        },
        "endTokenIndex": {
          "type": "number"
        }
      },
      "required": [
        "entityName", "startTokenIndex", "endTokenIndex"
      ]
    },
    "IntentPrediction": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "score": {
          "type": "number"
        }
      }
    },
    "EntityPrediction": {
      "type": "object",
      "properties": {
        "entityName": {
          "type": "string"
        },
        "startIndex": {
          "type": "number"
        },
        "endIndex": {
          "type": "number"
        },
        "phrase": {
          "type": "string",
          "description": "The actual token(s) that comprise the entity."
        }
      }
    },
    "PersonalAssistantsResponse": {
      "type": "object",
      "description": "Response containing user's endpoint keys and the endpoint URLs of the prebuilt Cortana applications.",
      "properties": {
        "endpointKeys": {
          "$ref": "#/definitions/EndpointKeys"   
        },
        "endpointUrls": {
          "$ref": "#/definitions/PersonalAssistantUrls"
        }
      }
    },
    "EndpointKeys": {
      "type": "array",
      "description": "An a array of GUIDs, comprised of Azure Endpoint Keys and the Programmatic API key.",
      "items": {
        "type": "string"
      }
    },
    "PersonalAssistantUrls": {
      "type": "object",
      "description": "Endpoint URLs for prebuilt Cortana applications.",
      "properties": {
        "English": {
          "type":"string"
        },
        "Chinese": {
          "type":"string"
        },
        "French": {
          "type":"string"
        },
        "Spanish": {
          "type":"string"
        },
        "Italian": {
          "type":"string"
        }
      }
    },
    "ModelsResponseObject" : {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ModelInfo"
      }
    },
    "ModelInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The GUID of the Entity Model."
        },
        "name": {
          "type": "string",
          "description": "Name of the Entity Model."
        },
        "typeId": {
          "type": "number",
          "description": "The type ID of the Entity Model."
        },
        "readableType": {
          "$ref": "#/definitions/ReadableType"
        }
      },
      "required": [
        "readableType"
      ],
      "discriminator": "readableType"
    },
    "ModelInfoResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The GUID of the Entity Model."
        },
        "name": {
          "type": "string",
          "description": "Name of the Entity Model."
        },
        "typeId": {
          "type": "number",
          "description": "The type ID of the Entity Model."
        },
        "readableType": {
          "$ref": "#/definitions/ReadableType"
        }
      },
      "required": [
        "readableType"
      ],
      "discriminator": "readableType",
      "allOf": [
        { "$ref": "#/definitions/HierarchicalEntityExtractor" },
        { "$ref": "#/definitions/CompositeEntityExtractor"},
        { "$ref": "#/definitions/ClosedListEntityExtractor" },
        { "$ref": "#/definitions/IntentClassifier" },
        { "$ref": "#/definitions/EntityExtractor" }
      ]
    },
    "ReadableType": {
      "type": "string",
      "enum": [
        "Entity Extractor",
        "Hierarchical Entity Extractor",
        "Hierarchical Child Entity Extractor",
        "Composite Entity Extractor",
        "Closed List Entity Extractor",
        "Prebuilt Entity Extractor",
        "Intent Classifier"
      ]
    },
    "HierarchicalEntityExtractor": {
      "type": "object",
      "x-ms-discriminator-value": "Hierarchical Entity Extractor",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        }
      ],
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChildEntity"
          }
        }
      }
    },
    "HierarchicalEntityExtractorsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/HierarchicalEntityExtractor"
      }
    },
    "CompositeEntityExtractor": {
      "type": "object",
      "x-ms-discriminator-value": "Composite Entity Extractor",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        }
      ],
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChildEntity"
          }
        }
      }
    },
    "CompositeEntityExtractorsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CompositeEntityExtractor"
      }
    },
    "ClosedListEntityExtractor": {
      "type": "object",
      "x-ms-discriminator-value": "Closed List Entity Extractor",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        }
      ],
      "properties": {
        "subLists": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JSONSubClosedListResponse"
          }
        }
      }
    },
    "ClosedListEntityExtractorsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ClosedListEntityExtractor"
      }
    },
    "PrebuiltEntityExtractor": {
      "type": "object",
      "x-ms-discriminator-value": "Prebuilt Entity Extractor",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        }
      ]
    },
    "PrebuiltEntityExtractorsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PrebuiltEntityExtractor"
      }
    },
    "ChildEntity": {
      "type": "object",
      "description": "The base child entity class.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The GUID belonging to a child entity."
        },
        "name": {
          "type": "string",
          "description": "The name of a child entity."
        }
      }
    },
    "HierarchicalChildEntity": {
      "type": "object",
      "properties": {
        "typeId": {
          "type": "number"
        },
        "readableType": {
          "$ref": "#/definitions/ReadableType"
        }
      },
      "allOf": [
        { "$ref": "#/definitions/ChildEntity" }
      ]
    },
    "IntentClassifier": {
      "type": "object",
      "x-ms-discriminator-value": "Intent Classifier",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        }
      ],
      "properties": {
        "customPrebuiltDomainName": {
          "type": "string",
          "x-nullable": true
        },
        "customPrebuiltModelName": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "EntityExtractor": {
      "type": "object",
      "x-ms-discriminator-value": "Entity Extractor",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        }
      ],
      "properties": {
        "customPrebuiltDomainName": {
          "type": "string",
          "x-nullable": true
        },
        "customPrebuiltModelName": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "IntentClassifiersList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/IntentClassifier"
      }
    },
    "EntityExtractorsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/EntityExtractor"
      }
    },
    "FeaturesResponseObject": {
      "type": "object",
      "properties": {
        "phraselistFeatures": {
          "$ref": "#/definitions/PhraseListFeatureInfoList"
        },
        "patternFeatures": {
            "$ref": "#/definitions/PatternFeatureInfoList"
        }
      }
    },
    "FeatureInfoObject": {
      "description": "The base class Features-related response objects inherit from.",
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "description": "A six-digit ID used for Features."
        },
        "name": {
          "type": "string",
          "description": "The name of the Feature."
        },
        "isActive": {
          "type": "boolean"
        }
      }
    },
    "PatternFeatureInfo": {
      "type": "object",
      "properties": {
        "pattern": {
          "type": "string"
        }
      },
      "allOf": [
        { "$ref": "#/definitions/FeatureInfoObject" }
      ]
    },
    "PatternFeatureInfoList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PatternFeatureInfo"
      }
    },
    "PhraseListFeatureInfo": {
      "type": "object",
      "properties": {
        "phrases": {
          "type": "string",
          "description": "A list of comma-separated values."
        },
        "isExchangeable": {
          "type": "boolean"
        }
      },
      "allOf": [
        { "$ref": "#/definitions/FeatureInfoObject" }
      ]
    },
    "PhraseListFeatureInfoList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PhraseListFeatureInfo"
      }
    },
    "LabelExampleResponse": {
      "type": "object",
      "properties": {
        "UtteranceText": {
          "type": "string",
          "example": "book me a flight from cairo to redmond next thursday"
        },
        "ExampleId": {
          "type": "number",
          "example": "-6830368"
        }
      }
    },
    "BatchLabelExample": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/LabelExampleResponse" 
        },
        "hasError": {
          "type": "boolean"
        }
      }
    },
    "BatchLabelExampleResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/BatchLabelExample"
      }
    },
    "ApplicationInfoResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The GUID of the application."
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "culture": {
          "type": "string"
        },
        "usageScenario": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "versionsCount": {
          "type": "number"
        },
        "createdDateTime": {
          "type": "string"
        },
        "endpoints": {
          "type": "object"
        },
        "endpointHitsCount": {
          "type": "number"
        },
        "activeVersion": {
          "type": "string"
        }
      }
    },
    "ApplicationsInfoList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ApplicationInfoResponse"
      }
    },
    "ProductionOrStagingEndpointInfo": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EndpointInfo"
        }
      ]
    },
    "EndpointInfo": {
      "type": "object",
      "description": "The base class \"ProductionOrStagingEndpointInfo\" inherits from.",
      "properties": {
        "versionId": {

        },
        "isStaging": {
          "type": "boolean"
        },
        "endpointUrl": {
          "type": "string"
        },
        "region": {
          "type": "string",
          "x-nullable": true
        },
        "assignedEndpointKey": {
          "type": "string"
        },
        "endpointRegion": {
          "type": "string",
          "description": "The endpoint's region."
        },
        "publishedDateTime": {
          "type": "string"
        }
      }
    },
    "ApplicationPublishResponse": {
      "type": "object",
      "properties": {
        "endpointUrl": {
          "type": "string"
        },
        "subscription-key": {
          "type": "string"
        },
        "endpointRegion": {
          "type": "string"
        },
        "isStaging": {
          "type": "boolean"
        }
      }
    },
    "AvailableEndpoints": {
      "type": "object",
      "description": "Collection of endpoint URLs the selected application is deployed to.",
      "properties": {
        "westus": {
          "type": "string",
          "x-nullable": true,
          "example": "https://westus.api.cognitive.microsoft.com/api/v2.0/apps/bb25e72c-2279-46bb-a99b-89fcb921b58a"
        },
        "eastus2": {
          "type": "string",
          "x-nullable": true,
          "example": "https://eastus2.api.cognitive.microsoft.com/api/v2.0/apps/bb25e72c-2279-46bb-a99b-89fcb921b58a"
        },
        "westcentralus": {
          "type": "string",
          "x-nullable": true,
          "example": "https://westcentralus.api.cognitive.microsoft.com/api/v2.0/apps/bb25e72c-2279-46bb-a99b-89fcb921b58a"
        },
        "southeastasia": {
          "type": "string",
          "x-nullable": true,
          "example": "https://southeastasia.api.cognitive.microsoft.com/api/v2.0/apps/bb25e72c-2279-46bb-a99b-89fcb921b58a"
        },
        "westeurope": {
          "type": "string",
          "x-nullable": true,
          "example": "https://westeurope.dev.cognitive.microsoft.com/docs/services/5890b47c39e2bb17b84a55ff/operations/590aff885aca2f09e404ec3f"
        }
      }
    },
    "AvailableCulture": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      }
    },
    "AvailableCultures": {
      "type": "array",
      "description": "A list object containing the available application domains.",
      "items": {
        "$ref": "#/definitions/AvailableCulture"
      }
    },
    "AvailableDomains": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "ApplicationUsageScenarios": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "ApplicationSettings": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "public": {
          "type": "boolean"
        }
      }
    },
    "AvailablePrebuiltEntityModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "examples": {
          "type": "string"
        }
      }
    },
    "AvailablePrebuiltEntityModels": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AvailablePrebuiltEntityModel"
      }
    },
    "EnqueueTrainingResponse": {
      "type": "object",
      "properties": {
        "statusId": {
          "type": "number"
        },
        "status": {
          "$ref": "#/definitions/TrainingStatus"
        }
      }
    },
    "TrainingStatus": {
      "type": "string",
      "enum": [
        "Queued",
        "InProgress",
        "UpToDate",
        "Fail",
        "Success"
      ]
    },
    "ModelTrainingInfo": {
      "type": "object",
      "properties": {
        "modelId": {
          "type": "string",
          "description": "The GUID of the model."
        },
        "details": {
          "$ref": "#/definitions/ModelTrainingDetails"
        }
      }
    },
    "ModelTrainingDetails": {
      "type": "object",
      "properties": {
        "statusId": {
          "type": "number"
        },
        "status": {
          "$ref": "#/definitions/TrainingStatus"
        },
        "exampleCount": {
          "type": "number"
        },
        "trainingDateTime": {
          "type": "string"
        },
        "failureReason": {
          "type": "string"
        }
      }
    },
    "ModelTrainingInfoList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ModelTrainingInfo"
      }
    },
    "UserAccessList": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string",
          "description": "The email address of owner of the application."
        },
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UserCollaborator": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "The email address of the user."
        }
      }
    },
    "CollaboratorsArray": {
      "type": "object",
      "properties": {
        "emails": {
          "type": "array",
          "description": "The email address of the users.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "integer",
          "example": "401",
          "x-nullable": false
        },
        "message": {
          "type": "string",
          "x-nullable": false,
          "example": "Access denied due to invalid subscription key. Make sure to provide a valid key for an active subscription."
        }
      }
    },
    "PrebuiltDomainsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PrebuiltDomain"
      }
    },
    "PrebuiltDomain": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "culture": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "examples": {
          "type": "string"
        },
        "intents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrebuiltDomainItem"
          }
        },
        "entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrebuiltDomainItem"
          }
        }
      }
    },
    "PrebuiltDomainItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "examples": {
          "type": "string"
        }
      }
    },
    "GuidList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/GuidResponse"
      }
    },
    "SubscriptionKeyList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SubscriptionKeyInfo"
      }
    },
    "SubscriptionKeyInfo": {
      "type": "object",
      "properties": {
        "subscriptionKey": {
          "type": "string"
        },
        "subscriptionName": {
          "type": "string"
        },
        "subscriptionRegion": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "AppIdInPath": {
      "name": "appId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Format - guid. The application ID.",
      "x-ms-parameter-location": "method"
    },
    "VersionIdInPath": {
      "name": "versionId",
      "in": "path",
      "description": "The version ID of the task.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "CEntityIdInPath": {
      "name": "cEntityId",
      "in": "path",
      "description": "Format - guid. The hierarchical entity extractor ID.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "HEntityIdInPath": {
      "name": "hEntityId",
      "in": "path",
      "description": "Format - guid. The hierarchical entity extractor ID.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "IntentIdInPath": {
      "name": "intentId",
      "in": "path",
      "description": "Format - guid. The intent classifier ID.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SkipInPath": {
      "name": "skip",
      "in": "query",
      "description": "The number of entries to skip. Default value is 0.",
      "type": "integer",
      "default": 0,
      "x-ms-parameter-location": "method"
    },
    "TakeInPath": {
      "name": "take",
      "in": "query",
      "description": "The number of entries to return. Maximum page size is 500. Default is 100.",
      "type": "integer",
      "default": 100,
      "x-ms-parameter-location": "method"
    }
  }
}