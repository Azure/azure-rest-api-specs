{
  "swagger": "2.0",
  "info": {
    "title": "Language Understanding Intelligent Service (LUIS) Endpoint API for running predictions and extracting user intentions and entities from utterances.",
    "version": "v2.0"
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{AzureRegion}.api.cognitive.microsoft.com",
    "parameters": [
      {
        "$ref": "../../../Common/ExtendedRegions.json#/parameters/AzureRegion"
      }
    ]
  },
  "basePath": "/luis/v2.0/apps",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "apiKeyHeader": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    }
  },
  "security": [
    {
      "apiKeyHeader": []
    }
  ],
  "paths": {
    "/{appId}": {
      "get": {
        "description": "Gets the published endpoint predictions for the given query.",
        "operationId": "Prediction_GetPredictionsFromEndpointViaGet",
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Format - guid. The application ID."
          },
          {
            "name": "q",
            "in": "query",
            "description": "The query to predict.",
            "required": true,
            "type": "string"
          },
          {
            "name": "timezoneOffset",
            "in": "query",
            "description": "The timezone offset for the location of the request.",
            "type": "number"
          },
          {
            "name": "verbose",
            "in": "query",
            "description": "If true will return all intents instead of just the topscoring intent.",
            "type": "boolean"
          },
          {
            "name": "spellCheck",
            "in": "query",
            "description": "Enable spell checking.",
            "type": "boolean"
          },
          {
            "name": "staging",
            "in": "query",
            "description": "Use staging endpoint.",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the predictions.",
            "schema": {
              "$ref": "#/definitions/LuisResult"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/APIError"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Predictions From Endpoint Via Get request": {
            "$ref": "./examples/prediction/SuccessfulGetPredictionsFromEndpointViaGetRequest.json"
          }
        }
      },
      "post": {
        "description": "Gets the published endpoint prediction for the given long query.",
        "operationId": "Prediction_GetPredictionsFromEndpointViaPost",
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Format - guid. The application ID."
          },
          {
            "name": "q",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Q"
            },
            "description": "The query to predict."
          },
          {
            "name": "timezoneOffset",
            "in": "query",
            "description": "The timezone offset for the location of the request.",
            "type": "number"
          },
          {
            "name": "verbose",
            "in": "query",
            "description": "If true will return all intents instead of just the topscoring intent.",
            "type": "boolean"
          },
          {
            "name": "spellCheck",
            "in": "query",
            "description": "Enable spell checking.",
            "type": "boolean"
          },
          {
            "name": "staging",
            "in": "query",
            "description": "Use staging endpoint.",
            "type": "boolean"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the prediction.",
            "schema": {
              "$ref": "#/definitions/LuisResult"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/APIError"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples":{
          "Successful Get Predictions From Endpoint Via Post request": {
            "$ref": "./examples/prediction/SuccessfulGetPredictionsFromEndpointViaPostRequest.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Q": {
      "type": "string",
      "example": "\"forward to frank 30 dollars through HSBC\""
    },
    "LuisResult": {
      "type": "object",
      "properties": {
        "query": {
            "type": "string",
            "x-nullable": true
        },
        "topScoringIntent": {
          "$ref": "#/definitions/IntentModel",
          "x-nullable": true
        },
        "intents": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/IntentModel"
          }
        },
        "entities": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/EntityModel"
          }
        },
        "compositeEntities": {
          "type": "array",
          "x-nullable": true,
          "description": "The composite entities extracted from the utterance.",
          "items": {
            "$ref": "#/definitions/CompositeEntityModel"
          }
        }
      }
    },
    "CompositeEntityModel": {
      "description": "LUIS Composite Entity.",
      "type": "object",
      "properties": {
        "parentType": {
          "type": "string",
          "description": "Type/name of parent entity."
        },
        "value": {
          "type": "string",
          "description": "Value for composite entity extracted by LUIS."
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompositeChildModel"
          }
        }
      },
      "required": [
        "parentType",
        "value",
        "children"
      ]
    },
    "CompositeChildModel": {
      "description": "Child entity in LUIS composite entity.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of child entity."
        },
        "value": {
          "type": "string",
          "description": "Value extracted by LUIS."
        }
      },
      "required": [
        "type",
        "value"
      ]
    },
    "IntentModel": {
      "description": "Intent returned from LUIS.",
      "type": "object",
      "properties": {
        "intent": {
          "type": "string"
        },
        "score": {
            "type": "number"
        }
      }
    },
    "EntityModel": {
      "description": "Entity returned from LUIS.",
      "type": "object",
      "properties":{
        "entity": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "startIndex": {
          "type": "number"
        },
        "endIndex": {
          "type": "number"
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [ "entity", "type", "startIndex", "endIndex" ]
    },
    "EntityWithScore": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityModel"
        },
        {
          "type": "object",
          "properties": {
            "score": {
              "type": "number"
            }
          },
          "required": [
            "score"
          ]
        }
      ]
    },
    "EntityWithResolution": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityModel"
        },
        {
          "type": "object",
          "properties": {
            "resolution": {
              "type": "object"
            }
          },
          "required": [
            "resolution"
          ]
        }
      ]
    },
    "APIError": {
      "type": "object",
      "description": "Error information returned by the API",
      "properties": {
        "statusCode": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}