{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Ink Recognizer Client",
    "description": "The service is used to perform ink layout and recognition of written words and shapes. Ink strokes passed to the service are recognized and organized into recognition results in the response"    
  },
  "schemes": ["https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "security": [
    {
      "apim_key": []
    }
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{Endpoint}/inkrecognizer/v1.0-preview",
    "parameters": [
      {
        "$ref": "#/parameters/Endpoint"
      }
    ]
  },
  "securityDefinitions": {
    "apim_key": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    }
  },
  "paths": {
    "/recognize": {
      "put":{
        "tags": [
              "InkRecognizer"
            ],
        "operationId": "InkRecognizer_Recognize",
        "x-ms-examples": {
          "Identify a word written in ink" : {
            "$ref": "./examples/InkWordRecognition.json"  
          }
        },
        "description": "Ink Recognition operation is used to perform ink layout and recognition of written words and shapes. It allows passing the ink strokes to the service to get the recognition results in the response.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The collection of stroke objects to send for analysis",
            "schema": {
              "$ref": "#/definitions/analysisRequest"
            }
          },
          {
            "name": "x-ms-client-request-id",
            "in": "header",
            "description": "The request id used to uniquely identify each request during troubleshooting. This is an optional parameter useful for correlating logs and other artifacts.",
            "required": false,
            "type": "string",
            "x-ms-client-request-id": true
          }
        ],
        "responses": {
          "200": {
            "description": "The results were processed successfully.",
            "schema": {
              "$ref": "#/definitions/analysisResponse"
            }
          },
          "default": {

            "description": "unexpected error",

            "schema": {

              "$ref": "#/definitions/errorModel"

            }

          }
        }     
      }
    }   
  },
  "definitions": {
    "drawingAttributesPattern": {
      "type": "object",
      "description": "The properties to use when rendering ink",  
      "properties": {
        "width": {
          "type": "number",
          "description" : "The width of the stylus used to draw the stroke"
        },
        "color": {
          "type": "object",
          "description" : "This shows the components of the color in rgba format",
          "properties": {
            "r" : {
              "type" : "number",
              "description" : "The red component of the color"
            },
            "g" : {
              "type" : "number",
              "description" : "The green component of the color"
            },
            "b" : {
              "type" : "number",
              "description" : "The blue component of the color"
            },
            "a" : {
              "type" : "number",
              "description" : "The alpha component of the color"
            }
          }
        },
        "height": {
          "type": "number",
          "description" : "The height of the stylus used to draw the stroke"
        },
        "fitToCurve": {                
          "type": "boolean",
          "description" : " This indicates whether Bezier smoothing is used to render the stroke"
        },
        "rasterOp": {
          "type": "string",
          "enum": [
            "noOperation",
            "copyPen",
            "maskPen"
          ],
          "x-ms-enum" : {
            "name" : "rasterOp",
            "modelAsString": true
          }
        },
        "ignorePressure": {
          "type": "boolean",
          "description" : " This indicates whether the thickness of a rendered Stroke changes according the amount of pressure applied."
        },
        "tip": {
          "type": "string",
          "description" : "This specifies the tip to be used to draw a stroke",
          "enum": [
            "ellipse",
            "rectangle"
          ],
          "x-ms-enum" : {
            "name" : "tip",
            "modelAsString": true
          }
        }
      }
    },
    "pointDetailsPattern" : {
      "type": "object",
      "description" : "This holds all the properties of one point",
      "properties" : {
        "x" : {
             "type": "number",
             "description" : "This represents the x coordinate of the point"
         },
         "y" : {
            "type": "number",
            "description" : "This represents the y coordinate of the point"
         }
       },     
      "required" : [ "x", "y"]
    },

    "shapePattern": {
      "type": "string",
      "description": "The category should be used to determines the field to read the recognition result. Recognized Object represents the shape that was recognized for the node with category as inkDrawing. For handwriting related nodes, recognizedText contains the actual recognition result.",
      "enum": [
        "drawing",
        "square",
        "rectangle",
        "circle",
        "ellipse",
        "triangle",
        "isoscelesTriangle",
        "equilateralTriangle",
        "rightTriangle",
        "quadrilateral",
        "diamond",
        "trapezoid",
        "parallelogram",
        "pentagon",
        "hexagon",
        "blockArrow",
        "heart",
        "starSimple",
        "starCrossed",
        "cloud",
        "line",
        "curve",
        "polyLine"
      ],
      "x-ms-enum" : {
        "name" : "shape",
        "modelAsString": true
      }
    },
    "classPattern": {
      "description": "The class represents the type of the recognition unit. A recognition unit can be a leaf node or a container node. Container nodes typically have leaf nodes as children.",
      "type": "string",
      "enum": [
        "container",
        "leaf"
      ]
    },
    "categoryPattern": {
      "type": "string",
      "description" : "The category of a recognition unit represents the type of content for that unit.",
      "enum": [
        "writingRegion",              
        "paragraph",
        "listItem",
        "line",
        "inkBullet",
        "inkDrawing",
        "inkWord",
        "unknown"
      ],
      "x-ms-enum" : {
        "name" : "category",
        "modelAsString": true
      }
    },
    "containerCategoryPattern": {
      "type": "string",
      "description" : "The category of recognition units that represent types that have children recognition units.",
      "enum": [
        "writingRegion",
        "paragraph",
        "listItem",
        "line"
      ],
      "x-ms-enum" : {
        "name" : "container",
        "modelAsString": true
      }
    },
    "leafCategoryPattern": {
      "type": "string",
      "description" : "The category of recognition units that represent types that don't have children recognition units.",
      "enum": [
        "inkDrawing",
        "inkBullet",
        "inkWord",
        "unknown"
      ],
      "x-ms-enum" : {
        "name" : "leaf",
        "modelAsString": true
      }
    },
    "alternatePattern": {
      "type": "array",
      "description": "The list of alternates for the core recognition result. In case of handwriting related recognition units, this list includes other words that are close possibilities to the results provided as 'recognizedText'.",
      "items": {
        "properties": {
          "category": {
            "$ref": "#/definitions/leafCategoryPattern"
          },
          "points": {
            "description" : "Array of point objects that represent points that are relevant to the type of recognition unit. For example, for leaf node of inkDrawing category that represents a triangle, points would include the x,y coordinates of the vertices of the recognized triangle. The points represent the coordinates of points used to create the perfectly drawn shape that is closest to the original input. They may not exactly match.",
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/pointDetailsPattern"
            } 
          },
          "rotationAngle": {
            "description" : "The angular orientation of an object relative to the horizontal axis",
            "type": "number"
          },
          "confidence": {
            "type": "number",
            "description" : "A number between 0 and 1 which indicates the confidence level in the result" 
          },
          "recognizedString": {
            "type": "string",
              "description" : "The recognized string from an inkWord or the name of a recognized shape in an inkDrawing object"
          }
        },
        "required": [
          "category",
          "recognizedString"
        ],
        "type": "object"
      }
    },
    
    "recognitionUnit": {
      "items": {
        "properties": {
          "id": {
            "type": "integer",
            "description" : "The identifier of the recognition unit. This id is used to indicate parent/child relationship between different recognition units."
          },
          "category": {
            "$ref": "#/definitions/categoryPattern"
          },
          "alternates": {
            "$ref": "#/definitions/alternatePattern"                
          },
          "center": {
            "description" : "The coordinates (x,y) of the center of the recognition unit.",                
            "$ref" : "#/definitions/pointDetailsPattern"
          },
          "points": {
            "description" : "Array of point objects that represent points that are relevant to the type of recognition unit. For example, for a leaf node of inkDrawing category that represents a triangle, points would include the x, y coordinates of the vertices of the recognized triangle. The points represent the coordinates used to create the perfectly drawn shape that is closest to the original input. They may not exactly match.",
            "type" : "array",
            "items" : {
                "$ref" : "#/definitions/pointDetailsPattern"
            }                       
          },
          "childIds": {
            "description" : "An array of integers representing the identifier of each child of the current recognition unit.",
            "type" : "array",
            "items" : {
                "type" :"integer"
             }            
          },
          "class": {
            "$ref": "#/definitions/classPattern"
          },
          "parentId": {
            "type": "integer",
             "description" : "The id of the parent node in the tree structure of the recognition results. parent = 0 indicates that there is no dedicated parent node for this unit." 
          },
          "boundingRectangle": {
            "description" : "The bounding rectangle of the recognized unit represented by the coordinates of the top left corner (x,y) along with width (w) and height (h) of the rectangle. Note that this rectangle is not rotated. So for  rotated objects such as slanted handwriting, it will cover the entire object. The unit will be matched to the one specified in the original request (mm by default.) ",
            "type" : "object",
            "properties" : {
              "topX" : {
                "type" : "number",
                "description" : "This represents the top left x coordinate"
              },
              "topY" : {
                "type" : "number",
                "description" : "This represents the top left y coordinate"
              },
              "width" : {
                "type" : "number",
                "description" : "This represents width of the bounding rectangle"
              },
              "height" : {
                "type" : "number",
                "description" : "The represents the height of the bounding rectangle"
              }
            }
          },
          "rotatedBoundingRectangle": {
            "description" : "This property provides the rotated bounding rectangle that covers the entire recognized object along the angle of rotation of the object. Note that this is NOT the same as rotating the boundingRectangle by the rotation angle.",
            "type": "array",
            "items" : {
                "$ref" : "#/definitions/pointDetailsPattern"
            }               
          },
          "strokeIds": {
            "description" : "This is an array of integers representing the list of stroke Identifier integers from the input request body that belong to this recognition unit.",
             "type" : "array",
             "items" : {
              "type" :"integer"
              }                
          },
          "recognizedText": {
            "type": "string",
            "description" : "The string represents the text that was recognized. It can be an empty string if the recognizer cannot determine the text."
          },
          "confidence": {
            "type": "number",
             "description" : "The class represents the type of the recognition unit. A recognition unit can be a leaf node or a container node. Container nodes typically have leaf nodes as children." 
          },
          "rotationAngle": {
            "type": "number",
            "description" :"This represents the angle at which the unit is rotated in degrees with respect to the positive X axis." 
          },
          "recognizedObject": {
            "$ref": "#/definitions/shapePattern"
          }
        },
        "required": [
          "category",
          "parentId",
          "strokeIds",
          "class",
          "id"
        ],
        "type": "object",
        "description" : "This represents the recognized entity"
      },
      "type": "array",
      "description" : "The list of recognition units based on the analysis of the ink strokes."
    },
    "stroke": {
      "type": "object",
      "properties": {        
        "id": {
          "type": "integer",
            "description": "This is treated as a unique identifier for each stroke within a request. If the id is repeated within the same request, the service will return an error."
        },
        "language": {
          "type": "string",
            "description" : "The IETF BCP 47 language code (for ex. en-US, en-GB, hi-IN etc.) of the expected language for the handwritten content in this stroke. The response will include results from this language."
        },
        "points": {
          "type" : "string",
          "description" : "A string of comma separated floating point values that represent the x and y coordinates of points that are part of the stroke. (X1,Y1, X2,Y2…).  It is recommended to have a precision of 8 digits after the decimal to obtain most accurate recognition results. The origin (0,0) of the canvas is assumed to be at the top left corner of the canvas"
          
        },
        "drawingAttributes": {
          "$ref": "#/definitions/drawingAttributesPattern"
        },
        "kind": {
          "type": "string",
          "description" : "This is an optional property which influences the decision about what the stroke kind is between inkWriting and inkDrawing. This property should be set ONLY if the type of user content is known ahead of time. Not setting this value implies the kind is not known ahead of time. Kind represents the type of content the stroke is a part of.",
          "enum": [
            "inkDrawing",
            "inkWriting"
          ],
          "x-ms-enum" : {
            "name" : "kind",
            "modelAsString": true
          }
        }
      },
      "required": [
        "points",
        "id"
      ]
    },
    
    "analysisResponse": {
      "type": "object",
      "description" : "This shows the expected contents of a response from the service",
      "properties": {        
        "unit": {
          "type": "string",
          "description" : "This represents the physical units of the ink strokes. It is up to the application developer to decide how to convert the device specific units to physical units before calling the service. The conversion factor can be different based on the type of the device used.",
          "enum": [
            "mm",
            "cm",
            "in"
          ],
          "x-ms-enum" : {
            "name" : "unit",
            "modelAsString": true
          }         
        },
        
        "unitMultiple": {
          "description" : " This is a scaling factor to be applied to the point coordinates when interpreting them in the physical units specified.",
          "type": "number"
        },
        "language": {
          "type": "string",
          "description": "This is the language used for recognizing handwriting from the ink strokes in the request. Set this to the user’s preferred language."
        },
        "recognitionUnits": {          
            "$ref": "#/definitions/recognitionUnit"
        }          
                       
      },
      "required": [
        "recognitionUnits"
      ]
    },
    "errorModel" : {
      "type" : "object",
      "properties" : {
        "code": {
          "type": "string",
          "description" : "This represents the error code"
        },
        "message": {
          "type": "string",
          "description" : "This represents the error message"
        },
        "target" : {
          "type" : "string",
          "description" : "This represents the target of the error message"
        },
        "details" : {
          "type" : "array",
          "description" : "This gives details of the reason(s) for the error",
          "items" : {
            "properties" : {
              "code": {
                "type": "string",
                "description" : "This represents the error code"
              },
              "message": {
                "type": "string",
                "description" : "This represents the error message"
              },
              "target" : {
                "type" : "string",
                "description" : "This represents the target of the error message"
              }
            }
          }
        }
      },
      "required" : [
        "code", "message"
      ]
    },
    "analysisRequest": {
      "type": "object",
      "description" : "This shows the expected contents of a request",
      "required": [
        "strokes",
        "language"
      ],
      "properties": {
        
        "applicationType": {
          "type": "string",
          "description" : "This describes the domain of the client application",
          "enum": [
            "drawing",
            "writing",
            "mixed"
          ],
          "x-ms-enum" : {
            "name" : "application",
            "modelAsString": true
          }
        },
        
        "unit": {
          "type": "string",
          "description" : "This represents the physical units of the ink strokes. It is up to the application developer to decide how to convert the device specific units to physical units before calling the service. The conversion factor can be different based on the type of the device used.",
          "enum": [
            "mm",
            "cm",
            "in"
          ]
        },
        "unitMultiple": {
          "description" : " This is a scaling factor to be applied to the point coordinates when interpreting them in the physical units specified.",
          "type": "number"
        },
        "language": {
          "type": "string",
          "example": "en-US",
          "description": "The IETF BCP 47 language code (for ex. en-US, en-GB, hi-IN etc.) of the expected language for the handwritten content in the ink strokes. The response will include results from this language."
        },
        "strokes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stroke"
          },
          "description": "This is the array of strokes sent for recognition. Best results are produced when the order of strokes added in the array matches the order in which the user created them. Changing the stroke order may produce unexpected results."
        }
      }
    }
  },
  "parameters": {
    "Endpoint": {
      "name": "Endpoint",
      "description": "Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus2.api.cognitive.microsoft.com).",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "in": "path",
      "x-ms-skip-url-encoding": true
    }
  }
}

