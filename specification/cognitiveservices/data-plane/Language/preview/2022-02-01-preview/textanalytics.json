{
    "swagger": "2.0",
    "info": {
        "title": "Microsoft Cognitive Language Service",
        "description": "The language service API is a suite of natural language processing (NLP) skills built with best-in-class Microsoft machine learning algorithms.  The API can be used to analyze unstructured text for tasks such as sentiment analysis, key phrase extraction, language detection and question answering. Further documentation can be found in <a href=\"https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview\">https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview</a>.0",
        "version": "2022-02-01-preview"
      },
    "securityDefinitions": {
        "apim_key": {
            "type": "apiKey",
            "name": "Ocp-Apim-Sumscription-Key",
            "in": "header"
        }
    },
    "security": [
        {
            "apim_key": []
        }
    ],
    "x-ms-parameterized-host": {
        "hostTemplate": "{Endpoint}/language",
        "useSchemePrefix": false,
        "parameters": [
          {
            "$ref": "#/parameters/Endpoint"
          }
        ]
    },
    "paths": {
        "/:analyze-text": {
            "post": {
                "summary": "",
                "description": "",
                "operationId": "AnalyzeText",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                    "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "#/parameters/ShowStats"
                    },
                    {
                        "description": "",
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/AnalyzeTextInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AnalyzeTextResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Successful Text Analysis Request": {
                        "$ref": ".//examples//SuccessfulAnalyzeTextRequest.json"
                    }
                }
            }
        },
        "/analyze-text/jobs": {
            "post": {
              "consumes": [
                "application/json"
              ],
              "produces": [
                "application/json"
              ],
              "description": "Submit a collection of text documents for analysis. Specify one or more unique tasks to be executed.",
              "operationId": "AnalyzeText_SubmitJob",
              "summary": "Submit text analysis job",
              "parameters": [
                {
                  "$ref": "#/parameters/ApiVersionParameter"
                },
                {
                  "description": "Collection of documents to analyze and tasks to execute.",
                  "in": "body",
                  "name": "body",
                  "schema": {
                    "$ref": "#/definitions/AnalyzeTextJobsInput"
                  }
                }
              ],
              "responses": {
                "202": {
                  "description": "A successful call results with an Operation-Location header used to check the status of the analysis job.",
                  "headers": {
                    "Operation-Location": {
                      "type": "string"
                    }
                  }
                },
                "default": {
                  "description": "Error response.",
                  "schema": {
                    "$ref": "#/definitions/ErrorResponse"
                  }
                }
              },
              "x-ms-examples": {
                "Successful Submit Analysis Job Request": {
                  "$ref": "./examples/SuccessfulAnalyzeTextJobSubmitRequest.json"
                }
              },
              "x-ms-long-running-operation": true
            }
          },
        "/analyze-text/jobs/{jobId}": {
            "get": {
              "produces": [
                "application/json"
              ],
              "description": "Get the status of an analysis job.  A job may consist of one or more tasks.  Once all tasks are completed, the job will transition to the completed state and results will be available for each task.",
              "operationId": "AnalyzeText_JobStatus",
              "summary": "Get analysis status and results",
              "parameters": [
                {
                  "$ref": "#/parameters/ApiVersionParameter"
                },
                {
                  "$ref": "#/parameters/JobId"
                },
                {
                  "$ref": "#/parameters/ShowStats"
                },
                {
                  "default": 20,
                  "description": "(Optional) Set the maximum number of results per task. When both top and skip are specified, skip is applied first.",
                  "in": "query",
                  "maximum": 50,
                  "minimum": 1,
                  "name": "top",
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "default": 0,
                  "description": "(Optional) Set the number of elements to offset in the response. When both top and skip are specified, skip is applied first.",
                  "in": "query",
                  "minimum": 0,
                  "name": "skip",
                  "type": "integer",
                  "format": "int32"
                }
              ],
              "responses": {
                "200": {
                  "description": "Analysis job status and metadata.",
                  "schema": {
                    "$ref": "#/definitions/AnalyzeTextJobState"
                  }
                },
                "default": {
                  "description": "Unexpected error",
                  "schema": {
                    "$ref": "#/definitions/ErrorResponse"
                  }
                }
              },
              "x-ms-examples": {
                "Successful Get Text Analysis Job Status Request": {
                  "$ref": "./examples/SuccessfulAnalyzeTextJobStatusRequest.json"
                }
              },
              "deprecated": false
            },
            "delete": {
                "produces": [
                  "application/json",
                  "text/json"
                ],
                "description": "Cancel analysis job.",
                "operationId": "AnalyzeText_CancelJob",
                "summary": "Cancel analysis job",
                "parameters": [
                  {
                    "$ref": "#/parameters/JobId"
                  }
                ],
                "responses": {
                  "202": {
                    "description": "Cancel Job request has been received.",
                    "headers": {
                      "Operation-Location": {
                        "type": "string"
                      }
                    }
                  },
                  "default": {
                    "description": "Unexpected error",
                    "schema": {
                      "$ref": "#/definitions/ErrorResponse"
                    }
                  }
                },
                "x-ms-examples": {
                  "Successful Delete Text Analysis Job Request": {
                    "$ref": ".//examples//SuccessfulAnalyzeTextJobDeleteRequest.json"
                  }
                },
                "x-ms-long-running-operation": true
              }
          }
    },
    "definitions": {
        "AnalyzeTextTaskKind": {
            "type": "string",
            "description": "Enumeration of supported Text Analysis tasks.",
            "enum": [
                "SentimentAnalysis",
                "EntityRecognition",
                "PiiEntityRecognition",
                "KeyPhraseExtraction",
                "EntityLinking",
                "LanguageDetection",
                "Healthcare",
                "ExtractiveSummarization",
                "CustomEntityRecogntion",
                "CustomSingleClassification",
                "CustomMultiClassification"
            ],
            "x-ms-enum": {
                "modelAsString": true
            }
        },
        "AnalyzeTextInput": {
            "allOf": [
                {
                    "$ref": "#/definitions/MultiLanguageBatchInput"
                },
                {
                    "$ref": "#/definitions/AnalyzeTextTask"
                }
            ]
        },
        "AnalyzeTextTask": {
            "description": "TODO",
            "discriminator": "task",
            "required": [
                "task"
            ],
            "properties": {
                "task": {
                    "$ref": "#/definitions/AnalyzeTextTaskKind"
                }
            }
        },
        "AnalyzeTextResponse": {
            "properties": {
                "sentimentAnalysis": {
                    "$ref": "#/definitions/SentimentResponse"
                },
                "entityRecognition": {
                    "$ref": "#/definitions/EntitiesResult"
                },
                "piiEntityRecognition": {
                    "$ref": "#/definitions/PiiResult"
                },
                "keyPhraseExtraction": {
                    "$ref": "#/definitions/KeyPhraseResult"
                },
                "entityLinking": {
                    "$ref": "#/definitions/EntityLinkingResult"
                },
                "languageDetection": {
                    "$ref": "#/definitions/LanguageDetectionResult"
                }
            }
        },
        "AnalyzeTextJobsInput": {
            "properties": {
                "displayName": {
                    "description": "Optional display name for the analysis job.",
                    "type": "string"
                },
                "analysisInput": {
                    "description": "Input for the analysis job.",
                    "properties": {
                        "records": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MultiLanguageInput"
                            }
                        }
                    }
                },
                "tasks": {
                    "description": "The set of tasks to execute on the input documents.",
                    "type": "array",
                    "items": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/TaskIdentifier"
                            },
                            {
                                "$ref": "#/definitions/AnalyzeTextTask"
                            }
                        ]
                    }
                }
            },
            "required": [
                "analysisInput",
                "tasks"
            ]
        },
        "TaskIdentifier": {
            "type": "object",
            "description": "Base task object.",
            "properties": {
                "taskName": {
                    "type": "string"
                }
            }
        },
        "TaskParameters": {
            "type": "object",
            "description": "Base parameters object for a text analysis task.",
            "properties": {
                "loggingOptOut": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "PreBuiltTaskParameters": {
            "type": "object",
            "description": "Parameters object for a text analysis task using pre-built models.",
            "properties": {
                "modelVersion": {
                    "type": "string",
                    "default": "latest"
                }
            }
        },
        "PreBuiltResult": {
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Errors by record id.",
                    "items": {
                        "$ref": "#/definitions/RecordError"
                    }
                },
                "statistics": {
                    "$ref": "#/definitions/RequestStatistics"
                },
                "modelVersion": {
                    "type": "string",
                    "description": "This field indicates which model is used for scoring."
                }
            },
            "required": [
                "errors",
                "modelVersion"
            ]
        },
        "CustomTaskParameters": {
            "type": "object",
            "description": "Parameters object for a text analysis task using custom models.",
            "properties": {
                "projectName": {
                    "type": "string"
                },
                "deploymentName": {
                    "type": "string"
                }
            },
            "required": [
                "projectName",
                "deploymentName"
            ]
        },
        "CustomResult": {
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Errors by document id.",
                    "items": {
                        "$ref": "#/definitions/RecordError"
                    }
                },
                "statistics": {
                    "$ref": "#/definitions/RequestStatistics"
                },
                "projectName": {
                    "type": "string",
                    "description": "This field indicates the project name for the model."
                },
                "deploymentName": {
                    "type": "string",
                    "description": "This field indicates the deployment name for the model."
                }
            },
            "required": [
                "errors",
                "projectName",
                "deploymentName"
            ]
        },
        "CustomEntitiesTask": {
            "type": "object",
            "description": "TODO",
            "properties": {
                "parameters": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TaskParameters"
                        },
                        {
                            "$ref": "#/definitions/CustomTaskParameters"
                        },
                        {
                            "$ref": "#/definitions/EntitiesTaskParameters"
                        }
                    ]
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/AnalyzeTextTask"
                }
            ],
            "x-ms-discriminator-value": "CustomEntityRecognition"
        },
        "CustomEntitiesTaskResult": {
            "type": "object",
            "properties": {
                "results": {
                    "$ref": "#/definitions/CustomEntitiesResult"
                }
            }
        },
        "CustomEntitiesResult": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "description": "Response by record",
                    "items": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/EntitiesRecordResult"
                            },
                            {
                                "$ref": "#/definitions/RecordDetectedLanguage"
                            }
                        ]
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/CustomResult"
                }
            ],
            "required": [
                "records"
            ]
        },
        "CustomSingleClassificationTask": {
            "type": "object",
            "properties": {
                "parameters": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TaskParameters"
                        },
                        {
                            "$ref": "#/definitions/CustomTaskParameters"
                        }
                    ]
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/AnalyzeTextTask"
                }
            ],
            "x-ms-discriminator-value": "CustomSingleClassification"
        },
        "CustomSingleClassificationTaskResult": {
            "type": "object",
            "properties": {
                "results": {
                    "$ref": "#/definitions/CustomSingleClassificationResult"
                }
            }
        },
        "CustomSingleClassificationResult": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "description": "Response by record",
                    "items": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/SingleClassificationRecordResult"
                            },
                            {
                                "$ref": "#/definitions/RecordDetectedLanguage"
                            }
                        ]
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/CustomResult"
                }   
            ],
            "required": [
                "records"
            ]
        },
        "SingleClassificationRecordResult": {
            "type": "object",
            "properties": {
                "classification": {
                    "$ref": "#/definitions/ClassificationResult"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/RecordResult"
                }
            ],
            "required": [
                "classification"
            ]
        },
        "ClassificationResult": {
            "type": "object",
            "required": [
                "category",
                "confidenceScore"
            ],
            "properties": {
                "category": {
                    "type": "string",
                    "description": "Classification type."
                },
                "confidenceScore": {
                    "type": "number",
                    "format": "double",
                    "description": "Confidence score between 0 and 1 of the recognized classification."
                }
            }
        },
        "CustomMultiClassificationTask": {
            "type": "object",
            "properties": {
                "parameters": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TaskParameters"
                        },
                        {
                            "$ref": "#/definitions/CustomTaskParameters"
                        }
                    ]
                }
            },
            "allOf": [

                {
                    "$ref": "#/definitions/AnalyzeTextTask"
                }
            ],
            "x-ms-discriminator-value": "CustomMultiClassification"
        },
        "CustomMultiClassificationTaskResult": {
            "type": "object",
            "properties": {
                "results": {
                    "$ref": "#/definitions/CustomMultiClassificationResult"
                }
            }
        },
        "CustomMultiClassificationResult": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "description": "Response by record",
                    "items": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/MultiClassificationRecordResult"
                            },
                            {
                                "$ref": "#/definitions/RecordDetectedLanguage"
                            }
                        ]
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/CustomResult"
                }
            ],
            "required": [
                "records"
            ]
        },
        "MultiClassificationRecordResult": {
            "type": "object",
            "properties": {
                "classifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ClassificationResult"
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/RecordResult"
                }
            ],
            "required": [
                "classifications"
            ]
        },
        "HealthcareTaskParameters": {
            "type": "object",
            "description": "Parameters object for a Healthcare task.",
            "properties": {
                "stringIndexType": {
                    "$ref": "#/definitions/StringIndexType"
                }
            }
        },
        "HealthcareTask": {
            "type": "object",
            "properties": {
                "parameters": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TaskParameters"
                        },
                        {
                            "$ref": "#/definitions/PreBuiltTaskParameters"
                        },
                        {
                            "$ref": "#/definitions/HealthcareTaskParameters"
                        }
                    ]
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/AnalyzeTextTask"
                }
            ],
            "x-ms-discriminator-value": "Healthcare"
        },
        "HealthcareTaskResult": {
            "type": "object",
            "properties": {
                "results": {
                    "$ref": "#/definitions/HealthcareResult"
                }
            }
        },
        "HealthcareResult": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "items": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/HealthcareEntitiesRecordResult"
                            },
                            {
                                "$ref": "#/definitions/RecordDetectedLanguage"
                            }
                        ]
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/PreBuiltResult"
                }
            ],
            "required": [
                "records"
            ]
        },
        "HealthcareEntitiesRecordResult": {
            "type": "object",
            "properties": {
                "entities": {
                    "description": "Healthcare entities.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HealthcareEntity"
                    }
                },
                "relations": {
                    "type": "array",
                    "description": "Healthcare entity relations.",
                    "items": {
                        "$ref": "#/definitions/HealthcareRelation"
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/RecordResult"
                }
            ],
            "required": [
                "entities",
                "relations"
            ]
        },
        "HealthcareEntity": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/HealthcareEntityProperties"
                },
                {
                    "$ref": "#/definitions/HealthcareLinkingProperties"
                }
            ]
        },
        "HealthcareRelation": {
            "type": "object",
            "description": "Every relation is an entity graph of a certain relationType, where all entities are connected and have specific roles within the relation context.",
            "required": [
                "relationType",
                "entities"
            ],
            "properties": {
                "relationType": {
                    "description": "Type of relation. Examples include: `DosageOfMedication` or 'FrequencyOfMedication', etc.",
                    "type": "string",
                    "enum": [
                        "Abbreviation",
                        "DirectionOfBodyStructure",
                        "DirectionOfCondition",
                        "DirectionOfExamination",
                        "DirectionOfTreatment",
                        "DosageOfMedication",
                        "FormOfMedication",
                        "FrequencyOfMedication",
                        "FrequencyOfTreatment",
                        "QualifierOfCondition",
                        "RelationOfExamination",
                        "RouteOfMedication",
                        "TimeOfCondition",
                        "TimeOfEvent",
                        "TimeOfExamination",
                        "TimeOfMedication",
                        "TimeOfTreatment",
                        "UnitOfCondition",
                        "UnitOfExamination",
                        "ValueOfCondition",
                        "ValueOfExamination"
                    ],
                    "x-ms-enum": {
                        "name": "relationType",
                        "modelAsString": true
                    }
                },
                "entities": {
                    "description": "The entities in the relation.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HealthcareRelationEntity"
                    }
                }
            }
        },
        "HealthcareAssertion": {
            "type": "object",
            "properties": {
                "conditionality": {
                    "description": "Describes any conditionality on the entity.",
                    "type": "string",
                    "enum": [
                        "hypothetical",
                        "conditional"
                    ],
                    "x-ms-enum": {
                        "name": "Conditionality",
                        "modelAsString": false
                    }
                },
                "certainty": {
                    "description": "Describes the entities certainty and polarity.",
                    "type": "string",
                    "enum": [
                        "positive",
                        "positivePossible",
                        "neutralPossible",
                        "negativePossible",
                        "negative"
                    ],
                    "x-ms-enum": {
                        "name": "Certainty",
                        "modelAsString": false
                    }
                },
                "association": {
                    "description": "Describes if the entity is the subject of the text or if it describes someone else.",
                    "type": "string",
                    "enum": [
                        "subject",
                        "other"
                    ],
                    "x-ms-enum": {
                        "name": "Association",
                        "modelAsString": false
                    }
                }
            }
        },
        "HealthcareRelationEntity": {
            "type": "object",
            "required": [
                "ref",
                "role"
            ],
            "properties": {
                "ref": {
                    "description": "Reference link object, using a JSON pointer RFC 6901 (URI Fragment Identifier Representation), pointing to the entity .",
                    "type": "string"
                },
                "role": {
                    "description": "Role of entity in the relationship. For example: 'CD20-positive diffuse large B-cell lymphoma' has the following entities with their roles in parenthesis:  CD20 (GeneOrProtein), Positive (Expression), diffuse large B-cell lymphoma (Diagnosis).",
                    "type": "string"
                }
            }
        },
        "HealthcareEntityLink": {
            "type": "object",
            "required": [
                "dataSource",
                "id"
            ],
            "properties": {
                "dataSource": {
                    "description": "Entity Catalog. Examples include: UMLS, CHV, MSH, etc.",
                    "type": "string"
                },
                "id": {
                    "description": "Entity id in the given source catalog.",
                    "type": "string"
                }
            }
        },
        "HealthcareEntityProperties": {
            "type": "object",
            "required": [
                "text",
                "category",
                "offset",
                "length",
                "confidenceScore"
            ],
            "properties": {
                "text": {
                    "type": "string",
                    "description": "Entity text as appears in the request."
                },
                "category": {
                    "x-ms-enum": {
                        "name": "healthcareEntityCategory",
                        "modelAsString": true
                    },
                    "type": "string",
                    "description": "Healthcare Entity Category.",
                    "enum": [
                        "BODY_STRUCTURE",
                        "AGE",
                        "GENDER",
                        "EXAMINATION_NAME",
                        "DATE",
                        "DIRECTION",
                        "FREQUENCY",
                        "MEASUREMENT_VALUE",
                        "MEASUREMENT_UNIT",
                        "RELATIONAL_OPERATOR",
                        "TIME",
                        "GENE_OR_PROTEIN",
                        "VARIANT",
                        "ADMINISTRATIVE_EVENT",
                        "CARE_ENVIRONMENT",
                        "HEALTHCARE_PROFESSION",
                        "DIAGNOSIS",
                        "SYMPTOM_OR_SIGN",
                        "CONDITION_QUALIFIER",
                        "MEDICATION_CLASS",
                        "MEDICATION_NAME",
                        "DOSAGE",
                        "MEDICATION_FORM",
                        "MEDICATION_ROUTE",
                        "FAMILY_RELATION",
                        "TREATMENT_NAME"
                    ]
                },
                "subcategory": {
                    "type": "string",
                    "description": "(Optional) Entity sub type."
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Start position for the entity text. Use of different 'stringIndexType' values can affect the offset returned."
                },
                "length": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Length for the entity text. Use of different 'stringIndexType' values can affect the length returned."
                },
                "confidenceScore": {
                    "type": "number",
                    "format": "double",
                    "description": "Confidence score between 0 and 1 of the extracted entity."
                }
            }
        },
        "HealthcareLinkingProperties": {
            "properties": {
                "assertion": {
                    "type": "object",
                    "$ref": "#/definitions/HealthcareAssertion"
                },
                "name": {
                    "description": "Preferred name for the entity. Example: 'histologically' would have a 'name' of 'histologic'.",
                    "type": "string"
                },
                "links": {
                    "description": "Entity references in known data sources.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HealthcareEntityLink"
                    }
                }
            }
        },
        "SentimentAnalysisTaskParameters": {
            "type": "object",
            "description": "Parameters object for a Sentiment Analysis task.",
            "properties": {
                "opinionMining": {
                    "type": "boolean",
                    "default": false
                },
                "stringIndexType": {
                    "$ref": "#/definitions/StringIndexType"
                }
            }
        },
        "SentimentAnalysisTask": {
            "type": "object",
            "properties": {
                "parameters": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TaskParameters"
                        },
                        {
                            "$ref": "#/definitions/PreBuiltTaskParameters"
                        },
                        {
                            "$ref": "#/definitions/SentimentAnalysisTaskParameters"
                        }
                    ]
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/AnalyzeTextTask"
                }
            ],
            "x-ms-discriminator-value": "SentimentAnalysis"
        },
        "SentimentTaskResult": {
            "type": "object",
            "properties": {
                "results": {
                    "$ref": "#/definitions/SentimentResponse"
                }
            }
        },
        "SentimentResponse": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "description": "Sentiment analysis per record.",
                    "items": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/SentimentRecordResult"
                            },
                            {
                                "$ref": "#/definitions/RecordDetectedLanguage"
                            }
                        ]
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/PreBuiltResult"
                }
            ],
            "required": [
                "records"
            ]
        },
        "SentimentRecordResult": {
            "type": "object",
            "properties": {
                "sentiment": {
                    "type": "string",
                    "description": "Predicted sentiment for document (Negative, Neutral, Positive, or Mixed).",
                    "enum": [
                        "positive",
                        "neutral",
                        "negative",
                        "mixed"
                    ],
                    "x-ms-enum": {
                        "name": "DocumentSentimentValue",
                        "modelAsString": false
                    }
                },
                "confidenceScores": {
                    "description": "Document level sentiment confidence scores between 0 and 1 for each sentiment class.",
                    "$ref": "#/definitions/SentimentConfidenceScorePerLabel"
                },
                "sentences": {
                    "type": "array",
                    "description": "Sentence level sentiment analysis.",
                    "items": {
                        "$ref": "#/definitions/SentenceSentiment"
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/RecordResult"
                }
            ],
            "required": [
                "sentiment",
                "confidenceScores",
                "sentences"
            ]
        },
        "SentimentConfidenceScorePerLabel": {
            "type": "object",
            "required": [
                "positive",
                "neutral",
                "negative"
            ],
            "properties": {
                "positive": {
                    "type": "number",
                    "format": "double"
                },
                "neutral": {
                    "type": "number",
                    "format": "double"
                },
                "negative": {
                    "type": "number",
                    "format": "double"
                }
            },
            "description": "Represents the confidence scores between 0 and 1 across all sentiment classes: positive, neutral, negative."
        },
        "SentenceSentiment": {
            "type": "object",
            "required": [
                "text",
                "sentiment",
                "confidenceScores",
                "offset",
                "length"
            ],
            "properties": {
                "text": {
                    "type": "string",
                    "description": "The sentence text."
                },
                "sentiment": {
                    "type": "string",
                    "description": "The predicted Sentiment for the sentence.",
                    "enum": [
                        "positive",
                        "neutral",
                        "negative"
                    ],
                    "x-ms-enum": {
                        "name": "SentenceSentimentValue",
                        "modelAsString": false
                    }
                },
                "confidenceScores": {
                    "description": "The sentiment confidence score between 0 and 1 for the sentence for all classes.",
                    "$ref": "#/definitions/SentimentConfidenceScorePerLabel"
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The sentence offset from the start of the document."
                },
                "length": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The length of the sentence."
                },
                "targets": {
                    "type": "array",
                    "description": "The array of sentence targets for the sentence.",
                    "items": {
                        "$ref": "#/definitions/SentenceTarget"
                    }
                },
                "assessments": {
                    "type": "array",
                    "description": "The array of assessments for the sentence.",
                    "items": {
                        "$ref": "#/definitions/SentenceAssessment"
                    }
                }
            }
        },
        "SentenceTarget": {
            "type": "object",
            "required": [
                "confidenceScores",
                "length",
                "offset",
                "relations",
                "sentiment",
                "text"
            ],
            "properties": {
                "sentiment": {
                    "type": "string",
                    "enum": [
                        "positive",
                        "mixed",
                        "negative"
                    ],
                    "x-ms-enum": {
                        "name": "TokenSentimentValue",
                        "modelAsString": false
                    },
                    "description": "Targeted sentiment in the sentence."
                },
                "confidenceScores": {
                    "description": "Target sentiment confidence scores for the target in the sentence.",
                    "$ref": "#/definitions/TargetConfidenceScoreLabel"
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The target offset from the start of the sentence."
                },
                "length": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The length of the target."
                },
                "text": {
                    "type": "string",
                    "description": "The target text detected."
                },
                "relations": {
                    "type": "array",
                    "description": "The array of either assessment or target objects which is related to the target.",
                    "items": {
                        "$ref": "#/definitions/TargetRelation"
                    }
                }
            }
        },
        "SentenceAssessment": {
            "type": "object",
            "required": [
                "confidenceScores",
                "isNegated",
                "length",
                "offset",
                "sentiment",
                "text"
            ],
            "properties": {
                "sentiment": {
                    "type": "string",
                    "enum": [
                        "positive",
                        "mixed",
                        "negative"
                    ],
                    "x-ms-enum": {
                        "name": "TokenSentimentValue",
                        "modelAsString": false
                    },
                    "description": "Assessment sentiment in the sentence."
                },
                "confidenceScores": {
                    "description": "Assessment sentiment confidence scores in the sentence.",
                    "$ref": "#/definitions/TargetConfidenceScoreLabel"
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The assessment offset from the start of the sentence."
                },
                "length": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The length of the assessment."
                },
                "text": {
                    "type": "string",
                    "description": "The assessment text detected."
                },
                "isNegated": {
                    "type": "boolean",
                    "description": "The indicator representing if the assessment is negated."
                }
            }
        },
        "TargetRelation": {
            "type": "object",
            "required": [
                "ref",
                "relationType"
            ],
            "properties": {
                "relationType": {
                    "type": "string",
                    "enum": [
                        "assessment",
                        "target"
                    ],
                    "x-ms-enum": {
                        "name": "TargetRelationType",
                        "modelAsString": false
                    },
                    "description": "The type related to the target."
                },
                "ref": {
                    "type": "string",
                    "description": "The JSON pointer indicating the linked object."
                }
            }
        },
        "TargetConfidenceScoreLabel": {
            "type": "object",
            "required": [
                "negative",
                "positive"
            ],
            "properties": {
                "positive": {
                    "type": "number",
                    "format": "double"
                },
                "negative": {
                    "type": "number",
                    "format": "double"
                }
            },
            "description": "Represents the confidence scores across all sentiment classes: positive, neutral, negative."
        },
        "EntitiesTaskParameters": {
            "type": "object",
            "description": "Parameters object for a Sentiment Analysis task.",
            "properties": {
                "stringIndexType": {
                    "$ref": "#/definitions/StringIndexType"
                }
            }
        },
        "EntitiesTask": {
            "type": "object",
            "properties": {
                "parameters": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TaskParameters"
                        },
                        {
                            "$ref": "#/definitions/PreBuiltTaskParameters"
                        },
                        {
                            "$ref": "#/definitions/EntitiesTaskParameters"
                        }
                    ]
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/AnalyzeTextTask"
                }
            ],
            "x-ms-discriminator-value": "EntityRecognition"
        },
        "EntitiesTaskResult": {
            "type": "object",
            "properties": {
                "results": {
                    "$ref": "#/definitions/EntitiesResult"
                }
            }
        },
        "EntitiesResult": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "description": "Response by record",
                    "items": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/EntitiesRecordResult"
                            },
                            {
                                "$ref": "#/definitions/RecordDetectedLanguage"
                            }
                        ]
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/PreBuiltResult"
                }
            ],
            "required": [
                "records"
            ]
        },
        "EntitiesRecordResult": {
            "type": "object",
            "properties": {
                "entities": {
                    "type": "array",
                    "description": "Recognized entities in the document.",
                    "items": {
                        "$ref": "#/definitions/Entity"
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/RecordResult"
                }
            ],
            "required": [
                "entities"
            ]
        },
        "Entity": {
            "type": "object",
            "required": [
                "text",
                "category",
                "offset",
                "length",
                "confidenceScore"
            ],
            "properties": {
                "text": {
                    "type": "string",
                    "description": "Entity text as appears in the request."
                },
                "category": {
                    "type": "string",
                    "description": "Entity type."
                },
                "subcategory": {
                    "type": "string",
                    "description": "(Optional) Entity sub type."
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Start position for the entity text. Use of different 'stringIndexType' values can affect the offset returned."
                },
                "length": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Length for the entity text. Use of different 'stringIndexType' values can affect the length returned."
                },
                "confidenceScore": {
                    "type": "number",
                    "format": "double",
                    "description": "Confidence score between 0 and 1 of the extracted entity."
                }
            }
        },
        "EntityLinkingTaskParameters": {
            "type": "object",
            "description": "Parameters object for a Sentiment Analysis task.",
            "properties": {
                "stringIndexType": {
                    "$ref": "#/definitions/StringIndexType"
                }
            }
        },
        "EntityLinkingTask": {
            "type": "object",
            "description": "TODO",
            "properties": {
                "parameters": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TaskParameters"
                        },
                        {
                            "$ref": "#/definitions/PreBuiltTaskParameters"
                        },
                        {
                            "$ref": "#/definitions/EntityLinkingTaskParameters"
                        }
                    ]
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/AnalyzeTextTask"
                }
            ],
            "x-ms-discriminator-value": "EntityLinking"
        },
        "EntityLinkingTaskResult": {
            "type": "object",
            "properties": {
                "results": {
                    "$ref": "#/definitions/EntityLinkingResult"
                }
            }
        },
        "EntityLinkingResult": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "description": "Response by record",
                    "items": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/RecordDetectedLanguage"
                            },
                            {
                                "$ref": "#/definitions/LinkedEntitiesRecordResult"
                            }
                        ]
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/PreBuiltResult"
                }
            ],
            "required": [
                "records"
            ]
        },
        "LinkedEntitiesRecordResult": {
            "type": "object",
            "required": [
                "entities"
            ],
            "properties": {
                "entities": {
                    "type": "array",
                    "description": "Recognized well known entities in the record.",
                    "items": {
                        "$ref": "#/definitions/LinkedEntity"
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/RecordResult"
                }
            ]
        },
        "LinkedEntity": {
            "type": "object",
            "required": [
                "name",
                "matches",
                "language",
                "url",
                "dataSource"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Entity Linking formal name."
                },
                "matches": {
                    "type": "array",
                    "description": "List of instances this entity appears in the text.",
                    "items": {
                        "$ref": "#/definitions/Match"
                    }
                },
                "language": {
                    "type": "string",
                    "description": "Language used in the data source."
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the recognized entity from the data source."
                },
                "url": {
                    "type": "string",
                    "description": "URL for the entity's page from the data source."
                },
                "dataSource": {
                    "type": "string",
                    "description": "Data source used to extract entity linking, such as Wiki/Bing etc."
                },
                "bingId": {
                    "type": "string",
                    "description": "Bing Entity Search API unique identifier of the recognized entity."
                }
            }
        },
        "Match": {
            "type": "object",
            "required": [
                "confidenceScore",
                "text",
                "offset",
                "length"
            ],
            "properties": {
                "confidenceScore": {
                    "type": "number",
                    "format": "double",
                    "description": "If a well known item is recognized, a decimal number denoting the confidence level between 0 and 1 will be returned."
                },
                "text": {
                    "type": "string",
                    "description": "Entity text as appears in the request."
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Start position for the entity match text."
                },
                "length": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Length for the entity match text."
                }
            }
        },
        "PiiTaskParameters": {
            "type": "object",
            "description": "Parameters object for a PII Entities Recognition task.",
            "properties": {
                "domain": {
                    "type": "string",
                    "default": "none",
                    "enum": [
                        "phi",
                        "none"
                    ]
                },
                "piiCategories": {
                    "$ref": "#/definitions/PiiCategories"
                },
                "stringIndexType": {
                    "$ref": "#/definitions/StringIndexType"
                }
            }
        },
        "PiiTask": {
            "type": "object",
            "description": "TODO",
            "properties": {
                "parameters": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TaskParameters"
                        },
                        {
                            "$ref": "#/definitions/PreBuiltTaskParameters"
                        },
                        {
                            "$ref": "#/definitions/PiiTaskParameters"
                        }
                    ]
                }
            },
            "allOf":[
                {
                    "$ref": "#/definitions/AnalyzeTextTask"
                }
            ],
            "x-ms-discriminator-value": "PiiEntityRecognition"
        },
        "PiiTaskResult": {
            "type": "object",
            "properties": {
                "results": {
                    "$ref": "#/definitions/PiiResult"
                }
            }
        },
        "PiiResult": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "description": "Response by record",
                    "items": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/RecordDetectedLanguage"
                            },
                            {
                                "$ref": "#/definitions/PiiEntitiesRecordResult"
                            }
                        ]
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/PreBuiltResult"
                }
            ],
            "required": [
                "records"
            ]
        },
        "PiiEntitiesRecordResult": {
            "type": "object",
            "properties": {
                "redactedText": {
                    "type": "string",
                    "description": "Returns redacted text."
                },
                "entities": {
                    "type": "array",
                    "description": "Recognized entities in the record.",
                    "items": {
                        "$ref": "#/definitions/Entity"
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/RecordResult"
                }
            ],
            "required": [
                "redactedText",
                "entities"
            ]
        },
        "PiiCategories": {
            "description": "(Optional) describes the PII categories to return",
            "items": {
                "type": "string",
                "x-ms-enum": {
                    "name": "PiiCategory",
                    "modelAsString": true
                },
                "enum": [
                    "ABARoutingNumber",
                    "ARNationalIdentityNumber",
                    "AUBankAccountNumber",
                    "AUDriversLicenseNumber",
                    "AUMedicalAccountNumber",
                    "AUPassportNumber",
                    "AUTaxFileNumber",
                    "AUBusinessNumber",
                    "AUCompanyNumber",
                    "ATIdentityCard",
                    "ATTaxIdentificationNumber",
                    "ATValueAddedTaxNumber",
                    "AzureDocumentDBAuthKey",
                    "AzureIAASDatabaseConnectionAndSQLString",
                    "AzureIoTConnectionString",
                    "AzurePublishSettingPassword",
                    "AzureRedisCacheString",
                    "AzureSAS",
                    "AzureServiceBusString",
                    "AzureStorageAccountKey",
                    "AzureStorageAccountGeneric",
                    "BENationalNumber",
                    "BENationalNumberV2",
                    "BEValueAddedTaxNumber",
                    "BRCPFNumber",
                    "BRLegalEntityNumber",
                    "BRNationalIDRG",
                    "BGUniformCivilNumber",
                    "CABankAccountNumber",
                    "CADriversLicenseNumber",
                    "CAHealthServiceNumber",
                    "CAPassportNumber",
                    "CAPersonalHealthIdentification",
                    "CASocialInsuranceNumber",
                    "CLIdentityCardNumber",
                    "CNResidentIdentityCardNumber",
                    "CreditCardNumber",
                    "HRIdentityCardNumber",
                    "HRNationalIDNumber",
                    "HRPersonalIdentificationNumber",
                    "HRPersonalIdentificationOIBNumberV2",
                    "CYIdentityCard",
                    "CYTaxIdentificationNumber",
                    "CZPersonalIdentityNumber",
                    "CZPersonalIdentityV2",
                    "DKPersonalIdentificationNumber",
                    "DKPersonalIdentificationV2",
                    "DrugEnforcementAgencyNumber",
                    "EEPersonalIdentificationCode",
                    "EUDebitCardNumber",
                    "EUDriversLicenseNumber",
                    "EUGPSCoordinates",
                    "EUNationalIdentificationNumber",
                    "EUPassportNumber",
                    "EUSocialSecurityNumber",
                    "EUTaxIdentificationNumber",
                    "FIEuropeanHealthNumber",
                    "FINationalID",
                    "FINationalIDV2",
                    "FIPassportNumber",
                    "FRDriversLicenseNumber",
                    "FRHealthInsuranceNumber",
                    "FRNationalID",
                    "FRPassportNumber",
                    "FRSocialSecurityNumber",
                    "FRTaxIdentificationNumber",
                    "FRValueAddedTaxNumber",
                    "DEDriversLicenseNumber",
                    "DEPassportNumber",
                    "DEIdentityCardNumber",
                    "DETaxIdentificationNumber",
                    "DEValueAddedNumber",
                    "GRNationalIDCard",
                    "GRNationalIDV2",
                    "GRTaxIdentificationNumber",
                    "HKIdentityCardNumber",
                    "HUValueAddedNumber",
                    "HUPersonalIdentificationNumber",
                    "HUTaxIdentificationNumber",
                    "INPermanentAccount",
                    "INUniqueIdentificationNumber",
                    "IDIdentityCardNumber",
                    "InternationalBankingAccountNumber",
                    "IEPersonalPublicServiceNumber",
                    "IEPersonalPublicServiceNumberV2",
                    "ILBankAccountNumber",
                    "ILNationalID",
                    "ITDriversLicenseNumber",
                    "ITFiscalCode",
                    "ITValueAddedTaxNumber",
                    "JPBankAccountNumber",
                    "JPDriversLicenseNumber",
                    "JPPassportNumber",
                    "JPResidentRegistrationNumber",
                    "JPSocialInsuranceNumber",
                    "JPMyNumberCorporate",
                    "JPMyNumberPersonal",
                    "JPResidenceCardNumber",
                    "LVPersonalCode",
                    "LTPersonalCode",
                    "LUNationalIdentificationNumberNatural",
                    "LUNationalIdentificationNumberNonNatural",
                    "MYIdentityCardNumber",
                    "MTIdentityCardNumber",
                    "MTTaxIDNumber",
                    "NLCitizensServiceNumber",
                    "NLCitizensServiceNumberV2",
                    "NLTaxIdentificationNumber",
                    "NLValueAddedTaxNumber",
                    "NZBankAccountNumber",
                    "NZDriversLicenseNumber",
                    "NZInlandRevenueNumber",
                    "NZMinistryOfHealthNumber",
                    "NZSocialWelfareNumber",
                    "NOIdentityNumber",
                    "PHUnifiedMultiPurposeIDNumber",
                    "PLIdentityCard",
                    "PLNationalID",
                    "PLNationalIDV2",
                    "PLPassportNumber",
                    "PLTaxIdentificationNumber",
                    "PLREGONNumber",
                    "PTCitizenCardNumber",
                    "PTCitizenCardNumberV2",
                    "PTTaxIdentificationNumber",
                    "ROPersonalNumericalCode",
                    "RUPassportNumberDomestic",
                    "RUPassportNumberInternational",
                    "SANationalID",
                    "SGNationalRegistrationIdentityCardNumber",
                    "SKPersonalNumber",
                    "SITaxIdentificationNumber",
                    "SIUniqueMasterCitizenNumber",
                    "ZAIdentificationNumber",
                    "KRResidentRegistrationNumber",
                    "ESDNI",
                    "ESSocialSecurityNumber",
                    "ESTaxIdentificationNumber",
                    "SQLServerConnectionString",
                    "SENationalID",
                    "SENationalIDV2",
                    "SEPassportNumber",
                    "SETaxIdentificationNumber",
                    "SWIFTCode",
                    "CHSocialSecurityNumber",
                    "TWNationalID",
                    "TWPassportNumber",
                    "TWResidentCertificate",
                    "THPopulationIdentificationCode",
                    "TRNationalIdentificationNumber",
                    "UKDriversLicenseNumber",
                    "UKElectoralRollNumber",
                    "UKNationalHealthNumber",
                    "UKNationalInsuranceNumber",
                    "UKUniqueTaxpayerNumber",
                    "USUKPassportNumber",
                    "USBankAccountNumber",
                    "USDriversLicenseNumber",
                    "USIndividualTaxpayerIdentification",
                    "USSocialSecurityNumber",
                    "UAPassportNumberDomestic",
                    "UAPassportNumberInternational",
                    "Organization",
                    "Email",
                    "URL",
                    "Age",
                    "PhoneNumber",
                    "IPAddress",
                    "Date",
                    "Person",
                    "Address",
                    "All",
                    "Default"
                ]
            },
            "type": "array",
            "uniqueItems": true
        },
        "ExtractiveSummarizationTaskParameters": {
            "type": "object",
            "description": "Parameters object for an Extractive Summarization task.",
            "properties": {
                "sentenceCount": {
                    "type": "integer",
                    "default": 3
                },
                "sortBy": {
                    "type": "string",
                    "default": "Offset",
                    "enum": [
                        "Offset",
                        "Rank"
                    ]
                },
                "stringIndexType": {
                    "$ref": "#/definitions/StringIndexType"
                }
            }
        },
        "ExtractiveSummarizationTask": {
            "type": "object",
            "properties": {
                "parameters": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TaskParameters"
                        },
                        {
                            "$ref": "#/definitions/PreBuiltTaskParameters"
                        },
                        {
                            "$ref": "#/definitions/ExtractiveSummarizationTaskParameters"
                        }
                    ]
                }
            },
            "allOf":[
                {
                    "$ref": "#/definitions/AnalyzeTextTask"
                }
            ],
            "x-ms-discriminator-value": "ExtractiveSummarization"
        },
        "ExtractiveSummarizationTaskResult": {
            "type": "object",
            "properties": {
                "results": {
                    "$ref": "#/definitions/ExtractiveSummarizationResult"
                }
            }
        },
        "ExtractiveSummarizationResult": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "description": "Response by record",
                    "items": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/ExtractedSummaryRecordResult"
                            },
                            {
                                "$ref": "#/definitions/RecordDetectedLanguage"
                            }
                        ]
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/PreBuiltResult"
                }
            ],
            "required": [
                "records"
            ]
        },
        "ExtractedSummaryRecordResult": {
            "type": "object",
            "properties": {
                "sentences": {
                    "type": "array",
                    "description": "A ranked list of sentences representing the extracted summary.",
                    "items": {
                        "$ref": "#/definitions/ExtractedSummarySentence"
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/RecordResult"
                }
            ],
            "required": [
                "sentences"
            ]
        },
        "ExtractedSummarySentence": {
            "type": "object",
            "required": [
                "text",
                "rankScore",
                "offset",
                "length"
            ],
            "properties": {
                "text": {
                    "type": "string",
                    "description": "The extracted sentence text."
                },
                "rankScore": {
                    "type": "number",
                    "format": "double",
                    "description": "A double value representing the relevance of the sentence within the summary. Higher values indicate higher importance."
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The sentence offset from the start of the document, based on the value of the parameter StringIndexType."
                },
                "length": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The length of the sentence."
                }
            }
        },
        "KeyPhraseTask": {
            "type": "object",
            "properties": {
                "parameters": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TaskParameters"
                        },
                        {
                            "$ref": "#/definitions/PreBuiltTaskParameters"
                        }
                    ]
                }
            },
            "allOf":[
                {
                    "$ref": "#/definitions/AnalyzeTextTask"
                }
            ],
            "x-ms-discriminator-value": "KeyPhraseExtraction"
        },
        "KeyPhraseTaskResult": {
            "type": "object",
            "properties": {
                "results": {
                    "$ref": "#/definitions/KeyPhraseResult"
                }
            }
        },
        "KeyPhraseResult": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "description": "Response by record",
                    "items": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/KeyPhrasesRecordResult"
                            },
                            {
                                "$ref": "#/definitions/RecordDetectedLanguage"
                            }
                        ]
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/PreBuiltResult"
                }
            ],
            "required": [
                "records"
            ]
        },
        "KeyPhrasesRecordResult": {
            "type": "object",
            "properties": {
                "keyPhrases": {
                    "type": "array",
                    "description": "A list of representative words or phrases. The number of key phrases returned is proportional to the number of words in the input record.",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/RecordResult"
                }
            ],
            "required": [
                "keyPhrases"
            ]
        },
        "LanguageDetectionTaskParameters": {
            "type": "object",
            "description": "Parameters object for a Language Detection task.",
            "properties": {
                "regionHint": {
                    "type": "string"                }
            }
        },
        "LanguageDetectionTask": {
            "type": "object",
            "properties": {
                "parameters": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TaskParameters"
                        },
                        {
                            "$ref": "#/definitions/PreBuiltTaskParameters"
                        },
                        {
                            "$ref": "#/definitions/LanguageDetectionTaskParameters"
                        }
                    ]
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/AnalyzeTextTask"
                }
            ],
            "x-ms-discriminator-value": "LanguageDetection"
        },
        "LanguageDetectionResult": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "description": "Response by record",
                    "items": {
                        "$ref": "#/definitions/LanguageDetectionRecordResult"
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/PreBuiltResult"
                }
            ],
            "required": [
                "records"
            ]
        },
        "LanguageDetectionRecordResult": {
            "type": "object",
            "properties": {
                "detectedLanguage": {
                    "description": "Detected Language.",
                    "$ref": "#/definitions/DetectedLanguage"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/RecordResult"
                }
            ],
            "required": [
                "detectedLanguage"
            ]
        },
        "DetectedLanguage": {
            "type": "object",
            "required": [
                "name",
                "iso6391Name",
                "confidenceScore"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Long name of a detected language (e.g. English, French)."
                    },
                "iso6391Name": {
                    "type": "string",
                    "description": "A two letter representation of the detected language according to the ISO 639-1 standard (e.g. en, fr)."
                },
                "confidenceScore": {
                    "type": "number",
                    "format": "double",
                    "description": "A confidence score between 0 and 1. Scores close to 1 indicate 100% certainty that the identified language is true."
                }
            }
        },
        "AnalyzeTextJobState": {
            "allOf": [
                {
                    "$ref": "#/definitions/JobState"
                },
                {
                    "$ref": "#/definitions/TasksState"
                },
                {
                    "$ref": "#/definitions/AnalyzeTextJobStatistics"
                }
            ]
        },
        "Pagination": {
            "properties": {
                "nextLink": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JobMetadata": {
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "createdDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "expirationDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "jobId": {
                    "format": "uuid",
                    "type": "string"
                },
                "lastUpdateDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "notStarted",
                        "running",
                        "succeeded",
                        "failed",
                        "cancelled",
                        "cancelling"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "modelAsString": false,
                        "name": "State"
                    }
                }
            },
            "required": [
                "jobId",
                "lastUpdateDateTime",
                "createdDateTime",
                "status"
            ],
            "type": "object"
        },
        "JobState": {
            "allOf": [
              {
                  "$ref": "#/definitions/JobMetadata"
              },
              {
                  "$ref": "#/definitions/JobErrors"
              },
              {
                  "$ref": "#/definitions/Pagination"
              } 
            ]
        },
        "JobErrors": {
            "properties": {
              "errors": {
                  "items": {
                      "$ref": "#/definitions/Error"
                  },
                  "type": "array"
              }
            },
          "type": "object"
        },
        "AnalyzeTextJobStatistics": {
            "properties": {
                "statistics": {
                    "$ref": "#/definitions/RequestStatistics"
                }
            },
            "type": "object"
        },
        "TasksState": {
            "properties": {
                "tasks": {
                    "properties": {
                        "completed": {
                            "type": "integer"
                        },
                        "failed": {
                            "type": "integer"
                        },
                        "inProgress": {
                            "type": "integer"
                        },
                        "total": {
                            "type": "integer"
                        },
                        "customEntityRecognitionTasks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/TaskState"
                                    },
                                    {
                                        "$ref": "#/definitions/CustomEntitiesTaskResult"
                                    }
                                ]
                            }
                        },
                        "customSingleClassificationTasks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/TaskState"
                                    },
                                    {
                                        "$ref": "#/definitions/CustomSingleClassificationTaskResult"
                                    }
                                ]
                            }
                        },
                        "customMultiClassificationTasks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/TaskState"
                                    },
                                    {
                                        "$ref": "#/definitions/CustomMultiClassificationTaskResult"
                                    }
                                ]
                            }
                        },
                        "entityRecognitionTasks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/TaskState"
                                    },
                                    {
                                        "$ref": "#/definitions/EntitiesTaskResult"
                                    }
                                ]
                            }
                        },
                        "entityRecognitionPiiTasks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "allOf": [
                                    {
                                    "$ref": "#/definitions/TaskState"
                                    },
                                    {
                                    "$ref": "#/definitions/PiiTaskResult"
                                    }
                                ]
                            }
                        },
                        "keyPhraseExtractionTasks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "allOf": [
                                    {
                                    "$ref": "#/definitions/TaskState"
                                    },
                                    {
                                    "$ref": "#/definitions/KeyPhraseTaskResult"
                                    }
                                ]
                            }
                        },
                        "entityLinkingTasks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "allOf": [
                                    {
                                    "$ref": "#/definitions/TaskState"
                                    },
                                    {
                                    "$ref": "#/definitions/EntityLinkingTaskResult"
                                    }
                                ]
                            }
                        },
                        "sentimentAnalysisTasks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "allOf": [
                                    {
                                    "$ref": "#/definitions/TaskState"
                                    },
                                    {
                                    "$ref": "#/definitions/SentimentTaskResult"
                                    }
                                ]
                            }
                        },
                        "extractiveSummarizationTasks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "allOf": [
                                    {
                                    "$ref": "#/definitions/TaskState"
                                    },
                                    {
                                    "$ref": "#/definitions/ExtractiveSummarizationTaskResult"
                                    }
                                ]
                            }
                        }
                    },
                    "required": [
                        "total",
                        "completed",
                        "failed",
                        "inProgress"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "tasks"
            ],
            "type": "object"
        },
        "TaskState": {
            "properties": {
                "lastUpdateDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "taskName": {
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "notStarted",
                        "running",
                        "succeeded",
                        "failed",
                        "rejected",
                        "cancelled",
                        "cancelling"
                    ],
                    "x-ms-enum": {
                        "modelAsString": false,
                        "name": "State"
                    }
                }
            },
            "required": [
                "status",
                "lastUpdateDateTime",
                "taskName"
            ],
            "type": "object"
        },
        "StringIndexType": {
            "type": "string",
            "description": "Specifies the method used to interpret string offsets.  Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information see https://aka.ms/text-analytics-offsets.",
            "default": "TextElements_v8",
            "enum": [
                "TextElements_v8",
                "UnicodeCodePoint",
                "Utf16CodeUnit"
            ],
            "x-ms-enum": {
                "name": "StringIndexType",
                "modelAsString": true,
                "values": [
                    {
                        "value": "TextElements_v8",
                        "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
                    },
                    {
                        "value": "UnicodeCodePoint",
                        "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
                    },
                    {
                        "value": "Utf16CodeUnit",
                        "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
                    }
                ]
            }
        },
        "DocumentResponse": {
            "type": "object",
            "properties": {

            }
        },
        "RecordResult": {
            "type": "object",
            "required": [
                "id",
                "warnings"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique, non-empty record identifier."
                },
                "warnings": {
                    "type": "array",
                    "description": "Warnings encountered while processing record.",
                    "items": {
                        "$ref": "#/definitions/RecordWarning"
                    }
                },
                "statistics": {
                    "description": "if showStats=true was specified in the request this field will contain information about the record payload.",
                    "$ref": "#/definitions/RecordStatistics"
                }
            }
        },
        "RecordDetectedLanguage": {
            "type": "object",
            "properties": {
                "detectedLanguage": {
                    "type": "string",
                    "description": "If 'language' is set to 'auto' for the record in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document."
                }
            }
        },
        "RecordError": {
            "type": "object",
            "required": [
              "id",
              "error"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "Record Id."
              },
              "error": {
                "type": "object",
                "description": "Record Error.",
                "$ref": "#/definitions/Error"
              }
            }
        },
        "RecordWarning": {
            "type": "object",
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "enum": [
                        "LongWordsInDocument",
                        "DocumentTruncated"
                    ],
                    "x-ms-enum": {
                        "name": "WarningCodeValue",
                        "modelAsString": true
                    },
                    "description": "Error code."
                },
                "message": {
                    "type": "string",
                    "description": "Warning message."
                },
                "targetRef": {
                    "type": "string",
                    "description": "A JSON pointer reference indicating the target object."
                }
            }
        },
        "RecordStatistics": {
            "type": "object",
            "required": [
                "charactersCount",
                "transactionsCount"
            ],
            "properties": {
                "charactersCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of text elements recognized in the record."
                },
                "transactionsCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of transactions for the record."
                }
            },
            "description": "if showStats=true was specified in the request this field will contain information about the record payload."
        },
        "RequestStatistics": {
            "type": "object",
            "required": [
                "documentsCount",
                "validDocumentsCount",
                "erroneousDocumentsCount",
                "transactionsCount"
            ],
            "properties": {
                "documentsCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of documents submitted in the request."
                },
                "validDocumentsCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of valid documents. This excludes empty, over-size limit or non-supported languages documents."
                },
                "erroneousDocumentsCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of invalid documents. This includes empty, over-size limit or non-supported languages documents."
                },
                "transactionsCount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Number of transactions for the request."
                }
            },
            "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        },
        "MultiLanguageBatchInput": {
            "type": "object",
            "description": "Contains a set of input records to be analyzed by the service.",
            "required": [
                "records"
            ],
            "properties": {
                "records": {
                    "type": "array",
                    "description": "The set of documents to process as part of this batch.",
                    "items": {
                        "$ref": "#/definitions/MultiLanguageInput"
                        }
                    }
                }
        },
        "MultiLanguageInput": {
            "type": "object",
            "description": "Contains an input record to be analyzed by the service.",
            "required": [
                "id",
                "text"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "A unique, non-empty record identifier."
                },
                "text": {
                    "type": "string",
                    "description": "The input text to process."
                },
                "language": {
                    "type": "string",
                    "description": "(Optional) This is the 2 letter ISO 639-1 representation of a language. For example, use \"en\" for English; \"es\" for Spanish etc. If not set, use \"en\" for English as default."
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "description": "Error response.",
            "additionalProperties": false,
            "properties": {
              "error": {
                "description": "The error object.",
                "$ref": "#/definitions/Error"
              }
            }
        },
        "Error": {
            "type": "object",
            "description": "The error object.",
            "additionalProperties": false,
            "required": [
              "code",
              "message"
            ],
            "properties": {
              "code": {
                "description": "One of a server-defined set of error codes.",
                "$ref": "#/definitions/ErrorCode"
              },
              "message": {
                "type": "string",
                "description": "A human-readable representation of the error."
              },
              "target": {
                "type": "string",
                "description": "The target of the error."
              },
              "details": {
                "type": "array",
                "description": "An array of details about specific errors that led to this reported error.",
                "items": {
                  "$ref": "#/definitions/Error"
                }
              },
              "innererror": {
                "description": "An object containing more specific information than the current object about the error.",
                "$ref": "#/definitions/InnerErrorModel"
              }
            }
        },
        "InnerErrorModel": {
            "type": "object",
            "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
            "additionalProperties": false,
            "required": [
              "code",
              "message"
            ],
            "properties": {
              "code": {
                "description": "One of a server-defined set of error codes.",
                "$ref": "#/definitions/InnerErrorCode"
              },
              "message": {
                "type": "string",
                "description": "Error message."
              },
              "details": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Error details."
              },
              "target": {
                "type": "string",
                "description": "Error target."
              },
              "innererror": {
                "description": "An object containing more specific information than the current object about the error.",
                "$ref": "#/definitions/InnerErrorModel"
              }
            }
        },
        "ErrorCode": {
            "type": "string",
            "description": "Human-readable error code.",
            "x-ms-enum": {
              "name": "ErrorCode",
              "modelAsString": true
            },
            "enum": [
              "InvalidRequest",
              "InvalidArgument",
              "Unauthorized",
              "Forbidden",
              "NotFound",
              "TooManyRequests",
              "InternalServerError",
              "ServiceUnavailable"
            ]
        },
        "InnerErrorCode": {
            "type": "string",
            "description": "Human-readable error code.",
            "x-ms-enum": {
              "name": "InnerErrorCode",
              "modelAsString": true
            },
            "enum": [
              "InvalidRequest",
              "InvalidParameterValue",
              "KnowledgeBaseNotFound",
              "AzureCognitiveSearchNotFound",
              "AzureCognitiveSearchThrottling",
              "ExtractionFailure",
              "InvalidRequestBodyFormat",
              "EmptyRequest",
              "MissingInputDocuments",
              "InvalidDocument",
              "ModelVersionIncorrect",
              "InvalidDocumentBatch",
              "UnsupportedLanguageCode",
              "InvalidCountryHint"
            ]
        }
    },
    "parameters": {
        "Endpoint": {
            "name": "Endpoint",
            "description": "Supported Cognitive Services endpoint (e.g., https://<resource-name>.api.cognitiveservices.azure.com).",
            "x-ms-parameter-location": "client",
            "required": true,
            "type": "string",
            "in": "path",
            "x-ms-skip-url-encoding": true
          },
          "ApiVersionParameter": {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API version."
          },
          "ShowStats": {
            "name": "showStats",
            "in": "query",
            "description": "(Optional) if set to true, response will contain request and record level statistics.",
            "type": "boolean",
            "required": false,
            "x-ms-parameter-location": "method"
          },
          "JobId": {
            "description": "Job ID",
            "format": "uuid",
            "in": "path",
            "name": "jobId",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
    }
}