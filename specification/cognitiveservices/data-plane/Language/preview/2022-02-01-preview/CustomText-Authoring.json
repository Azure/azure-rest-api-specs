{
  "swagger": "2.0",
  "info": {
    "title": "Language Authoring APIs",
    "version": "2022-02-01-preview"
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{Endpoint}/language/analyze-text",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/Endpoint"
      }
    ]
  },
  "securityDefinitions": {
    "apiKeyHeader": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    }
  },
  "security": [
    {
      "apiKeyHeader": []
    }
  ],
  "paths": {
    "/projects": {
      "get": {
        "description": "Returns the list of projects.",
        "operationId": "Projects_GetProjectsList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "top",
            "description": "The number of projects to be returned.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "The offset in the response.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "maxpagesize",
            "description": "The maximum number of projects per page.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The metadata of projects.",
            "schema": {
              "$ref": "#/definitions/ProjectGetObjectList"
            }
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\\r\\n\\r\\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large."
          },
          "401": {
            "description": "You do not have access. \\r\\n\\r\\nReasons can include:\\r\\n\\r\\n* used endpoint subscription key, instead of authoring key\\r\\n* invalid, malformed, or empty authoring key\\r\\n* authoring key doesn't match region\\r\\n* you are not the owner or collaborator\\r\\n* invalid order of API calls."
          },
          "403": {
            "description": "Total monthly key quota limit exceeded."
          },
          "429": {
            "description": "Rate limit is exceeded."
          }
        }
      }
    },
    "/projects/{projectName}": {
      "patch": {
        "description": "Creates a new or update a project.",
        "operationId": "Projects_CreateOrUpdateProject",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectName",
            "description": "The project name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "projectCreateObject",
            "description": "The project parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectCreateObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The metadata of the updated project, if it already exists.",
            "schema": {
              "$ref": "#/definitions/ProjectGetObject"
            }
          },
          "201": {
            "description": "The metadata of the created project.",
            "schema": {
              "$ref": "#/definitions/ProjectGetObject"
            }
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\\r\\n\\r\\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large."
          },
          "401": {
            "description": "You do not have access. \\r\\n\\r\\nReasons can include:\\r\\n\\r\\n* used endpoint subscription key, instead of authoring key\\r\\n* invalid, malformed, or empty authoring key\\r\\n* authoring key doesn't match region\\r\\n* you are not the owner or collaborator\\r\\n* invalid order of API calls."
          },
          "403": {
            "description": "Total monthly key quota limit exceeded."
          },
          "429": {
            "description": "Rate limit is exceeded."
          }
        }
      },
      "get": {
        "description": "Gets a project info.",
        "operationId": "Projects_GetProject",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectName",
            "description": "The project name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The metadata of the project.",
            "schema": {
              "$ref": "#/definitions/ProjectGetObject"
            }
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\\r\\n\\r\\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large."
          },
          "401": {
            "description": "You do not have access. \\r\\n\\r\\nReasons can include:\\r\\n\\r\\n* used endpoint subscription key, instead of authoring key\\r\\n* invalid, malformed, or empty authoring key\\r\\n* authoring key doesn't match region\\r\\n* you are not the owner or collaborator\\r\\n* invalid order of API calls."
          },
          "403": {
            "description": "Total monthly key quota limit exceeded."
          },
          "404": {
            "description": "The project does not exist."
          },
          "429": {
            "description": "Rate limit is exceeded."
          }
        }
      },
      "delete": {
        "description": "Deletes a project.",
        "operationId": "Projects_DeleteProject",
        "parameters": [
          {
            "in": "path",
            "name": "projectName",
            "description": "The project name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Successfully triggered the project deletion operation..",
            "headers": {
              "operation-location": {
                "description": "The location of the status API for monitoring the created job.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\\r\\n\\r\\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large."
          },
          "401": {
            "description": "You do not have access. \\r\\n\\r\\nReasons can include:\\r\\n\\r\\n* used endpoint subscription key, instead of authoring key\\r\\n* invalid, malformed, or empty authoring key\\r\\n* authoring key doesn't match region\\r\\n* you are not the owner or collaborator\\r\\n* invalid order of API calls."
          },
          "403": {
            "description": "Total monthly key quota limit exceeded."
          },
          "404": {
            "description": "The project does not exist."
          },
          "429": {
            "description": "Rate limit is exceeded."
          }
        }
      }
    },
    "/projects/{projectName}/:export": {
      "post": {
        "description": "Triggers a job to export project data in JSON format.",
        "operationId": "Projects_TriggerExportProjectJob",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectName",
            "description": "The project name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "format",
            "description": "The format of the project to export. The currently supported format is `JSON`.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "ProjectFileExportObject",
            "description": "The export job create object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectFileExport"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "headers": {
              "operation-location": {
                "description": "The location of the status API for monitoring the created job.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\\r\\n\\r\\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large."
          },
          "401": {
            "description": "You do not have access. \\r\\n\\r\\nReasons can include:\\r\\n\\r\\n* used endpoint subscription key, instead of authoring key\\r\\n* invalid, malformed, or empty authoring key\\r\\n* authoring key doesn't match region\\r\\n* you are not the owner or collaborator\\r\\n* invalid order of API calls."
          },
          "403": {
            "description": "Total monthly key quota limit exceeded."
          },
          "404": {
            "description": "The project does not exist."
          },
          "429": {
            "description": "Rate limit is exceeded."
          }
        }
      }
    },
    "/projects/{projectName}/:import": {
      "post": {
        "description": "Triggers a job to import a project in JSON format. If a project with the same name already exists, the data of that project is replaced.",
        "operationId": "Projects_TriggerImportProjectJob",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectName",
            "description": "The project name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "format",
            "description": "The format of the project to import. The currently supported format is json format.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "projectFileImportObject",
            "description": "The project data to import.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonProject"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation-location header for the status of the job.",
            "headers": {
              "operation-location": {
                "description": "The location of the status API for monitoring the created job.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\\r\\n\\r\\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large."
          },
          "401": {
            "description": "You do not have access. \\r\\n\\r\\nReasons can include:\\r\\n\\r\\n* used endpoint subscription key, instead of authoring key\\r\\n* invalid, malformed, or empty authoring key\\r\\n* authoring key doesn't match region\\r\\n* you are not the owner or collaborator\\r\\n* invalid order of API calls."
          },
          "403": {
            "description": "Total monthly key quota limit exceeded."
          },
          "404": {
            "description": "The project does not exist."
          },
          "429": {
            "description": "Rate limit is exceeded."
          }
        }
      }
    },
    "/projects/{projectName}/:train": {
      "post": {
        "description": "Trigger training job.",
        "operationId": "Training_TriggerTrainingJob",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectName",
            "description": "The project name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "trainingJobCreateObject",
            "description": "The training input parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TrainingJobCreate"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation-location header for the status of the job.",
            "headers": {
              "operation-location": {
                "description": "The location of the status API for monitoring the created job.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\\r\\n\\r\\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large."
          },
          "401": {
            "description": "You do not have access. \\r\\n\\r\\nReasons can include:\\r\\n\\r\\n* used endpoint subscription key, instead of authoring key\\r\\n* invalid, malformed, or empty authoring key\\r\\n* authoring key doesn't match region\\r\\n* you are not the owner or collaborator\\r\\n* invalid order of API calls."
          },
          "403": {
            "description": "Total monthly key quota limit exceeded."
          },
          "404": {
            "description": "The project does not exist."
          },
          "409": {
            "description": "Training job already inprogress."
          },
          "429": {
            "description": "Rate limit is exceeded."
          }
        }
      }
    },
    "/projects/{projectName}/deployments": {
      "get": {
        "description": "List all deployments.",
        "operationId": "Deployments_GetDeploymentsList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectName",
            "description": "The project name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "top",
            "description": "The number of deployments to be returned.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "The offset in the response.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "maxpagesize",
            "description": "The maximum number of deployments per page.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all deployments.",
            "schema": {
              "$ref": "#/definitions/DeploymentObjectList"
            }
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\\r\\n\\r\\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large."
          },
          "401": {
            "description": "You do not have access. \\r\\n\\r\\nReasons can include:\\r\\n\\r\\n* used endpoint subscription key, instead of authoring key\\r\\n* invalid, malformed, or empty authoring key\\r\\n* authoring key doesn't match region\\r\\n* you are not the owner or collaborator\\r\\n* invalid order of API calls."
          },
          "403": {
            "description": "Total monthly key quota limit exceeded."
          },
          "404": {
            "description": "The project does not exist."
          },
          "429": {
            "description": "Rate limit is exceeded."
          }
        }
      }
    },
    "/projects/{projectName}/deployments/:swap": {
      "post": {
        "description": "Trigger job to swap two deployments.",
        "operationId": "Deployments_TriggerSwapDeployments",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectName",
            "description": "The project name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "swappingDeploymentJobObject",
            "description": "The job object to swap two deployments.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SwapDeploymentsJobObject"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation-location header for the status of the job.",
            "headers": {
              "operation-location": {
                "description": "The location of the status API for monitoring the created job.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\\r\\n\\r\\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large."
          },
          "401": {
            "description": "You do not have access. \\r\\n\\r\\nReasons can include:\\r\\n\\r\\n* used endpoint subscription key, instead of authoring key\\r\\n* invalid, malformed, or empty authoring key\\r\\n* authoring key doesn't match region\\r\\n* you are not the owner or collaborator\\r\\n* invalid order of API calls."
          },
          "403": {
            "description": "Total monthly key quota limit exceeded."
          },
          "404": {
            "description": "The project does not exist."
          },
          "409": {
            "description": "Deployment job already inprogress."
          },
          "429": {
            "description": "Rate limit is exceeded."
          }
        }
      }
    },
    "/projects/{projectName}/deployments/{deploymentName}": {
      "get": {
        "description": "Get a deployment info.",
        "operationId": "Deployments_GetDeployment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectName",
            "description": "The project name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "The deployment name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The Deployment info.",
            "schema": {
              "$ref": "#/definitions/DeploymentJobResultObject"
            }
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\\r\\n\\r\\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large."
          },
          "401": {
            "description": "You do not have access. \\r\\n\\r\\nReasons can include:\\r\\n\\r\\n* used endpoint subscription key, instead of authoring key\\r\\n* invalid, malformed, or empty authoring key\\r\\n* authoring key doesn't match region\\r\\n* you are not the owner or collaborator\\r\\n* invalid order of API calls."
          },
          "403": {
            "description": "Total monthly key quota limit exceeded."
          },
          "404": {
            "description": "The project does not exist."
          },
          "429": {
            "description": "Rate limit is exceeded."
          }
        }
      },
      "put": {
        "description": "Trigger a new deployment or replace an existing one.",
        "operationId": "Deployments_TriggerDeploymentJob",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectName",
            "description": "The project name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "The deployment name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "createOrReplaceDeploymentJobObject",
            "description": "The new deployment info.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateOrReplaceDeploymentJobObject"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation-location header for the status of the job.",
            "headers": {
              "operation-location": {
                "description": "The location of the status API for monitoring the created job.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\\r\\n\\r\\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large."
          },
          "401": {
            "description": "You do not have access. \\r\\n\\r\\nReasons can include:\\r\\n\\r\\n* used endpoint subscription key, instead of authoring key\\r\\n* invalid, malformed, or empty authoring key\\r\\n* authoring key doesn't match region\\r\\n* you are not the owner or collaborator\\r\\n* invalid order of API calls."
          },
          "403": {
            "description": "Total monthly key quota limit exceeded."
          },
          "404": {
            "description": "The project does not exist."
          },
          "429": {
            "description": "Rate limit is exceeded."
          }
        }
      },
      "delete": {
        "description": "Delete a deployment.",
        "operationId": "Deployments_TriggerDeleteDeployment",
        "parameters": [
          {
            "in": "path",
            "name": "projectName",
            "description": "The project name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "The deployment name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "operation-location header for the status of the job.",
            "headers": {
              "operation-location": {
                "description": "The location of the status API for monitoring the created job.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\\r\\n\\r\\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large."
          },
          "401": {
            "description": "You do not have access. \\r\\n\\r\\nReasons can include:\\r\\n\\r\\n* used endpoint subscription key, instead of authoring key\\r\\n* invalid, malformed, or empty authoring key\\r\\n* authoring key doesn't match region\\r\\n* you are not the owner or collaborator\\r\\n* invalid order of API calls."
          },
          "403": {
            "description": "Total monthly key quota limit exceeded."
          },
          "404": {
            "description": "The project does not exist."
          },
          "429": {
            "description": "Rate limit is exceeded."
          }
        }
      }
    },
    "/projects/{projectName}/deployments/{deploymentName}/jobs/{jobId}": {
      "get": {
        "description": "Get deployment job status and result details.",
        "operationId": "Deployments_GetDeploymentJobStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectName",
            "description": "The project name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "The deployment name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "jobId",
            "description": "The job ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The deployment job result.",
            "schema": {
              "$ref": "#/definitions/DeploymentJobStatusObject"
            }
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\\r\\n\\r\\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large."
          },
          "401": {
            "description": "You do not have access. \\r\\n\\r\\nReasons can include:\\r\\n\\r\\n* used endpoint subscription key, instead of authoring key\\r\\n* invalid, malformed, or empty authoring key\\r\\n* authoring key doesn't match region\\r\\n* you are not the owner or collaborator\\r\\n* invalid order of API calls."
          },
          "403": {
            "description": "Total monthly key quota limit exceeded."
          },
          "404": {
            "description": "The project does not exist."
          },
          "429": {
            "description": "Rate limit is exceeded."
          }
        }
      }
    },
    "/projects/{projectName}/deployments/swap/jobs/{jobId}": {
      "get": {
        "description": "Gets a swap deployment job status and result details.",
        "operationId": "Deployments_GetSwapDeploymentJobStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectName",
            "description": "The project name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "jobId",
            "description": "The job ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The swap deployment job result.",
            "schema": {
              "$ref": "#/definitions/DeploymentJobStatusObject"
            }
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\\r\\n\\r\\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large."
          },
          "401": {
            "description": "You do not have access. \\r\\n\\r\\nReasons can include:\\r\\n\\r\\n* used endpoint subscription key, instead of authoring key\\r\\n* invalid, malformed, or empty authoring key\\r\\n* authoring key doesn't match region\\r\\n* you are not the owner or collaborator\\r\\n* invalid order of API calls."
          },
          "403": {
            "description": "Total monthly key quota limit exceeded."
          },
          "404": {
            "description": "The project does not exist."
          },
          "429": {
            "description": "Rate limit is exceeded."
          }
        }
      }
    },
    "/projects/{projectName}/export/jobs/{jobId}": {
      "get": {
        "description": "Get export job status details.",
        "operationId": "Projects_GetExportProjectJobStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectName",
            "description": "The project name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "jobId",
            "description": "The job Id.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The status of the long running operation.",
            "schema": {
              "$ref": "#/definitions/ProjectFileExportJobStatus"
            }
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\\r\\n\\r\\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large."
          },
          "401": {
            "description": "You do not have access. \\r\\n\\r\\nReasons can include:\\r\\n\\r\\n* used endpoint subscription key, instead of authoring key\\r\\n* invalid, malformed, or empty authoring key\\r\\n* authoring key doesn't match region\\r\\n* you are not the owner or collaborator\\r\\n* invalid order of API calls."
          },
          "403": {
            "description": "Total monthly key quota limit exceeded."
          },
          "404": {
            "description": "The project does not exist."
          },
          "429": {
            "description": "Rate limit is exceeded."
          }
        }
      }
    },
    "/projects/{projectName}/import/jobs/{jobId}": {
      "get": {
        "description": "Get import or replace project job status and result details.",
        "operationId": "Projects_GetImportProjectJobStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectName",
            "description": "The project name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "jobId",
            "description": "The job Id.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The details of the long running operation.",
            "schema": {
              "$ref": "#/definitions/ProjectFileImportJobStatus"
            }
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\\r\\n\\r\\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large."
          },
          "401": {
            "description": "You do not have access. \\r\\n\\r\\nReasons can include:\\r\\n\\r\\n* used endpoint subscription key, instead of authoring key\\r\\n* invalid, malformed, or empty authoring key\\r\\n* authoring key doesn't match region\\r\\n* you are not the owner or collaborator\\r\\n* invalid order of API calls."
          },
          "403": {
            "description": "Total monthly key quota limit exceeded."
          },
          "404": {
            "description": "The project does not exist."
          },
          "429": {
            "description": "Rate limit is exceeded."
          }
        }
      }
    },
    "/projects/{projectName}/models": {
      "get": {
        "description": "List all trained models.",
        "operationId": "Models_GetTrainedModels",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectName",
            "description": "The project name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "top",
            "description": "The number of trained models to be returned.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "The offset in the response.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "maxpagesize",
            "description": "The maximum number of trained models per page.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all trained models.",
            "schema": {
              "$ref": "#/definitions/TrainedModelObjectList"
            }
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\\r\\n\\r\\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large."
          },
          "401": {
            "description": "You do not have access. \\r\\n\\r\\nReasons can include:\\r\\n\\r\\n* used endpoint subscription key, instead of authoring key\\r\\n* invalid, malformed, or empty authoring key\\r\\n* authoring key doesn't match region\\r\\n* you are not the owner or collaborator\\r\\n* invalid order of API calls."
          },
          "403": {
            "description": "Total monthly key quota limit exceeded."
          },
          "404": {
            "description": "The project does not exist."
          },
          "429": {
            "description": "Rate limit is exceeded."
          }
        }
      }
    },
    "/projects/{projectName}/models/{trainedModelName}": {
      "get": {
        "description": "Get a trained model info.",
        "operationId": "Models_GetTrainedModel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectName",
            "description": "The project name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "trainedModelName",
            "description": "The trained model name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Trianed model info",
            "schema": {
              "$ref": "#/definitions/TrainedModelObject"
            }
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\\r\\n\\r\\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large."
          },
          "401": {
            "description": "You do not have access. \\r\\n\\r\\nReasons can include:\\r\\n\\r\\n* used endpoint subscription key, instead of authoring key\\r\\n* invalid, malformed, or empty authoring key\\r\\n* authoring key doesn't match region\\r\\n* you are not the owner or collaborator\\r\\n* invalid order of API calls."
          },
          "403": {
            "description": "Total monthly key quota limit exceeded."
          },
          "404": {
            "description": "The project does not exist."
          },
          "429": {
            "description": "Rate limit is exceeded."
          }
        }
      },
      "delete": {
        "description": "Delete a trained model.",
        "operationId": "Models_DeleteTrainedModel",
        "parameters": [
          {
            "in": "path",
            "name": "projectName",
            "description": "The project name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "trainedModelName",
            "description": "The trained model name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted successfully."
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\\r\\n\\r\\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large."
          },
          "401": {
            "description": "You do not have access. \\r\\n\\r\\nReasons can include:\\r\\n\\r\\n* used endpoint subscription key, instead of authoring key\\r\\n* invalid, malformed, or empty authoring key\\r\\n* authoring key doesn't match region\\r\\n* you are not the owner or collaborator\\r\\n* invalid order of API calls."
          },
          "403": {
            "description": "Total monthly key quota limit exceeded."
          },
          "404": {
            "description": "The project does not exist."
          },
          "429": {
            "description": "Rate limit is exceeded."
          }
        }
      }
    },
    "/projects/{projectName}/models/{trainedModelName}/evaluation": {
      "get": {
        "description": "Get trained model evaluation report.",
        "operationId": "Models_GetTrainedModelEvaluation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectName",
            "description": "The project name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "trainedModelName",
            "description": "The trained model name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all evaluation results.",
            "schema": {
              "$ref": "#/definitions/EvaluationResultObject"
            }
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\\r\\n\\r\\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large."
          },
          "401": {
            "description": "You do not have access. \\r\\n\\r\\nReasons can include:\\r\\n\\r\\n* used endpoint subscription key, instead of authoring key\\r\\n* invalid, malformed, or empty authoring key\\r\\n* authoring key doesn't match region\\r\\n* you are not the owner or collaborator\\r\\n* invalid order of API calls."
          },
          "403": {
            "description": "Total monthly key quota limit exceeded."
          },
          "404": {
            "description": "The project does not exist."
          },
          "429": {
            "description": "Rate limit is exceeded."
          }
        }
      }
    },
    "/projects/{projectName}/models/{trainedModelName}/verification": {
      "get": {
        "description": "Get trained model verification report.",
        "operationId": "Models_GetTrainedModelVerification",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectName",
            "description": "The project name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "trainedModelName",
            "description": "The trained model name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all verification results.",
            "schema": {
              "$ref": "#/definitions/VerificationResultsObject"
            }
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\\r\\n\\r\\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large."
          },
          "401": {
            "description": "You do not have access. \\r\\n\\r\\nReasons can include:\\r\\n\\r\\n* used endpoint subscription key, instead of authoring key\\r\\n* invalid, malformed, or empty authoring key\\r\\n* authoring key doesn't match region\\r\\n* you are not the owner or collaborator\\r\\n* invalid order of API calls."
          },
          "403": {
            "description": "Total monthly key quota limit exceeded."
          },
          "404": {
            "description": "The project does not exist."
          },
          "429": {
            "description": "Rate limit is exceeded."
          }
        }
      }
    },
    "/projects/{projectName}/train/jobs": {
      "get": {
        "description": "Get training jobs.",
        "operationId": "Training_GetTrainingJobsList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectName",
            "description": "The project name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "top",
            "description": "The number of training jobs to be returned.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "The offset in the response.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "maxpagesize",
            "description": "The maximum number of training jobs per page.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of the training jobs.",
            "schema": {
              "$ref": "#/definitions/TrainingJobStatusList"
            }
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\\r\\n\\r\\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large."
          },
          "401": {
            "description": "You do not have access. \\r\\n\\r\\nReasons can include:\\r\\n\\r\\n* used endpoint subscription key, instead of authoring key\\r\\n* invalid, malformed, or empty authoring key\\r\\n* authoring key doesn't match region\\r\\n* you are not the owner or collaborator\\r\\n* invalid order of API calls."
          },
          "403": {
            "description": "Total monthly key quota limit exceeded."
          },
          "404": {
            "description": "The project or the job does not exist."
          },
          "429": {
            "description": "Rate limit is exceeded."
          }
        }
      }
    },
    "/projects/{projectName}/train/jobs/{jobId}": {
      "get": {
        "description": "Get training job status and result details.",
        "operationId": "Training_GetTrainingJobStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectName",
            "description": "The project name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "jobId",
            "description": "The job ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The training job result.",
            "schema": {
              "$ref": "#/definitions/TrainingJobResult"
            }
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\\r\\n\\r\\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large."
          },
          "401": {
            "description": "You do not have access. \\r\\n\\r\\nReasons can include:\\r\\n\\r\\n* used endpoint subscription key, instead of authoring key\\r\\n* invalid, malformed, or empty authoring key\\r\\n* authoring key doesn't match region\\r\\n* you are not the owner or collaborator\\r\\n* invalid order of API calls."
          },
          "403": {
            "description": "Total monthly key quota limit exceeded."
          },
          "404": {
            "description": "The project or the job does not exist."
          },
          "429": {
            "description": "Rate limit is exceeded."
          }
        }
      }
    },
    "/projects/deletion/jobs/{jobId}": {
      "get": {
        "description": "Get project deletion job status and result details.",
        "operationId": "Projects_GetProjectDeletionJobStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "description": "The job ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The project deletion job result.",
            "schema": {
              "$ref": "#/definitions/ProjectDeletionJobStatusObject"
            }
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\\r\\n\\r\\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large."
          },
          "401": {
            "description": "You do not have access. \\r\\n\\r\\nReasons can include:\\r\\n\\r\\n* used endpoint subscription key, instead of authoring key\\r\\n* invalid, malformed, or empty authoring key\\r\\n* authoring key doesn't match region\\r\\n* you are not the owner or collaborator\\r\\n* invalid order of API calls."
          },
          "403": {
            "description": "Total monthly key quota limit exceeded."
          },
          "404": {
            "description": "The operation does not exist."
          },
          "429": {
            "description": "Rate limit is exceeded."
          }
        }
      }
    },
    "/projects/languages": {
      "get": {
        "description": "Get List of Supported languages.",
        "operationId": "Projects_GetSupportedCultures",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of supported languages.",
            "schema": {
              "$ref": "#/definitions/LanguagesGetObject"
            }
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\\r\\n\\r\\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large."
          },
          "401": {
            "description": "You do not have access. \\r\\n\\r\\nReasons can include:\\r\\n\\r\\n* used endpoint subscription key, instead of authoring key\\r\\n* invalid, malformed, or empty authoring key\\r\\n* authoring key doesn't match region\\r\\n* you are not the owner or collaborator\\r\\n* invalid order of API calls."
          },
          "403": {
            "description": "Total monthly key quota limit exceeded."
          },
          "404": {
            "description": "The project does not exist."
          },
          "429": {
            "description": "Rate limit is exceeded."
          }
        }
      }
    }
  },
  "definitions": {
    "ConfusionMatrixObject": {
      "required": [
        "normalizedValue",
        "rawValue"
      ],
      "type": "object",
      "properties": {
        "normalizedValue": {
          "format": "float",
          "description": "Represents normalized value in percentages.",
          "type": "number"
        },
        "rawValue": {
          "format": "float",
          "description": "Represents raw value.",
          "type": "number"
        }
      }
    },
    "CreateOrReplaceDeploymentJobObject": {
      "required": [
        "trainedModelLabel"
      ],
      "type": "object",
      "properties": {
        "trainedModelLabel": {
          "description": "Represents the trained model name.",
          "type": "string"
        }
      }
    },
    "DeploymentJobResultObject": {
      "required": [
        "name",
        "modelId",
        "lastTrainedDateTime",
        "lastDeployedDateTime"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets the deployment name.",
          "type": "string"
        },
        "modelId": {
          "description": "Gets or sets the deployment modelId.",
          "type": "string"
        },
        "lastTrainedDateTime": {
          "format": "date-time",
          "description": "Gets or sets the deployment last trained time.",
          "type": "string"
        },
        "lastDeployedDateTime": {
          "format": "date-time",
          "description": "Gets or sets the deployment last deployed time.",
          "type": "string"
        }
      }
    },
    "DeploymentJobStatusObject": {
      "required": [
        "jobId",
        "createdDateTime",
        "lastUpdatedDateTime",
        "expirationDateTime",
        "status",
        "errors"
      ],
      "type": "object",
      "properties": {
        "jobId": {
          "description": "Gets or sets the jobId.",
          "type": "string"
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "Gets or sets the created time.",
          "type": "string"
        },
        "lastUpdatedDateTime": {
          "format": "date-time",
          "description": "Gets or sets the last updated time.",
          "type": "string"
        },
        "expirationDateTime": {
          "format": "date-time",
          "description": "Gets or sets the expiration time.",
          "type": "string"
        },
        "status": {
          "description": "Gets or sets the job status.",
          "enum": [
            "unknown",
            "notStarted",
            "running",
            "succeeded",
            "failed",
            "cancelled",
            "cancelling",
            "partiallyCompleted"
          ],
          "type": "string"
        },
        "errors": {
          "description": "Gets or sets the errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobError"
          }
        }
      }
    },
    "DeploymentObjectList": {
      "required": [
        "value",
        "nextLink"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the deployments.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentJobResultObject"
          }
        },
        "nextLink": {
          "description": "Gets or sets the next page link.",
          "type": "string"
        }
      }
    },
    "EvaluationOptions": {
      "type": "object",
      "properties": {
        "runEvaluation": {
          "description": "Represents the option to run evaluations. By default, evaluations are turned on.",
          "type": "boolean"
        },
        "type": {
          "enum": [
            "percentage",
            "set"
          ],
          "type": "string"
        },
        "trainingSplitPercentage": {
          "format": "int32",
          "description": "Represents the training dataset split percentage. Only needed in case  is .",
          "type": "integer"
        },
        "testingSplitPercentage": {
          "format": "int32",
          "description": "Represents the testing dataset split percentage. Only needed in case  is .",
          "type": "integer"
        }
      }
    },
    "EvaluationResultClassifierAndExtractorObject": {
      "required": [
        "f1",
        "precision",
        "recall",
        "truePositivesCount",
        "trueNegativesCount",
        "falsePositivesCount",
        "falseNegativesCount"
      ],
      "type": "object",
      "properties": {
        "f1": {
          "format": "double",
          "description": "Represents the model precision",
          "type": "number"
        },
        "precision": {
          "format": "double",
          "description": "Represents the model recall",
          "type": "number"
        },
        "recall": {
          "format": "double",
          "description": "Represents the model F1 score",
          "type": "number"
        },
        "truePositivesCount": {
          "format": "int32",
          "description": "Represents the count of true positives",
          "type": "integer"
        },
        "trueNegativesCount": {
          "format": "int32",
          "description": "Represents the count of true negatives",
          "type": "integer"
        },
        "falsePositivesCount": {
          "format": "int32",
          "description": "Represents the count of false positives",
          "type": "integer"
        },
        "falseNegativesCount": {
          "format": "int32",
          "description": "Represents the count of false negatives",
          "type": "integer"
        }
      }
    },
    "EvaluationResultExtractionObject": {
      "required": [
        "confusionMatrix",
        "extractors",
        "microF1",
        "microPrecision",
        "microRecall",
        "macroF1",
        "macroPrecision",
        "macroRecall"
      ],
      "type": "object",
      "properties": {
        "confusionMatrix": {
          "description": "Represents the confusion matrix between two extractors (the two extractors can be the same extractor)\n            the matrix is between the actual extractor that was labelled and the extractor that was predited.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/ConfusionMatrixObject"
            }
          }
        },
        "extractors": {
          "description": "Represents the extractors evaluation",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/EvaluationResultClassifierAndExtractorObject"
          }
        },
        "microF1": {
          "format": "float",
          "description": "Represents the micro F1",
          "type": "number"
        },
        "microPrecision": {
          "format": "float",
          "description": "Represents the micro precision",
          "type": "number"
        },
        "microRecall": {
          "format": "float",
          "description": "Represents the micro recall",
          "type": "number"
        },
        "macroF1": {
          "format": "float",
          "description": "Represents the macro F1",
          "type": "number"
        },
        "macroPrecision": {
          "format": "float",
          "description": "Represents the macro precision",
          "type": "number"
        },
        "macroRecall": {
          "format": "float",
          "description": "Represents the macro recall",
          "type": "number"
        }
      }
    },
    "EvaluationResultMultiClassificationObject": {
      "required": [
        "confusionMatrix",
        "classifiers",
        "microF1",
        "microPrecision",
        "microRecall",
        "macroF1",
        "macroPrecision",
        "macroRecall"
      ],
      "type": "object",
      "properties": {
        "confusionMatrix": {
          "description": "Represents the confusion matrix between two classifiers (the two classifiers can be the same entity)\n            the matrix is between the actual classifier that was labelled and the classifier that was predited.\n            Only available for single classification.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/ConfusionMatrixObject"
            }
          }
        },
        "classifiers": {
          "description": "Represents the classifiers evaluation",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/EvaluationResultClassifierAndExtractorObject"
          }
        },
        "microF1": {
          "format": "float",
          "description": "Represents the micro F1",
          "type": "number"
        },
        "microPrecision": {
          "format": "float",
          "description": "Represents the micro precision",
          "type": "number"
        },
        "microRecall": {
          "format": "float",
          "description": "Represents the micro recall",
          "type": "number"
        },
        "macroF1": {
          "format": "float",
          "description": "Represents the macro F1",
          "type": "number"
        },
        "macroPrecision": {
          "format": "float",
          "description": "Represents the macro precision",
          "type": "number"
        },
        "macroRecall": {
          "format": "float",
          "description": "Represents the macro recall",
          "type": "number"
        }
      }
    },
    "EvaluationResultObject": {
      "required": [
        "modelType",
        "extractionEvaluation",
        "classificationEvaluation"
      ],
      "type": "object",
      "properties": {
        "modelType": {
          "description": "Represents the model type.",
          "enum": [
            "singleClassification",
            "multiClassification",
            "extraction"
          ],
          "type": "string"
        },
        "extractionEvaluation": {
          "description": "Contains the data related to extraction evaluation.",
          "$ref": "#/definitions/EvaluationResultExtractionObject"
        },
        "classificationEvaluation": {
          "description": "Contains the data related to classification evaluation.",
          "$ref": "#/definitions/EvaluationResultMultiClassificationObject"
        }
      }
    },
    "JobError": {
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets or sets the error code.",
          "enum": [
            "unknown",
            "notFound",
            "invalidOperation"
          ],
          "type": "string"
        },
        "message": {
          "description": "Gets or sets the Error Message.",
          "type": "string"
        }
      }
    },
    "JsonClass": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "JsonClassifierLabel": {
      "type": "object",
      "properties": {
        "classifierName": {
          "type": "string"
        }
      }
    },
    "JsonDocument": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "classifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JsonClassifierLabel"
          }
        },
        "extractors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JsonExtractorRegionLabel"
          }
        },
        "dataset": {
          "description": "The dataset for this document. Allowed values are 'Train' and 'Test'.",
          "type": "string"
        }
      }
    },
    "JsonEntity": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "JsonExtractorLabel": {
      "type": "object",
      "properties": {
        "extractorName": {
          "type": "string"
        },
        "offset": {
          "format": "int32",
          "type": "integer"
        },
        "length": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "JsonExtractorRegionLabel": {
      "type": "object",
      "properties": {
        "regionOffset": {
          "format": "int32",
          "type": "integer"
        },
        "regionLength": {
          "format": "int32",
          "type": "integer"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JsonExtractorLabel"
          }
        }
      }
    },
    "JsonProject": {
      "required": [
        "metadata"
      ],
      "type": "object",
      "properties": {
        "api-version": {
          "type": "string"
        },
        "metadata": {
          "description": "Represents the project metadata.",
          "$ref": "#/definitions/JsonProjectMetadata"
        },
        "assets": {
          "description": "Represents the project assets.",
          "$ref": "#/definitions/JsonProjectAssets"
        }
      }
    },
    "JsonProjectAssets": {
      "type": "object",
      "properties": {
        "classifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JsonClass"
          }
        },
        "extractors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JsonEntity"
          }
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JsonDocument"
          }
        }
      }
    },
    "JsonProjectMetadata": {
      "required": [
        "modelType",
        "storageInputContainerName",
        "settings",
        "name",
        "language"
      ],
      "type": "object",
      "properties": {
        "modelType": {
          "description": "Gets or sets the new project model type.",
          "enum": [
            "singleClassification",
            "multiClassification",
            "extraction"
          ],
          "type": "string"
        },
        "storageInputContainerName": {
          "description": "Gets or sets the storage container name.",
          "type": "string"
        },
        "settings": {
          "description": "Gets or sets the project settings.",
          "$ref": "#/definitions/ProjectSettings"
        },
        "name": {
          "description": "Gets or sets the new project name.",
          "type": "string"
        },
        "multilingual": {
          "description": "Gets or sets a value indicating whether gets or sets whether the project is multilingual or not.",
          "type": "boolean"
        },
        "description": {
          "description": "Gets or sets the new project description.",
          "type": "string"
        },
        "language": {
          "description": "Gets or sets the project language.",
          "type": "string"
        }
      }
    },
    "LanguageGetObject": {
      "required": [
        "name",
        "languageCode"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets the language name.",
          "type": "string"
        },
        "languageCode": {
          "description": "Gets or sets the language code.",
          "type": "string"
        }
      }
    },
    "LanguagesGetObject": {
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the languages.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageGetObject"
          }
        }
      }
    },
    "ProjectCreateObject": {
      "required": [
        "modelType",
        "storageInputContainerName",
        "settings",
        "name",
        "language"
      ],
      "type": "object",
      "properties": {
        "modelType": {
          "description": "Gets or sets the new project model type.",
          "enum": [
            "singleClassification",
            "multiClassification",
            "extraction"
          ],
          "type": "string"
        },
        "storageInputContainerName": {
          "description": "Gets or sets the storage container name.",
          "type": "string"
        },
        "settings": {
          "description": "Gets or sets the project settings.",
          "$ref": "#/definitions/ProjectSettings"
        },
        "name": {
          "description": "Gets or sets the new project name.",
          "type": "string"
        },
        "multilingual": {
          "description": "Gets or sets a value indicating whether gets or sets whether the project is multilingual or not.",
          "type": "boolean"
        },
        "description": {
          "description": "Gets or sets the new project description.",
          "type": "string"
        },
        "language": {
          "description": "Gets or sets the project language.",
          "type": "string"
        }
      }
    },
    "ProjectDeletionJobStatusObject": {
      "required": [
        "jobId",
        "createdDateTime",
        "lastUpdatedDateTime",
        "expirationDateTime",
        "status",
        "errors"
      ],
      "type": "object",
      "properties": {
        "jobId": {
          "description": "Gets or sets the jobId.",
          "type": "string"
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "Gets or sets the created time.",
          "type": "string"
        },
        "lastUpdatedDateTime": {
          "format": "date-time",
          "description": "Gets or sets the last updated time.",
          "type": "string"
        },
        "expirationDateTime": {
          "format": "date-time",
          "description": "Gets or sets the expiration time.",
          "type": "string"
        },
        "status": {
          "description": "Gets or sets the job status.",
          "enum": [
            "unknown",
            "notStarted",
            "running",
            "succeeded",
            "failed",
            "cancelled",
            "cancelling",
            "partiallyCompleted"
          ],
          "type": "string"
        },
        "errors": {
          "description": "Gets or sets the errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobError"
          }
        }
      }
    },
    "ProjectFileExport": {
      "required": [
        "assetsToExport"
      ],
      "type": "object",
      "properties": {
        "assetsToExport": {
          "description": "Gets or sets the assets to export.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ProjectFileExportJobStatus": {
      "required": [
        "jobId",
        "createdDateTime",
        "lastUpdatedDateTime",
        "expirationDateTime",
        "status",
        "errors"
      ],
      "type": "object",
      "properties": {
        "resultUrl": {
          "type": "string"
        },
        "jobId": {
          "description": "Gets or sets the jobId.",
          "type": "string"
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "Gets or sets the created time.",
          "type": "string"
        },
        "lastUpdatedDateTime": {
          "format": "date-time",
          "description": "Gets or sets the last updated time.",
          "type": "string"
        },
        "expirationDateTime": {
          "format": "date-time",
          "description": "Gets or sets the expiration time.",
          "type": "string"
        },
        "status": {
          "description": "Gets or sets the job status.",
          "enum": [
            "unknown",
            "notStarted",
            "running",
            "succeeded",
            "failed",
            "cancelled",
            "cancelling",
            "partiallyCompleted"
          ],
          "type": "string"
        },
        "errors": {
          "description": "Gets or sets the errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobError"
          }
        }
      }
    },
    "ProjectFileImportJobStatus": {
      "required": [
        "jobId",
        "createdDateTime",
        "lastUpdatedDateTime",
        "expirationDateTime",
        "status",
        "errors"
      ],
      "type": "object",
      "properties": {
        "jobId": {
          "description": "Gets or sets the jobId.",
          "type": "string"
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "Gets or sets the created time.",
          "type": "string"
        },
        "lastUpdatedDateTime": {
          "format": "date-time",
          "description": "Gets or sets the last updated time.",
          "type": "string"
        },
        "expirationDateTime": {
          "format": "date-time",
          "description": "Gets or sets the expiration time.",
          "type": "string"
        },
        "status": {
          "description": "Gets or sets the job status.",
          "enum": [
            "unknown",
            "notStarted",
            "running",
            "succeeded",
            "failed",
            "cancelled",
            "cancelling",
            "partiallyCompleted"
          ],
          "type": "string"
        },
        "errors": {
          "description": "Gets or sets the errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobError"
          }
        }
      }
    },
    "ProjectGetObject": {
      "required": [
        "createdDateTime",
        "lastModifiedDateTime",
        "lastTrainedDateTime",
        "lastDeployedDateTime",
        "modelType",
        "storageInputContainerName",
        "settings",
        "name",
        "language"
      ],
      "type": "object",
      "properties": {
        "createdDateTime": {
          "format": "date-time",
          "description": "Represents the project creation datetime.",
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "Represents the project creation datetime.",
          "type": "string"
        },
        "lastTrainedDateTime": {
          "format": "date-time",
          "description": "Represents the project last trained datetime.",
          "type": "string"
        },
        "lastDeployedDateTime": {
          "format": "date-time",
          "description": "Represents the project last deployed datetime.",
          "type": "string"
        },
        "modelType": {
          "description": "Gets or sets the new project model type.",
          "enum": [
            "singleClassification",
            "multiClassification",
            "extraction"
          ],
          "type": "string"
        },
        "storageInputContainerName": {
          "description": "Gets or sets the storage container name.",
          "type": "string"
        },
        "settings": {
          "description": "Gets or sets the project settings.",
          "$ref": "#/definitions/ProjectSettings"
        },
        "name": {
          "description": "Gets or sets the new project name.",
          "type": "string"
        },
        "multilingual": {
          "description": "Gets or sets a value indicating whether gets or sets whether the project is multilingual or not.",
          "type": "boolean"
        },
        "description": {
          "description": "Gets or sets the new project description.",
          "type": "string"
        },
        "language": {
          "description": "Gets or sets the project language.",
          "type": "string"
        }
      }
    },
    "ProjectGetObjectList": {
      "required": [
        "value",
        "nextLink"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the projects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectGetObject"
          }
        },
        "nextLink": {
          "description": "Gets or sets the next page link.",
          "type": "string"
        }
      }
    },
    "ProjectSettings": {
      "type": "object"
    },
    "SwapDeploymentsJobObject": {
      "required": [
        "firstDeploymentName",
        "secondDeploymentName"
      ],
      "type": "object",
      "properties": {
        "firstDeploymentName": {
          "description": "Represents the first deployment name.",
          "type": "string"
        },
        "secondDeploymentName": {
          "description": "Represents the second deployment name.",
          "type": "string"
        }
      }
    },
    "TrainedModelObject": {
      "required": [
        "label",
        "modelId",
        "lastTrainedDateTime"
      ],
      "type": "object",
      "properties": {
        "label": {
          "description": "Represents trained model label.",
          "type": "string"
        },
        "modelId": {
          "description": "Represents the Id of this model. The model Id has the format \"{version}-{yyyyMMddThhmmss}-{Guid.NewGuid()}\". This is used almost as a thumbprint for the model and isn't consumed in any of the APIs.",
          "type": "string"
        },
        "lastTrainedDateTime": {
          "format": "date-time",
          "description": "Represents trained model last trained time.",
          "type": "string"
        }
      }
    },
    "TrainedModelObjectList": {
      "required": [
        "value",
        "nextLink"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the jobs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrainedModelObject"
          }
        },
        "nextLink": {
          "description": "Gets or sets the next page link.",
          "type": "string"
        }
      }
    },
    "TrainingJobCreate": {
      "required": [
        "modelLabel"
      ],
      "type": "object",
      "properties": {
        "modelLabel": {
          "description": "Represents Training Model Name.",
          "type": "string"
        },
        "evaluationOptions": {
          "description": "Represents the evaluation options. By default, \"type\" is set to \"percentage\", with \"trainingSplitPercentage\" as 80, and \"testingSplitPercentage\" as 20.",
          "$ref": "#/definitions/EvaluationOptions"
        }
      }
    },
    "TrainingJobResult": {
      "required": [
        "result",
        "jobId",
        "createdDateTime",
        "lastUpdatedDateTime",
        "expirationDateTime",
        "status",
        "errors"
      ],
      "type": "object",
      "properties": {
        "result": {
          "description": "Represents Training Tasks Detailed Result.",
          "$ref": "#/definitions/TrainingJobStatusResult"
        },
        "jobId": {
          "description": "Gets or sets the jobId.",
          "type": "string"
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "Gets or sets the created time.",
          "type": "string"
        },
        "lastUpdatedDateTime": {
          "format": "date-time",
          "description": "Gets or sets the last updated time.",
          "type": "string"
        },
        "expirationDateTime": {
          "format": "date-time",
          "description": "Gets or sets the expiration time.",
          "type": "string"
        },
        "status": {
          "description": "Gets or sets the job status.",
          "enum": [
            "unknown",
            "notStarted",
            "running",
            "succeeded",
            "failed",
            "cancelled",
            "cancelling",
            "partiallyCompleted"
          ],
          "type": "string"
        },
        "errors": {
          "description": "Gets or sets the errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobError"
          }
        }
      }
    },
    "TrainingJobStatusList": {
      "required": [
        "value",
        "nextLink"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the jobs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrainingJobResult"
          }
        },
        "nextLink": {
          "description": "Gets or sets the next page link.",
          "type": "string"
        }
      }
    },
    "TrainingJobStatusResult": {
      "required": [
        "trainedModelLabel",
        "trainStatus"
      ],
      "type": "object",
      "properties": {
        "trainedModelLabel": {
          "description": "Represents trained model label.",
          "type": "string"
        },
        "trainStatus": {
          "description": "Represents model train status.",
          "$ref": "#/definitions/TrainingJobStatusResultStatus"
        },
        "evaluationStatus": {
          "description": "Represents model evaluation status.",
          "$ref": "#/definitions/TrainingJobStatusResultStatus"
        }
      }
    },
    "TrainingJobStatusResultStatus": {
      "required": [
        "percentComplete",
        "elapsedTime"
      ],
      "type": "object",
      "properties": {
        "percentComplete": {
          "format": "int32",
          "description": "Represents progress percentage.",
          "type": "integer"
        },
        "elapsedTime": {
          "description": "Represents the elapsed time. This string is in the format hh:mm:ss",
          "type": "string"
        }
      }
    },
    "VerificationResultClassificationDocumentClassifierObject": {
      "required": [
        "labeledClassifiers",
        "predictedClassifiers"
      ],
      "type": "object",
      "properties": {
        "labeledClassifiers": {
          "description": "Represents the classifier names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "predictedClassifiers": {
          "description": "Represents the predicted classifier names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VerificationResultClassificationDocumentObject": {
      "required": [
        "classifiers",
        "text",
        "path",
        "language"
      ],
      "type": "object",
      "properties": {
        "classifiers": {
          "description": "Represents the document labeled classifiers.",
          "$ref": "#/definitions/VerificationResultClassificationDocumentClassifierObject"
        },
        "text": {
          "description": "Represents the document text.",
          "type": "string"
        },
        "path": {
          "description": "Represents the document path.",
          "type": "string"
        },
        "language": {
          "description": "Represents the document language.",
          "type": "string"
        }
      }
    },
    "VerificationResultClassificationObject": {
      "required": [
        "documents"
      ],
      "type": "object",
      "properties": {
        "documents": {
          "description": "Represents the verification result for a list of documents.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerificationResultClassificationDocumentObject"
          }
        }
      }
    },
    "VerificationResultExtractionDocumentExtractorLabelObject": {
      "required": [
        "extractorName",
        "offset",
        "length"
      ],
      "type": "object",
      "properties": {
        "extractorName": {
          "description": "Represents the extractor name.",
          "type": "string"
        },
        "offset": {
          "format": "int32",
          "description": "Represents the entity offset index relative to the original text.",
          "type": "integer"
        },
        "length": {
          "format": "int32",
          "description": "Represents the entity length.",
          "type": "integer"
        }
      }
    },
    "VerificationResultExtractionDocumentExtractorObject": {
      "required": [
        "labeledExtractors",
        "predictedExtractors",
        "regionOffset",
        "regionLength"
      ],
      "type": "object",
      "properties": {
        "labeledExtractors": {
          "description": "Represents the extractor labels.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerificationResultExtractionDocumentExtractorLabelObject"
          }
        },
        "predictedExtractors": {
          "description": "Represents the predicted extractor labels.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerificationResultExtractionDocumentExtractorLabelObject"
          }
        },
        "regionOffset": {
          "format": "int32",
          "description": "Represents the region offset.",
          "type": "integer"
        },
        "regionLength": {
          "format": "int32",
          "description": "Represents the region length.",
          "type": "integer"
        }
      }
    },
    "VerificationResultExtractionDocumentObject": {
      "required": [
        "extractors",
        "text",
        "path",
        "language"
      ],
      "type": "object",
      "properties": {
        "extractors": {
          "description": "Represents the document labelled entities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerificationResultExtractionDocumentExtractorObject"
          }
        },
        "text": {
          "description": "Represents the document text.",
          "type": "string"
        },
        "path": {
          "description": "Represents the document path.",
          "type": "string"
        },
        "language": {
          "description": "Represents the document language.",
          "type": "string"
        }
      }
    },
    "VerificationResultExtractionObject": {
      "required": [
        "documents"
      ],
      "type": "object",
      "properties": {
        "documents": {
          "description": "Represents the verification result for a list of documents.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerificationResultExtractionDocumentObject"
          }
        }
      }
    },
    "VerificationResultsObject": {
      "required": [
        "modelType",
        "extractionVerification",
        "singleClassificationVerification",
        "multiClassificationVerification"
      ],
      "type": "object",
      "properties": {
        "modelType": {
          "description": "Represents the model type.",
          "enum": [
            "singleClassification",
            "multiClassification",
            "extraction"
          ],
          "type": "string"
        },
        "extractionVerification": {
          "description": "Represents the verification result for extraction for a list of documents.",
          "$ref": "#/definitions/VerificationResultExtractionObject"
        },
        "singleClassificationVerification": {
          "description": "Represents the verification result for single classification for a list of documents.",
          "$ref": "#/definitions/VerificationResultClassificationObject"
        },
        "multiClassificationVerification": {
          "description": "Represents the verification result for multi classification for a list of documents.",
          "$ref": "#/definitions/VerificationResultClassificationObject"
        }
      }
    }
  },
  "parameters": {
    "Endpoint": {
      "name": "Endpoint",
      "description": "Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "in": "path",
      "x-ms-skip-url-encoding": true
    }
  }
}