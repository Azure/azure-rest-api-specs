{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft Cognitive Language Service",
    "description": "The language service API is a suite of natural language processing (NLP) skills built with best-in-class Microsoft machine learning algorithms.  The API can be used to analyze unstructured text for tasks such as sentiment analysis, key phrase extraction, language detection and question answering. Further documentation can be found in <a href=\"https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview\">https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview</a>.",
    "version": "2022-05-15-preview"
  },
  "paths": {},
  "definitions": {
    "ErrorResponse": {
      "type": "object",
      "description": "Error response.",
      "additionalProperties": false,
      "properties": {
        "error": {
          "description": "The error object.",
          "$ref": "#/definitions/Error"
        }
      },
      "required": [
        "error"
      ]
    },
    "Error": {
      "type": "object",
      "description": "The error object.",
      "additionalProperties": true,
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "One of a server-defined set of error codes.",
          "$ref": "#/definitions/ErrorCode"
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "innererror": {
          "description": "An object containing more specific information than the current object about the error.",
          "$ref": "#/definitions/InnerErrorModel"
        }
      }
    },
    "InnerErrorModel": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "additionalProperties": false,
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "One of a server-defined set of error codes.",
          "$ref": "#/definitions/InnerErrorCode"
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Error details."
        },
        "target": {
          "type": "string",
          "description": "Error target."
        },
        "innererror": {
          "description": "An object containing more specific information than the current object about the error.",
          "$ref": "#/definitions/InnerErrorModel"
        }
      }
    },
    "ErrorCode": {
      "type": "string",
      "description": "Human-readable error code.",
      "x-ms-enum": {
        "name": "ErrorCode",
        "modelAsString": true
      },
      "enum": [
        "InvalidRequest",
        "InvalidArgument",
        "Unauthorized",
        "Forbidden",
        "NotFound",
        "ProjectNotFound",
        "OperationNotFound",
        "AzureCognitiveSearchNotFound",
        "AzureCognitiveSearchIndexNotFound",
        "TooManyRequests",
        "AzureCognitiveSearchThrottling",
        "AzureCognitiveSearchIndexLimitReached",
        "InternalServerError",
        "ServiceUnavailable"
      ]
    },
    "InnerErrorCode": {
      "type": "string",
      "description": "Human-readable error code.",
      "x-ms-enum": {
        "name": "InnerErrorCode",
        "modelAsString": true
      },
      "enum": [
        "InvalidRequest",
        "InvalidParameterValue",
        "KnowledgeBaseNotFound",
        "AzureCognitiveSearchNotFound",
        "AzureCognitiveSearchThrottling",
        "ExtractionFailure",
        "InvalidRequestBodyFormat",
        "EmptyRequest",
        "MissingInputDocuments",
        "InvalidDocument",
        "ModelVersionIncorrect",
        "InvalidDocumentBatch",
        "UnsupportedLanguageCode",
        "InvalidCountryHint"
      ]
    },
    "Language": {
      "type": "string",
      "description": "Language of the text records. This is BCP-47 representation of a language. For example, use \"en\" for English; \"es\" for Spanish etc. If not set, use \"en\" for English as default."
    },
    "StringIndexType": {
      "type": "string",
      "description": "Specifies the method used to interpret string offsets.  Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information see https://aka.ms/text-analytics-offsets.",
      "default": "TextElements_v8",
      "enum": [
        "TextElements_v8",
        "UnicodeCodePoint",
        "Utf16CodeUnit"
      ],
      "x-ms-enum": {
        "name": "StringIndexType",
        "modelAsString": true,
        "values": [
          {
            "value": "TextElements_v8",
            "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
          },
          {
            "value": "UnicodeCodePoint",
            "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
          },
          {
            "value": "Utf16CodeUnit",
            "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
          }
        ]
      }
    },
    "TaskState": {
      "description": "Returns the current state of the task.",
      "properties": {
        "lastUpdateDateTime": {
          "description": "The last updated time in UTC for the task.",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "description": "The status of the task at the mentioned last update time.",
          "enum": [
            "notStarted",
            "running",
            "succeeded",
            "failed",
            "cancelled",
            "cancelling"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "TaskState"
          }
        }
      },
      "required": [
        "status",
        "lastUpdateDateTime"
      ],
      "type": "object"
    },
    "TaskIdentifier": {
      "type": "object",
      "description": "Base task object.",
      "properties": {
        "taskName": {
          "type": "string"
        }
      }
    },
    "TaskParameters": {
      "type": "object",
      "description": "Base parameters object for a text analysis task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "PreBuiltTaskParameters": {
      "type": "object",
      "description": "Parameters object for a text analysis task using pre-built models.",
      "properties": {
        "modelVersion": {
          "type": "string",
          "default": "latest"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TaskParameters"
        }
      ]
    },
    "JobState": {
      "properties": {
        "displayName": {
          "type": "string"
        },
        "createdDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "expirationDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "jobId": {
          "type": "string"
        },
        "lastUpdatedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "enum": [
            "notStarted",
            "running",
            "succeeded",
            "partiallyCompleted",
            "failed",
            "cancelled",
            "cancelling"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "JobState"
          }
        },
        "errors": {
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        },
        "nextLink": {
          "type": "string"
        }
      },
      "required": [
        "jobId",
        "lastUpdatedDateTime",
        "createdDateTime",
        "status"
      ]
    },
    "JobErrors": {
      "properties": {
        "errors": {
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "InputError": {
      "type": "object",
      "description": "Contains details of errors encountered during a job execution.",
      "required": [
        "id",
        "error"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the input."
        },
        "error": {
          "type": "object",
          "description": "Error encountered.",
          "$ref": "#/definitions/Error"
        }
      }
    },
    "InputWarning": {
      "type": "object",
      "description": "Contains details of warnings encountered during a job execution.",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "description": "Warning code."
        },
        "message": {
          "type": "string",
          "description": "Warning message."
        },
        "targetRef": {
          "type": "string",
          "description": "A JSON pointer reference indicating the target object."
        }
      }
    },
    "RequestStatistics": {
      "type": "object",
      "required": [
        "transactionsCount"
      ],
      "properties": {
        "transactionsCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of transactions for the request."
        }
      },
      "additionalProperties": true,
      "description": "if showStats=true was specified in the request this field will contain information about the request payload."
    },
    "PreBuiltResult": {
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/InputError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics"
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        }
      },
      "required": [
        "errors",
        "modelVersion"
      ]
    }
  },
  "parameters": {
    "Endpoint": {
      "name": "Endpoint",
      "description": "Supported Cognitive Services endpoint (e.g., https://<resource-name>.api.cognitiveservices.azure.com).",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "in": "path",
      "x-ms-skip-url-encoding": true
    },
    "ProjectNameQueryParameter": {
      "name": "projectName",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The name of the project to use.",
      "x-ms-parameter-location": "method"
    },
    "ProjectNamePathParameter": {
      "name": "projectName",
      "in": "path",
      "required": true,
      "type": "string",
      "maxLength": 100,
      "description": "The name of the project to use.",
      "x-ms-parameter-location": "method"
    },
    "DeploymentNameQueryParameter": {
      "name": "deploymentName",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The name of the specific deployment of the project to use.",
      "x-ms-parameter-location": "method"
    },
    "DeploymentNamePathParameter": {
      "name": "deploymentName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the specific deployment of the project to use.",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version."
    },
    "TopParameter": {
      "name": "top",
      "in": "query",
      "description": "The maximum number of resources to return from the collection.",
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "SkipParameter": {
      "name": "skip",
      "in": "query",
      "description": "An offset into the collection of the first resource to be returned.",
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "MaxPageSizeParameter": {
      "name": "maxpagesize",
      "in": "query",
      "description": "The maximum number of resources to include in a single response.",
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "ShowStats": {
      "name": "showStats",
      "in": "query",
      "description": "(Optional) if set to true, response will contain request and document level statistics.",
      "type": "boolean",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "JobId": {
      "description": "Job ID",
      "format": "uuid",
      "in": "path",
      "name": "jobId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
