{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft Cognitive Language Service - Text Analysis",
    "description": "The language service API is a suite of natural language processing (NLP) skills built with best-in-class Microsoft machine learning algorithms.  The API can be used to analyze unstructured text for tasks such as sentiment analysis, key phrase extraction, language detection and question answering. Further documentation can be found in <a href=\"https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview\">https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview</a>.0",
    "version": "2021-11-01-preview"
  },
  "securityDefinitions": {
    "apim_key": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    }
  },
  "security": [
    {
      "apim_key": []
    }
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{Endpoint}/language",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/Endpoint"
      }
    ]
  },
  "paths": {
    "/analyze-text/jobs": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Submit a collection of text documents for analysis. Specify one or more unique tasks to be executed.",
        "operationId": "AnalyzeText_SubmitJob",
        "summary": "Submit text analysis job",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "description": "Collection of documents to analyze and tasks to execute.",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AnalyzeTextJobsInput"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the analysis job.",
            "headers": {
              "Operation-Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Submit Analysis Job Request": {
            "$ref": "./examples/SuccessfulAnalyzeTextJobSubmitRequest.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/analyze-text/jobs/{jobId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "description": "Get the status of an analysis job.  A job may consist of one or more tasks.  Once all tasks are completed, the job will transition to the completed state and results will be available for each task.",
        "operationId": "AnalyzeText_JobStatus",
        "summary": "Get analysis status and results",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/JobId"
          },
          {
            "$ref": "#/parameters/ShowStats"
          },
          {
            "default": 20,
            "description": "(Optional) Set the maximum number of results per task. When both top and skip are specified, skip is applied first.",
            "in": "query",
            "maximum": 50,
            "minimum": 1,
            "name": "top",
            "type": "integer"
          },
          {
            "default": 0,
            "description": "(Optional) Set the number of elements to offset in the response. When both top and skip are specified, skip is applied first.",
            "in": "query",
            "minimum": 0,
            "name": "skip",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Analysis job status and metadata.",
            "schema": {
              "$ref": "#/definitions/AnalyzeTextJobState"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Text Analysis Job Status Request": {
            "$ref": "./examples/SuccessfulAnalyzeTextJobStatusRequest.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AnalyzeTextJobsInput": {
      "properties": {
        "displayName": {
          "description": "Optional display name for the analysis job.",
          "type": "string"
        },
        "analysisInput": {
          "description": "Input for the analysis job.",
          "properties": {
            "documents": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MultiLanguageInput"
              }
            }
          }
        },
        "tasks": {
          "description": "The set of tasks to execute on the input documents.",
          "properties": {
            "entityRecognitionTasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EntitiesTask"
              }
            },
            "entityRecognitionPiiTasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PiiTask"
              }
            },
            "keyPhraseExtractionTasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KeyPhraseTask"
              }
            },
            "entityLinkingTasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EntityLinkingTask"
              }
            },
            "sentimentAnalysisTasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SentimentAnalysisTask"
              }
            },
            "extractiveSummarizationTasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExtractiveSummarizationTask"
              }
            },
            "customEntityRecognitionTasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomEntitiesTask"
              }
            },
            "customSingleClassificationTasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomSingleClassificationTask"
              }
            },
            "customMultiClassificationTasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomMultiClassificationTask"
              }
            }
          },
          "type": "object"
        }
      },
      "required": [
        "analysisInput",
        "tasks"
      ]
    },
    "TaskParameters": {
      "type": "object",
      "description": "Base parameters object for a text analysis task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "PreBuiltTaskParameters": {
      "type": "object",
      "description": "Parameters object for a text analysis task using pre-built models.",
      "properties": {
        "modelVersion": {
          "type": "string",
          "default": "latest"
        }
      }
    },
    "PreBuiltResult": {
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by record id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics"
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        }
      },
      "required": [
        "errors",
        "modelVersion"
      ]
    },
    "CustomTaskParameters": {
      "type": "object",
      "description": "Parameters object for a text analysis task using custom models.",
      "properties": {
        "projectName": {
          "type": "string"
        },
        "deploymentName": {
          "type": "string"
        }
      },
      "required": [
        "projectName",
        "deploymentName"
      ]
    },
    "CustomResult": {
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by record id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics"
        },
        "projectName": {
          "type": "string",
          "description": "This field indicates the project name for the model."
        },
        "deploymentName": {
          "type": "string",
          "description": "This field indicates the deployment name for the model."
        }
      },
      "required": [
        "errors",
        "projectName",
        "deploymentName"
      ]
    },
    "CustomEntitiesTask": {
      "type": "object",
      "description": "Use custom models to ease the process of information extraction from unstructured documents like contracts or financial documents",
      "properties": {
        "taskName": {
          "type": "string"
        },
        "parameters": {
          "allOf": [
            {
              "$ref": "#/definitions/TaskParameters"
            },
            {
              "$ref": "#/definitions/CustomTaskParameters"
            },
            {
              "$ref": "#/definitions/EntitiesTaskParameters"
            }
          ]
        }
      }
    },
    "CustomEntitiesTaskResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/CustomEntitiesResult"
        }
      }
    },
    "CustomEntitiesResult": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CustomResult"
        },
        {
          "$ref": "#/definitions/EntitiesDocuments"
        }
      ]
    },
    "CustomSingleClassificationTask": {
      "type": "object",
      "description": "Use custom models to classify text into single label taxonomy",
      "properties": {
        "taskName": {
          "type": "string"
        },
        "parameters": {
          "allOf": [
            {
              "$ref": "#/definitions/TaskParameters"
            },
            {
              "$ref": "#/definitions/CustomTaskParameters"
            }
          ]
        }
      }
    },
    "CustomSingleClassificationTaskResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/CustomSingleClassificationResult"
        }
      }
    },
    "CustomSingleClassificationResult": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CustomResult"
        },
        {
          "$ref": "#/definitions/SingleClassificationDocuments"
        }
      ]
    },
    "SingleClassificationDocuments": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by record",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/DocumentResult"
              },
              {
                "$ref": "#/definitions/SingleClassificationDocumentResult"
              }
            ]
          }
        }
      },
      "required": [
        "documents"
      ]
    },
    "SingleClassificationDocumentResult": {
      "type": "object",
      "required": [
        "classification"
      ],
      "properties": {
        "classification": {
          "$ref": "#/definitions/ClassificationResult"
        }
      }
    },
    "ClassificationResult": {
      "type": "object",
      "required": [
        "category",
        "confidenceScore"
      ],
      "properties": {
        "category": {
          "type": "string",
          "description": "Classification type."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "Confidence score between 0 and 1 of the recognized classification."
        }
      }
    },
    "CustomMultiClassificationTask": {
      "type": "object",
      "description": "Use custom models to classify text into multi label taxonomy",
      "properties": {
        "taskName": {
          "type": "string"
        },
        "parameters": {
          "allOf": [
            {
              "$ref": "#/definitions/TaskParameters"
            },
            {
              "$ref": "#/definitions/CustomTaskParameters"
            }
          ]
        }
      }
    },
    "CustomMultiClassificationTaskResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/CustomMultiClassificationResult"
        }
      }
    },
    "CustomMultiClassificationResult": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CustomResult"
        },
        {
          "$ref": "#/definitions/MultiClassificationDocuments"
        }
      ]
    },
    "MultiClassificationDocuments": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by record",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/DocumentResult"
              },
              {
                "$ref": "#/definitions/MultiClassificationDocumentResult"
              }
            ]
          }
        }
      }
    },
    "MultiClassificationDocumentResult": {
      "type": "object",
      "required": [
        "classifications"
      ],
      "properties": {
        "classifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClassificationResult"
          }
        }
      }
    },
    "SentimentAnalysisTaskParameters": {
      "type": "object",
      "description": "Parameters object for a Sentiment Analysis task.",
      "properties": {
        "opinionMining": {
          "type": "boolean",
          "default": false
        },
        "stringIndexType": {
          "$ref": "#/definitions/StringIndexType"
        }
      }
    },
    "SentimentAnalysisTask": {
      "type": "object",
      "description": "An object representing the task definition for a Sentiment Analysis task.",
      "properties": {
        "taskName": {
          "type": "string"
        },
        "parameters": {
          "allOf": [
            {
              "$ref": "#/definitions/TaskParameters"
            },
            {
              "$ref": "#/definitions/PreBuiltTaskParameters"
            },
            {
              "$ref": "#/definitions/SentimentAnalysisTaskParameters"
            }
          ]
        }
      }
    },
    "SentimentTaskResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/SentimentResult"
        }
      }
    },
    "SentimentResult": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PreBuiltResult"
        },
        {
          "$ref": "#/definitions/SentimentDocuments"
        }
      ]
    },
    "SentimentDocuments": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "description": "Sentiment analysis per record.",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/DocumentResult"
              },
              {
                "$ref": "#/definitions/SentimentDocumentResult"
              }
            ]
          }
        }
      },
      "required": [
        "documents"
      ]
    },
    "SentimentDocumentResult": {
      "type": "object",
      "properties": {
        "sentiment": {
          "type": "string",
          "description": "Predicted sentiment for record (Negative, Neutral, Positive, or Mixed).",
          "enum": [
            "positive",
            "neutral",
            "negative",
            "mixed"
          ],
          "x-ms-enum": {
            "name": "DocumentSentimentValue",
            "modelAsString": false
          }
        },
        "confidenceScores": {
          "description": "Document level sentiment confidence scores between 0 and 1 for each sentiment class.",
          "$ref": "#/definitions/SentimentConfidenceScorePerLabel"
        },
        "sentences": {
          "type": "array",
          "description": "Sentence level sentiment analysis.",
          "items": {
            "$ref": "#/definitions/SentenceSentiment"
          }
        }
      },
      "required": [
        "sentiment",
        "confidenceScores",
        "sentences"
      ]
    },
    "SentimentConfidenceScorePerLabel": {
      "type": "object",
      "required": [
        "positive",
        "neutral",
        "negative"
      ],
      "properties": {
        "positive": {
          "type": "number",
          "format": "double"
        },
        "neutral": {
          "type": "number",
          "format": "double"
        },
        "negative": {
          "type": "number",
          "format": "double"
        }
      },
      "description": "Represents the confidence scores between 0 and 1 across all sentiment classes: positive, neutral, negative."
    },
    "SentenceSentiment": {
      "type": "object",
      "required": [
        "text",
        "sentiment",
        "confidenceScores",
        "offset",
        "length"
      ],
      "properties": {
        "text": {
          "type": "string",
          "description": "The sentence text."
        },
        "sentiment": {
          "type": "string",
          "description": "The predicted Sentiment for the sentence.",
          "enum": [
            "positive",
            "neutral",
            "negative"
          ],
          "x-ms-enum": {
            "name": "SentenceSentimentValue",
            "modelAsString": false
          }
        },
        "confidenceScores": {
          "description": "The sentiment confidence score between 0 and 1 for the sentence for all classes.",
          "$ref": "#/definitions/SentimentConfidenceScorePerLabel"
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "The sentence offset from the start of the record."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the sentence."
        },
        "targets": {
          "type": "array",
          "description": "The array of sentence targets for the sentence.",
          "items": {
            "$ref": "#/definitions/SentenceTarget"
          }
        },
        "assessments": {
          "type": "array",
          "description": "The array of assessments for the sentence.",
          "items": {
            "$ref": "#/definitions/SentenceAssessment"
          }
        }
      }
    },
    "SentenceTarget": {
      "type": "object",
      "required": [
        "confidenceScores",
        "length",
        "offset",
        "relations",
        "sentiment",
        "text"
      ],
      "properties": {
        "sentiment": {
          "type": "string",
          "enum": [
            "positive",
            "mixed",
            "negative"
          ],
          "x-ms-enum": {
            "name": "TokenSentimentValue",
            "modelAsString": false
          },
          "description": "Targeted sentiment in the sentence."
        },
        "confidenceScores": {
          "description": "Target sentiment confidence scores for the target in the sentence.",
          "$ref": "#/definitions/TargetConfidenceScoreLabel"
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "The target offset from the start of the sentence."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the target."
        },
        "text": {
          "type": "string",
          "description": "The target text detected."
        },
        "relations": {
          "type": "array",
          "description": "The array of either assessment or target objects which is related to the target.",
          "items": {
            "$ref": "#/definitions/TargetRelation"
          }
        }
      }
    },
    "SentenceAssessment": {
      "type": "object",
      "required": [
        "confidenceScores",
        "isNegated",
        "length",
        "offset",
        "sentiment",
        "text"
      ],
      "properties": {
        "sentiment": {
          "type": "string",
          "enum": [
            "positive",
            "mixed",
            "negative"
          ],
          "x-ms-enum": {
            "name": "TokenSentimentValue",
            "modelAsString": false
          },
          "description": "Assessment sentiment in the sentence."
        },
        "confidenceScores": {
          "description": "Assessment sentiment confidence scores in the sentence.",
          "$ref": "#/definitions/TargetConfidenceScoreLabel"
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "The assessment offset from the start of the sentence."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the assessment."
        },
        "text": {
          "type": "string",
          "description": "The assessment text detected."
        },
        "isNegated": {
          "type": "boolean",
          "description": "The indicator representing if the assessment is negated."
        }
      }
    },
    "TargetRelation": {
      "type": "object",
      "required": [
        "ref",
        "relationType"
      ],
      "properties": {
        "relationType": {
          "type": "string",
          "enum": [
            "assessment",
            "target"
          ],
          "x-ms-enum": {
            "name": "TargetRelationType",
            "modelAsString": false
          },
          "description": "The type related to the target."
        },
        "ref": {
          "type": "string",
          "description": "The JSON pointer indicating the linked object."
        }
      }
    },
    "TargetConfidenceScoreLabel": {
      "type": "object",
      "required": [
        "negative",
        "positive"
      ],
      "properties": {
        "positive": {
          "type": "number",
          "format": "double"
        },
        "negative": {
          "type": "number",
          "format": "double"
        }
      },
      "description": "Represents the confidence scores across all sentiment classes: positive, neutral, negative."
    },
    "EntitiesTaskParameters": {
      "type": "object",
      "description": "Parameters object for a Sentiment Analysis task.",
      "properties": {
        "stringIndexType": {
          "$ref": "#/definitions/StringIndexType"
        }
      }
    },
    "EntitiesTask": {
      "type": "object",
      "description": "An object representing the task definition for an Entities Recognition task.",
      "properties": {
        "taskName": {
          "type": "string"
        },
        "parameters": {
          "allOf": [
            {
              "$ref": "#/definitions/TaskParameters"
            },
            {
              "$ref": "#/definitions/PreBuiltTaskParameters"
            },
            {
              "$ref": "#/definitions/EntitiesTaskParameters"
            }
          ]
        }
      }
    },
    "EntitiesTaskResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/EntitiesResult"
        }
      }
    },
    "EntitiesResult": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PreBuiltResult"
        },
        {
          "$ref": "#/definitions/EntitiesDocuments"
        }
      ]
    },
    "EntitiesDocuments": {
      "type": "object",
      "required": [
        "documents"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/definitions/DocumentResult"
              },
              {
                "$ref": "#/definitions/EntitiesDocumentResult"
              }
            ]
          }
        }
      }
    },
    "EntitiesDocumentResult": {
      "type": "object",
      "required": [
        "entities"
      ],
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Entity"
          }
        }
      }
    },
    "Entity": {
      "type": "object",
      "required": [
        "text",
        "category",
        "offset",
        "length",
        "confidenceScore"
      ],
      "properties": {
        "text": {
          "type": "string",
          "description": "Entity text as appears in the request."
        },
        "category": {
          "type": "string",
          "description": "Entity type."
        },
        "subcategory": {
          "type": "string",
          "description": "(Optional) Entity sub type."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position for the entity text. Use of different 'stringIndexType' values can affect the offset returned."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Length for the entity text. Use of different 'stringIndexType' values can affect the length returned."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "Confidence score between 0 and 1 of the extracted entity."
        }
      }
    },
    "EntityLinkingTaskParameters": {
      "type": "object",
      "description": "Parameters object for a Sentiment Analysis task.",
      "properties": {
        "stringIndexType": {
          "$ref": "#/definitions/StringIndexType"
        }
      }
    },
    "EntityLinkingTask": {
      "type": "object",
      "description": "An object representing the task definition for an Entity Linking task.",
      "properties": {
        "taskName": {
          "type": "string"
        },
        "parameters": {
          "allOf": [
            {
              "$ref": "#/definitions/TaskParameters"
            },
            {
              "$ref": "#/definitions/PreBuiltTaskParameters"
            },
            {
              "$ref": "#/definitions/EntityLinkingTaskParameters"
            }
          ]
        }
      }
    },
    "EntityLinkingTaskResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/EntityLinkingResult"
        }
      }
    },
    "EntityLinkingResult": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PreBuiltResult"
        },
        {
          "$ref": "#/definitions/LinkedEntitiesDocuments"
        }
      ]
    },
    "LinkedEntitiesDocuments": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by record",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/DocumentResult"
              },
              {
                "$ref": "#/definitions/LinkedEntitiesDocumentResult"
              }
            ]
          }
        }
      },
      "required": [
        "documents"
      ]
    },
    "LinkedEntitiesDocumentResult": {
      "type": "object",
      "required": [
        "entities"
      ],
      "properties": {
        "entities": {
          "type": "array",
          "description": "Recognized well known entities in the record.",
          "items": {
            "$ref": "#/definitions/LinkedEntity"
          }
        }
      }
    },
    "LinkedEntity": {
      "type": "object",
      "required": [
        "name",
        "matches",
        "language",
        "url",
        "dataSource"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Entity Linking formal name."
        },
        "matches": {
          "type": "array",
          "description": "List of instances this entity appears in the text.",
          "items": {
            "$ref": "#/definitions/Match"
          }
        },
        "language": {
          "type": "string",
          "description": "Language used in the data source."
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the recognized entity from the data source."
        },
        "url": {
          "type": "string",
          "description": "URL for the entity's page from the data source."
        },
        "dataSource": {
          "type": "string",
          "description": "Data source used to extract entity linking, such as Wiki/Bing etc."
        },
        "bingId": {
          "type": "string",
          "description": "Bing Entity Search API unique identifier of the recognized entity."
        }
      }
    },
    "Match": {
      "type": "object",
      "required": [
        "confidenceScore",
        "text",
        "offset",
        "length"
      ],
      "properties": {
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "If a well known item is recognized, a decimal number denoting the confidence level between 0 and 1 will be returned."
        },
        "text": {
          "type": "string",
          "description": "Entity text as appears in the request."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position for the entity match text."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Length for the entity match text."
        }
      }
    },
    "PiiTaskParameters": {
      "type": "object",
      "description": "Parameters object for a PII Entities Recognition task.",
      "properties": {
        "domain": {
          "type": "string",
          "default": "none",
          "enum": [
            "phi",
            "none"
          ]
        },
        "piiCategories": {
          "$ref": "#/definitions/PiiCategories"
        },
        "stringIndexType": {
          "$ref": "#/definitions/StringIndexType"
        }
      }
    },
    "PiiTask": {
      "type": "object",
      "description": "An object representing the task definition for a PII Entities Recognition task.",
      "properties": {
        "taskName": {
          "type": "string"
        },
        "parameters": {
          "allOf": [
            {
              "$ref": "#/definitions/TaskParameters"
            },
            {
              "$ref": "#/definitions/PreBuiltTaskParameters"
            },
            {
              "$ref": "#/definitions/PiiTaskParameters"
            }
          ]
        }
      }
    },
    "PiiTaskResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/PiiResult"
        }
      }
    },
    "PiiResult": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PreBuiltResult"
        },
        {
          "$ref": "#/definitions/PiiEntitiesDocuments"
        }
      ]
    },
    "PiiEntitiesDocuments": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/DocumentResult"
              },
              {
                "$ref": "#/definitions/PiiEntitiesDocumentResult"
              }
            ]
          }
        }
      },
      "required": [
        "documents"
      ]
    },
    "PiiEntitiesDocumentResult": {
      "type": "object",
      "required": [
        "redactedText",
        "entities"
      ],
      "properties": {
        "redactedText": {
          "type": "string",
          "description": "Returns redacted text."
        },
        "entities": {
          "type": "array",
          "description": "Recognized entities in the record.",
          "items": {
            "$ref": "#/definitions/Entity"
          }
        }
      }
    },
    "PiiCategories": {
      "description": "(Optional) describes the PII categories to return",
      "items": {
        "type": "string",
        "x-ms-enum": {
          "name": "PiiCategory",
          "modelAsString": true
        },
        "enum": [
          "ABARoutingNumber",
          "ARNationalIdentityNumber",
          "AUBankAccountNumber",
          "AUDriversLicenseNumber",
          "AUMedicalAccountNumber",
          "AUPassportNumber",
          "AUTaxFileNumber",
          "AUBusinessNumber",
          "AUCompanyNumber",
          "ATIdentityCard",
          "ATTaxIdentificationNumber",
          "ATValueAddedTaxNumber",
          "AzureDocumentDBAuthKey",
          "AzureIAASDatabaseConnectionAndSQLString",
          "AzureIoTConnectionString",
          "AzurePublishSettingPassword",
          "AzureRedisCacheString",
          "AzureSAS",
          "AzureServiceBusString",
          "AzureStorageAccountKey",
          "AzureStorageAccountGeneric",
          "BENationalNumber",
          "BENationalNumberV2",
          "BEValueAddedTaxNumber",
          "BRCPFNumber",
          "BRLegalEntityNumber",
          "BRNationalIDRG",
          "BGUniformCivilNumber",
          "CABankAccountNumber",
          "CADriversLicenseNumber",
          "CAHealthServiceNumber",
          "CAPassportNumber",
          "CAPersonalHealthIdentification",
          "CASocialInsuranceNumber",
          "CLIdentityCardNumber",
          "CNResidentIdentityCardNumber",
          "CreditCardNumber",
          "HRIdentityCardNumber",
          "HRNationalIDNumber",
          "HRPersonalIdentificationNumber",
          "HRPersonalIdentificationOIBNumberV2",
          "CYIdentityCard",
          "CYTaxIdentificationNumber",
          "CZPersonalIdentityNumber",
          "CZPersonalIdentityV2",
          "DKPersonalIdentificationNumber",
          "DKPersonalIdentificationV2",
          "DrugEnforcementAgencyNumber",
          "EEPersonalIdentificationCode",
          "EUDebitCardNumber",
          "EUDriversLicenseNumber",
          "EUGPSCoordinates",
          "EUNationalIdentificationNumber",
          "EUPassportNumber",
          "EUSocialSecurityNumber",
          "EUTaxIdentificationNumber",
          "FIEuropeanHealthNumber",
          "FINationalID",
          "FINationalIDV2",
          "FIPassportNumber",
          "FRDriversLicenseNumber",
          "FRHealthInsuranceNumber",
          "FRNationalID",
          "FRPassportNumber",
          "FRSocialSecurityNumber",
          "FRTaxIdentificationNumber",
          "FRValueAddedTaxNumber",
          "DEDriversLicenseNumber",
          "DEPassportNumber",
          "DEIdentityCardNumber",
          "DETaxIdentificationNumber",
          "DEValueAddedNumber",
          "GRNationalIDCard",
          "GRNationalIDV2",
          "GRTaxIdentificationNumber",
          "HKIdentityCardNumber",
          "HUValueAddedNumber",
          "HUPersonalIdentificationNumber",
          "HUTaxIdentificationNumber",
          "INPermanentAccount",
          "INUniqueIdentificationNumber",
          "IDIdentityCardNumber",
          "InternationalBankingAccountNumber",
          "IEPersonalPublicServiceNumber",
          "IEPersonalPublicServiceNumberV2",
          "ILBankAccountNumber",
          "ILNationalID",
          "ITDriversLicenseNumber",
          "ITFiscalCode",
          "ITValueAddedTaxNumber",
          "JPBankAccountNumber",
          "JPDriversLicenseNumber",
          "JPPassportNumber",
          "JPResidentRegistrationNumber",
          "JPSocialInsuranceNumber",
          "JPMyNumberCorporate",
          "JPMyNumberPersonal",
          "JPResidenceCardNumber",
          "LVPersonalCode",
          "LTPersonalCode",
          "LUNationalIdentificationNumberNatural",
          "LUNationalIdentificationNumberNonNatural",
          "MYIdentityCardNumber",
          "MTIdentityCardNumber",
          "MTTaxIDNumber",
          "NLCitizensServiceNumber",
          "NLCitizensServiceNumberV2",
          "NLTaxIdentificationNumber",
          "NLValueAddedTaxNumber",
          "NZBankAccountNumber",
          "NZDriversLicenseNumber",
          "NZInlandRevenueNumber",
          "NZMinistryOfHealthNumber",
          "NZSocialWelfareNumber",
          "NOIdentityNumber",
          "PHUnifiedMultiPurposeIDNumber",
          "PLIdentityCard",
          "PLNationalID",
          "PLNationalIDV2",
          "PLPassportNumber",
          "PLTaxIdentificationNumber",
          "PLREGONNumber",
          "PTCitizenCardNumber",
          "PTCitizenCardNumberV2",
          "PTTaxIdentificationNumber",
          "ROPersonalNumericalCode",
          "RUPassportNumberDomestic",
          "RUPassportNumberInternational",
          "SANationalID",
          "SGNationalRegistrationIdentityCardNumber",
          "SKPersonalNumber",
          "SITaxIdentificationNumber",
          "SIUniqueMasterCitizenNumber",
          "ZAIdentificationNumber",
          "KRResidentRegistrationNumber",
          "ESDNI",
          "ESSocialSecurityNumber",
          "ESTaxIdentificationNumber",
          "SQLServerConnectionString",
          "SENationalID",
          "SENationalIDV2",
          "SEPassportNumber",
          "SETaxIdentificationNumber",
          "SWIFTCode",
          "CHSocialSecurityNumber",
          "TWNationalID",
          "TWPassportNumber",
          "TWResidentCertificate",
          "THPopulationIdentificationCode",
          "TRNationalIdentificationNumber",
          "UKDriversLicenseNumber",
          "UKElectoralRollNumber",
          "UKNationalHealthNumber",
          "UKNationalInsuranceNumber",
          "UKUniqueTaxpayerNumber",
          "USUKPassportNumber",
          "USBankAccountNumber",
          "USDriversLicenseNumber",
          "USIndividualTaxpayerIdentification",
          "USSocialSecurityNumber",
          "UAPassportNumberDomestic",
          "UAPassportNumberInternational",
          "Organization",
          "Email",
          "URL",
          "Age",
          "PhoneNumber",
          "IPAddress",
          "Date",
          "Person",
          "Address",
          "All",
          "Default"
        ]
      },
      "type": "array",
      "uniqueItems": true
    },
    "ExtractiveSummarizationTaskParameters": {
      "type": "object",
      "description": "Parameters object for an Extractive Summarization task.",
      "properties": {
        "sentenceCount": {
          "type": "integer",
          "default": 3
        },
        "sortBy": {
          "type": "string",
          "default": "Offset",
          "enum": [
            "Offset",
            "Rank"
          ]
        },
        "stringIndexType": {
          "$ref": "#/definitions/StringIndexType"
        }
      }
    },
    "ExtractiveSummarizationTask": {
      "type": "object",
      "description": "An object representing the task definition for an Extractive Summarization task.",
      "properties": {
        "taskName": {
          "type": "string"
        },
        "parameters": {
          "allOf": [
            {
              "$ref": "#/definitions/TaskParameters"
            },
            {
              "$ref": "#/definitions/PreBuiltTaskParameters"
            },
            {
              "$ref": "#/definitions/ExtractiveSummarizationTaskParameters"
            }
          ]
        }
      }
    },
    "ExtractiveSummarizationTaskResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/ExtractiveSummarizationResult"
        }
      }
    },
    "ExtractiveSummarizationResult": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PreBuiltResult"
        },
        {
          "$ref": "#/definitions/ExtractedSummaryDocuments"
        }
      ]
    },
    "ExtractedSummaryDocuments": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by record",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/DocumentResult"
              },
              {
                "$ref": "#/definitions/ExtractedSummaryDocumentResult"
              }
            ]
          }
        }
      },
      "required": [
        "documents"
      ]
    },
    "ExtractedSummaryDocumentResult": {
      "type": "object",
      "required": [
        "sentences"
      ],
      "properties": {
        "sentences": {
          "type": "array",
          "description": "A ranked list of sentences representing the extracted summary.",
          "items": {
            "$ref": "#/definitions/ExtractedSummarySentence"
          }
        }
      }
    },
    "ExtractedSummarySentence": {
      "type": "object",
      "required": [
        "text",
        "rankScore",
        "offset",
        "length"
      ],
      "properties": {
        "text": {
          "type": "string",
          "description": "The extracted sentence text."
        },
        "rankScore": {
          "type": "number",
          "format": "double",
          "description": "A double value representing the relevance of the sentence within the summary. Higher values indicate higher importance."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "The sentence offset from the start of the record, based on the value of the parameter StringIndexType."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the sentence."
        }
      }
    },
    "KeyPhraseTask": {
      "type": "object",
      "description": "An object representing the task definition for a Key Phrase Extraction task.",
      "properties": {
        "taskName": {
          "type": "string"
        },
        "parameters": {
          "allOf": [
            {
              "$ref": "#/definitions/TaskParameters"
            },
            {
              "$ref": "#/definitions/PreBuiltTaskParameters"
            }
          ]
        }
      }
    },
    "KeyPhraseTaskResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/KeyPhraseResult"
        }
      }
    },
    "KeyPhraseResult": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PreBuiltResult"
        },
        {
          "$ref": "#/definitions/KeyPhraseDocuments"
        }
      ]
    },
    "KeyPhraseDocuments": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/DocumentResult"
              },
              {
                "$ref": "#/definitions/KeyPhraseDocumentResult"
              }
            ]
          }
        }
      },
      "required": [
        "documents"
      ]
    },
    "KeyPhraseDocumentResult": {
      "type": "object",
      "required": [
        "keyPhrases"
      ],
      "properties": {
        "keyPhrases": {
          "type": "array",
          "description": "A list of representative words or phrases. The number of key phrases returned is proportional to the number of words in the input record.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AnalyzeTextJobState": {
      "allOf": [
        {
          "$ref": "#/definitions/JobState"
        },
        {
          "$ref": "#/definitions/TasksState"
        },
        {
          "$ref": "#/definitions/AnalyzeTextJobStatistics"
        }
      ]
    },
    "Pagination": {
      "properties": {
        "nextLink": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JobMetadata": {
      "properties": {
        "displayName": {
          "type": "string"
        },
        "createdDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "expirationDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "jobId": {
          "format": "uuid",
          "type": "string"
        },
        "lastUpdateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "enum": [
            "notStarted",
            "running",
            "succeeded",
            "failed",
            "cancelled",
            "cancelling"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "State"
          }
        }
      },
      "required": [
        "jobId",
        "lastUpdateDateTime",
        "createdDateTime",
        "status"
      ],
      "type": "object"
    },
    "JobState": {
      "allOf": [
        {
          "$ref": "#/definitions/JobMetadata"
        },
        {
          "$ref": "#/definitions/JobErrors"
        },
        {
          "$ref": "#/definitions/Pagination"
        }
      ]
    },
    "JobErrors": {
      "properties": {
        "errors": {
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AnalyzeTextJobStatistics": {
      "properties": {
        "statistics": {
          "$ref": "#/definitions/RequestStatistics"
        }
      },
      "type": "object"
    },
    "TasksState": {
      "properties": {
        "tasks": {
          "properties": {
            "completed": {
              "type": "integer"
            },
            "failed": {
              "type": "integer"
            },
            "inProgress": {
              "type": "integer"
            },
            "total": {
              "type": "integer"
            },
            "customEntityRecognitionTasks": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/definitions/TaskState"
                  },
                  {
                    "$ref": "#/definitions/CustomEntitiesTaskResult"
                  }
                ]
              }
            },
            "customSingleClassificationTasks": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/definitions/TaskState"
                  },
                  {
                    "$ref": "#/definitions/CustomSingleClassificationTaskResult"
                  }
                ]
              }
            },
            "customMultiClassificationTasks": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/definitions/TaskState"
                  },
                  {
                    "$ref": "#/definitions/CustomMultiClassificationTaskResult"
                  }
                ]
              }
            },
            "entityRecognitionTasks": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/definitions/TaskState"
                  },
                  {
                    "$ref": "#/definitions/EntitiesTaskResult"
                  }
                ]
              }
            },
            "entityRecognitionPiiTasks": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/definitions/TaskState"
                  },
                  {
                    "$ref": "#/definitions/PiiTaskResult"
                  }
                ]
              }
            },
            "keyPhraseExtractionTasks": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/definitions/TaskState"
                  },
                  {
                    "$ref": "#/definitions/KeyPhraseTaskResult"
                  }
                ]
              }
            },
            "entityLinkingTasks": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/definitions/TaskState"
                  },
                  {
                    "$ref": "#/definitions/EntityLinkingTaskResult"
                  }
                ]
              }
            },
            "sentimentAnalysisTasks": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/definitions/TaskState"
                  },
                  {
                    "$ref": "#/definitions/SentimentTaskResult"
                  }
                ]
              }
            },
            "extractiveSummarizationTasks": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/definitions/TaskState"
                  },
                  {
                    "$ref": "#/definitions/ExtractiveSummarizationTaskResult"
                  }
                ]
              }
            }
          },
          "required": [
            "total",
            "completed",
            "failed",
            "inProgress"
          ],
          "type": "object"
        }
      },
      "required": [
        "tasks"
      ],
      "type": "object"
    },
    "TaskState": {
      "properties": {
        "lastUpdateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "taskName": {
          "type": "string"
        },
        "status": {
          "enum": [
            "notStarted",
            "running",
            "succeeded",
            "failed",
            "rejected",
            "cancelled",
            "cancelling"
          ],
          "x-ms-enum": {
            "modelAsString": false,
            "name": "State"
          }
        }
      },
      "required": [
        "status",
        "lastUpdateDateTime",
        "taskName"
      ],
      "type": "object"
    },
    "StringIndexType": {
      "type": "string",
      "description": "Specifies the method used to interpret string offsets.  Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information see https://aka.ms/text-analytics-offsets.",
      "default": "TextElements_v8",
      "enum": [
        "TextElements_v8",
        "UnicodeCodePoint",
        "Utf16CodeUnit"
      ],
      "x-ms-enum": {
        "name": "StringIndexType",
        "modelAsString": true,
        "values": [
          {
            "value": "TextElements_v8",
            "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
          },
          {
            "value": "UnicodeCodePoint",
            "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
          },
          {
            "value": "Utf16CodeUnit",
            "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
          }
        ]
      }
    },
    "DocumentResult": {
      "type": "object",
      "required": [
        "id",
        "warnings"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty record identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing record.",
          "items": {
            "$ref": "#/definitions/DocumentWarning"
          }
        },
        "statistics": {
          "description": "if showStats=true was specified in the request this field will contain information about the record payload.",
          "$ref": "#/definitions/DocumentStatistics"
        }
      }
    },
    "DocumentError": {
      "type": "object",
      "required": [
        "id",
        "error"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Document Id."
        },
        "error": {
          "type": "object",
          "description": "Document Error.",
          "$ref": "#/definitions/Error"
        }
      }
    },
    "DocumentWarning": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "LongWordsInDocument",
            "DocumentTruncated"
          ],
          "x-ms-enum": {
            "name": "WarningCodeValue",
            "modelAsString": true
          },
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "description": "Warning message."
        },
        "targetRef": {
          "type": "string",
          "description": "A JSON pointer reference indicating the target object."
        }
      }
    },
    "DocumentStatistics": {
      "type": "object",
      "required": [
        "charactersCount",
        "transactionsCount"
      ],
      "properties": {
        "charactersCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of text elements recognized in the record."
        },
        "transactionsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of transactions for the record."
        }
      },
      "description": "if showStats=true was specified in the request this field will contain information about the record payload."
    },
    "RequestStatistics": {
      "type": "object",
      "required": [
        "documentsCount",
        "validDocumentsCount",
        "erroneousDocumentsCount",
        "transactionsCount"
      ],
      "properties": {
        "documentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of documents submitted in the request."
        },
        "validDocumentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of valid documents. This excludes empty, over-size limit or non-supported languages documents."
        },
        "erroneousDocumentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of invalid documents. This includes empty, over-size limit or non-supported languages documents."
        },
        "transactionsCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of transactions for the request."
        }
      },
      "description": "if showStats=true was specified in the request this field will contain information about the request payload."
    },
    "MultiLanguageBatchInput": {
      "type": "object",
      "description": "Contains a set of input documents to be analyzed by the service.",
      "required": [
        "documents"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "description": "The set of documents to process as part of this batch.",
          "items": {
            "$ref": "#/definitions/MultiLanguageInput"
          }
        }
      }
    },
    "MultiLanguageInput": {
      "type": "object",
      "description": "Contains an input record to be analyzed by the service.",
      "required": [
        "id",
        "text"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique, non-empty record identifier."
        },
        "text": {
          "type": "string",
          "description": "The input text to process."
        },
        "language": {
          "type": "string",
          "description": "(Optional) This is the 2 letter ISO 639-1 representation of a language. For example, use \"en\" for English; \"es\" for Spanish etc. If not set, use \"en\" for English as default."
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "description": "Error response.",
      "properties": {
        "error": {
          "description": "The error object.",
          "$ref": "#/definitions/Error"
        }
      }
    },
    "Error": {
      "type": "object",
      "description": "The error object.",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "One of a server-defined set of error codes.",
          "$ref": "common.json#/definitions/ErrorCode"
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "innererror": {
          "description": "An object containing more specific information than the current object about the error.",
          "$ref": "#/definitions/InnerErrorModel"
        }
      }
    },
    "InnerErrorModel": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "additionalProperties": false,
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "One of a server-defined set of error codes.",
          "$ref": "common.json#/definitions/InnerErrorCode"
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Error details."
        },
        "target": {
          "type": "string",
          "description": "Error target."
        },
        "innererror": {
          "description": "An object containing more specific information than the current object about the error.",
          "$ref": "#/definitions/InnerErrorModel"
        }
      }
    }
  },
  "parameters": {
    "Endpoint": {
      "name": "Endpoint",
      "description": "Supported Cognitive Services endpoint (e.g., https://<resource-name>.api.cognitiveservices.azure.com).",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "in": "path",
      "x-ms-skip-url-encoding": true
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version."
    },
    "ShowStats": {
      "name": "showStats",
      "in": "query",
      "description": "(Optional) if set to true, response will contain request and record level statistics.",
      "type": "boolean",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "JobId": {
      "description": "Job ID",
      "format": "uuid",
      "in": "path",
      "name": "jobId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
