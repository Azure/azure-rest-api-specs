{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft Cognitive Language Service - Document Analysis",
    "description": "The language service API is a suite of natural language processing (NLP) skills built with best-in-class Microsoft machine learning algorithms.  The API can be used to analyze unstructured text for tasks such as sentiment analysis, key phrase extraction, language detection and question answering. Further documentation can be found in <a href=\"https://docs.microsoft.com/azure/cognitive-services/language-service/overview\">https://docs.microsoft.com/azure/cognitive-services/language-service/overview</a>.0",
    "version": "2023-11-15-preview"
  },
  "securityDefinitions": {
    "AADToken": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/azure/active-directory/develop/v1-overview) Flows. When paired with [Azure role-based access](https://docs.microsoft.com/azure/role-based-access-control/overview) control it can be used to control access to Azure Maps REST APIs. Azure role-based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built-in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios, we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Notes\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to. This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* \nThe `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* \nThe Azure role-based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.\n* \nUsage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently, Azure Active Directory [v1.0 or v2.0](https://docs.microsoft.com/azure/active-directory/develop/azure-ad-endpoint-comparison) supports Work, School, and Guests but does not support Personal accounts.",
      "scopes": {
        "https://cognitiveservices.azure.com/.default": "https://cognitiveservices.azure.com/.default"
      }
    },
    "apim_key": {
      "type": "apiKey",
      "description": "A subscription key for a Language service resource.",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    }
  },
  "security": [
    {
      "AADToken": [
        "https://cognitiveservices.azure.com/.default"
      ]
    },
    {
      "apim_key": []
    }
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{Endpoint}/language",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "common.json#/parameters/Endpoint"
      }
    ]
  },
  "paths": {
    "/analyze-documents/jobs": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Submit a collection of documents for analysis. Specify one or more unique tasks to be executed as a long-running operation.",
        "operationId": "AnalyzeDocuments_SubmitJob",
        "summary": "Submit document analysis job",
        "parameters": [
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          },
          {
            "description": "Collection of documents to analyze and one or more tasks to execute.",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AnalyzeDocumentJobsInput"
            },
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the analysis job.",
            "headers": {
              "Operation-Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Successful PII redaction Request": {
            "$ref": "./examples/analyzedocuments/SuccessfulPiiTaskSubmit.json"
          }
        }
      }
    },
    "/analyze-documents/jobs/{jobId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "description": "Get the status of an analysis job. A job may consist of one or more tasks. Once all tasks are succeeded, the job will transition to the succeeded state and results will be available for each task.",
        "operationId": "AnalyzeDocuments_JobStatus",
        "summary": "Get analysis status and results",
        "parameters": [
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/JobId"
          },
          {
            "$ref": "#/parameters/ShowStats"
          },
          {
            "$ref": "common.json#/parameters/TopParameter"
          },
          {
            "$ref": "common.json#/parameters/SkipParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Analysis job status and metadata.",
            "schema": {
              "$ref": "#/definitions/AnalyzeDocumentsJobState"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful PII redaction Result": {
            "$ref": "./examples/analyzedocuments/SuccessfulPiiTaskResult.json"
          }
        }
      }
    },
    "/analyze-documents/jobs/{jobId}:cancel": {
      "post": {
        "produces": [
          "application/json"
        ],
        "description": "Cancel a long-running Document Analysis job.",
        "operationId": "AnalyzeDocuments_CancelJob",
        "summary": "Cancel a long-running Document Analysis job",
        "parameters": [
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/JobId"
          }
        ],
        "responses": {
          "202": {
            "description": "Cancel Job request has been received.",
            "headers": {
              "Operation-Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Successful job cancellation request": {
            "$ref": "./examples/analyzedocuments/SuccessfulAnalyzeTextJobsCancelRequest.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AnalyzeDocumentJobsInput": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Optional display name for the analysis job.",
          "type": "string"
        },
        "analysisInput": {
          "$ref": "#/definitions/MultiLanguageAnalysisInput"
        },
        "tasks": {
          "description": "The set of tasks to execute on the input documents.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnalyzeDocumentsLROTask"
          }
        }
      },
      "required": [
        "analysisInput",
        "tasks"
      ]
    },
    "MultiLanguageAnalysisInput": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MultiLanguageInput"
          }
        }
      }
    },
    "MultiLanguageInput": {
      "type": "object",
      "description": "Contains an input document to be analyzed by the service.",
      "required": [
        "id",
        "source",
        "target"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique, non-empty document identifier."
        },
        "source": {
          "$ref": "#/definitions/DocumentLocation"
        },
        "target": {
          "$ref": "#/definitions/DocumentLocation"
        },
        "language": {
          "type": "string",
          "description": "(Optional) This is the 2 letter ISO 639-1 representation of a language. For example, use \"en\" for English; \"es\" for Spanish etc. For Auto Language Detection, use \"auto\". If not set, use \"en\" for English as default."
        }
      }
    },
    "DocumentLocation": {
      "type": "object",
      "discriminator": "kind",
      "properties": {
        "kind": {
          "$ref": "#/definitions/DocumentLocationKind"
        }
      },
      "required": [
        "kind"
      ]
    },
    "AzureBlobDocumentLocation": {
      "type": "object",
      "properties": {
        "location": {
          "description": "Location of the file to process",
          "type": "string"
        },
        "managedIdentityClientId": {
          "description": "The managed identity client Id to use to authenticate with the storage account",
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DocumentLocation"
        }
      ],
      "required": [
        "location"
      ],
      "x-ms-discriminator-value": "AzureBlob"
    },
    "DocumentLocationKind": {
      "type": "string",
      "description": "Enumeration of supported document locations.",
      "enum": [
        "AzureBlob"
      ],
      "x-ms-enum": {
        "name": "DocumentLocationKind",
        "modelAsString": true,
        "values": [
          {
            "name": "AzureBlob",
            "value": "AzureBlob",
            "description": "The document is a URL."
          }
        ]
      }
    },
    "AnalyzeDocumentsLROTask": {
      "type": "object",
      "discriminator": "kind",
      "required": [
        "kind"
      ],
      "properties": {
        "kind": {
          "$ref": "#/definitions/AnalyzeDocumentsLROTaskKind"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TaskIdentifier"
        }
      ]
    },
    "AnalyzeDocumentsLROTaskKind": {
      "type": "string",
      "description": "Enumeration of supported long-running Document Analysis tasks.",
      "enum": [
        "PiiEntityRecognition",
        "ExtractiveSummarization",
        "AbstractiveSummarization"
      ],
      "x-ms-enum": {
        "name": "AnalyzeDocumentsLROTaskKind",
        "modelAsString": true
      }
    },
    "AnalyzeDocumentsJobState": {
      "allOf": [
        {
          "$ref": "common.json#/definitions/JobState"
        },
        {
          "$ref": "#/definitions/TasksState"
        },
        {
          "$ref": "#/definitions/AnalyzeDocumentsJobStatistics"
        }
      ]
    },
    "AnalyzeDocumentsJobStatistics": {
      "properties": {
        "statistics": {
          "$ref": "common.json#/definitions/RequestStatistics"
        }
      },
      "type": "object"
    },
    "TasksState": {
      "properties": {
        "tasks": {
          "properties": {
            "completed": {
              "type": "integer",
              "format": "int64"
            },
            "failed": {
              "type": "integer",
              "format": "int64"
            },
            "inProgress": {
              "type": "integer",
              "format": "int64"
            },
            "total": {
              "type": "integer",
              "format": "int64"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AnalyzeDocumentsLROResult"
              }
            }
          },
          "required": [
            "total",
            "completed",
            "failed",
            "inProgress"
          ],
          "type": "object"
        }
      },
      "required": [
        "tasks"
      ],
      "type": "object"
    },
    "AnalyzeDocumentsLROResult": {
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/AnalyzeDocumentsLROResultsKind"
        },
        "results": {
          "$ref": "#/definitions/AnalyzeDocumentsLROTaskResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TaskState"
        },
        {
          "$ref": "#/definitions/TaskIdentifier"
        }
      ],
      "required": [
        "kind"
      ]
    },
    "AnalyzeDocumentsLROResultsKind": {
      "type": "string",
      "description": "Enumeration of supported Document Analysis long-running operation task results.",
      "enum": [
        "PiiEntityRecognitionLROResults",
        "ExtractiveSummarizationLROResults",
        "AbstractiveSummarizationLROResults"
      ],
      "x-ms-enum": {
        "name": "AnalyzeDocumentsLROResultsKind",
        "modelAsString": true
      }
    },
    "TaskState": {
      "properties": {
        "lastUpdateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "notStarted",
            "running",
            "succeeded",
            "failed",
            "cancelled",
            "cancelling"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "State"
          }
        }
      },
      "required": [
        "status",
        "lastUpdateDateTime"
      ],
      "type": "object"
    },
    "AnalyzeDocumentsLROTaskResult": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/DocumentResultWithDetectedLanguage"
          }
        }
      },
      "allOf": [
        {
          "$ref": "common.json#/definitions/PreBuiltResult"
        }
      ],
      "required": [
        "documents"
      ]
    },
    "DocumentResultWithDetectedLanguage": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DocumentResult"
        },
        {
          "$ref": "#/definitions/DocumentDetectedLanguage"
        }
      ]
    },
    "DocumentDetectedLanguage": {
      "type": "object",
      "properties": {
        "detectedLanguage": {
          "$ref": "#/definitions/DetectedLanguage",
          "description": "If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document."
        }
      }
    },
    "DetectedLanguage": {
      "type": "object",
      "required": [
        "name",
        "iso6391Name",
        "confidenceScore"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Long name of a detected language (e.g. English, French)."
        },
        "iso6391Name": {
          "type": "string",
          "description": "A two letter representation of the detected language according to the ISO 639-1 standard (e.g. en, fr)."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "A confidence score between 0 and 1. Scores close to 1 indicate 100% certainty that the identified language is true."
        }
      }
    },
    "DocumentResult": {
      "type": "object",
      "required": [
        "id",
        "warnings"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/DocumentWarning"
          }
        },
        "statistics": {
          "description": "if showStats=true was specified in the request this field will contain information about the document payload.",
          "$ref": "#/definitions/DocumentStatistics"
        },
        "source": {
          "$ref": "#/definitions/DocumentLocation",
          "description": "The location of the input document."
        },
        "target": {
          "type": "array",
          "description": "The location of the result files.",
          "items": {
            "$ref": "#/definitions/DocumentLocation"
          }
        }
      }
    },
    "DocumentWarning": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "LongWordsInDocument",
            "DocumentTruncated"
          ],
          "x-ms-enum": {
            "name": "WarningCodeValue",
            "modelAsString": true
          },
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "description": "Warning message."
        },
        "targetRef": {
          "type": "string",
          "description": "A JSON pointer reference indicating the target object."
        }
      }
    },
    "DocumentStatistics": {
      "type": "object",
      "required": [
        "charactersCount",
        "transactionsCount"
      ],
      "properties": {
        "charactersCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of text elements recognized in the document."
        },
        "transactionsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of transactions for the document."
        }
      },
      "description": "if showStats=true was specified in the request this field will contain information about the document payload."
    },
    "PiiLROTask": {
      "type": "object",
      "description": "An object representing the task definition for a PII Entities Recognition task.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/PiiTaskParameters"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeDocumentsLROTask"
        }
      ],
      "x-ms-discriminator-value": "PiiEntityRecognition"
    },
    "PiiTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a PII Entities Recognition task.",
      "properties": {
        "domain": {
          "$ref": "#/definitions/PiiDomain"
        },
        "piiCategories": {
          "$ref": "common.json#/definitions/PiiCategory"
        },
        "excludePiiCategories": {
          "$ref": "#/definitions/PiiCategoriesExclude"
        },
        "stringIndexType": {
          "$ref": "common.json#/definitions/StringIndexType"
        },
        "redactionCharacter": {
          "$ref": "#/definitions/RedactionCharacter"
        }
      },
      "allOf": [
        {
          "$ref": "common.json#/definitions/PreBuiltTaskParameters"
        }
      ]
    },
    "PiiDomain": {
      "type": "string",
      "description": "The PII domain used for PII Entity Recognition.",
      "default": "none",
      "enum": [
        "phi",
        "none"
      ],
      "x-ms-enum": {
        "name": "PiiDomain",
        "modelAsString": true,
        "values": [
          {
            "name": "phi",
            "description": "Indicates that entities in the Personal Health Information domain should be redacted.",
            "value": "phi"
          },
          {
            "name": "none",
            "description": "Indicates that no domain is specified.",
            "value": "none"
          }
        ]
      }
    },
    "piiCategories": {
      "type": "array",
      "description": "Enumeration of PII categories to be returned in the response.",
      "items": {
        "$ref": "common.json#/definitions/PiiCategory"
      }
    },
    "PiiCategoriesExclude": {
      "description": "(Optional) describes the PII categories to return",
      "items": {
        "type": "string",
        "x-ms-enum": {
          "name": "PiiCategoriesExclude",
          "modelAsString": true
        },
        "enum": [
          "ABARoutingNumber",
          "ARNationalIdentityNumber",
          "AUBankAccountNumber",
          "AUDriversLicenseNumber",
          "AUMedicalAccountNumber",
          "AUPassportNumber",
          "AUTaxFileNumber",
          "AUBusinessNumber",
          "AUCompanyNumber",
          "ATIdentityCard",
          "ATTaxIdentificationNumber",
          "ATValueAddedTaxNumber",
          "AzureDocumentDBAuthKey",
          "AzureIAASDatabaseConnectionAndSQLString",
          "AzureIoTConnectionString",
          "AzurePublishSettingPassword",
          "AzureRedisCacheString",
          "AzureSAS",
          "AzureServiceBusString",
          "AzureStorageAccountKey",
          "AzureStorageAccountGeneric",
          "BENationalNumber",
          "BENationalNumberV2",
          "BEValueAddedTaxNumber",
          "BRCPFNumber",
          "BRLegalEntityNumber",
          "BRNationalIDRG",
          "BGUniformCivilNumber",
          "CABankAccountNumber",
          "CADriversLicenseNumber",
          "CAHealthServiceNumber",
          "CAPassportNumber",
          "CAPersonalHealthIdentification",
          "CASocialInsuranceNumber",
          "CLIdentityCardNumber",
          "CNResidentIdentityCardNumber",
          "CreditCardNumber",
          "HRIdentityCardNumber",
          "HRNationalIDNumber",
          "HRPersonalIdentificationNumber",
          "HRPersonalIdentificationOIBNumberV2",
          "CYIdentityCard",
          "CYTaxIdentificationNumber",
          "CZPersonalIdentityNumber",
          "CZPersonalIdentityV2",
          "DKPersonalIdentificationNumber",
          "DKPersonalIdentificationV2",
          "DrugEnforcementAgencyNumber",
          "EEPersonalIdentificationCode",
          "EUDebitCardNumber",
          "EUDriversLicenseNumber",
          "EUGPSCoordinates",
          "EUNationalIdentificationNumber",
          "EUPassportNumber",
          "EUSocialSecurityNumber",
          "EUTaxIdentificationNumber",
          "FIEuropeanHealthNumber",
          "FINationalID",
          "FINationalIDV2",
          "FIPassportNumber",
          "FRDriversLicenseNumber",
          "FRHealthInsuranceNumber",
          "FRNationalID",
          "FRPassportNumber",
          "FRSocialSecurityNumber",
          "FRTaxIdentificationNumber",
          "FRValueAddedTaxNumber",
          "DEDriversLicenseNumber",
          "DEPassportNumber",
          "DEIdentityCardNumber",
          "DETaxIdentificationNumber",
          "DEValueAddedNumber",
          "GRNationalIDCard",
          "GRNationalIDV2",
          "GRTaxIdentificationNumber",
          "HKIdentityCardNumber",
          "HUValueAddedNumber",
          "HUPersonalIdentificationNumber",
          "HUTaxIdentificationNumber",
          "INPermanentAccount",
          "INUniqueIdentificationNumber",
          "IDIdentityCardNumber",
          "InternationalBankingAccountNumber",
          "IEPersonalPublicServiceNumber",
          "IEPersonalPublicServiceNumberV2",
          "ILBankAccountNumber",
          "ILNationalID",
          "ITDriversLicenseNumber",
          "ITFiscalCode",
          "ITValueAddedTaxNumber",
          "JPBankAccountNumber",
          "JPDriversLicenseNumber",
          "JPPassportNumber",
          "JPResidentRegistrationNumber",
          "JPSocialInsuranceNumber",
          "JPMyNumberCorporate",
          "JPMyNumberPersonal",
          "JPResidenceCardNumber",
          "LVPersonalCode",
          "LTPersonalCode",
          "LUNationalIdentificationNumberNatural",
          "LUNationalIdentificationNumberNonNatural",
          "MYIdentityCardNumber",
          "MTIdentityCardNumber",
          "MTTaxIDNumber",
          "NLCitizensServiceNumber",
          "NLCitizensServiceNumberV2",
          "NLTaxIdentificationNumber",
          "NLValueAddedTaxNumber",
          "NZBankAccountNumber",
          "NZDriversLicenseNumber",
          "NZInlandRevenueNumber",
          "NZMinistryOfHealthNumber",
          "NZSocialWelfareNumber",
          "NOIdentityNumber",
          "PHUnifiedMultiPurposeIDNumber",
          "PLIdentityCard",
          "PLNationalID",
          "PLNationalIDV2",
          "PLPassportNumber",
          "PLTaxIdentificationNumber",
          "PLREGONNumber",
          "PTCitizenCardNumber",
          "PTCitizenCardNumberV2",
          "PTTaxIdentificationNumber",
          "ROPersonalNumericalCode",
          "RUPassportNumberDomestic",
          "RUPassportNumberInternational",
          "SANationalID",
          "SGNationalRegistrationIdentityCardNumber",
          "SKPersonalNumber",
          "SITaxIdentificationNumber",
          "SIUniqueMasterCitizenNumber",
          "ZAIdentificationNumber",
          "KRResidentRegistrationNumber",
          "ESDNI",
          "ESSocialSecurityNumber",
          "ESTaxIdentificationNumber",
          "SQLServerConnectionString",
          "SENationalID",
          "SENationalIDV2",
          "SEPassportNumber",
          "SETaxIdentificationNumber",
          "SWIFTCode",
          "CHSocialSecurityNumber",
          "TWNationalID",
          "TWPassportNumber",
          "TWResidentCertificate",
          "THPopulationIdentificationCode",
          "TRNationalIdentificationNumber",
          "UKDriversLicenseNumber",
          "UKElectoralRollNumber",
          "UKNationalHealthNumber",
          "UKNationalInsuranceNumber",
          "UKUniqueTaxpayerNumber",
          "USUKPassportNumber",
          "USBankAccountNumber",
          "USDriversLicenseNumber",
          "USIndividualTaxpayerIdentification",
          "USSocialSecurityNumber",
          "UAPassportNumberDomestic",
          "UAPassportNumberInternational",
          "Organization",
          "Email",
          "URL",
          "Age",
          "PhoneNumber",
          "IPAddress",
          "Date",
          "Person",
          "Address"
        ]
      },
      "type": "array",
      "uniqueItems": true
    },
    "PiiEntitiesDocumentResult": {
      "type": "object",
      "properties": {
        "redactedText": {
          "type": "string",
          "description": "Returns redacted text."
        },
        "entities": {
          "type": "array",
          "description": "Recognized entities in the document.",
          "items": {
            "$ref": "#/definitions/Entity"
          }
        }
      },
      "required": [
        "redactedText",
        "entities"
      ]
    },
    "Entity": {
      "type": "object",
      "required": [
        "text",
        "category",
        "offset",
        "length",
        "confidenceScore"
      ],
      "properties": {
        "text": {
          "type": "string",
          "description": "Entity text as appears in the request."
        },
        "category": {
          "type": "string",
          "description": "Entity type."
        },
        "subcategory": {
          "type": "string",
          "description": "(Optional) Entity sub type."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position for the entity text. Use of different 'stringIndexType' values can affect the offset returned."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Length for the entity text. Use of different 'stringIndexType' values can affect the length returned."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "Confidence score between 0 and 1 of the extracted entity."
        }
      }
    },
    "ExtractiveSummarizationLROTask": {
      "type": "object",
      "description": "An object representing the task definition for an Extractive Summarization task.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/ExtractiveSummarizationTaskParameters"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeDocumentsLROTask"
        }
      ],
      "x-ms-discriminator-value": "ExtractiveSummarization"
    },
    "ExtractiveSummarizationTaskParameters": {
      "type": "object",
      "description": "Supported parameters for an Extractive Summarization task.",
      "properties": {
        "sentenceCount": {
          "type": "integer",
          "default": 3,
          "format": "int64"
        },
        "sortBy": {
          "$ref": "#/definitions/ExtractiveSummarizationSortingCriteria"
        },
        "stringIndexType": {
          "$ref": "common.json#/definitions/StringIndexType"
        }
      },
      "allOf": [
        {
          "$ref": "common.json#/definitions/PreBuiltTaskParameters"
        }
      ]
    },
    "ExtractiveSummarizationSortingCriteria": {
      "type": "string",
      "default": "Offset",
      "description": "The sorting criteria to use for the results of Extractive Summarization.",
      "enum": [
        "Offset",
        "Rank"
      ],
      "x-ms-enum": {
        "name": "ExtractiveSummarizationSortingCriteria",
        "modelAsString": true,
        "values": [
          {
            "name": "Offset",
            "description": "Indicates that results should be sorted in order of appearance in the text.",
            "value": "Offset"
          },
          {
            "name": "Rank",
            "description": "Indicates that results should be sorted in order of importance (i.e. rank score) according to the model.",
            "value": "Rank"
          }
        ]
      }
    },
    "ExtractedSummaryDocumentResult": {
      "type": "object",
      "properties": {
        "sentences": {
          "type": "array",
          "description": "A ranked list of sentences representing the extracted summary.",
          "items": {
            "$ref": "#/definitions/ExtractedSummarySentence"
          }
        }
      },
      "required": [
        "sentences"
      ]
    },
    "ExtractedSummarySentence": {
      "type": "object",
      "required": [
        "text",
        "rankScore",
        "offset",
        "length"
      ],
      "properties": {
        "text": {
          "type": "string",
          "description": "The extracted sentence text."
        },
        "rankScore": {
          "type": "number",
          "format": "double",
          "description": "A double value representing the relevance of the sentence within the summary. Higher values indicate higher importance."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "The sentence offset from the start of the document, based on the value of the parameter StringIndexType."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the sentence."
        }
      }
    },
    "AbstractiveSummarizationLROTask": {
      "type": "object",
      "description": "An object representing the task definition for an Abstractive Summarization task.",
      "required": [
        "parameters"
      ],
      "properties": {
        "parameters": {
          "$ref": "#/definitions/AbstractiveSummarizationTaskParameters"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeDocumentsLROTask"
        }
      ],
      "x-ms-discriminator-value": "AbstractiveSummarization"
    },
    "AbstractiveSummarizationTaskParameters": {
      "type": "object",
      "description": "Supported parameters for the pre-build Abstractive Summarization task.",
      "allOf": [
        {
          "$ref": "common.json#/definitions/AbstractiveSummarizationTaskParametersBase"
        },
        {
          "$ref": "common.json#/definitions/PreBuiltTaskParameters"
        }
      ]
    },
    "AbstractiveSummaryDocumentResult": {
      "type": "object",
      "description": "An object representing the summarization result of a single document.",
      "properties": {
        "summaries": {
          "type": "array",
          "description": "A list of abstractive summaries.",
          "items": {
            "$ref": "#/definitions/AbstractiveSummary"
          }
        }
      },
      "required": [
        "summaries"
      ]
    },
    "AbstractiveSummary": {
      "type": "object",
      "description": "An object representing a single summary with context for given document.",
      "properties": {
        "text": {
          "type": "string",
          "description": "The text of the summary."
        },
        "contexts": {
          "type": "array",
          "description": "The context list of the summary.",
          "items": {
            "$ref": "common.json#/definitions/SummaryContext"
          }
        }
      },
      "required": [
        "text"
      ]
    },
    "Language": {
      "type": "string",
      "description": "Language of the text records. This is BCP-47 representation of a language. For example, use \"en\" for English; \"es\" for Spanish etc. If not set, use \"en\" for English as default."
    },
    "RedactionCharacter": {
      "type": "string",
      "description": "Optional parameter to use a Custom Character to be used for redaction in PII responses. Default character will be * as before. We allow specific ascii characters for redaction.",
      "default": "*",
      "x-ms-enum": {
        "name": "redactionCharacter",
        "modelAsString": true
      },
      "enum": [
        "!",
        "#",
        "$",
        "%",
        "&",
        "*",
        "+",
        "-",
        "=",
        "?",
        "@",
        "^",
        "_",
        "~"
      ]
    },
    "TaskIdentifier": {
      "type": "object",
      "description": "Base task object.",
      "properties": {
        "taskName": {
          "type": "string"
        }
      }
    },
    "TaskParameters": {
      "type": "object",
      "description": "Base parameters object for a text analysis task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "AbstractiveSummarizationTaskParametersBase": {
      "type": "object",
      "description": "Supported parameters for an Abstractive Summarization task.",
      "properties": {
        "sentenceCount": {
          "type": "integer",
          "format": "int32",
          "description": "It controls the approximate number of sentences in the output summaries."
        },
        "stringIndexType": {
          "$ref": "common.json#/definitions/StringIndexType"
        }
      }
    },
    "SummaryContext": {
      "type": "object",
      "description": "The context of the summary.",
      "required": [
        "offset",
        "length"
      ],
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position for the context. Use of different 'stringIndexType' values can affect the offset returned."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the context. Use of different 'stringIndexType' values can affect the length returned."
        }
      }
    }
  },
  "parameters": {
    "ShowStats": {
      "name": "showStats",
      "in": "query",
      "description": "(Optional) if set to true, response will contain request and document level statistics.",
      "type": "boolean",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "JobId": {
      "description": "Job ID",
      "format": "uuid",
      "in": "path",
      "name": "jobId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
