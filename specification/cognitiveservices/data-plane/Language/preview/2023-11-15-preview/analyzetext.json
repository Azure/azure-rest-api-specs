{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft Cognitive Language Service - Text Analysis",
    "version": "2023-11-15-preview",
    "description": "The language service API is a suite of natural language processing (NLP) skills built with best-in-class Microsoft machine learning algorithms.  The API can be used to analyze unstructured text for tasks such as sentiment analysis, key phrase extraction, language detection and question answering. Further documentation can be found in <a href=\\\"https://docs.microsoft.com/azure/cognitive-services/language-service/overview\\\">https://docs.microsoft.com/azure/cognitive-services/language-service/overview</a>.0",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{Endpoint}/language",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "Endpoint",
        "in": "path",
        "description": "Supported Cognitive Services endpoint (e.g., https://<resource-name>.api.cognitiveservices.azure.com).",
        "required": true,
        "type": "string"
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    }
  },
  "tags": [],
  "paths": {
    "/:analyze-text": {
      "post": {
        "operationId": "AnalyzeText",
        "description": "Request text analysis over a collection of documents.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "showStats",
            "in": "query",
            "description": "(Optional) if set to true, response will contain request and document level statistics.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyzeTextTask"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AnalyzeTextTaskResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "SuccessfulDynamicClassificationRequest": {
            "$ref": "./examples/SuccessfulDynamicClassificationRequest.json"
          },
          "SuccessfulEntityLinkingRequest": {
            "$ref": "./examples/SuccessfulEntityLinkingRequest.json"
          },
          "SuccessfulEntityRecognitionExclusionRequest": {
            "$ref": "./examples/SuccessfulEntityRecognitionExclusionRequest.json"
          },
          "SuccessfulEntityRecognitionInclusionRequest": {
            "$ref": "./examples/SuccessfulEntityRecognitionInclusionRequest.json"
          },
          "SuccessfulEntityRecognitionInferenceOptionsRequest": {
            "$ref": "./examples/SuccessfulEntityRecognitionInferenceOptionsRequest.json"
          },
          "SuccessfulEntityRecognitionOverlapPolicy": {
            "$ref": "./examples/SuccessfulEntityRecognitionOverlapPolicy.json"
          },
          "SuccessfulEntityRecognitionRequest": {
            "$ref": "./examples/SuccessfulEntityRecognitionRequest.json"
          },
          "SuccessfulKeyPhraseExtractionRequest": {
            "$ref": "./examples/SuccessfulKeyPhraseExtractionRequest.json"
          },
          "SuccessfulLanguageDetectionRequest": {
            "$ref": "./examples/SuccessfulLanguageDetectionRequest.json"
          },
          "SuccessfulPiiEntityRecognitionExclusionRequest": {
            "$ref": "./examples/SuccessfulPiiEntityRecognitionExclusionRequest.json"
          },
          "SuccessfulPiiEntityRecognitionRedactionRequest": {
            "$ref": "./examples/SuccessfulPiiEntityRecognitionRedactionRequest.json"
          },
          "SuccessfulPiiEntityRecognitionRequest": {
            "$ref": "./examples/SuccessfulPiiEntityRecognitionRequest.json"
          },
          "SuccessfulSentimentAnalysisRequest": {
            "$ref": "./examples/SuccessfulSentimentAnalysisRequest.json"
          }
        }
      }
    },
    "/analyze-text/jobs": {
      "post": {
        "operationId": "AnalyzeTextSubmitJob",
        "description": "Submit a collection of text documents for analysis. Specify one or more unique tasks to be executed as a long-running operation.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyzeTextJobsInput"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Operation-Location": {
                "type": "string",
                "format": "uri",
                "description": "The location for monitoring the operation state."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "SuccessfulAbstractiveSummarizationTaskSubmit": {
            "$ref": "./examples/SuccessfulAbstractiveSummarizationTaskSubmit.json"
          },
          "SuccessfulAnalyzeTextJobsMultipleTaskSubmitRequest": {
            "$ref": "./examples/SuccessfulAnalyzeTextJobsMultipleTaskSubmitRequest.json"
          },
          "SuccessfulCustomAbstractiveSummarizationTaskSubmit": {
            "$ref": "./examples/SuccessfulCustomAbstractiveSummarizationTaskSubmit.json"
          },
          "SuccessfulCustomHealthcarePostRequest": {
            "$ref": "./examples/SuccessfulCustomHealthcarePostRequest.json"
          },
          "SuccessfulCustomSentimentAnalysisTaskSubmit": {
            "$ref": "./examples/SuccessfulCustomSentimentAnalysisTaskSubmit.json"
          },
          "SuccessfulHealthcareDocumentTypePostRequest": {
            "$ref": "./examples/SuccessfulHealthcareDocumentTypePostRequest.json"
          },
          "SuccessfulHealthcarePostRequest": {
            "$ref": "./examples/SuccessfulHealthcarePostRequest.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/analyze-text/jobs/{jobId}": {
      "get": {
        "operationId": "AnalyzeTextJobStatus",
        "summary": "Get analysis status and results",
        "description": "Get the status of an analysis job. A job can consist of one or more tasks. After all tasks succeed, the job transitions to the succeeded state and results are available for each task.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "job ID",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "showStats",
            "in": "query",
            "description": "(Optional) if set to true, response will contain request and document level statistics.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "top",
            "in": "query",
            "description": "The maximum number of resources to return from the collection.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "An offset into the collection of the first resource to be returned.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AnalyzeTextJobState"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "SuccessfulAbstractiveSummarizationTaskResult": {
            "$ref": "./examples/SuccessfulAbstractiveSummarizationTaskResult.json"
          },
          "SuccessfulAnalyzeTextJobsMultipleTaskStatusRequest": {
            "$ref": "./examples/SuccessfulAnalyzeTextJobsMultipleTaskStatusRequest.json"
          },
          "SuccessfulCustomAbstractiveSummarizationTaskResult": {
            "$ref": "./examples/SuccessfulCustomAbstractiveSummarizationTaskResult.json"
          },
          "SuccessfulCustomHealthcareTaskStatusRequest": {
            "$ref": "./examples/SuccessfulCustomHealthcareTaskStatusRequest.json"
          },
          "SuccessfulCustomSentimentAnalysisTaskStatusRequest": {
            "$ref": "./examples/SuccessfulCustomSentimentAnalysisTaskStatusRequest.json"
          },
          "SuccessfulHealthcareDocumentTypeTaskStatusRequest": {
            "$ref": "./examples/SuccessfulHealthcareDocumentTypeTaskStatusRequest.json"
          },
          "SuccessfulHealthcareTaskStatusRequest": {
            "$ref": "./examples/SuccessfulHealthcareTaskStatusRequest.json"
          }
        }
      }
    },
    "/analyze-text/jobs/{jobId}:cancel": {
      "post": {
        "operationId": "AnalyzeTextCancelJob",
        "summary": "Cancel a long-running Text Analysis job.",
        "description": "Cancel a long-running Text Analysis job.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The job ID to cancel.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Operation-Location": {
                "type": "string",
                "format": "uri",
                "description": "The location for monitoring the operation state."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "SuccessfulAnalyzeTextJobsCancelRequest": {
            "$ref": "./examples/SuccessfulAnalyzeTextJobsCancelRequest.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AbstractiveSummarizationLROResult": {
      "type": "object",
      "description": "An object representing the results for an Abstractive Summarization task.",
      "properties": {
        "results": {
          "$ref": "#/definitions/AbstractiveSummarizationResult",
          "description": "Results of the task."
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROResult"
        }
      ],
      "x-ms-discriminator-value": "AbstractiveSummarizationLROResults"
    },
    "AbstractiveSummarizationLROTask": {
      "type": "object",
      "description": "An object representing the task definition for an Abstractive Summarization task.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/AbstractiveSummarizationTaskParameters",
          "description": "Parameters for the Abstractive Summarization task."
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROTask"
        }
      ],
      "x-ms-discriminator-value": "AbstractiveSummarization"
    },
    "AbstractiveSummarizationResult": {
      "type": "object",
      "description": "An object representing the pre-built Abstractive Summarization results of each document.",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        },
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/AbstractiveSummaryDocumentResultWithDetectedLanguage"
          }
        }
      },
      "required": [
        "errors",
        "modelVersion",
        "documents"
      ]
    },
    "AbstractiveSummarizationTaskParameters": {
      "type": "object",
      "description": "Supported parameters for the pre-built Abstractive Summarization task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "modelVersion": {
          "type": "string",
          "description": "model version",
          "default": "latest"
        },
        "sentenceCount": {
          "type": "integer",
          "format": "int32",
          "description": "Controls the approximate number of sentences in the output summaries."
        },
        "stringIndexType": {
          "type": "string",
          "description": "String index type",
          "default": "TextElements_v8",
          "enum": [
            "TextElements_v8",
            "UnicodeCodePoint",
            "Utf16CodeUnit"
          ],
          "x-ms-enum": {
            "name": "StringIndexType",
            "modelAsString": true,
            "values": [
              {
                "name": "TextElements_v8",
                "value": "TextElements_v8",
                "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
              },
              {
                "name": "UnicodeCodePoint",
                "value": "UnicodeCodePoint",
                "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
              },
              {
                "name": "Utf16CodeUnit",
                "value": "Utf16CodeUnit",
                "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
              }
            ]
          }
        },
        "summaryLength": {
          "$ref": "#/definitions/SummaryLengthBucket",
          "description": "(NOTE: Recommended to use summaryLength over sentenceCount) Controls the approximate length of the output summaries."
        },
        "query": {
          "type": "string",
          "description": "(Optional) If provided, the query will be used to generate the summary."
        }
      }
    },
    "AbstractiveSummary": {
      "type": "object",
      "description": "An object representing a single summary with context for given document.",
      "properties": {
        "text": {
          "type": "string",
          "description": "The text of the summary."
        },
        "contexts": {
          "type": "array",
          "description": "The context list of the summary.",
          "items": {
            "$ref": "#/definitions/SummaryContext"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "text"
      ]
    },
    "AbstractiveSummaryDocumentResultWithDetectedLanguage": {
      "type": "object",
      "description": "An object representing the Abstractive Summarization result of a single document with detected language.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/DocumentWarning"
          },
          "x-ms-identifiers": []
        },
        "statistics": {
          "$ref": "#/definitions/DocumentStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the document payload."
        },
        "summaries": {
          "type": "array",
          "description": "A list of abstractive summaries.",
          "items": {
            "$ref": "#/definitions/AbstractiveSummary"
          },
          "x-ms-identifiers": []
        },
        "detectedLanguage": {
          "$ref": "#/definitions/DetectedLanguage",
          "description": "If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document."
        }
      },
      "required": [
        "id",
        "warnings",
        "summaries"
      ]
    },
    "AgeMetadata": {
      "type": "object",
      "description": "Represents the Age entity Metadata model.",
      "properties": {
        "value": {
          "type": "number",
          "format": "double",
          "description": "The numeric value that the extracted text denotes."
        },
        "unit": {
          "$ref": "#/definitions/AgeUnit",
          "description": "Unit of measure for age."
        }
      },
      "required": [
        "value",
        "unit"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseMetadata"
        }
      ],
      "x-ms-discriminator-value": "AgeMetadata"
    },
    "AgeUnit": {
      "type": "string",
      "description": "The Age Unit of measurement",
      "enum": [
        "Unspecified",
        "Year",
        "Month",
        "Week",
        "Day"
      ],
      "x-ms-enum": {
        "name": "AgeUnit",
        "modelAsString": true,
        "values": [
          {
            "name": "Unspecified",
            "value": "Unspecified",
            "description": "Unspecified time period"
          },
          {
            "name": "Year",
            "value": "Year",
            "description": "Time period of a year"
          },
          {
            "name": "Month",
            "value": "Month",
            "description": "Time period of a month"
          },
          {
            "name": "Week",
            "value": "Week",
            "description": "Time period of a week"
          },
          {
            "name": "Day",
            "value": "Day",
            "description": "Time period of a day"
          }
        ]
      }
    },
    "AllowOverlapEntityPolicyType": {
      "type": "object",
      "description": "Represents the allow overlap policy. Will apply no post processing logic for the entities. Whatever the model predicts is what will be returned to the user. This allows the user to get a full view of every single model's possible values and apply their own custom logic on entity selection",
      "allOf": [
        {
          "$ref": "#/definitions/BaseEntityOverlapPolicy"
        }
      ],
      "x-ms-discriminator-value": "allowOverlap"
    },
    "AnalyzeTextDynamicClassificationInput": {
      "type": "object",
      "description": "Contains the analyze text dynamic classifications input.",
      "properties": {
        "analysisInput": {
          "$ref": "#/definitions/MultiLanguageAnalysisInput",
          "description": "Input to be analyzed."
        },
        "parameters": {
          "$ref": "#/definitions/DynamicClassificationTaskParameters",
          "description": "Task parameters."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextTask"
        }
      ],
      "x-ms-discriminator-value": "DynamicClassification"
    },
    "AnalyzeTextEntityLinkingInput": {
      "type": "object",
      "description": "Contains the analyze text Entity linking input.",
      "properties": {
        "analysisInput": {
          "$ref": "#/definitions/MultiLanguageAnalysisInput",
          "description": "Contains the analysis input to be handled by the service."
        },
        "parameters": {
          "$ref": "#/definitions/EntityLinkingTaskParameters",
          "description": "Task parameters."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextTask"
        }
      ],
      "x-ms-discriminator-value": "EntityLinking"
    },
    "AnalyzeTextEntityRecognitionInput": {
      "type": "object",
      "description": "The entity recognition analyze text input task request.",
      "properties": {
        "analysisInput": {
          "$ref": "#/definitions/MultiLanguageAnalysisInput",
          "description": "The input to be analyzed."
        },
        "parameters": {
          "$ref": "#/definitions/EntitiesTaskParameters",
          "description": "Task parameters."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextTask"
        }
      ],
      "x-ms-discriminator-value": "EntityRecognition"
    },
    "AnalyzeTextJobState": {
      "type": "object",
      "description": "The object containing the analyze job LRO job state.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "display name"
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time job created"
        },
        "expirationDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time job expires"
        },
        "jobId": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "job ID",
          "readOnly": true
        },
        "lastUpdatedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "last updated date and time"
        },
        "status": {
          "$ref": "#/definitions/State",
          "description": "status"
        },
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "description": "next link"
        },
        "tasks": {
          "$ref": "#/definitions/Tasks",
          "description": "List of tasks."
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        }
      },
      "required": [
        "createdDateTime",
        "jobId",
        "lastUpdatedDateTime",
        "status",
        "tasks"
      ]
    },
    "AnalyzeTextJobsInput": {
      "type": "object",
      "description": "The input object for the analyze text LRO.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Name for the task."
        },
        "analysisInput": {
          "$ref": "#/definitions/MultiLanguageAnalysisInput",
          "description": "Contains the input to be analyzed."
        },
        "tasks": {
          "type": "array",
          "description": "List of tasks to be performed as part of the LRO.",
          "items": {
            "$ref": "#/definitions/AnalyzeTextLROTask"
          },
          "x-ms-identifiers": []
        },
        "defaultLanguage": {
          "type": "string",
          "description": "Default language to use for records requesting automatic language detection."
        }
      },
      "required": [
        "analysisInput",
        "tasks"
      ]
    },
    "AnalyzeTextKeyPhraseExtractionInput": {
      "type": "object",
      "description": "Contains the analyze text KeyPhraseExtraction task input.",
      "properties": {
        "analysisInput": {
          "$ref": "#/definitions/MultiLanguageAnalysisInput",
          "description": "Contains the input documents."
        },
        "parameters": {
          "$ref": "#/definitions/KeyPhraseTaskParameters",
          "description": "Key phrase extraction task parameters."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextTask"
        }
      ],
      "x-ms-discriminator-value": "KeyPhraseExtraction"
    },
    "AnalyzeTextLROResult": {
      "type": "object",
      "description": "Contains the AnalyzeText long running operation result object.",
      "properties": {
        "lastUpdateDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last updated time in UTC for the task."
        },
        "status": {
          "$ref": "#/definitions/State",
          "description": "The status of the task at the mentioned last update time."
        },
        "taskName": {
          "type": "string",
          "description": "task name"
        },
        "kind": {
          "$ref": "#/definitions/AnalyzeTextLROResultsKind",
          "description": "Kind of the task."
        }
      },
      "discriminator": "kind",
      "required": [
        "lastUpdateDateTime",
        "status",
        "kind"
      ]
    },
    "AnalyzeTextLROResultsKind": {
      "type": "string",
      "description": "The kind of the response object returned by the analyze-text long running task.",
      "enum": [
        "SentimentAnalysisLROResults",
        "EntityRecognitionLROResults",
        "PiiEntityRecognitionLROResults",
        "KeyPhraseExtractionLROResults",
        "EntityLinkingLROResults",
        "HealthcareLROResults",
        "CustomEntityRecognitionLROResults",
        "CustomSingleLabelClassificationLROResults",
        "CustomMultiLabelClassificationLROResults",
        "ExtractiveSummarizationLROResults",
        "AbstractiveSummarizationLROResults",
        "CustomHealthcareLROResults",
        "CustomSentimentAnalysisLROResults",
        "CustomAbstractiveSummarizationLROResults"
      ],
      "x-ms-enum": {
        "name": "AnalyzeTextLROResultsKind",
        "modelAsString": true,
        "values": [
          {
            "name": "SentimentAnalysisLROResults",
            "value": "SentimentAnalysisLROResults",
            "description": "Sentiment analysis LRO results"
          },
          {
            "name": "EntityRecognitionLROResults",
            "value": "EntityRecognitionLROResults",
            "description": "Entity recognition LRO results"
          },
          {
            "name": "PiiEntityRecognitionLROResults",
            "value": "PiiEntityRecognitionLROResults",
            "description": "PII entity recognition LRO results"
          },
          {
            "name": "KeyPhraseExtractionLROResults",
            "value": "KeyPhraseExtractionLROResults",
            "description": "Key phrase extraction LRO results"
          },
          {
            "name": "EntityLinkingLROResults",
            "value": "EntityLinkingLROResults",
            "description": "Entity linking LRO results"
          },
          {
            "name": "HealthcareLROResults",
            "value": "HealthcareLROResults",
            "description": "Healthcare LRO results"
          },
          {
            "name": "CustomEntityRecognitionLROResults",
            "value": "CustomEntityRecognitionLROResults",
            "description": "Custom entity recognition LRO results"
          },
          {
            "name": "CustomSingleLabelClassificationLROResults",
            "value": "CustomSingleLabelClassificationLROResults",
            "description": "Custom single label classification LRO results"
          },
          {
            "name": "CustomMultiLabelClassificationLROResults",
            "value": "CustomMultiLabelClassificationLROResults",
            "description": "Custom multi label classification LRO results"
          },
          {
            "name": "ExtractiveSummarizationLROResults",
            "value": "ExtractiveSummarizationLROResults",
            "description": "Extractive summarization LRO results"
          },
          {
            "name": "AbstractiveSummarizationLROResults",
            "value": "AbstractiveSummarizationLROResults",
            "description": "Abstractive summarization LRO results"
          },
          {
            "name": "CustomHealthcareLROResults",
            "value": "CustomHealthcareLROResults",
            "description": "Custom healthcare LRO results"
          },
          {
            "name": "CustomSentimentAnalysisLROResults",
            "value": "CustomSentimentAnalysisLROResults",
            "description": "Custom sentiment analysis LRO results"
          },
          {
            "name": "CustomAbstractiveSummarizationLROResults",
            "value": "CustomAbstractiveSummarizationLROResults",
            "description": "Custom abstractive summarization LRO results"
          }
        ]
      }
    },
    "AnalyzeTextLROTask": {
      "type": "object",
      "description": "The long running task to be performed by the service on the input documents.",
      "properties": {
        "taskName": {
          "type": "string",
          "description": "task name"
        },
        "kind": {
          "$ref": "#/definitions/AnalyzeTextLROTaskKind",
          "description": "The kind of task to perform."
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ]
    },
    "AnalyzeTextLROTaskKind": {
      "type": "string",
      "description": "The kind of the long running analyze text tasks supported.",
      "enum": [
        "SentimentAnalysis",
        "EntityRecognition",
        "PiiEntityRecognition",
        "KeyPhraseExtraction",
        "EntityLinking",
        "Healthcare",
        "CustomEntityRecognition",
        "CustomSingleLabelClassification",
        "CustomMultiLabelClassification",
        "ExtractiveSummarization",
        "AbstractiveSummarization",
        "CustomHealthcare",
        "CustomSentimentAnalysis",
        "CustomAbstractiveSummarization"
      ],
      "x-ms-enum": {
        "name": "AnalyzeTextLROTaskKind",
        "modelAsString": true,
        "values": [
          {
            "name": "SentimentAnalysis",
            "value": "SentimentAnalysis",
            "description": "Sentiment analysis task"
          },
          {
            "name": "EntityRecognition",
            "value": "EntityRecognition",
            "description": "Entity recognition task"
          },
          {
            "name": "PiiEntityRecognition",
            "value": "PiiEntityRecognition",
            "description": "PII entity recognition task"
          },
          {
            "name": "KeyPhraseExtraction",
            "value": "KeyPhraseExtraction",
            "description": "Key phrase extraction task"
          },
          {
            "name": "EntityLinking",
            "value": "EntityLinking",
            "description": "Entity linking task"
          },
          {
            "name": "Healthcare",
            "value": "Healthcare",
            "description": "Healthcare task"
          },
          {
            "name": "CustomEntityRecognition",
            "value": "CustomEntityRecognition",
            "description": "Custom entity recognition task"
          },
          {
            "name": "CustomSingleLabelClassification",
            "value": "CustomSingleLabelClassification",
            "description": "Custom single label classification task"
          },
          {
            "name": "CustomMultiLabelClassification",
            "value": "CustomMultiLabelClassification",
            "description": "Custom multi label classification task"
          },
          {
            "name": "ExtractiveSummarization",
            "value": "ExtractiveSummarization",
            "description": "Extractive summarization task"
          },
          {
            "name": "AbstractiveSummarization",
            "value": "AbstractiveSummarization",
            "description": "Abstractive summarization task"
          },
          {
            "name": "CustomHealthcare",
            "value": "CustomHealthcare",
            "description": "Custom healthcare task"
          },
          {
            "name": "CustomSentimentAnalysis",
            "value": "CustomSentimentAnalysis",
            "description": "Custom sentiment analysis task"
          },
          {
            "name": "CustomAbstractiveSummarization",
            "value": "CustomAbstractiveSummarization",
            "description": "Custom abstractive summarization task"
          }
        ]
      }
    },
    "AnalyzeTextLanguageDetectionInput": {
      "type": "object",
      "description": "Contains the language detection document analysis task input.",
      "properties": {
        "analysisInput": {
          "$ref": "#/definitions/LanguageDetectionAnalysisInput",
          "description": "Documents to be analyzed."
        },
        "parameters": {
          "$ref": "#/definitions/LanguageDetectionTaskParameters",
          "description": "task parameters."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextTask"
        }
      ],
      "x-ms-discriminator-value": "LanguageDetection"
    },
    "AnalyzeTextPiiEntitiesRecognitionInput": {
      "type": "object",
      "description": "Contains the analyze text PIIEntityRecognition task input.",
      "properties": {
        "analysisInput": {
          "$ref": "#/definitions/MultiLanguageAnalysisInput",
          "description": "Contains the input documents."
        },
        "parameters": {
          "$ref": "#/definitions/PiiTaskParameters",
          "description": "Pii task parameters."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextTask"
        }
      ],
      "x-ms-discriminator-value": "PiiEntityRecognition"
    },
    "AnalyzeTextSentimentAnalysisInput": {
      "type": "object",
      "description": "Contains the analyze text SentimentAnalysis task input.",
      "properties": {
        "analysisInput": {
          "$ref": "#/definitions/MultiLanguageAnalysisInput",
          "description": "Contains the input documents."
        },
        "parameters": {
          "$ref": "#/definitions/SentimentAnalysisTaskParameters",
          "description": "Sentiment Analysis task parameters."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextTask"
        }
      ],
      "x-ms-discriminator-value": "SentimentAnalysis"
    },
    "AnalyzeTextTask": {
      "type": "object",
      "description": "Collection of documents to analyze and a single task to execute.",
      "properties": {
        "kind": {
          "$ref": "#/definitions/AnalyzeTextTaskKind",
          "description": "The kind of task to perform."
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ]
    },
    "AnalyzeTextTaskKind": {
      "type": "string",
      "description": "The kind of the analyze-text tasks supported.",
      "enum": [
        "SentimentAnalysis",
        "EntityRecognition",
        "PiiEntityRecognition",
        "KeyPhraseExtraction",
        "LanguageDetection",
        "EntityLinking",
        "DynamicClassification"
      ],
      "x-ms-enum": {
        "name": "AnalyzeTextTaskKind",
        "modelAsString": true,
        "values": [
          {
            "name": "SentimentAnalysis",
            "value": "SentimentAnalysis",
            "description": "Sentiment analysis task"
          },
          {
            "name": "EntityRecognition",
            "value": "EntityRecognition",
            "description": "Entity recognition task"
          },
          {
            "name": "PiiEntityRecognition",
            "value": "PiiEntityRecognition",
            "description": "PII entity recognition task"
          },
          {
            "name": "KeyPhraseExtraction",
            "value": "KeyPhraseExtraction",
            "description": "Key phrase extraction task"
          },
          {
            "name": "LanguageDetection",
            "value": "LanguageDetection",
            "description": "Language detection task"
          },
          {
            "name": "EntityLinking",
            "value": "EntityLinking",
            "description": "Entity linking task"
          },
          {
            "name": "DynamicClassification",
            "value": "DynamicClassification",
            "description": "Dynamic classification task"
          }
        ]
      }
    },
    "AnalyzeTextTaskResult": {
      "type": "object",
      "description": "The result object for the analyze task.",
      "properties": {
        "kind": {
          "$ref": "#/definitions/AnalyzeTextTaskResultsKind",
          "description": "The kind of task result."
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ]
    },
    "AnalyzeTextTaskResultsKind": {
      "type": "string",
      "description": "The kind of the response object returned by the analyze-text task.",
      "enum": [
        "SentimentAnalysisResults",
        "EntityRecognitionResults",
        "PiiEntityRecognitionResults",
        "KeyPhraseExtractionResults",
        "LanguageDetectionResults",
        "EntityLinkingResults",
        "DynamicClassificationResults"
      ],
      "x-ms-enum": {
        "name": "AnalyzeTextTaskResultsKind",
        "modelAsString": true,
        "values": [
          {
            "name": "SentimentAnalysisResults",
            "value": "SentimentAnalysisResults",
            "description": "Sentiment analysis results"
          },
          {
            "name": "EntityRecognitionResults",
            "value": "EntityRecognitionResults",
            "description": "Entity recognition results"
          },
          {
            "name": "PiiEntityRecognitionResults",
            "value": "PiiEntityRecognitionResults",
            "description": "PII entity recognition results"
          },
          {
            "name": "KeyPhraseExtractionResults",
            "value": "KeyPhraseExtractionResults",
            "description": "Key phrase extraction results"
          },
          {
            "name": "LanguageDetectionResults",
            "value": "LanguageDetectionResults",
            "description": "Language detection results"
          },
          {
            "name": "EntityLinkingResults",
            "value": "EntityLinkingResults",
            "description": "Entity linking results"
          },
          {
            "name": "DynamicClassificationResults",
            "value": "DynamicClassificationResults",
            "description": "Dynamic classification results"
          }
        ]
      }
    },
    "AreaMetadata": {
      "type": "object",
      "description": "Represents the Area entity Metadata model.",
      "properties": {
        "value": {
          "type": "number",
          "format": "double",
          "description": "The numeric value that the extracted text denotes."
        },
        "unit": {
          "$ref": "#/definitions/AreaUnit",
          "description": "Unit of measure for area."
        }
      },
      "required": [
        "value",
        "unit"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseMetadata"
        }
      ],
      "x-ms-discriminator-value": "AreaMetadata"
    },
    "AreaUnit": {
      "type": "string",
      "description": "The area unit of measurement.",
      "enum": [
        "Unspecified",
        "SquareKilometer",
        "SquareHectometer",
        "SquareDecameter",
        "SquareDecimeter",
        "SquareMeter",
        "SquareCentimeter",
        "SquareMillimeter",
        "SquareInch",
        "SquareFoot",
        "SquareMile",
        "SquareYard",
        "Acre"
      ],
      "x-ms-enum": {
        "name": "AreaUnit",
        "modelAsString": true,
        "values": [
          {
            "name": "Unspecified",
            "value": "Unspecified",
            "description": "Unspecified area unit"
          },
          {
            "name": "SquareKilometer",
            "value": "SquareKilometer",
            "description": "Area unit in square kilometers"
          },
          {
            "name": "SquareHectometer",
            "value": "SquareHectometer",
            "description": "Area unit in square hectometers"
          },
          {
            "name": "SquareDecameter",
            "value": "SquareDecameter",
            "description": "Area unit in square decameters"
          },
          {
            "name": "SquareDecimeter",
            "value": "SquareDecimeter",
            "description": "Area unit in square decimeters"
          },
          {
            "name": "SquareMeter",
            "value": "SquareMeter",
            "description": "Area unit in square meters"
          },
          {
            "name": "SquareCentimeter",
            "value": "SquareCentimeter",
            "description": "Area unit in square centimeters"
          },
          {
            "name": "SquareMillimeter",
            "value": "SquareMillimeter",
            "description": "Area unit in square millimeters"
          },
          {
            "name": "SquareInch",
            "value": "SquareInch",
            "description": "Area unit in square inches"
          },
          {
            "name": "SquareFoot",
            "value": "SquareFoot",
            "description": "Area unit in square feet"
          },
          {
            "name": "SquareMile",
            "value": "SquareMile",
            "description": "Area unit in square miles"
          },
          {
            "name": "SquareYard",
            "value": "SquareYard",
            "description": "Area unit in square yards"
          },
          {
            "name": "Acre",
            "value": "Acre",
            "description": "Area unit in acres"
          }
        ]
      }
    },
    "Association": {
      "type": "string",
      "description": "Describes if the entity is the subject of the text or if it describes someone else.",
      "enum": [
        "subject",
        "other"
      ],
      "x-ms-enum": {
        "name": "Association",
        "modelAsString": false,
        "values": [
          {
            "name": "subject",
            "value": "subject",
            "description": "Subject association"
          },
          {
            "name": "other",
            "value": "other",
            "description": "Other association"
          }
        ]
      }
    },
    "Azure.Core.uuid": {
      "type": "string",
      "format": "uuid",
      "description": "Universally Unique Identifier"
    },
    "BaseEntityOverlapPolicy": {
      "type": "object",
      "description": "The abstract base class for entity OverlapPolicy.",
      "properties": {
        "policyKind": {
          "type": "string",
          "description": "The entity OverlapPolicy object kind.",
          "default": "matchLongest",
          "enum": [
            "matchLongest",
            "allowOverlap"
          ],
          "x-ms-enum": {
            "name": "policyKind",
            "modelAsString": true,
            "values": [
              {
                "name": "matchLongest",
                "value": "matchLongest",
                "description": "Represents MatchLongestEntityPolicyType"
              },
              {
                "name": "allowOverlap",
                "value": "allowOverlap",
                "description": "Represents AllowOverlapEntityPolicyType"
              }
            ]
          }
        }
      },
      "discriminator": "policyKind",
      "required": [
        "policyKind"
      ]
    },
    "BaseMetadata": {
      "type": "object",
      "description": "The abstract base class for entity Metadata.",
      "properties": {
        "metadataKind": {
          "$ref": "#/definitions/MetadataKind",
          "description": "The entity Metadata object kind."
        }
      },
      "discriminator": "metadataKind",
      "required": [
        "metadataKind"
      ]
    },
    "Certainty": {
      "type": "string",
      "description": "Describes the entities certainty and polarity.",
      "enum": [
        "positive",
        "positivePossible",
        "neutralPossible",
        "negativePossible",
        "negative"
      ],
      "x-ms-enum": {
        "name": "Certainty",
        "modelAsString": false,
        "values": [
          {
            "name": "positive",
            "value": "positive",
            "description": "Positive certainty"
          },
          {
            "name": "positivePossible",
            "value": "positivePossible",
            "description": "Possibly positive certainty"
          },
          {
            "name": "neutralPossible",
            "value": "neutralPossible",
            "description": "Possibly neutral certainty"
          },
          {
            "name": "negativePossible",
            "value": "negativePossible",
            "description": "Possibly negative certainty"
          },
          {
            "name": "negative",
            "value": "negative",
            "description": "Negative certainty"
          }
        ]
      }
    },
    "ClassificationDocumentResultWithDetectedLanguage": {
      "type": "object",
      "description": "Contains the classification doc result for the task with detected language.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/DocumentWarning"
          },
          "x-ms-identifiers": []
        },
        "statistics": {
          "$ref": "#/definitions/DocumentStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the document payload."
        },
        "class": {
          "type": "array",
          "description": "Contains the classification doc results for all docs.",
          "items": {
            "$ref": "#/definitions/ClassificationResult"
          },
          "x-ms-identifiers": []
        },
        "detectedLanguage": {
          "$ref": "#/definitions/DetectedLanguage",
          "description": "If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document."
        }
      },
      "required": [
        "id",
        "warnings",
        "class"
      ]
    },
    "ClassificationResult": {
      "type": "object",
      "description": "Contains the classification result.",
      "properties": {
        "category": {
          "type": "string",
          "description": "Classification type."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "Confidence score between 0 and 1 of the recognized class."
        }
      },
      "required": [
        "category",
        "confidenceScore"
      ]
    },
    "Conditionality": {
      "type": "string",
      "description": "Describes any conditionality on the entity.",
      "enum": [
        "hypothetical",
        "conditional"
      ],
      "x-ms-enum": {
        "name": "Conditionality",
        "modelAsString": false,
        "values": [
          {
            "name": "hypothetical",
            "value": "hypothetical",
            "description": "Hypothetical conditionality"
          },
          {
            "name": "conditional",
            "value": "conditional",
            "description": "Conditional conditionality"
          }
        ]
      }
    },
    "CurrencyMetadata": {
      "type": "object",
      "description": "Represents the Currency ) entity Metadata model.",
      "properties": {
        "value": {
          "type": "number",
          "format": "double",
          "description": "The numeric value that the extracted text denotes."
        },
        "unit": {
          "type": "string",
          "description": "Currency unit."
        },
        "iso4217": {
          "type": "string",
          "description": "The alphabetic code based on another ISO standard, ISO 3166, which lists the codes for country names. The first two letters of the ISO 4217 three-letter code are the same as the code for the country name, and, where possible, the third letter corresponds to the first letter of the currency name."
        }
      },
      "required": [
        "value",
        "unit"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseMetadata"
        }
      ],
      "x-ms-discriminator-value": "CurrencyMetadata"
    },
    "CustomAbstractiveSummarizationLROResult": {
      "type": "object",
      "description": "An object representing the results for an Custom Abstractive Summarization task.",
      "properties": {
        "results": {
          "$ref": "#/definitions/CustomAbstractiveSummarizationResult",
          "description": "Results of the task."
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROResult"
        }
      ],
      "x-ms-discriminator-value": "CustomAbstractiveSummarizationLROResults"
    },
    "CustomAbstractiveSummarizationLROTask": {
      "type": "object",
      "description": "An object representing the task definition for an Custom Abstractive Summarization task.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/CustomAbstractiveSummarizationTaskParameters",
          "description": "Parameters for the Custom Abstractive Summarization task."
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROTask"
        }
      ],
      "x-ms-discriminator-value": "CustomAbstractiveSummarization"
    },
    "CustomAbstractiveSummarizationResult": {
      "type": "object",
      "description": "An object representing the custom summarization results of each document.",
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/AbstractiveSummaryDocumentResultWithDetectedLanguage"
          }
        },
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        },
        "projectName": {
          "type": "string",
          "description": "This field indicates the project name for the model."
        },
        "deploymentName": {
          "type": "string",
          "description": "This field indicates the deployment name for the model."
        }
      },
      "required": [
        "documents",
        "errors",
        "projectName",
        "deploymentName"
      ]
    },
    "CustomAbstractiveSummarizationTaskParameters": {
      "type": "object",
      "description": "Supported parameters for the Custom Abstractive Summarization task.",
      "properties": {
        "sentenceCount": {
          "type": "integer",
          "format": "int32",
          "description": "Controls the approximate number of sentences in the output summaries."
        },
        "stringIndexType": {
          "type": "string",
          "description": "String index type",
          "default": "TextElements_v8",
          "enum": [
            "TextElements_v8",
            "UnicodeCodePoint",
            "Utf16CodeUnit"
          ],
          "x-ms-enum": {
            "name": "StringIndexType",
            "modelAsString": true,
            "values": [
              {
                "name": "TextElements_v8",
                "value": "TextElements_v8",
                "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
              },
              {
                "name": "UnicodeCodePoint",
                "value": "UnicodeCodePoint",
                "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
              },
              {
                "name": "Utf16CodeUnit",
                "value": "Utf16CodeUnit",
                "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
              }
            ]
          }
        },
        "summaryLength": {
          "$ref": "#/definitions/SummaryLengthBucket",
          "description": "(NOTE: Recommended to use summaryLength over sentenceCount) Controls the approximate length of the output summaries."
        },
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "projectName": {
          "type": "string",
          "description": "This field indicates the project name for the model."
        },
        "deploymentName": {
          "type": "string",
          "description": "This field indicates the deployment name for the model."
        }
      },
      "required": [
        "projectName",
        "deploymentName"
      ]
    },
    "CustomEntitiesLROTask": {
      "type": "object",
      "description": "Contains the custom text LRO task.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/CustomEntitiesTaskParameters",
          "description": "task parameters."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROTask"
        }
      ],
      "x-ms-discriminator-value": "CustomEntityRecognition"
    },
    "CustomEntitiesResultWithDocumentDetectedLanguage": {
      "type": "object",
      "description": "Contains the list of detected custom entities result for the documents along with detected language.",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        },
        "projectName": {
          "type": "string",
          "description": "This field indicates the project name for the model."
        },
        "deploymentName": {
          "type": "string",
          "description": "This field indicates the deployment name for the model."
        },
        "documents": {
          "type": "array",
          "description": "Enumeration of the document results with detected language.",
          "items": {
            "$ref": "#/definitions/EntitiesDocumentResultWithDetectedLanguage"
          }
        }
      },
      "required": [
        "errors",
        "projectName",
        "deploymentName",
        "documents"
      ]
    },
    "CustomEntitiesTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a Custom Entities task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "projectName": {
          "type": "string",
          "description": "This field indicates the project name for the model."
        },
        "deploymentName": {
          "type": "string",
          "description": "This field indicates the deployment name for the model."
        },
        "stringIndexType": {
          "type": "string",
          "description": "Optional parameter to provide the string index type used to interpret string offsets. Defaults to TextElements (Graphemes).",
          "default": "TextElements_v8",
          "enum": [
            "TextElements_v8",
            "UnicodeCodePoint",
            "Utf16CodeUnit"
          ],
          "x-ms-enum": {
            "name": "StringIndexType",
            "modelAsString": true,
            "values": [
              {
                "name": "TextElements_v8",
                "value": "TextElements_v8",
                "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
              },
              {
                "name": "UnicodeCodePoint",
                "value": "UnicodeCodePoint",
                "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
              },
              {
                "name": "Utf16CodeUnit",
                "value": "Utf16CodeUnit",
                "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
              }
            ]
          }
        }
      },
      "required": [
        "projectName",
        "deploymentName"
      ]
    },
    "CustomEntityRecognitionLROResult": {
      "type": "object",
      "description": "Contains the custom entity recognition job result.",
      "properties": {
        "results": {
          "$ref": "#/definitions/CustomEntitiesResultWithDocumentDetectedLanguage",
          "description": "List of results."
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROResult"
        }
      ],
      "x-ms-discriminator-value": "CustomEntityRecognitionLROResults"
    },
    "CustomHealthcareEntitiesDocumentResultWithDocumentDetectedLanguage": {
      "type": "object",
      "description": "Contains the document custom healthcare results with detected language.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/DocumentWarning"
          },
          "x-ms-identifiers": []
        },
        "statistics": {
          "$ref": "#/definitions/DocumentStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the document payload."
        },
        "entities": {
          "type": "array",
          "description": "Healthcare entities.",
          "items": {
            "$ref": "#/definitions/CustomHealthcareEntity"
          },
          "x-ms-identifiers": []
        },
        "relations": {
          "type": "array",
          "description": "Healthcare entity relations.",
          "items": {
            "$ref": "#/definitions/HealthcareRelation"
          },
          "x-ms-identifiers": []
        },
        "detectedLanguage": {
          "$ref": "#/definitions/DetectedLanguage",
          "description": "If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document."
        }
      },
      "required": [
        "id",
        "warnings",
        "entities",
        "relations"
      ]
    },
    "CustomHealthcareEntity": {
      "type": "object",
      "description": "Contains the custom healthcare entity.",
      "properties": {
        "text": {
          "type": "string",
          "description": "Entity text as appears in the request."
        },
        "category": {
          "$ref": "#/definitions/healthcareEntityCategory",
          "description": "Healthcare Entity Category."
        },
        "subcategory": {
          "type": "string",
          "description": "(Optional) Entity sub type."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position for the entity text. Use of different 'stringIndexType' values can affect the offset returned."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Length for the entity text. Use of different 'stringIndexType' values can affect the length returned."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "Confidence score between 0 and 1 of the extracted entity."
        },
        "assertion": {
          "$ref": "#/definitions/HealthcareAssertion",
          "description": "Assertion of the entity."
        },
        "name": {
          "type": "string",
          "description": "Preferred name for the entity. Example: 'histologically' would have a 'name' of 'histologic'."
        },
        "links": {
          "type": "array",
          "description": "Entity references in known data sources.",
          "items": {
            "$ref": "#/definitions/HealthcareEntityLink"
          }
        },
        "entityComponentInformation": {
          "type": "array",
          "description": "(Optional) Entity component information listing fired components of the extracted entity. This object only applies for custom healthcare.",
          "items": {
            "$ref": "#/definitions/EntityComponentInformation"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "text",
        "category",
        "offset",
        "length",
        "confidenceScore"
      ]
    },
    "CustomHealthcareLROResult": {
      "type": "object",
      "description": "Contains the custom healthcare job result.",
      "properties": {
        "results": {
          "$ref": "#/definitions/CustomHealthcareResult",
          "description": "Contains the list of document results."
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROResult"
        }
      ],
      "x-ms-discriminator-value": "CustomHealthcareLROResults"
    },
    "CustomHealthcareLROTask": {
      "type": "object",
      "description": "Contains the custom healthcare task definition.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/CustomHealthcareTaskParameters",
          "description": "Contains the custom healthcare task parameters."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROTask"
        }
      ],
      "x-ms-discriminator-value": "CustomHealthcare"
    },
    "CustomHealthcareResult": {
      "type": "object",
      "description": "Contains the custom healthcare result for the request.",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        },
        "projectName": {
          "type": "string",
          "description": "This field indicates the project name for the model."
        },
        "deploymentName": {
          "type": "string",
          "description": "This field indicates the deployment name for the model."
        },
        "documents": {
          "type": "array",
          "description": "List of custom healthcare results for the document.",
          "items": {
            "$ref": "#/definitions/CustomHealthcareEntitiesDocumentResultWithDocumentDetectedLanguage"
          }
        }
      },
      "required": [
        "errors",
        "projectName",
        "deploymentName",
        "documents"
      ]
    },
    "CustomHealthcareTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a custom Healthcare task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "projectName": {
          "type": "string",
          "description": "This field indicates the project name for the model."
        },
        "deploymentName": {
          "type": "string",
          "description": "This field indicates the deployment name for the model."
        },
        "stringIndexType": {
          "type": "string",
          "description": "Optional parameter to provide the string index type used to interpret string offsets. Defaults to TextElements (Graphemes).",
          "default": "TextElements_v8",
          "enum": [
            "TextElements_v8",
            "UnicodeCodePoint",
            "Utf16CodeUnit"
          ],
          "x-ms-enum": {
            "name": "StringIndexType",
            "modelAsString": true,
            "values": [
              {
                "name": "TextElements_v8",
                "value": "TextElements_v8",
                "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
              },
              {
                "name": "UnicodeCodePoint",
                "value": "UnicodeCodePoint",
                "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
              },
              {
                "name": "Utf16CodeUnit",
                "value": "Utf16CodeUnit",
                "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
              }
            ]
          }
        }
      },
      "required": [
        "projectName",
        "deploymentName"
      ]
    },
    "CustomLabelClassificationResultWithDocumentDetectedLanguage": {
      "type": "object",
      "description": "Contains the custom label classification with detected language results.",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        },
        "projectName": {
          "type": "string",
          "description": "This field indicates the project name for the model."
        },
        "deploymentName": {
          "type": "string",
          "description": "This field indicates the deployment name for the model."
        },
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/ClassificationDocumentResultWithDetectedLanguage"
          }
        }
      },
      "required": [
        "errors",
        "projectName",
        "deploymentName",
        "documents"
      ]
    },
    "CustomMultiLabelClassificationLROResult": {
      "type": "object",
      "description": "Contains the custom multi label classification job result.",
      "properties": {
        "results": {
          "$ref": "#/definitions/CustomLabelClassificationResultWithDocumentDetectedLanguage",
          "description": "List of results."
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROResult"
        }
      ],
      "x-ms-discriminator-value": "CustomMultiLabelClassificationLROResults"
    },
    "CustomMultiLabelClassificationLROTask": {
      "type": "object",
      "description": "Use custom models to classify text into multi label taxonomy",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/CustomMultiLabelClassificationTaskParameters",
          "description": "Task parameters."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROTask"
        }
      ],
      "x-ms-discriminator-value": "CustomMultiLabelClassification"
    },
    "CustomMultiLabelClassificationTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a Custom Multi Classification task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "projectName": {
          "type": "string",
          "description": "This field indicates the project name for the model."
        },
        "deploymentName": {
          "type": "string",
          "description": "This field indicates the deployment name for the model."
        }
      },
      "required": [
        "projectName",
        "deploymentName"
      ]
    },
    "CustomSentenceSentiment": {
      "type": "object",
      "description": "A document's sentence custom sentiment.",
      "properties": {
        "text": {
          "type": "string",
          "description": "The sentence text."
        },
        "sentiment": {
          "$ref": "#/definitions/SentenceSentimentValue",
          "description": "The predicted Sentiment for the sentence."
        },
        "confidenceScores": {
          "$ref": "#/definitions/SentimentConfidenceScores",
          "description": "The sentiment confidence score between 0 and 1 for the sentence for all classes."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "The target offset from the start of the sentence."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the target."
        }
      },
      "required": [
        "text",
        "sentiment",
        "confidenceScores",
        "offset",
        "length"
      ]
    },
    "CustomSentimentAnalysisLROResult": {
      "type": "object",
      "description": "Custom Sentiment Analysis Analyze Text long tunning operation result object.",
      "properties": {
        "results": {
          "$ref": "#/definitions/CustomSentimentAnalysisResult",
          "description": "Results of the task."
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROResult"
        }
      ],
      "x-ms-discriminator-value": "CustomSentimentAnalysisLROResults"
    },
    "CustomSentimentAnalysisLROTask": {
      "type": "object",
      "description": "Use custom models to ease the process of sentiment analysis from documents like product reviews",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/CustomSentimentAnalysisTaskParameters",
          "description": "Custom Sentiment Analysis task parameters."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROTask"
        }
      ],
      "x-ms-discriminator-value": "CustomSentimentAnalysis"
    },
    "CustomSentimentAnalysisResult": {
      "type": "object",
      "description": "Custom Sentiment analysis results for the input documents.",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        },
        "projectName": {
          "type": "string",
          "description": "This field indicates the project name for the model."
        },
        "deploymentName": {
          "type": "string",
          "description": "This field indicates the deployment name for the model."
        },
        "documents": {
          "type": "array",
          "description": "The custom sentiment analysis results for each document in the input.",
          "items": {
            "$ref": "#/definitions/CustomSentimentAnalysisResultDocument"
          }
        }
      },
      "required": [
        "errors",
        "projectName",
        "deploymentName",
        "documents"
      ]
    },
    "CustomSentimentAnalysisResultDocument": {
      "type": "object",
      "description": "Custom Sentiment analysis result for a specific document.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/DocumentWarning"
          },
          "x-ms-identifiers": []
        },
        "statistics": {
          "$ref": "#/definitions/DocumentStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the document payload."
        },
        "sentiment": {
          "$ref": "#/definitions/DocumentSentimentValue",
          "description": "Predicted sentiment for document (Negative, Neutral, Positive, or Mixed)."
        },
        "confidenceScores": {
          "$ref": "#/definitions/SentimentConfidenceScores",
          "description": "The sentiment confidence score between 0 and 1 for the sentence for all classes."
        },
        "sentences": {
          "type": "array",
          "description": "The document's sentences sentiment.",
          "items": {
            "$ref": "#/definitions/CustomSentenceSentiment"
          },
          "x-ms-identifiers": []
        },
        "detectedLanguage": {
          "$ref": "#/definitions/DetectedLanguage",
          "description": "If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document."
        }
      },
      "required": [
        "id",
        "warnings",
        "sentiment",
        "confidenceScores",
        "sentences"
      ]
    },
    "CustomSentimentAnalysisTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a Custom Sentiment Analysis task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "projectName": {
          "type": "string",
          "description": "This field indicates the project name for the model."
        },
        "deploymentName": {
          "type": "string",
          "description": "This field indicates the deployment name for the model."
        },
        "stringIndexType": {
          "type": "string",
          "description": "Specifies the method used to interpret string offsets.",
          "default": "TextElements_v8",
          "enum": [
            "TextElements_v8",
            "UnicodeCodePoint",
            "Utf16CodeUnit"
          ],
          "x-ms-enum": {
            "name": "StringIndexType",
            "modelAsString": true,
            "values": [
              {
                "name": "TextElements_v8",
                "value": "TextElements_v8",
                "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
              },
              {
                "name": "UnicodeCodePoint",
                "value": "UnicodeCodePoint",
                "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
              },
              {
                "name": "Utf16CodeUnit",
                "value": "Utf16CodeUnit",
                "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
              }
            ]
          }
        }
      },
      "required": [
        "projectName",
        "deploymentName"
      ]
    },
    "CustomSingleLabelClassificationLROResult": {
      "type": "object",
      "description": "Contains the custom single label classification job result.",
      "properties": {
        "results": {
          "$ref": "#/definitions/CustomLabelClassificationResultWithDocumentDetectedLanguage",
          "description": "List of results."
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROResult"
        }
      ],
      "x-ms-discriminator-value": "CustomSingleLabelClassificationLROResults"
    },
    "CustomSingleLabelClassificationLROTask": {
      "type": "object",
      "description": "Use custom models to classify text into single label taxonomy",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/CustomSingleLabelClassificationTaskParameters",
          "description": "Task parameters"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROTask"
        }
      ],
      "x-ms-discriminator-value": "CustomSingleLabelClassification"
    },
    "CustomSingleLabelClassificationTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a Custom Single Classification task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "projectName": {
          "type": "string",
          "description": "This field indicates the project name for the model."
        },
        "deploymentName": {
          "type": "string",
          "description": "This field indicates the deployment name for the model."
        }
      },
      "required": [
        "projectName",
        "deploymentName"
      ]
    },
    "DateMetadata": {
      "type": "object",
      "description": "A Metadata for date entity instances.",
      "properties": {
        "dateValues": {
          "type": "array",
          "description": "List of date values.",
          "items": {
            "$ref": "#/definitions/DateValue"
          },
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseMetadata"
        }
      ],
      "x-ms-discriminator-value": "DateMetadata"
    },
    "DateTimeMetadata": {
      "type": "object",
      "description": "A Metadata for datetime entity instances.",
      "properties": {
        "dateValues": {
          "type": "array",
          "description": "List of date values.",
          "items": {
            "$ref": "#/definitions/DateValue"
          },
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseMetadata"
        }
      ],
      "x-ms-discriminator-value": "DateTimeMetadata"
    },
    "DateValue": {
      "type": "object",
      "description": "Represents the date value.",
      "properties": {
        "timex": {
          "type": "string",
          "description": "An extended ISO 8601 date/time representation as described in (https://github.com/Microsoft/Recognizers-Text/blob/master/Patterns/English/English-DateTime.yaml)"
        },
        "value": {
          "type": "string",
          "description": "The actual time that the extracted text denote."
        },
        "modifier": {
          "$ref": "#/definitions/TemporalModifier",
          "description": "Modifier for datetime to indicate point of reference like before, after etc."
        }
      },
      "required": [
        "timex",
        "value"
      ]
    },
    "DetectedLanguage": {
      "type": "object",
      "description": "Contains the details of the detected language for the text.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Long name of a detected language (e.g. English, French)."
        },
        "iso6391Name": {
          "type": "string",
          "description": "A two letter representation of the detected language according to the ISO 639-1 standard (e.g. en, fr)."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "A confidence score between 0 and 1. Scores close to 1 indicate 100% certainty that the identified language is true."
        },
        "script": {
          "$ref": "#/definitions/ScriptKind",
          "description": "Identifies the script of the input document."
        },
        "scriptCode": {
          "$ref": "#/definitions/ScriptCode",
          "description": "Identifies the script of the input document."
        }
      },
      "required": [
        "name",
        "iso6391Name",
        "confidenceScore"
      ]
    },
    "DocumentError": {
      "type": "object",
      "description": "Contains details of errors encountered during a job execution.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the input document."
        },
        "error": {
          "$ref": "#/definitions/Error",
          "description": "Error encountered."
        }
      },
      "required": [
        "id",
        "error"
      ]
    },
    "DocumentSentimentValue": {
      "type": "string",
      "description": "Predicted sentiment for document (Negative, Neutral, Positive, or Mixed).",
      "enum": [
        "positive",
        "neutral",
        "negative",
        "mixed"
      ],
      "x-ms-enum": {
        "name": "DocumentSentimentValue",
        "modelAsString": false,
        "values": [
          {
            "name": "positive",
            "value": "positive",
            "description": "Positive statement"
          },
          {
            "name": "neutral",
            "value": "neutral",
            "description": "Neutral statement"
          },
          {
            "name": "negative",
            "value": "negative",
            "description": "Negative statement"
          },
          {
            "name": "mixed",
            "value": "mixed",
            "description": "Mixed statement"
          }
        ]
      }
    },
    "DocumentStatistics": {
      "type": "object",
      "description": "if showStats=true was specified in the request this field will contain information about the document payload.",
      "properties": {
        "charactersCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of text elements recognized in the document."
        },
        "transactionsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of transactions for the document."
        }
      },
      "required": [
        "charactersCount",
        "transactionsCount"
      ]
    },
    "DocumentWarning": {
      "type": "object",
      "description": "Contains the warnings object with warnings encountered for the processed document.",
      "properties": {
        "code": {
          "$ref": "#/definitions/WarningCodeValue",
          "description": "Warning code."
        },
        "message": {
          "type": "string",
          "description": "Warning message."
        },
        "targetRef": {
          "type": "string",
          "description": "A JSON pointer reference indicating the target object."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "DynamicClassificationDocumentResult": {
      "type": "object",
      "description": "Contains the Dynamic Classification document result.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/DocumentWarning"
          },
          "x-ms-identifiers": []
        },
        "statistics": {
          "$ref": "#/definitions/DocumentStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the document payload."
        },
        "classifications": {
          "type": "array",
          "description": "Array of classification results.",
          "items": {
            "$ref": "#/definitions/ClassificationResult"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "id",
        "warnings",
        "classifications"
      ]
    },
    "DynamicClassificationResult": {
      "type": "object",
      "description": "Contains the Dynamic Classification result.",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        },
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/DynamicClassificationDocumentResult"
          }
        }
      },
      "required": [
        "errors",
        "modelVersion",
        "documents"
      ]
    },
    "DynamicClassificationTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a Dynamic Classification task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "modelVersion": {
          "type": "string",
          "description": "model version",
          "default": "latest"
        },
        "classificationType": {
          "type": "string",
          "description": "Specifies either one or multiple categories per document. Defaults to multi classification which may return more than one class for each document.",
          "default": "Multi",
          "enum": [
            "Multi",
            "Single"
          ],
          "x-ms-enum": {
            "name": "ClassificationType",
            "modelAsString": true,
            "values": [
              {
                "name": "Multi",
                "value": "Multi",
                "description": "Multi selection"
              },
              {
                "name": "Single",
                "value": "Single",
                "description": "Single selection"
              }
            ]
          }
        },
        "categories": {
          "type": "array",
          "description": "a list of categories to which input is classified to.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "categories"
      ]
    },
    "DynamicClassificationTaskResult": {
      "type": "object",
      "description": "Result for Dynamic Classification task.",
      "properties": {
        "results": {
          "$ref": "#/definitions/DynamicClassificationResult",
          "description": "Results for Dynamic Classification task"
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextTaskResult"
        }
      ],
      "x-ms-discriminator-value": "DynamicClassificationResults"
    },
    "EntitiesDocumentResultWithDetectedLanguage": {
      "type": "object",
      "description": "Contains the entity recognition task result for the document with detected language.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/DocumentWarning"
          },
          "x-ms-identifiers": []
        },
        "statistics": {
          "$ref": "#/definitions/DocumentStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the document payload."
        },
        "entities": {
          "type": "array",
          "description": "Recognized entities in the document.",
          "items": {
            "$ref": "#/definitions/Entity"
          },
          "x-ms-identifiers": []
        },
        "detectedLanguage": {
          "$ref": "#/definitions/DetectedLanguage",
          "description": "If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document."
        }
      },
      "required": [
        "id",
        "warnings",
        "entities"
      ]
    },
    "EntitiesDocumentResultWithMetadataDetectedLanguage": {
      "type": "object",
      "description": "Contains the entity recognition task result for the document with metadata and detected language.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/DocumentWarning"
          },
          "x-ms-identifiers": []
        },
        "statistics": {
          "$ref": "#/definitions/DocumentStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the document payload."
        },
        "entities": {
          "type": "array",
          "description": "Recognized entities in the document.",
          "items": {
            "$ref": "#/definitions/EntityWithMetadata"
          },
          "x-ms-identifiers": []
        },
        "detectedLanguage": {
          "$ref": "#/definitions/DetectedLanguage",
          "description": "If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document."
        }
      },
      "required": [
        "id",
        "warnings",
        "entities"
      ]
    },
    "EntitiesLROTask": {
      "type": "object",
      "description": "An object representing the task definition for an Entities Recognition task.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/EntitiesTaskParameters",
          "description": "Task parameters."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROTask"
        }
      ],
      "x-ms-discriminator-value": "EntityRecognition"
    },
    "EntitiesResult": {
      "type": "object",
      "description": "Contains the entity recognition task result.",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        },
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/EntitiesDocumentResultWithMetadataDetectedLanguage"
          }
        }
      },
      "required": [
        "errors",
        "modelVersion",
        "documents"
      ]
    },
    "EntitiesTaskParameters": {
      "type": "object",
      "description": "Supported parameters for an Entity Recognition task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "modelVersion": {
          "type": "string",
          "description": "model version",
          "default": "latest"
        },
        "stringIndexType": {
          "type": "string",
          "description": "(Optional) parameter to provide the string index type used to interpret string offsets. Defaults to TextElements (Graphemes).",
          "default": "TextElements_v8",
          "enum": [
            "TextElements_v8",
            "UnicodeCodePoint",
            "Utf16CodeUnit"
          ],
          "x-ms-enum": {
            "name": "StringIndexType",
            "modelAsString": true,
            "values": [
              {
                "name": "TextElements_v8",
                "value": "TextElements_v8",
                "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
              },
              {
                "name": "UnicodeCodePoint",
                "value": "UnicodeCodePoint",
                "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
              },
              {
                "name": "Utf16CodeUnit",
                "value": "Utf16CodeUnit",
                "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
              }
            ]
          }
        },
        "inclusionList": {
          "type": "array",
          "description": "(Optional) request parameter that limits the output to the requested entity types included in this list. We will apply inclusionList before exclusionList",
          "items": {
            "$ref": "#/definitions/EntityCategory"
          }
        },
        "exclusionList": {
          "type": "array",
          "description": "(Optional) request parameter that filters out any entities that are included the excludeList. When a user specifies an excludeList, they cannot get a prediction returned with an entity in that list. We will apply inclusionList before exclusionList",
          "items": {
            "$ref": "#/definitions/EntityCategory"
          }
        },
        "overlapPolicy": {
          "$ref": "#/definitions/BaseEntityOverlapPolicy",
          "description": "(Optional) describes the type of overlap policy to apply to the ner output."
        },
        "inferenceOptions": {
          "$ref": "#/definitions/EntityInferenceOptions",
          "description": "(Optional) request parameter that allows the user to provide settings for running the inference."
        }
      }
    },
    "EntitiesTaskResult": {
      "type": "object",
      "description": "Contains the entity task",
      "properties": {
        "results": {
          "$ref": "#/definitions/EntitiesResult",
          "description": "Results for entity recognition."
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextTaskResult"
        }
      ],
      "x-ms-discriminator-value": "EntityRecognitionResults"
    },
    "Entity": {
      "type": "object",
      "description": "Defines the detected entity object containing the entity category and entity text detected, etc.",
      "properties": {
        "text": {
          "type": "string",
          "description": "Entity text as appears in the request."
        },
        "category": {
          "type": "string",
          "description": "Entity type."
        },
        "subcategory": {
          "type": "string",
          "description": "(Optional) Entity sub type."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position for the entity text. Use of different 'stringIndexType' values can affect the offset returned."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Length for the entity text. Use of different 'stringIndexType' values can affect the length returned."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "Confidence score between 0 and 1 of the extracted entity."
        }
      },
      "required": [
        "text",
        "category",
        "offset",
        "length",
        "confidenceScore"
      ]
    },
    "EntityCategory": {
      "type": "string",
      "description": "Contains all the entity categories detected by entity recognition.",
      "enum": [
        "Address",
        "Numeric",
        "Age",
        "Currency",
        "Number",
        "NumberRange",
        "Percentage",
        "Ordinal",
        "Temperature",
        "Dimension",
        "Length",
        "Weight",
        "Height",
        "Speed",
        "Area",
        "Volume",
        "Information",
        "Temporal",
        "Date",
        "Time",
        "DateTime",
        "DateRange",
        "TimeRange",
        "DateTimeRange",
        "Duration",
        "SetTemporal",
        "Event",
        "SportsEvent",
        "CulturalEvent",
        "NaturalEvent",
        "Location",
        "GPE",
        "City",
        "State",
        "CountryRegion",
        "Continent",
        "Structural",
        "Airport",
        "Geological",
        "Organization",
        "OrganizationMedical",
        "OrganizationStockExchange",
        "OrganizationSports",
        "Person",
        "PersonType",
        "Email",
        "URL",
        "IP",
        "PhoneNumber",
        "Product",
        "ComputingProduct",
        "Skill"
      ],
      "x-ms-enum": {
        "name": "EntityCategory",
        "modelAsString": true,
        "values": [
          {
            "name": "Address",
            "value": "Address",
            "description": "Specific street-level mentions of locations: house/building numbers, streets, avenues, highways, intersections referenced by name."
          },
          {
            "name": "Numeric",
            "value": "Numeric",
            "description": "Numeric values, including digits and number words."
          },
          {
            "name": "Age",
            "value": "Age",
            "description": "Age-related values."
          },
          {
            "name": "Currency",
            "value": "Currency",
            "description": "Currency-related values."
          },
          {
            "name": "Number",
            "value": "Number",
            "description": "Numbers without a unit"
          },
          {
            "name": "NumberRange",
            "value": "NumberRange",
            "description": "Range of Numbers"
          },
          {
            "name": "Percentage",
            "value": "Percentage",
            "description": "Percentage-related values."
          },
          {
            "name": "Ordinal",
            "value": "Ordinal",
            "description": "Ordinal numbers."
          },
          {
            "name": "Temperature",
            "value": "Temperature",
            "description": "Temperature-related values."
          },
          {
            "name": "Dimension",
            "value": "Dimension",
            "description": "Dimension of measurements"
          },
          {
            "name": "Length",
            "value": "Length",
            "description": "Length of an object."
          },
          {
            "name": "Weight",
            "value": "Weight",
            "description": "Weight of an object."
          },
          {
            "name": "Height",
            "value": "Height",
            "description": "Height of an object."
          },
          {
            "name": "Speed",
            "value": "Speed",
            "description": "Speed of an object."
          },
          {
            "name": "Area",
            "value": "Area",
            "description": "Area of an object."
          },
          {
            "name": "Volume",
            "value": "Volume",
            "description": "Volume of an object."
          },
          {
            "name": "Information",
            "value": "Information",
            "description": "Unit of measure for digital information."
          },
          {
            "name": "Temporal",
            "value": "Temporal",
            "description": "Items relating to time."
          },
          {
            "name": "Date",
            "value": "Date",
            "description": "Calendar dates."
          },
          {
            "name": "Time",
            "value": "Time",
            "description": "Times of day."
          },
          {
            "name": "DateTime",
            "value": "DateTime",
            "description": "Calendar dates with time."
          },
          {
            "name": "DateRange",
            "value": "DateRange",
            "description": "Range of dates."
          },
          {
            "name": "TimeRange",
            "value": "TimeRange",
            "description": "Range of times."
          },
          {
            "name": "DateTimeRange",
            "value": "DateTimeRange",
            "description": "Range of date and time."
          },
          {
            "name": "Duration",
            "value": "Duration",
            "description": "Duration of time."
          },
          {
            "name": "SetTemporal",
            "value": "SetTemporal",
            "description": "Set of time-related values."
          },
          {
            "name": "Event",
            "value": "Event",
            "description": "Social, sports, business, political, educational, natural, historical, criminal, violent, legal, military events with a timed period."
          },
          {
            "name": "SportsEvent",
            "value": "SportsEvent",
            "description": "Sports event-related values."
          },
          {
            "name": "CulturalEvent",
            "value": "CulturalEvent",
            "description": "Cultural event-related values."
          },
          {
            "name": "NaturalEvent",
            "value": "NaturalEvent",
            "description": "Natural event-related values."
          },
          {
            "name": "Location",
            "value": "Location",
            "description": "Particular point or place in physical space."
          },
          {
            "name": "GPE",
            "value": "GPE",
            "description": "Cities, countries/regions, states."
          },
          {
            "name": "City",
            "value": "City",
            "description": "City-related values."
          },
          {
            "name": "State",
            "value": "State",
            "description": "State-related values."
          },
          {
            "name": "CountryRegion",
            "value": "CountryRegion",
            "description": "Country or region-related values."
          },
          {
            "name": "Continent",
            "value": "Continent",
            "description": "Continent-related values."
          },
          {
            "name": "Structural",
            "value": "Structural",
            "description": "Manmade structures."
          },
          {
            "name": "Airport",
            "value": "Airport",
            "description": "Airports."
          },
          {
            "name": "Geological",
            "value": "Geological",
            "description": "Geographic and natural features such as rivers, oceans, and deserts."
          },
          {
            "name": "Organization",
            "value": "Organization",
            "description": "Corporations, agencies, and other groups of people defined by some established organizational structure. These labels can include companies, political parties/movements, musical bands, sport clubs, government bodies, and public organizations. Nationalities or religions are not ORGANIZATION."
          },
          {
            "name": "OrganizationMedical",
            "value": "OrganizationMedical",
            "description": "Medical companies and groups."
          },
          {
            "name": "OrganizationStockExchange",
            "value": "OrganizationStockExchange",
            "description": "Stock exchange groups."
          },
          {
            "name": "OrganizationSports",
            "value": "OrganizationSports",
            "description": "Sports-related organizations."
          },
          {
            "name": "Person",
            "value": "Person",
            "description": "First, last, and middle names, names of fictional characters, and aliases. Titles, such as 'Mr.' or 'President', are not considered part of the named entity."
          },
          {
            "name": "PersonType",
            "value": "PersonType",
            "description": "Human roles classified by a group membership."
          },
          {
            "name": "Email",
            "value": "Email",
            "description": "Email addresses."
          },
          {
            "name": "URL",
            "value": "URL",
            "description": "URLs to websites."
          },
          {
            "name": "IP",
            "value": "IP",
            "description": "network IP addresses."
          },
          {
            "name": "PhoneNumber",
            "value": "PhoneNumber",
            "description": "Phone numbers (US and EU phone numbers only)."
          },
          {
            "name": "Product",
            "value": "Product",
            "description": "Single or group of commercial, consumable objects, electronics, vehicles, food groups."
          },
          {
            "name": "ComputingProduct",
            "value": "ComputingProduct",
            "description": "Computing products."
          },
          {
            "name": "Skill",
            "value": "Skill",
            "description": "A capability, skill, or expertise."
          }
        ]
      }
    },
    "EntityComponentInformation": {
      "type": "object",
      "description": "This object contains information of the detected entity components. The possible component types may expand in the future. Parsing code should handle unexpected values gracefully",
      "properties": {
        "entityComponentKind": {
          "$ref": "#/definitions/entityComponentKind",
          "description": "Kind of entity component."
        }
      },
      "discriminator": "entityComponentKind",
      "required": [
        "entityComponentKind"
      ]
    },
    "EntityInferenceOptions": {
      "type": "object",
      "description": "The class that houses the inference options allowed for named entity recognition.",
      "properties": {
        "excludeNormalizedValues": {
          "type": "boolean",
          "description": "Option to include/exclude the detected entity values to be normalized and included in the metadata. The numeric and temporal entity types support value normalization.",
          "default": false
        }
      }
    },
    "EntityLinkingLROResult": {
      "type": "object",
      "description": "Contains the analyze text Entity linking task LRO result.",
      "properties": {
        "results": {
          "$ref": "#/definitions/EntityLinkingResult",
          "description": "Entity linking result."
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROResult"
        }
      ],
      "x-ms-discriminator-value": "EntityLinkingLROResults"
    },
    "EntityLinkingLROTask": {
      "type": "object",
      "description": "Contains the analyze text Entity linking LRO task.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/EntityLinkingTaskParameters",
          "description": "Task parameters."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROTask"
        }
      ],
      "x-ms-discriminator-value": "EntityLinking"
    },
    "EntityLinkingResult": {
      "type": "object",
      "description": "Entity linking result.",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        },
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/EntityLinkingResultWithDetectedLanguage"
          }
        }
      },
      "required": [
        "errors",
        "modelVersion",
        "documents"
      ]
    },
    "EntityLinkingResultWithDetectedLanguage": {
      "type": "object",
      "description": "Entity linking document result with auto language detection.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/DocumentWarning"
          },
          "x-ms-identifiers": []
        },
        "statistics": {
          "$ref": "#/definitions/DocumentStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the document payload."
        },
        "entities": {
          "type": "array",
          "description": "Recognized well known entities in the document.",
          "items": {
            "$ref": "#/definitions/LinkedEntity"
          }
        },
        "detectedLanguage": {
          "$ref": "#/definitions/DetectedLanguage",
          "description": "If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document."
        }
      },
      "required": [
        "id",
        "warnings",
        "entities"
      ]
    },
    "EntityLinkingTaskParameters": {
      "type": "object",
      "description": "Supported parameters for an Entity Linking task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "modelVersion": {
          "type": "string",
          "description": "model version",
          "default": "latest"
        },
        "stringIndexType": {
          "type": "string",
          "description": "Optional parameter to provide the string index type used to interpret string offsets. Defaults to TextElements (Graphemes).",
          "default": "TextElements_v8",
          "enum": [
            "TextElements_v8",
            "UnicodeCodePoint",
            "Utf16CodeUnit"
          ],
          "x-ms-enum": {
            "name": "StringIndexType",
            "modelAsString": true,
            "values": [
              {
                "name": "TextElements_v8",
                "value": "TextElements_v8",
                "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
              },
              {
                "name": "UnicodeCodePoint",
                "value": "UnicodeCodePoint",
                "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
              },
              {
                "name": "Utf16CodeUnit",
                "value": "Utf16CodeUnit",
                "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
              }
            ]
          }
        }
      }
    },
    "EntityLinkingTaskResult": {
      "type": "object",
      "description": "Contains the analyze text Entity linking task result.",
      "properties": {
        "results": {
          "$ref": "#/definitions/EntityLinkingResult",
          "description": "Entity linking result."
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextTaskResult"
        }
      ],
      "x-ms-discriminator-value": "EntityLinkingResults"
    },
    "EntityRecognitionLROResult": {
      "type": "object",
      "description": "Contains the entity recognition job task result.",
      "properties": {
        "results": {
          "$ref": "#/definitions/EntitiesResult",
          "description": "Results for the task."
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROResult"
        }
      ],
      "x-ms-discriminator-value": "EntityRecognitionLROResults"
    },
    "EntityTag": {
      "type": "object",
      "description": "Entity tag object which contains the name of the tags abd any associated confidence score. Entity Tags are used to express some similarities/affinity between entities.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the tag. Entity Tag names will be unique globally."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "Detection score between 0 and 1 of the extracted entity."
        }
      },
      "required": [
        "name"
      ]
    },
    "EntityWithMetadata": {
      "type": "object",
      "description": "Entity object with tags and metadata.",
      "properties": {
        "text": {
          "type": "string",
          "description": "Entity text as appears in the request."
        },
        "category": {
          "type": "string",
          "description": "Entity type."
        },
        "subcategory": {
          "type": "string",
          "description": "(Optional) Entity sub type."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position for the entity text. Use of different 'stringIndexType' values can affect the offset returned."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Length for the entity text. Use of different 'stringIndexType' values can affect the length returned."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "Confidence score between 0 and 1 of the extracted entity."
        },
        "type": {
          "type": "string",
          "description": "An entity type is the lowest (or finest) granularity at which the entity has been detected. The type maps to the specific metadata attributes associated with the entity detected."
        },
        "tags": {
          "type": "array",
          "description": "List of entity tags. Tags are to express some similarities/affinity between entities.",
          "items": {
            "$ref": "#/definitions/EntityTag"
          },
          "x-ms-identifiers": []
        },
        "metadata": {
          "$ref": "#/definitions/BaseMetadata",
          "description": "The entity metadata object."
        }
      },
      "required": [
        "text",
        "category",
        "offset",
        "length",
        "confidenceScore",
        "type",
        "tags"
      ]
    },
    "Error": {
      "type": "object",
      "description": "The error response object returned when the service encounters some errors during processing the request.",
      "properties": {
        "code": {
          "$ref": "#/definitions/ErrorCode",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/InnerErrorModel",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "ErrorCode": {
      "type": "string",
      "description": "Human-readable error code.",
      "enum": [
        "InvalidRequest",
        "InvalidArgument",
        "Unauthorized",
        "Forbidden",
        "NotFound",
        "ProjectNotFound",
        "OperationNotFound",
        "AzureCognitiveSearchNotFound",
        "AzureCognitiveSearchIndexNotFound",
        "TooManyRequests",
        "AzureCognitiveSearchThrottling",
        "AzureCognitiveSearchIndexLimitReached",
        "InternalServerError",
        "ServiceUnavailable",
        "Timeout",
        "QuotaExceeded",
        "Conflict",
        "Warning"
      ],
      "x-ms-enum": {
        "name": "ErrorCode",
        "modelAsString": true,
        "values": [
          {
            "name": "InvalidRequest",
            "value": "InvalidRequest",
            "description": "Invalid request error"
          },
          {
            "name": "InvalidArgument",
            "value": "InvalidArgument",
            "description": "Invalid argument error"
          },
          {
            "name": "Unauthorized",
            "value": "Unauthorized",
            "description": "Unauthorized access error"
          },
          {
            "name": "Forbidden",
            "value": "Forbidden",
            "description": "Forbidden access error"
          },
          {
            "name": "NotFound",
            "value": "NotFound",
            "description": "Not found error"
          },
          {
            "name": "ProjectNotFound",
            "value": "ProjectNotFound",
            "description": "Project not found error"
          },
          {
            "name": "OperationNotFound",
            "value": "OperationNotFound",
            "description": "Operation not found error"
          },
          {
            "name": "AzureCognitiveSearchNotFound",
            "value": "AzureCognitiveSearchNotFound",
            "description": "Azure Cognitive Search not found error"
          },
          {
            "name": "AzureCognitiveSearchIndexNotFound",
            "value": "AzureCognitiveSearchIndexNotFound",
            "description": "Azure Cognitive Search index not found error"
          },
          {
            "name": "TooManyRequests",
            "value": "TooManyRequests",
            "description": "Too many requests error"
          },
          {
            "name": "AzureCognitiveSearchThrottling",
            "value": "AzureCognitiveSearchThrottling",
            "description": "Azure Cognitive Search throttling error"
          },
          {
            "name": "AzureCognitiveSearchIndexLimitReached",
            "value": "AzureCognitiveSearchIndexLimitReached",
            "description": "Azure Cognitive Search index limit reached error"
          },
          {
            "name": "InternalServerError",
            "value": "InternalServerError",
            "description": "Internal server error"
          },
          {
            "name": "ServiceUnavailable",
            "value": "ServiceUnavailable",
            "description": "Service unavailable error"
          },
          {
            "name": "Timeout",
            "value": "Timeout",
            "description": "Timeout error"
          },
          {
            "name": "QuotaExceeded",
            "value": "QuotaExceeded",
            "description": "Quota exceeded error"
          },
          {
            "name": "Conflict",
            "value": "Conflict",
            "description": "Conflict error"
          },
          {
            "name": "Warning",
            "value": "Warning",
            "description": "Warning error"
          }
        ]
      }
    },
    "ErrorResponse": {
      "type": "object",
      "description": "Error response.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "ExtractedSummaryDocumentResultWithDetectedLanguage": {
      "type": "object",
      "description": "A ranked list of sentences representing the extracted summary.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/DocumentWarning"
          },
          "x-ms-identifiers": []
        },
        "statistics": {
          "$ref": "#/definitions/DocumentStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the document payload."
        },
        "sentences": {
          "type": "array",
          "description": "Specifies the the extracted sentences from the input document.",
          "items": {
            "$ref": "#/definitions/ExtractedSummarySentence"
          },
          "x-ms-identifiers": []
        },
        "detectedLanguage": {
          "$ref": "#/definitions/DetectedLanguage",
          "description": "If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document."
        }
      },
      "required": [
        "id",
        "warnings",
        "sentences"
      ]
    },
    "ExtractedSummarySentence": {
      "type": "object",
      "description": "Represents an extracted sentences from the input document.",
      "properties": {
        "text": {
          "type": "string",
          "description": "The extracted sentence text."
        },
        "rankScore": {
          "type": "number",
          "format": "double",
          "description": "A double value representing the relevance of the sentence within the summary. Higher values indicate higher importance."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "The sentence offset from the start of the document, based on the value of the parameter StringIndexType."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the sentence."
        }
      },
      "required": [
        "text",
        "rankScore",
        "offset",
        "length"
      ]
    },
    "ExtractiveSummarizationLROResult": {
      "type": "object",
      "description": "An object representing the results for an Extractive Summarization task.",
      "properties": {
        "results": {
          "$ref": "#/definitions/ExtractiveSummarizationResult",
          "description": "Results of the task."
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROResult"
        }
      ],
      "x-ms-discriminator-value": "ExtractiveSummarizationLROResults"
    },
    "ExtractiveSummarizationLROTask": {
      "type": "object",
      "description": "An object representing the task definition for an Extractive Summarization task.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/ExtractiveSummarizationTaskParameters",
          "description": "Parameters for the Extractive Summarization task."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROTask"
        }
      ],
      "x-ms-discriminator-value": "ExtractiveSummarization"
    },
    "ExtractiveSummarizationResult": {
      "type": "object",
      "description": "An object representing the pre-built Extractive Summarization results of each document.",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        },
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/ExtractedSummaryDocumentResultWithDetectedLanguage"
          }
        }
      },
      "required": [
        "errors",
        "modelVersion",
        "documents"
      ]
    },
    "ExtractiveSummarizationTaskParameters": {
      "type": "object",
      "description": "Supported parameters for an Extractive Summarization task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "modelVersion": {
          "type": "string",
          "description": "model version",
          "default": "latest"
        },
        "sentenceCount": {
          "type": "integer",
          "format": "int64",
          "description": "Specifies the number of sentences in the extracted summary.",
          "default": 3
        },
        "sortBy": {
          "type": "string",
          "description": "Specifies how to sort the extracted summaries.",
          "default": "Offset",
          "enum": [
            "Offset",
            "Rank"
          ],
          "x-ms-enum": {
            "name": "ExtractiveSummarizationSortingCriteria",
            "modelAsString": true,
            "values": [
              {
                "name": "Offset",
                "value": "Offset",
                "description": "Indicates that results should be sorted in order of appearance in the text."
              },
              {
                "name": "Rank",
                "value": "Rank",
                "description": "Indicates that results should be sorted in order of importance (i.e. rank score) according to the model."
              }
            ]
          }
        },
        "stringIndexType": {
          "type": "string",
          "description": "Specifies the method used to interpret string offsets.",
          "default": "TextElements_v8",
          "enum": [
            "TextElements_v8",
            "UnicodeCodePoint",
            "Utf16CodeUnit"
          ],
          "x-ms-enum": {
            "name": "StringIndexType",
            "modelAsString": true,
            "values": [
              {
                "name": "TextElements_v8",
                "value": "TextElements_v8",
                "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
              },
              {
                "name": "UnicodeCodePoint",
                "value": "UnicodeCodePoint",
                "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
              },
              {
                "name": "Utf16CodeUnit",
                "value": "Utf16CodeUnit",
                "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
              }
            ]
          }
        },
        "query": {
          "type": "string",
          "description": "(Optional) If provided, the query will be used to extract most relevant sentences from the document."
        }
      }
    },
    "FhirBundle": {
      "type": "object",
      "description": "JSON bundle containing a FHIR compatible object for consumption in other Healthcare tools. For additional information see https://www.hl7.org/fhir/overview.html.",
      "additionalProperties": {}
    },
    "HealthcareAssertion": {
      "type": "object",
      "description": "Assertion of the entity.",
      "properties": {
        "conditionality": {
          "$ref": "#/definitions/Conditionality",
          "description": "Describes any conditionality on the entity."
        },
        "certainty": {
          "$ref": "#/definitions/Certainty",
          "description": "Describes the entities certainty and polarity."
        },
        "association": {
          "$ref": "#/definitions/Association",
          "description": "Describes if the entity is the subject of the text or if it describes someone else."
        },
        "temporality": {
          "$ref": "#/definitions/Temporality",
          "description": "Describes temporal information regarding the entity."
        }
      }
    },
    "HealthcareEntitiesDocumentResultWithDocumentDetectedLanguage": {
      "type": "object",
      "description": "Result object for the processed Healthcare document with detected language.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/DocumentWarning"
          },
          "x-ms-identifiers": []
        },
        "statistics": {
          "$ref": "#/definitions/DocumentStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the document payload."
        },
        "entities": {
          "type": "array",
          "description": "Healthcare entities.",
          "items": {
            "$ref": "#/definitions/HealthcareEntity"
          },
          "x-ms-identifiers": []
        },
        "relations": {
          "type": "array",
          "description": "Healthcare entity relations.",
          "items": {
            "$ref": "#/definitions/HealthcareRelation"
          },
          "x-ms-identifiers": []
        },
        "fhirBundle": {
          "$ref": "#/definitions/FhirBundle",
          "description": "JSON bundle containing a FHIR compatible object for consumption in other Healthcare tools. For additional information see https://www.hl7.org/fhir/overview.html."
        },
        "detectedLanguage": {
          "$ref": "#/definitions/DetectedLanguage",
          "description": "If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document."
        }
      },
      "required": [
        "id",
        "warnings",
        "entities",
        "relations"
      ]
    },
    "HealthcareEntity": {
      "type": "object",
      "description": "Healthcare entity extracted from the document",
      "properties": {
        "text": {
          "type": "string",
          "description": "Entity text as appears in the request."
        },
        "category": {
          "$ref": "#/definitions/healthcareEntityCategory",
          "description": "Healthcare Entity Category."
        },
        "subcategory": {
          "type": "string",
          "description": "(Optional) Entity sub type."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position for the entity text. Use of different 'stringIndexType' values can affect the offset returned."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Length for the entity text. Use of different 'stringIndexType' values can affect the length returned."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "Confidence score between 0 and 1 of the extracted entity."
        },
        "assertion": {
          "$ref": "#/definitions/HealthcareAssertion",
          "description": "Assertion of the entity."
        },
        "name": {
          "type": "string",
          "description": "Preferred name for the entity. Example: 'histologically' would have a 'name' of 'histologic'."
        },
        "links": {
          "type": "array",
          "description": "Entity references in known data sources.",
          "items": {
            "$ref": "#/definitions/HealthcareEntityLink"
          }
        }
      },
      "required": [
        "text",
        "category",
        "offset",
        "length",
        "confidenceScore"
      ]
    },
    "HealthcareEntityLink": {
      "type": "object",
      "description": "Reference to an entity in known data sources.",
      "properties": {
        "dataSource": {
          "type": "string",
          "description": "Entity Catalog. Examples include: UMLS, CHV, MSH, etc."
        },
        "id": {
          "type": "string",
          "description": "Entity id in the given source catalog."
        }
      },
      "required": [
        "dataSource",
        "id"
      ]
    },
    "HealthcareLROResult": {
      "type": "object",
      "description": "Healthcare Analyze Text long tunning operation result object.",
      "properties": {
        "results": {
          "$ref": "#/definitions/HealthcareResult",
          "description": "Results of the task."
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROResult"
        }
      ],
      "x-ms-discriminator-value": "HealthcareLROResults"
    },
    "HealthcareLROTask": {
      "type": "object",
      "description": "The long running task to be performed by the service on the Healthcare input documents.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/HealthcareTaskParameters",
          "description": "Parameters for the Healthcare task."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROTask"
        }
      ],
      "x-ms-discriminator-value": "Healthcare"
    },
    "HealthcareRelation": {
      "type": "object",
      "description": "Every relation is an entity graph of a certain relationType, where all entities are connected and have specific roles within the relation context.",
      "properties": {
        "relationType": {
          "$ref": "#/definitions/relationType",
          "description": "Type of relation. Examples include: `DosageOfMedication` or 'FrequencyOfMedication', etc."
        },
        "entities": {
          "type": "array",
          "description": "The entities in the relation.",
          "items": {
            "$ref": "#/definitions/HealthcareRelationEntity"
          },
          "x-ms-identifiers": []
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "Confidence score between 0 and 1 of the extracted relation."
        }
      },
      "required": [
        "relationType",
        "entities"
      ]
    },
    "HealthcareRelationEntity": {
      "type": "object",
      "description": "Entity in the relation.",
      "properties": {
        "ref": {
          "type": "string",
          "description": "Reference link object, using a JSON pointer RFC 6901 (URI Fragment Identifier Representation), pointing to the entity ."
        },
        "role": {
          "type": "string",
          "description": "Role of entity in the relationship. For example: 'CD20-positive diffuse large B-cell lymphoma' has the following entities with their roles in parenthesis:  CD20 (GeneOrProtein), Positive (Expression), diffuse large B-cell lymphoma (Diagnosis)."
        }
      },
      "required": [
        "ref",
        "role"
      ]
    },
    "HealthcareResult": {
      "type": "object",
      "description": "Result object for the processed Healthcare task.",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        },
        "documents": {
          "type": "array",
          "description": "List of result objects for the processed Healthcare documents.",
          "items": {
            "$ref": "#/definitions/HealthcareEntitiesDocumentResultWithDocumentDetectedLanguage"
          }
        }
      },
      "required": [
        "errors",
        "modelVersion",
        "documents"
      ]
    },
    "HealthcareTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a Healthcare task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "modelVersion": {
          "type": "string",
          "description": "model version",
          "default": "latest"
        },
        "stringIndexType": {
          "type": "string",
          "description": "Specifies the method used to interpret string offsets.",
          "default": "TextElements_v8",
          "enum": [
            "TextElements_v8",
            "UnicodeCodePoint",
            "Utf16CodeUnit"
          ],
          "x-ms-enum": {
            "name": "StringIndexType",
            "modelAsString": true,
            "values": [
              {
                "name": "TextElements_v8",
                "value": "TextElements_v8",
                "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
              },
              {
                "name": "UnicodeCodePoint",
                "value": "UnicodeCodePoint",
                "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
              },
              {
                "name": "Utf16CodeUnit",
                "value": "Utf16CodeUnit",
                "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
              }
            ]
          }
        },
        "fhirVersion": {
          "$ref": "#/definitions/fhirVersion",
          "description": "The FHIR Spec version that the result will use to format the fhirBundle. For additional information see https://www.hl7.org/fhir/overview.html."
        },
        "documentType": {
          "$ref": "#/definitions/healthcareDocumentType",
          "description": "Document type that can be provided as input for Fhir Documents. Expect to have fhirVersion provided when used. Behavior of using None enum is the same as not using the documentType parameter."
        }
      }
    },
    "InformationMetadata": {
      "type": "object",
      "description": "Represents the Information (data) entity Metadata model.",
      "properties": {
        "value": {
          "type": "number",
          "format": "double",
          "description": "The numeric value that the extracted text denotes."
        },
        "unit": {
          "$ref": "#/definitions/InformationUnit",
          "description": "Unit of measure for information."
        }
      },
      "required": [
        "value",
        "unit"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseMetadata"
        }
      ],
      "x-ms-discriminator-value": "InformationMetadata"
    },
    "InformationUnit": {
      "type": "string",
      "description": "The information (data) Unit of measurement.",
      "enum": [
        "Unspecified",
        "Bit",
        "Kilobit",
        "Megabit",
        "Gigabit",
        "Terabit",
        "Petabit",
        "Byte",
        "Kilobyte",
        "Megabyte",
        "Gigabyte",
        "Terabyte",
        "Petabyte"
      ],
      "x-ms-enum": {
        "name": "InformationUnit",
        "modelAsString": true,
        "values": [
          {
            "name": "Unspecified",
            "value": "Unspecified",
            "description": "Unspecified data size unit"
          },
          {
            "name": "Bit",
            "value": "Bit",
            "description": "Data size unit in bits"
          },
          {
            "name": "Kilobit",
            "value": "Kilobit",
            "description": "Data size unit in kilobits"
          },
          {
            "name": "Megabit",
            "value": "Megabit",
            "description": "Data size unit in megabits"
          },
          {
            "name": "Gigabit",
            "value": "Gigabit",
            "description": "Data size unit in gigabits"
          },
          {
            "name": "Terabit",
            "value": "Terabit",
            "description": "Data size unit in terabits"
          },
          {
            "name": "Petabit",
            "value": "Petabit",
            "description": "Data size unit in petabits"
          },
          {
            "name": "Byte",
            "value": "Byte",
            "description": "Data size unit in bytes"
          },
          {
            "name": "Kilobyte",
            "value": "Kilobyte",
            "description": "Data size unit in kilobytes"
          },
          {
            "name": "Megabyte",
            "value": "Megabyte",
            "description": "Data size unit in megabytes"
          },
          {
            "name": "Gigabyte",
            "value": "Gigabyte",
            "description": "Data size unit in gigabytes"
          },
          {
            "name": "Terabyte",
            "value": "Terabyte",
            "description": "Data size unit in terabytes"
          },
          {
            "name": "Petabyte",
            "value": "Petabyte",
            "description": "Data size unit in petabytes"
          }
        ]
      }
    },
    "InnerErrorCode": {
      "type": "string",
      "description": "Human-readable error code.",
      "enum": [
        "InvalidRequest",
        "InvalidParameterValue",
        "KnowledgeBaseNotFound",
        "AzureCognitiveSearchNotFound",
        "AzureCognitiveSearchThrottling",
        "ExtractionFailure",
        "InvalidRequestBodyFormat",
        "EmptyRequest",
        "MissingInputDocuments",
        "InvalidDocument",
        "ModelVersionIncorrect",
        "InvalidDocumentBatch",
        "UnsupportedLanguageCode",
        "InvalidCountryHint"
      ],
      "x-ms-enum": {
        "name": "InnerErrorCode",
        "modelAsString": true,
        "values": [
          {
            "name": "InvalidRequest",
            "value": "InvalidRequest",
            "description": "Invalid request error"
          },
          {
            "name": "InvalidParameterValue",
            "value": "InvalidParameterValue",
            "description": "Invalid parameter value error"
          },
          {
            "name": "KnowledgeBaseNotFound",
            "value": "KnowledgeBaseNotFound",
            "description": "Knowledge base not found error"
          },
          {
            "name": "AzureCognitiveSearchNotFound",
            "value": "AzureCognitiveSearchNotFound",
            "description": "Azure Cognitive Search not found error"
          },
          {
            "name": "AzureCognitiveSearchThrottling",
            "value": "AzureCognitiveSearchThrottling",
            "description": "Azure Cognitive Search throttling error"
          },
          {
            "name": "ExtractionFailure",
            "value": "ExtractionFailure",
            "description": "Extraction failure error"
          },
          {
            "name": "InvalidRequestBodyFormat",
            "value": "InvalidRequestBodyFormat",
            "description": "Invalid request body format error"
          },
          {
            "name": "EmptyRequest",
            "value": "EmptyRequest",
            "description": "Empty request error"
          },
          {
            "name": "MissingInputDocuments",
            "value": "MissingInputDocuments",
            "description": "Missing input documents error"
          },
          {
            "name": "InvalidDocument",
            "value": "InvalidDocument",
            "description": "Invalid document error"
          },
          {
            "name": "ModelVersionIncorrect",
            "value": "ModelVersionIncorrect",
            "description": "Model version incorrect error"
          },
          {
            "name": "InvalidDocumentBatch",
            "value": "InvalidDocumentBatch",
            "description": "Invalid document batch error"
          },
          {
            "name": "UnsupportedLanguageCode",
            "value": "UnsupportedLanguageCode",
            "description": "Unsupported language code error"
          },
          {
            "name": "InvalidCountryHint",
            "value": "InvalidCountryHint",
            "description": "Invalid country hint error"
          }
        ]
      }
    },
    "InnerErrorModel": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "$ref": "#/definitions/InnerErrorCode",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "details": {
          "type": "object",
          "description": "Error details.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "target": {
          "type": "string",
          "description": "Error target."
        },
        "innererror": {
          "$ref": "#/definitions/InnerErrorModel",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "KeyPhraseExtractionLROResult": {
      "type": "object",
      "description": "Contains the analyze text KeyPhraseExtraction LRO task.",
      "properties": {
        "results": {
          "$ref": "#/definitions/KeyPhraseResult",
          "description": "The list of Key phrase extraction results"
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROResult"
        }
      ],
      "x-ms-discriminator-value": "KeyPhraseExtractionLROResults"
    },
    "KeyPhraseLROTask": {
      "type": "object",
      "description": "An object representing the task definition for a Key Phrase Extraction task.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/KeyPhraseTaskParameters",
          "description": "Key phrase extraction task parameters."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROTask"
        }
      ],
      "x-ms-discriminator-value": "KeyPhraseExtraction"
    },
    "KeyPhraseResult": {
      "type": "object",
      "description": "Contains the KeyPhraseResult.",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        },
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/KeyPhrasesDocumentResultWithDetectedLanguage"
          }
        }
      },
      "required": [
        "errors",
        "modelVersion",
        "documents"
      ]
    },
    "KeyPhraseTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a Key Phrase Extraction task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "modelVersion": {
          "type": "string",
          "description": "model version",
          "default": "latest"
        }
      }
    },
    "KeyPhraseTaskResult": {
      "type": "object",
      "description": "Contains the analyze text KeyPhraseExtraction task result.",
      "properties": {
        "results": {
          "$ref": "#/definitions/KeyPhraseResult",
          "description": "The list of Key phrase extraction results"
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextTaskResult"
        }
      ],
      "x-ms-discriminator-value": "KeyPhraseExtractionResults"
    },
    "KeyPhrasesDocumentResultWithDetectedLanguage": {
      "type": "object",
      "description": "A ranked list of sentences representing the extracted summary.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/DocumentWarning"
          },
          "x-ms-identifiers": []
        },
        "statistics": {
          "$ref": "#/definitions/DocumentStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the document payload."
        },
        "keyPhrases": {
          "type": "array",
          "description": "A list of representative words or phrases. The number of key phrases returned is proportional to the number of words in the input document.",
          "items": {
            "type": "string"
          }
        },
        "detectedLanguage": {
          "$ref": "#/definitions/DetectedLanguage",
          "description": "If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document."
        }
      },
      "required": [
        "id",
        "warnings",
        "keyPhrases"
      ]
    },
    "LanguageDetectionAnalysisInput": {
      "type": "object",
      "description": "Contains the language detection document analysis input.",
      "properties": {
        "documents": {
          "type": "array",
          "description": "List of documents to be analyzed.",
          "items": {
            "$ref": "#/definitions/LanguageInput"
          }
        }
      }
    },
    "LanguageDetectionDocumentResult": {
      "type": "object",
      "description": "Contains the language detection for a document.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/DocumentWarning"
          },
          "x-ms-identifiers": []
        },
        "statistics": {
          "$ref": "#/definitions/DocumentStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the document payload."
        },
        "detectedLanguage": {
          "$ref": "#/definitions/DetectedLanguage",
          "description": "Detected Language."
        }
      },
      "required": [
        "id",
        "warnings",
        "detectedLanguage"
      ]
    },
    "LanguageDetectionResult": {
      "type": "object",
      "description": "Contains the language detection result for the request.",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        },
        "documents": {
          "type": "array",
          "description": "Enumeration of language detection results for each input document.",
          "items": {
            "$ref": "#/definitions/LanguageDetectionDocumentResult"
          }
        }
      },
      "required": [
        "errors",
        "modelVersion",
        "documents"
      ]
    },
    "LanguageDetectionTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a Language Detection task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "modelVersion": {
          "type": "string",
          "description": "model version",
          "default": "latest"
        }
      }
    },
    "LanguageDetectionTaskResult": {
      "type": "object",
      "description": "Contains the language detection task result for the request.",
      "properties": {
        "results": {
          "$ref": "#/definitions/LanguageDetectionResult",
          "description": "Contains the language detection results."
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextTaskResult"
        }
      ],
      "x-ms-discriminator-value": "LanguageDetectionResults"
    },
    "LanguageInput": {
      "type": "object",
      "description": "Contains the language detection input.",
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique, non-empty document identifier."
        },
        "text": {
          "type": "string",
          "description": "The input text to process."
        },
        "countryHint": {
          "type": "string",
          "description": "The country hint to help with language detection of the text."
        }
      },
      "required": [
        "id",
        "text"
      ]
    },
    "LearnedComponent": {
      "type": "object",
      "description": "This object contains information of the learned component of the detected entity.",
      "properties": {
        "value": {
          "type": "string",
          "description": "The learned component of an extracted entity type."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EntityComponentInformation"
        }
      ],
      "x-ms-discriminator-value": "LearnedComponent"
    },
    "LengthMetadata": {
      "type": "object",
      "description": "Represents the Length entity Metadata model.",
      "properties": {
        "value": {
          "type": "number",
          "format": "double",
          "description": "The numeric value that the extracted text denotes."
        },
        "unit": {
          "$ref": "#/definitions/LengthUnit",
          "description": "Unit of measure for length."
        }
      },
      "required": [
        "value",
        "unit"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseMetadata"
        }
      ],
      "x-ms-discriminator-value": "LengthMetadata"
    },
    "LengthUnit": {
      "type": "string",
      "description": "The length unit of measurement.",
      "enum": [
        "Unspecified",
        "Kilometer",
        "Hectometer",
        "Decameter",
        "Meter",
        "Decimeter",
        "Centimeter",
        "Millimeter",
        "Micrometer",
        "Nanometer",
        "Picometer",
        "Mile",
        "Yard",
        "Inch",
        "Foot",
        "LightYear",
        "Point"
      ],
      "x-ms-enum": {
        "name": "LengthUnit",
        "modelAsString": true,
        "values": [
          {
            "name": "Unspecified",
            "value": "Unspecified",
            "description": "Unspecified length unit."
          },
          {
            "name": "Kilometer",
            "value": "Kilometer",
            "description": "Length unit in kilometers."
          },
          {
            "name": "Hectometer",
            "value": "Hectometer",
            "description": "Length unit in hectometers."
          },
          {
            "name": "Decameter",
            "value": "Decameter",
            "description": "Length unit in decameters."
          },
          {
            "name": "Meter",
            "value": "Meter",
            "description": "Length unit in meters."
          },
          {
            "name": "Decimeter",
            "value": "Decimeter",
            "description": "Length unit in decimeters."
          },
          {
            "name": "Centimeter",
            "value": "Centimeter",
            "description": "Length unit in centimeters."
          },
          {
            "name": "Millimeter",
            "value": "Millimeter",
            "description": "Length unit in millimeters."
          },
          {
            "name": "Micrometer",
            "value": "Micrometer",
            "description": "Length unit in micrometers."
          },
          {
            "name": "Nanometer",
            "value": "Nanometer",
            "description": "Length unit in nanometers."
          },
          {
            "name": "Picometer",
            "value": "Picometer",
            "description": "Length unit in picometers."
          },
          {
            "name": "Mile",
            "value": "Mile",
            "description": "Length unit in miles."
          },
          {
            "name": "Yard",
            "value": "Yard",
            "description": "Length unit in yards."
          },
          {
            "name": "Inch",
            "value": "Inch",
            "description": "Length unit in inches."
          },
          {
            "name": "Foot",
            "value": "Foot",
            "description": "Length unit in feet."
          },
          {
            "name": "LightYear",
            "value": "LightYear",
            "description": "Length unit in light years."
          },
          {
            "name": "Point",
            "value": "Point",
            "description": "Length unit in points."
          }
        ]
      }
    },
    "LinkedEntity": {
      "type": "object",
      "description": "The LinkedEntity object containing the detected entity with the associated sources/links.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Entity Linking formal name."
        },
        "matches": {
          "type": "array",
          "description": "List of instances this entity appears in the text.",
          "items": {
            "$ref": "#/definitions/Match"
          },
          "x-ms-identifiers": []
        },
        "language": {
          "type": "string",
          "description": "Language used in the data source."
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the recognized entity from the data source."
        },
        "url": {
          "type": "string",
          "description": "URL for the entity's page from the data source."
        },
        "dataSource": {
          "type": "string",
          "description": "Data source used to extract entity linking, such as Wiki/Bing etc."
        },
        "bingId": {
          "type": "string",
          "description": "Bing Entity Search API unique identifier of the recognized entity."
        }
      },
      "required": [
        "name",
        "matches",
        "language",
        "url",
        "dataSource"
      ]
    },
    "ListComponent": {
      "type": "object",
      "description": "This object contains information of the list component of the detected entity.",
      "properties": {
        "value": {
          "type": "string",
          "description": "The list key of an extracted entity type."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EntityComponentInformation"
        }
      ],
      "x-ms-discriminator-value": "ListComponent"
    },
    "Match": {
      "type": "object",
      "description": "The Match object containing the detected entity text with the offset and the length.",
      "properties": {
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "If a well known item is recognized, a decimal number denoting the confidence level between 0 and 1 will be returned."
        },
        "text": {
          "type": "string",
          "description": "Entity text as appears in the request."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position for the entity match text."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Length for the entity match text."
        }
      },
      "required": [
        "confidenceScore",
        "text",
        "offset",
        "length"
      ]
    },
    "MatchLongestEntityPolicyType": {
      "type": "object",
      "description": "Represents the Match longest overlap policy. No overlapping entities as far as it is possible. 1. If there are overlapping entities, the longest one will be returned. 2. If the set of characters predicted for 2 or more entities are exactly the same, select the entity that has the higher confidence score.3. If the entity scores are identical, return all entities that are still present after applying the previous rules. 3. If there is partial overlap (as in Hello Text Analytics) follow the above steps starting from 1.",
      "allOf": [
        {
          "$ref": "#/definitions/BaseEntityOverlapPolicy"
        }
      ],
      "x-ms-discriminator-value": "matchLongest"
    },
    "MetadataKind": {
      "type": "string",
      "description": "The entity Metadata object kind.",
      "enum": [
        "DateMetadata",
        "DateTimeMetadata",
        "TimeMetadata",
        "TemporalSetMetadata",
        "NumberMetadata",
        "OrdinalMetadata",
        "SpeedMetadata",
        "WeightMetadata",
        "LengthMetadata",
        "VolumeMetadata",
        "AreaMetadata",
        "AgeMetadata",
        "InformationMetadata",
        "TemperatureMetadata",
        "CurrencyMetadata",
        "NumericRangeMetadata",
        "TemporalSpanMetadata"
      ],
      "x-ms-enum": {
        "name": "MetadataKind",
        "modelAsString": true,
        "values": [
          {
            "name": "DateMetadata",
            "value": "DateMetadata",
            "description": "Metadata for date-related values."
          },
          {
            "name": "DateTimeMetadata",
            "value": "DateTimeMetadata",
            "description": "Metadata for date and time-related values."
          },
          {
            "name": "TimeMetadata",
            "value": "TimeMetadata",
            "description": "Metadata for time-related values."
          },
          {
            "name": "TemporalSetMetadata",
            "value": "TemporalSetMetadata",
            "description": "Metadata for set of time-related values."
          },
          {
            "name": "NumberMetadata",
            "value": "NumberMetadata",
            "description": "Metadata for numeric values."
          },
          {
            "name": "OrdinalMetadata",
            "value": "OrdinalMetadata",
            "description": "Metadata for ordinal numbers."
          },
          {
            "name": "SpeedMetadata",
            "value": "SpeedMetadata",
            "description": "Metadata for speed-related values."
          },
          {
            "name": "WeightMetadata",
            "value": "WeightMetadata",
            "description": "Metadata for weight-related values."
          },
          {
            "name": "LengthMetadata",
            "value": "LengthMetadata",
            "description": "Metadata for length-related values."
          },
          {
            "name": "VolumeMetadata",
            "value": "VolumeMetadata",
            "description": "Metadata for volume-related values."
          },
          {
            "name": "AreaMetadata",
            "value": "AreaMetadata",
            "description": "Metadata for area-related values."
          },
          {
            "name": "AgeMetadata",
            "value": "AgeMetadata",
            "description": "Metadata for age-related values."
          },
          {
            "name": "InformationMetadata",
            "value": "InformationMetadata",
            "description": "Metadata for information-related values."
          },
          {
            "name": "TemperatureMetadata",
            "value": "TemperatureMetadata",
            "description": "Metadata for temperature-related values."
          },
          {
            "name": "CurrencyMetadata",
            "value": "CurrencyMetadata",
            "description": "Metadata for currency-related values."
          },
          {
            "name": "NumericRangeMetadata",
            "value": "NumericRangeMetadata",
            "description": "Metadata for numeric range values."
          },
          {
            "name": "TemporalSpanMetadata",
            "value": "TemporalSpanMetadata",
            "description": "Metadata for temporal span values."
          }
        ]
      }
    },
    "MultiLanguageAnalysisInput": {
      "type": "object",
      "description": "Collection of input documents to be analyzed by the service.",
      "properties": {
        "documents": {
          "type": "array",
          "description": "The input documents to be analyzed.",
          "items": {
            "$ref": "#/definitions/MultiLanguageInput"
          }
        }
      }
    },
    "MultiLanguageInput": {
      "type": "object",
      "description": "Contains an input document to be analyzed by the service.",
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique, non-empty document identifier."
        },
        "text": {
          "type": "string",
          "description": "The input text to process."
        },
        "language": {
          "type": "string",
          "description": "(Optional) This is the 2 letter ISO 639-1 representation of a language. For example, use \\\"en\\\" for English; \\\"es\\\" for Spanish etc. If not set, use \\\"en\\\" for English as default. (Following only applies to 2023-04-15-preview and above) For Auto Language Detection, use \\\"auto\\\". If not set, use \\\"en\\\" for English as default."
        }
      },
      "required": [
        "id",
        "text"
      ]
    },
    "NumberKind": {
      "type": "string",
      "description": "The type of the extracted number entity.",
      "enum": [
        "Integer",
        "Decimal",
        "Power",
        "Fraction",
        "Percent",
        "Unspecified"
      ],
      "x-ms-enum": {
        "name": "NumberKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Integer",
            "value": "Integer",
            "description": "Integer number"
          },
          {
            "name": "Decimal",
            "value": "Decimal",
            "description": "Decimal number"
          },
          {
            "name": "Power",
            "value": "Power",
            "description": "Power number"
          },
          {
            "name": "Fraction",
            "value": "Fraction",
            "description": "Fraction number"
          },
          {
            "name": "Percent",
            "value": "Percent",
            "description": "Percent number"
          },
          {
            "name": "Unspecified",
            "value": "Unspecified",
            "description": "Unspecified number kind"
          }
        ]
      }
    },
    "NumberMetadata": {
      "type": "object",
      "description": "A metadata for numeric entity instances.",
      "properties": {
        "numberKind": {
          "$ref": "#/definitions/NumberKind",
          "description": "Kind of the number type."
        },
        "value": {
          "type": "number",
          "format": "double",
          "description": "A numeric representation of what the extracted text denotes."
        }
      },
      "required": [
        "numberKind",
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseMetadata"
        }
      ],
      "x-ms-discriminator-value": "NumberMetadata"
    },
    "NumericRangeMetadata": {
      "type": "object",
      "description": "represents the Metadata of numeric intervals.",
      "properties": {
        "rangeKind": {
          "$ref": "#/definitions/RangeKind",
          "description": "Kind of numeric ranges supported - like Number, Speed, etc."
        },
        "minimum": {
          "type": "number",
          "format": "double",
          "description": "The beginning value of  the interval."
        },
        "maximum": {
          "type": "number",
          "format": "double",
          "description": "The ending value of the interval."
        },
        "rangeInclusivity": {
          "$ref": "#/definitions/RangeInclusivity",
          "description": "The inclusiveness of this range."
        }
      },
      "required": [
        "rangeKind",
        "minimum",
        "maximum"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseMetadata"
        }
      ],
      "x-ms-discriminator-value": "NumericRangeMetadata"
    },
    "OrdinalMetadata": {
      "type": "object",
      "description": "A metadata for numeric entity instances.",
      "properties": {
        "offset": {
          "type": "string",
          "description": "The offset with respect to the reference (e.g., offset = -1 indicates the second to last)"
        },
        "relativeTo": {
          "$ref": "#/definitions/RelativeTo",
          "description": "The reference point that the ordinal number denotes."
        },
        "value": {
          "type": "string",
          "description": "A simple arithmetic expression that the ordinal denotes."
        }
      },
      "required": [
        "offset",
        "relativeTo",
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseMetadata"
        }
      ],
      "x-ms-discriminator-value": "OrdinalMetadata"
    },
    "PiiCategoriesExclude": {
      "type": "string",
      "description": "(Optional) describes the PII categories to return",
      "enum": [
        "ABARoutingNumber",
        "ARNationalIdentityNumber",
        "AUBankAccountNumber",
        "AUDriversLicenseNumber",
        "AUMedicalAccountNumber",
        "AUPassportNumber",
        "AUTaxFileNumber",
        "AUBusinessNumber",
        "AUCompanyNumber",
        "ATIdentityCard",
        "ATTaxIdentificationNumber",
        "ATValueAddedTaxNumber",
        "AzureDocumentDBAuthKey",
        "AzureIAASDatabaseConnectionAndSQLString",
        "AzureIoTConnectionString",
        "AzurePublishSettingPassword",
        "AzureRedisCacheString",
        "AzureSAS",
        "AzureServiceBusString",
        "AzureStorageAccountKey",
        "AzureStorageAccountGeneric",
        "BENationalNumber",
        "BENationalNumberV2",
        "BEValueAddedTaxNumber",
        "BRCPFNumber",
        "BRLegalEntityNumber",
        "BRNationalIDRG",
        "BGUniformCivilNumber",
        "CABankAccountNumber",
        "CADriversLicenseNumber",
        "CAHealthServiceNumber",
        "CAPassportNumber",
        "CAPersonalHealthIdentification",
        "CASocialInsuranceNumber",
        "CLIdentityCardNumber",
        "CNResidentIdentityCardNumber",
        "CreditCardNumber",
        "HRIdentityCardNumber",
        "HRNationalIDNumber",
        "HRPersonalIdentificationNumber",
        "HRPersonalIdentificationOIBNumberV2",
        "CYIdentityCard",
        "CYTaxIdentificationNumber",
        "CZPersonalIdentityNumber",
        "CZPersonalIdentityV2",
        "DKPersonalIdentificationNumber",
        "DKPersonalIdentificationV2",
        "DrugEnforcementAgencyNumber",
        "EEPersonalIdentificationCode",
        "EUDebitCardNumber",
        "EUDriversLicenseNumber",
        "EUGPSCoordinates",
        "EUNationalIdentificationNumber",
        "EUPassportNumber",
        "EUSocialSecurityNumber",
        "EUTaxIdentificationNumber",
        "FIEuropeanHealthNumber",
        "FINationalID",
        "FINationalIDV2",
        "FIPassportNumber",
        "FRDriversLicenseNumber",
        "FRHealthInsuranceNumber",
        "FRNationalID",
        "FRPassportNumber",
        "FRSocialSecurityNumber",
        "FRTaxIdentificationNumber",
        "FRValueAddedTaxNumber",
        "DEDriversLicenseNumber",
        "DEPassportNumber",
        "DEIdentityCardNumber",
        "DETaxIdentificationNumber",
        "DEValueAddedNumber",
        "GRNationalIDCard",
        "GRNationalIDV2",
        "GRTaxIdentificationNumber",
        "HKIdentityCardNumber",
        "HUValueAddedNumber",
        "HUPersonalIdentificationNumber",
        "HUTaxIdentificationNumber",
        "INPermanentAccount",
        "INUniqueIdentificationNumber",
        "IDIdentityCardNumber",
        "InternationalBankingAccountNumber",
        "IEPersonalPublicServiceNumber",
        "IEPersonalPublicServiceNumberV2",
        "ILBankAccountNumber",
        "ILNationalID",
        "ITDriversLicenseNumber",
        "ITFiscalCode",
        "ITValueAddedTaxNumber",
        "JPBankAccountNumber",
        "JPDriversLicenseNumber",
        "JPPassportNumber",
        "JPResidentRegistrationNumber",
        "JPSocialInsuranceNumber",
        "JPMyNumberCorporate",
        "JPMyNumberPersonal",
        "JPResidenceCardNumber",
        "LVPersonalCode",
        "LTPersonalCode",
        "LUNationalIdentificationNumberNatural",
        "LUNationalIdentificationNumberNonNatural",
        "MYIdentityCardNumber",
        "MTIdentityCardNumber",
        "MTTaxIDNumber",
        "NLCitizensServiceNumber",
        "NLCitizensServiceNumberV2",
        "NLTaxIdentificationNumber",
        "NLValueAddedTaxNumber",
        "NZBankAccountNumber",
        "NZDriversLicenseNumber",
        "NZInlandRevenueNumber",
        "NZMinistryOfHealthNumber",
        "NZSocialWelfareNumber",
        "NOIdentityNumber",
        "PHUnifiedMultiPurposeIDNumber",
        "PLIdentityCard",
        "PLNationalID",
        "PLNationalIDV2",
        "PLPassportNumber",
        "PLTaxIdentificationNumber",
        "PLREGONNumber",
        "PTCitizenCardNumber",
        "PTCitizenCardNumberV2",
        "PTTaxIdentificationNumber",
        "ROPersonalNumericalCode",
        "RUPassportNumberDomestic",
        "RUPassportNumberInternational",
        "SANationalID",
        "SGNationalRegistrationIdentityCardNumber",
        "SKPersonalNumber",
        "SITaxIdentificationNumber",
        "SIUniqueMasterCitizenNumber",
        "ZAIdentificationNumber",
        "KRResidentRegistrationNumber",
        "ESDNI",
        "ESSocialSecurityNumber",
        "ESTaxIdentificationNumber",
        "SQLServerConnectionString",
        "SENationalID",
        "SENationalIDV2",
        "SEPassportNumber",
        "SETaxIdentificationNumber",
        "SWIFTCode",
        "CHSocialSecurityNumber",
        "TWNationalID",
        "TWPassportNumber",
        "TWResidentCertificate",
        "THPopulationIdentificationCode",
        "TRNationalIdentificationNumber",
        "UKDriversLicenseNumber",
        "UKElectoralRollNumber",
        "UKNationalHealthNumber",
        "UKNationalInsuranceNumber",
        "UKUniqueTaxpayerNumber",
        "USUKPassportNumber",
        "USBankAccountNumber",
        "USDriversLicenseNumber",
        "USIndividualTaxpayerIdentification",
        "USSocialSecurityNumber",
        "UAPassportNumberDomestic",
        "UAPassportNumberInternational",
        "Organization",
        "Email",
        "URL",
        "Age",
        "PhoneNumber",
        "IPAddress",
        "Date",
        "Person",
        "Address"
      ],
      "x-ms-enum": {
        "name": "PiiCategoriesExclude",
        "modelAsString": true,
        "values": [
          {
            "name": "ABARoutingNumber",
            "value": "ABARoutingNumber",
            "description": "ABA Routing number"
          },
          {
            "name": "ARNationalIdentityNumber",
            "value": "ARNationalIdentityNumber",
            "description": "AR National Identity Number"
          },
          {
            "name": "AUBankAccountNumber",
            "value": "AUBankAccountNumber",
            "description": "AT Identity Card"
          },
          {
            "name": "AUDriversLicenseNumber",
            "value": "AUDriversLicenseNumber",
            "description": "AU Driver's License Number"
          },
          {
            "name": "AUMedicalAccountNumber",
            "value": "AUMedicalAccountNumber",
            "description": "AU Medical Account Number"
          },
          {
            "name": "AUPassportNumber",
            "value": "AUPassportNumber",
            "description": "AU Passport Number"
          },
          {
            "name": "AUTaxFileNumber",
            "value": "AUTaxFileNumber",
            "description": "AU Tax File Number"
          },
          {
            "name": "AUBusinessNumber",
            "value": "AUBusinessNumber",
            "description": "AU Business Number"
          },
          {
            "name": "AUCompanyNumber",
            "value": "AUCompanyNumber",
            "description": "AU Company Number"
          },
          {
            "name": "ATIdentityCard",
            "value": "ATIdentityCard",
            "description": "AT Identity Card"
          },
          {
            "name": "ATTaxIdentificationNumber",
            "value": "ATTaxIdentificationNumber",
            "description": "AT Tax Identification Number"
          },
          {
            "name": "ATValueAddedTaxNumber",
            "value": "ATValueAddedTaxNumber",
            "description": "AT Value Added Tax Number"
          },
          {
            "name": "AzureDocumentDBAuthKey",
            "value": "AzureDocumentDBAuthKey",
            "description": "Azure Document DB Auth Key"
          },
          {
            "name": "AzureIAASDatabaseConnectionAndSQLString",
            "value": "AzureIAASDatabaseConnectionAndSQLString",
            "description": "Azure IAAS Database Connection And SQL String"
          },
          {
            "name": "AzureIoTConnectionString",
            "value": "AzureIoTConnectionString",
            "description": "Azure IoT Connection String"
          },
          {
            "name": "AzurePublishSettingPassword",
            "value": "AzurePublishSettingPassword",
            "description": "Azure Publish Setting Password"
          },
          {
            "name": "AzureRedisCacheString",
            "value": "AzureRedisCacheString",
            "description": "Azure Redis Cache String"
          },
          {
            "name": "AzureSAS",
            "value": "AzureSAS",
            "description": "Azure SAS"
          },
          {
            "name": "AzureServiceBusString",
            "value": "AzureServiceBusString",
            "description": "Azure Service Bus String"
          },
          {
            "name": "AzureStorageAccountKey",
            "value": "AzureStorageAccountKey",
            "description": "Azure Storage Account Key"
          },
          {
            "name": "AzureStorageAccountGeneric",
            "value": "AzureStorageAccountGeneric",
            "description": "Azure Storage Account Generic"
          },
          {
            "name": "BENationalNumber",
            "value": "BENationalNumber",
            "description": "BE National Number"
          },
          {
            "name": "BENationalNumberV2",
            "value": "BENationalNumberV2",
            "description": "BE National Number V2"
          },
          {
            "name": "BEValueAddedTaxNumber",
            "value": "BEValueAddedTaxNumber",
            "description": "BE Value Added Tax Number"
          },
          {
            "name": "BRCPFNumber",
            "value": "BRCPFNumber",
            "description": "BR CPF Number"
          },
          {
            "name": "BRLegalEntityNumber",
            "value": "BRLegalEntityNumber",
            "description": "BR Legal Entity Number"
          },
          {
            "name": "BRNationalIDRG",
            "value": "BRNationalIDRG",
            "description": "BR National ID RG"
          },
          {
            "name": "BGUniformCivilNumber",
            "value": "BGUniformCivilNumber",
            "description": "BG Uniform Civil Number"
          },
          {
            "name": "CABankAccountNumber",
            "value": "CABankAccountNumber",
            "description": "CA Bank Account Number"
          },
          {
            "name": "CADriversLicenseNumber",
            "value": "CADriversLicenseNumber",
            "description": "CA Driver's License Number"
          },
          {
            "name": "CAHealthServiceNumber",
            "value": "CAHealthServiceNumber",
            "description": "CA Health Service Number"
          },
          {
            "name": "CAPassportNumber",
            "value": "CAPassportNumber",
            "description": "CA Passport Number"
          },
          {
            "name": "CAPersonalHealthIdentification",
            "value": "CAPersonalHealthIdentification",
            "description": "CA Personal Health Identification"
          },
          {
            "name": "CASocialInsuranceNumber",
            "value": "CASocialInsuranceNumber",
            "description": "CA Social Insurance Number"
          },
          {
            "name": "CLIdentityCardNumber",
            "value": "CLIdentityCardNumber",
            "description": "CL Identity Card Number"
          },
          {
            "name": "CNResidentIdentityCardNumber",
            "value": "CNResidentIdentityCardNumber",
            "description": "CN Resident Identity Card Number"
          },
          {
            "name": "CreditCardNumber",
            "value": "CreditCardNumber",
            "description": "Credit Card Number"
          },
          {
            "name": "HRIdentityCardNumber",
            "value": "HRIdentityCardNumber",
            "description": "HR Identity Card Number"
          },
          {
            "name": "HRNationalIDNumber",
            "value": "HRNationalIDNumber",
            "description": "HR National ID Number"
          },
          {
            "name": "HRPersonalIdentificationNumber",
            "value": "HRPersonalIdentificationNumber",
            "description": "HR Personal Identification Number"
          },
          {
            "name": "HRPersonalIdentificationOIBNumberV2",
            "value": "HRPersonalIdentificationOIBNumberV2",
            "description": "HR Personal Identification OIB Number V2"
          },
          {
            "name": "CYIdentityCard",
            "value": "CYIdentityCard",
            "description": "CY Identity Card"
          },
          {
            "name": "CYTaxIdentificationNumber",
            "value": "CYTaxIdentificationNumber",
            "description": "CY Tax Identification Number"
          },
          {
            "name": "CZPersonalIdentityNumber",
            "value": "CZPersonalIdentityNumber",
            "description": "CZ Personal Identity Number"
          },
          {
            "name": "CZPersonalIdentityV2",
            "value": "CZPersonalIdentityV2",
            "description": "CZ Personal Identity V2"
          },
          {
            "name": "DKPersonalIdentificationNumber",
            "value": "DKPersonalIdentificationNumber",
            "description": "DK Personal Identification Number"
          },
          {
            "name": "DKPersonalIdentificationV2",
            "value": "DKPersonalIdentificationV2",
            "description": "DK Personal Identification V2"
          },
          {
            "name": "DrugEnforcementAgencyNumber",
            "value": "DrugEnforcementAgencyNumber",
            "description": "Drug Enforcement Agency Number"
          },
          {
            "name": "EEPersonalIdentificationCode",
            "value": "EEPersonalIdentificationCode",
            "description": "EE Personal Identification Code"
          },
          {
            "name": "EUDebitCardNumber",
            "value": "EUDebitCardNumber",
            "description": "EU Debit Card Number"
          },
          {
            "name": "EUDriversLicenseNumber",
            "value": "EUDriversLicenseNumber",
            "description": "EU Driver's License Number"
          },
          {
            "name": "EUGPSCoordinates",
            "value": "EUGPSCoordinates",
            "description": "EU GPS Coordinates"
          },
          {
            "name": "EUNationalIdentificationNumber",
            "value": "EUNationalIdentificationNumber",
            "description": "EU National Identification Number"
          },
          {
            "name": "EUPassportNumber",
            "value": "EUPassportNumber",
            "description": "EU Passport Number"
          },
          {
            "name": "EUSocialSecurityNumber",
            "value": "EUSocialSecurityNumber",
            "description": "EU Social Security Number"
          },
          {
            "name": "EUTaxIdentificationNumber",
            "value": "EUTaxIdentificationNumber",
            "description": "EU Tax Identification Number"
          },
          {
            "name": "FIEuropeanHealthNumber",
            "value": "FIEuropeanHealthNumber",
            "description": "FI European Health Number"
          },
          {
            "name": "FINationalID",
            "value": "FINationalID",
            "description": "FI National ID"
          },
          {
            "name": "FINationalIDV2",
            "value": "FINationalIDV2",
            "description": "FI National ID V2"
          },
          {
            "name": "FIPassportNumber",
            "value": "FIPassportNumber",
            "description": "FI Passport Number"
          },
          {
            "name": "FRDriversLicenseNumber",
            "value": "FRDriversLicenseNumber",
            "description": "FR Driver's License Number"
          },
          {
            "name": "FRHealthInsuranceNumber",
            "value": "FRHealthInsuranceNumber",
            "description": "FR Health Insurance Number"
          },
          {
            "name": "FRNationalID",
            "value": "FRNationalID",
            "description": "FR National ID"
          },
          {
            "name": "FRPassportNumber",
            "value": "FRPassportNumber",
            "description": "FR Passport Number"
          },
          {
            "name": "FRSocialSecurityNumber",
            "value": "FRSocialSecurityNumber",
            "description": "FR Social Security Number"
          },
          {
            "name": "FRTaxIdentificationNumber",
            "value": "FRTaxIdentificationNumber",
            "description": "FR Tax Identification Number"
          },
          {
            "name": "FRValueAddedTaxNumber",
            "value": "FRValueAddedTaxNumber",
            "description": "FR Value Added Tax Number"
          },
          {
            "name": "DEDriversLicenseNumber",
            "value": "DEDriversLicenseNumber",
            "description": "DE Driver's License Number"
          },
          {
            "name": "DEPassportNumber",
            "value": "DEPassportNumber",
            "description": "DE Passport Number"
          },
          {
            "name": "DEIdentityCardNumber",
            "value": "DEIdentityCardNumber",
            "description": "DE Identity Card Number"
          },
          {
            "name": "DETaxIdentificationNumber",
            "value": "DETaxIdentificationNumber",
            "description": "DE Tax Identification Number"
          },
          {
            "name": "DEValueAddedNumber",
            "value": "DEValueAddedNumber",
            "description": "DE Value Added Number"
          },
          {
            "name": "GRNationalIDCard",
            "value": "GRNationalIDCard",
            "description": "GR National ID Card"
          },
          {
            "name": "GRNationalIDV2",
            "value": "GRNationalIDV2",
            "description": "GR National ID V2"
          },
          {
            "name": "GRTaxIdentificationNumber",
            "value": "GRTaxIdentificationNumber",
            "description": "GR Tax Identification Number"
          },
          {
            "name": "HKIdentityCardNumber",
            "value": "HKIdentityCardNumber",
            "description": "HK Identity Card Number"
          },
          {
            "name": "HUValueAddedNumber",
            "value": "HUValueAddedNumber",
            "description": "HU Value Added Number"
          },
          {
            "name": "HUPersonalIdentificationNumber",
            "value": "HUPersonalIdentificationNumber",
            "description": "HU Personal Identification Number"
          },
          {
            "name": "HUTaxIdentificationNumber",
            "value": "HUTaxIdentificationNumber",
            "description": "HU Tax Identification Number"
          },
          {
            "name": "INPermanentAccount",
            "value": "INPermanentAccount",
            "description": "IN Permanent Account"
          },
          {
            "name": "INUniqueIdentificationNumber",
            "value": "INUniqueIdentificationNumber",
            "description": "IN Unique Identification Number"
          },
          {
            "name": "IDIdentityCardNumber",
            "value": "IDIdentityCardNumber",
            "description": "ID Identity Card Number"
          },
          {
            "name": "InternationalBankingAccountNumber",
            "value": "InternationalBankingAccountNumber",
            "description": "International Banking Account Number"
          },
          {
            "name": "IEPersonalPublicServiceNumber",
            "value": "IEPersonalPublicServiceNumber",
            "description": "IE Personal Public Service Number"
          },
          {
            "name": "IEPersonalPublicServiceNumberV2",
            "value": "IEPersonalPublicServiceNumberV2",
            "description": "IE Personal Public Service Number V2"
          },
          {
            "name": "ILBankAccountNumber",
            "value": "ILBankAccountNumber",
            "description": "IL Bank Account Number"
          },
          {
            "name": "ILNationalID",
            "value": "ILNationalID",
            "description": "IL National ID"
          },
          {
            "name": "ITDriversLicenseNumber",
            "value": "ITDriversLicenseNumber",
            "description": "IT Driver's License Number"
          },
          {
            "name": "ITFiscalCode",
            "value": "ITFiscalCode",
            "description": "IT Fiscal Code"
          },
          {
            "name": "ITValueAddedTaxNumber",
            "value": "ITValueAddedTaxNumber",
            "description": "IT Value Added Tax Number"
          },
          {
            "name": "JPBankAccountNumber",
            "value": "JPBankAccountNumber",
            "description": "JP Bank Account Number"
          },
          {
            "name": "JPDriversLicenseNumber",
            "value": "JPDriversLicenseNumber",
            "description": "JP Driver's License Number"
          },
          {
            "name": "JPPassportNumber",
            "value": "JPPassportNumber",
            "description": "JP Passport Number"
          },
          {
            "name": "JPResidentRegistrationNumber",
            "value": "JPResidentRegistrationNumber",
            "description": "JP Resident Registration Number"
          },
          {
            "name": "JPSocialInsuranceNumber",
            "value": "JPSocialInsuranceNumber",
            "description": "JP Social Insurance Number"
          },
          {
            "name": "JPMyNumberCorporate",
            "value": "JPMyNumberCorporate",
            "description": "JP My Number Corporate"
          },
          {
            "name": "JPMyNumberPersonal",
            "value": "JPMyNumberPersonal",
            "description": "JP My Number Personal"
          },
          {
            "name": "JPResidenceCardNumber",
            "value": "JPResidenceCardNumber",
            "description": "JP Residence Card Number"
          },
          {
            "name": "LVPersonalCode",
            "value": "LVPersonalCode",
            "description": "LV Personal Code"
          },
          {
            "name": "LTPersonalCode",
            "value": "LTPersonalCode",
            "description": "LT Personal Code"
          },
          {
            "name": "LUNationalIdentificationNumberNatural",
            "value": "LUNationalIdentificationNumberNatural",
            "description": "LU National Identification Number Natural"
          },
          {
            "name": "LUNationalIdentificationNumberNonNatural",
            "value": "LUNationalIdentificationNumberNonNatural",
            "description": "LU National Identification Number Non Natural"
          },
          {
            "name": "MYIdentityCardNumber",
            "value": "MYIdentityCardNumber",
            "description": "MY Identity Card Number"
          },
          {
            "name": "MTIdentityCardNumber",
            "value": "MTIdentityCardNumber",
            "description": "MT Identity Card Number"
          },
          {
            "name": "MTTaxIDNumber",
            "value": "MTTaxIDNumber",
            "description": "MT Tax ID Number"
          },
          {
            "name": "NLCitizensServiceNumber",
            "value": "NLCitizensServiceNumber",
            "description": "NL Citizens Service Number"
          },
          {
            "name": "NLCitizensServiceNumberV2",
            "value": "NLCitizensServiceNumberV2",
            "description": "NL Citizens Service Number V2"
          },
          {
            "name": "NLTaxIdentificationNumber",
            "value": "NLTaxIdentificationNumber",
            "description": "NL Tax Identification Number"
          },
          {
            "name": "NLValueAddedTaxNumber",
            "value": "NLValueAddedTaxNumber",
            "description": "NL Value Added Tax Number"
          },
          {
            "name": "NZBankAccountNumber",
            "value": "NZBankAccountNumber",
            "description": "NZ Bank Account Number"
          },
          {
            "name": "NZDriversLicenseNumber",
            "value": "NZDriversLicenseNumber",
            "description": "NZ Driver's License Number"
          },
          {
            "name": "NZInlandRevenueNumber",
            "value": "NZInlandRevenueNumber",
            "description": "NZ Inland Revenue Number"
          },
          {
            "name": "NZMinistryOfHealthNumber",
            "value": "NZMinistryOfHealthNumber",
            "description": "NZ Ministry Of Health Number"
          },
          {
            "name": "NZSocialWelfareNumber",
            "value": "NZSocialWelfareNumber",
            "description": "NZ Social Welfare Number"
          },
          {
            "name": "NOIdentityNumber",
            "value": "NOIdentityNumber",
            "description": "NO Identity Number"
          },
          {
            "name": "PHUnifiedMultiPurposeIDNumber",
            "value": "PHUnifiedMultiPurposeIDNumber",
            "description": "PH Unified Multi Purpose ID Number"
          },
          {
            "name": "PLIdentityCard",
            "value": "PLIdentityCard",
            "description": "PL Identity Card"
          },
          {
            "name": "PLNationalID",
            "value": "PLNationalID",
            "description": "PL National ID"
          },
          {
            "name": "PLNationalIDV2",
            "value": "PLNationalIDV2",
            "description": "PL National ID V2"
          },
          {
            "name": "PLPassportNumber",
            "value": "PLPassportNumber",
            "description": "PL Passport Number"
          },
          {
            "name": "PLTaxIdentificationNumber",
            "value": "PLTaxIdentificationNumber",
            "description": "PL Tax Identification Number"
          },
          {
            "name": "PLREGONNumber",
            "value": "PLREGONNumber",
            "description": "PL REGON Number"
          },
          {
            "name": "PTCitizenCardNumber",
            "value": "PTCitizenCardNumber",
            "description": "PT Citizen Card Number"
          },
          {
            "name": "PTCitizenCardNumberV2",
            "value": "PTCitizenCardNumberV2",
            "description": "PT Citizen Card Number V2"
          },
          {
            "name": "PTTaxIdentificationNumber",
            "value": "PTTaxIdentificationNumber",
            "description": "PT Tax Identification Number"
          },
          {
            "name": "ROPersonalNumericalCode",
            "value": "ROPersonalNumericalCode",
            "description": "RO Personal Numerical Code"
          },
          {
            "name": "RUPassportNumberDomestic",
            "value": "RUPassportNumberDomestic",
            "description": "RU Passport Number Domestic"
          },
          {
            "name": "RUPassportNumberInternational",
            "value": "RUPassportNumberInternational",
            "description": "RU Passport Number International"
          },
          {
            "name": "SANationalID",
            "value": "SANationalID",
            "description": "SA National ID"
          },
          {
            "name": "SGNationalRegistrationIdentityCardNumber",
            "value": "SGNationalRegistrationIdentityCardNumber",
            "description": "SG National Registration Identity Card Number"
          },
          {
            "name": "SKPersonalNumber",
            "value": "SKPersonalNumber",
            "description": "SK Personal Number"
          },
          {
            "name": "SITaxIdentificationNumber",
            "value": "SITaxIdentificationNumber",
            "description": "SI Tax Identification Number"
          },
          {
            "name": "SIUniqueMasterCitizenNumber",
            "value": "SIUniqueMasterCitizenNumber",
            "description": "SI Unique Master Citizen Number"
          },
          {
            "name": "ZAIdentificationNumber",
            "value": "ZAIdentificationNumber",
            "description": "ZA Identification Number"
          },
          {
            "name": "KRResidentRegistrationNumber",
            "value": "KRResidentRegistrationNumber",
            "description": "KR Resident Registration Number"
          },
          {
            "name": "ESDNI",
            "value": "ESDNI",
            "description": "ES DNI"
          },
          {
            "name": "ESSocialSecurityNumber",
            "value": "ESSocialSecurityNumber",
            "description": "ES Social Security Number"
          },
          {
            "name": "ESTaxIdentificationNumber",
            "value": "ESTaxIdentificationNumber",
            "description": "ES Tax Identification Number"
          },
          {
            "name": "SQLServerConnectionString",
            "value": "SQLServerConnectionString",
            "description": "SQL Server Connection String"
          },
          {
            "name": "SENationalID",
            "value": "SENationalID",
            "description": "SE National ID"
          },
          {
            "name": "SENationalIDV2",
            "value": "SENationalIDV2",
            "description": "SE National ID V2"
          },
          {
            "name": "SEPassportNumber",
            "value": "SEPassportNumber",
            "description": "SE Passport Number"
          },
          {
            "name": "SETaxIdentificationNumber",
            "value": "SETaxIdentificationNumber",
            "description": "SE Tax Identification Number"
          },
          {
            "name": "SWIFTCode",
            "value": "SWIFTCode",
            "description": "SWIFT Code"
          },
          {
            "name": "CHSocialSecurityNumber",
            "value": "CHSocialSecurityNumber",
            "description": "CH Social Security Number"
          },
          {
            "name": "TWNationalID",
            "value": "TWNationalID",
            "description": "TW National ID"
          },
          {
            "name": "TWPassportNumber",
            "value": "TWPassportNumber",
            "description": "TW Passport Number"
          },
          {
            "name": "TWResidentCertificate",
            "value": "TWResidentCertificate",
            "description": "TW Resident Certificate"
          },
          {
            "name": "THPopulationIdentificationCode",
            "value": "THPopulationIdentificationCode",
            "description": "TH Population Identification Code"
          },
          {
            "name": "TRNationalIdentificationNumber",
            "value": "TRNationalIdentificationNumber",
            "description": "TR National Identification Number"
          },
          {
            "name": "UKDriversLicenseNumber",
            "value": "UKDriversLicenseNumber",
            "description": "UK Driver's License Number"
          },
          {
            "name": "UKElectoralRollNumber",
            "value": "UKElectoralRollNumber",
            "description": "UK Electoral Roll Number"
          },
          {
            "name": "UKNationalHealthNumber",
            "value": "UKNationalHealthNumber",
            "description": "UK National Health Number"
          },
          {
            "name": "UKNationalInsuranceNumber",
            "value": "UKNationalInsuranceNumber",
            "description": "UK National Insurance Number"
          },
          {
            "name": "UKUniqueTaxpayerNumber",
            "value": "UKUniqueTaxpayerNumber",
            "description": "UK Unique Taxpayer Number"
          },
          {
            "name": "USUKPassportNumber",
            "value": "USUKPassportNumber",
            "description": "US UK Passport Number"
          },
          {
            "name": "USBankAccountNumber",
            "value": "USBankAccountNumber",
            "description": "US Bank Account Number"
          },
          {
            "name": "USDriversLicenseNumber",
            "value": "USDriversLicenseNumber",
            "description": "US Driver's License Number"
          },
          {
            "name": "USIndividualTaxpayerIdentification",
            "value": "USIndividualTaxpayerIdentification",
            "description": "US Individual Taxpayer Identification"
          },
          {
            "name": "USSocialSecurityNumber",
            "value": "USSocialSecurityNumber",
            "description": "US Social Security Number"
          },
          {
            "name": "UAPassportNumberDomestic",
            "value": "UAPassportNumberDomestic",
            "description": "UA Passport Number Domestic"
          },
          {
            "name": "UAPassportNumberInternational",
            "value": "UAPassportNumberInternational",
            "description": "UA Passport Number International"
          },
          {
            "name": "Organization",
            "value": "Organization",
            "description": "Organization"
          },
          {
            "name": "Email",
            "value": "Email",
            "description": "Email"
          },
          {
            "name": "URL",
            "value": "URL",
            "description": "URL"
          },
          {
            "name": "Age",
            "value": "Age",
            "description": "Age"
          },
          {
            "name": "PhoneNumber",
            "value": "PhoneNumber",
            "description": "Phone Number"
          },
          {
            "name": "IPAddress",
            "value": "IPAddress",
            "description": "IP Address"
          },
          {
            "name": "Date",
            "value": "Date",
            "description": "Date"
          },
          {
            "name": "Person",
            "value": "Person",
            "description": "Person"
          },
          {
            "name": "Address",
            "value": "Address",
            "description": "Address"
          }
        ]
      }
    },
    "PiiCategory": {
      "type": "string",
      "description": "(Optional) describes the PII categories to return",
      "enum": [
        "ABARoutingNumber",
        "ARNationalIdentityNumber",
        "AUBankAccountNumber",
        "AUDriversLicenseNumber",
        "AUMedicalAccountNumber",
        "AUPassportNumber",
        "AUTaxFileNumber",
        "AUBusinessNumber",
        "AUCompanyNumber",
        "ATIdentityCard",
        "ATTaxIdentificationNumber",
        "ATValueAddedTaxNumber",
        "AzureDocumentDBAuthKey",
        "AzureIAASDatabaseConnectionAndSQLString",
        "AzureIoTConnectionString",
        "AzurePublishSettingPassword",
        "AzureRedisCacheString",
        "AzureSAS",
        "AzureServiceBusString",
        "AzureStorageAccountKey",
        "AzureStorageAccountGeneric",
        "BENationalNumber",
        "BENationalNumberV2",
        "BEValueAddedTaxNumber",
        "BRCPFNumber",
        "BRLegalEntityNumber",
        "BRNationalIDRG",
        "BGUniformCivilNumber",
        "CABankAccountNumber",
        "CADriversLicenseNumber",
        "CAHealthServiceNumber",
        "CAPassportNumber",
        "CAPersonalHealthIdentification",
        "CASocialInsuranceNumber",
        "CLIdentityCardNumber",
        "CNResidentIdentityCardNumber",
        "CreditCardNumber",
        "HRIdentityCardNumber",
        "HRNationalIDNumber",
        "HRPersonalIdentificationNumber",
        "HRPersonalIdentificationOIBNumberV2",
        "CYIdentityCard",
        "CYTaxIdentificationNumber",
        "CZPersonalIdentityNumber",
        "CZPersonalIdentityV2",
        "DKPersonalIdentificationNumber",
        "DKPersonalIdentificationV2",
        "DrugEnforcementAgencyNumber",
        "EEPersonalIdentificationCode",
        "EUDebitCardNumber",
        "EUDriversLicenseNumber",
        "EUGPSCoordinates",
        "EUNationalIdentificationNumber",
        "EUPassportNumber",
        "EUSocialSecurityNumber",
        "EUTaxIdentificationNumber",
        "FIEuropeanHealthNumber",
        "FINationalID",
        "FINationalIDV2",
        "FIPassportNumber",
        "FRDriversLicenseNumber",
        "FRHealthInsuranceNumber",
        "FRNationalID",
        "FRPassportNumber",
        "FRSocialSecurityNumber",
        "FRTaxIdentificationNumber",
        "FRValueAddedTaxNumber",
        "DEDriversLicenseNumber",
        "DEPassportNumber",
        "DEIdentityCardNumber",
        "DETaxIdentificationNumber",
        "DEValueAddedNumber",
        "GRNationalIDCard",
        "GRNationalIDV2",
        "GRTaxIdentificationNumber",
        "HKIdentityCardNumber",
        "HUValueAddedNumber",
        "HUPersonalIdentificationNumber",
        "HUTaxIdentificationNumber",
        "INPermanentAccount",
        "INUniqueIdentificationNumber",
        "IDIdentityCardNumber",
        "InternationalBankingAccountNumber",
        "IEPersonalPublicServiceNumber",
        "IEPersonalPublicServiceNumberV2",
        "ILBankAccountNumber",
        "ILNationalID",
        "ITDriversLicenseNumber",
        "ITFiscalCode",
        "ITValueAddedTaxNumber",
        "JPBankAccountNumber",
        "JPDriversLicenseNumber",
        "JPPassportNumber",
        "JPResidentRegistrationNumber",
        "JPSocialInsuranceNumber",
        "JPMyNumberCorporate",
        "JPMyNumberPersonal",
        "JPResidenceCardNumber",
        "LVPersonalCode",
        "LTPersonalCode",
        "LUNationalIdentificationNumberNatural",
        "LUNationalIdentificationNumberNonNatural",
        "MYIdentityCardNumber",
        "MTIdentityCardNumber",
        "MTTaxIDNumber",
        "NLCitizensServiceNumber",
        "NLCitizensServiceNumberV2",
        "NLTaxIdentificationNumber",
        "NLValueAddedTaxNumber",
        "NZBankAccountNumber",
        "NZDriversLicenseNumber",
        "NZInlandRevenueNumber",
        "NZMinistryOfHealthNumber",
        "NZSocialWelfareNumber",
        "NOIdentityNumber",
        "PHUnifiedMultiPurposeIDNumber",
        "PLIdentityCard",
        "PLNationalID",
        "PLNationalIDV2",
        "PLPassportNumber",
        "PLTaxIdentificationNumber",
        "PLREGONNumber",
        "PTCitizenCardNumber",
        "PTCitizenCardNumberV2",
        "PTTaxIdentificationNumber",
        "ROPersonalNumericalCode",
        "RUPassportNumberDomestic",
        "RUPassportNumberInternational",
        "SANationalID",
        "SGNationalRegistrationIdentityCardNumber",
        "SKPersonalNumber",
        "SITaxIdentificationNumber",
        "SIUniqueMasterCitizenNumber",
        "ZAIdentificationNumber",
        "KRResidentRegistrationNumber",
        "ESDNI",
        "ESSocialSecurityNumber",
        "ESTaxIdentificationNumber",
        "SQLServerConnectionString",
        "SENationalID",
        "SENationalIDV2",
        "SEPassportNumber",
        "SETaxIdentificationNumber",
        "SWIFTCode",
        "CHSocialSecurityNumber",
        "TWNationalID",
        "TWPassportNumber",
        "TWResidentCertificate",
        "THPopulationIdentificationCode",
        "TRNationalIdentificationNumber",
        "UKDriversLicenseNumber",
        "UKElectoralRollNumber",
        "UKNationalHealthNumber",
        "UKNationalInsuranceNumber",
        "UKUniqueTaxpayerNumber",
        "USUKPassportNumber",
        "USBankAccountNumber",
        "USDriversLicenseNumber",
        "USIndividualTaxpayerIdentification",
        "USSocialSecurityNumber",
        "UAPassportNumberDomestic",
        "UAPassportNumberInternational",
        "Organization",
        "Email",
        "URL",
        "Age",
        "PhoneNumber",
        "IPAddress",
        "Date",
        "Person",
        "Address",
        "All",
        "Default"
      ],
      "x-ms-enum": {
        "name": "PiiCategory",
        "modelAsString": true,
        "values": [
          {
            "name": "ABARoutingNumber",
            "value": "ABARoutingNumber",
            "description": "ABA Routing number"
          },
          {
            "name": "ARNationalIdentityNumber",
            "value": "ARNationalIdentityNumber",
            "description": "AR National Identity Number"
          },
          {
            "name": "AUBankAccountNumber",
            "value": "AUBankAccountNumber",
            "description": "AT Identity Card"
          },
          {
            "name": "AUDriversLicenseNumber",
            "value": "AUDriversLicenseNumber",
            "description": "AU Driver's License Number"
          },
          {
            "name": "AUMedicalAccountNumber",
            "value": "AUMedicalAccountNumber",
            "description": "AU Medical Account Number"
          },
          {
            "name": "AUPassportNumber",
            "value": "AUPassportNumber",
            "description": "AU Passport Number"
          },
          {
            "name": "AUTaxFileNumber",
            "value": "AUTaxFileNumber",
            "description": "AU Tax File Number"
          },
          {
            "name": "AUBusinessNumber",
            "value": "AUBusinessNumber",
            "description": "AU Business Number"
          },
          {
            "name": "AUCompanyNumber",
            "value": "AUCompanyNumber",
            "description": "AU Company Number"
          },
          {
            "name": "ATIdentityCard",
            "value": "ATIdentityCard",
            "description": "AT Identity Card"
          },
          {
            "name": "ATTaxIdentificationNumber",
            "value": "ATTaxIdentificationNumber",
            "description": "AT Tax Identification Number"
          },
          {
            "name": "ATValueAddedTaxNumber",
            "value": "ATValueAddedTaxNumber",
            "description": "AT Value Added Tax Number"
          },
          {
            "name": "AzureDocumentDBAuthKey",
            "value": "AzureDocumentDBAuthKey",
            "description": "Azure Document DB Auth Key"
          },
          {
            "name": "AzureIAASDatabaseConnectionAndSQLString",
            "value": "AzureIAASDatabaseConnectionAndSQLString",
            "description": "Azure IAAS Database Connection And SQL String"
          },
          {
            "name": "AzureIoTConnectionString",
            "value": "AzureIoTConnectionString",
            "description": "Azure IoT Connection String"
          },
          {
            "name": "AzurePublishSettingPassword",
            "value": "AzurePublishSettingPassword",
            "description": "Azure Publish Setting Password"
          },
          {
            "name": "AzureRedisCacheString",
            "value": "AzureRedisCacheString",
            "description": "Azure Redis Cache String"
          },
          {
            "name": "AzureSAS",
            "value": "AzureSAS",
            "description": "Azure SAS"
          },
          {
            "name": "AzureServiceBusString",
            "value": "AzureServiceBusString",
            "description": "Azure Service Bus String"
          },
          {
            "name": "AzureStorageAccountKey",
            "value": "AzureStorageAccountKey",
            "description": "Azure Storage Account Key"
          },
          {
            "name": "AzureStorageAccountGeneric",
            "value": "AzureStorageAccountGeneric",
            "description": "Azure Storage Account Generic"
          },
          {
            "name": "BENationalNumber",
            "value": "BENationalNumber",
            "description": "BE National Number"
          },
          {
            "name": "BENationalNumberV2",
            "value": "BENationalNumberV2",
            "description": "BE National Number V2"
          },
          {
            "name": "BEValueAddedTaxNumber",
            "value": "BEValueAddedTaxNumber",
            "description": "BE Value Added Tax Number"
          },
          {
            "name": "BRCPFNumber",
            "value": "BRCPFNumber",
            "description": "BR CPF Number"
          },
          {
            "name": "BRLegalEntityNumber",
            "value": "BRLegalEntityNumber",
            "description": "BR Legal Entity Number"
          },
          {
            "name": "BRNationalIDRG",
            "value": "BRNationalIDRG",
            "description": "BR National ID RG"
          },
          {
            "name": "BGUniformCivilNumber",
            "value": "BGUniformCivilNumber",
            "description": "BG Uniform Civil Number"
          },
          {
            "name": "CABankAccountNumber",
            "value": "CABankAccountNumber",
            "description": "CA Bank Account Number"
          },
          {
            "name": "CADriversLicenseNumber",
            "value": "CADriversLicenseNumber",
            "description": "CA Driver's License Number"
          },
          {
            "name": "CAHealthServiceNumber",
            "value": "CAHealthServiceNumber",
            "description": "CA Health Service Number"
          },
          {
            "name": "CAPassportNumber",
            "value": "CAPassportNumber",
            "description": "CA Passport Number"
          },
          {
            "name": "CAPersonalHealthIdentification",
            "value": "CAPersonalHealthIdentification",
            "description": "CA Personal Health Identification"
          },
          {
            "name": "CASocialInsuranceNumber",
            "value": "CASocialInsuranceNumber",
            "description": "CA Social Insurance Number"
          },
          {
            "name": "CLIdentityCardNumber",
            "value": "CLIdentityCardNumber",
            "description": "CL Identity Card Number"
          },
          {
            "name": "CNResidentIdentityCardNumber",
            "value": "CNResidentIdentityCardNumber",
            "description": "CN Resident Identity Card Number"
          },
          {
            "name": "CreditCardNumber",
            "value": "CreditCardNumber",
            "description": "Credit Card Number"
          },
          {
            "name": "HRIdentityCardNumber",
            "value": "HRIdentityCardNumber",
            "description": "HR Identity Card Number"
          },
          {
            "name": "HRNationalIDNumber",
            "value": "HRNationalIDNumber",
            "description": "HR National ID Number"
          },
          {
            "name": "HRPersonalIdentificationNumber",
            "value": "HRPersonalIdentificationNumber",
            "description": "HR Personal Identification Number"
          },
          {
            "name": "HRPersonalIdentificationOIBNumberV2",
            "value": "HRPersonalIdentificationOIBNumberV2",
            "description": "HR Personal Identification OIB Number V2"
          },
          {
            "name": "CYIdentityCard",
            "value": "CYIdentityCard",
            "description": "CY Identity Card"
          },
          {
            "name": "CYTaxIdentificationNumber",
            "value": "CYTaxIdentificationNumber",
            "description": "CY Tax Identification Number"
          },
          {
            "name": "CZPersonalIdentityNumber",
            "value": "CZPersonalIdentityNumber",
            "description": "CZ Personal Identity Number"
          },
          {
            "name": "CZPersonalIdentityV2",
            "value": "CZPersonalIdentityV2",
            "description": "CZ Personal Identity V2"
          },
          {
            "name": "DKPersonalIdentificationNumber",
            "value": "DKPersonalIdentificationNumber",
            "description": "DK Personal Identification Number"
          },
          {
            "name": "DKPersonalIdentificationV2",
            "value": "DKPersonalIdentificationV2",
            "description": "DK Personal Identification V2"
          },
          {
            "name": "DrugEnforcementAgencyNumber",
            "value": "DrugEnforcementAgencyNumber",
            "description": "Drug Enforcement Agency Number"
          },
          {
            "name": "EEPersonalIdentificationCode",
            "value": "EEPersonalIdentificationCode",
            "description": "EE Personal Identification Code"
          },
          {
            "name": "EUDebitCardNumber",
            "value": "EUDebitCardNumber",
            "description": "EU Debit Card Number"
          },
          {
            "name": "EUDriversLicenseNumber",
            "value": "EUDriversLicenseNumber",
            "description": "EU Driver's License Number"
          },
          {
            "name": "EUGPSCoordinates",
            "value": "EUGPSCoordinates",
            "description": "EU GPS Coordinates"
          },
          {
            "name": "EUNationalIdentificationNumber",
            "value": "EUNationalIdentificationNumber",
            "description": "EU National Identification Number"
          },
          {
            "name": "EUPassportNumber",
            "value": "EUPassportNumber",
            "description": "EU Passport Number"
          },
          {
            "name": "EUSocialSecurityNumber",
            "value": "EUSocialSecurityNumber",
            "description": "EU Social Security Number"
          },
          {
            "name": "EUTaxIdentificationNumber",
            "value": "EUTaxIdentificationNumber",
            "description": "EU Tax Identification Number"
          },
          {
            "name": "FIEuropeanHealthNumber",
            "value": "FIEuropeanHealthNumber",
            "description": "FI European Health Number"
          },
          {
            "name": "FINationalID",
            "value": "FINationalID",
            "description": "FI National ID"
          },
          {
            "name": "FINationalIDV2",
            "value": "FINationalIDV2",
            "description": "FI National ID V2"
          },
          {
            "name": "FIPassportNumber",
            "value": "FIPassportNumber",
            "description": "FI Passport Number"
          },
          {
            "name": "FRDriversLicenseNumber",
            "value": "FRDriversLicenseNumber",
            "description": "FR Driver's License Number"
          },
          {
            "name": "FRHealthInsuranceNumber",
            "value": "FRHealthInsuranceNumber",
            "description": "FR Health Insurance Number"
          },
          {
            "name": "FRNationalID",
            "value": "FRNationalID",
            "description": "FR National ID"
          },
          {
            "name": "FRPassportNumber",
            "value": "FRPassportNumber",
            "description": "FR Passport Number"
          },
          {
            "name": "FRSocialSecurityNumber",
            "value": "FRSocialSecurityNumber",
            "description": "FR Social Security Number"
          },
          {
            "name": "FRTaxIdentificationNumber",
            "value": "FRTaxIdentificationNumber",
            "description": "FR Tax Identification Number"
          },
          {
            "name": "FRValueAddedTaxNumber",
            "value": "FRValueAddedTaxNumber",
            "description": "FR Value Added Tax Number"
          },
          {
            "name": "DEDriversLicenseNumber",
            "value": "DEDriversLicenseNumber",
            "description": "DE Driver's License Number"
          },
          {
            "name": "DEPassportNumber",
            "value": "DEPassportNumber",
            "description": "DE Passport Number"
          },
          {
            "name": "DEIdentityCardNumber",
            "value": "DEIdentityCardNumber",
            "description": "DE Identity Card Number"
          },
          {
            "name": "DETaxIdentificationNumber",
            "value": "DETaxIdentificationNumber",
            "description": "DE Tax Identification Number"
          },
          {
            "name": "DEValueAddedNumber",
            "value": "DEValueAddedNumber",
            "description": "DE Value Added Number"
          },
          {
            "name": "GRNationalIDCard",
            "value": "GRNationalIDCard",
            "description": "GR National ID Card"
          },
          {
            "name": "GRNationalIDV2",
            "value": "GRNationalIDV2",
            "description": "GR National ID V2"
          },
          {
            "name": "GRTaxIdentificationNumber",
            "value": "GRTaxIdentificationNumber",
            "description": "GR Tax Identification Number"
          },
          {
            "name": "HKIdentityCardNumber",
            "value": "HKIdentityCardNumber",
            "description": "HK Identity Card Number"
          },
          {
            "name": "HUValueAddedNumber",
            "value": "HUValueAddedNumber",
            "description": "HU Value Added Number"
          },
          {
            "name": "HUPersonalIdentificationNumber",
            "value": "HUPersonalIdentificationNumber",
            "description": "HU Personal Identification Number"
          },
          {
            "name": "HUTaxIdentificationNumber",
            "value": "HUTaxIdentificationNumber",
            "description": "HU Tax Identification Number"
          },
          {
            "name": "INPermanentAccount",
            "value": "INPermanentAccount",
            "description": "IN Permanent Account"
          },
          {
            "name": "INUniqueIdentificationNumber",
            "value": "INUniqueIdentificationNumber",
            "description": "IN Unique Identification Number"
          },
          {
            "name": "IDIdentityCardNumber",
            "value": "IDIdentityCardNumber",
            "description": "ID Identity Card Number"
          },
          {
            "name": "InternationalBankingAccountNumber",
            "value": "InternationalBankingAccountNumber",
            "description": "International Banking Account Number"
          },
          {
            "name": "IEPersonalPublicServiceNumber",
            "value": "IEPersonalPublicServiceNumber",
            "description": "IE Personal Public Service Number"
          },
          {
            "name": "IEPersonalPublicServiceNumberV2",
            "value": "IEPersonalPublicServiceNumberV2",
            "description": "IE Personal Public Service Number V2"
          },
          {
            "name": "ILBankAccountNumber",
            "value": "ILBankAccountNumber",
            "description": "IL Bank Account Number"
          },
          {
            "name": "ILNationalID",
            "value": "ILNationalID",
            "description": "IL National ID"
          },
          {
            "name": "ITDriversLicenseNumber",
            "value": "ITDriversLicenseNumber",
            "description": "IT Driver's License Number"
          },
          {
            "name": "ITFiscalCode",
            "value": "ITFiscalCode",
            "description": "IT Fiscal Code"
          },
          {
            "name": "ITValueAddedTaxNumber",
            "value": "ITValueAddedTaxNumber",
            "description": "IT Value Added Tax Number"
          },
          {
            "name": "JPBankAccountNumber",
            "value": "JPBankAccountNumber",
            "description": "JP Bank Account Number"
          },
          {
            "name": "JPDriversLicenseNumber",
            "value": "JPDriversLicenseNumber",
            "description": "JP Driver's License Number"
          },
          {
            "name": "JPPassportNumber",
            "value": "JPPassportNumber",
            "description": "JP Passport Number"
          },
          {
            "name": "JPResidentRegistrationNumber",
            "value": "JPResidentRegistrationNumber",
            "description": "JP Resident Registration Number"
          },
          {
            "name": "JPSocialInsuranceNumber",
            "value": "JPSocialInsuranceNumber",
            "description": "JP Social Insurance Number"
          },
          {
            "name": "JPMyNumberCorporate",
            "value": "JPMyNumberCorporate",
            "description": "JP My Number Corporate"
          },
          {
            "name": "JPMyNumberPersonal",
            "value": "JPMyNumberPersonal",
            "description": "JP My Number Personal"
          },
          {
            "name": "JPResidenceCardNumber",
            "value": "JPResidenceCardNumber",
            "description": "JP Residence Card Number"
          },
          {
            "name": "LVPersonalCode",
            "value": "LVPersonalCode",
            "description": "LV Personal Code"
          },
          {
            "name": "LTPersonalCode",
            "value": "LTPersonalCode",
            "description": "LT Personal Code"
          },
          {
            "name": "LUNationalIdentificationNumberNatural",
            "value": "LUNationalIdentificationNumberNatural",
            "description": "LU National Identification Number Natural"
          },
          {
            "name": "LUNationalIdentificationNumberNonNatural",
            "value": "LUNationalIdentificationNumberNonNatural",
            "description": "LU National Identification Number Non Natural"
          },
          {
            "name": "MYIdentityCardNumber",
            "value": "MYIdentityCardNumber",
            "description": "MY Identity Card Number"
          },
          {
            "name": "MTIdentityCardNumber",
            "value": "MTIdentityCardNumber",
            "description": "MT Identity Card Number"
          },
          {
            "name": "MTTaxIDNumber",
            "value": "MTTaxIDNumber",
            "description": "MT Tax ID Number"
          },
          {
            "name": "NLCitizensServiceNumber",
            "value": "NLCitizensServiceNumber",
            "description": "NL Citizens Service Number"
          },
          {
            "name": "NLCitizensServiceNumberV2",
            "value": "NLCitizensServiceNumberV2",
            "description": "NL Citizens Service Number V2"
          },
          {
            "name": "NLTaxIdentificationNumber",
            "value": "NLTaxIdentificationNumber",
            "description": "NL Tax Identification Number"
          },
          {
            "name": "NLValueAddedTaxNumber",
            "value": "NLValueAddedTaxNumber",
            "description": "NL Value Added Tax Number"
          },
          {
            "name": "NZBankAccountNumber",
            "value": "NZBankAccountNumber",
            "description": "NZ Bank Account Number"
          },
          {
            "name": "NZDriversLicenseNumber",
            "value": "NZDriversLicenseNumber",
            "description": "NZ Driver's License Number"
          },
          {
            "name": "NZInlandRevenueNumber",
            "value": "NZInlandRevenueNumber",
            "description": "NZ Inland Revenue Number"
          },
          {
            "name": "NZMinistryOfHealthNumber",
            "value": "NZMinistryOfHealthNumber",
            "description": "NZ Ministry Of Health Number"
          },
          {
            "name": "NZSocialWelfareNumber",
            "value": "NZSocialWelfareNumber",
            "description": "NZ Social Welfare Number"
          },
          {
            "name": "NOIdentityNumber",
            "value": "NOIdentityNumber",
            "description": "NO Identity Number"
          },
          {
            "name": "PHUnifiedMultiPurposeIDNumber",
            "value": "PHUnifiedMultiPurposeIDNumber",
            "description": "PH Unified Multi Purpose ID Number"
          },
          {
            "name": "PLIdentityCard",
            "value": "PLIdentityCard",
            "description": "PL Identity Card"
          },
          {
            "name": "PLNationalID",
            "value": "PLNationalID",
            "description": "PL National ID"
          },
          {
            "name": "PLNationalIDV2",
            "value": "PLNationalIDV2",
            "description": "PL National ID V2"
          },
          {
            "name": "PLPassportNumber",
            "value": "PLPassportNumber",
            "description": "PL Passport Number"
          },
          {
            "name": "PLTaxIdentificationNumber",
            "value": "PLTaxIdentificationNumber",
            "description": "PL Tax Identification Number"
          },
          {
            "name": "PLREGONNumber",
            "value": "PLREGONNumber",
            "description": "PL REGON Number"
          },
          {
            "name": "PTCitizenCardNumber",
            "value": "PTCitizenCardNumber",
            "description": "PT Citizen Card Number"
          },
          {
            "name": "PTCitizenCardNumberV2",
            "value": "PTCitizenCardNumberV2",
            "description": "PT Citizen Card Number V2"
          },
          {
            "name": "PTTaxIdentificationNumber",
            "value": "PTTaxIdentificationNumber",
            "description": "PT Tax Identification Number"
          },
          {
            "name": "ROPersonalNumericalCode",
            "value": "ROPersonalNumericalCode",
            "description": "RO Personal Numerical Code"
          },
          {
            "name": "RUPassportNumberDomestic",
            "value": "RUPassportNumberDomestic",
            "description": "RU Passport Number Domestic"
          },
          {
            "name": "RUPassportNumberInternational",
            "value": "RUPassportNumberInternational",
            "description": "RU Passport Number International"
          },
          {
            "name": "SANationalID",
            "value": "SANationalID",
            "description": "SA National ID"
          },
          {
            "name": "SGNationalRegistrationIdentityCardNumber",
            "value": "SGNationalRegistrationIdentityCardNumber",
            "description": "SG National Registration Identity Card Number"
          },
          {
            "name": "SKPersonalNumber",
            "value": "SKPersonalNumber",
            "description": "SK Personal Number"
          },
          {
            "name": "SITaxIdentificationNumber",
            "value": "SITaxIdentificationNumber",
            "description": "SI Tax Identification Number"
          },
          {
            "name": "SIUniqueMasterCitizenNumber",
            "value": "SIUniqueMasterCitizenNumber",
            "description": "SI Unique Master Citizen Number"
          },
          {
            "name": "ZAIdentificationNumber",
            "value": "ZAIdentificationNumber",
            "description": "ZA Identification Number"
          },
          {
            "name": "KRResidentRegistrationNumber",
            "value": "KRResidentRegistrationNumber",
            "description": "KR Resident Registration Number"
          },
          {
            "name": "ESDNI",
            "value": "ESDNI",
            "description": "ES DNI"
          },
          {
            "name": "ESSocialSecurityNumber",
            "value": "ESSocialSecurityNumber",
            "description": "ES Social Security Number"
          },
          {
            "name": "ESTaxIdentificationNumber",
            "value": "ESTaxIdentificationNumber",
            "description": "ES Tax Identification Number"
          },
          {
            "name": "SQLServerConnectionString",
            "value": "SQLServerConnectionString",
            "description": "SQL Server Connection String"
          },
          {
            "name": "SENationalID",
            "value": "SENationalID",
            "description": "SE National ID"
          },
          {
            "name": "SENationalIDV2",
            "value": "SENationalIDV2",
            "description": "SE National ID V2"
          },
          {
            "name": "SEPassportNumber",
            "value": "SEPassportNumber",
            "description": "SE Passport Number"
          },
          {
            "name": "SETaxIdentificationNumber",
            "value": "SETaxIdentificationNumber",
            "description": "SE Tax Identification Number"
          },
          {
            "name": "SWIFTCode",
            "value": "SWIFTCode",
            "description": "SWIFT Code"
          },
          {
            "name": "CHSocialSecurityNumber",
            "value": "CHSocialSecurityNumber",
            "description": "CH Social Security Number"
          },
          {
            "name": "TWNationalID",
            "value": "TWNationalID",
            "description": "TW National ID"
          },
          {
            "name": "TWPassportNumber",
            "value": "TWPassportNumber",
            "description": "TW Passport Number"
          },
          {
            "name": "TWResidentCertificate",
            "value": "TWResidentCertificate",
            "description": "TW Resident Certificate"
          },
          {
            "name": "THPopulationIdentificationCode",
            "value": "THPopulationIdentificationCode",
            "description": "TH Population Identification Code"
          },
          {
            "name": "TRNationalIdentificationNumber",
            "value": "TRNationalIdentificationNumber",
            "description": "TR National Identification Number"
          },
          {
            "name": "UKDriversLicenseNumber",
            "value": "UKDriversLicenseNumber",
            "description": "UK Driver's License Number"
          },
          {
            "name": "UKElectoralRollNumber",
            "value": "UKElectoralRollNumber",
            "description": "UK Electoral Roll Number"
          },
          {
            "name": "UKNationalHealthNumber",
            "value": "UKNationalHealthNumber",
            "description": "UK National Health Number"
          },
          {
            "name": "UKNationalInsuranceNumber",
            "value": "UKNationalInsuranceNumber",
            "description": "UK National Insurance Number"
          },
          {
            "name": "UKUniqueTaxpayerNumber",
            "value": "UKUniqueTaxpayerNumber",
            "description": "UK Unique Taxpayer Number"
          },
          {
            "name": "USUKPassportNumber",
            "value": "USUKPassportNumber",
            "description": "US UK Passport Number"
          },
          {
            "name": "USBankAccountNumber",
            "value": "USBankAccountNumber",
            "description": "US Bank Account Number"
          },
          {
            "name": "USDriversLicenseNumber",
            "value": "USDriversLicenseNumber",
            "description": "US Driver's License Number"
          },
          {
            "name": "USIndividualTaxpayerIdentification",
            "value": "USIndividualTaxpayerIdentification",
            "description": "US Individual Taxpayer Identification"
          },
          {
            "name": "USSocialSecurityNumber",
            "value": "USSocialSecurityNumber",
            "description": "US Social Security Number"
          },
          {
            "name": "UAPassportNumberDomestic",
            "value": "UAPassportNumberDomestic",
            "description": "UA Passport Number Domestic"
          },
          {
            "name": "UAPassportNumberInternational",
            "value": "UAPassportNumberInternational",
            "description": "UA Passport Number International"
          },
          {
            "name": "Organization",
            "value": "Organization",
            "description": "Organization"
          },
          {
            "name": "Email",
            "value": "Email",
            "description": "Email"
          },
          {
            "name": "URL",
            "value": "URL",
            "description": "URL"
          },
          {
            "name": "Age",
            "value": "Age",
            "description": "Age"
          },
          {
            "name": "PhoneNumber",
            "value": "PhoneNumber",
            "description": "Phone Number"
          },
          {
            "name": "IPAddress",
            "value": "IPAddress",
            "description": "IP Address"
          },
          {
            "name": "Date",
            "value": "Date",
            "description": "Date"
          },
          {
            "name": "Person",
            "value": "Person",
            "description": "Person"
          },
          {
            "name": "Address",
            "value": "Address",
            "description": "Address"
          },
          {
            "name": "All",
            "value": "All",
            "description": "All PII categories."
          },
          {
            "name": "Default",
            "value": "Default",
            "description": "Default PII categories for the language."
          }
        ]
      }
    },
    "PiiEntityRecognitionLROResult": {
      "type": "object",
      "description": "Contains the PII LRO results.",
      "properties": {
        "results": {
          "$ref": "#/definitions/PiiResult",
          "description": "The list of pii results"
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROResult"
        }
      ],
      "x-ms-discriminator-value": "PiiEntityRecognitionLROResults"
    },
    "PiiLROTask": {
      "type": "object",
      "description": "Contains the analyze text PIIEntityRecognition LRO task.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/PiiTaskParameters",
          "description": "Pii task parameters."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROTask"
        }
      ],
      "x-ms-discriminator-value": "PiiEntityRecognition"
    },
    "PiiResult": {
      "type": "object",
      "description": "Contains the PiiResult.",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        },
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/PiiResultWithDetectedLanguage"
          }
        }
      },
      "required": [
        "errors",
        "modelVersion",
        "documents"
      ]
    },
    "PiiResultWithDetectedLanguage": {
      "type": "object",
      "description": "Contains the PII results with detected language.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/DocumentWarning"
          },
          "x-ms-identifiers": []
        },
        "statistics": {
          "$ref": "#/definitions/DocumentStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the document payload."
        },
        "redactedText": {
          "type": "string",
          "description": "Returns redacted text."
        },
        "entities": {
          "type": "array",
          "description": "Recognized entities in the document.",
          "items": {
            "$ref": "#/definitions/Entity"
          },
          "x-ms-identifiers": []
        },
        "detectedLanguage": {
          "$ref": "#/definitions/DetectedLanguage",
          "description": "If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document."
        }
      },
      "required": [
        "id",
        "warnings",
        "redactedText",
        "entities"
      ]
    },
    "PiiTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a PII Entities Recognition task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "modelVersion": {
          "type": "string",
          "description": "model version",
          "default": "latest"
        },
        "domain": {
          "type": "string",
          "description": "Domain for PII task",
          "default": "none",
          "enum": [
            "phi",
            "none"
          ],
          "x-ms-enum": {
            "name": "PiiDomain",
            "modelAsString": true,
            "values": [
              {
                "name": "phi",
                "value": "phi",
                "description": "Indicates that entities in the Personal Health Information domain should be redacted."
              },
              {
                "name": "none",
                "value": "none",
                "description": "Indicates that no domain is specified."
              }
            ]
          }
        },
        "piiCategories": {
          "type": "array",
          "description": "Enumeration of PII categories to be returned in the response.",
          "items": {
            "$ref": "#/definitions/PiiCategory"
          }
        },
        "stringIndexType": {
          "type": "string",
          "description": "StringIndexType to be used for analysis.",
          "default": "TextElements_v8",
          "enum": [
            "TextElements_v8",
            "UnicodeCodePoint",
            "Utf16CodeUnit"
          ],
          "x-ms-enum": {
            "name": "StringIndexType",
            "modelAsString": true,
            "values": [
              {
                "name": "TextElements_v8",
                "value": "TextElements_v8",
                "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
              },
              {
                "name": "UnicodeCodePoint",
                "value": "UnicodeCodePoint",
                "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
              },
              {
                "name": "Utf16CodeUnit",
                "value": "Utf16CodeUnit",
                "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
              }
            ]
          }
        },
        "excludePiiCategories": {
          "type": "array",
          "description": "Enumeration of PII categories to be excluded in the response.",
          "items": {
            "$ref": "#/definitions/PiiCategoriesExclude"
          }
        },
        "redactionCharacter": {
          "type": "string",
          "description": "Character to be used for redaction. Default in '*'.",
          "default": "*",
          "enum": [
            "!",
            "#",
            "$",
            "%",
            "&",
            "*",
            "+",
            "-",
            "=",
            "?",
            "@",
            "^",
            "_",
            "~"
          ],
          "x-ms-enum": {
            "name": "redactionCharacter",
            "modelAsString": true,
            "values": [
              {
                "name": "exclamationPoint",
                "value": "!",
                "description": "Exclamation point character"
              },
              {
                "name": "numberSign",
                "value": "#",
                "description": "Number sign character"
              },
              {
                "name": "dollar",
                "value": "$",
                "description": "Dollar sign character"
              },
              {
                "name": "perCent",
                "value": "%",
                "description": "Percent sign character"
              },
              {
                "name": "ampersand",
                "value": "&",
                "description": "Ampersand character"
              },
              {
                "name": "asterisk",
                "value": "*",
                "description": "Asterisk character"
              },
              {
                "name": "plus",
                "value": "+",
                "description": "Plus sign character"
              },
              {
                "name": "minus",
                "value": "-",
                "description": "Minus sign character"
              },
              {
                "name": "equals",
                "value": "=",
                "description": "Equals sign character"
              },
              {
                "name": "questionMark",
                "value": "?",
                "description": "Question mark character"
              },
              {
                "name": "atSign",
                "value": "@",
                "description": "At sign character"
              },
              {
                "name": "caret",
                "value": "^",
                "description": "Caret character"
              },
              {
                "name": "underscore",
                "value": "_",
                "description": "Underscore character"
              },
              {
                "name": "tilde",
                "value": "~",
                "description": "Tilde character"
              }
            ]
          }
        }
      }
    },
    "PiiTaskResult": {
      "type": "object",
      "description": "Contains the analyze text PIIEntityRecognition LRO task.",
      "properties": {
        "results": {
          "$ref": "#/definitions/PiiResult",
          "description": "The list of pii results"
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextTaskResult"
        }
      ],
      "x-ms-discriminator-value": "PiiEntityRecognitionResults"
    },
    "PrebuiltComponent": {
      "type": "object",
      "description": "This object contains information of the prebuilt component of the detected entity.",
      "properties": {
        "value": {
          "type": "string",
          "description": "The prebuilt component of an extracted entity type."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EntityComponentInformation"
        }
      ],
      "x-ms-discriminator-value": "PrebuiltComponent"
    },
    "RangeInclusivity": {
      "type": "string",
      "description": "The range inclusiveness of this property property.",
      "enum": [
        "NoneInclusive",
        "LeftInclusive",
        "RightInclusive",
        "LeftRightInclusive"
      ],
      "x-ms-enum": {
        "name": "RangeInclusivity",
        "modelAsString": true,
        "values": [
          {
            "name": "NoneInclusive",
            "value": "NoneInclusive",
            "description": "No inclusivity"
          },
          {
            "name": "LeftInclusive",
            "value": "LeftInclusive",
            "description": "Left side inclusive"
          },
          {
            "name": "RightInclusive",
            "value": "RightInclusive",
            "description": "Right side inclusive"
          },
          {
            "name": "LeftRightInclusive",
            "value": "LeftRightInclusive",
            "description": "Both sides inclusive"
          }
        ]
      }
    },
    "RangeKind": {
      "type": "string",
      "description": "The kind of the number range entity.",
      "enum": [
        "Number",
        "Speed",
        "Weight",
        "Length",
        "Volume",
        "Area",
        "Age",
        "Information",
        "Temperature",
        "Currency"
      ],
      "x-ms-enum": {
        "name": "RangeKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Number",
            "value": "Number",
            "description": "Number range"
          },
          {
            "name": "Speed",
            "value": "Speed",
            "description": "Speed range"
          },
          {
            "name": "Weight",
            "value": "Weight",
            "description": "Weight range"
          },
          {
            "name": "Length",
            "value": "Length",
            "description": "Length range"
          },
          {
            "name": "Volume",
            "value": "Volume",
            "description": "Volume range"
          },
          {
            "name": "Area",
            "value": "Area",
            "description": "Area range"
          },
          {
            "name": "Age",
            "value": "Age",
            "description": "Age range"
          },
          {
            "name": "Information",
            "value": "Information",
            "description": "Information range"
          },
          {
            "name": "Temperature",
            "value": "Temperature",
            "description": "Temperature range"
          },
          {
            "name": "Currency",
            "value": "Currency",
            "description": "Currency range"
          }
        ]
      }
    },
    "RelativeTo": {
      "type": "string",
      "description": "The reference point that the ordinal number denotes.",
      "enum": [
        "Current",
        "End",
        "Start"
      ],
      "x-ms-enum": {
        "name": "RelativeTo",
        "modelAsString": true,
        "values": [
          {
            "name": "Current",
            "value": "Current",
            "description": "Current state or position"
          },
          {
            "name": "End",
            "value": "End",
            "description": "End state or position"
          },
          {
            "name": "Start",
            "value": "Start",
            "description": "Start state or position"
          }
        ]
      }
    },
    "RequestStatistics": {
      "type": "object",
      "description": "if showStats=true was specified in the request this field will contain information about the request payload.",
      "properties": {
        "documentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of documents submitted in the request."
        },
        "validDocumentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of valid documents. This excludes empty, over-size limit or non-supported languages documents."
        },
        "erroneousDocumentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of invalid documents. This includes empty, over-size limit or non-supported languages documents."
        },
        "transactionsCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of transactions for the request."
        }
      },
      "required": [
        "documentsCount",
        "validDocumentsCount",
        "erroneousDocumentsCount",
        "transactionsCount"
      ]
    },
    "ScriptCode": {
      "type": "string",
      "description": "Identifies the script of the input document. Maps to the ISO 15924 standard script code.",
      "enum": [
        "Arab",
        "Armn",
        "Beng",
        "Cans",
        "Cyrl",
        "Deva",
        "Ethi",
        "Geor",
        "Grek",
        "Gujr",
        "Guru",
        "Hang",
        "Hans",
        "Hant",
        "Hebr",
        "Jpan",
        "Khmr",
        "Knda",
        "Laoo",
        "Latn",
        "Mlym",
        "Mymr",
        "Orya",
        "Sinh",
        "Taml",
        "Telu",
        "Thaa",
        "Thai",
        "Tibt"
      ],
      "x-ms-enum": {
        "name": "ScriptCode",
        "modelAsString": true,
        "values": [
          {
            "name": "Arab",
            "value": "Arab",
            "description": "Script code for the Arabic script."
          },
          {
            "name": "Armn",
            "value": "Armn",
            "description": "Script code for the Armenian script."
          },
          {
            "name": "Beng",
            "value": "Beng",
            "description": "Script code for the Bangla script."
          },
          {
            "name": "Cans",
            "value": "Cans",
            "description": "Script code for the UnifiedCanadianAboriginalSyllabics script."
          },
          {
            "name": "Cyrl",
            "value": "Cyrl",
            "description": "Script code for the Cyrillic script."
          },
          {
            "name": "Deva",
            "value": "Deva",
            "description": "Script code for the Devanagari script."
          },
          {
            "name": "Ethi",
            "value": "Ethi",
            "description": "Script code for the Ethiopic script."
          },
          {
            "name": "Geor",
            "value": "Geor",
            "description": "Script code for the Georgian script."
          },
          {
            "name": "Grek",
            "value": "Grek",
            "description": "Script code for the Greek script."
          },
          {
            "name": "Gujr",
            "value": "Gujr",
            "description": "Script code for the Gujarati script."
          },
          {
            "name": "Guru",
            "value": "Guru",
            "description": "Script code for the Gurmukhi script."
          },
          {
            "name": "Hang",
            "value": "Hang",
            "description": "Script code for the Hangul script."
          },
          {
            "name": "Hans",
            "value": "Hans",
            "description": "Script code for the HanSimplified script."
          },
          {
            "name": "Hant",
            "value": "Hant",
            "description": "Script code for the HanTraditional script."
          },
          {
            "name": "Hebr",
            "value": "Hebr",
            "description": "Script code for the Hebrew script."
          },
          {
            "name": "Jpan",
            "value": "Jpan",
            "description": "Script code for the Japanese script."
          },
          {
            "name": "Khmr",
            "value": "Khmr",
            "description": "Script code for the Khmer script."
          },
          {
            "name": "Knda",
            "value": "Knda",
            "description": "Script code for the Kannada script."
          },
          {
            "name": "Laoo",
            "value": "Laoo",
            "description": "Script code for the Lao script."
          },
          {
            "name": "Latn",
            "value": "Latn",
            "description": "Script code for the Latin script."
          },
          {
            "name": "Mlym",
            "value": "Mlym",
            "description": "Script code for the Malayalam script."
          },
          {
            "name": "Mymr",
            "value": "Mymr",
            "description": "Script code for the Myanmar script."
          },
          {
            "name": "Orya",
            "value": "Orya",
            "description": "Script code for the Odia script."
          },
          {
            "name": "Sinh",
            "value": "Sinh",
            "description": "Script code for the Sinhala script."
          },
          {
            "name": "Taml",
            "value": "Taml",
            "description": "Script code for the Tamil script."
          },
          {
            "name": "Telu",
            "value": "Telu",
            "description": "Script code for the Telugu script."
          },
          {
            "name": "Thaa",
            "value": "Thaa",
            "description": "Script code for the Thaana script."
          },
          {
            "name": "Thai",
            "value": "Thai",
            "description": "Script code for the Thai script."
          },
          {
            "name": "Tibt",
            "value": "Tibt",
            "description": "Script code for the Tibetan script."
          }
        ]
      }
    },
    "ScriptKind": {
      "type": "string",
      "description": "Identifies the script of the input document. Maps to the ISO 15924 standard formal name.",
      "enum": [
        "Arabic",
        "Armenian",
        "Bangla",
        "UnifiedCanadianAboriginalSyllabics",
        "Cyrillic",
        "Devanagari",
        "Ethiopic",
        "Georgian",
        "Greek",
        "Gujarati",
        "Gurmukhi",
        "Hangul",
        "HanSimplified",
        "HanTraditional",
        "Hebrew",
        "Japanese",
        "Khmer",
        "Kannada",
        "Lao",
        "Latin",
        "Malayalam",
        "Myanmar",
        "Odia",
        "Sinhala",
        "Tamil",
        "Telugu",
        "Thaana",
        "Thai",
        "Tibetan"
      ],
      "x-ms-enum": {
        "name": "ScriptKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Arabic",
            "value": "Arabic",
            "description": "Script name for the Arabic script."
          },
          {
            "name": "Armenian",
            "value": "Armenian",
            "description": "Script name for the Armenian script."
          },
          {
            "name": "Bangla",
            "value": "Bangla",
            "description": "Script name for the Bangla script."
          },
          {
            "name": "UnifiedCanadianAboriginalSyllabics",
            "value": "UnifiedCanadianAboriginalSyllabics",
            "description": "Script name for the UnifiedCanadianAboriginalSyllabics script."
          },
          {
            "name": "Cyrillic",
            "value": "Cyrillic",
            "description": "Script name for the Cyrillic script."
          },
          {
            "name": "Devanagari",
            "value": "Devanagari",
            "description": "Script name for the Devanagari script."
          },
          {
            "name": "Ethiopic",
            "value": "Ethiopic",
            "description": "Script name for the Ethiopic script."
          },
          {
            "name": "Georgian",
            "value": "Georgian",
            "description": "Script name for the Georgian script."
          },
          {
            "name": "Greek",
            "value": "Greek",
            "description": "Script name for the Greek script."
          },
          {
            "name": "Gujarati",
            "value": "Gujarati",
            "description": "Script name for the Gujarati script."
          },
          {
            "name": "Gurmukhi",
            "value": "Gurmukhi",
            "description": "Script name for the Gurmukhi script."
          },
          {
            "name": "Hangul",
            "value": "Hangul",
            "description": "Script name for the Hangul script."
          },
          {
            "name": "HanSimplified",
            "value": "HanSimplified",
            "description": "Script name for the HanSimplified script."
          },
          {
            "name": "HanTraditional",
            "value": "HanTraditional",
            "description": "Script name for the HanTraditional script."
          },
          {
            "name": "Hebrew",
            "value": "Hebrew",
            "description": "Script name for the Hebrew script."
          },
          {
            "name": "Japanese",
            "value": "Japanese",
            "description": "Script name for the Japanese script."
          },
          {
            "name": "Khmer",
            "value": "Khmer",
            "description": "Script name for the Khmer script."
          },
          {
            "name": "Kannada",
            "value": "Kannada",
            "description": "Script name for the Kannada script."
          },
          {
            "name": "Lao",
            "value": "Lao",
            "description": "Script name for the Lao script."
          },
          {
            "name": "Latin",
            "value": "Latin",
            "description": "Script name for the Latin script."
          },
          {
            "name": "Malayalam",
            "value": "Malayalam",
            "description": "Script name for the Malayalam script."
          },
          {
            "name": "Myanmar",
            "value": "Myanmar",
            "description": "Script name for the Myanmar script."
          },
          {
            "name": "Odia",
            "value": "Odia",
            "description": "Script name for the Odia script."
          },
          {
            "name": "Sinhala",
            "value": "Sinhala",
            "description": "Script name for the Sinhala script."
          },
          {
            "name": "Tamil",
            "value": "Tamil",
            "description": "Script name for the Tamil script."
          },
          {
            "name": "Telugu",
            "value": "Telugu",
            "description": "Script name for the Telugu script."
          },
          {
            "name": "Thaana",
            "value": "Thaana",
            "description": "Script name for the Thaana script."
          },
          {
            "name": "Thai",
            "value": "Thai",
            "description": "Script name for the Thai script."
          },
          {
            "name": "Tibetan",
            "value": "Tibetan",
            "description": "Script name for the Tibetan script."
          }
        ]
      }
    },
    "SentenceAssessment": {
      "type": "object",
      "description": "Represents a sentence assessment and the assessments or target objects related to it.",
      "properties": {
        "sentiment": {
          "$ref": "#/definitions/TokenSentimentValue",
          "description": "The sentiment of the sentence."
        },
        "confidenceScores": {
          "$ref": "#/definitions/TargetConfidenceScoreLabel",
          "description": "Represents the confidence scores across all sentiment classes: positive and negative."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "The target offset from the start of the sentence."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the target."
        },
        "text": {
          "type": "string",
          "description": "The target text detected."
        },
        "isNegated": {
          "type": "boolean",
          "description": "The indicator representing if the assessment is negated."
        }
      },
      "required": [
        "sentiment",
        "confidenceScores",
        "offset",
        "length",
        "text",
        "isNegated"
      ]
    },
    "SentenceSentiment": {
      "type": "object",
      "description": "A document's sentence sentiment.",
      "properties": {
        "text": {
          "type": "string",
          "description": "The sentence text."
        },
        "sentiment": {
          "$ref": "#/definitions/SentenceSentimentValue",
          "description": "The predicted Sentiment for the sentence."
        },
        "confidenceScores": {
          "$ref": "#/definitions/SentimentConfidenceScores",
          "description": "The sentiment confidence score between 0 and 1 for the sentence for all classes."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "The target offset from the start of the sentence."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the target."
        },
        "targets": {
          "type": "array",
          "description": "The array of sentence targets for the sentence.",
          "items": {
            "$ref": "#/definitions/SentenceTarget"
          },
          "x-ms-identifiers": []
        },
        "assessments": {
          "type": "array",
          "description": "The array of assessments for the sentence.",
          "items": {
            "$ref": "#/definitions/SentenceAssessment"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "text",
        "sentiment",
        "confidenceScores",
        "offset",
        "length"
      ]
    },
    "SentenceSentimentValue": {
      "type": "string",
      "description": "The predicted Sentiment for the sentence.",
      "enum": [
        "positive",
        "neutral",
        "negative"
      ],
      "x-ms-enum": {
        "name": "SentenceSentimentValue",
        "modelAsString": false,
        "values": [
          {
            "name": "positive",
            "value": "positive",
            "description": "Positive sentiment"
          },
          {
            "name": "neutral",
            "value": "neutral",
            "description": "Neutral sentiment"
          },
          {
            "name": "negative",
            "value": "negative",
            "description": "Negative sentiment"
          }
        ]
      }
    },
    "SentenceTarget": {
      "type": "object",
      "description": "Represents a sentence target and the assessments or target objects related to it.",
      "properties": {
        "sentiment": {
          "$ref": "#/definitions/TokenSentimentValue",
          "description": "The sentiment of the sentence."
        },
        "confidenceScores": {
          "$ref": "#/definitions/TargetConfidenceScoreLabel",
          "description": "Represents the confidence scores across all sentiment classes: positive and negative."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "The target offset from the start of the sentence."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the target."
        },
        "text": {
          "type": "string",
          "description": "The target text detected."
        },
        "relations": {
          "type": "array",
          "description": "The array of either assessment or target objects which is related to the target.",
          "items": {
            "$ref": "#/definitions/TargetRelation"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "sentiment",
        "confidenceScores",
        "offset",
        "length",
        "text",
        "relations"
      ]
    },
    "SentimentAnalysisLROTask": {
      "type": "object",
      "description": "An object representing the task definition for a Sentiment Analysis task.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/SentimentAnalysisTaskParameters",
          "description": "Parameters for the Sentiment Analysis task."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROTask"
        }
      ],
      "x-ms-discriminator-value": "SentimentAnalysis"
    },
    "SentimentAnalysisTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a Sentiment Analysis task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "modelVersion": {
          "type": "string",
          "description": "model version",
          "default": "latest"
        },
        "opinionMining": {
          "type": "boolean",
          "description": "Whether to use opinion mining in the request or not.",
          "default": false
        },
        "stringIndexType": {
          "type": "string",
          "description": "Specifies the method used to interpret string offsets.",
          "default": "TextElements_v8",
          "enum": [
            "TextElements_v8",
            "UnicodeCodePoint",
            "Utf16CodeUnit"
          ],
          "x-ms-enum": {
            "name": "StringIndexType",
            "modelAsString": true,
            "values": [
              {
                "name": "TextElements_v8",
                "value": "TextElements_v8",
                "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
              },
              {
                "name": "UnicodeCodePoint",
                "value": "UnicodeCodePoint",
                "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
              },
              {
                "name": "Utf16CodeUnit",
                "value": "Utf16CodeUnit",
                "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
              }
            ]
          }
        }
      }
    },
    "SentimentConfidenceScores": {
      "type": "object",
      "description": "Represents the confidence scores between 0 and 1 across all sentiment classes: positive, neutral, negative.",
      "properties": {
        "positive": {
          "type": "number",
          "format": "double",
          "description": "Confidence score for positive sentiment"
        },
        "neutral": {
          "type": "number",
          "format": "double",
          "description": "Confidence score for neutral sentiment"
        },
        "negative": {
          "type": "number",
          "format": "double",
          "description": "Confidence score for negative sentiment"
        }
      },
      "required": [
        "positive",
        "neutral",
        "negative"
      ]
    },
    "SentimentDocumentResultWithDetectedLanguage": {
      "type": "object",
      "description": "Sentiment analysis per document.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/DocumentWarning"
          },
          "x-ms-identifiers": []
        },
        "statistics": {
          "$ref": "#/definitions/DocumentStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the document payload."
        },
        "sentiment": {
          "$ref": "#/definitions/DocumentSentimentValue",
          "description": "Predicted sentiment for document (Negative, Neutral, Positive, or Mixed)."
        },
        "confidenceScores": {
          "$ref": "#/definitions/SentimentConfidenceScores",
          "description": "The sentiment confidence score between 0 and 1 for the sentence for all classes."
        },
        "sentences": {
          "type": "array",
          "description": "The document's sentences sentiment.",
          "items": {
            "$ref": "#/definitions/SentenceSentiment"
          },
          "x-ms-identifiers": []
        },
        "detectedLanguage": {
          "$ref": "#/definitions/DetectedLanguage",
          "description": "If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document."
        }
      },
      "required": [
        "id",
        "warnings",
        "sentiment",
        "confidenceScores",
        "sentences"
      ]
    },
    "SentimentLROResult": {
      "type": "object",
      "description": "Contains the Sentiment Analysis LRO results.",
      "properties": {
        "results": {
          "$ref": "#/definitions/SentimentResponse",
          "description": "The sentiment analysis results"
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROResult"
        }
      ],
      "x-ms-discriminator-value": "SentimentAnalysisLROResults"
    },
    "SentimentResponse": {
      "type": "object",
      "description": "Sentiment analysis results for the input documents.",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        },
        "documents": {
          "type": "array",
          "description": "The sentiment analysis results for each document in the input.",
          "items": {
            "$ref": "#/definitions/SentimentDocumentResultWithDetectedLanguage"
          }
        }
      },
      "required": [
        "errors",
        "modelVersion",
        "documents"
      ]
    },
    "SentimentTaskResult": {
      "type": "object",
      "description": "Contains the analyze text SentimentAnalysis LRO task result.",
      "properties": {
        "results": {
          "$ref": "#/definitions/SentimentResponse",
          "description": "The sentiment analysis results"
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextTaskResult"
        }
      ],
      "x-ms-discriminator-value": "SentimentAnalysisResults"
    },
    "SpeedMetadata": {
      "type": "object",
      "description": "Represents the Speed entity Metadata model.",
      "properties": {
        "value": {
          "type": "number",
          "format": "double",
          "description": "The numeric value that the extracted text denotes."
        },
        "unit": {
          "$ref": "#/definitions/SpeedUnit",
          "description": "Unit of measure for speed."
        }
      },
      "required": [
        "value",
        "unit"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseMetadata"
        }
      ],
      "x-ms-discriminator-value": "SpeedMetadata"
    },
    "SpeedUnit": {
      "type": "string",
      "description": "The speed Unit of measurement",
      "enum": [
        "Unspecified",
        "MetersPerSecond",
        "KilometersPerHour",
        "KilometersPerMinute",
        "KilometersPerSecond",
        "MilesPerHour",
        "Knots",
        "FeetPerSecond",
        "FeetPerMinute",
        "YardsPerMinute",
        "YardsPerSecond",
        "MetersPerMillisecond",
        "CentimetersPerMillisecond",
        "KilometersPerMillisecond"
      ],
      "x-ms-enum": {
        "name": "SpeedUnit",
        "modelAsString": true,
        "values": [
          {
            "name": "Unspecified",
            "value": "Unspecified",
            "description": "Unspecified speed unit."
          },
          {
            "name": "MetersPerSecond",
            "value": "MetersPerSecond",
            "description": "Speed unit in meters per second."
          },
          {
            "name": "KilometersPerHour",
            "value": "KilometersPerHour",
            "description": "Speed unit in kilometers per hour."
          },
          {
            "name": "KilometersPerMinute",
            "value": "KilometersPerMinute",
            "description": "Speed unit in kilometers per minute."
          },
          {
            "name": "KilometersPerSecond",
            "value": "KilometersPerSecond",
            "description": "Speed unit in kilometers per second."
          },
          {
            "name": "MilesPerHour",
            "value": "MilesPerHour",
            "description": "Speed unit in miles per hour."
          },
          {
            "name": "Knots",
            "value": "Knots",
            "description": "Speed unit in knots."
          },
          {
            "name": "FeetPerSecond",
            "value": "FeetPerSecond",
            "description": "Speed unit in feet per second."
          },
          {
            "name": "FeetPerMinute",
            "value": "FeetPerMinute",
            "description": "Speed unit in feet per minute."
          },
          {
            "name": "YardsPerMinute",
            "value": "YardsPerMinute",
            "description": "Speed unit in yards per minute."
          },
          {
            "name": "YardsPerSecond",
            "value": "YardsPerSecond",
            "description": "Speed unit in yards per second."
          },
          {
            "name": "MetersPerMillisecond",
            "value": "MetersPerMillisecond",
            "description": "Speed unit in meters per millisecond."
          },
          {
            "name": "CentimetersPerMillisecond",
            "value": "CentimetersPerMillisecond",
            "description": "Speed unit in centimeters per millisecond."
          },
          {
            "name": "KilometersPerMillisecond",
            "value": "KilometersPerMillisecond",
            "description": "Speed unit in Kilometers per millisecond."
          }
        ]
      }
    },
    "State": {
      "type": "string",
      "description": "The status of the task at the mentioned last update time.",
      "enum": [
        "notStarted",
        "running",
        "succeeded",
        "partiallyCompleted",
        "failed",
        "cancelled",
        "cancelling"
      ],
      "x-ms-enum": {
        "name": "State",
        "modelAsString": true,
        "values": [
          {
            "name": "notStarted",
            "value": "notStarted",
            "description": "Not started status"
          },
          {
            "name": "running",
            "value": "running",
            "description": "Running status"
          },
          {
            "name": "succeeded",
            "value": "succeeded",
            "description": "Succeeded status"
          },
          {
            "name": "partiallyCompleted",
            "value": "partiallyCompleted",
            "description": "Partially completed status"
          },
          {
            "name": "failed",
            "value": "failed",
            "description": "Failed status"
          },
          {
            "name": "cancelled",
            "value": "cancelled",
            "description": "Cancelled status"
          },
          {
            "name": "cancelling",
            "value": "cancelling",
            "description": "Cancelling status"
          }
        ]
      }
    },
    "SummaryContext": {
      "type": "object",
      "description": "The context of the summary.",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position for the context. Use of different 'stringIndexType' values can affect the offset returned."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the context. Use of different 'stringIndexType' values can affect the length returned."
        }
      },
      "required": [
        "offset",
        "length"
      ]
    },
    "SummaryLengthBucket": {
      "type": "string",
      "description": "Enum that defines the length of the output summaries.",
      "enum": [
        "short",
        "medium",
        "long"
      ],
      "x-ms-enum": {
        "name": "SummaryLengthBucket",
        "modelAsString": true,
        "values": [
          {
            "name": "short",
            "value": "short",
            "description": "Instructs model to generate shorter length summaries."
          },
          {
            "name": "medium",
            "value": "medium",
            "description": "Instructs model to generate medium length summaries."
          },
          {
            "name": "long",
            "value": "long",
            "description": "Instructs model to generate longer length summaries."
          }
        ]
      }
    },
    "TargetConfidenceScoreLabel": {
      "type": "object",
      "description": "Represents the confidence scores across all sentiment classes: positive and negative.",
      "properties": {
        "positive": {
          "type": "number",
          "format": "double",
          "description": "Confidence score for positive sentiment"
        },
        "negative": {
          "type": "number",
          "format": "double",
          "description": "Confidence score for negative sentiment"
        }
      },
      "required": [
        "positive",
        "negative"
      ]
    },
    "TargetRelation": {
      "type": "object",
      "description": "Represents the relation between assessments and/or targets.",
      "properties": {
        "ref": {
          "type": "string",
          "description": "The JSON pointer indicating the linked object."
        },
        "relationType": {
          "$ref": "#/definitions/TargetRelationType",
          "description": "The type related to the target."
        }
      },
      "required": [
        "ref",
        "relationType"
      ]
    },
    "TargetRelationType": {
      "type": "string",
      "description": "The type related to the target.",
      "enum": [
        "assessment",
        "target"
      ],
      "x-ms-enum": {
        "name": "TargetRelationType",
        "modelAsString": false,
        "values": [
          {
            "name": "assessment",
            "value": "assessment",
            "description": "Assessment relation."
          },
          {
            "name": "target",
            "value": "target",
            "description": "Target relation."
          }
        ]
      }
    },
    "Tasks": {
      "type": "object",
      "description": "Container for the tasks status for the LRO job.",
      "properties": {
        "completed": {
          "type": "integer",
          "format": "int32",
          "description": "Count of completed tasks."
        },
        "failed": {
          "type": "integer",
          "format": "int32",
          "description": "Count of failed tasks."
        },
        "inProgress": {
          "type": "integer",
          "format": "int32",
          "description": "Count of inprogress tasks."
        },
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "Count of total tasks."
        },
        "items": {
          "type": "array",
          "description": "Enumerable of Analyze text job results.",
          "items": {
            "$ref": "#/definitions/AnalyzeTextLROResult"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "completed",
        "failed",
        "inProgress",
        "total"
      ]
    },
    "TemperatureMetadata": {
      "type": "object",
      "description": "Represents the Information entity Metadata model.",
      "properties": {
        "value": {
          "type": "number",
          "format": "double",
          "description": "The numeric value that the extracted text denotes."
        },
        "unit": {
          "$ref": "#/definitions/TemperatureUnit",
          "description": "Unit of measure for temperature."
        }
      },
      "required": [
        "value",
        "unit"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseMetadata"
        }
      ],
      "x-ms-discriminator-value": "TemperatureMetadata"
    },
    "TemperatureUnit": {
      "type": "string",
      "description": "The temperature Unit of measurement.",
      "enum": [
        "Unspecified",
        "Fahrenheit",
        "Kelvin",
        "Rankine",
        "Celsius"
      ],
      "x-ms-enum": {
        "name": "TemperatureUnit",
        "modelAsString": true,
        "values": [
          {
            "name": "Unspecified",
            "value": "Unspecified",
            "description": "Unspecified temperature unit"
          },
          {
            "name": "Fahrenheit",
            "value": "Fahrenheit",
            "description": "Temperature unit in Fahrenheit"
          },
          {
            "name": "Kelvin",
            "value": "Kelvin",
            "description": "Temperature unit in Kelvin"
          },
          {
            "name": "Rankine",
            "value": "Rankine",
            "description": "Temperature unit in Rankine"
          },
          {
            "name": "Celsius",
            "value": "Celsius",
            "description": "Temperature unit in Celsius"
          }
        ]
      }
    },
    "TemporalModifier": {
      "type": "string",
      "description": "An optional modifier of a date/time instance.",
      "enum": [
        "AfterApprox",
        "Before",
        "BeforeStart",
        "Approx",
        "ReferenceUndefined",
        "SinceEnd",
        "AfterMid",
        "Start",
        "After",
        "BeforeEnd",
        "Until",
        "End",
        "Less",
        "Since",
        "AfterStart",
        "BeforeApprox",
        "Mid",
        "More"
      ],
      "x-ms-enum": {
        "name": "TemporalModifier",
        "modelAsString": true,
        "values": [
          {
            "name": "AfterApprox",
            "value": "AfterApprox",
            "description": "After an approximate time"
          },
          {
            "name": "Before",
            "value": "Before",
            "description": "Before a specific time"
          },
          {
            "name": "BeforeStart",
            "value": "BeforeStart",
            "description": "Before the start of a time period"
          },
          {
            "name": "Approx",
            "value": "Approx",
            "description": "Approximately at a specific time"
          },
          {
            "name": "ReferenceUndefined",
            "value": "ReferenceUndefined",
            "description": "Reference to an undefined time"
          },
          {
            "name": "SinceEnd",
            "value": "SinceEnd",
            "description": "Since the end of a time period"
          },
          {
            "name": "AfterMid",
            "value": "AfterMid",
            "description": "After the middle of a time period"
          },
          {
            "name": "Start",
            "value": "Start",
            "description": "At the start of a time period"
          },
          {
            "name": "After",
            "value": "After",
            "description": "After a specific time"
          },
          {
            "name": "BeforeEnd",
            "value": "BeforeEnd",
            "description": "Before the end of a time period"
          },
          {
            "name": "Until",
            "value": "Until",
            "description": "Until a specific time"
          },
          {
            "name": "End",
            "value": "End",
            "description": "At the end of a time period"
          },
          {
            "name": "Less",
            "value": "Less",
            "description": "Less than a specific time"
          },
          {
            "name": "Since",
            "value": "Since",
            "description": "Since a specific time"
          },
          {
            "name": "AfterStart",
            "value": "AfterStart",
            "description": "After the start of a time period"
          },
          {
            "name": "BeforeApprox",
            "value": "BeforeApprox",
            "description": "Before an approximate time"
          },
          {
            "name": "Mid",
            "value": "Mid",
            "description": "In the middle of a time period"
          },
          {
            "name": "More",
            "value": "More",
            "description": "More than a specific time"
          }
        ]
      }
    },
    "TemporalSetMetadata": {
      "type": "object",
      "description": "A Metadata for temporal set entity instances.",
      "properties": {
        "dateValues": {
          "type": "array",
          "description": "List of date values.",
          "items": {
            "$ref": "#/definitions/DateValue"
          },
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseMetadata"
        }
      ],
      "x-ms-discriminator-value": "TemporalSetMetadata"
    },
    "TemporalSpanMetadata": {
      "type": "object",
      "description": "represents the Metadata of a date and/or time span.",
      "properties": {
        "spanValues": {
          "type": "array",
          "description": "List of temporal spans detected.",
          "items": {
            "$ref": "#/definitions/TemporalSpanValues"
          },
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseMetadata"
        }
      ],
      "x-ms-discriminator-value": "TemporalSpanMetadata"
    },
    "TemporalSpanValues": {
      "type": "object",
      "description": "Temporal span object.",
      "properties": {
        "begin": {
          "type": "string",
          "description": "Start value for the span."
        },
        "end": {
          "type": "string",
          "description": "End value for the span."
        },
        "duration": {
          "type": "string",
          "description": "An optional duration value formatted based on the ISO 8601 (https://en.wikipedia.org/wiki/ISO_8601#Durations)"
        },
        "modifier": {
          "$ref": "#/definitions/TemporalModifier",
          "description": "Modifier for datetime to indicate point of reference like before, after etc."
        },
        "timex": {
          "type": "string",
          "description": "An optional triplet containing the beginning, the end, and the duration all stated as ISO 8601 formatted strings."
        }
      }
    },
    "Temporality": {
      "type": "string",
      "description": "Describes temporal information regarding the entity.",
      "enum": [
        "current",
        "past",
        "future"
      ],
      "x-ms-enum": {
        "name": "Temporality",
        "modelAsString": false,
        "values": [
          {
            "name": "current",
            "value": "current",
            "description": "Current temporality"
          },
          {
            "name": "past",
            "value": "past",
            "description": "Past temporality"
          },
          {
            "name": "future",
            "value": "future",
            "description": "Future temporality"
          }
        ]
      }
    },
    "TimeMetadata": {
      "type": "object",
      "description": "A Metadata for time entity instances.",
      "properties": {
        "dateValues": {
          "type": "array",
          "description": "List of date values.",
          "items": {
            "$ref": "#/definitions/DateValue"
          },
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseMetadata"
        }
      ],
      "x-ms-discriminator-value": "TimeMetadata"
    },
    "TokenSentimentValue": {
      "type": "string",
      "description": "The predicted Sentiment for the sentence.",
      "enum": [
        "positive",
        "mixed",
        "negative"
      ],
      "x-ms-enum": {
        "name": "TokenSentimentValue",
        "modelAsString": false,
        "values": [
          {
            "name": "positive",
            "value": "positive",
            "description": "Positive sentiment"
          },
          {
            "name": "mixed",
            "value": "mixed",
            "description": "Mixed sentiment"
          },
          {
            "name": "negative",
            "value": "negative",
            "description": "Negative sentiment"
          }
        ]
      }
    },
    "VolumeMetadata": {
      "type": "object",
      "description": "Represents the Volume entity Metadata model.",
      "properties": {
        "value": {
          "type": "number",
          "format": "double",
          "description": "The numeric value that the extracted text denotes."
        },
        "unit": {
          "$ref": "#/definitions/VolumeUnit",
          "description": "Unit of measure for volume."
        }
      },
      "required": [
        "value",
        "unit"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseMetadata"
        }
      ],
      "x-ms-discriminator-value": "VolumeMetadata"
    },
    "VolumeUnit": {
      "type": "string",
      "description": "The Volume Unit of measurement",
      "enum": [
        "Unspecified",
        "CubicMeter",
        "CubicCentimeter",
        "CubicMillimeter",
        "Hectoliter",
        "Decaliter",
        "Liter",
        "Centiliter",
        "Milliliter",
        "CubicYard",
        "CubicInch",
        "CubicFoot",
        "CubicMile",
        "FluidOunce",
        "Teaspoon",
        "Tablespoon",
        "Pint",
        "Quart",
        "Cup",
        "Gill",
        "Pinch",
        "FluidDram",
        "Barrel",
        "Minim",
        "Cord",
        "Peck",
        "Bushel",
        "Hogshead"
      ],
      "x-ms-enum": {
        "name": "VolumeUnit",
        "modelAsString": true,
        "values": [
          {
            "name": "Unspecified",
            "value": "Unspecified",
            "description": "Unspecified volume unit."
          },
          {
            "name": "CubicMeter",
            "value": "CubicMeter",
            "description": "Volume unit in cubic meters."
          },
          {
            "name": "CubicCentimeter",
            "value": "CubicCentimeter",
            "description": "Volume unit in cubic centimeters."
          },
          {
            "name": "CubicMillimeter",
            "value": "CubicMillimeter",
            "description": "Volume unit in cubic millimeters."
          },
          {
            "name": "Hectoliter",
            "value": "Hectoliter",
            "description": "Volume unit in hectoliters."
          },
          {
            "name": "Decaliter",
            "value": "Decaliter",
            "description": "Volume unit in decaliters."
          },
          {
            "name": "Liter",
            "value": "Liter",
            "description": "Volume unit in liters."
          },
          {
            "name": "Centiliter",
            "value": "Centiliter",
            "description": "Volume unit in centiliters."
          },
          {
            "name": "Milliliter",
            "value": "Milliliter",
            "description": "Volume unit in milliliters."
          },
          {
            "name": "CubicYard",
            "value": "CubicYard",
            "description": "Volume unit in cubic yards."
          },
          {
            "name": "CubicInch",
            "value": "CubicInch",
            "description": "Volume unit in cubic inches."
          },
          {
            "name": "CubicFoot",
            "value": "CubicFoot",
            "description": "Volume unit in cubic feet."
          },
          {
            "name": "CubicMile",
            "value": "CubicMile",
            "description": "Volume unit in cubic miles."
          },
          {
            "name": "FluidOunce",
            "value": "FluidOunce",
            "description": "Volume unit in fluid ounces."
          },
          {
            "name": "Teaspoon",
            "value": "Teaspoon",
            "description": "Volume unit in teaspoons."
          },
          {
            "name": "Tablespoon",
            "value": "Tablespoon",
            "description": "Volume unit in tablespoons."
          },
          {
            "name": "Pint",
            "value": "Pint",
            "description": "Volume unit in pints."
          },
          {
            "name": "Quart",
            "value": "Quart",
            "description": "Volume unit in quarts."
          },
          {
            "name": "Cup",
            "value": "Cup",
            "description": "Volume unit in cups."
          },
          {
            "name": "Gill",
            "value": "Gill",
            "description": "Volume unit in gills."
          },
          {
            "name": "Pinch",
            "value": "Pinch",
            "description": "Volume unit in pinches."
          },
          {
            "name": "FluidDram",
            "value": "FluidDram",
            "description": "Volume unit in fluid drams."
          },
          {
            "name": "Barrel",
            "value": "Barrel",
            "description": "Volume unit in barrels."
          },
          {
            "name": "Minim",
            "value": "Minim",
            "description": "Volume unit in minims."
          },
          {
            "name": "Cord",
            "value": "Cord",
            "description": "Volume unit in cords."
          },
          {
            "name": "Peck",
            "value": "Peck",
            "description": "Volume unit in pecks."
          },
          {
            "name": "Bushel",
            "value": "Bushel",
            "description": "Volume unit in bushels."
          },
          {
            "name": "Hogshead",
            "value": "Hogshead",
            "description": "Volume unit in hogsheads."
          }
        ]
      }
    },
    "WarningCodeValue": {
      "type": "string",
      "description": "Defines the list of the warning codes.",
      "enum": [
        "LongWordsInDocument",
        "DocumentTruncated"
      ],
      "x-ms-enum": {
        "name": "WarningCodeValue",
        "modelAsString": true,
        "values": [
          {
            "name": "LongWordsInDocument",
            "value": "LongWordsInDocument",
            "description": "Long words in document warning"
          },
          {
            "name": "DocumentTruncated",
            "value": "DocumentTruncated",
            "description": "Document truncated warning"
          }
        ]
      }
    },
    "WeightMetadata": {
      "type": "object",
      "description": "Represents the Weight ) entity Metadata model.",
      "properties": {
        "value": {
          "type": "number",
          "format": "double",
          "description": "The numeric value that the extracted text denotes."
        },
        "unit": {
          "$ref": "#/definitions/WeightUnit",
          "description": "Unit of measure for weight."
        }
      },
      "required": [
        "value",
        "unit"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseMetadata"
        }
      ],
      "x-ms-discriminator-value": "WeightMetadata"
    },
    "WeightUnit": {
      "type": "string",
      "description": "The weight Unit of measurement.",
      "enum": [
        "Unspecified",
        "Kilogram",
        "Gram",
        "Milligram",
        "Gallon",
        "MetricTon",
        "Ton",
        "Pound",
        "Ounce",
        "Grain",
        "PennyWeight",
        "LongTonBritish",
        "ShortTonUS",
        "ShortHundredWeightUS",
        "Stone",
        "Dram"
      ],
      "x-ms-enum": {
        "name": "WeightUnit",
        "modelAsString": true,
        "values": [
          {
            "name": "Unspecified",
            "value": "Unspecified",
            "description": "Unspecified weight unit"
          },
          {
            "name": "Kilogram",
            "value": "Kilogram",
            "description": "Weight unit in kilograms"
          },
          {
            "name": "Gram",
            "value": "Gram",
            "description": "Weight unit in grams"
          },
          {
            "name": "Milligram",
            "value": "Milligram",
            "description": "Weight unit in milligrams"
          },
          {
            "name": "Gallon",
            "value": "Gallon",
            "description": "Volume unit in gallons"
          },
          {
            "name": "MetricTon",
            "value": "MetricTon",
            "description": "Weight unit in metric tons"
          },
          {
            "name": "Ton",
            "value": "Ton",
            "description": "Weight unit in tons"
          },
          {
            "name": "Pound",
            "value": "Pound",
            "description": "Weight unit in pounds"
          },
          {
            "name": "Ounce",
            "value": "Ounce",
            "description": "Weight unit in ounces"
          },
          {
            "name": "Grain",
            "value": "Grain",
            "description": "Weight unit in grains"
          },
          {
            "name": "PennyWeight",
            "value": "PennyWeight",
            "description": "Weight unit in pennyweights"
          },
          {
            "name": "LongTonBritish",
            "value": "LongTonBritish",
            "description": "Weight unit in long tons (British)"
          },
          {
            "name": "ShortTonUS",
            "value": "ShortTonUS",
            "description": "Weight unit in short tons (US)"
          },
          {
            "name": "ShortHundredWeightUS",
            "value": "ShortHundredWeightUS",
            "description": "Weight unit in short hundredweights (US)"
          },
          {
            "name": "Stone",
            "value": "Stone",
            "description": "Weight unit in stones"
          },
          {
            "name": "Dram",
            "value": "Dram",
            "description": "Weight unit in drams"
          }
        ]
      }
    },
    "entityComponentKind": {
      "type": "string",
      "description": "Kind of entity components supported.",
      "enum": [
        "PrebuiltComponent",
        "LearnedComponent",
        "ListComponent"
      ],
      "x-ms-enum": {
        "name": "entityComponentKind",
        "modelAsString": true,
        "values": [
          {
            "name": "PrebuiltComponent",
            "value": "PrebuiltComponent",
            "description": "Prebuilt component"
          },
          {
            "name": "LearnedComponent",
            "value": "LearnedComponent",
            "description": "Learned component"
          },
          {
            "name": "ListComponent",
            "value": "ListComponent",
            "description": "List component"
          }
        ]
      }
    },
    "fhirVersion": {
      "type": "string",
      "description": "The FHIR Spec version.",
      "enum": [
        "4.0.1"
      ],
      "x-ms-enum": {
        "name": "fhirVersion",
        "modelAsString": true,
        "values": [
          {
            "name": "4.0.1",
            "value": "4.0.1",
            "description": "Version 4.0.1"
          }
        ]
      }
    },
    "healthcareDocumentType": {
      "type": "string",
      "description": "Document type.",
      "enum": [
        "None",
        "ClinicalTrial",
        "DischargeSummary",
        "ProgressNote",
        "HistoryAndPhysical",
        "Consult",
        "Imaging",
        "Pathology",
        "ProcedureNote"
      ],
      "x-ms-enum": {
        "name": "healthcareDocumentType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "None document type"
          },
          {
            "name": "ClinicalTrial",
            "value": "ClinicalTrial",
            "description": "Clinical trial document type"
          },
          {
            "name": "DischargeSummary",
            "value": "DischargeSummary",
            "description": "Discharge summary document type"
          },
          {
            "name": "ProgressNote",
            "value": "ProgressNote",
            "description": "Progress note document type"
          },
          {
            "name": "HistoryAndPhysical",
            "value": "HistoryAndPhysical",
            "description": "History and physical document type"
          },
          {
            "name": "Consult",
            "value": "Consult",
            "description": "Consult document type"
          },
          {
            "name": "Imaging",
            "value": "Imaging",
            "description": "Imaging document type"
          },
          {
            "name": "Pathology",
            "value": "Pathology",
            "description": "Pathology document type"
          },
          {
            "name": "ProcedureNote",
            "value": "ProcedureNote",
            "description": "Procedure note document type"
          }
        ]
      }
    },
    "healthcareEntityCategory": {
      "type": "string",
      "description": "Healthcare Entity Category.",
      "enum": [
        "BodyStructure",
        "Age",
        "Gender",
        "ExaminationName",
        "Date",
        "Direction",
        "Frequency",
        "MeasurementValue",
        "MeasurementUnit",
        "RelationalOperator",
        "Time",
        "GeneOrProtein",
        "Variant",
        "AdministrativeEvent",
        "CareEnvironment",
        "HealthcareProfession",
        "Diagnosis",
        "SymptomOrSign",
        "ConditionQualifier",
        "MedicationClass",
        "MedicationName",
        "Dosage",
        "MedicationForm",
        "MedicationRoute",
        "FamilyRelation",
        "TreatmentName",
        "Ethnicity",
        "Course",
        "Expression",
        "MutationType",
        "ConditionScale",
        "Allergen",
        "Employment",
        "LivingStatus",
        "SubstanceUse",
        "SubstanceUseAmount"
      ],
      "x-ms-enum": {
        "name": "healthcareEntityCategory",
        "modelAsString": true,
        "values": [
          {
            "name": "BodyStructure",
            "value": "BodyStructure",
            "description": "Body structure"
          },
          {
            "name": "Age",
            "value": "Age",
            "description": "Age"
          },
          {
            "name": "Gender",
            "value": "Gender",
            "description": "Gender"
          },
          {
            "name": "ExaminationName",
            "value": "ExaminationName",
            "description": "Examination name"
          },
          {
            "name": "Date",
            "value": "Date",
            "description": "Date"
          },
          {
            "name": "Direction",
            "value": "Direction",
            "description": "Direction"
          },
          {
            "name": "Frequency",
            "value": "Frequency",
            "description": "Frequency"
          },
          {
            "name": "MeasurementValue",
            "value": "MeasurementValue",
            "description": "Measurement value"
          },
          {
            "name": "MeasurementUnit",
            "value": "MeasurementUnit",
            "description": "Measurement unit"
          },
          {
            "name": "RelationalOperator",
            "value": "RelationalOperator",
            "description": "Relational operator"
          },
          {
            "name": "Time",
            "value": "Time",
            "description": "Time"
          },
          {
            "name": "GeneOrProtein",
            "value": "GeneOrProtein",
            "description": "Gene or protein"
          },
          {
            "name": "Variant",
            "value": "Variant",
            "description": "Variant"
          },
          {
            "name": "AdministrativeEvent",
            "value": "AdministrativeEvent",
            "description": "Administrative event"
          },
          {
            "name": "CareEnvironment",
            "value": "CareEnvironment",
            "description": "Care environment"
          },
          {
            "name": "HealthcareProfession",
            "value": "HealthcareProfession",
            "description": "Healthcare profession"
          },
          {
            "name": "Diagnosis",
            "value": "Diagnosis",
            "description": "Diagnosis"
          },
          {
            "name": "SymptomOrSign",
            "value": "SymptomOrSign",
            "description": "Symptom or sign"
          },
          {
            "name": "ConditionQualifier",
            "value": "ConditionQualifier",
            "description": "Condition qualifier"
          },
          {
            "name": "MedicationClass",
            "value": "MedicationClass",
            "description": "Medication class"
          },
          {
            "name": "MedicationName",
            "value": "MedicationName",
            "description": "Medication name"
          },
          {
            "name": "Dosage",
            "value": "Dosage",
            "description": "Dosage"
          },
          {
            "name": "MedicationForm",
            "value": "MedicationForm",
            "description": "Medication form"
          },
          {
            "name": "MedicationRoute",
            "value": "MedicationRoute",
            "description": "Medication route"
          },
          {
            "name": "FamilyRelation",
            "value": "FamilyRelation",
            "description": "Family relation"
          },
          {
            "name": "TreatmentName",
            "value": "TreatmentName",
            "description": "Treatment name"
          },
          {
            "name": "Ethnicity",
            "value": "Ethnicity",
            "description": "Ethnicity"
          },
          {
            "name": "Course",
            "value": "Course",
            "description": "Course"
          },
          {
            "name": "Expression",
            "value": "Expression",
            "description": "Expression"
          },
          {
            "name": "MutationType",
            "value": "MutationType",
            "description": "Mutation type"
          },
          {
            "name": "ConditionScale",
            "value": "ConditionScale",
            "description": "Condition scale"
          },
          {
            "name": "Allergen",
            "value": "Allergen",
            "description": "Allergen"
          },
          {
            "name": "Employment",
            "value": "Employment",
            "description": "Employment"
          },
          {
            "name": "LivingStatus",
            "value": "LivingStatus",
            "description": "Living status"
          },
          {
            "name": "SubstanceUse",
            "value": "SubstanceUse",
            "description": "Substance use"
          },
          {
            "name": "SubstanceUseAmount",
            "value": "SubstanceUseAmount",
            "description": "Substance use amount"
          }
        ]
      }
    },
    "relationType": {
      "type": "string",
      "description": "Type of relation. Examples include: `DosageOfMedication` or 'FrequencyOfMedication', etc.",
      "enum": [
        "Abbreviation",
        "DirectionOfBodyStructure",
        "DirectionOfCondition",
        "DirectionOfExamination",
        "DirectionOfTreatment",
        "DosageOfMedication",
        "FormOfMedication",
        "FrequencyOfMedication",
        "FrequencyOfTreatment",
        "QualifierOfCondition",
        "RelationOfExamination",
        "RouteOfMedication",
        "TimeOfCondition",
        "TimeOfEvent",
        "TimeOfExamination",
        "TimeOfMedication",
        "TimeOfTreatment",
        "UnitOfCondition",
        "UnitOfExamination",
        "ValueOfCondition",
        "ValueOfExamination",
        "BodySiteOfCondition",
        "BodySiteOfTreatment",
        "CourseOfCondition",
        "CourseOfExamination",
        "CourseOfMedication",
        "CourseOfTreatment",
        "ExaminationFindsCondition",
        "ExpressionOfGene",
        "ExpressionOfVariant",
        "FrequencyOfCondition",
        "MutationTypeOfGene",
        "MutationTypeOfVariant",
        "ScaleOfCondition",
        "VariantOfGene"
      ],
      "x-ms-enum": {
        "name": "relationType",
        "modelAsString": true,
        "values": [
          {
            "name": "Abbreviation",
            "value": "Abbreviation",
            "description": "Abbreviation"
          },
          {
            "name": "DirectionOfBodyStructure",
            "value": "DirectionOfBodyStructure",
            "description": "Direction of body structure"
          },
          {
            "name": "DirectionOfCondition",
            "value": "DirectionOfCondition",
            "description": "Direction of condition"
          },
          {
            "name": "DirectionOfExamination",
            "value": "DirectionOfExamination",
            "description": "Direction of examination"
          },
          {
            "name": "DirectionOfTreatment",
            "value": "DirectionOfTreatment",
            "description": "Direction of treatment"
          },
          {
            "name": "DosageOfMedication",
            "value": "DosageOfMedication",
            "description": "Dosage of medication"
          },
          {
            "name": "FormOfMedication",
            "value": "FormOfMedication",
            "description": "Form of medication"
          },
          {
            "name": "FrequencyOfMedication",
            "value": "FrequencyOfMedication",
            "description": "Frequency of medication"
          },
          {
            "name": "FrequencyOfTreatment",
            "value": "FrequencyOfTreatment",
            "description": "Frequency of treatment"
          },
          {
            "name": "QualifierOfCondition",
            "value": "QualifierOfCondition",
            "description": "Qualifier of condition"
          },
          {
            "name": "RelationOfExamination",
            "value": "RelationOfExamination",
            "description": "Relation of examination"
          },
          {
            "name": "RouteOfMedication",
            "value": "RouteOfMedication",
            "description": "Route of medication"
          },
          {
            "name": "TimeOfCondition",
            "value": "TimeOfCondition",
            "description": "Time of condition"
          },
          {
            "name": "TimeOfEvent",
            "value": "TimeOfEvent",
            "description": "Time of event"
          },
          {
            "name": "TimeOfExamination",
            "value": "TimeOfExamination",
            "description": "Time of examination"
          },
          {
            "name": "TimeOfMedication",
            "value": "TimeOfMedication",
            "description": "Time of medication"
          },
          {
            "name": "TimeOfTreatment",
            "value": "TimeOfTreatment",
            "description": "Time of treatment"
          },
          {
            "name": "UnitOfCondition",
            "value": "UnitOfCondition",
            "description": "Unit of condition"
          },
          {
            "name": "UnitOfExamination",
            "value": "UnitOfExamination",
            "description": "Unit of examination"
          },
          {
            "name": "ValueOfCondition",
            "value": "ValueOfCondition",
            "description": "Value of condition"
          },
          {
            "name": "ValueOfExamination",
            "value": "ValueOfExamination",
            "description": "Value of examination"
          },
          {
            "name": "BodySiteOfCondition",
            "value": "BodySiteOfCondition",
            "description": "Body site of condition"
          },
          {
            "name": "BodySiteOfTreatment",
            "value": "BodySiteOfTreatment",
            "description": "Body site of treatment"
          },
          {
            "name": "CourseOfCondition",
            "value": "CourseOfCondition",
            "description": "Course of condition"
          },
          {
            "name": "CourseOfExamination",
            "value": "CourseOfExamination",
            "description": "Course of examination"
          },
          {
            "name": "CourseOfMedication",
            "value": "CourseOfMedication",
            "description": "Course of medication"
          },
          {
            "name": "CourseOfTreatment",
            "value": "CourseOfTreatment",
            "description": "Course of treatment"
          },
          {
            "name": "ExaminationFindsCondition",
            "value": "ExaminationFindsCondition",
            "description": "Examination finds condition"
          },
          {
            "name": "ExpressionOfGene",
            "value": "ExpressionOfGene",
            "description": "Expression of gene"
          },
          {
            "name": "ExpressionOfVariant",
            "value": "ExpressionOfVariant",
            "description": "Expression of variant"
          },
          {
            "name": "FrequencyOfCondition",
            "value": "FrequencyOfCondition",
            "description": "Frequency of condition"
          },
          {
            "name": "MutationTypeOfGene",
            "value": "MutationTypeOfGene",
            "description": "Mutation type of gene"
          },
          {
            "name": "MutationTypeOfVariant",
            "value": "MutationTypeOfVariant",
            "description": "Mutation type of variant"
          },
          {
            "name": "ScaleOfCondition",
            "value": "ScaleOfCondition",
            "description": "Scale of condition"
          },
          {
            "name": "VariantOfGene",
            "value": "VariantOfGene",
            "description": "Variant of gene"
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
