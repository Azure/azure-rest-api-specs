{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft Cognitive Language Service - Analyze Conversations",
    "version": "2022-05-01",
    "description": "The language service conversations API is a suite of natural language processing (NLP) skills that can be used to analyze structured conversations (textual or spoken). The synchronous API in this suite accepts a request and mediates among multiple language projects, such as LUIS Generally Available, Question Answering, Conversational Language Understanding, and then calls the best candidate service to handle the request. At last, it returns a response with the candidate service's response as a payload.\n\n In some cases, this API needs to forward requests and responses between the caller and an upstream service. The asynchronous APIs in this suite enable tasks like Conversation Summarization and Conversational PII detection.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{Endpoint}/language",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "Endpoint",
        "in": "path",
        "description": "Supported Cognitive Services endpoint (e.g., https://<resource-name>.api.cognitiveservices.azure.com).",
        "required": true,
        "type": "string"
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    }
  },
  "tags": [],
  "paths": {
    "/:analyze-conversations": {
      "post": {
        "operationId": "AnalyzeConversations",
        "description": "Analyzes the input conversation utterance.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyzeConversationTask"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AnalyzeConversationTaskResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseWithHeader"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "The error code for specific error that occurred."
              }
            }
          }
        },
        "x-ms-examples": {
          "SuccessfulAnalyzeConversations": {
            "$ref": "./examples/SuccessfulAnalyzeConversations.json"
          },
          "SuccessfulAnalyzeConversationsArbitration": {
            "$ref": "./examples/SuccessfulAnalyzeConversationsArbitration.json"
          },
          "SuccessfulAnalyzeConversationsArbitrationDirectTarget": {
            "$ref": "./examples/SuccessfulAnalyzeConversationsArbitrationDirectTarget.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AgeResolution": {
      "type": "object",
      "description": "Represents the Age entity resolution model.",
      "properties": {
        "value": {
          "type": "number",
          "format": "double",
          "description": "The numeric value that the extracted text denotes."
        },
        "unit": {
          "$ref": "#/definitions/AgeUnit",
          "description": "The Age Unit of measurement"
        }
      },
      "required": [
        "value",
        "unit"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "x-ms-discriminator-value": "AgeResolution"
    },
    "AgeUnit": {
      "type": "string",
      "description": "The Age Unit of measurement",
      "enum": [
        "Unspecified",
        "Year",
        "Month",
        "Week",
        "Day"
      ],
      "x-ms-enum": {
        "name": "AgeUnit",
        "modelAsString": true,
        "values": [
          {
            "name": "Unspecified",
            "value": "Unspecified"
          },
          {
            "name": "Year",
            "value": "Year"
          },
          {
            "name": "Month",
            "value": "Month"
          },
          {
            "name": "Week",
            "value": "Week"
          },
          {
            "name": "Day",
            "value": "Day"
          }
        ]
      }
    },
    "AnalysisParameters": {
      "type": "object",
      "description": "This is the parameter set of either the Orchestration project itself or one of the target services.",
      "properties": {
        "targetProjectKind": {
          "$ref": "#/definitions/targetProjectKind",
          "description": "The type of a target service"
        },
        "apiVersion": {
          "type": "string",
          "description": "The API version to use when call a specific target service."
        }
      },
      "discriminator": "targetProjectKind",
      "required": [
        "targetProjectKind"
      ]
    },
    "AnalyzeConversationResult": {
      "type": "object",
      "description": "Represents a conversation analysis response.",
      "properties": {
        "query": {
          "type": "string",
          "description": "The conversation utterance given by the caller."
        },
        "detectedLanguage": {
          "type": "string",
          "description": "The system detected language for the query in BCP 47 language representation.."
        },
        "prediction": {
          "$ref": "#/definitions/BasePrediction",
          "description": "The prediction result of a conversation project."
        }
      },
      "required": [
        "query",
        "prediction"
      ]
    },
    "AnalyzeConversationTask": {
      "type": "object",
      "description": "The base class of a conversation input task.",
      "properties": {
        "kind": {
          "$ref": "#/definitions/AnalyzeConversationTaskKind",
          "description": "The base class of a conversation input task.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ]
    },
    "AnalyzeConversationTaskKind": {
      "type": "string",
      "description": "Enumeration of supported Conversation tasks.",
      "enum": [
        "Conversation"
      ],
      "x-ms-enum": {
        "name": "AnalyzeConversationTaskKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Conversation",
            "value": "Conversation"
          }
        ]
      }
    },
    "AnalyzeConversationTaskResult": {
      "type": "object",
      "description": "The base class of a conversation input task result.",
      "properties": {
        "kind": {
          "$ref": "#/definitions/AnalyzeConversationTaskResultsKind",
          "description": "The base class of a conversation input task result."
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ]
    },
    "AnalyzeConversationTaskResultsKind": {
      "type": "string",
      "description": "Enumeration of supported conversational task results.",
      "enum": [
        "ConversationResult"
      ],
      "x-ms-enum": {
        "name": "AnalyzeConversationTaskResultsKind",
        "modelAsString": true,
        "values": [
          {
            "name": "ConversationResult",
            "value": "ConversationResult"
          }
        ]
      }
    },
    "AreaResolution": {
      "type": "object",
      "description": "Represents the area entity resolution model.",
      "properties": {
        "value": {
          "type": "number",
          "format": "double",
          "description": "The numeric value that the extracted text denotes."
        },
        "unit": {
          "$ref": "#/definitions/AreaUnit",
          "description": "The area Unit of measurement"
        }
      },
      "required": [
        "value",
        "unit"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "x-ms-discriminator-value": "AreaResolution"
    },
    "AreaUnit": {
      "type": "string",
      "description": "The area unit of measurement.",
      "enum": [
        "Unspecified",
        "SquareKilometer",
        "SquareHectometer",
        "SquareDecameter",
        "SquareDecimeter",
        "SquareMeter",
        "SquareCentimeter",
        "SquareMillimeter",
        "SquareInch",
        "SquareFoot",
        "SquareMile",
        "SquareYard",
        "Acre"
      ],
      "x-ms-enum": {
        "name": "AreaUnit",
        "modelAsString": true,
        "values": [
          {
            "name": "Unspecified",
            "value": "Unspecified"
          },
          {
            "name": "SquareKilometer",
            "value": "SquareKilometer"
          },
          {
            "name": "SquareHectometer",
            "value": "SquareHectometer"
          },
          {
            "name": "SquareDecameter",
            "value": "SquareDecameter"
          },
          {
            "name": "SquareDecimeter",
            "value": "SquareDecimeter"
          },
          {
            "name": "SquareMeter",
            "value": "SquareMeter"
          },
          {
            "name": "SquareCentimeter",
            "value": "SquareCentimeter"
          },
          {
            "name": "SquareMillimeter",
            "value": "SquareMillimeter"
          },
          {
            "name": "SquareInch",
            "value": "SquareInch"
          },
          {
            "name": "SquareFoot",
            "value": "SquareFoot"
          },
          {
            "name": "SquareMile",
            "value": "SquareMile"
          },
          {
            "name": "SquareYard",
            "value": "SquareYard"
          },
          {
            "name": "Acre",
            "value": "Acre"
          }
        ]
      }
    },
    "BaseExtraInformation": {
      "type": "object",
      "description": "The abstract base object for entity extra information.",
      "properties": {
        "extraInformationKind": {
          "$ref": "#/definitions/ExtraInformationKind",
          "description": "The extra information object kind."
        }
      },
      "discriminator": "extraInformationKind",
      "required": [
        "extraInformationKind"
      ]
    },
    "BasePrediction": {
      "type": "object",
      "description": "This is the base class of prediction",
      "properties": {
        "projectKind": {
          "$ref": "#/definitions/projectKind",
          "description": "The type of the project."
        },
        "topIntent": {
          "type": "string",
          "description": "The intent with the highest score."
        }
      },
      "discriminator": "projectKind",
      "required": [
        "projectKind"
      ]
    },
    "BaseResolution": {
      "type": "object",
      "description": "The abstract base class for entity resolutions.",
      "properties": {
        "resolutionKind": {
          "$ref": "#/definitions/ResolutionKind",
          "description": "The entity resolution object kind."
        }
      },
      "discriminator": "resolutionKind",
      "required": [
        "resolutionKind"
      ]
    },
    "BooleanResolution": {
      "type": "object",
      "description": "A resolution for boolean expressions",
      "properties": {
        "value": {
          "type": "boolean",
          "description": "A resolution for boolean expressions"
        }
      },
      "required": [
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "x-ms-discriminator-value": "BooleanResolution"
    },
    "ConversationAnalysisOptions": {
      "type": "object",
      "description": "The input ConversationItem and its optional parameters",
      "properties": {
        "conversationItem": {
          "$ref": "#/definitions/ConversationItemBase",
          "description": "The abstract base for a user input formatted conversation (e.g., Text, Transcript)."
        }
      },
      "required": [
        "conversationItem"
      ]
    },
    "ConversationCallingOptions": {
      "type": "object",
      "description": "The option to set to call a Conversation project.",
      "properties": {
        "language": {
          "type": "string",
          "description": "The language of the query in BCP 47 language representation."
        },
        "verbose": {
          "type": "boolean",
          "description": "If true, the service will return more detailed information."
        },
        "isLoggingEnabled": {
          "type": "boolean",
          "description": "If true, the query will be saved for customers to further review in authoring, to improve the model quality."
        }
      }
    },
    "ConversationEntity": {
      "type": "object",
      "description": "The entity extraction result of a Conversation project.",
      "properties": {
        "category": {
          "type": "string",
          "description": "The entity category."
        },
        "text": {
          "type": "string",
          "description": "The predicted entity text."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "The starting index of this entity in the query."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the text."
        },
        "confidenceScore": {
          "type": "number",
          "format": "float",
          "description": "The entity confidence score.",
          "x-ms-client-name": "confidence"
        },
        "resolutions": {
          "type": "array",
          "description": "The collection of entity resolution objects.",
          "items": {
            "$ref": "#/definitions/BaseResolution"
          },
          "x-ms-identifiers": []
        },
        "extraInformation": {
          "type": "array",
          "description": "The collection of entity extra information objects.",
          "items": {
            "$ref": "#/definitions/BaseExtraInformation"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "category",
        "text",
        "offset",
        "length",
        "confidenceScore"
      ]
    },
    "ConversationIntent": {
      "type": "object",
      "description": "The intent classification result of a Conversation project.",
      "properties": {
        "category": {
          "type": "string",
          "description": "A predicted class."
        },
        "confidenceScore": {
          "type": "number",
          "format": "float",
          "description": "The confidence score of the class from 0.0 to 1.0.",
          "minimum": 0,
          "maximum": 1,
          "x-ms-client-name": "confidence"
        }
      },
      "required": [
        "category",
        "confidenceScore"
      ]
    },
    "ConversationItemBase": {
      "type": "object",
      "description": "The abstract base for a user input formatted conversation (e.g., Text, Transcript).",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of a conversation item."
        },
        "participantId": {
          "type": "string",
          "description": "The participant ID of a conversation item."
        },
        "language": {
          "type": "string",
          "description": "The override language of a conversation item in BCP 47 language representation."
        },
        "modality": {
          "$ref": "#/definitions/InputModality",
          "description": "Enumeration of supported conversational modalities."
        }
      },
      "required": [
        "id",
        "participantId"
      ],
      "additionalProperties": {}
    },
    "ConversationParameters": {
      "type": "object",
      "description": "This is a set of request parameters for Customized Conversation projects.",
      "properties": {
        "callingOptions": {
          "$ref": "#/definitions/ConversationCallingOptions",
          "description": "The option to set to call a Conversation project."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalysisParameters"
        }
      ],
      "x-ms-discriminator-value": "Conversation"
    },
    "ConversationPrediction": {
      "type": "object",
      "description": "Represents the prediction section of a Conversation project.",
      "properties": {
        "intents": {
          "type": "array",
          "description": "The intent classification results.",
          "items": {
            "$ref": "#/definitions/ConversationIntent"
          },
          "x-ms-identifiers": []
        },
        "entities": {
          "type": "array",
          "description": "The entity extraction results.",
          "items": {
            "$ref": "#/definitions/ConversationEntity"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "intents",
        "entities"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BasePrediction"
        }
      ],
      "x-ms-discriminator-value": "Conversation"
    },
    "ConversationResult": {
      "type": "object",
      "description": "The response returned by a Conversation project.",
      "properties": {
        "query": {
          "type": "string",
          "description": "The same query given in request."
        },
        "detectedLanguage": {
          "type": "string",
          "description": "The detected language from the query in BCP 47 language representation."
        },
        "prediction": {
          "$ref": "#/definitions/ConversationPrediction",
          "description": "The predicted result for the query."
        }
      },
      "required": [
        "query"
      ]
    },
    "ConversationTargetIntentResult": {
      "type": "object",
      "description": "A wrap up of Conversation project response.",
      "properties": {
        "result": {
          "$ref": "#/definitions/ConversationResult",
          "description": "The actual response from a Conversation project."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TargetIntentResult"
        }
      ],
      "x-ms-discriminator-value": "Conversation"
    },
    "ConversationTaskParameters": {
      "type": "object",
      "description": "Input parameters necessary for a Conversation task.",
      "properties": {
        "projectName": {
          "type": "string",
          "description": "The name of the project to use."
        },
        "deploymentName": {
          "type": "string",
          "description": "The name of the deployment to use."
        },
        "verbose": {
          "type": "boolean",
          "description": "If true, the service will return more detailed information in the response."
        },
        "isLoggingEnabled": {
          "type": "boolean",
          "description": "If true, the service will keep the query for further review."
        },
        "stringIndexType": {
          "type": "string",
          "description": "Specifies the method used to interpret string offsets.  Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information see https://aka.ms/text-analytics-offsets.",
          "default": "TextElements_v8",
          "enum": [
            "TextElements_v8",
            "UnicodeCodePoint",
            "Utf16CodeUnit"
          ],
          "x-ms-enum": {
            "name": "StringIndexType",
            "modelAsString": true,
            "values": [
              {
                "name": "TextElements_v8",
                "value": "TextElements_v8",
                "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
              },
              {
                "name": "UnicodeCodePoint",
                "value": "UnicodeCodePoint",
                "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
              },
              {
                "name": "Utf16CodeUnit",
                "value": "Utf16CodeUnit",
                "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
              }
            ]
          }
        },
        "directTarget": {
          "type": "string",
          "description": "The name of a target project to forward the request to."
        },
        "targetProjectParameters": {
          "type": "object",
          "description": "A dictionary representing the parameters for each target project.",
          "additionalProperties": {
            "$ref": "#/definitions/AnalysisParameters"
          }
        }
      },
      "required": [
        "projectName",
        "deploymentName"
      ]
    },
    "ConversationalTask": {
      "type": "object",
      "description": "The input for a custom conversation task.",
      "properties": {
        "analysisInput": {
          "$ref": "#/definitions/ConversationAnalysisOptions",
          "description": "The input ConversationItem and its optional parameters"
        },
        "parameters": {
          "$ref": "#/definitions/ConversationTaskParameters",
          "description": "Input parameters necessary for a Conversation task."
        }
      },
      "required": [
        "analysisInput",
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeConversationTask"
        }
      ],
      "x-ms-discriminator-value": "Conversation"
    },
    "ConversationalTaskResult": {
      "type": "object",
      "description": "The results of a Conversation task.",
      "properties": {
        "result": {
          "$ref": "#/definitions/AnalyzeConversationResult",
          "description": "Represents a conversation analysis response."
        }
      },
      "required": [
        "result"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeConversationTaskResult"
        }
      ],
      "x-ms-discriminator-value": "ConversationResult"
    },
    "CurrencyResolution": {
      "type": "object",
      "description": "Represents the currency entity resolution model.",
      "properties": {
        "ISO4217": {
          "type": "string",
          "description": "The alphabetic code based on another ISO standard, ISO 3166, which lists the codes for country names. The first two letters of the ISO 4217 three-letter code are the same as the code for the country name, and, where possible, the third letter corresponds to the first letter of the currency name.",
          "x-ms-client-name": "iso4217"
        },
        "value": {
          "type": "number",
          "format": "double",
          "description": "The money amount captured in the extracted entity"
        },
        "unit": {
          "type": "string",
          "description": "The unit of the amount captured in the extracted entity"
        }
      },
      "required": [
        "value",
        "unit"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "x-ms-discriminator-value": "CurrencyResolution"
    },
    "DateTimeResolution": {
      "type": "object",
      "description": "A resolution for datetime entity instances.",
      "properties": {
        "timex": {
          "type": "string",
          "description": "An extended ISO 8601 date/time representation as described in (https://github.com/Microsoft/Recognizers-Text/blob/master/Patterns/English/English-DateTime.yaml)"
        },
        "dateTimeSubKind": {
          "$ref": "#/definitions/DateTimeSubKind",
          "description": "The DateTime SubKind"
        },
        "value": {
          "type": "string",
          "description": "The actual time that the extracted text denote."
        },
        "modifier": {
          "$ref": "#/definitions/TemporalModifier",
          "description": "An optional modifier of a date/time instance."
        }
      },
      "required": [
        "timex",
        "dateTimeSubKind",
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "x-ms-discriminator-value": "DateTimeResolution"
    },
    "DateTimeSubKind": {
      "type": "string",
      "description": "The Datetime SubKind.",
      "enum": [
        "Time",
        "Date",
        "DateTime",
        "Duration",
        "Set"
      ],
      "x-ms-enum": {
        "name": "DateTimeSubKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Time",
            "value": "Time"
          },
          {
            "name": "Date",
            "value": "Date"
          },
          {
            "name": "DateTime",
            "value": "DateTime"
          },
          {
            "name": "Duration",
            "value": "Duration"
          },
          {
            "name": "Set",
            "value": "Set"
          }
        ]
      }
    },
    "EntitySubtype": {
      "type": "object",
      "description": "The concrete entity Subtype model of extra information.",
      "properties": {
        "value": {
          "type": "string",
          "description": "The Subtype of an extracted entity type."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseExtraInformation"
        }
      ],
      "x-ms-discriminator-value": "EntitySubtype"
    },
    "Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "$ref": "#/definitions/ErrorCode",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/InnerErrorModel",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "ErrorCode": {
      "type": "string",
      "description": "Human-readable error code.",
      "enum": [
        "InvalidRequest",
        "InvalidArgument",
        "Unauthorized",
        "Forbidden",
        "NotFound",
        "ProjectNotFound",
        "OperationNotFound",
        "AzureCognitiveSearchNotFound",
        "AzureCognitiveSearchIndexNotFound",
        "TooManyRequests",
        "AzureCognitiveSearchThrottling",
        "AzureCognitiveSearchIndexLimitReached",
        "InternalServerError",
        "ServiceUnavailable",
        "Timeout",
        "QuotaExceeded",
        "Conflict",
        "Warning"
      ],
      "x-ms-enum": {
        "name": "ErrorCode",
        "modelAsString": true,
        "values": [
          {
            "name": "InvalidRequest",
            "value": "InvalidRequest"
          },
          {
            "name": "InvalidArgument",
            "value": "InvalidArgument"
          },
          {
            "name": "Unauthorized",
            "value": "Unauthorized"
          },
          {
            "name": "Forbidden",
            "value": "Forbidden"
          },
          {
            "name": "NotFound",
            "value": "NotFound"
          },
          {
            "name": "ProjectNotFound",
            "value": "ProjectNotFound"
          },
          {
            "name": "OperationNotFound",
            "value": "OperationNotFound"
          },
          {
            "name": "AzureCognitiveSearchNotFound",
            "value": "AzureCognitiveSearchNotFound"
          },
          {
            "name": "AzureCognitiveSearchIndexNotFound",
            "value": "AzureCognitiveSearchIndexNotFound"
          },
          {
            "name": "TooManyRequests",
            "value": "TooManyRequests"
          },
          {
            "name": "AzureCognitiveSearchThrottling",
            "value": "AzureCognitiveSearchThrottling"
          },
          {
            "name": "AzureCognitiveSearchIndexLimitReached",
            "value": "AzureCognitiveSearchIndexLimitReached"
          },
          {
            "name": "InternalServerError",
            "value": "InternalServerError"
          },
          {
            "name": "ServiceUnavailable",
            "value": "ServiceUnavailable"
          },
          {
            "name": "Timeout",
            "value": "Timeout"
          },
          {
            "name": "QuotaExceeded",
            "value": "QuotaExceeded"
          },
          {
            "name": "Conflict",
            "value": "Conflict"
          },
          {
            "name": "Warning",
            "value": "Warning"
          }
        ]
      }
    },
    "ErrorResponseWithHeader": {
      "type": "object",
      "description": "Error response.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "ExtraInformationKind": {
      "type": "string",
      "description": "The extra information object kind.",
      "enum": [
        "EntitySubtype",
        "ListKey"
      ],
      "x-ms-enum": {
        "name": "ExtraInformationKind",
        "modelAsString": true,
        "values": [
          {
            "name": "EntitySubtype",
            "value": "EntitySubtype"
          },
          {
            "name": "ListKey",
            "value": "ListKey"
          }
        ]
      }
    },
    "InformationResolution": {
      "type": "object",
      "description": "Represents the information (data) entity resolution model.",
      "properties": {
        "value": {
          "type": "number",
          "format": "double",
          "description": "The numeric value that the extracted text denotes."
        },
        "unit": {
          "$ref": "#/definitions/InformationUnit",
          "description": "The information (data) Unit of measurement."
        }
      },
      "required": [
        "value",
        "unit"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "x-ms-discriminator-value": "InformationResolution"
    },
    "InformationUnit": {
      "type": "string",
      "description": "The information (data) Unit of measurement.",
      "enum": [
        "Unspecified",
        "Bit",
        "Kilobit",
        "Megabit",
        "Gigabit",
        "Terabit",
        "Petabit",
        "Byte",
        "Kilobyte",
        "Megabyte",
        "Gigabyte",
        "Terabyte",
        "Petabyte"
      ],
      "x-ms-enum": {
        "name": "InformationUnit",
        "modelAsString": true,
        "values": [
          {
            "name": "Unspecified",
            "value": "Unspecified"
          },
          {
            "name": "Bit",
            "value": "Bit"
          },
          {
            "name": "Kilobit",
            "value": "Kilobit"
          },
          {
            "name": "Megabit",
            "value": "Megabit"
          },
          {
            "name": "Gigabit",
            "value": "Gigabit"
          },
          {
            "name": "Terabit",
            "value": "Terabit"
          },
          {
            "name": "Petabit",
            "value": "Petabit"
          },
          {
            "name": "Byte",
            "value": "Byte"
          },
          {
            "name": "Kilobyte",
            "value": "Kilobyte"
          },
          {
            "name": "Megabyte",
            "value": "Megabyte"
          },
          {
            "name": "Gigabyte",
            "value": "Gigabyte"
          },
          {
            "name": "Terabyte",
            "value": "Terabyte"
          },
          {
            "name": "Petabyte",
            "value": "Petabyte"
          }
        ]
      }
    },
    "InnerErrorCode": {
      "type": "string",
      "description": "Human-readable error code.",
      "enum": [
        "InvalidRequest",
        "InvalidParameterValue",
        "KnowledgeBaseNotFound",
        "AzureCognitiveSearchNotFound",
        "AzureCognitiveSearchThrottling",
        "ExtractionFailure",
        "InvalidRequestBodyFormat",
        "EmptyRequest",
        "MissingInputDocuments",
        "InvalidDocument",
        "ModelVersionIncorrect",
        "InvalidDocumentBatch",
        "UnsupportedLanguageCode",
        "InvalidCountryHint"
      ],
      "x-ms-enum": {
        "name": "InnerErrorCode",
        "modelAsString": true,
        "values": [
          {
            "name": "InvalidRequest",
            "value": "InvalidRequest"
          },
          {
            "name": "InvalidParameterValue",
            "value": "InvalidParameterValue"
          },
          {
            "name": "KnowledgeBaseNotFound",
            "value": "KnowledgeBaseNotFound"
          },
          {
            "name": "AzureCognitiveSearchNotFound",
            "value": "AzureCognitiveSearchNotFound"
          },
          {
            "name": "AzureCognitiveSearchThrottling",
            "value": "AzureCognitiveSearchThrottling"
          },
          {
            "name": "ExtractionFailure",
            "value": "ExtractionFailure"
          },
          {
            "name": "InvalidRequestBodyFormat",
            "value": "InvalidRequestBodyFormat"
          },
          {
            "name": "EmptyRequest",
            "value": "EmptyRequest"
          },
          {
            "name": "MissingInputDocuments",
            "value": "MissingInputDocuments"
          },
          {
            "name": "InvalidDocument",
            "value": "InvalidDocument"
          },
          {
            "name": "ModelVersionIncorrect",
            "value": "ModelVersionIncorrect"
          },
          {
            "name": "InvalidDocumentBatch",
            "value": "InvalidDocumentBatch"
          },
          {
            "name": "UnsupportedLanguageCode",
            "value": "UnsupportedLanguageCode"
          },
          {
            "name": "InvalidCountryHint",
            "value": "InvalidCountryHint"
          }
        ]
      }
    },
    "InnerErrorModel": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "$ref": "#/definitions/InnerErrorCode",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "details": {
          "type": "object",
          "description": "Error details.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "target": {
          "type": "string",
          "description": "Error target."
        },
        "innererror": {
          "$ref": "#/definitions/InnerErrorModel",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "InputModality": {
      "type": "string",
      "description": "Enumeration of supported conversational modalities.",
      "enum": [
        "transcript",
        "text"
      ],
      "x-ms-enum": {
        "name": "InputModality",
        "modelAsString": true,
        "values": [
          {
            "name": "transcript",
            "value": "transcript"
          },
          {
            "name": "text",
            "value": "text"
          }
        ]
      }
    },
    "LengthResolution": {
      "type": "object",
      "description": "Represents the length entity resolution model.",
      "properties": {
        "value": {
          "type": "number",
          "format": "double",
          "description": "The numeric value that the extracted text denotes."
        },
        "unit": {
          "$ref": "#/definitions/LengthUnit",
          "description": "The length Unit of measurement"
        }
      },
      "required": [
        "value",
        "unit"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "x-ms-discriminator-value": "LengthResolution"
    },
    "LengthUnit": {
      "type": "string",
      "description": "The length unit of measurement.",
      "enum": [
        "Unspecified",
        "Kilometer",
        "Hectometer",
        "Decameter",
        "Meter",
        "Decimeter",
        "Centimeter",
        "Millimeter",
        "Micrometer",
        "Nanometer",
        "Picometer",
        "Mile",
        "Yard",
        "Inch",
        "Foot",
        "LightYear",
        "Pt"
      ],
      "x-ms-enum": {
        "name": "LengthUnit",
        "modelAsString": true,
        "values": [
          {
            "name": "Unspecified",
            "value": "Unspecified"
          },
          {
            "name": "Kilometer",
            "value": "Kilometer"
          },
          {
            "name": "Hectometer",
            "value": "Hectometer"
          },
          {
            "name": "Decameter",
            "value": "Decameter"
          },
          {
            "name": "Meter",
            "value": "Meter"
          },
          {
            "name": "Decimeter",
            "value": "Decimeter"
          },
          {
            "name": "Centimeter",
            "value": "Centimeter"
          },
          {
            "name": "Millimeter",
            "value": "Millimeter"
          },
          {
            "name": "Micrometer",
            "value": "Micrometer"
          },
          {
            "name": "Nanometer",
            "value": "Nanometer"
          },
          {
            "name": "Picometer",
            "value": "Picometer"
          },
          {
            "name": "Mile",
            "value": "Mile"
          },
          {
            "name": "Yard",
            "value": "Yard"
          },
          {
            "name": "Inch",
            "value": "Inch"
          },
          {
            "name": "Foot",
            "value": "Foot"
          },
          {
            "name": "LightYear",
            "value": "LightYear"
          },
          {
            "name": "Pt",
            "value": "Pt"
          }
        ]
      }
    },
    "ListKey": {
      "type": "object",
      "description": "The list key extra data kind.",
      "properties": {
        "key": {
          "type": "string",
          "description": "The canonical form of the extracted entity."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseExtraInformation"
        }
      ],
      "x-ms-discriminator-value": "ListKey"
    },
    "LuisCallingOptions": {
      "type": "object",
      "description": "This customizes how the service calls LUIS Generally Available projects.",
      "properties": {
        "verbose": {
          "type": "boolean",
          "description": "Enable verbose response."
        },
        "log": {
          "type": "boolean",
          "description": "Save log to add in training utterances later."
        },
        "show-all-intents": {
          "type": "boolean",
          "description": "Set true to show all intents."
        },
        "timezoneOffset": {
          "type": "integer",
          "format": "int32",
          "description": "The timezone offset for the location of the request."
        },
        "spellCheck": {
          "type": "boolean",
          "description": "Enable spell checking."
        },
        "bing-spell-check-subscription-key": {
          "type": "string",
          "description": "The subscription key to use when enabling Bing spell check"
        }
      }
    },
    "LuisParameters": {
      "type": "object",
      "description": "This is a set of request parameters for LUIS Generally Available projects.",
      "properties": {
        "query": {
          "type": "string",
          "description": "The utterance to predict.",
          "maxLength": 500
        },
        "callingOptions": {
          "$ref": "#/definitions/LuisCallingOptions",
          "description": "This customizes how the service calls LUIS Generally Available projects."
        }
      },
      "additionalProperties": {},
      "allOf": [
        {
          "$ref": "#/definitions/AnalysisParameters"
        }
      ],
      "x-ms-discriminator-value": "Luis"
    },
    "LuisTargetIntentResult": {
      "type": "object",
      "description": "It is a wrap up of LUIS Generally Available response.",
      "properties": {
        "result": {
          "type": "object",
          "description": "The actual response from a LUIS Generally Available application."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TargetIntentResult"
        }
      ],
      "x-ms-discriminator-value": "Luis"
    },
    "NoneLinkedTargetIntentResult": {
      "type": "object",
      "description": "A wrap up of non-linked intent response.",
      "properties": {
        "result": {
          "$ref": "#/definitions/ConversationResult",
          "description": "The actual response from a Conversation project."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TargetIntentResult"
        }
      ],
      "x-ms-discriminator-value": "NonLinked"
    },
    "NumberKind": {
      "type": "string",
      "description": "The type of the extracted number entity.",
      "enum": [
        "Integer",
        "Decimal",
        "Power",
        "Fraction",
        "Percent",
        "Unspecified"
      ],
      "x-ms-enum": {
        "name": "NumberKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Integer",
            "value": "Integer"
          },
          {
            "name": "Decimal",
            "value": "Decimal"
          },
          {
            "name": "Power",
            "value": "Power"
          },
          {
            "name": "Fraction",
            "value": "Fraction"
          },
          {
            "name": "Percent",
            "value": "Percent"
          },
          {
            "name": "Unspecified",
            "value": "Unspecified"
          }
        ]
      }
    },
    "NumberResolution": {
      "type": "object",
      "description": "A resolution for numeric entity instances.",
      "properties": {
        "numberKind": {
          "$ref": "#/definitions/NumberKind",
          "description": "The type of the extracted number entity."
        },
        "value": {
          "type": "number",
          "format": "double",
          "description": "A numeric representation of what the extracted text denotes."
        }
      },
      "required": [
        "numberKind",
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "x-ms-discriminator-value": "NumberResolution"
    },
    "NumericRangeResolution": {
      "type": "object",
      "description": "represents the resolution of numeric intervals.",
      "properties": {
        "rangeKind": {
          "$ref": "#/definitions/RangeKind",
          "description": "The kind of range that the resolution object represents."
        },
        "minimum": {
          "type": "number",
          "format": "double",
          "description": "The beginning value of  the interval."
        },
        "maximum": {
          "type": "number",
          "format": "double",
          "description": "The ending value of the interval."
        }
      },
      "required": [
        "rangeKind",
        "minimum",
        "maximum"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "x-ms-discriminator-value": "NumericRangeResolution"
    },
    "OrchestrationPrediction": {
      "type": "object",
      "description": "This represents the prediction result of an Orchestration project.",
      "properties": {
        "intents": {
          "type": "object",
          "description": "A dictionary that contains all intents. A key is an intent name and a value is its confidence score and target type. The top intent's value also contains the actual response from the target project.",
          "additionalProperties": {
            "$ref": "#/definitions/TargetIntentResult"
          }
        }
      },
      "required": [
        "intents"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BasePrediction"
        }
      ],
      "x-ms-discriminator-value": "Orchestration"
    },
    "OrdinalResolution": {
      "type": "object",
      "description": "A resolution for ordinal numbers entity instances.",
      "properties": {
        "offset": {
          "type": "string",
          "description": "The offset With respect to the reference (e.g., offset = -1 in \"show me the second to last\""
        },
        "relativeTo": {
          "$ref": "#/definitions/RelativeTo",
          "description": "The reference point that the ordinal number denotes."
        },
        "value": {
          "type": "string",
          "description": "A simple arithmetic expression that the ordinal denotes."
        }
      },
      "required": [
        "offset",
        "relativeTo",
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "x-ms-discriminator-value": "OrdinalResolution"
    },
    "RangeKind": {
      "type": "string",
      "description": "The kind of range that the resolution object represents.",
      "enum": [
        "Number",
        "Speed",
        "Weight",
        "Length",
        "Volume",
        "Area",
        "Age",
        "Information",
        "Temperature",
        "Currency"
      ],
      "x-ms-enum": {
        "name": "RangeKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Number",
            "value": "Number"
          },
          {
            "name": "Speed",
            "value": "Speed"
          },
          {
            "name": "Weight",
            "value": "Weight"
          },
          {
            "name": "Length",
            "value": "Length"
          },
          {
            "name": "Volume",
            "value": "Volume"
          },
          {
            "name": "Area",
            "value": "Area"
          },
          {
            "name": "Age",
            "value": "Age"
          },
          {
            "name": "Information",
            "value": "Information"
          },
          {
            "name": "Temperature",
            "value": "Temperature"
          },
          {
            "name": "Currency",
            "value": "Currency"
          }
        ]
      }
    },
    "RelativeTo": {
      "type": "string",
      "description": "The reference point that the ordinal number denotes.",
      "enum": [
        "Current",
        "End",
        "Start"
      ],
      "x-ms-enum": {
        "name": "RelativeTo",
        "modelAsString": true,
        "values": [
          {
            "name": "Current",
            "value": "Current"
          },
          {
            "name": "End",
            "value": "End"
          },
          {
            "name": "Start",
            "value": "Start"
          }
        ]
      }
    },
    "ResolutionKind": {
      "type": "string",
      "description": "The entity resolution object kind.",
      "enum": [
        "BooleanResolution",
        "DateTimeResolution",
        "NumberResolution",
        "OrdinalResolution",
        "SpeedResolution",
        "WeightResolution",
        "LengthResolution",
        "VolumeResolution",
        "AreaResolution",
        "AgeResolution",
        "InformationResolution",
        "TemperatureResolution",
        "CurrencyResolution",
        "NumericRangeResolution",
        "TemporalSpanResolution"
      ],
      "x-ms-enum": {
        "name": "ResolutionKind",
        "modelAsString": true,
        "values": [
          {
            "name": "BooleanResolution",
            "value": "BooleanResolution"
          },
          {
            "name": "DateTimeResolution",
            "value": "DateTimeResolution"
          },
          {
            "name": "NumberResolution",
            "value": "NumberResolution"
          },
          {
            "name": "OrdinalResolution",
            "value": "OrdinalResolution"
          },
          {
            "name": "SpeedResolution",
            "value": "SpeedResolution"
          },
          {
            "name": "WeightResolution",
            "value": "WeightResolution"
          },
          {
            "name": "LengthResolution",
            "value": "LengthResolution"
          },
          {
            "name": "VolumeResolution",
            "value": "VolumeResolution"
          },
          {
            "name": "AreaResolution",
            "value": "AreaResolution"
          },
          {
            "name": "AgeResolution",
            "value": "AgeResolution"
          },
          {
            "name": "InformationResolution",
            "value": "InformationResolution"
          },
          {
            "name": "TemperatureResolution",
            "value": "TemperatureResolution"
          },
          {
            "name": "CurrencyResolution",
            "value": "CurrencyResolution"
          },
          {
            "name": "NumericRangeResolution",
            "value": "NumericRangeResolution"
          },
          {
            "name": "TemporalSpanResolution",
            "value": "TemporalSpanResolution"
          }
        ]
      }
    },
    "SpeedResolution": {
      "type": "object",
      "description": "Represents the speed entity resolution model.",
      "properties": {
        "value": {
          "type": "number",
          "format": "double",
          "description": "The numeric value that the extracted text denotes."
        },
        "unit": {
          "$ref": "#/definitions/SpeedUnit",
          "description": "The speed Unit of measurement"
        }
      },
      "required": [
        "value",
        "unit"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "x-ms-discriminator-value": "SpeedResolution"
    },
    "SpeedUnit": {
      "type": "string",
      "description": "The speed Unit of measurement",
      "enum": [
        "Unspecified",
        "MetersPerSecond",
        "KilometersPerHour",
        "KilometersPerMinute",
        "KilometersPerSecond",
        "MilesPerHour",
        "Knot",
        "FootPerSecond",
        "FootPerMinute",
        "YardsPerMinute",
        "YardsPerSecond",
        "MetersPerMillisecond",
        "CentimetersPerMillisecond",
        "KilometersPerMillisecond"
      ],
      "x-ms-enum": {
        "name": "SpeedUnit",
        "modelAsString": true,
        "values": [
          {
            "name": "Unspecified",
            "value": "Unspecified"
          },
          {
            "name": "MetersPerSecond",
            "value": "MetersPerSecond"
          },
          {
            "name": "KilometersPerHour",
            "value": "KilometersPerHour"
          },
          {
            "name": "KilometersPerMinute",
            "value": "KilometersPerMinute"
          },
          {
            "name": "KilometersPerSecond",
            "value": "KilometersPerSecond"
          },
          {
            "name": "MilesPerHour",
            "value": "MilesPerHour"
          },
          {
            "name": "Knot",
            "value": "Knot"
          },
          {
            "name": "FootPerSecond",
            "value": "FootPerSecond"
          },
          {
            "name": "FootPerMinute",
            "value": "FootPerMinute"
          },
          {
            "name": "YardsPerMinute",
            "value": "YardsPerMinute"
          },
          {
            "name": "YardsPerSecond",
            "value": "YardsPerSecond"
          },
          {
            "name": "MetersPerMillisecond",
            "value": "MetersPerMillisecond"
          },
          {
            "name": "CentimetersPerMillisecond",
            "value": "CentimetersPerMillisecond"
          },
          {
            "name": "KilometersPerMillisecond",
            "value": "KilometersPerMillisecond"
          }
        ]
      }
    },
    "TargetIntentResult": {
      "type": "object",
      "description": "This is the base class of an intent prediction",
      "properties": {
        "targetProjectKind": {
          "$ref": "#/definitions/targetProjectKind",
          "description": "This is the base class of an intent prediction"
        },
        "apiVersion": {
          "type": "string",
          "description": "The API version used to call a target service."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "The prediction score and it ranges from 0.0 to 1.0.",
          "minimum": 0,
          "maximum": 1,
          "x-ms-client-name": "confidence"
        }
      },
      "discriminator": "targetProjectKind",
      "required": [
        "targetProjectKind",
        "confidenceScore"
      ]
    },
    "TemperatureResolution": {
      "type": "object",
      "description": "Represents the temperature entity resolution model.",
      "properties": {
        "value": {
          "type": "number",
          "format": "double",
          "description": "The numeric value that the extracted text denotes."
        },
        "unit": {
          "$ref": "#/definitions/TemperatureUnit",
          "description": "The temperature Unit of measurement."
        }
      },
      "required": [
        "value",
        "unit"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "x-ms-discriminator-value": "TemperatureResolution"
    },
    "TemperatureUnit": {
      "type": "string",
      "description": "The temperature Unit of measurement.",
      "enum": [
        "Unspecified",
        "Fahrenheit",
        "Kelvin",
        "Rankine",
        "Celsius"
      ],
      "x-ms-enum": {
        "name": "TemperatureUnit",
        "modelAsString": true,
        "values": [
          {
            "name": "Unspecified",
            "value": "Unspecified"
          },
          {
            "name": "Fahrenheit",
            "value": "Fahrenheit"
          },
          {
            "name": "Kelvin",
            "value": "Kelvin"
          },
          {
            "name": "Rankine",
            "value": "Rankine"
          },
          {
            "name": "Celsius",
            "value": "Celsius"
          }
        ]
      }
    },
    "TemporalModifier": {
      "type": "string",
      "description": "An optional modifier of a date/time instance.",
      "enum": [
        "AfterApprox",
        "Before",
        "BeforeStart",
        "Approx",
        "ReferenceUndefined",
        "SinceEnd",
        "AfterMid",
        "Start",
        "After",
        "BeforeEnd",
        "Until",
        "End",
        "Less",
        "Since",
        "AfterStart",
        "BeforeApprox",
        "Mid",
        "More"
      ],
      "x-ms-enum": {
        "name": "TemporalModifier",
        "modelAsString": true,
        "values": [
          {
            "name": "AfterApprox",
            "value": "AfterApprox"
          },
          {
            "name": "Before",
            "value": "Before"
          },
          {
            "name": "BeforeStart",
            "value": "BeforeStart"
          },
          {
            "name": "Approx",
            "value": "Approx"
          },
          {
            "name": "ReferenceUndefined",
            "value": "ReferenceUndefined"
          },
          {
            "name": "SinceEnd",
            "value": "SinceEnd"
          },
          {
            "name": "AfterMid",
            "value": "AfterMid"
          },
          {
            "name": "Start",
            "value": "Start"
          },
          {
            "name": "After",
            "value": "After"
          },
          {
            "name": "BeforeEnd",
            "value": "BeforeEnd"
          },
          {
            "name": "Until",
            "value": "Until"
          },
          {
            "name": "End",
            "value": "End"
          },
          {
            "name": "Less",
            "value": "Less"
          },
          {
            "name": "Since",
            "value": "Since"
          },
          {
            "name": "AfterStart",
            "value": "AfterStart"
          },
          {
            "name": "BeforeApprox",
            "value": "BeforeApprox"
          },
          {
            "name": "Mid",
            "value": "Mid"
          },
          {
            "name": "More",
            "value": "More"
          }
        ]
      }
    },
    "TemporalSpanResolution": {
      "type": "object",
      "description": "represents the resolution of a date and/or time span.",
      "properties": {
        "begin": {
          "type": "string",
          "description": "represents the resolution of a date and/or time span. An extended ISO 8601 date/time representation as described in (https://github.com/Microsoft/Recognizers-Text/blob/master/Patterns/English/English-DateTime.yaml)"
        },
        "end": {
          "type": "string",
          "description": "represents the resolution of a date and/or time span. An extended ISO 8601 date/time representation as described in (https://github.com/Microsoft/Recognizers-Text/blob/master/Patterns/English/English-DateTime.yaml)"
        },
        "duration": {
          "type": "string",
          "description": "An optional duration value formatted based on the ISO 8601 (https://en.wikipedia.org/wiki/ISO_8601#Durations)"
        },
        "modifier": {
          "$ref": "#/definitions/TemporalModifier",
          "description": "An optional modifier of a date/time instance."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "x-ms-discriminator-value": "TemporalSpanResolution"
    },
    "VolumeResolution": {
      "type": "object",
      "description": "Represents the volume entity resolution model.",
      "properties": {
        "value": {
          "type": "number",
          "format": "double",
          "description": "The numeric value that the extracted text denotes."
        },
        "unit": {
          "$ref": "#/definitions/VolumeUnit",
          "description": "The Volume Unit of measurement"
        }
      },
      "required": [
        "value",
        "unit"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "x-ms-discriminator-value": "VolumeResolution"
    },
    "VolumeUnit": {
      "type": "string",
      "description": "The Volume Unit of measurement",
      "enum": [
        "Unspecified",
        "CubicMeter",
        "CubicCentimeter",
        "CubicMillimeter",
        "Hectoliter",
        "Decaliter",
        "Liter",
        "Centiliter",
        "Milliliter",
        "CubicYard",
        "CubicInch",
        "CubicFoot",
        "CubicMile",
        "FluidOunce",
        "Teaspoon",
        "Tablespoon",
        "Pint",
        "Quart",
        "Cup",
        "Gill",
        "Pinch",
        "FluidDram",
        "Barrel",
        "Minim",
        "Cord",
        "Peck",
        "Bushel",
        "Hogshead"
      ],
      "x-ms-enum": {
        "name": "VolumeUnit",
        "modelAsString": true,
        "values": [
          {
            "name": "Unspecified",
            "value": "Unspecified"
          },
          {
            "name": "CubicMeter",
            "value": "CubicMeter"
          },
          {
            "name": "CubicCentimeter",
            "value": "CubicCentimeter"
          },
          {
            "name": "CubicMillimeter",
            "value": "CubicMillimeter"
          },
          {
            "name": "Hectoliter",
            "value": "Hectoliter"
          },
          {
            "name": "Decaliter",
            "value": "Decaliter"
          },
          {
            "name": "Liter",
            "value": "Liter"
          },
          {
            "name": "Centiliter",
            "value": "Centiliter"
          },
          {
            "name": "Milliliter",
            "value": "Milliliter"
          },
          {
            "name": "CubicYard",
            "value": "CubicYard"
          },
          {
            "name": "CubicInch",
            "value": "CubicInch"
          },
          {
            "name": "CubicFoot",
            "value": "CubicFoot"
          },
          {
            "name": "CubicMile",
            "value": "CubicMile"
          },
          {
            "name": "FluidOunce",
            "value": "FluidOunce"
          },
          {
            "name": "Teaspoon",
            "value": "Teaspoon"
          },
          {
            "name": "Tablespoon",
            "value": "Tablespoon"
          },
          {
            "name": "Pint",
            "value": "Pint"
          },
          {
            "name": "Quart",
            "value": "Quart"
          },
          {
            "name": "Cup",
            "value": "Cup"
          },
          {
            "name": "Gill",
            "value": "Gill"
          },
          {
            "name": "Pinch",
            "value": "Pinch"
          },
          {
            "name": "FluidDram",
            "value": "FluidDram"
          },
          {
            "name": "Barrel",
            "value": "Barrel"
          },
          {
            "name": "Minim",
            "value": "Minim"
          },
          {
            "name": "Cord",
            "value": "Cord"
          },
          {
            "name": "Peck",
            "value": "Peck"
          },
          {
            "name": "Bushel",
            "value": "Bushel"
          },
          {
            "name": "Hogshead",
            "value": "Hogshead"
          }
        ]
      }
    },
    "WeightResolution": {
      "type": "object",
      "description": "Represents the weight entity resolution model.",
      "properties": {
        "value": {
          "type": "number",
          "format": "double",
          "description": "The numeric value that the extracted text denotes."
        },
        "unit": {
          "$ref": "#/definitions/WeightUnit",
          "description": "The weight Unit of measurement."
        }
      },
      "required": [
        "value",
        "unit"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "x-ms-discriminator-value": "WeightResolution"
    },
    "WeightUnit": {
      "type": "string",
      "description": "The weight Unit of measurement.",
      "enum": [
        "Unspecified",
        "Kilogram",
        "Gram",
        "Milligram",
        "Gallon",
        "MetricTon",
        "Ton",
        "Pound",
        "Ounce",
        "Grain",
        "PennyWeight",
        "LongTonBritish",
        "ShortTonUS",
        "ShortHundredWeightUS",
        "Stone",
        "Dram"
      ],
      "x-ms-enum": {
        "name": "WeightUnit",
        "modelAsString": true,
        "values": [
          {
            "name": "Unspecified",
            "value": "Unspecified"
          },
          {
            "name": "Kilogram",
            "value": "Kilogram"
          },
          {
            "name": "Gram",
            "value": "Gram"
          },
          {
            "name": "Milligram",
            "value": "Milligram"
          },
          {
            "name": "Gallon",
            "value": "Gallon"
          },
          {
            "name": "MetricTon",
            "value": "MetricTon"
          },
          {
            "name": "Ton",
            "value": "Ton"
          },
          {
            "name": "Pound",
            "value": "Pound"
          },
          {
            "name": "Ounce",
            "value": "Ounce"
          },
          {
            "name": "Grain",
            "value": "Grain"
          },
          {
            "name": "PennyWeight",
            "value": "PennyWeight"
          },
          {
            "name": "LongTonBritish",
            "value": "LongTonBritish"
          },
          {
            "name": "ShortTonUS",
            "value": "ShortTonUS"
          },
          {
            "name": "ShortHundredWeightUS",
            "value": "ShortHundredWeightUS"
          },
          {
            "name": "Stone",
            "value": "Stone"
          },
          {
            "name": "Dram",
            "value": "Dram"
          }
        ]
      }
    },
    "projectKind": {
      "type": "string",
      "description": "The type of the project.",
      "enum": [
        "Conversation",
        "Orchestration"
      ],
      "x-ms-enum": {
        "name": "projectKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Conversation",
            "value": "Conversation"
          },
          {
            "name": "Orchestration",
            "value": "Orchestration"
          }
        ]
      }
    },
    "targetProjectKind": {
      "type": "string",
      "description": "The type of a target service.",
      "enum": [
        "Luis",
        "Conversation",
        "QuestionAnswering",
        "NonLinked"
      ],
      "x-ms-enum": {
        "name": "targetProjectKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Luis",
            "value": "Luis"
          },
          {
            "name": "Conversation",
            "value": "Conversation"
          },
          {
            "name": "QuestionAnswering",
            "value": "QuestionAnswering"
          },
          {
            "name": "NonLinked",
            "value": "NonLinked"
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
