{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft Cognitive Language Service - Text Analysis",
    "version": "2023-04-01",
    "description": "The language service API is a suite of natural language processing (NLP) skills built with best-in-class Microsoft machine learning algorithms.  The API can be used to analyze unstructured text for tasks such as sentiment analysis, key phrase extraction, language detection and question answering. Further documentation can be found in <a href=\"https://docs.microsoft.com/azure/cognitive-services/language-service/overview\">https://docs.microsoft.com/azure/cognitive-services/language-service/overview</a>.0",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{Endpoint}/language",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "Endpoint",
        "in": "path",
        "description": "Supported Cognitive Services endpoint (e.g., https://<resource-name>.api.cognitiveservices.azure.com).",
        "required": true,
        "type": "string"
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    }
  },
  "tags": [],
  "paths": {
    "/:analyze-text": {
      "post": {
        "operationId": "AnalyzeText",
        "description": "Request text analysis over a collection of documents.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/AnalyzeTextQueryParameters.showStats"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Collection of documents to analyze and a single task to execute.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyzeTextTask"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AnalyzeTextTaskResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SuccessfulEntityLinkingRequest": {
            "$ref": "./examples/SuccessfulEntityLinkingRequest.json"
          },
          "SuccessfulEntityRecognitionRequest": {
            "$ref": "./examples/SuccessfulEntityRecognitionRequest.json"
          },
          "SuccessfulKeyPhraseExtractionRequest": {
            "$ref": "./examples/SuccessfulKeyPhraseExtractionRequest.json"
          },
          "SuccessfulLanguageDetectionRequest": {
            "$ref": "./examples/SuccessfulLanguageDetectionRequest.json"
          },
          "SuccessfulPiiEntityRecognitionRequest": {
            "$ref": "./examples/SuccessfulPiiEntityRecognitionRequest.json"
          },
          "SuccessfulSentimentAnalysisRequest": {
            "$ref": "./examples/SuccessfulSentimentAnalysisRequest.json"
          }
        }
      }
    },
    "/analyze-text/jobs": {
      "post": {
        "operationId": "AnalyzeTextSubmitJob",
        "description": "Submit a collection of text documents for analysis. Specify one or more unique tasks to be executed as a long-running operation.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyzeTextJobsInput"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Operation-Location": {
                "type": "string",
                "format": "uri",
                "description": "The location for monitoring the operation state."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SuccessfulAnalyzeTextJobsMultipleTaskSubmitRequest": {
            "$ref": "./examples/SuccessfulAnalyzeTextJobsMultipleTaskSubmitRequest.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/analyze-text/jobs/{jobId}": {
      "get": {
        "operationId": "AnalyzeTextJobStatus",
        "summary": "Get analysis status and results",
        "description": "Get the status of an analysis job. A job can consist of one or more tasks. After all tasks succeed, the job transitions to the succeeded state and results are available for each task.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "job ID",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "showStats",
            "in": "query",
            "description": "(Optional) if set to true, response will contain request and document level statistics.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "top",
            "in": "query",
            "description": "The maximum number of resources to return from the collection.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "An offset into the collection of the first resource to be returned.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AnalyzeTextJobState"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SuccessfulAnalyzeTextJobsMultipleTaskStatusRequest": {
            "$ref": "./examples/SuccessfulAnalyzeTextJobsMultipleTaskStatusRequest.json"
          }
        }
      }
    },
    "/analyze-text/jobs/{jobId}:cancel": {
      "post": {
        "operationId": "AnalyzeTextCancelJob",
        "summary": "Cancel a long-running Text Analysis job.",
        "description": "Cancel a long-running Text Analysis job.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "job ID",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Operation-Location": {
                "type": "string",
                "format": "uri",
                "description": "The location for monitoring the operation state."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SuccessfulAnalyzeTextJobsCancelRequest": {
            "$ref": "./examples/SuccessfulAnalyzeTextJobsCancelRequest.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AbstractiveSummarizationLROResult": {
      "type": "object",
      "description": "An object representing the results for an Abstractive Summarization task.",
      "properties": {
        "results": {
          "$ref": "#/definitions/AbstractiveSummarizationResult"
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROResult"
        }
      ],
      "x-ms-discriminator-value": "AbstractiveSummarizationLROResults"
    },
    "AbstractiveSummarizationLROTask": {
      "type": "object",
      "description": "An object representing the task definition for an Abstractive Summarization task.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/AbstractiveSummarizationTaskParameters"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROTask"
        }
      ],
      "x-ms-discriminator-value": "AbstractiveSummarization"
    },
    "AbstractiveSummarizationResult": {
      "type": "object",
      "description": "An object representing the pre-build summarization results of each document.",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        },
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/AbstractiveSummaryDocumentResult"
          }
        }
      },
      "required": [
        "errors",
        "modelVersion",
        "documents"
      ]
    },
    "AbstractiveSummarizationTaskParameters": {
      "type": "object",
      "description": "Supported parameters for the pre-build Abstractive Summarization task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "modelVersion": {
          "type": "string",
          "description": "model version",
          "default": "latest"
        },
        "sentenceCount": {
          "type": "integer",
          "format": "int32",
          "description": "Controls the approximate number of sentences in the output summaries."
        },
        "stringIndexType": {
          "type": "string",
          "description": "String index type",
          "default": "TextElements_v8",
          "enum": [
            "TextElements_v8",
            "UnicodeCodePoint",
            "Utf16CodeUnit"
          ],
          "x-ms-enum": {
            "name": "StringIndexType",
            "modelAsString": true,
            "values": [
              {
                "name": "TextElements_v8",
                "value": "TextElements_v8",
                "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
              },
              {
                "name": "UnicodeCodePoint",
                "value": "UnicodeCodePoint",
                "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
              },
              {
                "name": "Utf16CodeUnit",
                "value": "Utf16CodeUnit",
                "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
              }
            ]
          }
        }
      }
    },
    "AbstractiveSummary": {
      "type": "object",
      "description": "An object representing a single summary with context for given document.",
      "properties": {
        "text": {
          "type": "string",
          "description": "The text of the summary."
        },
        "contexts": {
          "type": "array",
          "description": "The context list of the summary.",
          "items": {
            "$ref": "#/definitions/SummaryContext"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "text"
      ]
    },
    "AbstractiveSummaryDocumentResult": {
      "type": "object",
      "description": "An object representing the pre-build summarization results of each document.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/DocumentWarning"
          },
          "x-ms-identifiers": []
        },
        "statistics": {
          "$ref": "#/definitions/DocumentStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the document payload."
        },
        "summaries": {
          "type": "array",
          "description": "A list of abstractive summaries.",
          "items": {
            "$ref": "#/definitions/AbstractiveSummary"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "id",
        "warnings",
        "summaries"
      ]
    },
    "AnalyzeTextEntityLinkingInput": {
      "type": "object",
      "properties": {
        "analysisInput": {
          "$ref": "#/definitions/MultiLanguageAnalysisInput"
        },
        "parameters": {
          "$ref": "#/definitions/EntityLinkingTaskParameters"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextTask"
        }
      ],
      "x-ms-discriminator-value": "EntityLinking"
    },
    "AnalyzeTextEntityRecognitionInput": {
      "type": "object",
      "properties": {
        "analysisInput": {
          "$ref": "#/definitions/MultiLanguageAnalysisInput"
        },
        "parameters": {
          "$ref": "#/definitions/EntitiesTaskParameters"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextTask"
        }
      ],
      "x-ms-discriminator-value": "EntityRecognition"
    },
    "AnalyzeTextJobState": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "display name"
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time job created"
        },
        "expirationDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time job expires"
        },
        "jobId": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "job ID",
          "readOnly": true
        },
        "lastUpdatedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "last updated date and time"
        },
        "status": {
          "$ref": "#/definitions/State",
          "description": "status"
        },
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "description": "next link"
        },
        "tasks": {
          "$ref": "#/definitions/Tasks"
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        }
      },
      "required": [
        "createdDateTime",
        "jobId",
        "lastUpdatedDateTime",
        "status",
        "tasks"
      ]
    },
    "AnalyzeTextJobsInput": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "analysisInput": {
          "$ref": "#/definitions/MultiLanguageAnalysisInput"
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnalyzeTextLROTask"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "analysisInput",
        "tasks"
      ]
    },
    "AnalyzeTextKeyPhraseExtractionInput": {
      "type": "object",
      "properties": {
        "analysisInput": {
          "$ref": "#/definitions/MultiLanguageAnalysisInput"
        },
        "parameters": {
          "$ref": "#/definitions/KeyPhraseTaskParameters"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextTask"
        }
      ],
      "x-ms-discriminator-value": "KeyPhraseExtraction"
    },
    "AnalyzeTextLROResult": {
      "type": "object",
      "description": "Returns the current state of the task.",
      "properties": {
        "lastUpdateDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last updated time in UTC for the task."
        },
        "status": {
          "$ref": "#/definitions/State",
          "description": "The status of the task at the mentioned last update time."
        },
        "taskName": {
          "type": "string",
          "description": "task name"
        },
        "kind": {
          "$ref": "#/definitions/AnalyzeTextLROResultsKind"
        }
      },
      "discriminator": "kind",
      "required": [
        "lastUpdateDateTime",
        "status",
        "kind"
      ]
    },
    "AnalyzeTextLROResultsKind": {
      "type": "string",
      "enum": [
        "SentimentAnalysisLROResults",
        "EntityRecognitionLROResults",
        "PiiEntityRecognitionLROResults",
        "KeyPhraseExtractionLROResults",
        "EntityLinkingLROResults",
        "HealthcareLROResults",
        "CustomEntityRecognitionLROResults",
        "CustomSingleLabelClassificationLROResults",
        "CustomMultiLabelClassificationLROResults",
        "ExtractiveSummarizationLROResults",
        "AbstractiveSummarizationLROResults"
      ],
      "x-ms-enum": {
        "name": "AnalyzeTextLROResultsKind",
        "modelAsString": true
      }
    },
    "AnalyzeTextLROTask": {
      "type": "object",
      "description": "Base task object.",
      "properties": {
        "taskName": {
          "type": "string",
          "description": "task name"
        },
        "kind": {
          "$ref": "#/definitions/AnalyzeTextLROTaskKind",
          "description": "The kind of task to perform."
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ]
    },
    "AnalyzeTextLROTaskKind": {
      "type": "string",
      "enum": [
        "SentimentAnalysis",
        "EntityRecognition",
        "PiiEntityRecognition",
        "KeyPhraseExtraction",
        "EntityLinking",
        "Healthcare",
        "CustomEntityRecognition",
        "CustomSingleLabelClassification",
        "CustomMultiLabelClassification",
        "ExtractiveSummarization",
        "AbstractiveSummarization"
      ],
      "x-ms-enum": {
        "name": "AnalyzeTextLROTaskKind",
        "modelAsString": true
      }
    },
    "AnalyzeTextLanguageDetectionInput": {
      "type": "object",
      "properties": {
        "analysisInput": {
          "$ref": "#/definitions/LanguageDetectionAnalysisInput"
        },
        "parameters": {
          "$ref": "#/definitions/LanguageDetectionTaskParameters"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextTask"
        }
      ],
      "x-ms-discriminator-value": "LanguageDetection"
    },
    "AnalyzeTextPiiEntitiesRecognitionInput": {
      "type": "object",
      "properties": {
        "analysisInput": {
          "$ref": "#/definitions/MultiLanguageAnalysisInput"
        },
        "parameters": {
          "$ref": "#/definitions/PiiTaskParameters"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextTask"
        }
      ],
      "x-ms-discriminator-value": "PiiEntityRecognition"
    },
    "AnalyzeTextSentimentAnalysisInput": {
      "type": "object",
      "properties": {
        "analysisInput": {
          "$ref": "#/definitions/MultiLanguageAnalysisInput"
        },
        "parameters": {
          "$ref": "#/definitions/SentimentAnalysisTaskParameters"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextTask"
        }
      ],
      "x-ms-discriminator-value": "SentimentAnalysis"
    },
    "AnalyzeTextTask": {
      "type": "object",
      "description": "Collection of documents to analyze and a single task to execute.",
      "properties": {
        "kind": {
          "$ref": "#/definitions/AnalyzeTextTaskKind",
          "description": "The kind of task to perform."
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ]
    },
    "AnalyzeTextTaskKind": {
      "type": "string",
      "enum": [
        "SentimentAnalysis",
        "EntityRecognition",
        "PiiEntityRecognition",
        "KeyPhraseExtraction",
        "LanguageDetection",
        "EntityLinking"
      ],
      "x-ms-enum": {
        "name": "AnalyzeTextTaskKind",
        "modelAsString": true
      }
    },
    "AnalyzeTextTaskResult": {
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/AnalyzeTextTaskResultsKind",
          "description": "The kind of task result."
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ]
    },
    "AnalyzeTextTaskResultsKind": {
      "type": "string",
      "enum": [
        "SentimentAnalysisResults",
        "EntityRecognitionResults",
        "PiiEntityRecognitionResults",
        "KeyPhraseExtractionResults",
        "LanguageDetectionResults",
        "EntityLinkingResults"
      ],
      "x-ms-enum": {
        "name": "AnalyzeTextTaskResultsKind",
        "modelAsString": true
      }
    },
    "Association": {
      "type": "string",
      "description": "Describes if the entity is the subject of the text or if it describes someone else.",
      "enum": [
        "subject",
        "other"
      ],
      "x-ms-enum": {
        "name": "Association",
        "modelAsString": false
      }
    },
    "Azure.Core.uuid": {
      "type": "string",
      "format": "uuid",
      "description": "Universally Unique Identifier"
    },
    "Certainty": {
      "type": "string",
      "description": "Describes the entities certainty and polarity.",
      "enum": [
        "positive",
        "positivePossible",
        "neutralPossible",
        "negativePossible",
        "negative"
      ],
      "x-ms-enum": {
        "name": "Certainty",
        "modelAsString": false
      }
    },
    "ClassificationDocumentResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/DocumentWarning"
          },
          "x-ms-identifiers": []
        },
        "statistics": {
          "$ref": "#/definitions/DocumentStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the document payload."
        },
        "class": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClassificationResult"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "id",
        "warnings",
        "class"
      ]
    },
    "ClassificationResult": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "description": "Classification type."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "Confidence score between 0 and 1 of the recognized class."
        }
      },
      "required": [
        "category",
        "confidenceScore"
      ]
    },
    "Code": {
      "type": "string",
      "enum": [
        "LongWordsInDocument",
        "DocumentTruncated"
      ],
      "x-ms-enum": {
        "name": "Code",
        "modelAsString": true
      }
    },
    "Conditionality": {
      "type": "string",
      "description": "Describes any conditionality on the entity.",
      "enum": [
        "hypothetical",
        "conditional"
      ],
      "x-ms-enum": {
        "name": "Conditionality",
        "modelAsString": false
      }
    },
    "CustomEntitiesLROTask": {
      "type": "object",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/CustomEntitiesTaskParameters"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROTask"
        }
      ],
      "x-ms-discriminator-value": "CustomEntityRecognition"
    },
    "CustomEntitiesResult": {
      "type": "object",
      "description": "Custom Task Results",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        },
        "projectName": {
          "type": "string",
          "description": "This field indicates the project name for the model."
        },
        "deploymentName": {
          "type": "string",
          "description": "This field indicates the deployment name for the model."
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntitiesDocumentResult"
          }
        }
      },
      "required": [
        "errors",
        "projectName",
        "deploymentName",
        "documents"
      ]
    },
    "CustomEntitiesTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a Custom Entities task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "projectName": {
          "type": "string",
          "description": "This field indicates the project name for the model."
        },
        "deploymentName": {
          "type": "string",
          "description": "This field indicates the deployment name for the model."
        },
        "stringIndexType": {
          "type": "string",
          "description": "Specifies the method used to interpret string offsets.  Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information see https://aka.ms/text-analytics-offsets.",
          "default": "TextElements_v8",
          "enum": [
            "TextElements_v8",
            "UnicodeCodePoint",
            "Utf16CodeUnit"
          ],
          "x-ms-enum": {
            "name": "StringIndexType",
            "modelAsString": true,
            "values": [
              {
                "name": "TextElements_v8",
                "value": "TextElements_v8",
                "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
              },
              {
                "name": "UnicodeCodePoint",
                "value": "UnicodeCodePoint",
                "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
              },
              {
                "name": "Utf16CodeUnit",
                "value": "Utf16CodeUnit",
                "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
              }
            ]
          }
        }
      },
      "required": [
        "projectName",
        "deploymentName"
      ]
    },
    "CustomEntityRecognitionLROResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/CustomEntitiesResult"
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROResult"
        }
      ],
      "x-ms-discriminator-value": "CustomEntityRecognitionLROResults"
    },
    "CustomLabelClassificationResult": {
      "type": "object",
      "description": "Custom Task Results",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        },
        "projectName": {
          "type": "string",
          "description": "This field indicates the project name for the model."
        },
        "deploymentName": {
          "type": "string",
          "description": "This field indicates the deployment name for the model."
        },
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/ClassificationDocumentResult"
          }
        }
      },
      "required": [
        "errors",
        "projectName",
        "deploymentName",
        "documents"
      ]
    },
    "CustomMultiLabelClassificationLROResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/CustomLabelClassificationResult"
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROResult"
        }
      ],
      "x-ms-discriminator-value": "CustomMultiLabelClassificationLROResults"
    },
    "CustomMultiLabelClassificationLROTask": {
      "type": "object",
      "description": "Use custom models to classify text into multi label taxonomy",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/CustomMultiLabelClassificationTaskParameters"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROTask"
        }
      ],
      "x-ms-discriminator-value": "CustomMultiLabelClassification"
    },
    "CustomMultiLabelClassificationTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a Custom Multi Classification task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "projectName": {
          "type": "string",
          "description": "This field indicates the project name for the model."
        },
        "deploymentName": {
          "type": "string",
          "description": "This field indicates the deployment name for the model."
        }
      },
      "required": [
        "projectName",
        "deploymentName"
      ]
    },
    "CustomSingleLabelClassificationLROResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/CustomLabelClassificationResult"
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROResult"
        }
      ],
      "x-ms-discriminator-value": "CustomSingleLabelClassificationLROResults"
    },
    "CustomSingleLabelClassificationLROTask": {
      "type": "object",
      "description": "Use custom models to classify text into single label taxonomy",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/CustomSingleLabelClassificationTaskParameters"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROTask"
        }
      ],
      "x-ms-discriminator-value": "CustomSingleLabelClassification"
    },
    "CustomSingleLabelClassificationTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a Custom Single Classification task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "projectName": {
          "type": "string",
          "description": "This field indicates the project name for the model."
        },
        "deploymentName": {
          "type": "string",
          "description": "This field indicates the deployment name for the model."
        }
      },
      "required": [
        "projectName",
        "deploymentName"
      ]
    },
    "DetectedLanguage": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Long name of a detected language (e.g. English, French)."
        },
        "iso6391Name": {
          "type": "string",
          "description": "A two letter representation of the detected language according to the ISO 639-1 standard (e.g. en, fr)."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "A confidence score between 0 and 1. Scores close to 1 indicate 100% certainty that the identified language is true."
        }
      },
      "required": [
        "name",
        "iso6391Name",
        "confidenceScore"
      ]
    },
    "DocumentError": {
      "type": "object",
      "description": "Contains details of errors encountered during a job execution.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the input document."
        },
        "error": {
          "$ref": "#/definitions/Error",
          "description": "Error encountered."
        }
      },
      "required": [
        "id",
        "error"
      ]
    },
    "DocumentSentimentValue": {
      "type": "string",
      "description": "Predicted sentiment for document (Negative, Neutral, Positive, or Mixed).",
      "enum": [
        "positive",
        "neutral",
        "negative",
        "mixed"
      ],
      "x-ms-enum": {
        "name": "DocumentSentimentValue",
        "modelAsString": false,
        "values": [
          {
            "name": "positive",
            "value": "positive",
            "description": "Positive statement"
          },
          {
            "name": "neutral",
            "value": "neutral",
            "description": "Neutral statement"
          },
          {
            "name": "negative",
            "value": "negative",
            "description": "Negative statement"
          },
          {
            "name": "mixed",
            "value": "mixed",
            "description": "Mixed statement"
          }
        ]
      }
    },
    "DocumentStatistics": {
      "type": "object",
      "description": "if showStats=true was specified in the request this field will contain information about the document payload.",
      "properties": {
        "charactersCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of text elements recognized in the document."
        },
        "transactionsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of transactions for the document."
        }
      },
      "required": [
        "charactersCount",
        "transactionsCount"
      ]
    },
    "DocumentWarning": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/Code"
        },
        "message": {
          "type": "string",
          "description": "Warning message."
        },
        "targetRef": {
          "type": "string",
          "description": "A JSON pointer reference indicating the target object."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "EntitiesDocumentResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/DocumentWarning"
          },
          "x-ms-identifiers": []
        },
        "statistics": {
          "$ref": "#/definitions/DocumentStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the document payload."
        },
        "entities": {
          "type": "array",
          "description": "Recognized entities in the document.",
          "items": {
            "$ref": "#/definitions/Entity"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "id",
        "warnings",
        "entities"
      ]
    },
    "EntitiesLROTask": {
      "type": "object",
      "description": "An object representing the task definition for an Entities Recognition task.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/EntitiesTaskParameters"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROTask"
        }
      ],
      "x-ms-discriminator-value": "EntityRecognition"
    },
    "EntitiesResult": {
      "type": "object",
      "description": "Pre built result",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        },
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/EntitiesDocumentResult"
          }
        }
      },
      "required": [
        "errors",
        "modelVersion",
        "documents"
      ]
    },
    "EntitiesTaskParameters": {
      "type": "object",
      "description": "Supported parameters for an Entity Recognition task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "modelVersion": {
          "type": "string",
          "description": "model version",
          "default": "latest"
        },
        "stringIndexType": {
          "type": "string",
          "description": "Specifies the method used to interpret string offsets.  Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information see https://aka.ms/text-analytics-offsets.",
          "default": "TextElements_v8",
          "enum": [
            "TextElements_v8",
            "UnicodeCodePoint",
            "Utf16CodeUnit"
          ],
          "x-ms-enum": {
            "name": "StringIndexType",
            "modelAsString": true,
            "values": [
              {
                "name": "TextElements_v8",
                "value": "TextElements_v8",
                "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
              },
              {
                "name": "UnicodeCodePoint",
                "value": "UnicodeCodePoint",
                "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
              },
              {
                "name": "Utf16CodeUnit",
                "value": "Utf16CodeUnit",
                "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
              }
            ]
          }
        }
      }
    },
    "EntitiesTaskResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/EntitiesResult"
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextTaskResult"
        }
      ],
      "x-ms-discriminator-value": "EntityRecognitionResults"
    },
    "Entity": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Entity text as appears in the request."
        },
        "category": {
          "type": "string",
          "description": "Entity type."
        },
        "subcategory": {
          "type": "string",
          "description": "(Optional) Entity sub type."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position for the entity text. Use of different 'stringIndexType' values can affect the offset returned."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Length for the entity text. Use of different 'stringIndexType' values can affect the length returned."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "Confidence score between 0 and 1 of the extracted entity."
        }
      },
      "required": [
        "text",
        "category",
        "offset",
        "length",
        "confidenceScore"
      ]
    },
    "EntityLinkingLROResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/EntityLinkingResult"
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROResult"
        }
      ],
      "x-ms-discriminator-value": "EntityLinkingLROResults"
    },
    "EntityLinkingLROTask": {
      "type": "object",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/EntityLinkingTaskParameters"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROTask"
        }
      ],
      "x-ms-discriminator-value": "EntityLinking"
    },
    "EntityLinkingResult": {
      "type": "object",
      "description": "Pre built result",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        },
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/LinkedEntitiesDocumentResult"
          }
        }
      },
      "required": [
        "errors",
        "modelVersion",
        "documents"
      ]
    },
    "EntityLinkingTaskParameters": {
      "type": "object",
      "description": "Supported parameters for an Entity Linking task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "modelVersion": {
          "type": "string",
          "description": "model version",
          "default": "latest"
        },
        "stringIndexType": {
          "type": "string",
          "description": "Specifies the method used to interpret string offsets.  Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information see https://aka.ms/text-analytics-offsets.",
          "default": "TextElements_v8",
          "enum": [
            "TextElements_v8",
            "UnicodeCodePoint",
            "Utf16CodeUnit"
          ],
          "x-ms-enum": {
            "name": "StringIndexType",
            "modelAsString": true,
            "values": [
              {
                "name": "TextElements_v8",
                "value": "TextElements_v8",
                "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
              },
              {
                "name": "UnicodeCodePoint",
                "value": "UnicodeCodePoint",
                "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
              },
              {
                "name": "Utf16CodeUnit",
                "value": "Utf16CodeUnit",
                "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
              }
            ]
          }
        }
      }
    },
    "EntityLinkingTaskResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/EntityLinkingResult"
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextTaskResult"
        }
      ],
      "x-ms-discriminator-value": "EntityLinkingResults"
    },
    "EntityRecognitionLROResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/EntitiesResult"
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROResult"
        }
      ],
      "x-ms-discriminator-value": "EntityRecognitionLROResults"
    },
    "Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "$ref": "#/definitions/ErrorCode",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/InnerErrorModel",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ],
      "additionalProperties": {}
    },
    "ErrorCode": {
      "type": "string",
      "description": "Human-readable error code.",
      "enum": [
        "InvalidRequest",
        "InvalidArgument",
        "Unauthorized",
        "Forbidden",
        "NotFound",
        "ProjectNotFound",
        "OperationNotFound",
        "AzureCognitiveSearchNotFound",
        "AzureCognitiveSearchIndexNotFound",
        "TooManyRequests",
        "AzureCognitiveSearchThrottling",
        "AzureCognitiveSearchIndexLimitReached",
        "InternalServerError",
        "ServiceUnavailable",
        "Timeout",
        "QuotaExceeded",
        "Conflict",
        "Warning"
      ],
      "x-ms-enum": {
        "name": "ErrorCode",
        "modelAsString": true
      }
    },
    "ErrorResponse": {
      "type": "object",
      "description": "Error response.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "ExtractedSummaryDocumentResult": {
      "type": "object",
      "description": "A ranked list of sentences representing the extracted summary.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/DocumentWarning"
          },
          "x-ms-identifiers": []
        },
        "statistics": {
          "$ref": "#/definitions/DocumentStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the document payload."
        },
        "sentences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtractedSummarySentence"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "id",
        "warnings",
        "sentences"
      ]
    },
    "ExtractedSummarySentence": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "The extracted sentence text."
        },
        "rankScore": {
          "type": "number",
          "format": "double",
          "description": "A double value representing the relevance of the sentence within the summary. Higher values indicate higher importance."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "The sentence offset from the start of the document, based on the value of the parameter StringIndexType."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the sentence."
        }
      },
      "required": [
        "text",
        "rankScore",
        "offset",
        "length"
      ]
    },
    "ExtractiveSummarizationLROResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/ExtractiveSummarizationResult"
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROResult"
        }
      ],
      "x-ms-discriminator-value": "ExtractiveSummarizationLROResults"
    },
    "ExtractiveSummarizationLROTask": {
      "type": "object",
      "description": "An object representing the task definition for an Extractive Summarization task.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/ExtractiveSummarizationTaskParameters"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROTask"
        }
      ],
      "x-ms-discriminator-value": "ExtractiveSummarization"
    },
    "ExtractiveSummarizationResult": {
      "type": "object",
      "description": "Pre built result",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        },
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/ExtractedSummaryDocumentResult"
          }
        }
      },
      "required": [
        "errors",
        "modelVersion",
        "documents"
      ]
    },
    "ExtractiveSummarizationTaskParameters": {
      "type": "object",
      "description": "Supported parameters for an Extractive Summarization task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "modelVersion": {
          "type": "string",
          "description": "model version",
          "default": "latest"
        },
        "sentenceCount": {
          "type": "integer",
          "format": "int64",
          "default": 3
        },
        "sortBy": {
          "type": "string",
          "description": "The sorting criteria to use for the results of Extractive Summarization.",
          "default": "Offset",
          "enum": [
            "Offset",
            "Rank"
          ],
          "x-ms-enum": {
            "name": "ExtractiveSummarizationSortingCriteria",
            "modelAsString": true,
            "values": [
              {
                "name": "Offset",
                "value": "Offset",
                "description": "Indicates that results should be sorted in order of appearance in the text."
              },
              {
                "name": "Rank",
                "value": "Rank",
                "description": "Indicates that results should be sorted in order of importance (i.e. rank score) according to the model."
              }
            ]
          }
        },
        "stringIndexType": {
          "type": "string",
          "description": "Specifies the method used to interpret string offsets.  Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information see https://aka.ms/text-analytics-offsets.",
          "default": "TextElements_v8",
          "enum": [
            "TextElements_v8",
            "UnicodeCodePoint",
            "Utf16CodeUnit"
          ],
          "x-ms-enum": {
            "name": "StringIndexType",
            "modelAsString": true,
            "values": [
              {
                "name": "TextElements_v8",
                "value": "TextElements_v8",
                "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
              },
              {
                "name": "UnicodeCodePoint",
                "value": "UnicodeCodePoint",
                "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
              },
              {
                "name": "Utf16CodeUnit",
                "value": "Utf16CodeUnit",
                "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
              }
            ]
          }
        }
      }
    },
    "HealthcareAssertion": {
      "type": "object",
      "properties": {
        "conditionality": {
          "$ref": "#/definitions/Conditionality",
          "description": "Describes any conditionality on the entity."
        },
        "certainty": {
          "$ref": "#/definitions/Certainty",
          "description": "Describes the entities certainty and polarity."
        },
        "association": {
          "$ref": "#/definitions/Association",
          "description": "Describes if the entity is the subject of the text or if it describes someone else."
        }
      }
    },
    "HealthcareEntitiesDocumentResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/DocumentWarning"
          },
          "x-ms-identifiers": []
        },
        "statistics": {
          "$ref": "#/definitions/DocumentStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the document payload."
        },
        "entities": {
          "type": "array",
          "description": "Healthcare entities.",
          "items": {
            "$ref": "#/definitions/HealthcareEntity"
          },
          "x-ms-identifiers": []
        },
        "relations": {
          "type": "array",
          "description": "Healthcare entity relations.",
          "items": {
            "$ref": "#/definitions/HealthcareRelation"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "id",
        "warnings",
        "entities",
        "relations"
      ]
    },
    "HealthcareEntity": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Entity text as appears in the request."
        },
        "category": {
          "$ref": "#/definitions/healthcareEntityCategory",
          "description": "Healthcare Entity Category."
        },
        "subcategory": {
          "type": "string",
          "description": "(Optional) Entity sub type."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position for the entity text. Use of different 'stringIndexType' values can affect the offset returned."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Length for the entity text. Use of different 'stringIndexType' values can affect the length returned."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "Confidence score between 0 and 1 of the extracted entity."
        },
        "assertion": {
          "$ref": "#/definitions/HealthcareAssertion"
        },
        "name": {
          "type": "string",
          "description": "Preferred name for the entity. Example: 'histologically' would have a 'name' of 'histologic'."
        },
        "links": {
          "type": "array",
          "description": "Entity references in known data sources.",
          "items": {
            "$ref": "#/definitions/HealthcareEntityLink"
          }
        }
      },
      "required": [
        "text",
        "category",
        "offset",
        "length",
        "confidenceScore"
      ]
    },
    "HealthcareEntityLink": {
      "type": "object",
      "properties": {
        "dataSource": {
          "type": "string",
          "description": "Entity Catalog. Examples include: UMLS, CHV, MSH, etc."
        },
        "id": {
          "type": "string",
          "description": "Entity id in the given source catalog."
        }
      },
      "required": [
        "dataSource",
        "id"
      ]
    },
    "HealthcareLROResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/HealthcareResult"
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROResult"
        }
      ],
      "x-ms-discriminator-value": "HealthcareLROResults"
    },
    "HealthcareLROTask": {
      "type": "object",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/HealthcareTaskParameters"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROTask"
        }
      ],
      "x-ms-discriminator-value": "Healthcare"
    },
    "HealthcareRelation": {
      "type": "object",
      "description": "Every relation is an entity graph of a certain relationType, where all entities are connected and have specific roles within the relation context.",
      "properties": {
        "relationType": {
          "$ref": "#/definitions/relationType",
          "description": "Type of relation. Examples include: `DosageOfMedication` or 'FrequencyOfMedication', etc."
        },
        "entities": {
          "type": "array",
          "description": "The entities in the relation.",
          "items": {
            "$ref": "#/definitions/HealthcareRelationEntity"
          },
          "x-ms-identifiers": []
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "Confidence score between 0 and 1 of the extracted relation."
        }
      },
      "required": [
        "relationType",
        "entities"
      ]
    },
    "HealthcareRelationEntity": {
      "type": "object",
      "properties": {
        "ref": {
          "type": "string",
          "description": "Reference link object, using a JSON pointer RFC 6901 (URI Fragment Identifier Representation), pointing to the entity ."
        },
        "role": {
          "type": "string",
          "description": "Role of entity in the relationship. For example: 'CD20-positive diffuse large B-cell lymphoma' has the following entities with their roles in parenthesis:  CD20 (GeneOrProtein), Positive (Expression), diffuse large B-cell lymphoma (Diagnosis)."
        }
      },
      "required": [
        "ref",
        "role"
      ]
    },
    "HealthcareResult": {
      "type": "object",
      "description": "Pre built result",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthcareEntitiesDocumentResult"
          }
        }
      },
      "required": [
        "errors",
        "modelVersion",
        "documents"
      ]
    },
    "HealthcareTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a Healthcare task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "modelVersion": {
          "type": "string",
          "description": "model version",
          "default": "latest"
        },
        "stringIndexType": {
          "type": "string",
          "description": "Specifies the method used to interpret string offsets.  Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information see https://aka.ms/text-analytics-offsets.",
          "default": "TextElements_v8",
          "enum": [
            "TextElements_v8",
            "UnicodeCodePoint",
            "Utf16CodeUnit"
          ],
          "x-ms-enum": {
            "name": "StringIndexType",
            "modelAsString": true,
            "values": [
              {
                "name": "TextElements_v8",
                "value": "TextElements_v8",
                "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
              },
              {
                "name": "UnicodeCodePoint",
                "value": "UnicodeCodePoint",
                "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
              },
              {
                "name": "Utf16CodeUnit",
                "value": "Utf16CodeUnit",
                "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
              }
            ]
          }
        }
      }
    },
    "InnerErrorCode": {
      "type": "string",
      "description": "Human-readable error code.",
      "enum": [
        "InvalidRequest",
        "InvalidParameterValue",
        "KnowledgeBaseNotFound",
        "AzureCognitiveSearchNotFound",
        "AzureCognitiveSearchThrottling",
        "ExtractionFailure",
        "InvalidRequestBodyFormat",
        "EmptyRequest",
        "MissingInputDocuments",
        "InvalidDocument",
        "ModelVersionIncorrect",
        "InvalidDocumentBatch",
        "UnsupportedLanguageCode",
        "InvalidCountryHint"
      ],
      "x-ms-enum": {
        "name": "InnerErrorCode",
        "modelAsString": true
      }
    },
    "InnerErrorModel": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "$ref": "#/definitions/InnerErrorCode",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "details": {
          "type": "object",
          "description": "Error details.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "target": {
          "type": "string",
          "description": "Error target."
        },
        "innererror": {
          "$ref": "#/definitions/InnerErrorModel",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "KeyPhraseExtractionLROResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/KeyPhraseResult"
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROResult"
        }
      ],
      "x-ms-discriminator-value": "KeyPhraseExtractionLROResults"
    },
    "KeyPhraseLROTask": {
      "type": "object",
      "description": "An object representing the task definition for a Key Phrase Extraction task.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/KeyPhraseTaskParameters"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROTask"
        }
      ],
      "x-ms-discriminator-value": "KeyPhraseExtraction"
    },
    "KeyPhraseResult": {
      "type": "object",
      "description": "Pre built result",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        },
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/KeyPhrasesDocumentResult"
          }
        }
      },
      "required": [
        "errors",
        "modelVersion",
        "documents"
      ]
    },
    "KeyPhraseTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a Key Phrase Extraction task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "modelVersion": {
          "type": "string",
          "description": "model version",
          "default": "latest"
        }
      }
    },
    "KeyPhraseTaskResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/KeyPhraseResult"
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextTaskResult"
        }
      ],
      "x-ms-discriminator-value": "KeyPhraseExtractionResults"
    },
    "KeyPhrasesDocumentResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/DocumentWarning"
          },
          "x-ms-identifiers": []
        },
        "statistics": {
          "$ref": "#/definitions/DocumentStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the document payload."
        },
        "keyPhrases": {
          "type": "array",
          "description": "A list of representative words or phrases. The number of key phrases returned is proportional to the number of words in the input document.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "warnings",
        "keyPhrases"
      ]
    },
    "LanguageDetectionAnalysisInput": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageInput"
          }
        }
      }
    },
    "LanguageDetectionDocumentResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/DocumentWarning"
          },
          "x-ms-identifiers": []
        },
        "statistics": {
          "$ref": "#/definitions/DocumentStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the document payload."
        },
        "detectedLanguage": {
          "$ref": "#/definitions/DetectedLanguage",
          "description": "Detected Language."
        }
      },
      "required": [
        "id",
        "warnings",
        "detectedLanguage"
      ]
    },
    "LanguageDetectionResult": {
      "type": "object",
      "description": "Pre built result",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageDetectionDocumentResult"
          }
        }
      },
      "required": [
        "errors",
        "modelVersion",
        "documents"
      ]
    },
    "LanguageDetectionTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a Language Detection task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "modelVersion": {
          "type": "string",
          "description": "model version",
          "default": "latest"
        }
      }
    },
    "LanguageDetectionTaskResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/LanguageDetectionResult"
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextTaskResult"
        }
      ],
      "x-ms-discriminator-value": "LanguageDetectionResults"
    },
    "LanguageInput": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique, non-empty document identifier."
        },
        "text": {
          "type": "string",
          "description": "The input text to process."
        },
        "countryHint": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "text"
      ]
    },
    "LinkedEntitiesDocumentResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/DocumentWarning"
          },
          "x-ms-identifiers": []
        },
        "statistics": {
          "$ref": "#/definitions/DocumentStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the document payload."
        },
        "entities": {
          "type": "array",
          "description": "Recognized well known entities in the document.",
          "items": {
            "$ref": "#/definitions/LinkedEntity"
          }
        }
      },
      "required": [
        "id",
        "warnings",
        "entities"
      ]
    },
    "LinkedEntity": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Entity Linking formal name."
        },
        "matches": {
          "type": "array",
          "description": "List of instances this entity appears in the text.",
          "items": {
            "$ref": "#/definitions/Match"
          },
          "x-ms-identifiers": []
        },
        "language": {
          "type": "string",
          "description": "Language used in the data source."
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the recognized entity from the data source."
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL for the entity's page from the data source."
        },
        "dataSource": {
          "type": "string",
          "description": "Data source used to extract entity linking, such as Wiki/Bing etc."
        },
        "bingId": {
          "type": "string",
          "description": "Bing Entity Search API unique identifier of the recognized entity."
        }
      },
      "required": [
        "name",
        "matches",
        "language",
        "url",
        "dataSource"
      ]
    },
    "Match": {
      "type": "object",
      "properties": {
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "If a well known item is recognized, a decimal number denoting the confidence level between 0 and 1 will be returned."
        },
        "text": {
          "type": "string",
          "description": "Entity text as appears in the request."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position for the entity match text."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Length for the entity match text."
        }
      },
      "required": [
        "confidenceScore",
        "text",
        "offset",
        "length"
      ]
    },
    "MultiLanguageAnalysisInput": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "description": "The input documents to be analyzed.",
          "items": {
            "$ref": "#/definitions/MultiLanguageInput"
          }
        }
      }
    },
    "MultiLanguageInput": {
      "type": "object",
      "description": "Contains an input document to be analyzed by the service.",
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique, non-empty document identifier."
        },
        "text": {
          "type": "string",
          "description": "The input text to process."
        },
        "language": {
          "type": "string",
          "description": "(Optional) This is the 2 letter ISO 639-1 representation of a language. For example, use \"en\" for English; \"es\" for Spanish etc. If not set, use \"en\" for English as default. (Following only applies to 2023-04-15-preview and above) For Auto Language Detection, use \"auto\". If not set, use \"en\" for English as default."
        }
      },
      "required": [
        "id",
        "text"
      ]
    },
    "PiiCategory": {
      "type": "string",
      "description": "(Optional) describes the PII categories to return",
      "enum": [
        "ABARoutingNumber",
        "ARNationalIdentityNumber",
        "AUBankAccountNumber",
        "AUDriversLicenseNumber",
        "AUMedicalAccountNumber",
        "AUPassportNumber",
        "AUTaxFileNumber",
        "AUBusinessNumber",
        "AUCompanyNumber",
        "ATIdentityCard",
        "ATTaxIdentificationNumber",
        "ATValueAddedTaxNumber",
        "AzureDocumentDBAuthKey",
        "AzureIAASDatabaseConnectionAndSQLString",
        "AzureIoTConnectionString",
        "AzurePublishSettingPassword",
        "AzureRedisCacheString",
        "AzureSAS",
        "AzureServiceBusString",
        "AzureStorageAccountKey",
        "AzureStorageAccountGeneric",
        "BENationalNumber",
        "BENationalNumberV2",
        "BEValueAddedTaxNumber",
        "BRCPFNumber",
        "BRLegalEntityNumber",
        "BRNationalIDRG",
        "BGUniformCivilNumber",
        "CABankAccountNumber",
        "CADriversLicenseNumber",
        "CAHealthServiceNumber",
        "CAPassportNumber",
        "CAPersonalHealthIdentification",
        "CASocialInsuranceNumber",
        "CLIdentityCardNumber",
        "CNResidentIdentityCardNumber",
        "CreditCardNumber",
        "HRIdentityCardNumber",
        "HRNationalIDNumber",
        "HRPersonalIdentificationNumber",
        "HRPersonalIdentificationOIBNumberV2",
        "CYIdentityCard",
        "CYTaxIdentificationNumber",
        "CZPersonalIdentityNumber",
        "CZPersonalIdentityV2",
        "DKPersonalIdentificationNumber",
        "DKPersonalIdentificationV2",
        "DrugEnforcementAgencyNumber",
        "EEPersonalIdentificationCode",
        "EUDebitCardNumber",
        "EUDriversLicenseNumber",
        "EUGPSCoordinates",
        "EUNationalIdentificationNumber",
        "EUPassportNumber",
        "EUSocialSecurityNumber",
        "EUTaxIdentificationNumber",
        "FIEuropeanHealthNumber",
        "FINationalID",
        "FINationalIDV2",
        "FIPassportNumber",
        "FRDriversLicenseNumber",
        "FRHealthInsuranceNumber",
        "FRNationalID",
        "FRPassportNumber",
        "FRSocialSecurityNumber",
        "FRTaxIdentificationNumber",
        "FRValueAddedTaxNumber",
        "DEDriversLicenseNumber",
        "DEPassportNumber",
        "DEIdentityCardNumber",
        "DETaxIdentificationNumber",
        "DEValueAddedNumber",
        "GRNationalIDCard",
        "GRNationalIDV2",
        "GRTaxIdentificationNumber",
        "HKIdentityCardNumber",
        "HUValueAddedNumber",
        "HUPersonalIdentificationNumber",
        "HUTaxIdentificationNumber",
        "INPermanentAccount",
        "INUniqueIdentificationNumber",
        "IDIdentityCardNumber",
        "InternationalBankingAccountNumber",
        "IEPersonalPublicServiceNumber",
        "IEPersonalPublicServiceNumberV2",
        "ILBankAccountNumber",
        "ILNationalID",
        "ITDriversLicenseNumber",
        "ITFiscalCode",
        "ITValueAddedTaxNumber",
        "JPBankAccountNumber",
        "JPDriversLicenseNumber",
        "JPPassportNumber",
        "JPResidentRegistrationNumber",
        "JPSocialInsuranceNumber",
        "JPMyNumberCorporate",
        "JPMyNumberPersonal",
        "JPResidenceCardNumber",
        "LVPersonalCode",
        "LTPersonalCode",
        "LUNationalIdentificationNumberNatural",
        "LUNationalIdentificationNumberNonNatural",
        "MYIdentityCardNumber",
        "MTIdentityCardNumber",
        "MTTaxIDNumber",
        "NLCitizensServiceNumber",
        "NLCitizensServiceNumberV2",
        "NLTaxIdentificationNumber",
        "NLValueAddedTaxNumber",
        "NZBankAccountNumber",
        "NZDriversLicenseNumber",
        "NZInlandRevenueNumber",
        "NZMinistryOfHealthNumber",
        "NZSocialWelfareNumber",
        "NOIdentityNumber",
        "PHUnifiedMultiPurposeIDNumber",
        "PLIdentityCard",
        "PLNationalID",
        "PLNationalIDV2",
        "PLPassportNumber",
        "PLTaxIdentificationNumber",
        "PLREGONNumber",
        "PTCitizenCardNumber",
        "PTCitizenCardNumberV2",
        "PTTaxIdentificationNumber",
        "ROPersonalNumericalCode",
        "RUPassportNumberDomestic",
        "RUPassportNumberInternational",
        "SANationalID",
        "SGNationalRegistrationIdentityCardNumber",
        "SKPersonalNumber",
        "SITaxIdentificationNumber",
        "SIUniqueMasterCitizenNumber",
        "ZAIdentificationNumber",
        "KRResidentRegistrationNumber",
        "ESDNI",
        "ESSocialSecurityNumber",
        "ESTaxIdentificationNumber",
        "SQLServerConnectionString",
        "SENationalID",
        "SENationalIDV2",
        "SEPassportNumber",
        "SETaxIdentificationNumber",
        "SWIFTCode",
        "CHSocialSecurityNumber",
        "TWNationalID",
        "TWPassportNumber",
        "TWResidentCertificate",
        "THPopulationIdentificationCode",
        "TRNationalIdentificationNumber",
        "UKDriversLicenseNumber",
        "UKElectoralRollNumber",
        "UKNationalHealthNumber",
        "UKNationalInsuranceNumber",
        "UKUniqueTaxpayerNumber",
        "USUKPassportNumber",
        "USBankAccountNumber",
        "USDriversLicenseNumber",
        "USIndividualTaxpayerIdentification",
        "USSocialSecurityNumber",
        "UAPassportNumberDomestic",
        "UAPassportNumberInternational",
        "Organization",
        "Email",
        "URL",
        "Age",
        "PhoneNumber",
        "IPAddress",
        "Date",
        "Person",
        "Address",
        "All",
        "Default"
      ],
      "x-ms-enum": {
        "name": "PiiCategory",
        "modelAsString": true
      }
    },
    "PiiEntitiesDocumentResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/DocumentWarning"
          },
          "x-ms-identifiers": []
        },
        "statistics": {
          "$ref": "#/definitions/DocumentStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the document payload."
        },
        "redactedText": {
          "type": "string",
          "description": "Returns redacted text."
        },
        "entities": {
          "type": "array",
          "description": "Recognized entities in the document.",
          "items": {
            "$ref": "#/definitions/Entity"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "id",
        "warnings",
        "redactedText",
        "entities"
      ]
    },
    "PiiEntityRecognitionLROResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/PiiResult"
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROResult"
        }
      ],
      "x-ms-discriminator-value": "PiiEntityRecognitionLROResults"
    },
    "PiiLROTask": {
      "type": "object",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/PiiTaskParameters"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROTask"
        }
      ],
      "x-ms-discriminator-value": "PiiEntityRecognition"
    },
    "PiiResult": {
      "type": "object",
      "description": "Pre built result",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        },
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/PiiEntitiesDocumentResult"
          }
        }
      },
      "required": [
        "errors",
        "modelVersion",
        "documents"
      ]
    },
    "PiiTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a PII Entities Recognition task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "modelVersion": {
          "type": "string",
          "description": "model version",
          "default": "latest"
        },
        "domain": {
          "type": "string",
          "default": "none",
          "enum": [
            "phi",
            "none"
          ],
          "x-ms-enum": {
            "name": "PiiDomain",
            "modelAsString": true,
            "values": [
              {
                "name": "phi",
                "value": "phi",
                "description": "Indicates that entities in the Personal Health Information domain should be redacted."
              },
              {
                "name": "none",
                "value": "none",
                "description": "Indicates that no domain is specified."
              }
            ]
          }
        },
        "piiCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PiiCategory"
          }
        },
        "stringIndexType": {
          "type": "string",
          "description": "Specifies the method used to interpret string offsets.  Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information see https://aka.ms/text-analytics-offsets.",
          "default": "TextElements_v8",
          "enum": [
            "TextElements_v8",
            "UnicodeCodePoint",
            "Utf16CodeUnit"
          ],
          "x-ms-enum": {
            "name": "StringIndexType",
            "modelAsString": true,
            "values": [
              {
                "name": "TextElements_v8",
                "value": "TextElements_v8",
                "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
              },
              {
                "name": "UnicodeCodePoint",
                "value": "UnicodeCodePoint",
                "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
              },
              {
                "name": "Utf16CodeUnit",
                "value": "Utf16CodeUnit",
                "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
              }
            ]
          }
        }
      }
    },
    "PiiTaskResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/PiiResult"
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextTaskResult"
        }
      ],
      "x-ms-discriminator-value": "PiiEntityRecognitionResults"
    },
    "RequestStatistics": {
      "type": "object",
      "description": "if showStats=true was specified in the request this field will contain information about the request payload.",
      "properties": {
        "documentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of documents submitted in the request."
        },
        "validDocumentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of valid documents. This excludes empty, over-size limit or non-supported languages documents."
        },
        "erroneousDocumentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of invalid documents. This includes empty, over-size limit or non-supported languages documents."
        },
        "transactionsCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of transactions for the request."
        }
      },
      "required": [
        "documentsCount",
        "validDocumentsCount",
        "erroneousDocumentsCount",
        "transactionsCount"
      ],
      "additionalProperties": {}
    },
    "SentenceAssessment": {
      "type": "object",
      "properties": {
        "sentiment": {
          "$ref": "#/definitions/TokenSentimentValue"
        },
        "confidenceScores": {
          "$ref": "#/definitions/TargetConfidenceScoreLabel"
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "The target offset from the start of the sentence."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the target."
        },
        "text": {
          "type": "string",
          "description": "The target text detected."
        },
        "isNegated": {
          "type": "boolean",
          "description": "The indicator representing if the assessment is negated."
        }
      },
      "required": [
        "sentiment",
        "confidenceScores",
        "offset",
        "length",
        "text",
        "isNegated"
      ]
    },
    "SentenceSentiment": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "The sentence text."
        },
        "sentiment": {
          "$ref": "#/definitions/SentenceSentimentValue",
          "description": "The predicted Sentiment for the sentence."
        },
        "confidenceScores": {
          "$ref": "#/definitions/SentimentConfidenceScores",
          "description": "The sentiment confidence score between 0 and 1 for the sentence for all classes."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "The target offset from the start of the sentence."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the target."
        },
        "targets": {
          "type": "array",
          "description": "The array of sentence targets for the sentence.",
          "items": {
            "$ref": "#/definitions/SentenceTarget"
          },
          "x-ms-identifiers": []
        },
        "assessments": {
          "type": "array",
          "description": "The array of assessments for the sentence.",
          "items": {
            "$ref": "#/definitions/SentenceAssessment"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "text",
        "sentiment",
        "confidenceScores",
        "offset",
        "length"
      ]
    },
    "SentenceSentimentValue": {
      "type": "string",
      "description": "The predicted Sentiment for the sentence.",
      "enum": [
        "positive",
        "neutral",
        "negative"
      ],
      "x-ms-enum": {
        "name": "SentenceSentimentValue",
        "modelAsString": false
      }
    },
    "SentenceTarget": {
      "type": "object",
      "properties": {
        "sentiment": {
          "$ref": "#/definitions/TokenSentimentValue"
        },
        "confidenceScores": {
          "$ref": "#/definitions/TargetConfidenceScoreLabel"
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "The target offset from the start of the sentence."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the target."
        },
        "text": {
          "type": "string",
          "description": "The target text detected."
        },
        "relations": {
          "type": "array",
          "description": "The array of either assessment or target objects which is related to the target.",
          "items": {
            "$ref": "#/definitions/TargetRelation"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "sentiment",
        "confidenceScores",
        "offset",
        "length",
        "text",
        "relations"
      ]
    },
    "SentimentAnalysisLROTask": {
      "type": "object",
      "description": "An object representing the task definition for a Sentiment Analysis task.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/SentimentAnalysisTaskParameters"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROTask"
        }
      ],
      "x-ms-discriminator-value": "SentimentAnalysis"
    },
    "SentimentAnalysisTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a Sentiment Analysis task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "description": "logging opt out",
          "default": false
        },
        "modelVersion": {
          "type": "string",
          "description": "model version",
          "default": "latest"
        },
        "opinionMining": {
          "type": "boolean",
          "default": false
        },
        "stringIndexType": {
          "type": "string",
          "description": "Specifies the method used to interpret string offsets.  Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information see https://aka.ms/text-analytics-offsets.",
          "default": "TextElements_v8",
          "enum": [
            "TextElements_v8",
            "UnicodeCodePoint",
            "Utf16CodeUnit"
          ],
          "x-ms-enum": {
            "name": "StringIndexType",
            "modelAsString": true,
            "values": [
              {
                "name": "TextElements_v8",
                "value": "TextElements_v8",
                "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
              },
              {
                "name": "UnicodeCodePoint",
                "value": "UnicodeCodePoint",
                "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
              },
              {
                "name": "Utf16CodeUnit",
                "value": "Utf16CodeUnit",
                "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
              }
            ]
          }
        }
      }
    },
    "SentimentConfidenceScores": {
      "type": "object",
      "description": "Represents the confidence scores between 0 and 1 across all sentiment classes: positive, neutral, negative.",
      "properties": {
        "positive": {
          "type": "number",
          "format": "double",
          "description": "Confidence score for positive sentiment"
        },
        "neutral": {
          "type": "number",
          "format": "double",
          "description": "Confidence score for neutral sentiment"
        },
        "negative": {
          "type": "number",
          "format": "double",
          "description": "Confidence score for negative sentiment"
        }
      },
      "required": [
        "positive",
        "neutral",
        "negative"
      ]
    },
    "SentimentDocumentResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/DocumentWarning"
          },
          "x-ms-identifiers": []
        },
        "statistics": {
          "$ref": "#/definitions/DocumentStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the document payload."
        },
        "sentiment": {
          "$ref": "#/definitions/DocumentSentimentValue",
          "description": "Predicted sentiment for document (Negative, Neutral, Positive, or Mixed)."
        },
        "confidenceScores": {
          "$ref": "#/definitions/SentimentConfidenceScores"
        },
        "sentences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SentenceSentiment"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "id",
        "warnings",
        "sentiment",
        "confidenceScores",
        "sentences"
      ]
    },
    "SentimentLROResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/SentimentResponse"
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextLROResult"
        }
      ],
      "x-ms-discriminator-value": "SentimentAnalysisLROResults"
    },
    "SentimentRelationType": {
      "type": "string",
      "description": "The type related to the target.",
      "enum": [
        "assessment",
        "target"
      ],
      "x-ms-enum": {
        "name": "SentimentRelationType",
        "modelAsString": false
      }
    },
    "SentimentResponse": {
      "type": "object",
      "description": "Sentiment analysis per document.",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics",
          "description": "if showStats=true was specified in the request this field will contain information about the request payload."
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        },
        "documents": {
          "type": "array",
          "description": "The sentiment analysis results for each document in the input.",
          "items": {
            "$ref": "#/definitions/SentimentDocumentResult"
          }
        }
      },
      "required": [
        "errors",
        "modelVersion",
        "documents"
      ]
    },
    "SentimentTaskResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/SentimentResponse"
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeTextTaskResult"
        }
      ],
      "x-ms-discriminator-value": "SentimentAnalysisResults"
    },
    "State": {
      "type": "string",
      "description": "The status of the task at the mentioned last update time.",
      "enum": [
        "notStarted",
        "running",
        "succeeded",
        "partiallyCompleted",
        "failed",
        "cancelled",
        "cancelling"
      ],
      "x-ms-enum": {
        "name": "State",
        "modelAsString": true
      }
    },
    "SummaryContext": {
      "type": "object",
      "description": "The context of the summary.",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position for the context. Use of different 'stringIndexType' values can affect the offset returned."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the context. Use of different 'stringIndexType' values can affect the length returned."
        }
      },
      "required": [
        "offset",
        "length"
      ]
    },
    "TargetConfidenceScoreLabel": {
      "type": "object",
      "description": "Represents the confidence scores across all sentiment classes: positive and negative.",
      "properties": {
        "positive": {
          "type": "number",
          "format": "double",
          "description": "Confidence score for positive sentiment"
        },
        "negative": {
          "type": "number",
          "format": "double",
          "description": "Confidence score for negative sentiment"
        }
      },
      "required": [
        "positive",
        "negative"
      ]
    },
    "TargetRelation": {
      "type": "object",
      "properties": {
        "ref": {
          "type": "string",
          "description": "The JSON pointer indicating the linked object."
        },
        "relationType": {
          "$ref": "#/definitions/SentimentRelationType",
          "description": "The type related to the target."
        }
      },
      "required": [
        "ref",
        "relationType"
      ]
    },
    "Tasks": {
      "type": "object",
      "properties": {
        "completed": {
          "type": "integer",
          "format": "int64"
        },
        "failed": {
          "type": "integer",
          "format": "int64"
        },
        "inProgress": {
          "type": "integer",
          "format": "int64"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnalyzeTextLROResult"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "completed",
        "failed",
        "inProgress",
        "total"
      ]
    },
    "TokenSentimentValue": {
      "type": "string",
      "description": "The predicted Sentiment for the sentence.",
      "enum": [
        "positive",
        "mixed",
        "negative"
      ],
      "x-ms-enum": {
        "name": "TokenSentimentValue",
        "modelAsString": false
      }
    },
    "healthcareEntityCategory": {
      "type": "string",
      "description": "Healthcare Entity Category.",
      "enum": [
        "BodyStructure",
        "Age",
        "Gender",
        "ExaminationName",
        "Date",
        "Direction",
        "Frequency",
        "MeasurementValue",
        "MeasurementUnit",
        "RelationalOperator",
        "Time",
        "GeneOrProtein",
        "Variant",
        "AdministrativeEvent",
        "CareEnvironment",
        "HealthcareProfession",
        "Diagnosis",
        "SymptomOrSign",
        "ConditionQualifier",
        "MedicationClass",
        "MedicationName",
        "Dosage",
        "MedicationForm",
        "MedicationRoute",
        "FamilyRelation",
        "TreatmentName",
        "Ethnicity",
        "Course",
        "Expression",
        "MutationType",
        "ConditionScale",
        "Allergen",
        "Employment",
        "LivingStatus",
        "SubstanceUse",
        "SubstanceUseAmount"
      ],
      "x-ms-enum": {
        "name": "healthcareEntityCategory",
        "modelAsString": true
      }
    },
    "relationType": {
      "type": "string",
      "description": "Type of relation. Examples include: `DosageOfMedication` or 'FrequencyOfMedication', etc.",
      "enum": [
        "Abbreviation",
        "DirectionOfBodyStructure",
        "DirectionOfCondition",
        "DirectionOfExamination",
        "DirectionOfTreatment",
        "DosageOfMedication",
        "FormOfMedication",
        "FrequencyOfMedication",
        "FrequencyOfTreatment",
        "QualifierOfCondition",
        "RelationOfExamination",
        "RouteOfMedication",
        "TimeOfCondition",
        "TimeOfEvent",
        "TimeOfExamination",
        "TimeOfMedication",
        "TimeOfTreatment",
        "UnitOfCondition",
        "UnitOfExamination",
        "ValueOfCondition",
        "ValueOfExamination",
        "BodySiteOfCondition",
        "BodySiteOfTreatment",
        "CourseOfCondition",
        "CourseOfExamination",
        "CourseOfMedication",
        "CourseOfTreatment",
        "ExaminationFindsCondition",
        "ExpressionOfGene",
        "ExpressionOfVariant",
        "FrequencyOfCondition",
        "MutationTypeOfGene",
        "MutationTypeOfVariant",
        "ScaleOfCondition",
        "VariantOfGene"
      ],
      "x-ms-enum": {
        "name": "relationType",
        "modelAsString": true
      }
    }
  },
  "parameters": {
    "AnalyzeTextQueryParameters.showStats": {
      "name": "showStats",
      "in": "query",
      "description": "(Optional) if set to true, response will contain request and document level statistics.",
      "required": false,
      "type": "boolean",
      "x-ms-parameter-location": "method"
    },
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
