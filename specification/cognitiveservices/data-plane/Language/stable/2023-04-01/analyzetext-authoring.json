{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft Cognitive Language Service - Analyze Text Authoring",
    "version": "2023-04-01",
    "description": "The language service API is a suite of natural language processing (NLP) skills built with best-in-class Microsoft machine learning algorithms. The API can be used to analyze unstructured text for tasks such as sentiment analysis, key phrase extraction, language detection and question answering. Further documentation can be found in <a href=\"https://docs.microsoft.com/en-us/azure/cognitive-services/language-service/overview\">https://docs.microsoft.com/en-us/azure/cognitive-services/language-service/overview</a>."
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{Endpoint}/language",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "common.json#/parameters/Endpoint"
      }
    ]
  },
  "security": [
    {
      "AADToken": [
        "https://cognitiveservices.azure.com/.default"
      ]
    },
    {
      "apim_key": []
    }
  ],
  "securityDefinitions": {
    "AADToken": {
      "type": "oauth2",
      "description": "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/azure/active-directory/develop/v1-overview) Flows. When paired with [Azure role-based access](https://docs.microsoft.com/azure/role-based-access-control/overview) control it can be used to control access to Azure Maps REST APIs. Azure role-based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built-in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios, we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Notes\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to. This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* \nThe `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* \nThe Azure role-based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.\n* \nUsage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently, Azure Active Directory [v1.0 or v2.0](https://docs.microsoft.com/azure/active-directory/develop/azure-ad-endpoint-comparison) supports Work, School, and Guests but does not support Personal accounts.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "https://cognitiveservices.azure.com/.default": "https://cognitiveservices.azure.com/.default"
      }
    },
    "apim_key": {
      "type": "apiKey",
      "description": "A subscription key for a Language service resource.",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    }
  },
  "paths": {
    "/authoring/analyze-text/projects": {
      "get": {
        "operationId": "TextAnalysisAuthoring_ListProjects",
        "description": "Lists the existing projects.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "common.json#/parameters/TopParameter"
          },
          {
            "$ref": "common.json#/parameters/SkipParameter"
          },
          {
            "$ref": "common.json#/parameters/MaxPageSizeParameter"
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The metadata of projects.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringProjectsMetadata"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful List Projects": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulListProjects.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink",
          "itemName": "value"
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}": {
      "get": {
        "operationId": "TextAnalysisAuthoring_GetProject",
        "description": "Gets the details of a project.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "common.json#/parameters/ProjectNamePathParameter"
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The metadata of the project.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringProjectMetadata"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Project": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetProject.json"
          }
        }
      },
      "patch": {
        "operationId": "TextAnalysisAuthoring_CreateProject",
        "description": "Creates a new project or updates an existing one.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          {
            "$ref": "common.json#/parameters/ProjectNamePathParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The project parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringCreateProjectOptions"
            }
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The metadata of the updated project, if it already exists.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringProjectMetadata"
            }
          },
          "201": {
            "description": "The metadata of the created project.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringProjectMetadata"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Create Project": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulCreateProject.json"
          }
        }
      },
      "delete": {
        "operationId": "TextAnalysisAuthoring_DeleteProject",
        "description": "Deletes a project.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "common.json#/parameters/ProjectNamePathParameter"
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the job.",
            "headers": {
              "operation-location": {
                "type": "string",
                "description": "The location of the status API for monitoring the created job."
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Project": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulDeleteProject.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/authoring/analyze-text/projects/{projectName}/:export": {
      "post": {
        "operationId": "TextAnalysisAuthoring_Export",
        "description": "Triggers a job to export a project's data.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "common.json#/parameters/ProjectNamePathParameter"
          },
          {
            "$ref": "#/parameters/TextAnalysisAuthoringStringIndexTypeQueryParameter"
          },
          {
            "name": "assetKind",
            "in": "query",
            "description": "Kind of asset to export.",
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "trainedModelLabel",
            "in": "query",
            "description": "Trained model label to export. If the trainedModelLabel is null, the default behavior is to export the current working copy.",
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the job.",
            "headers": {
              "operation-location": {
                "type": "string",
                "description": "The location of the status API for monitoring the created job."
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Export Project": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulExportProject.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/authoring/analyze-text/projects/{projectName}/:import": {
      "post": {
        "operationId": "TextAnalysisAuthoring_Import",
        "description": "Triggers a job to import a project. If a project with the same name already exists, the data of that project is replaced.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "common.json#/parameters/ProjectNamePathParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The project data to import.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringExportedProject"
            }
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the job.",
            "headers": {
              "operation-location": {
                "type": "string",
                "description": "The location of the status API for monitoring the created job."
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Import Project": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulImportProject.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/authoring/analyze-text/projects/{projectName}/:train": {
      "post": {
        "operationId": "TextAnalysisAuthoring_Train",
        "description": "Triggers a training job for a project.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "common.json#/parameters/ProjectNamePathParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The training input parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringTrainingJobOptions"
            }
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the job.",
            "headers": {
              "operation-location": {
                "type": "string",
                "description": "The location of the status API for monitoring the created job."
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Train Project": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulTrainProject.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/authoring/analyze-text/projects/{projectName}/deployments": {
      "get": {
        "operationId": "TextAnalysisAuthoring_ListDeployments",
        "description": "Lists the deployments belonging to a project.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "common.json#/parameters/ProjectNamePathParameter"
          },
          {
            "$ref": "common.json#/parameters/TopParameter"
          },
          {
            "$ref": "common.json#/parameters/SkipParameter"
          },
          {
            "$ref": "common.json#/parameters/MaxPageSizeParameter"
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all deployments.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringProjectDeployments"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful List Deployments": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulListDeployments.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink",
          "itemName": "value"
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/deployments/{deploymentName}": {
      "get": {
        "operationId": "TextAnalysisAuthoring_GetDeployment",
        "description": "Gets the details of a deployment.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "common.json#/parameters/ProjectNamePathParameter"
          },
          {
            "$ref": "common.json#/parameters/DeploymentNamePathParameter"
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Deployment info.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringProjectDeployment"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Deployment": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetDeployment.json"
          }
        }
      },
      "put": {
        "operationId": "TextAnalysisAuthoring_DeployProject",
        "description": "Creates a new deployment or replaces an existing one.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "common.json#/parameters/ProjectNamePathParameter"
          },
          {
            "$ref": "common.json#/parameters/DeploymentNamePathParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The new deployment info.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringCreateDeploymentOptions"
            }
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the job.",
            "headers": {
              "operation-location": {
                "type": "string",
                "description": "The location of the status API for monitoring the created job."
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Deploy Project": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulDeployProject.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "TextAnalysisAuthoring_DeleteDeployment",
        "description": "Deletes a project deployment.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "common.json#/parameters/ProjectNamePathParameter"
          },
          {
            "$ref": "common.json#/parameters/DeploymentNamePathParameter"
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the job.",
            "headers": {
              "operation-location": {
                "type": "string",
                "description": "The location of the status API for monitoring the created job."
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Deployment": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulDeleteDeployment.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/authoring/analyze-text/projects/{projectName}/deployments/{deploymentName}/jobs/{jobId}": {
      "get": {
        "operationId": "TextAnalysisAuthoring_GetDeploymentStatus",
        "description": "Gets the status of an existing deployment job.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "common.json#/parameters/ProjectNamePathParameter"
          },
          {
            "$ref": "common.json#/parameters/DeploymentNamePathParameter"
          },
          {
            "$ref": "#/parameters/TextAnalysisAuthoringJobIdPathParameter"
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The deployment job result.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringDeploymentJobState"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Deployment Status": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetDeploymentStatus.json"
          }
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/deployments/:swap": {
      "post": {
        "operationId": "TextAnalysisAuthoring_SwapDeployments",
        "description": "Swaps two existing deployments with each other.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "common.json#/parameters/ProjectNamePathParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The job object to swap two deployments.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringSwapDeploymentsOptions"
            }
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the job.",
            "headers": {
              "operation-location": {
                "type": "string",
                "description": "The location of the status API for monitoring the created job."
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Swap Deployments": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulSwapDeployments.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/authoring/analyze-text/projects/{projectName}/deployments/swap/jobs/{jobId}": {
      "get": {
        "operationId": "TextAnalysisAuthoring_GetSwapDeploymentsStatus",
        "description": "Gets the status of an existing swap deployment job.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "common.json#/parameters/ProjectNamePathParameter"
          },
          {
            "$ref": "#/parameters/TextAnalysisAuthoringJobIdPathParameter"
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The swap deployment job result.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringDeploymentJobState"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Swap Deployments Status": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetSwapDeploymentsStatus.json"
          }
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/export/jobs/{jobId}": {
      "get": {
        "operationId": "TextAnalysisAuthoring_GetExportStatus",
        "description": "Gets the status of an export job. Once job completes, returns the project metadata, and assets.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "common.json#/parameters/ProjectNamePathParameter"
          },
          {
            "$ref": "#/parameters/TextAnalysisAuthoringJobIdPathParameter"
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The status of the long running operation.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringExportProjectJobState"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Export Status": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetExportStatus.json"
          }
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/import/jobs/{jobId}": {
      "get": {
        "operationId": "TextAnalysisAuthoring_GetImportStatus",
        "description": "Gets the status for an import.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "common.json#/parameters/ProjectNamePathParameter"
          },
          {
            "$ref": "#/parameters/TextAnalysisAuthoringJobIdPathParameter"
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The details of the long running operation.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringImportProjectJobState"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Import Status": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetImportStatus.json"
          }
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/models": {
      "get": {
        "operationId": "TextAnalysisAuthoring_ListTrainedModels",
        "description": "Lists the trained models belonging to a project.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "common.json#/parameters/ProjectNamePathParameter"
          },
          {
            "$ref": "common.json#/parameters/TopParameter"
          },
          {
            "$ref": "common.json#/parameters/SkipParameter"
          },
          {
            "$ref": "common.json#/parameters/MaxPageSizeParameter"
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all trained models.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringProjectTrainedModels"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful List Models": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulListModels.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink",
          "itemName": "value"
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/models/{trainedModelLabel}": {
      "get": {
        "operationId": "TextAnalysisAuthoring_GetTrainedModel",
        "description": "Gets the details of a trained model.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "common.json#/parameters/ProjectNamePathParameter"
          },
          {
            "$ref": "#/parameters/TextAnalysisAuthoringTrainedModelLabelPathParameter"
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Trained model info",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringProjectTrainedModel"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Model": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetModel.json"
          }
        }
      },
      "delete": {
        "operationId": "TextAnalysisAuthoring_DeleteTrainedModel",
        "description": "Deletes an existing trained model.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "common.json#/parameters/ProjectNamePathParameter"
          },
          {
            "$ref": "#/parameters/TextAnalysisAuthoringTrainedModelLabelPathParameter"
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted successfully."
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Model": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulDeleteModel.json"
          }
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/models/{trainedModelLabel}/:load-snapshot": {
      "post": {
        "operationId": "TextAnalysisAuthoring_LoadSnapshot",
        "description": "Restores the snapshot of this trained model to be the current working directory of the project.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "common.json#/parameters/ProjectNamePathParameter"
          },
          {
            "$ref": "#/parameters/TextAnalysisAuthoringTrainedModelLabelPathParameter"
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "A successful call results in loading the working directory with the snapshot of the model provided.",
            "headers": {
              "operation-location": {
                "type": "string",
                "description": "The location of the status API for monitoring the created job."
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Load Snapshot": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulLoadSnapshot.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/authoring/analyze-text/projects/{projectName}/models/{trainedModelLabel}/evaluation/result": {
      "get": {
        "operationId": "TextAnalysisAuthoring_GetModelEvaluationResults",
        "description": "Gets the detailed results of the evaluation for a trained model. This includes the raw inference results for the data included in the evaluation process.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "common.json#/parameters/ProjectNamePathParameter"
          },
          {
            "$ref": "#/parameters/TextAnalysisAuthoringTrainedModelLabelPathParameter"
          },
          {
            "$ref": "#/parameters/TextAnalysisAuthoringStringIndexTypeQueryParameter"
          },
          {
            "$ref": "common.json#/parameters/TopParameter"
          },
          {
            "$ref": "common.json#/parameters/SkipParameter"
          },
          {
            "$ref": "common.json#/parameters/MaxPageSizeParameter"
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of the evaluation results.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringEvaluationResults"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Model Evaluation": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetModelEvaluation.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink",
          "itemName": "value"
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/models/{trainedModelLabel}/evaluation/summary-result": {
      "get": {
        "operationId": "TextAnalysisAuthoring_GetModelEvaluationSummary",
        "description": "Gets the evaluation summary of a trained model. The summary includes high level performance measurements of the model e.g., F1, Precision, Recall, etc.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "common.json#/parameters/ProjectNamePathParameter"
          },
          {
            "$ref": "#/parameters/TextAnalysisAuthoringTrainedModelLabelPathParameter"
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all evaluation results.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringEvaluationSummary"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Model Evaluation Summary": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetModelEvaluationSummary.json"
          }
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/models/{trainedModelLabel}/load-snapshot/jobs/{jobId}": {
      "get": {
        "operationId": "TextAnalysisAuthoring_GetLoadSnapshotStatus",
        "description": "Gets the status for loading a snapshot.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "common.json#/parameters/ProjectNamePathParameter"
          },
          {
            "$ref": "#/parameters/TextAnalysisAuthoringTrainedModelLabelPathParameter"
          },
          {
            "$ref": "#/parameters/TextAnalysisAuthoringJobIdPathParameter"
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The details of the long running operation.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringLoadSnapshotJobState"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Load Snapshot Status": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetLoadSnapshotStatus.json"
          }
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/train/jobs": {
      "get": {
        "operationId": "TextAnalysisAuthoring_ListTrainingJobs",
        "description": "Lists the non-expired training jobs created for a project.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "common.json#/parameters/ProjectNamePathParameter"
          },
          {
            "$ref": "common.json#/parameters/TopParameter"
          },
          {
            "$ref": "common.json#/parameters/SkipParameter"
          },
          {
            "$ref": "common.json#/parameters/MaxPageSizeParameter"
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of the training jobs.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringTrainingJobs"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful List Training Jobs": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulListTrainingJobs.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink",
          "itemName": "value"
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/train/jobs/{jobId}": {
      "get": {
        "operationId": "TextAnalysisAuthoring_GetTrainingStatus",
        "description": "Gets the status for a training job.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "common.json#/parameters/ProjectNamePathParameter"
          },
          {
            "$ref": "#/parameters/TextAnalysisAuthoringJobIdPathParameter"
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The training job result.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringTrainingJobState"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Train Status": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetTrainStatus.json"
          }
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/train/jobs/{jobId}/:cancel": {
      "post": {
        "operationId": "TextAnalysisAuthoring_CancelTrainingJob",
        "description": "Triggers a cancellation for a running training job.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "common.json#/parameters/ProjectNamePathParameter"
          },
          {
            "$ref": "#/parameters/TextAnalysisAuthoringJobIdPathParameter"
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the job.",
            "headers": {
              "operation-location": {
                "type": "string",
                "description": "The location of the status API for monitoring the job cancellation."
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Cancel Training Job": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulCancelTrainingJob.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/authoring/analyze-text/projects/global/deletion-jobs/{jobId}": {
      "get": {
        "operationId": "TextAnalysisAuthoring_GetProjectDeletionStatus",
        "description": "Gets the status for a project deletion job.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/TextAnalysisAuthoringJobIdPathParameter"
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The project deletion job result.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringProjectDeletionJobState"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Project Deletion Status": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetProjectDeletionStatus.json"
          }
        }
      }
    },
    "/authoring/analyze-text/projects/global/languages": {
      "get": {
        "operationId": "TextAnalysisAuthoring_GetSupportedLanguages",
        "description": "Lists the supported languages.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/TextAnalysisAuthoringProjectKindQueryOptionalParameter"
          },
          {
            "$ref": "common.json#/parameters/TopParameter"
          },
          {
            "$ref": "common.json#/parameters/SkipParameter"
          },
          {
            "$ref": "common.json#/parameters/MaxPageSizeParameter"
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of supported languages.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringSupportedLanguages"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Supported Languages": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetSupportedLanguages.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink",
          "itemName": "value"
        }
      }
    },
    "/authoring/analyze-text/projects/global/training-config-versions": {
      "get": {
        "operationId": "TextAnalysisAuthoring_ListTrainingConfigVersions",
        "description": "Lists the support training config version for a given project type.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/TextAnalysisAuthoringProjectKindQueryParameter"
          },
          {
            "$ref": "common.json#/parameters/TopParameter"
          },
          {
            "$ref": "common.json#/parameters/SkipParameter"
          },
          {
            "$ref": "common.json#/parameters/MaxPageSizeParameter"
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all trained models.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringTrainingConfigVersions"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "common.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Supported Training Config Versions": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetSupportedTrainingConfigVersions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink",
          "itemName": "value"
        }
      }
    }
  },
  "definitions": {
    "TextAnalysisAuthoringConfusionMatrix": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/TextAnalysisAuthoringConfusionMatrixRow"
      },
      "x-ms-client-name": "ConfusionMatrix"
    },
    "TextAnalysisAuthoringConfusionMatrixCell": {
      "type": "object",
      "description": "Represents a cell in a confusion matrix.",
      "properties": {
        "normalizedValue": {
          "type": "number",
          "format": "float",
          "description": "Represents normalized value in percentages."
        },
        "rawValue": {
          "type": "number",
          "format": "float",
          "description": "Represents raw value."
        }
      },
      "required": [
        "normalizedValue",
        "rawValue"
      ],
      "x-ms-client-name": "ConfusionMatrixCell"
    },
    "TextAnalysisAuthoringConfusionMatrixRow": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/TextAnalysisAuthoringConfusionMatrixCell"
      },
      "x-ms-client-name": "ConfusionMatrixRow"
    },
    "TextAnalysisAuthoringCreateDeploymentOptions": {
      "type": "object",
      "description": "Represents the options for creating or updating a project deployment.",
      "properties": {
        "trainedModelLabel": {
          "type": "string",
          "description": "Represents the trained model label."
        }
      },
      "required": [
        "trainedModelLabel"
      ],
      "x-ms-client-name": "CreateDeploymentOptions"
    },
    "TextAnalysisAuthoringCreateProjectOptions": {
      "type": "object",
      "description": "Represents the options used to create or update a project.",
      "properties": {
        "projectKind": {
          "$ref": "#/definitions/TextAnalysisAuthoringProjectKind",
          "description": "The project kind."
        },
        "storageInputContainerName": {
          "type": "string",
          "description": "The storage container name."
        },
        "settings": {
          "$ref": "#/definitions/TextAnalysisAuthoringProjectSettings",
          "description": "The project settings."
        },
        "projectName": {
          "type": "string",
          "description": "The new project name."
        },
        "multilingual": {
          "type": "boolean",
          "description": "Whether the project would be used for multiple languages or not."
        },
        "description": {
          "type": "string",
          "description": "The project description."
        },
        "language": {
          "type": "string",
          "description": "The project language. This is BCP-47 representation of a language. For example, use \"en\" for English, \"en-gb\" for English (UK), \"es\" for Spanish etc."
        }
      },
      "required": [
        "projectKind",
        "storageInputContainerName",
        "projectName",
        "language"
      ],
      "x-ms-client-name": "CreateProjectOptions"
    },
    "TextAnalysisAuthoringCustomEntityRecognitionDocumentEvaluationResult": {
      "type": "object",
      "description": "Represents the document evaluation result for a custom entity recognition project.",
      "properties": {
        "customEntityRecognitionResult": {
          "$ref": "#/definitions/TextAnalysisAuthoringDocumentEntityRecognitionEvaluationResult",
          "description": "Represents the evaluation prediction for entity recognition."
        }
      },
      "required": [
        "customEntityRecognitionResult"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TextAnalysisAuthoringDocumentEvaluationResult"
        }
      ],
      "x-ms-client-name": "CustomEntityRecognitionDocumentEvaluationResult",
      "x-ms-discriminator-value": "CustomEntityRecognition"
    },
    "TextAnalysisAuthoringCustomEntityRecognitionEvaluationSummary": {
      "type": "object",
      "description": "Represents the evaluation summary for a custom entity recognition project.",
      "properties": {
        "customEntityRecognitionEvaluation": {
          "$ref": "#/definitions/TextAnalysisAuthoringEntityRecognitionEvaluationSummary",
          "description": "Contains the data related to extraction evaluation."
        }
      },
      "required": [
        "customEntityRecognitionEvaluation"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TextAnalysisAuthoringEvaluationSummary"
        }
      ],
      "x-ms-client-name": "CustomEntityRecognitionEvaluationSummary",
      "x-ms-discriminator-value": "CustomEntityRecognition"
    },
    "TextAnalysisAuthoringCustomMultiLabelClassificationDocumentEvaluationResult": {
      "type": "object",
      "description": "Represents the document evaluation result for a custom multi-label classification project.",
      "properties": {
        "customMultiLabelClassificationResult": {
          "$ref": "#/definitions/TextAnalysisAuthoringDocumentMultiLabelClassificationEvaluationResult",
          "description": "Represents the evaluation prediction for multi label classification."
        }
      },
      "required": [
        "customMultiLabelClassificationResult"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TextAnalysisAuthoringDocumentEvaluationResult"
        }
      ],
      "x-ms-client-name": "CustomMultiLabelClassificationDocumentEvaluationResult",
      "x-ms-discriminator-value": "CustomMultiLabelClassification"
    },
    "TextAnalysisAuthoringCustomMultiLabelClassificationEvaluationSummary": {
      "type": "object",
      "description": "Represents the evaluation summary for a custom multi-label classification project.",
      "properties": {
        "customMultiLabelClassificationEvaluation": {
          "$ref": "#/definitions/TextAnalysisAuthoringMultiLabelClassificationEvaluationSummary",
          "description": "Contains the data related to multi label classification evaluation."
        }
      },
      "required": [
        "customMultiLabelClassificationEvaluation"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TextAnalysisAuthoringEvaluationSummary"
        }
      ],
      "x-ms-client-name": "CustomMultiLabelClassificationEvaluationSummary",
      "x-ms-discriminator-value": "CustomMultiLabelClassification"
    },
    "TextAnalysisAuthoringCustomSingleLabelClassificationDocumentEvaluationResult": {
      "type": "object",
      "description": "Represents the document evaluation result for a custom single-label classification project.",
      "properties": {
        "customSingleLabelClassificationResult": {
          "$ref": "#/definitions/TextAnalysisAuthoringDocumentSingleLabelClassificationEvaluationResult",
          "description": "Represents the evaluation prediction for single label classification."
        }
      },
      "required": [
        "customSingleLabelClassificationResult"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TextAnalysisAuthoringDocumentEvaluationResult"
        }
      ],
      "x-ms-client-name": "CustomSingleLabelClassificationDocumentEvaluationResult",
      "x-ms-discriminator-value": "CustomSingleLabelClassification"
    },
    "TextAnalysisAuthoringCustomSingleLabelClassificationEvaluationSummary": {
      "type": "object",
      "description": "Represents the evaluation summary for a custom single-label classification project.",
      "properties": {
        "customSingleLabelClassificationEvaluation": {
          "$ref": "#/definitions/TextAnalysisAuthoringSingleLabelClassificationEvaluationSummary",
          "description": "Contains the data related to single label classification evaluation."
        }
      },
      "required": [
        "customSingleLabelClassificationEvaluation"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TextAnalysisAuthoringEvaluationSummary"
        }
      ],
      "x-ms-client-name": "CustomSingleLabelClassificationEvaluationSummary",
      "x-ms-discriminator-value": "CustomSingleLabelClassification"
    },
    "TextAnalysisAuthoringDeploymentJobState": {
      "type": "object",
      "description": "Represents the state of a deployment job.",
      "allOf": [
        {
          "$ref": "#/definitions/TextAnalysisAuthoringJobState"
        }
      ],
      "x-ms-client-name": "DeploymentJobState"
    },
    "TextAnalysisAuthoringDocumentEntityLabelEvaluationResult": {
      "type": "object",
      "description": "Represents an evaluation result entity label.",
      "properties": {
        "category": {
          "type": "string",
          "description": "Represents the entity category."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the entity offset index relative to the original text."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the entity length."
        }
      },
      "required": [
        "category",
        "offset",
        "length"
      ],
      "x-ms-client-name": "DocumentEntityLabelEvaluationResult"
    },
    "TextAnalysisAuthoringDocumentEntityRecognitionEvaluationResult": {
      "type": "object",
      "description": "Represents the entity recognition evaluation result for a document.",
      "properties": {
        "entities": {
          "type": "array",
          "description": "Represents the document labelled entities.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringDocumentEntityRegionEvaluationResult"
          }
        }
      },
      "required": [
        "entities"
      ],
      "x-ms-client-name": "DocumentEntityRecognitionEvaluationResult"
    },
    "TextAnalysisAuthoringDocumentEntityRegionEvaluationResult": {
      "type": "object",
      "description": "Represents the evaluation comparison between the expected and predicted entities of a document region.",
      "properties": {
        "expectedEntities": {
          "type": "array",
          "description": "Represents the region's expected entity labels.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringDocumentEntityLabelEvaluationResult"
          }
        },
        "predictedEntities": {
          "type": "array",
          "description": "Represents the region's predicted entity labels.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringDocumentEntityLabelEvaluationResult"
          }
        },
        "regionOffset": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the region offset."
        },
        "regionLength": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the region length."
        }
      },
      "required": [
        "expectedEntities",
        "predictedEntities",
        "regionOffset",
        "regionLength"
      ],
      "x-ms-client-name": "DocumentEntityRegionEvaluationResult"
    },
    "TextAnalysisAuthoringDocumentEvaluationResult": {
      "type": "object",
      "description": "Represents the evaluation result of a document.",
      "properties": {
        "location": {
          "type": "string",
          "description": "Represents the document path."
        },
        "language": {
          "type": "string",
          "description": "Represents the document language. This is BCP-47 representation of a language. For example, use \"en\" for English, \"en-gb\" for English (UK), \"es\" for Spanish etc."
        },
        "projectKind": {
          "$ref": "#/definitions/TextAnalysisAuthoringProjectKind",
          "description": "Represents the project kind."
        }
      },
      "discriminator": "projectKind",
      "required": [
        "location",
        "language",
        "projectKind"
      ],
      "x-ms-client-name": "DocumentEvaluationResult"
    },
    "TextAnalysisAuthoringDocumentMultiLabelClassificationEvaluationResult": {
      "type": "object",
      "description": "Represents the comparison between the expected and predicted classes that are result from the evaluation operation.",
      "properties": {
        "expectedClasses": {
          "type": "array",
          "description": "Represents the document's expected classes.",
          "items": {
            "type": "string"
          }
        },
        "predictedClasses": {
          "type": "array",
          "description": "Represents the document's predicted classes.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "expectedClasses",
        "predictedClasses"
      ],
      "x-ms-client-name": "DocumentMultiLabelClassificationEvaluationResult"
    },
    "TextAnalysisAuthoringDocumentSingleLabelClassificationEvaluationResult": {
      "type": "object",
      "description": "Represents the comparison between the expected and predicted class that result from an evaluation operation.",
      "properties": {
        "expectedClass": {
          "type": "string",
          "description": "Represents the document's expected class."
        },
        "predictedClass": {
          "type": "string",
          "description": "Represents the document's predicted class."
        }
      },
      "required": [
        "expectedClass",
        "predictedClass"
      ],
      "x-ms-client-name": "DocumentSingleLabelClassificationEvaluationResult"
    },
    "TextAnalysisAuthoringEntityEvaluationSummary": {
      "type": "object",
      "description": "Represents the evaluation summary for an entity.",
      "properties": {
        "f1": {
          "type": "number",
          "format": "double",
          "description": "Represents the model precision"
        },
        "precision": {
          "type": "number",
          "format": "double",
          "description": "Represents the model recall"
        },
        "recall": {
          "type": "number",
          "format": "double",
          "description": "Represents the model F1 score"
        },
        "truePositiveCount": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the count of true positive"
        },
        "trueNegativeCount": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the count of true negative"
        },
        "falsePositiveCount": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the count of false positive"
        },
        "falseNegativeCount": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the count of false negative"
        }
      },
      "required": [
        "f1",
        "precision",
        "recall",
        "truePositiveCount",
        "trueNegativeCount",
        "falsePositiveCount",
        "falseNegativeCount"
      ],
      "x-ms-client-name": "EntityEvaluationSummary"
    },
    "TextAnalysisAuthoringEntityRecognitionEvaluationSummary": {
      "type": "object",
      "description": "Represents the evaluation summary for a custom entity recognition project.",
      "properties": {
        "confusionMatrix": {
          "$ref": "#/definitions/TextAnalysisAuthoringConfusionMatrix",
          "description": "Represents the confusion matrix between two entities (the two entities can be the same). The matrix is between the entity that was labelled and the entity that was predicted."
        },
        "entities": {
          "type": "object",
          "description": "Represents the entities evaluation",
          "additionalProperties": {
            "$ref": "#/definitions/TextAnalysisAuthoringEntityEvaluationSummary"
          }
        },
        "microF1": {
          "type": "number",
          "format": "float",
          "description": "Represents the micro F1"
        },
        "microPrecision": {
          "type": "number",
          "format": "float",
          "description": "Represents the micro precision"
        },
        "microRecall": {
          "type": "number",
          "format": "float",
          "description": "Represents the micro recall"
        },
        "macroF1": {
          "type": "number",
          "format": "float",
          "description": "Represents the macro F1"
        },
        "macroPrecision": {
          "type": "number",
          "format": "float",
          "description": "Represents the macro precision"
        },
        "macroRecall": {
          "type": "number",
          "format": "float",
          "description": "Represents the macro recall"
        }
      },
      "required": [
        "confusionMatrix",
        "entities",
        "microF1",
        "microPrecision",
        "microRecall",
        "macroF1",
        "macroPrecision",
        "macroRecall"
      ],
      "x-ms-client-name": "EntityRecognitionEvaluationSummary"
    },
    "TextAnalysisAuthoringEvaluationKind": {
      "type": "string",
      "enum": [
        "percentage",
        "manual"
      ],
      "x-ms-enum": {
        "name": "EvaluationKind",
        "modelAsString": true,
        "values": [
          {
            "value": "percentage",
            "description": "Split the data into training and test sets according to user-defined percentages."
          },
          {
            "value": "manual",
            "description": "Split the data according to the chosen dataset for every example in the data."
          }
        ]
      },
      "x-ms-client-name": "EvaluationKind"
    },
    "TextAnalysisAuthoringEvaluationOptions": {
      "type": "object",
      "description": "Represents the options used running the evaluation.",
      "properties": {
        "kind": {
          "$ref": "#/definitions/TextAnalysisAuthoringEvaluationKind",
          "description": "Represents the evaluation kind. By default, the evaluation kind is set to percentage."
        },
        "trainingSplitPercentage": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the training dataset split percentage. Only needed in case the evaluation kind is percentage."
        },
        "testingSplitPercentage": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the testing dataset split percentage. Only needed in case the evaluation kind is percentage."
        }
      },
      "x-ms-client-name": "EvaluationOptions"
    },
    "TextAnalysisAuthoringEvaluationResults": {
      "type": "object",
      "description": "Represents a list of results for an evaluation operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "THe list of documents evaluation results.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringDocumentEvaluationResult"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The next page link.",
          "x-nullable": true
        }
      },
      "required": [
        "value",
        "nextLink"
      ],
      "x-ms-client-name": "EvaluationResults"
    },
    "TextAnalysisAuthoringEvaluationSummary": {
      "type": "object",
      "description": "Represents the summary for an evaluation operation.",
      "properties": {
        "projectKind": {
          "$ref": "#/definitions/TextAnalysisAuthoringProjectKind",
          "description": "Represents the project type that the evaluation ran on."
        },
        "evaluationOptions": {
          "$ref": "#/definitions/TextAnalysisAuthoringEvaluationOptions"
        }
      },
      "discriminator": "projectKind",
      "required": [
        "projectKind",
        "evaluationOptions"
      ],
      "x-ms-client-name": "EvaluationSummary"
    },
    "TextAnalysisAuthoringExportProjectJobState": {
      "type": "object",
      "description": "Represents the state of an export job.",
      "properties": {
        "resultUrl": {
          "type": "string",
          "description": "The URL to use in order to download the exported project."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TextAnalysisAuthoringJobState"
        }
      ],
      "x-ms-client-name": "ExportProjectJobState"
    },
    "TextAnalysisAuthoringExportedClass": {
      "type": "object",
      "description": "Represents a class of an exported project.",
      "properties": {
        "category": {
          "type": "string",
          "description": "The class category."
        }
      },
      "x-ms-client-name": "ExportedClass"
    },
    "TextAnalysisAuthoringExportedCustomEntityRecognitionDocument": {
      "type": "object",
      "description": "Represents an exported document for a custom entity recognition project.",
      "properties": {
        "entities": {
          "type": "array",
          "description": "The list of entity labels belonging to the document.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringExportedDocumentRegion"
          }
        },
        "location": {
          "type": "string",
          "description": "The location of the document in the storage."
        },
        "language": {
          "type": "string",
          "description": "Represents the document language. This is BCP-47 representation of a language. For example, use \"en\" for English, \"en-gb\" for English (UK), \"es\" for Spanish etc."
        },
        "dataset": {
          "type": "string",
          "description": "The dataset for this document. Allowed values are 'Train' and 'Test'."
        }
      },
      "x-ms-client-name": "ExportedCustomEntityRecognitionDocument"
    },
    "TextAnalysisAuthoringExportedCustomEntityRecognitionProjectAssets": {
      "type": "object",
      "description": "Represents the exported assets for a entity recognition project.",
      "properties": {
        "entities": {
          "type": "array",
          "description": "The list of entities belonging to the project.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringExportedEntity"
          }
        },
        "documents": {
          "type": "array",
          "description": "The list of documents belonging to the project.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringExportedCustomEntityRecognitionDocument"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TextAnalysisAuthoringExportedProjectAssets"
        }
      ],
      "x-ms-client-name": "ExportedCustomEntityRecognitionProjectAssets",
      "x-ms-discriminator-value": "CustomEntityRecognition"
    },
    "TextAnalysisAuthoringExportedCustomMultiLabelClassificationDocument": {
      "type": "object",
      "description": "Represents an exported document of a custom multi-label classification project.",
      "properties": {
        "classes": {
          "type": "array",
          "description": "The document classes.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringExportedDocumentClass"
          }
        },
        "location": {
          "type": "string",
          "description": "The location of the document in the storage."
        },
        "language": {
          "type": "string",
          "description": "Represents the document language. This is BCP-47 representation of a language. For example, use \"en\" for English, \"en-gb\" for English (UK), \"es\" for Spanish etc."
        },
        "dataset": {
          "type": "string",
          "description": "The dataset for this document. Allowed values are 'Train' and 'Test'."
        }
      },
      "x-ms-client-name": "ExportedCustomMultiLabelClassificationDocument"
    },
    "TextAnalysisAuthoringExportedCustomMultiLabelClassificationProjectAssets": {
      "type": "object",
      "description": "Represents the exported assets for a custom multi-label classification project.",
      "properties": {
        "classes": {
          "type": "array",
          "description": "The list of classes in the project.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringExportedClass"
          }
        },
        "documents": {
          "type": "array",
          "description": "The list of documents in the project.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringExportedCustomMultiLabelClassificationDocument"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TextAnalysisAuthoringExportedProjectAssets"
        }
      ],
      "x-ms-client-name": "ExportedCustomMultiLabelClassificationProjectAssets",
      "x-ms-discriminator-value": "CustomMultiLabelClassification"
    },
    "TextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument": {
      "type": "object",
      "description": "Represents an exported document for a custom single-label classification project.",
      "properties": {
        "class": {
          "$ref": "#/definitions/TextAnalysisAuthoringExportedDocumentClass",
          "description": "The class of the documents."
        },
        "location": {
          "type": "string",
          "description": "The location of the document in the storage."
        },
        "language": {
          "type": "string",
          "description": "Represents the document language. This is BCP-47 representation of a language. For example, use \"en\" for English, \"en-gb\" for English (UK), \"es\" for Spanish etc."
        },
        "dataset": {
          "type": "string",
          "description": "The dataset for this document. Allowed values are 'Train' and 'Test'."
        }
      },
      "x-ms-client-name": "ExportedCustomSingleLabelClassificationDocument"
    },
    "TextAnalysisAuthoringExportedCustomSingleLabelClassificationProjectAssets": {
      "type": "object",
      "description": "Represents the exported assets for a single-label classification project.",
      "properties": {
        "classes": {
          "type": "array",
          "description": "The list of classes belonging to this project.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringExportedClass"
          }
        },
        "documents": {
          "type": "array",
          "description": "The list of documents belonging to this project.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TextAnalysisAuthoringExportedProjectAssets"
        }
      ],
      "x-ms-client-name": "ExportedCustomSingleLabelClassificationProjectAssets",
      "x-ms-discriminator-value": "CustomSingleLabelClassification"
    },
    "TextAnalysisAuthoringExportedDocumentClass": {
      "type": "object",
      "description": "Represents a classification label for a document.",
      "properties": {
        "category": {
          "type": "string"
        }
      },
      "x-ms-client-name": "ExportedDocumentClass"
    },
    "TextAnalysisAuthoringExportedDocumentEntityLabel": {
      "type": "object",
      "description": "Represents an entity label for a document.",
      "properties": {
        "category": {
          "type": "string",
          "description": "The entity category."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position for the entity text."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Length for the entity text."
        }
      },
      "x-ms-client-name": "ExportedDocumentEntityLabel"
    },
    "TextAnalysisAuthoringExportedDocumentRegion": {
      "type": "object",
      "description": "Represents a region in a document for entity labeling.",
      "properties": {
        "regionOffset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position for the region."
        },
        "regionLength": {
          "type": "integer",
          "format": "int32",
          "description": "Length for the region text."
        },
        "labels": {
          "type": "array",
          "description": "The list of entity labels belonging to this region.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringExportedDocumentEntityLabel"
          }
        }
      },
      "x-ms-client-name": "ExportedDocumentRegion"
    },
    "TextAnalysisAuthoringExportedEntity": {
      "type": "object",
      "description": "Represents an entity in an exported project.",
      "properties": {
        "category": {
          "type": "string",
          "description": "The entity category."
        }
      },
      "x-ms-client-name": "ExportedEntity"
    },
    "TextAnalysisAuthoringExportedProject": {
      "type": "object",
      "description": "Represents an exported project.",
      "properties": {
        "projectFileVersion": {
          "type": "string",
          "description": "The version of the exported file."
        },
        "stringIndexType": {
          "$ref": "#/definitions/TextAnalysisAuthoringStringIndexType",
          "description": "Specifies the method used to interpret string offsets. For additional information see https://aka.ms/text-analytics-offsets."
        },
        "metadata": {
          "$ref": "#/definitions/TextAnalysisAuthoringCreateProjectOptions",
          "description": "Represents the project metadata."
        },
        "assets": {
          "$ref": "#/definitions/TextAnalysisAuthoringExportedProjectAssets",
          "description": "Represents the project assets."
        }
      },
      "required": [
        "projectFileVersion",
        "stringIndexType",
        "metadata"
      ],
      "x-ms-client-name": "ExportedProject"
    },
    "TextAnalysisAuthoringExportedProjectAssets": {
      "type": "object",
      "description": "Represents the assets of an exported project.",
      "properties": {
        "projectKind": {
          "$ref": "#/definitions/TextAnalysisAuthoringProjectKind",
          "description": "The type of the project the assets belong to."
        }
      },
      "discriminator": "projectKind",
      "required": [
        "projectKind"
      ],
      "x-ms-client-name": "ExportedProjectAssets"
    },
    "TextAnalysisAuthoringImportProjectJobState": {
      "type": "object",
      "description": "Represents the state of an import job.",
      "allOf": [
        {
          "$ref": "#/definitions/TextAnalysisAuthoringJobState"
        }
      ],
      "x-ms-client-name": "ImportProjectJobState"
    },
    "TextAnalysisAuthoringJobState": {
      "type": "object",
      "description": "Represents a job's state.",
      "properties": {
        "jobId": {
          "type": "string",
          "description": "The job ID."
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date time of the job."
        },
        "lastUpdatedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last date time the job was updated."
        },
        "expirationDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration date time of the job."
        },
        "status": {
          "$ref": "#/definitions/TextAnalysisAuthoringJobStatus",
          "description": "The job status."
        },
        "warnings": {
          "type": "array",
          "description": "The warnings that were encountered while executing the job.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringWarning"
          }
        },
        "errors": {
          "type": "array",
          "description": "The errors encountered while executing the job.",
          "items": {
            "$ref": "common.json#/definitions/Error"
          }
        }
      },
      "required": [
        "jobId",
        "createdDateTime",
        "lastUpdatedDateTime",
        "status"
      ],
      "x-ms-client-name": "JobState"
    },
    "TextAnalysisAuthoringJobStatus": {
      "type": "string",
      "enum": [
        "notStarted",
        "running",
        "succeeded",
        "failed",
        "cancelled",
        "cancelling",
        "partiallyCompleted"
      ],
      "x-ms-enum": {
        "name": "JobStatus",
        "modelAsString": true
      },
      "x-ms-client-name": "JobStatus"
    },
    "TextAnalysisAuthoringLoadSnapshotJobState": {
      "type": "object",
      "description": "Represents the state of loading a snapshot job.",
      "allOf": [
        {
          "$ref": "#/definitions/TextAnalysisAuthoringJobState"
        }
      ],
      "x-ms-client-name": "LoadSnapshotJobState"
    },
    "TextAnalysisAuthoringMultiLabelClassEvaluationSummary": {
      "type": "object",
      "description": "Represents the evaluation summary of a class in a multi-label classification project.",
      "properties": {
        "f1": {
          "type": "number",
          "format": "double",
          "description": "Represents the model precision"
        },
        "precision": {
          "type": "number",
          "format": "double",
          "description": "Represents the model recall"
        },
        "recall": {
          "type": "number",
          "format": "double",
          "description": "Represents the model F1 score"
        },
        "truePositiveCount": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the count of true positive"
        },
        "trueNegativeCount": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the count of true negative"
        },
        "falsePositiveCount": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the count of false positive"
        },
        "falseNegativeCount": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the count of false negative"
        }
      },
      "required": [
        "f1",
        "precision",
        "recall",
        "truePositiveCount",
        "trueNegativeCount",
        "falsePositiveCount",
        "falseNegativeCount"
      ],
      "x-ms-client-name": "MultiLabelClassEvaluationSummary"
    },
    "TextAnalysisAuthoringMultiLabelClassificationEvaluationSummary": {
      "type": "object",
      "description": "Represents the evaluation summary for a multi-label classification project.",
      "properties": {
        "classes": {
          "type": "object",
          "description": "Represents the classes evaluation",
          "additionalProperties": {
            "$ref": "#/definitions/TextAnalysisAuthoringMultiLabelClassEvaluationSummary"
          }
        },
        "microF1": {
          "type": "number",
          "format": "float",
          "description": "Represents the micro F1"
        },
        "microPrecision": {
          "type": "number",
          "format": "float",
          "description": "Represents the micro precision"
        },
        "microRecall": {
          "type": "number",
          "format": "float",
          "description": "Represents the micro recall"
        },
        "macroF1": {
          "type": "number",
          "format": "float",
          "description": "Represents the macro F1"
        },
        "macroPrecision": {
          "type": "number",
          "format": "float",
          "description": "Represents the macro precision"
        },
        "macroRecall": {
          "type": "number",
          "format": "float",
          "description": "Represents the macro recall"
        }
      },
      "required": [
        "classes",
        "microF1",
        "microPrecision",
        "microRecall",
        "macroF1",
        "macroPrecision",
        "macroRecall"
      ],
      "x-ms-client-name": "MultiLabelClassificationEvaluationSummary"
    },
    "TextAnalysisAuthoringProjectDeletionJobState": {
      "type": "object",
      "description": "Represents the state of a project deletion job.",
      "allOf": [
        {
          "$ref": "#/definitions/TextAnalysisAuthoringJobState"
        }
      ],
      "x-ms-client-name": "ProjectDeletionJobState"
    },
    "TextAnalysisAuthoringProjectDeployment": {
      "type": "object",
      "description": "Represents a project deployment.",
      "properties": {
        "deploymentName": {
          "type": "string",
          "description": "Represents deployment name."
        },
        "modelId": {
          "type": "string",
          "description": "Represents deployment modelId."
        },
        "lastTrainedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Represents deployment last trained time."
        },
        "lastDeployedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Represents deployment last deployed time."
        },
        "deploymentExpirationDate": {
          "type": "string",
          "format": "date",
          "description": "Represents deployment expiration date in the runtime."
        },
        "modelTrainingConfigVersion": {
          "type": "string",
          "description": "Represents model training config version."
        }
      },
      "required": [
        "deploymentName",
        "modelId",
        "lastTrainedDateTime",
        "lastDeployedDateTime",
        "deploymentExpirationDate",
        "modelTrainingConfigVersion"
      ],
      "x-ms-client-name": "ProjectDeployment"
    },
    "TextAnalysisAuthoringProjectDeployments": {
      "type": "object",
      "description": "Represents a list of retrieved deployments.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of retrieved deployments.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringProjectDeployment"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The next page link.",
          "x-nullable": true
        }
      },
      "required": [
        "value",
        "nextLink"
      ],
      "x-ms-client-name": "ProjectDeployments"
    },
    "TextAnalysisAuthoringProjectKind": {
      "type": "string",
      "enum": [
        "CustomSingleLabelClassification",
        "CustomMultiLabelClassification",
        "CustomEntityRecognition"
      ],
      "x-ms-enum": {
        "name": "ProjectKind",
        "modelAsString": true,
        "values": [
          {
            "value": "CustomSingleLabelClassification",
            "description": "For building a classification model to classify text using your own data. Each file will have only one label. For example, file 1 is classified as A and file 2 is classified as B."
          },
          {
            "value": "CustomMultiLabelClassification",
            "description": "For building a classification model to classify text using your own data. Each file can have one or many labels. For example, file 1 is classified as A, B, and C and file 2 is classified as B and C."
          },
          {
            "value": "CustomEntityRecognition",
            "description": "For building an extraction model to identify your domain categories using your own data."
          }
        ]
      },
      "x-ms-client-name": "ProjectKind"
    },
    "TextAnalysisAuthoringProjectMetadata": {
      "type": "object",
      "description": "Represents the metadata of a project.",
      "properties": {
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Represents the project creation datetime."
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Represents the project last modification datetime."
        },
        "lastTrainedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Represents the project last training datetime."
        },
        "lastDeployedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Represents the project last deployment datetime."
        },
        "projectKind": {
          "$ref": "#/definitions/TextAnalysisAuthoringProjectKind",
          "description": "The project kind."
        },
        "storageInputContainerName": {
          "type": "string",
          "description": "The storage container name."
        },
        "settings": {
          "$ref": "#/definitions/TextAnalysisAuthoringProjectSettings",
          "description": "The project settings."
        },
        "projectName": {
          "type": "string",
          "description": "The new project name."
        },
        "multilingual": {
          "type": "boolean",
          "description": "Whether the project would be used for multiple languages or not."
        },
        "description": {
          "type": "string",
          "description": "The project description."
        },
        "language": {
          "type": "string",
          "description": "The project language. This is BCP-47 representation of a language. For example, use \"en\" for English, \"en-gb\" for English (UK), \"es\" for Spanish etc."
        }
      },
      "required": [
        "createdDateTime",
        "lastModifiedDateTime",
        "projectKind",
        "storageInputContainerName",
        "projectName",
        "language"
      ],
      "x-ms-client-name": "ProjectMetadata"
    },
    "TextAnalysisAuthoringProjectSettings": {
      "type": "object",
      "description": "Represents the settings used to define the project behavior.",
      "properties": {
        "confidenceThreshold": {
          "type": "number",
          "format": "float",
          "description": "The threshold of the class with the highest confidence, at which the prediction will automatically be changed to \"None\". The value of the threshold should be between 0 and 1 inclusive."
        }
      },
      "x-ms-client-name": "ProjectSettings"
    },
    "TextAnalysisAuthoringProjectTrainedModel": {
      "type": "object",
      "description": "Represents a trained model.",
      "properties": {
        "label": {
          "type": "string",
          "description": "The trained model label."
        },
        "modelId": {
          "type": "string",
          "description": "The model ID."
        },
        "lastTrainedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last trained date time of the model."
        },
        "lastTrainingDurationInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The duration of the model's last training request in seconds."
        },
        "modelExpirationDate": {
          "type": "string",
          "format": "date",
          "description": "The model expiration date."
        },
        "modelTrainingConfigVersion": {
          "type": "string",
          "description": "The model training config version."
        },
        "hasSnapshot": {
          "type": "boolean",
          "description": "The flag to indicate if the trained model has a snapshot ready."
        }
      },
      "required": [
        "label",
        "modelId",
        "lastTrainedDateTime",
        "lastTrainingDurationInSeconds",
        "modelExpirationDate",
        "modelTrainingConfigVersion",
        "hasSnapshot"
      ],
      "x-ms-client-name": "ProjectTrainedModel"
    },
    "TextAnalysisAuthoringProjectTrainedModels": {
      "type": "object",
      "description": "Represents a list of retrieved trained models.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of retrieved jobs.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringProjectTrainedModel"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The next page link.",
          "x-nullable": true
        }
      },
      "required": [
        "value",
        "nextLink"
      ],
      "x-ms-client-name": "ProjectTrainedModels"
    },
    "TextAnalysisAuthoringProjectsMetadata": {
      "type": "object",
      "description": "Represents a list of retrieved projects' metadata.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of projects.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringProjectMetadata"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The next page link.",
          "x-nullable": true
        }
      },
      "required": [
        "value",
        "nextLink"
      ],
      "x-ms-client-name": "ProjectsMetadata"
    },
    "TextAnalysisAuthoringSingleLabelClassEvaluationSummary": {
      "type": "object",
      "description": "Represents the evaluation summary for a class in a single-label classification project.",
      "properties": {
        "f1": {
          "type": "number",
          "format": "double",
          "description": "Represents the model precision"
        },
        "precision": {
          "type": "number",
          "format": "double",
          "description": "Represents the model recall"
        },
        "recall": {
          "type": "number",
          "format": "double",
          "description": "Represents the model F1 score"
        },
        "truePositiveCount": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the count of true positive"
        },
        "trueNegativeCount": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the count of true negative"
        },
        "falsePositiveCount": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the count of false positive"
        },
        "falseNegativeCount": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the count of false negative"
        }
      },
      "required": [
        "f1",
        "precision",
        "recall",
        "truePositiveCount",
        "trueNegativeCount",
        "falsePositiveCount",
        "falseNegativeCount"
      ],
      "x-ms-client-name": "SingleLabelClassEvaluationSummary"
    },
    "TextAnalysisAuthoringSingleLabelClassificationEvaluationSummary": {
      "type": "object",
      "description": "Represents the evaluation summary for a custom single-label classification project.",
      "properties": {
        "confusionMatrix": {
          "$ref": "#/definitions/TextAnalysisAuthoringConfusionMatrix",
          "description": "Represents the confusion matrix between two classes (the two classes can be the same). The matrix is between the class that was labelled and the class that was predicted."
        },
        "classes": {
          "type": "object",
          "description": "Represents the classes evaluation",
          "additionalProperties": {
            "$ref": "#/definitions/TextAnalysisAuthoringSingleLabelClassEvaluationSummary"
          }
        },
        "microF1": {
          "type": "number",
          "format": "float",
          "description": "Represents the micro F1"
        },
        "microPrecision": {
          "type": "number",
          "format": "float",
          "description": "Represents the micro precision"
        },
        "microRecall": {
          "type": "number",
          "format": "float",
          "description": "Represents the micro recall"
        },
        "macroF1": {
          "type": "number",
          "format": "float",
          "description": "Represents the macro F1"
        },
        "macroPrecision": {
          "type": "number",
          "format": "float",
          "description": "Represents the macro precision"
        },
        "macroRecall": {
          "type": "number",
          "format": "float",
          "description": "Represents the macro recall"
        }
      },
      "required": [
        "confusionMatrix",
        "classes",
        "microF1",
        "microPrecision",
        "microRecall",
        "macroF1",
        "macroPrecision",
        "macroRecall"
      ],
      "x-ms-client-name": "SingleLabelClassificationEvaluationSummary"
    },
    "TextAnalysisAuthoringStringIndexType": {
      "type": "string",
      "enum": [
        "Utf16CodeUnit"
      ],
      "x-ms-enum": {
        "name": "StringIndexType",
        "modelAsString": true,
        "values": [
          {
            "value": "Utf16CodeUnit",
            "description": "The offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
          }
        ]
      },
      "x-ms-client-name": "StringIndexType"
    },
    "TextAnalysisAuthoringSubTrainingJobState": {
      "type": "object",
      "description": "Represents the detailed state of a training sub-operation.",
      "properties": {
        "percentComplete": {
          "type": "integer",
          "format": "int32",
          "description": "Represents progress percentage."
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Represents the start date time."
        },
        "endDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Represents the end date time."
        },
        "status": {
          "$ref": "#/definitions/TextAnalysisAuthoringJobStatus",
          "description": "Represents the status of the sub-operation."
        }
      },
      "required": [
        "percentComplete",
        "status"
      ],
      "x-ms-client-name": "SubTrainingJobState"
    },
    "TextAnalysisAuthoringSupportedLanguage": {
      "type": "object",
      "description": "Represents a supported language.",
      "properties": {
        "languageName": {
          "type": "string",
          "description": "The language name."
        },
        "languageCode": {
          "type": "string",
          "description": "The language code. This is BCP-47 representation of a language. For example, \"en\" for English, \"en-gb\" for English (UK), \"es\" for Spanish etc."
        }
      },
      "required": [
        "languageName",
        "languageCode"
      ],
      "x-ms-client-name": "SupportedLanguage"
    },
    "TextAnalysisAuthoringSupportedLanguages": {
      "type": "object",
      "description": "Represents a list of retrieved languages.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of the languages.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringSupportedLanguage"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The next page link.",
          "x-nullable": true
        }
      },
      "required": [
        "value",
        "nextLink"
      ],
      "x-ms-client-name": "SupportedLanguages"
    },
    "TextAnalysisAuthoringSwapDeploymentsOptions": {
      "type": "object",
      "description": "Represents the options for swapping two deployments together.",
      "properties": {
        "firstDeploymentName": {
          "type": "string",
          "description": "Represents the first deployment name."
        },
        "secondDeploymentName": {
          "type": "string",
          "description": "Represents the second deployment name."
        }
      },
      "required": [
        "firstDeploymentName",
        "secondDeploymentName"
      ],
      "x-ms-client-name": "SwapDeploymentsOptions"
    },
    "TextAnalysisAuthoringTrainingConfigVersion": {
      "type": "object",
      "description": "Represents a training config version.",
      "properties": {
        "trainingConfigVersion": {
          "type": "string",
          "description": "Represents the version of the config."
        },
        "modelExpirationDate": {
          "type": "string",
          "format": "date",
          "description": "Represents the training config version expiration date."
        }
      },
      "required": [
        "trainingConfigVersion",
        "modelExpirationDate"
      ],
      "x-ms-client-name": "TrainingConfigVersion"
    },
    "TextAnalysisAuthoringTrainingConfigVersions": {
      "type": "object",
      "description": "Represents a list of training config versions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of the training config versions.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringTrainingConfigVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The next page link.",
          "x-nullable": true
        }
      },
      "required": [
        "value",
        "nextLink"
      ],
      "x-ms-client-name": "TrainingConfigVersions"
    },
    "TextAnalysisAuthoringTrainingJobOptions": {
      "type": "object",
      "description": "Represents the options for starting a new training job.",
      "properties": {
        "modelLabel": {
          "type": "string",
          "description": "Represents the output model label."
        },
        "trainingConfigVersion": {
          "type": "string",
          "description": "Represents training config version."
        },
        "evaluationOptions": {
          "$ref": "#/definitions/TextAnalysisAuthoringEvaluationOptions",
          "description": "Represents the evaluation options. By default, the evaluation kind is percentage, with training split percentage as 80, and testing split percentage as 20."
        }
      },
      "required": [
        "modelLabel",
        "trainingConfigVersion"
      ],
      "x-ms-client-name": "TrainingJobOptions"
    },
    "TextAnalysisAuthoringTrainingJobResult": {
      "type": "object",
      "description": "Represents the output of a training job.",
      "properties": {
        "modelLabel": {
          "type": "string",
          "description": "Represents trained model label."
        },
        "trainingConfigVersion": {
          "type": "string",
          "description": "Represents training config version."
        },
        "trainingStatus": {
          "$ref": "#/definitions/TextAnalysisAuthoringSubTrainingJobState",
          "description": "Represents model train status."
        },
        "evaluationStatus": {
          "$ref": "#/definitions/TextAnalysisAuthoringSubTrainingJobState",
          "description": "Represents model evaluation status."
        },
        "estimatedEndDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Represents the estimate end date time for training and evaluation."
        }
      },
      "required": [
        "modelLabel",
        "trainingConfigVersion",
        "trainingStatus"
      ],
      "x-ms-client-name": "TrainingJobResult"
    },
    "TextAnalysisAuthoringTrainingJobState": {
      "type": "object",
      "description": "Represents the state of a training job.",
      "properties": {
        "result": {
          "$ref": "#/definitions/TextAnalysisAuthoringTrainingJobResult",
          "description": "Represents training tasks detailed result."
        }
      },
      "required": [
        "result"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TextAnalysisAuthoringJobState"
        }
      ],
      "x-ms-client-name": "TrainingJobState"
    },
    "TextAnalysisAuthoringTrainingJobs": {
      "type": "object",
      "description": "Represents a list of retrieved training jobs.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of jobs.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringTrainingJobState"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The next page link.",
          "x-nullable": true
        }
      },
      "required": [
        "value",
        "nextLink"
      ],
      "x-ms-client-name": "TrainingJobs"
    },
    "TextAnalysisAuthoringWarning": {
      "type": "object",
      "description": "Represents a warning that was encountered while executing the request.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The warning code."
        },
        "message": {
          "type": "string",
          "description": "The warning message."
        }
      },
      "required": [
        "code",
        "message"
      ],
      "x-ms-client-name": "Warning"
    }
  },
  "parameters": {
    "TextAnalysisAuthoringJobIdPathParameter": {
      "name": "jobId",
      "in": "path",
      "description": "The job ID.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "TextAnalysisAuthoringProjectKindQueryOptionalParameter": {
      "name": "projectKind",
      "in": "query",
      "description": "The project kind, default value is CustomSingleLabelClassification.",
      "type": "string",
      "enum": [
        "CustomSingleLabelClassification",
        "CustomMultiLabelClassification",
        "CustomEntityRecognition"
      ],
      "x-ms-enum": {
        "name": "ProjectKind",
        "modelAsString": true,
        "values": [
          {
            "value": "CustomSingleLabelClassification",
            "description": "For building a classification model to classify text using your own data. Each file will have only one label. For example, file 1 is classified as A and file 2 is classified as B."
          },
          {
            "value": "CustomMultiLabelClassification",
            "description": "For building a classification model to classify text using your own data. Each file can have one or many labels. For example, file 1 is classified as A, B, and C and file 2 is classified as B and C."
          },
          {
            "value": "CustomEntityRecognition",
            "description": "For building an extraction model to identify your domain categories using your own data."
          }
        ]
      },
      "x-ms-parameter-location": "method"
    },
    "TextAnalysisAuthoringProjectKindQueryParameter": {
      "name": "projectKind",
      "in": "query",
      "description": "The project kind.",
      "required": true,
      "type": "string",
      "enum": [
        "CustomSingleLabelClassification",
        "CustomMultiLabelClassification",
        "CustomEntityRecognition"
      ],
      "x-ms-enum": {
        "name": "ProjectKind",
        "modelAsString": true,
        "values": [
          {
            "value": "CustomSingleLabelClassification",
            "description": "For building a classification model to classify text using your own data. Each file will have only one label. For example, file 1 is classified as A and file 2 is classified as B."
          },
          {
            "value": "CustomMultiLabelClassification",
            "description": "For building a classification model to classify text using your own data. Each file can have one or many labels. For example, file 1 is classified as A, B, and C and file 2 is classified as B and C."
          },
          {
            "value": "CustomEntityRecognition",
            "description": "For building an extraction model to identify your domain categories using your own data."
          }
        ]
      },
      "x-ms-parameter-location": "method"
    },
    "TextAnalysisAuthoringStringIndexTypeQueryParameter": {
      "name": "stringIndexType",
      "in": "query",
      "description": "Specifies the method used to interpret string offsets. For additional information see https://aka.ms/text-analytics-offsets.",
      "required": true,
      "type": "string",
      "enum": [
        "Utf16CodeUnit"
      ],
      "x-ms-enum": {
        "name": "StringIndexType",
        "modelAsString": true,
        "values": [
          {
            "value": "Utf16CodeUnit",
            "description": "The offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
          }
        ]
      },
      "x-ms-parameter-location": "method"
    },
    "TextAnalysisAuthoringTrainedModelLabelPathParameter": {
      "name": "trainedModelLabel",
      "in": "path",
      "description": "The trained model label.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}