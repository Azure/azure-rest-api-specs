{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft Cognitive Language Service - Analyze Text Authoring",
    "version": "2023-04-01",
    "description": "The language service API is a suite of natural language processing (NLP) skills\nbuilt with best-in-class Microsoft machine learning algorithms. The API can be\nused to analyze unstructured text for tasks such as sentiment analysis, key\nphrase extraction, language detection and question answering. Further\ndocumentation can be found in <a\nhref=\"https://docs.microsoft.com/en-us/azure/cognitive-services/language-service/overview\">https://docs.microsoft.com/en-us/azure/cognitive-services/language-service/overview</a>.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{Endpoint}/language",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "Endpoint",
        "in": "path",
        "description": "Supported Cognitive Services endpoint (e.g.,\nhttps://<resource-name>.api.cognitiveservices.azure.com).",
        "required": true,
        "type": "string",
        "format": "url"
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "ApiKeyAuth": []
    },
    {
      "OAuth2Auth": [
        "https://cognitiveservices.azure.com/.default"
      ]
    }
  ],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    },
    "OAuth2Auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "https://cognitiveservices.azure.com/.default": ""
      },
      "tokenUrl": "https://login.microsoftonline.com/common/oauth2/token"
    }
  },
  "tags": [],
  "paths": {
    "/authoring/analyze-text/projects": {
      "get": {
        "operationId": "TextAnalysisAuthoring_ListProjects",
        "description": "Lists the existing projects.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedTextAnalysisAuthoringProjectMetadata"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SuccessfulListProjects": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulListProjects.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}": {
      "get": {
        "operationId": "TextAnalysisAuthoring_GetProject",
        "description": "Gets the details of a project.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The new project name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringProjectMetadata"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SuccessfulGetProject": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetProject.json"
          }
        }
      },
      "patch": {
        "operationId": "TextAnalysisAuthoring_CreateProject",
        "description": "The most basic operation that applies to a resource.",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The new project name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProjectOptions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringProjectMetadata"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringProjectMetadata"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Create Project": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulCreateProject.json"
          }
        }
      },
      "delete": {
        "operationId": "TextAnalysisAuthoring_DeleteProject",
        "description": "Deletes a project.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project to use.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Operation-Location": {
                "type": "string",
                "format": "uri",
                "description": "The location for monitoring the operation state."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Project": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulDeleteProject.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/authoring/analyze-text/projects/{projectName}/:export": {
      "post": {
        "operationId": "TextAnalysisAuthoring_Export",
        "description": "Triggers a job to export a project's data.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "stringIndexType",
            "in": "query",
            "description": "Specifies the method used to interpret string offsets. For additional\ninformation see https://aka.ms/text-analytics-offsets.",
            "required": true,
            "type": "string",
            "enum": [
              "Utf16CodeUnit"
            ],
            "x-ms-enum": {
              "name": "StringIndexType",
              "modelAsString": true,
              "values": [
                {
                  "name": "Utf16CodeUnit",
                  "value": "Utf16CodeUnit",
                  "description": "The offset and length values will correspond to UTF-16 code units. Use this\noption if your application is written in a language that support Unicode, for\nexample Java, JavaScript."
                }
              ]
            }
          },
          {
            "name": "assetKind",
            "in": "query",
            "description": "Kind of asset to export.",
            "required": false,
            "type": "string"
          },
          {
            "name": "trainedModelLabel",
            "in": "query",
            "description": "Trained model label to export. If the trainedModelLabel is null, the default\nbehavior is to export the current working copy.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Operation-Location": {
                "type": "string",
                "format": "uri",
                "description": "The location for monitoring the operation state."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Export Project": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulExportProject.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/authoring/analyze-text/projects/{projectName}/:import": {
      "post": {
        "operationId": "TextAnalysisAuthoring_Import",
        "description": "Triggers a job to import a project. If a project with the same name already\nexists, the data of that project is replaced.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The project data to import.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportedProject"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Operation-Location": {
                "type": "string",
                "format": "uri",
                "description": "The location for monitoring the operation state."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SuccessfulImportProject": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulImportProject.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/authoring/analyze-text/projects/{projectName}/:train": {
      "post": {
        "operationId": "TextAnalysisAuthoring_Train",
        "description": "Triggers a training job for a project.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The training input parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TrainingJobOptions"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Operation-Location": {
                "type": "string",
                "format": "uri",
                "description": "The location for monitoring the operation state."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SuccessfulTrainProject": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulTrainProject.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/authoring/analyze-text/projects/{projectName}/deployments": {
      "get": {
        "operationId": "TextAnalysisAuthoring_ListDeployments",
        "description": "Lists the deployments belonging to a project.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The new project name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedTextAnalysisAuthoringProjectDeployment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SuccessfulListDeployments": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulListDeployments.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/deployments/{deploymentName}": {
      "get": {
        "operationId": "TextAnalysisAuthoring_GetDeployment",
        "description": "Gets the details of a deployment.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The new project name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "Represents deployment name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringProjectDeployment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Deployment": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetDeployment.json"
          }
        }
      },
      "put": {
        "operationId": "TextAnalysisAuthoring_DeployProject",
        "description": "Creates a new deployment or replaces an existing one.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the specific deployment of the project to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The new deployment info.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringCreateDeploymentOptions"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Operation-Location": {
                "type": "string",
                "format": "uri",
                "description": "The location for monitoring the operation state."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Deploy Project": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulDeployProject.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "TextAnalysisAuthoring_DeleteDeployment",
        "description": "Deletes a project deployment.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the specific deployment of the project to use.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Operation-Location": {
                "type": "string",
                "format": "uri",
                "description": "The location for monitoring the operation state."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Deployment": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulDeleteDeployment.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/authoring/analyze-text/projects/{projectName}/deployments/{deploymentName}/jobs/{jobId}": {
      "get": {
        "operationId": "TextAnalysisAuthoring_GetDeploymentStatus",
        "description": "Gets the status of an existing deployment job.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The new project name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "Represents deployment name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The job ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringDeploymentJobState"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Deployment Status": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetDeploymentStatus.json"
          }
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/deployments/:swap": {
      "post": {
        "operationId": "TextAnalysisAuthoring_SwapDeployments",
        "description": "Swaps two existing deployments with each other.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The job object to swap two deployments.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SwapDeploymentsOptions"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Operation-Location": {
                "type": "string",
                "format": "uri",
                "description": "The location for monitoring the operation state."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SuccessfulSwapDeployments": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulSwapDeployments.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/authoring/analyze-text/projects/{projectName}/deployments/swap/jobs/{jobId}": {
      "get": {
        "operationId": "TextAnalysisAuthoring_GetSwapDeploymentsStatus",
        "description": "Gets the status of an existing swap deployment job.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The new project name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The job ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringSwapDeploymentsJobState"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SuccessfulGetSwapDeploymentsStatus": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetSwapDeploymentsStatus.json"
          }
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/export/jobs/{jobId}": {
      "get": {
        "operationId": "TextAnalysisAuthoring_GetExportStatus",
        "description": "Gets the status of an export job. Once job completes, returns the project\nmetadata, and assets.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The new project name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The job ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringExportProjectJobState"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Export Status": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetExportStatus.json"
          }
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/import/jobs/{jobId}": {
      "get": {
        "operationId": "TextAnalysisAuthoring_GetImportStatus",
        "description": "Gets the status for an import.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The new project name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The job ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringImportProjectJobState"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Import Status": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetImportStatus.json"
          }
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/models": {
      "get": {
        "operationId": "TextAnalysisAuthoring_ListTrainedModels",
        "description": "Lists the trained models belonging to a project.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The new project name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedTextAnalysisAuthoringProjectTrainedModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SuccessfulListModels": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulListModels.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/models/{trainedModelLabel}": {
      "get": {
        "operationId": "TextAnalysisAuthoring_GetTrainedModel",
        "description": "Gets the details of a trained model.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The new project name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "trainedModelLabel",
            "in": "path",
            "description": "The trained model label.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringProjectTrainedModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SuccessfulGetModel": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetModel.json"
          }
        }
      },
      "delete": {
        "operationId": "TextAnalysisAuthoring_DeleteTrainedModel",
        "description": "Deletes an existing trained model.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The new project name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "trainedModelLabel",
            "in": "path",
            "description": "The trained model label.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Model": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulDeleteModel.json"
          }
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/models/{trainedModelLabel}/:load-snapshot": {
      "post": {
        "operationId": "TextAnalysisAuthoring_LoadSnapshot",
        "description": "Long-running operation.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "trainedModelLabel",
            "in": "path",
            "description": "The trained model label.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Operation-Location": {
                "type": "string",
                "format": "uri",
                "description": "The location for monitoring the operation state."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SuccessfulLoadSnapshot": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulLoadSnapshot.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/authoring/analyze-text/projects/{projectName}/models/{trainedModelLabel}/evaluation/result": {
      "get": {
        "operationId": "TextAnalysisAuthoring_GetModelEvaluationResults",
        "description": "Gets the detailed results of the evaluation for a trained model. This includes\nthe raw inference results for the data included in the evaluation process.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The new project name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "trainedModelLabel",
            "in": "path",
            "description": "The trained model label.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          },
          {
            "$ref": "#/parameters/StringIndexTypeQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedTextAnalysisAuthoringDocumentEvaluationResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SuccessfulGetModelEvaluation": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetModelEvaluation.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/models/{trainedModelLabel}/evaluation/summary-result": {
      "get": {
        "operationId": "TextAnalysisAuthoring_GetModelEvaluationSummary",
        "description": "Gets the evaluation summary of a trained model. The summary includes high level\nperformance measurements of the model e.g., F1, Precision, Recall, etc.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "trainedModelLabel",
            "in": "path",
            "description": "The trained model label.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringEvaluationSummary"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SuccessfulGetModelEvaluationSummary": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetModelEvaluationSummary.json"
          }
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/models/{trainedModelLabel}/load-snapshot/jobs/{jobId}": {
      "get": {
        "operationId": "TextAnalysisAuthoring_GetLoadSnapshotStatus",
        "description": "Gets the status for loading a snapshot.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The new project name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "trainedModelLabel",
            "in": "path",
            "description": "The trained model label.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The job ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringLoadSnapshotJobState"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SuccessfulGetLoadSnapshotStatus": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetLoadSnapshotStatus.json"
          }
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/train/jobs": {
      "get": {
        "operationId": "TextAnalysisAuthoring_ListTrainingJobs",
        "description": "Lists the non-expired training jobs created for a project.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The new project name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedTextAnalysisAuthoringTrainingJobState"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SuccessfulListTrainingJobs": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulListTrainingJobs.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/train/jobs/{jobId}": {
      "get": {
        "operationId": "TextAnalysisAuthoring_GetTrainingStatus",
        "description": "Gets the status for a training job.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The new project name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The job ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringTrainingJobState"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SuccessfulGetTrainStatus": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetTrainStatus.json"
          }
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/train/jobs/{jobId}/:cancel": {
      "post": {
        "operationId": "TextAnalysisAuthoring_CancelTrainingJob",
        "description": "Triggers a cancellation for a running training job.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The job ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Operation-Location": {
                "type": "string",
                "format": "uri",
                "description": "The location for monitoring the operation state."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Cancel Training Job": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulCancelTrainingJob.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/authoring/analyze-text/projects/global/deletion-jobs/{jobId}": {
      "get": {
        "operationId": "TextAnalysisAuthoring_GetProjectDeletionStatus",
        "description": "Gets the status for a project deletion job.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The job ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TextAnalysisAuthoringProjectDeletionJobState"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SuccessfulGetProjectDeletionStatus": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetProjectDeletionStatus.json"
          }
        }
      }
    },
    "/authoring/analyze-text/projects/global/languages": {
      "get": {
        "operationId": "TextAnalysisAuthoring_GetSupportedLanguages",
        "description": "Lists the supported languages.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ProjectKindQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedTextAnalysisAuthoringSupportedLanguage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SuccessfulGetSupportedLanguages": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetSupportedLanguages.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/authoring/analyze-text/projects/global/training-config-versions": {
      "get": {
        "operationId": "TextAnalysisAuthoring_ListTrainingConfigVersions",
        "description": "Lists the support training config version for a given project type.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ProjectKindQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedTextAnalysisAuthoringTrainingConfigVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SuccessfulGetSupportedTrainingConfigVersions": {
            "$ref": "./examples/analyzetext-authoring/SuccessfulGetSupportedTrainingConfigVersions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "CreateProjectOptions": {
      "type": "object",
      "description": "Represents the options used to create or update a project.",
      "properties": {
        "projectKind": {
          "$ref": "#/definitions/ProjectKind",
          "description": "The project kind."
        },
        "storageInputContainerName": {
          "type": "string",
          "description": "The storage container name."
        },
        "settings": {
          "$ref": "#/definitions/ProjectSettings",
          "description": "The project settings."
        },
        "projectName": {
          "type": "string",
          "description": "The new project name."
        },
        "multilingual": {
          "type": "boolean",
          "description": "Whether the project would be used for multiple languages or not."
        },
        "description": {
          "type": "string",
          "description": "The project description."
        },
        "language": {
          "type": "string",
          "description": "The project language. This is BCP-47 representation of a language. For example,\nuse \"en\" for English, \"en-gb\" for English (UK), \"es\" for Spanish etc."
        }
      },
      "required": [
        "projectKind",
        "storageInputContainerName",
        "projectName",
        "language"
      ]
    },
    "Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "$ref": "#/definitions/ErrorCode",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/InnerErrorModel",
          "description": "An object containing more specific information than the current object about\nthe error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "ErrorCode": {
      "type": "string",
      "description": "Human-readable error code.",
      "enum": [
        "InvalidRequest",
        "InvalidArgument",
        "Unauthorized",
        "Forbidden",
        "NotFound",
        "ProjectNotFound",
        "OperationNotFound",
        "AzureCognitiveSearchNotFound",
        "AzureCognitiveSearchIndexNotFound",
        "TooManyRequests",
        "AzureCognitiveSearchThrottling",
        "AzureCognitiveSearchIndexLimitReached",
        "InternalServerError",
        "ServiceUnavailable",
        "Timeout",
        "QuotaExceeded",
        "Conflict",
        "Warning"
      ],
      "x-ms-enum": {
        "name": "ErrorCode",
        "modelAsString": true,
        "values": [
          {
            "name": "InvalidRequest",
            "value": "InvalidRequest"
          },
          {
            "name": "InvalidArgument",
            "value": "InvalidArgument"
          },
          {
            "name": "Unauthorized",
            "value": "Unauthorized"
          },
          {
            "name": "Forbidden",
            "value": "Forbidden"
          },
          {
            "name": "NotFound",
            "value": "NotFound"
          },
          {
            "name": "ProjectNotFound",
            "value": "ProjectNotFound"
          },
          {
            "name": "OperationNotFound",
            "value": "OperationNotFound"
          },
          {
            "name": "AzureCognitiveSearchNotFound",
            "value": "AzureCognitiveSearchNotFound"
          },
          {
            "name": "AzureCognitiveSearchIndexNotFound",
            "value": "AzureCognitiveSearchIndexNotFound"
          },
          {
            "name": "TooManyRequests",
            "value": "TooManyRequests"
          },
          {
            "name": "AzureCognitiveSearchThrottling",
            "value": "AzureCognitiveSearchThrottling"
          },
          {
            "name": "AzureCognitiveSearchIndexLimitReached",
            "value": "AzureCognitiveSearchIndexLimitReached"
          },
          {
            "name": "InternalServerError",
            "value": "InternalServerError"
          },
          {
            "name": "ServiceUnavailable",
            "value": "ServiceUnavailable"
          },
          {
            "name": "Timeout",
            "value": "Timeout"
          },
          {
            "name": "QuotaExceeded",
            "value": "QuotaExceeded"
          },
          {
            "name": "Conflict",
            "value": "Conflict"
          },
          {
            "name": "Warning",
            "value": "Warning"
          }
        ]
      }
    },
    "ErrorResponse": {
      "type": "object",
      "description": "Error response.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "EvaluationKind": {
      "type": "string",
      "enum": [
        "percentage",
        "manual"
      ],
      "x-ms-enum": {
        "name": "EvaluationKind",
        "modelAsString": true,
        "values": [
          {
            "name": "percentage",
            "value": "percentage",
            "description": "Split the data into training and test sets according to user-defined\npercentages."
          },
          {
            "name": "manual",
            "value": "manual",
            "description": "Split the data according to the chosen dataset for every example in the data."
          }
        ]
      }
    },
    "EvaluationOptions": {
      "type": "object",
      "description": "Represents the options used running the evaluation.",
      "properties": {
        "kind": {
          "$ref": "#/definitions/EvaluationKind",
          "description": "Represents the evaluation kind. By default, the evaluation kind is set to\npercentage."
        },
        "trainingSplitPercentage": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the training dataset split percentage. Only needed in case the\nevaluation kind is percentage."
        },
        "testingSplitPercentage": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the testing dataset split percentage. Only needed in case the\nevaluation kind is percentage."
        }
      }
    },
    "ExportedProject": {
      "type": "object",
      "description": "Represents an exported project.",
      "properties": {
        "projectFileVersion": {
          "type": "string",
          "description": "The version of the exported file."
        },
        "stringIndexType": {
          "$ref": "#/definitions/StringIndexType",
          "description": "Specifies the method used to interpret string offsets. For additional\ninformation see https://aka.ms/text-analytics-offsets."
        },
        "metadata": {
          "$ref": "#/definitions/CreateProjectOptions",
          "description": "Represents the project metadata."
        },
        "assets": {
          "$ref": "#/definitions/ExportedProjectAssets",
          "description": "Represents the project assets."
        }
      },
      "required": [
        "projectFileVersion",
        "stringIndexType",
        "metadata"
      ]
    },
    "ExportedProjectAssets": {
      "type": "object",
      "description": "Represents the assets of an exported project.",
      "properties": {
        "projectKind": {
          "$ref": "#/definitions/ProjectKind"
        }
      },
      "discriminator": "projectKind",
      "required": [
        "projectKind"
      ]
    },
    "InnerErrorCode": {
      "type": "string",
      "description": "Human-readable error code.",
      "enum": [
        "InvalidRequest",
        "InvalidParameterValue",
        "KnowledgeBaseNotFound",
        "AzureCognitiveSearchNotFound",
        "AzureCognitiveSearchThrottling",
        "ExtractionFailure",
        "InvalidRequestBodyFormat",
        "EmptyRequest",
        "MissingInputDocuments",
        "InvalidDocument",
        "ModelVersionIncorrect",
        "InvalidDocumentBatch",
        "UnsupportedLanguageCode",
        "InvalidCountryHint"
      ],
      "x-ms-enum": {
        "name": "InnerErrorCode",
        "modelAsString": true,
        "values": [
          {
            "name": "InvalidRequest",
            "value": "InvalidRequest"
          },
          {
            "name": "InvalidParameterValue",
            "value": "InvalidParameterValue"
          },
          {
            "name": "KnowledgeBaseNotFound",
            "value": "KnowledgeBaseNotFound"
          },
          {
            "name": "AzureCognitiveSearchNotFound",
            "value": "AzureCognitiveSearchNotFound"
          },
          {
            "name": "AzureCognitiveSearchThrottling",
            "value": "AzureCognitiveSearchThrottling"
          },
          {
            "name": "ExtractionFailure",
            "value": "ExtractionFailure"
          },
          {
            "name": "InvalidRequestBodyFormat",
            "value": "InvalidRequestBodyFormat"
          },
          {
            "name": "EmptyRequest",
            "value": "EmptyRequest"
          },
          {
            "name": "MissingInputDocuments",
            "value": "MissingInputDocuments"
          },
          {
            "name": "InvalidDocument",
            "value": "InvalidDocument"
          },
          {
            "name": "ModelVersionIncorrect",
            "value": "ModelVersionIncorrect"
          },
          {
            "name": "InvalidDocumentBatch",
            "value": "InvalidDocumentBatch"
          },
          {
            "name": "UnsupportedLanguageCode",
            "value": "UnsupportedLanguageCode"
          },
          {
            "name": "InvalidCountryHint",
            "value": "InvalidCountryHint"
          }
        ]
      }
    },
    "InnerErrorModel": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per\nMicrosoft One API guidelines -\nhttps://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "$ref": "#/definitions/InnerErrorCode",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "details": {
          "type": "object",
          "description": "Error details.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "target": {
          "type": "string",
          "description": "Error target."
        },
        "innererror": {
          "$ref": "#/definitions/InnerErrorModel",
          "description": "An object containing more specific information than the current object about\nthe error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "JobStatus": {
      "type": "string",
      "enum": [
        "notStarted",
        "running",
        "succeeded",
        "failed",
        "cancelled",
        "cancelling",
        "partiallyCompleted"
      ],
      "x-ms-enum": {
        "name": "JobStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "notStarted",
            "value": "notStarted"
          },
          {
            "name": "running",
            "value": "running"
          },
          {
            "name": "succeeded",
            "value": "succeeded"
          },
          {
            "name": "failed",
            "value": "failed"
          },
          {
            "name": "cancelled",
            "value": "cancelled"
          },
          {
            "name": "cancelling",
            "value": "cancelling"
          },
          {
            "name": "partiallyCompleted",
            "value": "partiallyCompleted"
          }
        ]
      }
    },
    "PagedTextAnalysisAuthoringDocumentEvaluationResult": {
      "type": "object",
      "description": "Paged collection of TextAnalysisAuthoringDocumentEvaluationResult items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The TextAnalysisAuthoringDocumentEvaluationResult items on this page",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringDocumentEvaluationResult"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedTextAnalysisAuthoringProjectDeployment": {
      "type": "object",
      "description": "Paged collection of TextAnalysisAuthoringProjectDeployment items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The TextAnalysisAuthoringProjectDeployment items on this page",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringProjectDeployment"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedTextAnalysisAuthoringProjectMetadata": {
      "type": "object",
      "description": "Paged collection of TextAnalysisAuthoringProjectMetadata items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The TextAnalysisAuthoringProjectMetadata items on this page",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringProjectMetadata"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedTextAnalysisAuthoringProjectTrainedModel": {
      "type": "object",
      "description": "Paged collection of TextAnalysisAuthoringProjectTrainedModel items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The TextAnalysisAuthoringProjectTrainedModel items on this page",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringProjectTrainedModel"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedTextAnalysisAuthoringSupportedLanguage": {
      "type": "object",
      "description": "Paged collection of TextAnalysisAuthoringSupportedLanguage items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The TextAnalysisAuthoringSupportedLanguage items on this page",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringSupportedLanguage"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedTextAnalysisAuthoringTrainingConfigVersion": {
      "type": "object",
      "description": "Paged collection of TextAnalysisAuthoringTrainingConfigVersion items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The TextAnalysisAuthoringTrainingConfigVersion items on this page",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringTrainingConfigVersion"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedTextAnalysisAuthoringTrainingJobState": {
      "type": "object",
      "description": "Paged collection of TextAnalysisAuthoringTrainingJobState items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The TextAnalysisAuthoringTrainingJobState items on this page",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringTrainingJobState"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ProjectKind": {
      "type": "string",
      "enum": [
        "CustomSingleLabelClassification",
        "CustomMultiLabelClassification",
        "CustomEntityRecognition"
      ],
      "x-ms-enum": {
        "name": "ProjectKind",
        "modelAsString": true,
        "values": [
          {
            "name": "CustomSingleLabelClassification",
            "value": "CustomSingleLabelClassification",
            "description": "For building a classification model to classify text using your own data. Each\nfile will have only one label. For example, file 1 is classified as A and file\n2 is classified as B."
          },
          {
            "name": "CustomMultiLabelClassification",
            "value": "CustomMultiLabelClassification",
            "description": "For building a classification model to classify text using your own data. Each\nfile can have one or many labels. For example, file 1 is classified as A, B,\nand C and file 2 is classified as B and C."
          },
          {
            "name": "CustomEntityRecognition",
            "value": "CustomEntityRecognition",
            "description": "For building an extraction model to identify your domain categories using your\nown data."
          }
        ]
      }
    },
    "ProjectSettings": {
      "type": "object",
      "description": "Represents the settings used to define the project behavior.",
      "properties": {
        "confidenceThreshold": {
          "type": "number",
          "format": "float",
          "description": "The threshold of the class with the highest confidence, at which the prediction\nwill automatically be changed to \"None\". The value of the threshold should be\nbetween 0 and 1 inclusive."
        }
      }
    },
    "StringIndexType": {
      "type": "string",
      "enum": [
        "Utf16CodeUnit"
      ],
      "x-ms-enum": {
        "name": "StringIndexType",
        "modelAsString": true,
        "values": [
          {
            "name": "Utf16CodeUnit",
            "value": "Utf16CodeUnit",
            "description": "The offset and length values will correspond to UTF-16 code units. Use this\noption if your application is written in a language that support Unicode, for\nexample Java, JavaScript."
          }
        ]
      }
    },
    "SwapDeploymentsOptions": {
      "type": "object",
      "description": "Represents the options for swapping two deployments together.",
      "properties": {
        "firstDeploymentName": {
          "type": "string",
          "description": "Represents the first deployment name."
        },
        "secondDeploymentName": {
          "type": "string",
          "description": "Represents the second deployment name."
        }
      },
      "required": [
        "firstDeploymentName",
        "secondDeploymentName"
      ]
    },
    "TextAnalysisAuthoringConfusionMatrix": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/TextAnalysisAuthoringConfusionMatrixRow"
      }
    },
    "TextAnalysisAuthoringConfusionMatrixCell": {
      "type": "object",
      "description": "Represents a cell in a confusion matrix.",
      "properties": {
        "normalizedValue": {
          "type": "number",
          "format": "float",
          "description": "Represents normalized value in percentages."
        },
        "rawValue": {
          "type": "number",
          "format": "float",
          "description": "Represents raw value."
        }
      },
      "required": [
        "normalizedValue",
        "rawValue"
      ]
    },
    "TextAnalysisAuthoringConfusionMatrixRow": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/TextAnalysisAuthoringConfusionMatrixCell"
      }
    },
    "TextAnalysisAuthoringCreateDeploymentOptions": {
      "type": "object",
      "description": "Represents the options for creating or updating a project deployment.",
      "properties": {
        "trainedModelLabel": {
          "type": "string",
          "description": "Represents the trained model label."
        }
      },
      "required": [
        "trainedModelLabel"
      ]
    },
    "TextAnalysisAuthoringCustomEntityRecognitionDocumentEvaluationResult": {
      "type": "object",
      "description": "Represents the document evaluation result for a custom entity recognition\nproject.",
      "properties": {
        "customEntityRecognitionResult": {
          "$ref": "#/definitions/TextAnalysisAuthoringDocumentEntityRecognitionEvaluationResult",
          "description": "Represents the evaluation prediction for entity recognition."
        }
      },
      "required": [
        "customEntityRecognitionResult"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TextAnalysisAuthoringDocumentEvaluationResult"
        }
      ],
      "x-ms-discriminator-value": "CustomEntityRecognition"
    },
    "TextAnalysisAuthoringCustomEntityRecognitionEvaluationSummary": {
      "type": "object",
      "description": "Represents the evaluation summary for a custom entity recognition project.",
      "properties": {
        "customEntityRecognitionEvaluation": {
          "$ref": "#/definitions/TextAnalysisAuthoringEntityRecognitionEvaluationSummary",
          "description": "Contains the data related to extraction evaluation."
        }
      },
      "required": [
        "customEntityRecognitionEvaluation"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TextAnalysisAuthoringEvaluationSummary"
        }
      ],
      "x-ms-discriminator-value": "CustomEntityRecognition"
    },
    "TextAnalysisAuthoringCustomMultiLabelClassificationDocumentEvaluationResult": {
      "type": "object",
      "description": "Represents the document evaluation result for a custom multi-label\nclassification project.",
      "properties": {
        "customMultiLabelClassificationResult": {
          "$ref": "#/definitions/TextAnalysisAuthoringDocumentMultiLabelClassificationEvaluationResult",
          "description": "Represents the evaluation prediction for multi label classification."
        }
      },
      "required": [
        "customMultiLabelClassificationResult"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TextAnalysisAuthoringDocumentEvaluationResult"
        }
      ],
      "x-ms-discriminator-value": "CustomMultiLabelClassification"
    },
    "TextAnalysisAuthoringCustomMultiLabelClassificationEvaluationSummary": {
      "type": "object",
      "description": "Represents the evaluation summary for a custom multi-label classification\nproject.",
      "properties": {
        "customMultiLabelClassificationEvaluation": {
          "$ref": "#/definitions/TextAnalysisAuthoringMultiLabelClassificationEvaluationSummary",
          "description": "Contains the data related to multi label classification evaluation."
        }
      },
      "required": [
        "customMultiLabelClassificationEvaluation"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TextAnalysisAuthoringEvaluationSummary"
        }
      ],
      "x-ms-discriminator-value": "CustomMultiLabelClassification"
    },
    "TextAnalysisAuthoringCustomSingleLabelClassificationDocumentEvaluationResult": {
      "type": "object",
      "description": "Represents the document evaluation result for a custom single-label\nclassification project.",
      "properties": {
        "customSingleLabelClassificationResult": {
          "$ref": "#/definitions/TextAnalysisAuthoringDocumentSingleLabelClassificationEvaluationResult",
          "description": "Represents the evaluation prediction for single label classification."
        }
      },
      "required": [
        "customSingleLabelClassificationResult"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TextAnalysisAuthoringDocumentEvaluationResult"
        }
      ],
      "x-ms-discriminator-value": "CustomSingleLabelClassification"
    },
    "TextAnalysisAuthoringCustomSingleLabelClassificationEvaluationSummary": {
      "type": "object",
      "description": "Represents the evaluation summary for a custom single-label classification\nproject.",
      "properties": {
        "customSingleLabelClassificationEvaluation": {
          "$ref": "#/definitions/TextAnalysisAuthoringSingleLabelClassificationEvaluationSummary",
          "description": "Contains the data related to single label classification evaluation."
        }
      },
      "required": [
        "customSingleLabelClassificationEvaluation"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TextAnalysisAuthoringEvaluationSummary"
        }
      ],
      "x-ms-discriminator-value": "CustomSingleLabelClassification"
    },
    "TextAnalysisAuthoringDeploymentJobState": {
      "type": "object",
      "description": "Represents the state of a deployment job.",
      "properties": {
        "jobId": {
          "type": "string",
          "description": "The job ID."
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date time of the job."
        },
        "lastUpdatedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last date time the job was updated."
        },
        "expirationDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration date time of the job."
        },
        "status": {
          "$ref": "#/definitions/JobStatus",
          "description": "The job status."
        },
        "warnings": {
          "type": "array",
          "description": "The warnings that were encountered while executing the job.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringWarning"
          },
          "x-ms-identifiers": []
        },
        "errors": {
          "type": "array",
          "description": "The errors encountered while executing the job.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "jobId",
        "createdDateTime",
        "lastUpdatedDateTime",
        "status"
      ]
    },
    "TextAnalysisAuthoringDocumentEntityLabelEvaluationResult": {
      "type": "object",
      "description": "Represents an evaluation result entity label.",
      "properties": {
        "category": {
          "type": "string",
          "description": "Represents the entity category."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the entity offset index relative to the original text."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the entity length."
        }
      },
      "required": [
        "category",
        "offset",
        "length"
      ]
    },
    "TextAnalysisAuthoringDocumentEntityRecognitionEvaluationResult": {
      "type": "object",
      "description": "Represents the entity recognition evaluation result for a document.",
      "properties": {
        "entities": {
          "type": "array",
          "description": "Represents the document labelled entities.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringDocumentEntityRegionEvaluationResult"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "entities"
      ]
    },
    "TextAnalysisAuthoringDocumentEntityRegionEvaluationResult": {
      "type": "object",
      "description": "Represents the evaluation comparison between the expected and predicted\nentities of a document region.",
      "properties": {
        "expectedEntities": {
          "type": "array",
          "description": "Represents the region's expected entity labels.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringDocumentEntityLabelEvaluationResult"
          },
          "x-ms-identifiers": []
        },
        "predictedEntities": {
          "type": "array",
          "description": "Represents the region's predicted entity labels.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringDocumentEntityLabelEvaluationResult"
          },
          "x-ms-identifiers": []
        },
        "regionOffset": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the region offset."
        },
        "regionLength": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the region length."
        }
      },
      "required": [
        "expectedEntities",
        "predictedEntities",
        "regionOffset",
        "regionLength"
      ]
    },
    "TextAnalysisAuthoringDocumentEvaluationResult": {
      "type": "object",
      "description": "Represents the evaluation result of a document.",
      "properties": {
        "projectKind": {
          "$ref": "#/definitions/ProjectKind",
          "description": "Represents the project kind."
        },
        "location": {
          "type": "string",
          "description": "Represents the document path."
        },
        "language": {
          "type": "string",
          "description": "Represents the document language. This is BCP-47 representation of a language.\nFor example, use \"en\" for English, \"en-gb\" for English (UK), \"es\" for Spanish\netc."
        }
      },
      "discriminator": "projectKind",
      "required": [
        "projectKind",
        "location",
        "language"
      ]
    },
    "TextAnalysisAuthoringDocumentMultiLabelClassificationEvaluationResult": {
      "type": "object",
      "description": "Represents the comparison between the expected and predicted classes that are\nresult from the evaluation operation.",
      "properties": {
        "expectedClasses": {
          "type": "array",
          "description": "Represents the document's expected classes.",
          "items": {
            "type": "string"
          }
        },
        "predictedClasses": {
          "type": "array",
          "description": "Represents the document's predicted classes.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "expectedClasses",
        "predictedClasses"
      ]
    },
    "TextAnalysisAuthoringDocumentSingleLabelClassificationEvaluationResult": {
      "type": "object",
      "description": "Represents the comparison between the expected and predicted class that result\nfrom an evaluation operation.",
      "properties": {
        "expectedClass": {
          "type": "string",
          "description": "Represents the document's expected class."
        },
        "predictedClass": {
          "type": "string",
          "description": "Represents the document's predicted class."
        }
      },
      "required": [
        "expectedClass",
        "predictedClass"
      ]
    },
    "TextAnalysisAuthoringEntityEvaluationSummary": {
      "type": "object",
      "description": "Represents the evaluation summary for an entity.",
      "properties": {
        "f1": {
          "type": "number",
          "format": "double",
          "description": "Represents the model precision"
        },
        "precision": {
          "type": "number",
          "format": "double",
          "description": "Represents the model recall"
        },
        "recall": {
          "type": "number",
          "format": "double",
          "description": "Represents the model F1 score"
        },
        "truePositiveCount": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the count of true positive"
        },
        "trueNegativeCount": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the count of true negative"
        },
        "falsePositiveCount": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the count of false positive"
        },
        "falseNegativeCount": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the count of false negative"
        }
      },
      "required": [
        "f1",
        "precision",
        "recall",
        "truePositiveCount",
        "trueNegativeCount",
        "falsePositiveCount",
        "falseNegativeCount"
      ]
    },
    "TextAnalysisAuthoringEntityRecognitionEvaluationSummary": {
      "type": "object",
      "description": "Represents the evaluation summary for a custom entity recognition project.",
      "properties": {
        "confusionMatrix": {
          "$ref": "#/definitions/TextAnalysisAuthoringConfusionMatrix",
          "description": "Represents the confusion matrix between two entities (the two entities can be\nthe same). The matrix is between the entity that was labelled and the entity\nthat was predicted."
        },
        "entities": {
          "type": "object",
          "description": "Represents the entities evaluation",
          "additionalProperties": {
            "$ref": "#/definitions/TextAnalysisAuthoringEntityEvaluationSummary"
          }
        },
        "microF1": {
          "type": "number",
          "format": "float",
          "description": "Represents the micro F1. Expected value is a float between 0 and 1 inclusive."
        },
        "microPrecision": {
          "type": "number",
          "format": "float",
          "description": "Represents the micro precision. Expected value is a float between 0 and 1\ninclusive."
        },
        "microRecall": {
          "type": "number",
          "format": "float",
          "description": "Represents the micro recall. Expected value is a float between 0 and 1\ninclusive."
        },
        "macroF1": {
          "type": "number",
          "format": "float",
          "description": "Represents the macro F1. Expected value is a float between 0 and 1 inclusive."
        },
        "macroPrecision": {
          "type": "number",
          "format": "float",
          "description": "Represents the macro precision. Expected value is a float between 0 and 1\ninclusive."
        },
        "macroRecall": {
          "type": "number",
          "format": "float",
          "description": "Represents the macro recall. Expected value is a float between 0 and 1\ninclusive."
        }
      },
      "required": [
        "confusionMatrix",
        "entities",
        "microF1",
        "microPrecision",
        "microRecall",
        "macroF1",
        "macroPrecision",
        "macroRecall"
      ]
    },
    "TextAnalysisAuthoringEvaluationSummary": {
      "type": "object",
      "description": "Represents the summary for an evaluation operation.",
      "properties": {
        "projectKind": {
          "$ref": "#/definitions/ProjectKind",
          "description": "Represents the project type that the evaluation ran on."
        },
        "evaluationOptions": {
          "$ref": "#/definitions/EvaluationOptions",
          "description": "Represents the options used running the evaluation."
        }
      },
      "discriminator": "projectKind",
      "required": [
        "projectKind",
        "evaluationOptions"
      ]
    },
    "TextAnalysisAuthoringExportProjectJobState": {
      "type": "object",
      "description": "Represents the state of an export job.",
      "properties": {
        "jobId": {
          "type": "string",
          "description": "The job ID."
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date time of the job."
        },
        "lastUpdatedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last date time the job was updated."
        },
        "expirationDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration date time of the job."
        },
        "status": {
          "$ref": "#/definitions/JobStatus",
          "description": "The job status."
        },
        "warnings": {
          "type": "array",
          "description": "The warnings that were encountered while executing the job.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringWarning"
          },
          "x-ms-identifiers": []
        },
        "errors": {
          "type": "array",
          "description": "The errors encountered while executing the job.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "x-ms-identifiers": []
        },
        "resultUrl": {
          "type": "string",
          "description": "The URL to use in order to download the exported project."
        }
      },
      "required": [
        "jobId",
        "createdDateTime",
        "lastUpdatedDateTime",
        "status"
      ]
    },
    "TextAnalysisAuthoringExportedClass": {
      "type": "object",
      "description": "Represents a class of an exported project.",
      "properties": {
        "category": {
          "type": "string",
          "description": "The class category."
        }
      }
    },
    "TextAnalysisAuthoringExportedCustomEntityRecognitionDocument": {
      "type": "object",
      "description": "Represents an exported document for a custom entity recognition project.",
      "properties": {
        "entities": {
          "type": "array",
          "description": "The list of entity labels belonging to the document.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringExportedDocumentEntityRegion"
          },
          "x-ms-identifiers": []
        },
        "location": {
          "type": "string",
          "description": "The location of the document in the storage."
        },
        "language": {
          "type": "string",
          "description": "Represents the document language. This is BCP-47 representation of a language.\nFor example, use \"en\" for English, \"en-gb\" for English (UK), \"es\" for Spanish\netc."
        },
        "dataset": {
          "type": "string",
          "description": "The dataset for this document. Allowed values are 'Train' and 'Test'."
        }
      }
    },
    "TextAnalysisAuthoringExportedCustomEntityRecognitionProjectAssets": {
      "type": "object",
      "description": "Represents the exported assets for a entity recognition project.",
      "properties": {
        "entities": {
          "type": "array",
          "description": "The list of entities belonging to the project.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringExportedEntity"
          },
          "x-ms-identifiers": []
        },
        "documents": {
          "type": "array",
          "description": "The list of documents belonging to the project.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringExportedCustomEntityRecognitionDocument"
          },
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ExportedProjectAssets"
        }
      ],
      "x-ms-discriminator-value": "CustomEntityRecognition"
    },
    "TextAnalysisAuthoringExportedCustomMultiLabelClassificationDocument": {
      "type": "object",
      "description": "Represents an exported document of a custom multi-label classification project.",
      "properties": {
        "classes": {
          "type": "array",
          "description": "The document classes.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringExportedDocumentClass"
          },
          "x-ms-identifiers": []
        },
        "location": {
          "type": "string",
          "description": "The location of the document in the storage."
        },
        "language": {
          "type": "string",
          "description": "Represents the document language. This is BCP-47 representation of a language.\nFor example, use \"en\" for English, \"en-gb\" for English (UK), \"es\" for Spanish\netc."
        },
        "dataset": {
          "type": "string",
          "description": "The dataset for this document. Allowed values are 'Train' and 'Test'."
        }
      }
    },
    "TextAnalysisAuthoringExportedCustomMultiLabelClassificationProjectAssets": {
      "type": "object",
      "description": "Represents the exported assets for a custom multi-label classification project.",
      "properties": {
        "classes": {
          "type": "array",
          "description": "The list of classes in the project.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringExportedClass"
          },
          "x-ms-identifiers": []
        },
        "documents": {
          "type": "array",
          "description": "The list of documents in the project.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringExportedCustomMultiLabelClassificationDocument"
          },
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ExportedProjectAssets"
        }
      ],
      "x-ms-discriminator-value": "CustomMultiLabelClassification"
    },
    "TextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument": {
      "type": "object",
      "description": "Represents an exported document for a custom single-label classification\nproject.",
      "properties": {
        "class": {
          "$ref": "#/definitions/TextAnalysisAuthoringExportedDocumentClass",
          "description": "The class of the documents."
        },
        "location": {
          "type": "string",
          "description": "The location of the document in the storage."
        },
        "language": {
          "type": "string",
          "description": "Represents the document language. This is BCP-47 representation of a language.\nFor example, use \"en\" for English, \"en-gb\" for English (UK), \"es\" for Spanish\netc."
        },
        "dataset": {
          "type": "string",
          "description": "The dataset for this document. Allowed values are 'Train' and 'Test'."
        }
      }
    },
    "TextAnalysisAuthoringExportedCustomSingleLabelClassificationProjectAssets": {
      "type": "object",
      "description": "Represents the exported assets for a single-label classification project.",
      "properties": {
        "classes": {
          "type": "array",
          "description": "The list of classes belonging to this project.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringExportedClass"
          },
          "x-ms-identifiers": []
        },
        "documents": {
          "type": "array",
          "description": "The list of documents belonging to this project.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument"
          },
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ExportedProjectAssets"
        }
      ],
      "x-ms-discriminator-value": "CustomSingleLabelClassification"
    },
    "TextAnalysisAuthoringExportedDocumentClass": {
      "type": "object",
      "description": "Represents a classification label for a document.",
      "properties": {
        "category": {
          "type": "string"
        }
      }
    },
    "TextAnalysisAuthoringExportedDocumentEntityLabel": {
      "type": "object",
      "description": "Represents an entity label for a document.",
      "properties": {
        "category": {
          "type": "string",
          "description": "The entity category."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position for the entity text."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Length for the entity text."
        }
      }
    },
    "TextAnalysisAuthoringExportedDocumentEntityRegion": {
      "type": "object",
      "description": "Represents a region in a document for entity labeling.",
      "properties": {
        "regionOffset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position for the region."
        },
        "regionLength": {
          "type": "integer",
          "format": "int32",
          "description": "Length for the region text."
        },
        "labels": {
          "type": "array",
          "description": "The list of entity labels belonging to this region.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringExportedDocumentEntityLabel"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "TextAnalysisAuthoringExportedEntity": {
      "type": "object",
      "description": "Represents an entity in an exported project.",
      "properties": {
        "category": {
          "type": "string",
          "description": "The entity category."
        }
      }
    },
    "TextAnalysisAuthoringImportProjectJobState": {
      "type": "object",
      "description": "Represents the state of an import job.",
      "properties": {
        "jobId": {
          "type": "string",
          "description": "The job ID."
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date time of the job."
        },
        "lastUpdatedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last date time the job was updated."
        },
        "expirationDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration date time of the job."
        },
        "status": {
          "$ref": "#/definitions/JobStatus",
          "description": "The job status."
        },
        "warnings": {
          "type": "array",
          "description": "The warnings that were encountered while executing the job.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringWarning"
          },
          "x-ms-identifiers": []
        },
        "errors": {
          "type": "array",
          "description": "The errors encountered while executing the job.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "jobId",
        "createdDateTime",
        "lastUpdatedDateTime",
        "status"
      ]
    },
    "TextAnalysisAuthoringLoadSnapshotJobState": {
      "type": "object",
      "description": "Represents the state of loading a snapshot job.",
      "properties": {
        "jobId": {
          "type": "string",
          "description": "The job ID."
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date time of the job."
        },
        "lastUpdatedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last date time the job was updated."
        },
        "expirationDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration date time of the job."
        },
        "status": {
          "$ref": "#/definitions/JobStatus",
          "description": "The job status."
        },
        "warnings": {
          "type": "array",
          "description": "The warnings that were encountered while executing the job.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringWarning"
          },
          "x-ms-identifiers": []
        },
        "errors": {
          "type": "array",
          "description": "The errors encountered while executing the job.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "jobId",
        "createdDateTime",
        "lastUpdatedDateTime",
        "status"
      ]
    },
    "TextAnalysisAuthoringMultiLabelClassEvaluationSummary": {
      "type": "object",
      "description": "Represents the evaluation summary of a class in a multi-label classification\nproject.",
      "properties": {
        "f1": {
          "type": "number",
          "format": "double",
          "description": "Represents the model precision"
        },
        "precision": {
          "type": "number",
          "format": "double",
          "description": "Represents the model recall"
        },
        "recall": {
          "type": "number",
          "format": "double",
          "description": "Represents the model F1 score"
        },
        "truePositiveCount": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the count of true positive"
        },
        "trueNegativeCount": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the count of true negative"
        },
        "falsePositiveCount": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the count of false positive"
        },
        "falseNegativeCount": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the count of false negative"
        }
      },
      "required": [
        "f1",
        "precision",
        "recall",
        "truePositiveCount",
        "trueNegativeCount",
        "falsePositiveCount",
        "falseNegativeCount"
      ]
    },
    "TextAnalysisAuthoringMultiLabelClassificationEvaluationSummary": {
      "type": "object",
      "description": "Represents the evaluation summary for a multi-label classification project.",
      "properties": {
        "classes": {
          "type": "object",
          "description": "Represents the classes evaluation",
          "additionalProperties": {
            "$ref": "#/definitions/TextAnalysisAuthoringMultiLabelClassEvaluationSummary"
          }
        },
        "microF1": {
          "type": "number",
          "format": "float",
          "description": "Represents the micro F1. Expected value is a float between 0 and 1 inclusive."
        },
        "microPrecision": {
          "type": "number",
          "format": "float",
          "description": "Represents the micro precision. Expected value is a float between 0 and 1\ninclusive."
        },
        "microRecall": {
          "type": "number",
          "format": "float",
          "description": "Represents the micro recall. Expected value is a float between 0 and 1\ninclusive."
        },
        "macroF1": {
          "type": "number",
          "format": "float",
          "description": "Represents the macro F1. Expected value is a float between 0 and 1 inclusive."
        },
        "macroPrecision": {
          "type": "number",
          "format": "float",
          "description": "Represents the macro precision. Expected value is a float between 0 and 1\ninclusive."
        },
        "macroRecall": {
          "type": "number",
          "format": "float",
          "description": "Represents the macro recall. Expected value is a float between 0 and 1\ninclusive."
        }
      },
      "required": [
        "classes",
        "microF1",
        "microPrecision",
        "microRecall",
        "macroF1",
        "macroPrecision",
        "macroRecall"
      ]
    },
    "TextAnalysisAuthoringProjectDeletionJobState": {
      "type": "object",
      "description": "Represents the state of a project deletion job.",
      "properties": {
        "jobId": {
          "type": "string",
          "description": "The job ID."
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date time of the job."
        },
        "lastUpdatedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last date time the job was updated."
        },
        "expirationDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration date time of the job."
        },
        "status": {
          "$ref": "#/definitions/JobStatus",
          "description": "The job status."
        },
        "warnings": {
          "type": "array",
          "description": "The warnings that were encountered while executing the job.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringWarning"
          },
          "x-ms-identifiers": []
        },
        "errors": {
          "type": "array",
          "description": "The errors encountered while executing the job.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "jobId",
        "createdDateTime",
        "lastUpdatedDateTime",
        "status"
      ]
    },
    "TextAnalysisAuthoringProjectDeployment": {
      "type": "object",
      "description": "Represents a project deployment.",
      "properties": {
        "deploymentName": {
          "type": "string",
          "description": "Represents deployment name."
        },
        "modelId": {
          "type": "string",
          "description": "Represents deployment modelId."
        },
        "lastTrainedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Represents deployment last trained time."
        },
        "lastDeployedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Represents deployment last deployed time."
        },
        "deploymentExpirationDate": {
          "type": "string",
          "format": "date",
          "description": "Represents deployment expiration date in the runtime."
        },
        "modelTrainingConfigVersion": {
          "type": "string",
          "description": "Represents model training config version."
        }
      },
      "required": [
        "deploymentName",
        "modelId",
        "lastTrainedDateTime",
        "lastDeployedDateTime",
        "deploymentExpirationDate",
        "modelTrainingConfigVersion"
      ]
    },
    "TextAnalysisAuthoringProjectMetadata": {
      "type": "object",
      "description": "Represents the metadata of a project.",
      "properties": {
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Represents the project creation datetime."
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Represents the project last modification datetime."
        },
        "lastTrainedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Represents the project last training datetime."
        },
        "lastDeployedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Represents the project last deployment datetime."
        },
        "projectKind": {
          "$ref": "#/definitions/ProjectKind",
          "description": "The project kind."
        },
        "storageInputContainerName": {
          "type": "string",
          "description": "The storage container name."
        },
        "settings": {
          "$ref": "#/definitions/ProjectSettings",
          "description": "The project settings."
        },
        "projectName": {
          "type": "string",
          "description": "The new project name."
        },
        "multilingual": {
          "type": "boolean",
          "description": "Whether the project would be used for multiple languages or not."
        },
        "description": {
          "type": "string",
          "description": "The project description."
        },
        "language": {
          "type": "string",
          "description": "The project language. This is BCP-47 representation of a language. For example,\nuse \"en\" for English, \"en-gb\" for English (UK), \"es\" for Spanish etc."
        }
      },
      "required": [
        "createdDateTime",
        "lastModifiedDateTime",
        "projectKind",
        "storageInputContainerName",
        "projectName",
        "language"
      ]
    },
    "TextAnalysisAuthoringProjectTrainedModel": {
      "type": "object",
      "description": "Represents a trained model.",
      "properties": {
        "label": {
          "type": "string",
          "description": "The trained model label."
        },
        "modelId": {
          "type": "string",
          "description": "The model ID."
        },
        "lastTrainedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last trained date time of the model."
        },
        "lastTrainingDurationInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The duration of the model's last training request in seconds."
        },
        "modelExpirationDate": {
          "type": "string",
          "format": "date",
          "description": "The model expiration date."
        },
        "modelTrainingConfigVersion": {
          "type": "string",
          "description": "The model training config version."
        },
        "hasSnapshot": {
          "type": "boolean",
          "description": "The flag to indicate if the trained model has a snapshot ready."
        }
      },
      "required": [
        "label",
        "modelId",
        "lastTrainedDateTime",
        "lastTrainingDurationInSeconds",
        "modelExpirationDate",
        "modelTrainingConfigVersion",
        "hasSnapshot"
      ]
    },
    "TextAnalysisAuthoringSingleLabelClassEvaluationSummary": {
      "type": "object",
      "description": "Represents the evaluation summary for a class in a single-label classification\nproject.",
      "properties": {
        "f1": {
          "type": "number",
          "format": "double",
          "description": "Represents the model precision"
        },
        "precision": {
          "type": "number",
          "format": "double",
          "description": "Represents the model recall"
        },
        "recall": {
          "type": "number",
          "format": "double",
          "description": "Represents the model F1 score"
        },
        "truePositiveCount": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the count of true positive"
        },
        "trueNegativeCount": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the count of true negative"
        },
        "falsePositiveCount": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the count of false positive"
        },
        "falseNegativeCount": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the count of false negative"
        }
      },
      "required": [
        "f1",
        "precision",
        "recall",
        "truePositiveCount",
        "trueNegativeCount",
        "falsePositiveCount",
        "falseNegativeCount"
      ]
    },
    "TextAnalysisAuthoringSingleLabelClassificationEvaluationSummary": {
      "type": "object",
      "description": "Represents the evaluation summary for a custom single-label classification\nproject.",
      "properties": {
        "confusionMatrix": {
          "$ref": "#/definitions/TextAnalysisAuthoringConfusionMatrix",
          "description": "Represents the confusion matrix between two classes (the two classes can be the\nsame). The matrix is between the class that was labelled and the class that was\npredicted."
        },
        "classes": {
          "type": "object",
          "description": "Represents the classes evaluation",
          "additionalProperties": {
            "$ref": "#/definitions/TextAnalysisAuthoringSingleLabelClassEvaluationSummary"
          }
        },
        "microF1": {
          "type": "number",
          "format": "float",
          "description": "Represents the micro F1. Expected value is a float between 0 and 1 inclusive."
        },
        "microPrecision": {
          "type": "number",
          "format": "float",
          "description": "Represents the micro precision. Expected value is a float between 0 and 1\ninclusive."
        },
        "microRecall": {
          "type": "number",
          "format": "float",
          "description": "Represents the micro recall. Expected value is a float between 0 and 1\ninclusive."
        },
        "macroF1": {
          "type": "number",
          "format": "float",
          "description": "Represents the macro F1. Expected value is a float between 0 and 1 inclusive."
        },
        "macroPrecision": {
          "type": "number",
          "format": "float",
          "description": "Represents the macro precision. Expected value is a float between 0 and 1\ninclusive."
        },
        "macroRecall": {
          "type": "number",
          "format": "float",
          "description": "Represents the macro recall. Expected value is a float between 0 and 1\ninclusive."
        }
      },
      "required": [
        "confusionMatrix",
        "classes",
        "microF1",
        "microPrecision",
        "microRecall",
        "macroF1",
        "macroPrecision",
        "macroRecall"
      ]
    },
    "TextAnalysisAuthoringSubTrainingJobState": {
      "type": "object",
      "description": "Represents the detailed state of a training sub-operation.",
      "properties": {
        "percentComplete": {
          "type": "integer",
          "format": "int32",
          "description": "Represents progress percentage."
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Represents the start date time."
        },
        "endDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Represents the end date time."
        },
        "status": {
          "$ref": "#/definitions/JobStatus",
          "description": "Represents the status of the sub-operation."
        }
      },
      "required": [
        "percentComplete",
        "status"
      ]
    },
    "TextAnalysisAuthoringSupportedLanguage": {
      "type": "object",
      "description": "Represents a supported language.",
      "properties": {
        "languageName": {
          "type": "string",
          "description": "The language name."
        },
        "languageCode": {
          "type": "string",
          "description": "The language code. This is BCP-47 representation of a language. For example,\n\"en\" for English, \"en-gb\" for English (UK), \"es\" for Spanish etc."
        }
      },
      "required": [
        "languageName",
        "languageCode"
      ]
    },
    "TextAnalysisAuthoringSwapDeploymentsJobState": {
      "type": "object",
      "description": "Represents the state of a deployment job.",
      "properties": {
        "jobId": {
          "type": "string",
          "description": "The job ID."
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date time of the job."
        },
        "lastUpdatedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last date time the job was updated."
        },
        "expirationDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration date time of the job."
        },
        "status": {
          "$ref": "#/definitions/JobStatus",
          "description": "The job status."
        },
        "warnings": {
          "type": "array",
          "description": "The warnings that were encountered while executing the job.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringWarning"
          },
          "x-ms-identifiers": []
        },
        "errors": {
          "type": "array",
          "description": "The errors encountered while executing the job.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "jobId",
        "createdDateTime",
        "lastUpdatedDateTime",
        "status"
      ]
    },
    "TextAnalysisAuthoringTrainingConfigVersion": {
      "type": "object",
      "description": "Represents a training config version.",
      "properties": {
        "trainingConfigVersion": {
          "type": "string",
          "description": "Represents the version of the config."
        },
        "modelExpirationDate": {
          "type": "string",
          "format": "date",
          "description": "Represents the training config version expiration date."
        }
      },
      "required": [
        "trainingConfigVersion",
        "modelExpirationDate"
      ]
    },
    "TextAnalysisAuthoringTrainingJobResult": {
      "type": "object",
      "description": "Represents the output of a training job.",
      "properties": {
        "modelLabel": {
          "type": "string",
          "description": "Represents trained model label."
        },
        "trainingConfigVersion": {
          "type": "string",
          "description": "Represents training config version."
        },
        "trainingStatus": {
          "$ref": "#/definitions/TextAnalysisAuthoringSubTrainingJobState",
          "description": "Represents model train status."
        },
        "evaluationStatus": {
          "$ref": "#/definitions/TextAnalysisAuthoringSubTrainingJobState",
          "description": "Represents model evaluation status."
        },
        "estimatedEndDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Represents the estimate end date time for training and evaluation."
        }
      },
      "required": [
        "modelLabel",
        "trainingConfigVersion",
        "trainingStatus"
      ]
    },
    "TextAnalysisAuthoringTrainingJobState": {
      "type": "object",
      "description": "Represents the state of a training job.",
      "properties": {
        "jobId": {
          "type": "string",
          "description": "The job ID."
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date time of the job."
        },
        "lastUpdatedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last date time the job was updated."
        },
        "expirationDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration date time of the job."
        },
        "status": {
          "$ref": "#/definitions/JobStatus",
          "description": "The job status."
        },
        "warnings": {
          "type": "array",
          "description": "The warnings that were encountered while executing the job.",
          "items": {
            "$ref": "#/definitions/TextAnalysisAuthoringWarning"
          },
          "x-ms-identifiers": []
        },
        "errors": {
          "type": "array",
          "description": "The errors encountered while executing the job.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "x-ms-identifiers": []
        },
        "result": {
          "$ref": "#/definitions/TextAnalysisAuthoringTrainingJobResult",
          "description": "Represents training tasks detailed result."
        }
      },
      "required": [
        "jobId",
        "createdDateTime",
        "lastUpdatedDateTime",
        "status",
        "result"
      ]
    },
    "TextAnalysisAuthoringWarning": {
      "type": "object",
      "description": "Represents a warning that was encountered while executing the request.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The warning code."
        },
        "message": {
          "type": "string",
          "description": "The warning message."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "TrainingJobOptions": {
      "type": "object",
      "description": "Represents the options for starting a new training job.",
      "properties": {
        "modelLabel": {
          "type": "string",
          "description": "Represents the output model label."
        },
        "trainingConfigVersion": {
          "type": "string",
          "description": "Represents training config version."
        },
        "evaluationOptions": {
          "$ref": "#/definitions/EvaluationOptions",
          "description": "Represents the evaluation options. By default, the evaluation kind is\npercentage, with training split percentage as 80, and testing split percentage\nas 20."
        }
      },
      "required": [
        "modelLabel",
        "trainingConfigVersion"
      ]
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    },
    "Azure.Core.MaxPageSizeQueryParameter": {
      "name": "maxpagesize",
      "in": "query",
      "description": "The maximum number of result items per page.",
      "required": false,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "Azure.Core.SkipQueryParameter": {
      "name": "skip",
      "in": "query",
      "description": "The number of result items to skip.",
      "required": false,
      "type": "integer",
      "format": "int32",
      "default": 0,
      "x-ms-parameter-location": "method"
    },
    "Azure.Core.TopQueryParameter": {
      "name": "top",
      "in": "query",
      "description": "The number of result items to return.",
      "required": false,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "ProjectKindQueryParameter": {
      "name": "projectKind",
      "in": "query",
      "description": "The project kind, default value is CustomSingleLabelClassification.",
      "required": false,
      "type": "string",
      "enum": [
        "CustomSingleLabelClassification",
        "CustomMultiLabelClassification",
        "CustomEntityRecognition"
      ],
      "x-ms-enum": {
        "name": "ProjectKind",
        "modelAsString": true,
        "values": [
          {
            "name": "CustomSingleLabelClassification",
            "value": "CustomSingleLabelClassification",
            "description": "For building a classification model to classify text using your own data. Each\nfile will have only one label. For example, file 1 is classified as A and file\n2 is classified as B."
          },
          {
            "name": "CustomMultiLabelClassification",
            "value": "CustomMultiLabelClassification",
            "description": "For building a classification model to classify text using your own data. Each\nfile can have one or many labels. For example, file 1 is classified as A, B,\nand C and file 2 is classified as B and C."
          },
          {
            "name": "CustomEntityRecognition",
            "value": "CustomEntityRecognition",
            "description": "For building an extraction model to identify your domain categories using your\nown data."
          }
        ]
      },
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "ProjectKind"
    },
    "StringIndexTypeQueryParameter": {
      "name": "stringIndexType",
      "in": "query",
      "description": "Specifies the method used to interpret string offsets. For additional\ninformation see https://aka.ms/text-analytics-offsets.",
      "required": true,
      "type": "string",
      "enum": [
        "Utf16CodeUnit"
      ],
      "x-ms-enum": {
        "name": "StringIndexType",
        "modelAsString": true,
        "values": [
          {
            "name": "Utf16CodeUnit",
            "value": "Utf16CodeUnit",
            "description": "The offset and length values will correspond to UTF-16 code units. Use this\noption if your application is written in a language that support Unicode, for\nexample Java, JavaScript."
          }
        ]
      },
      "x-ms-parameter-location": "method"
    }
  }
}
