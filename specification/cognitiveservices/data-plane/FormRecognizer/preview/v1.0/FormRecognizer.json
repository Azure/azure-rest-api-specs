{
    "swagger": "2.0",
    "info": {
      "version": "v1.0-preview",
      "title": "Cognitive Service Form Recognizer API V1 (Preview)",
      "description": "Extracts information from forms and images into structured data based on a model created by a set of representative training forms."
    },
    "securityDefinitions": {
      "apim_key": {
          "type": "apiKey",
          "name": "Ocp-Apim-Subscription-Key",
          "in": "header"
      }
    },
    "security": [
      {
          "apim_key": []
      }
    ],
    "paths": {
        "/train": {
            "post": {
                "summary": "Train Model",
                "description": "The train request must include a 'Source' parameter that is\r\n            an Azure Storage blob container Uri that is that is accessible externally\r\n            (preferably a Shared Access Signature Uri) or valid path to data in a locally mounted drive.\r\n            When local paths are specified, they must follow the Linux/Unix path format and\r\n            absolute path convention rooted to the input mount configuration setting value.\r\n            Models are trained using documents that are of the following\r\n            content type - 'application/pdf', 'image/jpeg' and 'image/png'.",
                "operationId": "FormRecognizer_CustomTrain",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "trainRequest",
                        "in": "body",
                        "description": "Request object for training.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TrainRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TrainResponse"
                        }
                    },
                    "default": {
                        "description": "Response entity accompanying non-successful responses containing additional details about the error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                  "Train new model example": {
                    "$ref": "./examples/Train.json"
                  }
                },
            }
        },
        "/model/{id}/keys": {
            "get": {
                "summary": "Get Keys",
                "description": "<para>Use the API to retrieve the keys that were\r\n            extracted by the specified model.</para>",
                "operationId": "FormRecognizer_CustomGetKeysByModelId",
                "consumes": [],
                "produces": [
                  "application/json",
                  "text/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Model identifier.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Response entity accompanying non-successful responses containing additional details about the error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                  "Get Keys from Model": {
                    "$ref": "./examples/GetKeys.json"
                  }
                }
            }
        },
        "/model/{id}/": {
            "get": {
                "summary": "Get Model",
                "description": "Get information about a model.",
                "operationId": "FormRecognizer_CustomGetModelById",
                "consumes": [],
                "produces": [
                  "application/json",
                  "text/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Model identifier.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Response entity accompanying non-successful responses containing additional details about the error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                  "Get Model from id": {
                    "$ref": "./examples/GetModelById.json"
                  }
                }
            },
            "delete": {
                "summary": "Delete Model",
                "description": "Delete model artifacts.",
                "operationId": "FormRecognizer_CustomDeleteModelById",
                "consumes": [],
                "produces": [
                  "application/json",
                  "text/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The identifier of the model to delete.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully removed model artifacts."
                    },
                    "default": {
                        "description": "Response entity accompanying non-successful responses containing additional details about the error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                  "Get Model from id": {
                    "$ref": "./examples/DeleteModelById.json"
                  }
                }
            }
        },
        "/model/{id}/analyze": {
            "post": {
                "summary": "Analyze Form",
                "description": "<para>The document to analyze must be of a supported\r\n            content type - content type - 'application/pdf', 'image/jpeg' and 'image/png'.</para>",
                "operationId": "FormRecognizer_CustomAnalyze",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Identifier of the model to analyze the document with.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "keys",
                        "in": "query",
                        "description": "An optional list of known keys to extract the values for.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "uniqueItems": false
                    },
                    {
                        "name": "form",
                        "in": "formData",
                        "description": "Upload content of type 'application/pdf', 'image/jpeg' or 'image/png' for processing.",
                        "required": false,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AnalyzeResponse"
                        }
                    },
                    "default": {
                        "description": "Response entity accompanying non-successful responses containing additional details about the error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                  "Get Model from id": {
                    "$ref": "./examples/Analyze.json"
                  }
                }
            }
        }
    },
    "definitions": {
        "TrainRequest": {
            "description": "Contract to initiate a train request.",
            "required": [
                "source"
            ],
            "type": "object",
            "properties": {
                "source": {
                    "description": "Get or set source path.",
                    "maxLength": 2048,
                    "minLength": 0,
                    "type": "string"
                }
            }
        },
        "TrainResponse": {
            "description": "Response of the Train API call.",
            "type": "object",
            "properties": {
                "modelId": {
                    "description": "Identifier of the model.",
                    "type": "string"
                },
                "trainingDocuments": {
                    "description": "List of documents used to train the model and the\r\ntrain operation error reported by each.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FormDocumentReport"
                    }
                },
                "errors": {
                    "description": "Errors returned during the training operation.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FormOperationError"
                    }
                }
            }
        },
        "FormDocumentReport": {
            "type": "object",
            "properties": {
                "documentName": {
                    "description": "Reference to the data that the report is for.",
                    "type": "string"
                },
                "pages": {
                    "format": "int32",
                    "description": "Total number of pages trained on.",
                    "type": "integer"
                },
                "errors": {
                    "description": "List of errors per page.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "description": "Status of the training operation.",
                    "enum": [
                        "success",
                        "partialSuccess",
                        "failure"
                    ],
                    "type": "string"
                }
            }
        },
        "FormOperationError": {
            "description": "Error reported during an operation.",
            "type": "object",
            "properties": {
                "errorMessage": {
                    "description": "Message reported during the train operation.",
                    "type": "string"
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/ErrorInformation"
                }
            }
        },
        "ErrorInformation": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "innerError": {
                    "$ref": "#/definitions/InnerError"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "InnerError": {
            "type": "object",
            "properties": {
                "requestId": {
                    "type": "string"
                }
            }
        },
        "AnalyzeResponse": {
            "description": "Analyze API response.",
            "type": "object",
            "properties": {
                "status": {
                    "description": "Status of the analyze operation.",
                    "enum": [
                        "success",
                        "partialSuccess",
                        "failure"
                    ],
                    "type": "string"
                },
                "pages": {
                    "description": "Page level information extracted in the analyzed\r\ndocument.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Page"
                    }
                },
                "errors": {
                    "description": "List of errors reported during the analyze\r\noperation.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FormOperationError"
                    }
                }
            }
        },
        "Page": {
            "description": "Extraction information of a single page in a\r\nwith a document.",
            "type": "object",
            "properties": {
                "number": {
                    "format": "int32",
                    "description": "Page number.",
                    "type": "integer"
                },
                "height": {
                    "format": "int32",
                    "description": "Height of the page (in pixels).",
                    "type": "integer"
                },
                "width": {
                    "format": "int32",
                    "description": "Width of the page (in pixels).",
                    "type": "integer"
                },
                "clusterId": {
                    "format": "int32",
                    "description": "Cluster identifier.",
                    "type": "integer"
                },
                "keyValuePairs": {
                    "description": "List of Key-Value pairs extracted from the page.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/KeyValuePair"
                    }
                },
                "tables": {
                    "description": "List of Tables and their information extracted from the page.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Table"
                    }
                }
            }
        },
        "KeyValuePair": {
            "description": "Representation of a key-value pair as a list\r\nof key and value tokens.",
            "type": "object",
            "properties": {
                "key": {
                    "description": "List of tokens for the extracted key in a key-value pair.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Token"
                    }
                },
                "value": {
                    "description": "List of tokens for the extracted value in a key-value pair.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Token"
                    }
                }
            }
        },
        "Table": {
            "description": "Extraction information about a table\r\ncontained in a page.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Table identifier.",
                "type": "string"
              },
                "columns": {
                    "description": "List of columns contained in the table.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TableColumn"
                    }
                }
            }
        },
        "Token": {
            "description": "Canonical representation of single extracted text.",
            "type": "object",
            "properties": {
                "text": {
                    "description": "String value of the extracted text.",
                    "type": "string"
                },
                "boundingBox": {
                    "description": "Bounding box of the extracted text. Represents the\r\nlocation of the extracted text as a pair of\r\ncartesian co-ordinates. The co-ordinate pairs are arranged by\r\ntop-left, top-right, bottom-right and bottom-left endpoints box\r\nwith origin reference from the bottom-left of the page.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "format": "double",
                        "type": "number"
                    }
                },
                "confidence": {
                    "format": "double",
                    "description": "A measure of accuracy of the extracted text.",
                    "type": "number"
                }
            }
        },
        "TableColumn": {
            "description": "Extraction information of a column in\r\na table.",
            "type": "object",
            "properties": {
                "header": {
                    "description": "List of extracted tokens for the column header.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Token"
                    }
                },
                "entries": {
                    "description": "Extracted text for each cell of a column. Each cell\r\nin the column can have a list of one or more tokens.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/Token"
                        }
                    }
                }
            }
        },
        "ContainerStatus": {
            "type": "object",
            "properties": {
                "service": {
                    "type": "string"
                },
                "apiStatus": {
                    "type": "string"
                },
                "apiStatusMessage": {
                    "type": "string"
                }
            }
        }
    }
}