{
    "swagger": "2.0",
    "info": {
        "title": "Custom Voice API v2023-04-01-preview",
        "description": "Custom Voice API v2023-04-01-preview.",
        "contact": {
            "name": "Cognitive Services - Speech Services",
            "url": "https://docs.microsoft.com/azure/cognitive-services/speech-service/support"
        },
        "version": "v2023-04-01-preview"
    },
    "paths": {
        "/api/texttospeech/projects": {
            "post": {
                "tags": [
                    "Projects controller:"
                ],
                "summary": "Create Project",
                "description": "Creates a new project.",
                "operationId": "Projects_Create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "project",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        },
                        "headers": {
                            "Location": {
                                "description": "The location of the created resource.",
                                "type": "string",
                                "format": "uri"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "x-ms-error-response": true
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "Create a project": {
                        "$ref": "./examples/create_project.json"
                    }
                }
            },
            "get": {
                "tags": [
                    "Projects controller:"
                ],
                "summary": "Get Projects",
                "description": "Gets a list of projects for the authenticated subscription.",
                "operationId": "Projects_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "orderby",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PaginatedResources`1_Project"
                        }
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-pageable": {
                    "itemName": "values",
                    "nextLinkName": "@nextLink"
                },
                "x-ms-examples": {
                    "Get all projects": {
                        "$ref": "./examples/get_projects.json"
                    }
                }
            }
        },
        "/api/texttospeech/projects/{id}": {
            "get": {
                "tags": [
                    "Projects controller:"
                ],
                "summary": "Get Project",
                "description": "Gets the project identified by the given ID.",
                "operationId": "Projects_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "x-ms-error-response": true
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "Get a project": {
                        "$ref": "./examples/get_project.json"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Projects controller:"
                ],
                "summary": "Delete Project",
                "description": "Deletes the project identified by the given ID.",
                "operationId": "Projects_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "forceDelete",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "x-ms-error-response": true
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "Delete a project": {
                        "$ref": "./examples/delete_project.json"
                    }
                }
            }
        },
        "/api/texttospeech/projects/{projectId}/consents": {
            "get": {
                "tags": [
                    "Projects controller:"
                ],
                "summary": "Get Consents for Project",
                "description": "Gets the list of consents for specified project.",
                "operationId": "Projects_ListConsents",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "projectId",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "orderby",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PaginatedResources`1_Consent"
                        }
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-pageable": {
                    "itemName": "values",
                    "nextLinkName": "@nextLink"
                },
                "x-ms-examples": {
                    "Get all consents in a project": {
                        "$ref": "./examples/get_project_consents.json"
                    }
                }
            }
        },
        "/api/texttospeech/projects/{projectId}/endpoints": {
            "get": {
                "tags": [
                    "Projects controller:"
                ],
                "summary": "Get Endpoints for Project",
                "description": "Gets the list of endpoints for specified project.",
                "operationId": "Projects_ListEndpoints",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "projectId",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "orderby",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PaginatedResources`1_Endpoint"
                        }
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-pageable": {
                    "itemName": "values",
                    "nextLinkName": "@nextLink"
                },
                "x-ms-examples": {
                    "Get all endpoints in a project": {
                        "$ref": "./examples/get_project_endpoints.json"
                    }
                }
            }
        },
        "/api/texttospeech/projects/{projectId}/models": {
            "get": {
                "tags": [
                    "Projects controller:"
                ],
                "summary": "Get Models for Project",
                "description": "Gets the list of models for specified project.",
                "operationId": "Projects_ListModels",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "projectId",
                        "description": "The identifier of the project.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": "The number of models to skip.",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": "The number of models to return.",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "orderby",
                        "description": "A sorting expression for determining the order in which the speech models will be returned.\r\n            <ul><li><b>Supported properties:</b> name, created. </li><li><b>Example:</b>```orderby=created, name desc```</li></ul>",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "A filtering expression for selecting a subset of the available models.\r\n            <ul><li><b>Supported properties:</b> name, created\r\n              </li><li><b>Operators:</b>\r\n                - eq, ne are supported for all properties.\r\n                - gt, ge, lt, le are supported for created.\r\n              </li><li><b>Example:</b>```filter=name eq modelName```</li></ul>",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PaginatedResources`1_ProModel"
                        }
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-pageable": {
                    "itemName": "values",
                    "nextLinkName": "@nextLink"
                },
                "x-ms-examples": {
                    "Get all models in a project": {
                        "$ref": "./examples/get_project_models.json"
                    }
                }
            }
        },
        "/api/texttospeech/projects/{projectId}/trainingsets": {
            "get": {
                "tags": [
                    "Projects controller:"
                ],
                "summary": "Get Training Sets for Project",
                "description": "Gets the list of training sets for specified project.",
                "operationId": "Projects_ListTrainingSets",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "projectId",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "orderby",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PaginatedResources`1_Trainingset"
                        }
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-pageable": {
                    "itemName": "values",
                    "nextLinkName": "@nextLink"
                },
                "x-ms-examples": {
                    "Get all training sets in a project": {
                        "$ref": "./examples/get_project_trainingsets.json"
                    }
                }
            }
        },
        "/api/texttospeech/projects/{projectId}/zeroshots": {
            "get": {
                "tags": [
                    "Projects controller:"
                ],
                "summary": "Get Zero Shot Models for Project",
                "description": "Gets the list of zero shot models for specified project.",
                "operationId": "Projects_ListZeroShotModels",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "projectId",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "orderby",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PaginatedResources`1_ZeroShotPrompt"
                        }
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-pageable": {
                    "itemName": "values",
                    "nextLinkName": "@nextLink"
                },
                "x-ms-examples": {
                    "Get all zero shot prompts in a project": {
                        "$ref": "./examples/get_project_zeroshots.json"
                    }
                }
            }
        },
        "/api/texttospeech/consents": {
            "post": {
                "tags": [
                    "Consents controller:"
                ],
                "summary": "Create Consent",
                "description": "Uploads and creates a new consent.",
                "operationId": "Consents_Create",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "project",
                        "description": "The project url.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "displayName",
                        "description": "The display name of this consent.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "description",
                        "description": "Optional description of this consent.",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "voiceTalentName",
                        "description": "The name of voice talent.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "companyName",
                        "description": "The name of company.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "locale",
                        "description": "The locale of this consent.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "properties",
                        "description": "properties.",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "audiodata",
                        "description": "An audio file containing the audio data.",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Consent"
                        },
                        "headers": {
                            "Location": {
                                "description": "The location of the created resource.",
                                "type": "string",
                                "format": "uri"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "x-ms-error-response": true
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "Create a consent": {
                        "$ref": "./examples/create_consent.json"
                    }
                }
            },
            "get": {
                "tags": [
                    "Consents controller:"
                ],
                "summary": "Get Consents",
                "description": "Gets a list of consents for the authenticated subscription.",
                "operationId": "Consents_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "orderby",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PaginatedResources`1_Consent"
                        }
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-pageable": {
                    "itemName": "values",
                    "nextLinkName": "@nextLink"
                },
                "x-ms-examples": {
                    "Get all consents": {
                        "$ref": "./examples/get_consents.json"
                    }
                }
            }
        },
        "/api/texttospeech/consents/{id}": {
            "get": {
                "tags": [
                    "Consents controller:"
                ],
                "summary": "Get Consent",
                "description": "Gets the consent identified by the given ID.",
                "operationId": "Consents_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Consent"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/EntityError"
                        },
                        "x-ms-error-response": true
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "Get a consent": {
                        "$ref": "./examples/get_consent.json"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Consents controller:"
                ],
                "summary": "Delete Consent",
                "description": "Deletes the consent identified by the given ID.",
                "operationId": "Consents_Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "Delete a consent": {
                        "$ref": "./examples/delete_consent.json"
                    }
                }
            }
        },
        "/api/texttospeech/trainingsets": {
            "post": {
                "tags": [
                    "Trainingsets:"
                ],
                "summary": "Create Training Set",
                "description": "Creates a new training set.",
                "operationId": "TrainingSets_Create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "trainingset",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Trainingset"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Trainingset"
                        },
                        "headers": {
                            "Location": {
                                "description": "The location of the created resource.",
                                "type": "string",
                                "format": "uri"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "Create a training set": {
                        "$ref": "./examples/create_trainingset.json"
                    }
                }
            },
            "get": {
                "tags": [
                    "Trainingsets:"
                ],
                "summary": "Get Training Sets",
                "description": "Gets a list of training sets for the authenticated subscription.",
                "operationId": "TrainingSets_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "orderby",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PaginatedResources`1_Trainingset"
                        }
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-pageable": {
                    "itemName": "values",
                    "nextLinkName": "@nextLink"
                },
                "x-ms-examples": {
                    "Get all training sets": {
                        "$ref": "./examples/get_trainingsets.json"
                    }
                }
            }
        },
        "/api/texttospeech/trainingsets/{id}": {
            "get": {
                "tags": [
                    "Trainingsets:"
                ],
                "summary": "Get Training Set",
                "description": "Gets the training set identified by the given ID.",
                "operationId": "TrainingSets_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Trainingset"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "x-ms-error-response": true
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "Get a training set": {
                        "$ref": "./examples/get_trainingset.json"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Trainingsets:"
                ],
                "summary": "Delete Training Set",
                "description": "Deletes the project identified by the given ID.",
                "operationId": "TrainingSets_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "x-ms-error-response": true
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "Delete a training set": {
                        "$ref": "./examples/delete_trainingset.json"
                    }
                }
            }
        },
        "/api/texttospeech/trainingsets/{id}/audio/blocks": {
            "put": {
                "tags": [
                    "Trainingsets:"
                ],
                "summary": "Upload Audio Block",
                "description": "Uploads a block of data for the trainingset. The maximum size of the block is 8MiB.",
                "operationId": "TrainingSets_UploadAudioBlock",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The identifier of the trainingset.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "blockid",
                        "description": "A valid Base64 string value that identifies the block. Prior to encoding, the string must be less than or equal to 64 bytes in size. For a given blob, the length of the value specified for the blockid parameter must be the same size for each block. Note that the Base64 string must be URL-encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {}
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {
                            "Location": {
                                "description": "The location of the created resource.",
                                "type": "string",
                                "format": "uri"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "x-ms-error-response": true
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "x-ms-error-response": true
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "Upload an audio block to a training set": {
                        "$ref": "./examples/upload_trainingset_audio_block.json"
                    }
                }
            },
            "get": {
                "tags": [
                    "Trainingsets:"
                ],
                "summary": "Get Audio Blocks",
                "description": "Gets the list of audio blocks for specified training set.",
                "operationId": "TrainingSets_ListAudioBlocks",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UploadedBlocks"
                        },
                        "headers": {
                            "Retry-After": {
                                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                                "type": "integer"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "x-ms-error-response": true
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "get uploaded audio blocks to a training set": {
                        "$ref": "./examples/get_trainingset_audio_block.json"
                    }
                }
            }
        },
        "/api/texttospeech/trainingsets/{id}/audio/blocks:commit": {
            "post": {
                "tags": [
                    "Trainingsets:"
                ],
                "summary": "Commit Audio Blocks",
                "description": "Commits block list to complete the audio upload of the dataset.",
                "operationId": "TrainingSets_CommitAudioBlocks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The identifier of the dataset.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "blockList",
                        "description": "The list of blocks that compile the data upload.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CommitBlocksEntry"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "x-ms-error-response": true
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "Commit uploaded audio blocks to a training set": {
                        "$ref": "./examples/commit_trainingset_audio_blocks.json"
                    }
                }
            }
        },
        "/api/texttospeech/trainingsets/{id}/script/blocks": {
            "put": {
                "tags": [
                    "Trainingsets:"
                ],
                "summary": "Upload Script Block",
                "description": "Uploads a block of data for the trainingset. The maximum size of the block is 8MiB.",
                "operationId": "TrainingSets_UploadScriptBlock",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The identifier of the trainingset.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "blockid",
                        "description": "A valid Base64 string value that identifies the block. Prior to encoding, the string must be less than or equal to 64 bytes in size. For a given blob, the length of the value specified for the blockid parameter must be the same size for each block. Note that the Base64 string must be URL-encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {}
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {
                            "Location": {
                                "description": "The location of the created resource.",
                                "type": "string",
                                "format": "uri"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "x-ms-error-response": true
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "x-ms-error-response": true
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "Upload a script block to a training set": {
                        "$ref": "./examples/upload_trainingset_script_block.json"
                    }
                }
            },
            "get": {
                "tags": [
                    "Trainingsets:"
                ],
                "summary": "Get Script Blocks",
                "description": "Gets the list of script blocks for specified training set.",
                "operationId": "TrainingSets_ListScriptBlocks",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UploadedBlocks"
                        },
                        "headers": {
                            "Retry-After": {
                                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                                "type": "integer"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "x-ms-error-response": true
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "get uploaded script blocks to a training set": {
                        "$ref": "./examples/get_trainingset_script_block.json"
                    }
                }
            }
        },
        "/api/texttospeech/trainingsets/{id}/script/blocks:commit": {
            "post": {
                "tags": [
                    "Trainingsets:"
                ],
                "summary": "Commit Script Blocks",
                "description": "Commits block list to complete the script upload of the dataset.",
                "operationId": "TrainingSets_CommitScriptBlocks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The identifier of the trainingset.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "blockList",
                        "description": "The list of blocks that compile the data upload.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CommitBlocksEntry"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "x-ms-error-response": true
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "Commit uploaded script blocks to a training set": {
                        "$ref": "./examples/commit_trainingset_script_blocks.json"
                    }
                }
            }
        },
        "/api/texttospeech/trainingsets/{id}:open": {
            "post": {
                "tags": [
                    "Trainingsets:"
                ],
                "summary": "Open Training Set",
                "description": "Opens the tranining set to upload data blocks.",
                "operationId": "TrainingSets_Open",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "formData",
                        "name": "displayName",
                        "description": "The name of this upload.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "description",
                        "description": "Optional description of this upload.",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "kind",
                        "description": "The kind of this upload.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "x-ms-error-response": true
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "x-ms-error-response": true
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "Open a training set to upload data blocks.": {
                        "$ref": "./examples/open_trainingset.json"
                    }
                }
            }
        },
        "/api/texttospeech/trainingsets/{id}:upload": {
            "post": {
                "tags": [
                    "Trainingsets:"
                ],
                "summary": "Upload Data for Training Set",
                "description": "Uploads data to the specified training set.",
                "operationId": "TrainingSets_UploadData",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "formData",
                        "name": "displayName",
                        "description": "The name of this dataset.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "description",
                        "description": "Optional description of this dataset.",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "kind",
                        "description": "The kind of this dataset.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "audio",
                        "description": "A zip file containing the audio data.",
                        "type": "file"
                    },
                    {
                        "in": "formData",
                        "name": "script",
                        "description": "A text/zip file containing the transcriptions for the audio data.",
                        "type": "file"
                    },
                    {
                        "in": "formData",
                        "name": "audioUrl",
                        "description": "The public access url of audio data.",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "scriptUrl",
                        "description": "The public access url of script data.",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "x-ms-error-response": true
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "Upload data to a training set": {
                        "$ref": "./examples/upload_trainingset.json"
                    }
                }
            }
        },
        "/api/texttospeech/models": {
            "post": {
                "tags": [
                    "Models controller:"
                ],
                "summary": "Create Model",
                "description": "Creates a new voice model.",
                "operationId": "Models_Create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "modelDefinition",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Model"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Model"
                        },
                        "headers": {
                            "Location": {
                                "description": "The location of the created resource.",
                                "type": "string",
                                "format": "uri"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "x-ms-error-response": true
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "Create a model": {
                        "$ref": "./examples/create_model.json"
                    },
                    "Create a multi style model": {
                        "$ref": "./examples/create_multi_style_model.json"
                    }
                }
            },
            "get": {
                "tags": [
                    "Models controller:"
                ],
                "summary": "Get Models",
                "description": "Gets the list of models for specified subscription.",
                "operationId": "Models_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "skip",
                        "description": "The number of models to skip.",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": "The number of models to return.",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "orderby",
                        "description": "A sorting expression for determining the order in which the speech models will be returned.\r\n            <ul><li><b>Supported properties:</b> name, created. </li><li><b>Example:</b>```orderby=created, name desc```</li></ul>",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "A filtering expression for selecting a subset of the available models.\r\n            <ul><li><b>Supported properties:</b> name, created\r\n              </li><li><b>Operators:</b>\r\n                - eq, ne are supported for all properties.\r\n                - gt, ge, lt, le are supported for created.\r\n              </li><li><b>Example:</b>```filter=name eq modelName```</li></ul>",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PaginatedResources`1_ProModel"
                        }
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-pageable": {
                    "itemName": "values",
                    "nextLinkName": "@nextLink"
                },
                "x-ms-examples": {
                    "Get all models": {
                        "$ref": "./examples/get_models.json"
                    }
                }
            }
        },
        "/api/texttospeech/models/{id}": {
            "get": {
                "tags": [
                    "Models controller:"
                ],
                "summary": "Get Model",
                "description": "Gets the model identified by the given ID.",
                "operationId": "Models_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Model"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "x-ms-error-response": true
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "Get a model": {
                        "$ref": "./examples/get_model.json"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Models controller:"
                ],
                "summary": "Delete Model",
                "description": "Deletes the model identified by the given ID.",
                "operationId": "Models_Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "Delete a model": {
                        "$ref": "./examples/delete_model.json"
                    }
                }
            }
        },
        "/api/texttospeech/models/recipes": {
            "get": {
                "tags": [
                    "Models controller:"
                ],
                "summary": "Get Recipes",
                "description": "Get a list of supported recipes.",
                "operationId": "Models_ListRecipes",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Recipe"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "Get all recipes": {
                        "$ref": "./examples/get_recipes.json"
                    }
                }
            }
        },
        "/api/texttospeech/endpoints": {
            "get": {
                "tags": [
                    "Endpoints controller:"
                ],
                "summary": "Get Endpoints",
                "description": "Gets a list of endpoints for the authenticated subscription.",
                "operationId": "Endpoints_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "orderby",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PaginatedResources`1_Endpoint"
                        }
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-pageable": {
                    "itemName": "values",
                    "nextLinkName": "@nextLink"
                },
                "x-ms-examples": {
                    "Get all endpoints": {
                        "$ref": "./examples/get_endpoints.json"
                    }
                }
            },
            "post": {
                "tags": [
                    "Endpoints controller:"
                ],
                "summary": "Create Endpoint",
                "description": "Creates a new endpoint.",
                "operationId": "Endpoints_Create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "endpoint",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Endpoint"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Endpoint"
                        },
                        "headers": {
                            "Location": {
                                "description": "The location of the created resource.",
                                "type": "string",
                                "format": "uri"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "Create an endpoint": {
                        "$ref": "./examples/create_endpoint.json"
                    }
                }
            }
        },
        "/api/texttospeech/endpoints/{id}": {
            "get": {
                "tags": [
                    "Endpoints controller:"
                ],
                "summary": "Get Endpoint",
                "description": "Gets the endpoint identified by the given ID.",
                "operationId": "Endpoints_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Endpoint"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "x-ms-error-response": true
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "Get an endpoint": {
                        "$ref": "./examples/get_endpoint.json"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Endpoints controller:"
                ],
                "summary": "Delete Endpoint",
                "description": "Deletes the endpoint identified by the given ID.",
                "operationId": "Endpoints_Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "Delete an endpoint": {
                        "$ref": "./examples/delete_endpoint.json"
                    }
                }
            }
        },
        "/api/texttospeech/endpoints/{id}:resume": {
            "post": {
                "tags": [
                    "Endpoints controller:"
                ],
                "summary": "Resume Endpoint",
                "description": "Resumes the endpoint identified by the given ID.",
                "operationId": "Endpoints_Resume",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Endpoint"
                        },
                        "headers": {
                            "Retry-After": {
                                "description": "The minimum number of seconds to wait before accessing the resource created in this operation.",
                                "type": "integer"
                            },
                            "Location": {
                                "description": "The location of the created resource.",
                                "type": "string",
                                "format": "uri"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                },
                "x-ms-examples": {
                    "Resume an endpoint": {
                        "$ref": "./examples/resume_endpoint.json"
                    }
                }
            }
        },
        "/api/texttospeech/endpoints/{id}:suspend": {
            "post": {
                "tags": [
                    "Endpoints controller:"
                ],
                "summary": "Suspend Endpoint",
                "description": "Suspends the endpoint identified by the given ID.",
                "operationId": "Endpoints_Suspend",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Endpoint"
                        },
                        "headers": {
                            "Retry-After": {
                                "description": "The minimum number of seconds to wait before accessing the resource created in this operation.",
                                "type": "integer"
                            },
                            "Location": {
                                "description": "The location of the created resource.",
                                "type": "string",
                                "format": "uri"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                },
                "x-ms-examples": {
                    "Suspend an endpoint": {
                        "$ref": "./examples/suspend_endpoint.json"
                    }
                }
            }
        },
        "/api/texttospeech/zeroshots": {
            "post": {
                "tags": [
                    "Zero shots controller:"
                ],
                "summary": "Create Zero Shot Model",
                "description": "Creates a new zero shot model.",
                "operationId": "ZeroShotModels_Create",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "displayName",
                        "description": "The display name of this model.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "description",
                        "description": "Optional description of this model.",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "project",
                        "description": "The project url.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "consent",
                        "description": "The consent url.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "properties",
                        "description": "properties.",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "audioData",
                        "description": "Audio files.",
                        "type": "file"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ZeroShotPrompt"
                        },
                        "headers": {
                            "Location": {
                                "description": "The location of the created resource.",
                                "type": "string",
                                "format": "uri"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "Create a zero shot prompt": {
                        "$ref": "./examples/create_zeroshot.json"
                    }
                }
            },
            "get": {
                "tags": [
                    "Zero shots controller:"
                ],
                "summary": "Get Zero Shot Models",
                "description": "Gets a list of zero shot models for the authenticated subscription.",
                "operationId": "ZeroShotModels_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "Skip",
                        "description": "Gets or sets the number of resources to skip.",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "Top",
                        "description": "Gets or sets the number of resources to return.",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "OrderBy",
                        "description": "Gets or sets the sorting expression for determining the order in which the resources will be returned.\r\n<ul><li><b>Supported properties:</b> displayName, createdDateTime. </li><li><b>Example:</b>```orderby=createdDateTime, displayName desc```</li></ul>",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Filter",
                        "description": "Gets or sets the filtering expression for selecting a subset of the available resources.\r\n<ul><li><b>Supported properties:</b> displayName, createdDateTime\r\n  </li><li><b>Operators:</b>\r\n    - eq, ne are supported for all properties.\r\n    - gt, ge, lt, le are supported for created.\r\n  </li><li><b>Example:</b>```filter=displayName eq resourceName```</li></ul>",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PaginatedResources`1_ZeroShotPrompt"
                        }
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-pageable": {
                    "itemName": "values",
                    "nextLinkName": "@nextLink"
                },
                "x-ms-examples": {
                    "Get all zero shot prompts": {
                        "$ref": "./examples/get_zeroshots.json"
                    }
                }
            }
        },
        "/api/texttospeech/zeroshots/{id}": {
            "get": {
                "tags": [
                    "Zero shots controller:"
                ],
                "summary": "Get Zero Shot Models",
                "description": "Gets the zero shot model identified by the given ID.",
                "operationId": "ZeroShotModels_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ZeroShotPrompt"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "x-ms-error-response": true
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "Get a zero shot prompt": {
                        "$ref": "./examples/get_zeroshot.json"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Zero shots controller:"
                ],
                "summary": "Delete Zero Shot Model",
                "description": "Deletes zero shot model identified by the given ID.",
                "operationId": "ZeroShotModels_Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "Delete a zero shot prompt": {
                        "$ref": "./examples/delete_zeroshot.json"
                    }
                }
            }
        },
        "/api/texttospeech/zeroshots/basemodels": {
            "get": {
                "tags": [
                    "Zero shots controller:"
                ],
                "summary": "Get Zero Shot Base Models",
                "description": "Gets a list of base models for zero shot model training.",
                "operationId": "ZeroShotModels_ListBaseModels",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BaseModel"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "subscription_key": [],
                        "token": []
                    }
                ],
                "x-ms-examples": {
                    "Get zero shot base models": {
                        "$ref": "./examples/get_zeroshot_base_models.json"
                    }
                }
            }
        }
    },
    "definitions": {
        "BaseModel": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "minLength": 1,
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "BlockKind": {
            "title": "BlockKind",
            "enum": [
                "Committed",
                "Uncommitted",
                "Latest"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "BlockKind",
                "modelAsString": true
            }
        },
        "CommitBlocksEntry": {
            "description": "Entry of the commit block list.",
            "type": "object",
            "properties": {
                "kind": {
                    "$ref": "#/definitions/BlockKind"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "Consent": {
            "required": [
                "companyName",
                "displayName",
                "locale",
                "voiceTalentName"
            ],
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/definitions/Status"
                },
                "lastActionDateTime": {
                    "format": "date-time",
                    "type": "string",
                    "readOnly": true
                },
                "self": {
                    "format": "uri",
                    "type": "string",
                    "readOnly": true,
                    "example": " https://eastus.api.cognitive.microsoft.com/customvoice/resourcename/812ebf7a-b564-4de4-a188-324995cd5b33?api-version=2023-04-01-Preview "
                },
                "displayName": {
                    "minLength": 1,
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "createdDateTime": {
                    "format": "date-time",
                    "type": "string",
                    "readOnly": true
                },
                "voiceTalentName": {
                    "minLength": 1,
                    "type": "string"
                },
                "companyName": {
                    "minLength": 1,
                    "type": "string"
                },
                "locale": {
                    "type": "string"
                },
                "project": {
                    "$ref": "#/definitions/ResourceReference"
                }
            }
        },
        "DatasetKind": {
            "title": "DatasetKind",
            "enum": [
                "AudioAndScript",
                "LongAudio",
                "AudioOnly"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "DatasetKind",
                "modelAsString": true
            }
        },
        "DetailedErrorCode": {
            "title": "DetailedErrorCode",
            "enum": [
                "None",
                "InvalidParameterValue",
                "InvalidRequestBodyFormat",
                "EmptyRequest",
                "MissingInputRecords",
                "InvalidDocument",
                "ModelVersionIncorrect",
                "InvalidDocumentBatch",
                "UnsupportedLanguageCode",
                "DataImportFailed",
                "InUseViolation",
                "InvalidLocale",
                "InvalidGender",
                "InvalidBaseModel",
                "InvalidDataset",
                "InvalidTest",
                "InvalidWebPagePlayer",
                "FailedDataset",
                "InvalidModel",
                "InvalidBatchSynthesis",
                "InvalidPayload",
                "InvalidParameter",
                "EndpointWithoutLogging",
                "InvalidPermissions",
                "InvalidPrerequisite",
                "UnsupportedSubscription",
                "InvalidSubscription",
                "InvalidProject",
                "InaccessibleTrainingSet",
                "InvalidProjectKind",
                "InvalidUtterance",
                "InvalidRecordingsUri",
                "OnlyOneOfUrlsOrContainerOrDataset",
                "ExceededNumberOfRecordingsUris",
                "ModelMismatch",
                "ProjectGenderMismatch",
                "ModelDeprecated",
                "ModelExists",
                "ModelNotDeployable",
                "EndpointNotUpdatable",
                "SingleDefaultEndpoint",
                "EndpointCannotBeDefault",
                "InvalidModelUri",
                "SubscriptionNotFound",
                "QuotaViolation",
                "UnsupportedDelta",
                "UnsupportedFilter",
                "UnsupportedPagination",
                "UnsupportedDynamicConfiguration",
                "UnsupportedOrderBy",
                "InvalidEncoding",
                "ModelDeploymentNotCompleteState",
                "DeployingFailedModel",
                "UnsupportedTimeRange",
                "InvalidLogDate",
                "InvalidLogId",
                "InvalidLogStartTime",
                "InvalidLogEndTime",
                "InvalidTopForLogs",
                "DeleteNotAllowed",
                "Forbidden",
                "DeployNotAllowed",
                "UnexpectedError",
                "InvalidCollection",
                "InvalidCallbackUri",
                "InvalidSasValidityDuration",
                "InaccessibleCustomerStorageAccount",
                "InaccessibleVerbalConsentStatement",
                "InvalidDiscountPatch",
                "InvalidRecordingScriptName",
                "UtteranceExists",
                "InvalidDeployment",
                "ModelEncryptionError",
                "UnsupportedApiRegion",
                "InvalidQueryParameterValue",
                "UnsupportedOrdering",
                "InvalidOrderByExpression",
                "InvalidFilter",
                "MissingRequiredQueryParameter",
                "InvalidSkipQueryParameterValue",
                "InvalidTopQueryParameterValue",
                "InvalidTopParameterValue",
                "InvalidModelName",
                "InaccessibleProject",
                "UnsupportedBaseModelName",
                "UnsupportedRecipeKind",
                "UnsupportedRecipeShortName",
                "UnsupportedRecipeVersion",
                "EmptyTrainingRecipeForLocale",
                "TrainingSetNotReady",
                "MissingValidTrainingSet",
                "MissingTrainingSetInRequestBody",
                "LocaleNotFoundInTrainingSet",
                "VoiceLocaleSameAsDataLocale",
                "InconsistentVoiceAndDataLocales",
                "StyleNameOnlyForMultistyleModel",
                "MissingStyleName",
                "StyleNameTooLong",
                "InvalidStyleName",
                "EmptyBaseModel",
                "InaccessibleBaseModel",
                "NoResumeForOldTrainingEngine",
                "MissingValidVerbalConsentStatement",
                "NeuralTrainingNotSupported",
                "NeuralTrainingNotAvailableInThisRegion",
                "ZeroshotNotAvailableInThisRegion",
                "VideoTranslationNotAvailableInThisRegion",
                "NoPermissionToTrainModel",
                "ReachedConcurrentLimit",
                "MissingRequiredVerbalConsentStatement",
                "UnsupportedVoiceLocale",
                "MissingRequiredGenderInfo",
                "UnsupportedPresetStyle",
                "UnsupportedTestSampleRate",
                "EmptyTrainingSet",
                "EmptyGeneralStyleTrainingset",
                "DuplicateCustomStyleName",
                "InvalidCustomStyleName",
                "NotEnoughValidWaves",
                "MultipleTrainingSetsOnlyForMultistyle",
                "IncorrectTrainingParameters",
                "InvalidVoiceConsentType",
                "ReachedCustomStyleNamesLimit",
                "ExceededNumberOfTrainingAudios",
                "InvalidAudioType",
                "ExceededSizeOfTrainingAudios",
                "DisableUpdateFrontend"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "DetailedErrorCode",
                "modelAsString": true
            }
        },
        "Endpoint": {
            "required": [
                "displayName",
                "model",
                "project"
            ],
            "type": "object",
            "properties": {
                "model": {
                    "$ref": "#/definitions/ResourceReference"
                },
                "project": {
                    "$ref": "#/definitions/ResourceReference"
                },
                "properties": {
                    "$ref": "#/definitions/EndpointProperties"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                },
                "lastActionDateTime": {
                    "format": "date-time",
                    "type": "string",
                    "readOnly": true
                },
                "self": {
                    "format": "uri",
                    "type": "string",
                    "readOnly": true,
                    "example": " https://eastus.api.cognitive.microsoft.com/customvoice/resourcename/812ebf7a-b564-4de4-a188-324995cd5b33?api-version=2023-04-01-Preview "
                },
                "displayName": {
                    "minLength": 1,
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "createdDateTime": {
                    "format": "date-time",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "EndpointKind": {
            "title": "EndpointKind",
            "enum": [
                "HighPerformance",
                "FastResume"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "EndpointKind",
                "modelAsString": true
            }
        },
        "EndpointProperties": {
            "type": "object",
            "properties": {
                "kind": {
                    "$ref": "#/definitions/EndpointKind"
                }
            }
        },
        "EntityError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "Error": {
            "description": "New format which conforms to the new Cognitive Services API guidelines which is available at https://microsoft.sharepoint.com/%3Aw%3A/t/CognitiveServicesPMO/EUoytcrjuJdKpeOKIK_QRC8BPtUYQpKBi8JsWyeDMRsWlQ?e=CPq8ow.\r\nThis contains an outer error with error code, message, details, target and an inner error with more descriptive details.",
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/ErrorCode"
                },
                "target": {
                    "description": "Gets or sets the source of the error.\r\nFor example it would be \"model\" or \"model id\" in case of invalid model.",
                    "type": "string"
                },
                "message": {
                    "description": "Gets or sets high level error message.",
                    "type": "string"
                },
                "details": {
                    "description": "Gets or sets additional supportive details regarding the error and/or expected policies.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "innererror": {
                    "$ref": "#/definitions/InnerError"
                }
            }
        },
        "ErrorCode": {
            "title": "ErrorCode",
            "enum": [
                "BadRequest",
                "BadArgument",
                "Unauthorized",
                "Forbidden",
                "NotFound",
                "UnsupportedMediaType",
                "TooManyRequests",
                "InternalServerError",
                "ServiceUnavailable"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "ErrorCode",
                "modelAsString": true
            }
        },
        "ErrorResponse": {
            "description": "Contains unified error information used for HTTP responses across any Cognitive Service. Instances\r\ncan be created by returning it directly from a controller.",
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/Error"
                }
            }
        },
        "Gender": {
            "title": "Gender",
            "enum": [
                "Male",
                "Female"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "Gender",
                "modelAsString": true
            }
        },
        "InnerError": {
            "description": "New Inner Error format which conforms to Cognitive Services API Guidelines which is available at https://microsoft.sharepoint.com/%3Aw%3A/t/CognitiveServicesPMO/EUoytcrjuJdKpeOKIK_QRC8BPtUYQpKBi8JsWyeDMRsWlQ?e=CPq8ow.\r\nThis contains required properties ErrorCode, message and optional properties target, inner error(this can be nested).",
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/DetailedErrorCode"
                },
                "target": {
                    "description": "Gets or sets the source of the error.\r\nFor example it would be \"model\" or \"model id\" in case of invalid model.",
                    "type": "string"
                },
                "message": {
                    "description": "Gets or sets high level error message.",
                    "type": "string"
                },
                "innererror": {
                    "$ref": "#/definitions/InnerError"
                }
            }
        },
        "Model": {
            "required": [
                "consent",
                "displayName",
                "project",
                "recipe",
                "trainingset"
            ],
            "type": "object",
            "properties": {
                "recipe": {
                    "$ref": "#/definitions/Recipe"
                },
                "locale": {
                    "type": "string"
                },
                "trainingset": {
                    "$ref": "#/definitions/ResourceReference"
                },
                "engineVersion": {
                    "type": "string",
                    "readOnly": true
                },
                "project": {
                    "$ref": "#/definitions/ResourceReference"
                },
                "consent": {
                    "$ref": "#/definitions/ResourceReference"
                },
                "properties": {
                    "$ref": "#/definitions/ModelProperties"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                },
                "lastActionDateTime": {
                    "format": "date-time",
                    "type": "string",
                    "readOnly": true
                },
                "self": {
                    "format": "uri",
                    "type": "string",
                    "readOnly": true,
                    "example": " https://eastus.api.cognitive.microsoft.com/customvoice/resourcename/812ebf7a-b564-4de4-a188-324995cd5b33?api-version=2023-04-01-Preview "
                },
                "displayName": {
                    "minLength": 1,
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "createdDateTime": {
                    "format": "date-time",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ModelFailureReason": {
            "title": "ModelFailureReason",
            "enum": [
                "None",
                "InaccessibleCustomerStorage",
                "SpeakerVerificationFailed",
                "TerminateByUser",
                "Internal"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "ModelFailureReason",
                "modelAsString": true
            }
        },
        "ModelProperties": {
            "type": "object",
            "properties": {
                "presetStyles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "styleTrainingsets": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ResourceReference"
                    }
                },
                "voiceStyles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true
                },
                "failureReason": {
                    "$ref": "#/definitions/ModelFailureReason"
                }
            }
        },
        "PaginatedResources`1_Consent": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Consent"
                    },
                    "readOnly": true
                },
                "@nextLink": {
                    "format": "uri",
                    "type": "string"
                }
            }
        },
        "PaginatedResources`1_Endpoint": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Endpoint"
                    },
                    "readOnly": true
                },
                "@nextLink": {
                    "format": "uri",
                    "type": "string"
                }
            }
        },
        "PaginatedResources`1_ProModel": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Model"
                    },
                    "readOnly": true
                },
                "@nextLink": {
                    "format": "uri",
                    "type": "string"
                }
            }
        },
        "PaginatedResources`1_Project": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Project"
                    },
                    "readOnly": true
                },
                "@nextLink": {
                    "format": "uri",
                    "type": "string"
                }
            }
        },
        "PaginatedResources`1_Trainingset": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Trainingset"
                    },
                    "readOnly": true
                },
                "@nextLink": {
                    "format": "uri",
                    "type": "string"
                }
            }
        },
        "PaginatedResources`1_ZeroShotPrompt": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ZeroShotPrompt"
                    },
                    "readOnly": true
                },
                "@nextLink": {
                    "format": "uri",
                    "type": "string"
                }
            }
        },
        "Project": {
            "required": [
                "displayName",
                "kind"
            ],
            "type": "object",
            "properties": {
                "kind": {
                    "$ref": "#/definitions/ProjectKind"
                },
                "self": {
                    "format": "uri",
                    "type": "string",
                    "readOnly": true,
                    "example": " https://eastus.api.cognitive.microsoft.com/customvoice/resourcename/812ebf7a-b564-4de4-a188-324995cd5b33?api-version=2023-04-01-Preview "
                },
                "displayName": {
                    "minLength": 1,
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "createdDateTime": {
                    "format": "date-time",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ProjectKind": {
            "title": "ProjectKind",
            "enum": [
                "TextToSpeech",
                "QuickTrialTextToSpeech",
                "ZeroShot"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "ProjectKind",
                "modelAsString": true
            }
        },
        "Recipe": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "readOnly": true
                },
                "minDataSize": {
                    "format": "int32",
                    "type": "integer",
                    "readOnly": true
                },
                "minStyleDataSize": {
                    "format": "int32",
                    "type": "integer",
                    "readOnly": true
                },
                "maxCustomStyleNum": {
                    "format": "int32",
                    "type": "integer",
                    "readOnly": true
                },
                "datasetLocales": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true
                },
                "modelLocales": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true
                },
                "presetStyles": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "readOnly": true
                }
            }
        },
        "ResourceReference": {
            "required": [
                "self"
            ],
            "type": "object",
            "properties": {
                "self": {
                    "format": "uri",
                    "pattern": "https://.+/([\\da-fA-F]{8}-([\\da-fA-F]{4}-){3}[\\da-fA-F]{12})/*(\\?.*)?$",
                    "type": "string",
                    "example": " https://eastus.api.cognitive.microsoft.com/customvoice/resourcename/812ebf7a-b564-4de4-a188-324995cd5b33?api-version=2023-04-01-Preview "
                }
            }
        },
        "ResponseBlock": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "size": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "Status": {
            "title": "Status",
            "enum": [
                "NotStarted",
                "Running",
                "Succeeded",
                "Failed",
                "Disabling",
                "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "Status",
                "modelAsString": true
            }
        },
        "Trainingset": {
            "required": [
                "displayName",
                "locale",
                "project"
            ],
            "type": "object",
            "properties": {
                "locale": {
                    "minLength": 1,
                    "type": "string"
                },
                "project": {
                    "$ref": "#/definitions/ResourceReference"
                },
                "gender": {
                    "$ref": "#/definitions/Gender"
                },
                "properties": {
                    "$ref": "#/definitions/TrainingsetProperties"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                },
                "lastActionDateTime": {
                    "format": "date-time",
                    "type": "string",
                    "readOnly": true
                },
                "self": {
                    "format": "uri",
                    "type": "string",
                    "readOnly": true,
                    "example": " https://eastus.api.cognitive.microsoft.com/customvoice/resourcename/812ebf7a-b564-4de4-a188-324995cd5b33?api-version=2023-04-01-Preview "
                },
                "displayName": {
                    "minLength": 1,
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "createdDateTime": {
                    "format": "date-time",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "TrainingsetProperties": {
            "type": "object",
            "properties": {
                "size": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "readOnly": true
        },
        "UploadedBlocks": {
            "type": "object",
            "properties": {
                "committedBlocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ResponseBlock"
                    }
                },
                "uncommittedBlocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ResponseBlock"
                    }
                }
            }
        },
        "ZeroShotPrompt": {
            "required": [
                "consent",
                "displayName",
                "project"
            ],
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/definitions/Status"
                },
                "lastActionDateTime": {
                    "format": "date-time",
                    "type": "string",
                    "readOnly": true
                },
                "self": {
                    "format": "uri",
                    "type": "string",
                    "readOnly": true,
                    "example": " https://eastus.api.cognitive.microsoft.com/customvoice/resourcename/812ebf7a-b564-4de4-a188-324995cd5b33?api-version=2023-04-01-Preview "
                },
                "displayName": {
                    "minLength": 1,
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "createdDateTime": {
                    "format": "date-time",
                    "type": "string",
                    "readOnly": true
                },
                "project": {
                    "$ref": "#/definitions/ResourceReference"
                },
                "consent": {
                    "$ref": "#/definitions/ResourceReference"
                },
                "properties": {
                    "$ref": "#/definitions/ZeroShotProperties"
                },
                "promptId": {
                    "format": "uuid",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ZeroShotProperties": {
            "type": "object",
            "properties": {
                "failureReason": {
                    "$ref": "#/definitions/ModelFailureReason"
                }
            },
            "readOnly": true
        }
    },
    "securityDefinitions": {
        "subscription_key": {
            "type": "apiKey",
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "description": "Provide your cognitive services subscription key here."
        },
        "token": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "description": "Provide an access token from the JWT returned by the STS of this region. Make sure to add the management scope to the token by adding the following query string to the STS URL: ?scope=speechservicesmanagement"
        }
    },
    "schemes": [
        "https"
    ],
    "x-ms-parameterized-host": {
        "hostTemplate": "{Endpoint}/texttospeech/v2023-04-01-preview",
        "useSchemePrefix": false,
        "parameters": [
            {
                "$ref": "#/parameters/Endpoint"
            }
        ]
    },
    "parameters": {
        "Endpoint": {
            "name": "Endpoint",
            "description": "Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).",
            "x-ms-parameter-location": "client",
            "required": true,
            "type": "string",
            "in": "path",
            "x-ms-skip-url-encoding": true
        }
    }
}