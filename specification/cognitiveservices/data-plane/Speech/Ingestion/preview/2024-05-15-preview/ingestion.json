{
  "swagger": "2.0",
  "info": {
    "title": "Speech Ingestion service",
    "version": "2024-05-15-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "ApiKeyAuth": []
    },
    {
      "OAuth2Auth": [
        "https://cognitiveservices.azure.com/.default"
      ]
    }
  ],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    },
    "OAuth2Auth": {
      "type": "oauth2",
      "flow": "application",
      "scopes": {
        "https://cognitiveservices.azure.com/.default": ""
      },
      "tokenUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/token"
    }
  },
  "tags": [],
  "paths": {
    "/registrations": {
      "get": {
        "operationId": "Registrations_ListRegistrations",
        "description": "List Registration resources",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedRegistration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Registrations_ListRegistrations": {
            "$ref": "./examples/Registrations_ListRegistrationsSample.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/registrations/{name}": {
      "get": {
        "operationId": "Registrations_GetRegistration",
        "description": "Fetch a Registration by name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The unique name of the registration resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Registration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Get registration by name.": {
            "$ref": "./examples/Registrations_GetRegistrationSample.json"
          }
        }
      },
      "put": {
        "operationId": "Registrations_CreateOrReplaceRegistration",
        "description": "Creates or replaces a Registration.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The unique name of the registration resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The resource instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Registration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Registration"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/Registration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Registrations_CreateOrReplaceRegistration": {
            "$ref": "./examples/Registrations_CreateOrReplaceRegistrationSample.json"
          }
        }
      },
      "delete": {
        "operationId": "Registrations_DeleteRegistration",
        "description": "Delete a Registration.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The unique name of the registration resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Delete registration by name.": {
            "$ref": "./examples/Registrations_DeleteRegistrationSample.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AnalyticsModel": {
      "type": "object",
      "description": "Analytics model",
      "properties": {
        "endpoint": {
          "type": "string",
          "description": "The analytics endpoint to call."
        }
      },
      "required": [
        "endpoint"
      ]
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "BatchTranscriptionPropertiesModel": {
      "type": "object",
      "description": "Batch Transcription Properties model",
      "properties": {
        "locale": {
          "type": "string",
          "description": "The expected locale of the audio data to transcribe. For example, 'en-US', 'fr-FR', 'zh-CN', etc. For a full list of supported locales, see [Supported languages and regions](https://learn.microsoft.com/azure/ai-services/speech-service/language-support?tabs=stt)."
        },
        "modelX": {
          "$ref": "#/definitions/EntityReferenceModel",
          "description": "The model property to use a specific base model or Custom Speech model. If you don't specify the model, the default base model for the locale is used."
        },
        "customDomain": {
          "type": "string",
          "description": "Custom domain name for batch transcription."
        },
        "transcriptionProperties": {
          "$ref": "#/definitions/TranscriptionPropertiesModel",
          "description": "The transcription batch API properties that allow you to customize the transcription process. For more information, see [Request configuration options](https://learn.microsoft.com/en-us/azure/ai-services/speech-service/batch-transcription-create?pivots=rest-api#request-configuration-options)."
        }
      },
      "required": [
        "customDomain"
      ]
    },
    "DiarizationPropertiesModel": {
      "type": "object",
      "description": "DiarizationProperties model",
      "properties": {
        "speakers": {
          "$ref": "#/definitions/DiarizationSpeakersPropertiesModel",
          "description": "speakers properties."
        }
      },
      "required": [
        "speakers"
      ]
    },
    "DiarizationSpeakersPropertiesModel": {
      "type": "object",
      "description": "DiarizationSpeakersProperties model",
      "properties": {
        "minCount": {
          "type": "integer",
          "format": "int8",
          "description": "Minimum count of speakers"
        },
        "maxCount": {
          "type": "integer",
          "format": "int8",
          "description": "Maximum count of speakers"
        }
      }
    },
    "EntityReferenceModel": {
      "type": "object",
      "description": "Entity ReferenceModel model",
      "properties": {
        "self": {
          "type": "string",
          "description": "self."
        }
      },
      "required": [
        "self"
      ]
    },
    "LanguageIdentificationPropertiesModel": {
      "type": "object",
      "description": "LanguageIdentificationProperties model",
      "properties": {
        "mode": {
          "type": "string",
          "description": "mode"
        },
        "candidateLocales": {
          "type": "array",
          "description": "candidateLocales.",
          "items": {
            "type": "string"
          }
        },
        "speechModelMapping": {
          "type": "object",
          "description": "speechModelMapping",
          "additionalProperties": {
            "$ref": "#/definitions/EntityReferenceModel"
          }
        }
      },
      "required": [
        "mode",
        "candidateLocales"
      ]
    },
    "PagedRegistration": {
      "type": "object",
      "description": "Paged collection of Registration items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Registration items on this page",
          "items": {
            "$ref": "#/definitions/Registration"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "ProcessingModel": {
      "type": "object",
      "description": "Processing model",
      "properties": {
        "deliveryMode": {
          "type": "string",
          "description": "deliveryMode."
        },
        "subjectEndsWith": {
          "type": "string",
          "description": "Extensions of input files."
        },
        "systemTopicResourceId": {
          "type": "string",
          "description": "ResourceId for System Topic."
        }
      },
      "required": [
        "deliveryMode"
      ]
    },
    "Registration": {
      "type": "object",
      "description": "A registration.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique name of the registration resource.",
          "readOnly": true
        },
        "storage": {
          "$ref": "#/definitions/StorageModel",
          "description": "Storage configuration."
        },
        "processing": {
          "$ref": "#/definitions/ProcessingModel",
          "description": "Processing configuration."
        },
        "batchTranscription": {
          "$ref": "#/definitions/BatchTranscriptionPropertiesModel",
          "description": "Batch transcription configuration."
        },
        "analytics": {
          "$ref": "#/definitions/AnalyticsModel",
          "description": "Analytics configuration."
        },
        "status": {
          "$ref": "#/definitions/StatusModel",
          "description": "Status of the registration.",
          "readOnly": true
        }
      },
      "required": [
        "name",
        "storage",
        "processing",
        "batchTranscription",
        "status"
      ]
    },
    "StatusModel": {
      "type": "object",
      "description": "Status model",
      "properties": {
        "code": {
          "type": "string",
          "description": "Status code."
        },
        "message": {
          "type": "string",
          "description": "Message."
        }
      },
      "required": [
        "code"
      ]
    },
    "StorageModel": {
      "type": "object",
      "description": "Storage model",
      "properties": {
        "blobStorageEndpoint": {
          "type": "string",
          "description": "The Uri of the blob storage account in the form of 'https://<accountname>.blob.core.windows.net'."
        },
        "inputContainerName": {
          "type": "string",
          "description": "The name of the container that holds the audio files to be processed."
        },
        "outputContainerName": {
          "type": "string",
          "description": "The name of the container that stores the transcription and analytics results."
        },
        "processedContainerName": {
          "type": "string",
          "description": "The name of the container that archives the audio files that have been transcribed."
        },
        "errorOutputContainerName": {
          "type": "string",
          "description": "The name of the container that saves the error messages during processing."
        }
      },
      "required": [
        "blobStorageEndpoint",
        "inputContainerName",
        "outputContainerName",
        "processedContainerName",
        "errorOutputContainerName"
      ]
    },
    "TranscriptionPropertiesModel": {
      "type": "object",
      "description": "Batch Transcription Properties model",
      "properties": {
        "wordLevelTimestampsEnabled": {
          "type": "boolean",
          "description": "Specifies if word level timestamps should be included in the output. The default value is false.",
          "default": false
        },
        "displayFormWordLevelTimestampsEnabled": {
          "type": "boolean",
          "description": "Specifies whether to include word-level timestamps on the display form of the transcription results. The results are returned in the displayWords property of the transcription file. The default value is false.",
          "default": false
        },
        "channels": {
          "type": "array",
          "description": "An array of channel numbers to process. Channels 0 and 1 are transcribed by default.",
          "default": [
            0,
            1
          ],
          "items": {
            "type": "integer",
            "format": "int8"
          }
        },
        "punctuationMode": {
          "type": "string",
          "description": "Specifies how to handle punctuation in recognition results. Accepted values are None to disable punctuation, Dictated to imply explicit (spoken) punctuation, Automatic to let the decoder deal with punctuation, or DictatedAndAutomatic to use dictated and automatic punctuation. The default value is DictatedAndAutomatic.",
          "default": "DictatedAndAutomatic"
        },
        "profanityFilterMode": {
          "type": "string",
          "description": "Specifies how to handle profanity in recognition results. Accepted values are None to disable profanity filtering, Masked to replace profanity with asterisks, Removed to remove all profanity from the result, or Tags to add profanity tags. The default value is Masked.",
          "default": "Masked"
        },
        "diarizationEnabled": {
          "type": "boolean",
          "description": "Specifies that the Speech service should attempt diarization analysis on the input, which is expected to be a mono channel that contains two voices. The default value is false.",
          "default": false
        },
        "diarization": {
          "$ref": "#/definitions/DiarizationPropertiesModel",
          "description": "Indicates that the Speech service should attempt diarization analysis on the input, which is expected to be a mono channel that contains multiple voices. The feature isn't available with stereo recordings."
        },
        "languageIdentification": {
          "$ref": "#/definitions/LanguageIdentificationPropertiesModel",
          "description": "Language identification is used to identify languages spoken in audio when compared against a list of supported languages. https://learn.microsoft.com/azure/ai-services/speech-service/language-support?tabs=language-identification"
        }
      }
    },
    "Versions": {
      "type": "string",
      "description": "The SpeechIngestion service versions.",
      "enum": [
        "2024-05-15-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "2024-05-15-preview",
            "value": "2024-05-15-preview",
            "description": "The 2024-05-15-preview version of the SpeechIngestion service."
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
