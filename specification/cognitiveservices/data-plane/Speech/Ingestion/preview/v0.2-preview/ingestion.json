{
  "swagger": "2.0",
  "info": {
    "title": "Registrations API",
    "version": "v0.2-preview"
  },
  "paths": {
    "/v0.2-preview/registrations": {
      "post": {
        "tags": [
          "ApplicationControllerV02Preview"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "description": "Speech/AI Subscription Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "registration",
            "required": true,
            "description": "Registration Definition",
            "schema": {
              "$ref": "#/definitions/BatchRegistrationRequestPayloadV02Preview"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/BatchRegistrationResponsePayloadV02Preview"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-examples": {
          "Create a registration with customer owned Event Grid resource as the trigger": {
            "$ref": "./examples/Registrations_CreateRegistration_EventGrid.json"
          },
          "Create a registration for transcription only": {
            "$ref": "./examples/Registrations_CreateRegistration_TranscriptionOnly.json"
          }
        }
      },
      "get": {
        "tags": [
          "ApplicationControllerV02Preview"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "description": "Speech/AI Subscription Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BatchRegistrationResponsePayloadV02Preview"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-examples": {
          "List registrations": {
            "$ref": "./examples/Registrations_ListRegistrations.json"
          }
        }
      }
    },
    "/v0.2-preview/registrations/{registrationId}": {
      "patch": {
        "tags": [
          "ApplicationControllerV02Preview"
        ],
        "parameters": [
          {
            "name": "registrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "description": "Speech/AI Subscription Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "registration",
            "required": true,
            "description": "Registration Definition",
            "schema": {
              "$ref": "#/definitions/BatchRegistrationRequestPayloadV02Preview"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchRegistrationResponsePayloadV02Preview"
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-examples": {
          "Update a registration by id": {
            "$ref": "./examples/Registrations_PatchRegistration.json"
          }
        }
      },
      "get": {
        "tags": [
          "ApplicationControllerV02Preview"
        ],
        "parameters": [
          {
            "name": "registrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "description": "Speech/AI Subscription Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchRegistrationResponsePayloadV02Preview"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-examples": {
          "Get a registration by id": {
            "$ref": "./examples/Registrations_GetRegistration.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationControllerV02Preview"
        ],
        "parameters": [
          {
            "name": "registrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "description": "Speech/AI Subscription Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "x-ms-examples": {
          "Delete a registration by id": {
            "$ref": "./examples/Registrations_DeleteRegistration.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AnalyticsKind": {
      "enum": [
        "PromptFlow"
      ],
      "type": "string"
    },
    "AnalyticsPropertiesPayloadV02Preview": {
      "required": [
        "kind"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/AnalyticsKind"
        },
        "endpointResourceId": {
          "type": "string",
          "description": "The PromptFlow analytics endpoint resourceId. If it is empty, only transcription '<filename>.json' will be saved in output container. If the endpoint is valid, you will see both transcription file and the analytics file '<filename>.analytics.json'.",
          "nullable": true
        }
      },
      "additionalProperties": false
    },
    "BatchRegistrationRequestPayloadV02Preview": {
      "required": [
        "batchTranscription",
        "storage"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the batch analytics registration.",
          "nullable": true
        },
        "batchTranscription": {
          "$ref": "#/definitions/BatchTranscriptionPropertiesPayload"
        },
        "customProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "nullable": true
        },
        "id": {
          "type": "string",
          "description": "The unique id of the batch analytics registration in GUID format. This value is generated if not specified.",
          "nullable": true
        },
        "storage": {
          "$ref": "#/definitions/StoragePropertiesPayloadV02Preview"
        },
        "analytics": {
          "$ref": "#/definitions/AnalyticsPropertiesPayloadV02Preview"
        }
      },
      "additionalProperties": false
    },
    "BatchRegistrationResponsePayloadV02Preview": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "nullable": true
        },
        "batchTranscription": {
          "$ref": "#/definitions/BatchTranscriptionPropertiesPayload"
        },
        "customProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "nullable": true
        },
        "status": {
          "$ref": "#/definitions/StatusPayload"
        },
        "id": {
          "type": "string",
          "nullable": true
        },
        "storage": {
          "$ref": "#/definitions/StoragePropertiesPayloadV02Preview"
        },
        "analytics": {
          "$ref": "#/definitions/AnalyticsPropertiesPayloadV02Preview"
        }
      },
      "additionalProperties": false
    },
    "BatchTranscriptionPropertiesPayload": {
      "required": [
        "customDomain",
        "locale",
        "transcriptionProperties"
      ],
      "type": "object",
      "properties": {
        "locale": {
          "minLength": 1,
          "type": "string",
          "description": "The expected locale of the audio data to transcribe. For example, 'en-US', 'fr-FR', 'zh-CN', etc. For a full list of supported locales, see [Supported languages and regions](https://learn.microsoft.com/en-us/azure/ai-services/speech-service/language-support?tabs=stt)."
        },
        "model": {
          "$ref": "#/definitions/EntityReference"
        },
        "customDomain": {
          "minLength": 1,
          "type": "string",
          "description": "Azure batch transcription custom domain."
        },
        "transcriptionProperties": {
          "$ref": "#/definitions/TranscriptionProperties"
        }
      },
      "additionalProperties": false
    },
    "DiarizationProperties": {
      "required": [
        "speakers"
      ],
      "type": "object",
      "properties": {
        "speakers": {
          "$ref": "#/definitions/DiarizationSpeakersProperties"
        }
      },
      "additionalProperties": false
    },
    "DiarizationSpeakersProperties": {
      "type": "object",
      "properties": {
        "minCount": {
          "type": "integer",
          "format": "int32",
          "nullable": true
        },
        "maxCount": {
          "type": "integer",
          "format": "int32",
          "nullable": true
        }
      },
      "additionalProperties": false
    },
    "EntityReference": {
      "type": "object",
      "properties": {
        "self": {
          "type": "string",
          "format": "uri",
          "nullable": true
        }
      },
      "additionalProperties": false
    },
    "LanguageIdentificationMode": {
      "enum": [
        "Continuous",
        "Single"
      ],
      "type": "string"
    },
    "LanguageIdentificationProperties": {
      "required": [
        "candidateLocales",
        "mode"
      ],
      "type": "object",
      "properties": {
        "mode": {
          "$ref": "#/definitions/LanguageIdentificationMode"
        },
        "candidateLocales": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "speechModelMapping": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/EntityReference"
          },
          "nullable": true
        }
      },
      "additionalProperties": false
    },
    "ProblemDetails": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "nullable": true
        },
        "title": {
          "type": "string",
          "nullable": true
        },
        "status": {
          "type": "integer",
          "format": "int32",
          "nullable": true
        },
        "detail": {
          "type": "string",
          "nullable": true
        },
        "instance": {
          "type": "string",
          "nullable": true
        }
      },
      "additionalProperties": {}
    },
    "ProfanityFilterMode": {
      "enum": [
        "None",
        "Removed",
        "Tags",
        "Masked"
      ],
      "type": "string"
    },
    "PunctuationMode": {
      "enum": [
        "None",
        "Dictated",
        "Automatic",
        "DictatedAndAutomatic"
      ],
      "type": "string"
    },
    "RegistrationStatus": {
      "enum": [
        "Active",
        "Error"
      ],
      "type": "string"
    },
    "StatusPayload": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/RegistrationStatus"
        },
        "message": {
          "type": "string",
          "nullable": true
        }
      },
      "additionalProperties": false
    },
    "StoragePropertiesPayloadV02Preview": {
      "required": [
        "blobStorageEndpoint",
        "errorOutputContainerName",
        "inputContainerName",
        "processedContainerName",
        "transcriptionContainerName",
        "trigger"
      ],
      "type": "object",
      "properties": {
        "trigger": {
          "$ref": "#/definitions/TriggerPropertiesPayloadV02Preview"
        },
        "blobStorageEndpoint": {
          "minLength": 1,
          "type": "string",
          "description": "The Uri of the blob storage account in the form of 'https://<accountname>.blob.core.windows.net'."
        },
        "inputContainerName": {
          "minLength": 1,
          "type": "string",
          "description": "The name of the container that holds the audio files to be processed."
        },
        "transcriptionContainerName": {
          "minLength": 1,
          "type": "string",
          "description": "The name of the container that stores the transcription results."
        },
        "analyticsContainerName": {
          "type": "string",
          "description": "The name of the container that stores the analytics results.",
          "nullable": true
        },
        "processedContainerName": {
          "minLength": 1,
          "type": "string",
          "description": "The name of the container that archives the audio files that have been transcribed."
        },
        "errorOutputContainerName": {
          "minLength": 1,
          "type": "string",
          "description": "The name of the container that saves the error messages during processing. Please note that the error files will not be automatically cleaned and may incur additional storage charges."
        }
      },
      "additionalProperties": false
    },
    "TranscriptionProperties": {
      "required": [
        "profanityFilterMode",
        "punctuationMode"
      ],
      "type": "object",
      "properties": {
        "wordLevelTimestampsEnabled": {
          "type": "boolean",
          "description": "Please enable this setting to generate audioTimings for each word if PII reduction is required in your flow.",
          "nullable": true
        },
        "displayFormWordLevelTimestampsEnabled": {
          "type": "boolean",
          "nullable": true
        },
        "channels": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "Channel 0 and 1 are set by default.",
          "nullable": true
        },
        "punctuationMode": {
          "$ref": "#/definitions/PunctuationMode"
        },
        "profanityFilterMode": {
          "$ref": "#/definitions/ProfanityFilterMode"
        },
        "diarizationEnabled": {
          "type": "boolean",
          "description": "For mono channels, please enable this setting to enable speaker ID recognition. However, for stereo channels, diarization is currently not supported by the batch Speech Recognition API.",
          "nullable": true
        },
        "diarization": {
          "$ref": "#/definitions/DiarizationProperties"
        },
        "languageIdentification": {
          "$ref": "#/definitions/LanguageIdentificationProperties"
        }
      },
      "additionalProperties": false
    },
    "TriggerPropertiesPayloadV02Preview": {
      "required": [
        "kind"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "enum": [
            "EventGrid"
          ],
          "type": "string"
        },
        "filter": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "nullable": true
        },
        "systemTopicResourceId": {
          "type": "string",
          "nullable": true
        }
      },
      "additionalProperties": false
    }
  }
}
