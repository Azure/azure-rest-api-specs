{
  "swagger": "2.0",
  "info": {
    "version": "v2.0",
    "title": "Speech Services API v2.0",
    "description": "Speech Services API v2.0.",
    "contact": {
      "name": "Cognitive Services - Speech Services",
      "url": "https://docs.microsoft.com/azure/cognitive-services/speech-service/support"
    }
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}/speechtotext/v2.0",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/Endpoint"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "paths": {
    "/accuracytests": {
      "get": {
        "tags": [
          "Custom Speech accuracy tests:"
        ],
        "summary": "Gets the list of accuracy tests for the authenticated subscription.",
        "operationId": "GetAccuracyTests",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Test"
              }
            },
            "headers": {},
            "examples": {
              "application/json": [
                {
                  "models": [
                    {
                      "modelKind": "Acoustic",
                      "datasets": [
                        {
                          "dataImportKind": "Acoustic",
                          "lastActionDateTime": "2019-01-07T12:36:07Z",
                          "status": "Succeeded",
                          "id": "9d5f4100-5f8e-4dd6-bd83-9bbbf50d57f1",
                          "createdDateTime": "2019-01-07T12:34:12Z",
                          "locale": "en-US",
                          "name": "Acoustic dataset",
                          "properties": {
                            "AcceptedLines": "11",
                            "RejectedLines": "2",
                            "ReportUri": "https://www.example.org/AcousticData/6d52cb46-a6d8-4954-ba7e-1407a1bc2a4a?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=a324840f-37fa-4bbf-91a7-1ced1052bc3e"
                          }
                        }
                      ],
                      "lastActionDateTime": "2019-01-07T12:36:07Z",
                      "status": "Running",
                      "id": "827712a5-f942-4997-91c3-7c6cde35600b",
                      "createdDateTime": "2019-01-07T12:34:12Z",
                      "locale": "en-US",
                      "name": "Acoustic model",
                      "description": "Example for an acoustic model"
                    },
                    {
                      "modelKind": "Language",
                      "baseModel": {
                        "modelKind": "AcousticAndLanguage",
                        "datasets": [],
                        "lastActionDateTime": "2019-01-07T12:36:07Z",
                        "status": "Succeeded",
                        "id": "b28b9e52-395c-4d1b-b5a7-2c6fc4dd5715",
                        "createdDateTime": "2019-01-07T12:34:12Z",
                        "locale": "en-US",
                        "name": "Base model",
                        "description": "Base model description"
                      },
                      "datasets": [
                        {
                          "dataImportKind": "Language",
                          "lastActionDateTime": "2019-01-07T12:36:07Z",
                          "status": "Succeeded",
                          "id": "702d913a-8ba6-4f66-ad5c-897400b081fb",
                          "createdDateTime": "2019-01-07T12:34:12Z",
                          "locale": "en-US",
                          "name": "Language dataset",
                          "properties": {
                            "AcceptedLines": "11",
                            "RejectedLines": "2",
                            "ReportUri": "https://www.example.org/LanguageData/74be207a-22a3-4c24-b6c9-e51297d3d537?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=86eacb5b-f18e-4df4-a250-fcdcbc059c1b"
                          }
                        }
                      ],
                      "lastActionDateTime": "2019-01-07T12:36:07Z",
                      "status": "Running",
                      "id": "ff3c2797-f5f0-4122-9712-83ee87a0abb8",
                      "createdDateTime": "2019-01-07T12:34:12Z",
                      "locale": "en-US",
                      "name": "Language model",
                      "description": "This is a language model"
                    }
                  ],
                  "dataset": {
                    "dataImportKind": "Acoustic",
                    "lastActionDateTime": "2019-01-07T12:36:07Z",
                    "status": "Succeeded",
                    "id": "9d5f4100-5f8e-4dd6-bd83-9bbbf50d57f1",
                    "createdDateTime": "2019-01-07T12:34:12Z",
                    "locale": "en-US",
                    "name": "Acoustic dataset",
                    "properties": {
                      "AcceptedLines": "11",
                      "RejectedLines": "2",
                      "ReportUri": "https://www.example.org/AcousticData/6d52cb46-a6d8-4954-ba7e-1407a1bc2a4a?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=a324840f-37fa-4bbf-91a7-1ced1052bc3e"
                    }
                  },
                  "wordErrorRate": 0.0,
                  "resultsUrl": "https://contoso.com/results/9E32D75F-CEE1-47F5-BA32-65E9BBA18743",
                  "id": "0000e4c4-0b0e-437f-b41d-bcfe7ebf7060",
                  "createdDateTime": "2019-01-07T12:34:12Z",
                  "lastActionDateTime": "2019-01-07T12:36:07Z",
                  "status": "Running",
                  "name": "Accuracy test"
                }
              ]
            }
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      },
      "post": {
        "tags": [
          "Custom Speech accuracy tests:"
        ],
        "summary": "Creates a new accuracy test.",
        "operationId": "CreateAccuracyTest",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "testDefinition",
            "in": "body",
            "description": "The details of the new accuracy test.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestDefinition"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      }
    },
    "/accuracytests/{id}": {
      "get": {
        "tags": [
          "Custom Speech accuracy tests:"
        ],
        "summary": "Gets the accuracy test identified by the given ID.",
        "operationId": "GetAccuracyTest",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the accuracy test.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Test"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "models": [
                  {
                    "modelKind": "Acoustic",
                    "datasets": [
                      {
                        "dataImportKind": "Acoustic",
                        "lastActionDateTime": "2019-01-07T12:36:07Z",
                        "status": "Succeeded",
                        "id": "9d5f4100-5f8e-4dd6-bd83-9bbbf50d57f1",
                        "createdDateTime": "2019-01-07T12:34:12Z",
                        "locale": "en-US",
                        "name": "Acoustic dataset",
                        "properties": {
                          "AcceptedLines": "11",
                          "RejectedLines": "2",
                          "ReportUri": "https://www.example.org/AcousticData/6d52cb46-a6d8-4954-ba7e-1407a1bc2a4a?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=a324840f-37fa-4bbf-91a7-1ced1052bc3e"
                        }
                      }
                    ],
                    "lastActionDateTime": "2019-01-07T12:36:07Z",
                    "status": "Running",
                    "id": "827712a5-f942-4997-91c3-7c6cde35600b",
                    "createdDateTime": "2019-01-07T12:34:12Z",
                    "locale": "en-US",
                    "name": "Acoustic model",
                    "description": "Example for an acoustic model"
                  },
                  {
                    "modelKind": "Language",
                    "baseModel": {
                      "modelKind": "AcousticAndLanguage",
                      "datasets": [],
                      "lastActionDateTime": "2019-01-07T12:36:07Z",
                      "status": "Succeeded",
                      "id": "b28b9e52-395c-4d1b-b5a7-2c6fc4dd5715",
                      "createdDateTime": "2019-01-07T12:34:12Z",
                      "locale": "en-US",
                      "name": "Base model",
                      "description": "Base model description"
                    },
                    "datasets": [
                      {
                        "dataImportKind": "Language",
                        "lastActionDateTime": "2019-01-07T12:36:07Z",
                        "status": "Succeeded",
                        "id": "702d913a-8ba6-4f66-ad5c-897400b081fb",
                        "createdDateTime": "2019-01-07T12:34:12Z",
                        "locale": "en-US",
                        "name": "Language dataset",
                        "properties": {
                          "AcceptedLines": "11",
                          "RejectedLines": "2",
                          "ReportUri": "https://www.example.org/LanguageData/74be207a-22a3-4c24-b6c9-e51297d3d537?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=86eacb5b-f18e-4df4-a250-fcdcbc059c1b"
                        }
                      }
                    ],
                    "lastActionDateTime": "2019-01-07T12:36:07Z",
                    "status": "Running",
                    "id": "ff3c2797-f5f0-4122-9712-83ee87a0abb8",
                    "createdDateTime": "2019-01-07T12:34:12Z",
                    "locale": "en-US",
                    "name": "Language model",
                    "description": "This is a language model"
                  }
                ],
                "dataset": {
                  "dataImportKind": "Acoustic",
                  "lastActionDateTime": "2019-01-07T12:36:07Z",
                  "status": "Succeeded",
                  "id": "9d5f4100-5f8e-4dd6-bd83-9bbbf50d57f1",
                  "createdDateTime": "2019-01-07T12:34:12Z",
                  "locale": "en-US",
                  "name": "Acoustic dataset",
                  "properties": {
                    "AcceptedLines": "11",
                    "RejectedLines": "2",
                    "ReportUri": "https://www.example.org/AcousticData/6d52cb46-a6d8-4954-ba7e-1407a1bc2a4a?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=a324840f-37fa-4bbf-91a7-1ced1052bc3e"
                  }
                },
                "wordErrorRate": 0.0,
                "resultsUrl": "https://contoso.com/results/9E32D75F-CEE1-47F5-BA32-65E9BBA18743",
                "id": "0000e4c4-0b0e-437f-b41d-bcfe7ebf7060",
                "createdDateTime": "2019-01-07T12:34:12Z",
                "lastActionDateTime": "2019-01-07T12:36:07Z",
                "status": "Running",
                "name": "Accuracy test"
              }
            }
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "NotFound",
                "message": "The specified entity cannot be found."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Custom Speech accuracy tests:"
        ],
        "summary": "Deletes the accuracy test identified by the given ID.",
        "operationId": "DeleteAccuracyTest",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the accuracy test.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "The test was successfully deleted.",
            "headers": {}
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Custom Speech accuracy tests:"
        ],
        "summary": "Updates the mutable details of the test identified by its id.",
        "operationId": "UpdateAccuracyTest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the accuracy test.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "testUpdate",
            "in": "body",
            "description": "The object containing the updated fields of the test.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Test"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "models": [
                  {
                    "modelKind": "Acoustic",
                    "datasets": [
                      {
                        "dataImportKind": "Acoustic",
                        "lastActionDateTime": "2019-01-07T12:36:07Z",
                        "status": "Succeeded",
                        "id": "9d5f4100-5f8e-4dd6-bd83-9bbbf50d57f1",
                        "createdDateTime": "2019-01-07T12:34:12Z",
                        "locale": "en-US",
                        "name": "Acoustic dataset",
                        "properties": {
                          "AcceptedLines": "11",
                          "RejectedLines": "2",
                          "ReportUri": "https://www.example.org/AcousticData/6d52cb46-a6d8-4954-ba7e-1407a1bc2a4a?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=a324840f-37fa-4bbf-91a7-1ced1052bc3e"
                        }
                      }
                    ],
                    "lastActionDateTime": "2019-01-07T12:36:07Z",
                    "status": "Running",
                    "id": "827712a5-f942-4997-91c3-7c6cde35600b",
                    "createdDateTime": "2019-01-07T12:34:12Z",
                    "locale": "en-US",
                    "name": "Acoustic model",
                    "description": "Example for an acoustic model"
                  },
                  {
                    "modelKind": "Language",
                    "baseModel": {
                      "modelKind": "AcousticAndLanguage",
                      "datasets": [],
                      "lastActionDateTime": "2019-01-07T12:36:07Z",
                      "status": "Succeeded",
                      "id": "b28b9e52-395c-4d1b-b5a7-2c6fc4dd5715",
                      "createdDateTime": "2019-01-07T12:34:12Z",
                      "locale": "en-US",
                      "name": "Base model",
                      "description": "Base model description"
                    },
                    "datasets": [
                      {
                        "dataImportKind": "Language",
                        "lastActionDateTime": "2019-01-07T12:36:07Z",
                        "status": "Succeeded",
                        "id": "702d913a-8ba6-4f66-ad5c-897400b081fb",
                        "createdDateTime": "2019-01-07T12:34:12Z",
                        "locale": "en-US",
                        "name": "Language dataset",
                        "properties": {
                          "AcceptedLines": "11",
                          "RejectedLines": "2",
                          "ReportUri": "https://www.example.org/LanguageData/74be207a-22a3-4c24-b6c9-e51297d3d537?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=86eacb5b-f18e-4df4-a250-fcdcbc059c1b"
                        }
                      }
                    ],
                    "lastActionDateTime": "2019-01-07T12:36:07Z",
                    "status": "Running",
                    "id": "ff3c2797-f5f0-4122-9712-83ee87a0abb8",
                    "createdDateTime": "2019-01-07T12:34:12Z",
                    "locale": "en-US",
                    "name": "Language model",
                    "description": "This is a language model"
                  }
                ],
                "dataset": {
                  "dataImportKind": "Acoustic",
                  "lastActionDateTime": "2019-01-07T12:36:07Z",
                  "status": "Succeeded",
                  "id": "9d5f4100-5f8e-4dd6-bd83-9bbbf50d57f1",
                  "createdDateTime": "2019-01-07T12:34:12Z",
                  "locale": "en-US",
                  "name": "Acoustic dataset",
                  "properties": {
                    "AcceptedLines": "11",
                    "RejectedLines": "2",
                    "ReportUri": "https://www.example.org/AcousticData/6d52cb46-a6d8-4954-ba7e-1407a1bc2a4a?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=a324840f-37fa-4bbf-91a7-1ced1052bc3e"
                  }
                },
                "wordErrorRate": 0.0,
                "resultsUrl": "https://contoso.com/results/9E32D75F-CEE1-47F5-BA32-65E9BBA18743",
                "id": "0000e4c4-0b0e-437f-b41d-bcfe7ebf7060",
                "createdDateTime": "2019-01-07T12:34:12Z",
                "lastActionDateTime": "2019-01-07T12:36:07Z",
                "status": "Running",
                "name": "Accuracy test"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "BadRequest",
                "message": "The request has been incorrect."
              }
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "409": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "NotFound",
                "message": "The specified entity cannot be found."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      }
    },
    "/datasets": {
      "get": {
        "tags": [
          "Custom Speech datasets for model adaptation:"
        ],
        "summary": "Gets a list of datasets for the authenticated subscription.",
        "operationId": "GetDatasets",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Dataset"
              }
            },
            "headers": {},
            "examples": {
              "application/json": [
                {
                  "dataImportKind": "Acoustic",
                  "lastActionDateTime": "2019-01-07T12:36:07Z",
                  "status": "Succeeded",
                  "id": "9d5f4100-5f8e-4dd6-bd83-9bbbf50d57f1",
                  "createdDateTime": "2019-01-07T12:34:12Z",
                  "locale": "en-US",
                  "name": "Acoustic dataset",
                  "properties": {
                    "AcceptedLines": "11",
                    "RejectedLines": "2",
                    "ReportUri": "https://www.example.org/AcousticData/6d52cb46-a6d8-4954-ba7e-1407a1bc2a4a?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=a324840f-37fa-4bbf-91a7-1ced1052bc3e"
                  }
                },
                {
                  "dataImportKind": "Pronunciation",
                  "lastActionDateTime": "2019-01-07T12:36:07Z",
                  "status": "Succeeded",
                  "id": "c0a2c730-19f7-4a78-9e0f-f8b6efa5f0a5",
                  "createdDateTime": "2019-01-07T12:34:12Z",
                  "locale": "en-US",
                  "name": "Pronunciation dataset",
                  "properties": {
                    "AcceptedLines": "11",
                    "RejectedLines": "2",
                    "ReportUri": "https://www.example.org/PronunciationData/71e831ef-ba18-4fbb-8559-cea56f98284f?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=5b69ed9e-e848-461b-8f4e-78851bc82f07"
                  }
                },
                {
                  "dataImportKind": "Language",
                  "lastActionDateTime": "2019-01-07T12:36:07Z",
                  "status": "Succeeded",
                  "id": "702d913a-8ba6-4f66-ad5c-897400b081fb",
                  "createdDateTime": "2019-01-07T12:34:12Z",
                  "locale": "en-US",
                  "name": "Language dataset",
                  "properties": {
                    "AcceptedLines": "11",
                    "RejectedLines": "2",
                    "ReportUri": "https://www.example.org/LanguageData/74be207a-22a3-4c24-b6c9-e51297d3d537?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=86eacb5b-f18e-4df4-a250-fcdcbc059c1b"
                  }
                }
              ]
            }
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      }
    },
    "/datasets/{id}": {
      "get": {
        "tags": [
          "Custom Speech datasets for model adaptation:"
        ],
        "summary": "Gets the dataset identified by the given ID.",
        "operationId": "GetDataset",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the dataset.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Dataset"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "dataImportKind": "Acoustic",
                "lastActionDateTime": "2019-01-07T12:36:07Z",
                "status": "Succeeded",
                "id": "9d5f4100-5f8e-4dd6-bd83-9bbbf50d57f1",
                "createdDateTime": "2019-01-07T12:34:12Z",
                "locale": "en-US",
                "name": "Acoustic dataset",
                "properties": {
                  "AcceptedLines": "11",
                  "RejectedLines": "2",
                  "ReportUri": "https://www.example.org/AcousticData/6d52cb46-a6d8-4954-ba7e-1407a1bc2a4a?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=a324840f-37fa-4bbf-91a7-1ced1052bc3e"
                }
              }
            }
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "NotFound",
                "message": "The specified entity cannot be found."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Custom Speech datasets for model adaptation:"
        ],
        "summary": "Deletes the specified dataset.",
        "operationId": "DeleteDataset",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the dataset.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "The dataset was successfully deleted.",
            "headers": {}
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "BadRequest",
                "message": "The request has been incorrect."
              }
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Custom Speech datasets for model adaptation:"
        ],
        "summary": "Updates the mutable details of the dataset identified by its ID.",
        "operationId": "UpdateDataset",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the dataset.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "datasetUpdate",
            "in": "body",
            "description": "The updated values for the dataset.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatasetUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Dataset"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "dataImportKind": "Acoustic",
                "lastActionDateTime": "2019-01-07T12:36:07Z",
                "status": "Succeeded",
                "id": "9d5f4100-5f8e-4dd6-bd83-9bbbf50d57f1",
                "createdDateTime": "2019-01-07T12:34:12Z",
                "locale": "en-US",
                "name": "Acoustic dataset",
                "properties": {
                  "AcceptedLines": "11",
                  "RejectedLines": "2",
                  "ReportUri": "https://www.example.org/AcousticData/6d52cb46-a6d8-4954-ba7e-1407a1bc2a4a?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=a324840f-37fa-4bbf-91a7-1ced1052bc3e"
                }
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "BadRequest",
                "message": "The request has been incorrect."
              }
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "409": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "NotFound",
                "message": "The specified entity cannot be found."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      }
    },
    "/datasets/locales": {
      "get": {
        "tags": [
          "Custom Speech datasets for model adaptation:"
        ],
        "summary": "Gets a list of supported locales for data imports.",
        "operationId": "GetSupportedLocalesForDatasets",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "title": "IReadOnlyDictionary`2",
              "type": "object",
              "properties": {
                "None": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "Language": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "Acoustic": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "Pronunciation": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "AudioFiles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "headers": {},
            "examples": {
              "application/json": {
                "Acoustic": [
                  "en-US"
                ],
                "Language": [
                  "en-US",
                  "de-DE"
                ],
                "Pronunciation": [
                  "en-US"
                ]
              }
            }
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      }
    },
    "/datasets/upload": {
      "post": {
        "tags": [
          "Custom Speech datasets for model adaptation:"
        ],
        "summary": "Uploads data and creates a new dataset.",
        "operationId": "UploadDataset",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "The name of this data import (always add this string for any import).",
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "Optional description of this data import.",
            "type": "string"
          },
          {
            "name": "locale",
            "in": "formData",
            "description": "The locale of this data import (always add this string for any import).",
            "type": "string"
          },
          {
            "name": "dataImportKind",
            "in": "formData",
            "description": "The kind of the data import (always add this string for any import).",
            "type": "string",
            "enum": [
              "None",
              "Language",
              "Acoustic",
              "Pronunciation",
              "AudioFiles"
            ]
          },
          {
            "name": "properties",
            "in": "formData",
            "description": "Optional properties of this data import (json serialized object with key/values, where all values must be strings)",
            "type": "string"
          },
          {
            "name": "audiodata",
            "in": "formData",
            "description": "A zip file containing the audio data (this and the audio archive file for acoustic data imports).",
            "type": "file"
          },
          {
            "name": "transcriptions",
            "in": "formData",
            "description": "A text file containing the transcriptions for the audio data (this and the transcriptions file for acoustic data imports).",
            "type": "file"
          },
          {
            "name": "languagedata",
            "in": "formData",
            "description": "A text file containing the language or pronunciation data (only this file for language data imports).",
            "type": "file"
          }
        ],
        "responses": {
          "202": {
            "description": "The response contains the location of the entity as header.",
            "headers": {
              "Location": {
                "description": "The location of the created resource.",
                "type": "string",
                "format": "uri"
              },
              "Retry-After": {
                "description": "The minimum number of seconds to wait before accessing the resource created in this operation.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "BadRequest",
                "message": "The request has been incorrect."
              }
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "415": {
            "description": "In case the media type of a file part is not supported.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "UnsupportedMediaType",
                "message": "The request entity's media type 'application/xml' is not supported for this resource."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/endpoints": {
      "get": {
        "tags": [
          "Custom Speech endpoints:"
        ],
        "summary": "Gets the list of endpoints for the authenticated subscription.",
        "operationId": "GetEndpoints",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Endpoint"
              }
            },
            "headers": {},
            "examples": {
              "application/json": [
                {
                  "endpointKind": "SpeechRecognition",
                  "models": [
                    {
                      "modelKind": "Acoustic",
                      "datasets": [
                        {
                          "dataImportKind": "Acoustic",
                          "lastActionDateTime": "2019-01-07T12:36:07Z",
                          "status": "Succeeded",
                          "id": "9d5f4100-5f8e-4dd6-bd83-9bbbf50d57f1",
                          "createdDateTime": "2019-01-07T12:34:12Z",
                          "locale": "en-US",
                          "name": "Acoustic dataset",
                          "properties": {
                            "AcceptedLines": "11",
                            "RejectedLines": "2",
                            "ReportUri": "https://www.example.org/AcousticData/6d52cb46-a6d8-4954-ba7e-1407a1bc2a4a?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=a324840f-37fa-4bbf-91a7-1ced1052bc3e"
                          }
                        }
                      ],
                      "lastActionDateTime": "2019-01-07T12:36:07Z",
                      "status": "Running",
                      "id": "827712a5-f942-4997-91c3-7c6cde35600b",
                      "createdDateTime": "2019-01-07T12:34:12Z",
                      "locale": "en-US",
                      "name": "Acoustic model",
                      "description": "Example for an acoustic model"
                    },
                    {
                      "modelKind": "Language",
                      "baseModel": {
                        "modelKind": "AcousticAndLanguage",
                        "datasets": [],
                        "lastActionDateTime": "2019-01-07T12:36:07Z",
                        "status": "Succeeded",
                        "id": "b28b9e52-395c-4d1b-b5a7-2c6fc4dd5715",
                        "createdDateTime": "2019-01-07T12:34:12Z",
                        "locale": "en-US",
                        "name": "Base model",
                        "description": "Base model description"
                      },
                      "datasets": [
                        {
                          "dataImportKind": "Language",
                          "lastActionDateTime": "2019-01-07T12:36:07Z",
                          "status": "Succeeded",
                          "id": "702d913a-8ba6-4f66-ad5c-897400b081fb",
                          "createdDateTime": "2019-01-07T12:34:12Z",
                          "locale": "en-US",
                          "name": "Language dataset",
                          "properties": {
                            "AcceptedLines": "11",
                            "RejectedLines": "2",
                            "ReportUri": "https://www.example.org/LanguageData/74be207a-22a3-4c24-b6c9-e51297d3d537?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=86eacb5b-f18e-4df4-a250-fcdcbc059c1b"
                          }
                        }
                      ],
                      "lastActionDateTime": "2019-01-07T12:36:07Z",
                      "status": "Running",
                      "id": "ff3c2797-f5f0-4122-9712-83ee87a0abb8",
                      "createdDateTime": "2019-01-07T12:34:12Z",
                      "locale": "en-US",
                      "name": "Language model",
                      "description": "This is a language model"
                    }
                  ],
                  "concurrentRecognitions": 1,
                  "contentLoggingEnabled": false,
                  "endpointUrls": {
                    "UniversalWebSocketInteractive": "wss://westus.stt.speech.microsoft.com/speech/recognition/interactive/cognitiveservices/v1?cid=afa0669c-a01e-4693-ae3a-93baf40f26d6"
                  },
                  "lastActionDateTime": "2019-01-07T12:36:07Z",
                  "status": "Succeeded",
                  "id": "8fa0669c-a01e-4693-ae3a-93baf40f26d9",
                  "createdDateTime": "2019-01-07T12:34:12Z",
                  "locale": "en-US",
                  "name": "Speech endpoint",
                  "description": "Example for speech endpoint"
                }
              ]
            }
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      },
      "post": {
        "tags": [
          "Custom Speech endpoints:"
        ],
        "summary": "Creates a new endpoint.",
        "operationId": "CreateEndpoint",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "endpointDefinition",
            "in": "body",
            "description": "The details of the endpoint.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SpeechEndpointDefinition"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The response contains the location of the entity as header.",
            "headers": {
              "Location": {
                "description": "The location of the created resource.",
                "type": "string",
                "format": "uri"
              },
              "Retry-After": {
                "description": "The minimum number of seconds to wait before accessing the resource created in this operation.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "BadRequest",
                "message": "The request has been incorrect."
              }
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/endpoints/{id}": {
      "get": {
        "tags": [
          "Custom Speech endpoints:"
        ],
        "summary": "Gets the endpoint identified by the given ID.",
        "operationId": "GetEndpoint",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the endpoint.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Endpoint"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "endpointKind": "SpeechRecognition",
                "models": [
                  {
                    "modelKind": "Acoustic",
                    "datasets": [
                      {
                        "dataImportKind": "Acoustic",
                        "lastActionDateTime": "2019-01-07T12:36:07Z",
                        "status": "Succeeded",
                        "id": "9d5f4100-5f8e-4dd6-bd83-9bbbf50d57f1",
                        "createdDateTime": "2019-01-07T12:34:12Z",
                        "locale": "en-US",
                        "name": "Acoustic dataset",
                        "properties": {
                          "AcceptedLines": "11",
                          "RejectedLines": "2",
                          "ReportUri": "https://www.example.org/AcousticData/6d52cb46-a6d8-4954-ba7e-1407a1bc2a4a?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=a324840f-37fa-4bbf-91a7-1ced1052bc3e"
                        }
                      }
                    ],
                    "lastActionDateTime": "2019-01-07T12:36:07Z",
                    "status": "Running",
                    "id": "827712a5-f942-4997-91c3-7c6cde35600b",
                    "createdDateTime": "2019-01-07T12:34:12Z",
                    "locale": "en-US",
                    "name": "Acoustic model",
                    "description": "Example for an acoustic model"
                  },
                  {
                    "modelKind": "Language",
                    "baseModel": {
                      "modelKind": "AcousticAndLanguage",
                      "datasets": [],
                      "lastActionDateTime": "2019-01-07T12:36:07Z",
                      "status": "Succeeded",
                      "id": "b28b9e52-395c-4d1b-b5a7-2c6fc4dd5715",
                      "createdDateTime": "2019-01-07T12:34:12Z",
                      "locale": "en-US",
                      "name": "Base model",
                      "description": "Base model description"
                    },
                    "datasets": [
                      {
                        "dataImportKind": "Language",
                        "lastActionDateTime": "2019-01-07T12:36:07Z",
                        "status": "Succeeded",
                        "id": "702d913a-8ba6-4f66-ad5c-897400b081fb",
                        "createdDateTime": "2019-01-07T12:34:12Z",
                        "locale": "en-US",
                        "name": "Language dataset",
                        "properties": {
                          "AcceptedLines": "11",
                          "RejectedLines": "2",
                          "ReportUri": "https://www.example.org/LanguageData/74be207a-22a3-4c24-b6c9-e51297d3d537?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=86eacb5b-f18e-4df4-a250-fcdcbc059c1b"
                        }
                      }
                    ],
                    "lastActionDateTime": "2019-01-07T12:36:07Z",
                    "status": "Running",
                    "id": "ff3c2797-f5f0-4122-9712-83ee87a0abb8",
                    "createdDateTime": "2019-01-07T12:34:12Z",
                    "locale": "en-US",
                    "name": "Language model",
                    "description": "This is a language model"
                  }
                ],
                "concurrentRecognitions": 1,
                "contentLoggingEnabled": false,
                "endpointUrls": {
                  "UniversalWebSocketInteractive": "wss://westus.stt.speech.microsoft.com/speech/recognition/interactive/cognitiveservices/v1?cid=afa0669c-a01e-4693-ae3a-93baf40f26d6"
                },
                "lastActionDateTime": "2019-01-07T12:36:07Z",
                "status": "Succeeded",
                "id": "8fa0669c-a01e-4693-ae3a-93baf40f26d9",
                "createdDateTime": "2019-01-07T12:34:12Z",
                "locale": "en-US",
                "name": "Speech endpoint",
                "description": "Example for speech endpoint"
              }
            }
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "NotFound",
                "message": "The specified entity cannot be found."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Custom Speech endpoints:"
        ],
        "summary": "Deletes the endpoint identified by the given ID.",
        "operationId": "DeleteEndpoint",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the endpoint.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "The model endpoint was successfully deleted.",
            "headers": {}
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Custom Speech endpoints:"
        ],
        "summary": "Updates the metadata of the endpoint identified by the given ID.",
        "operationId": "UpdateEndpoint",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the endpoint.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "endpointUpdate",
            "in": "body",
            "description": "The updated values for the endpoint.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndpointMetadataUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Endpoint"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "endpointKind": "SpeechRecognition",
                "models": [
                  {
                    "modelKind": "Acoustic",
                    "datasets": [
                      {
                        "dataImportKind": "Acoustic",
                        "lastActionDateTime": "2019-01-07T12:36:07Z",
                        "status": "Succeeded",
                        "id": "9d5f4100-5f8e-4dd6-bd83-9bbbf50d57f1",
                        "createdDateTime": "2019-01-07T12:34:12Z",
                        "locale": "en-US",
                        "name": "Acoustic dataset",
                        "properties": {
                          "AcceptedLines": "11",
                          "RejectedLines": "2",
                          "ReportUri": "https://www.example.org/AcousticData/6d52cb46-a6d8-4954-ba7e-1407a1bc2a4a?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=a324840f-37fa-4bbf-91a7-1ced1052bc3e"
                        }
                      }
                    ],
                    "lastActionDateTime": "2019-01-07T12:36:07Z",
                    "status": "Running",
                    "id": "827712a5-f942-4997-91c3-7c6cde35600b",
                    "createdDateTime": "2019-01-07T12:34:12Z",
                    "locale": "en-US",
                    "name": "Acoustic model",
                    "description": "Example for an acoustic model"
                  },
                  {
                    "modelKind": "Language",
                    "baseModel": {
                      "modelKind": "AcousticAndLanguage",
                      "datasets": [],
                      "lastActionDateTime": "2019-01-07T12:36:07Z",
                      "status": "Succeeded",
                      "id": "b28b9e52-395c-4d1b-b5a7-2c6fc4dd5715",
                      "createdDateTime": "2019-01-07T12:34:12Z",
                      "locale": "en-US",
                      "name": "Base model",
                      "description": "Base model description"
                    },
                    "datasets": [
                      {
                        "dataImportKind": "Language",
                        "lastActionDateTime": "2019-01-07T12:36:07Z",
                        "status": "Succeeded",
                        "id": "702d913a-8ba6-4f66-ad5c-897400b081fb",
                        "createdDateTime": "2019-01-07T12:34:12Z",
                        "locale": "en-US",
                        "name": "Language dataset",
                        "properties": {
                          "AcceptedLines": "11",
                          "RejectedLines": "2",
                          "ReportUri": "https://www.example.org/LanguageData/74be207a-22a3-4c24-b6c9-e51297d3d537?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=86eacb5b-f18e-4df4-a250-fcdcbc059c1b"
                        }
                      }
                    ],
                    "lastActionDateTime": "2019-01-07T12:36:07Z",
                    "status": "Running",
                    "id": "ff3c2797-f5f0-4122-9712-83ee87a0abb8",
                    "createdDateTime": "2019-01-07T12:34:12Z",
                    "locale": "en-US",
                    "name": "Language model",
                    "description": "This is a language model"
                  }
                ],
                "concurrentRecognitions": 1,
                "contentLoggingEnabled": false,
                "endpointUrls": {
                  "UniversalWebSocketInteractive": "wss://westus.stt.speech.microsoft.com/speech/recognition/interactive/cognitiveservices/v1?cid=afa0669c-a01e-4693-ae3a-93baf40f26d6"
                },
                "lastActionDateTime": "2019-01-07T12:36:07Z",
                "status": "Succeeded",
                "id": "8fa0669c-a01e-4693-ae3a-93baf40f26d9",
                "createdDateTime": "2019-01-07T12:34:12Z",
                "locale": "en-US",
                "name": "Speech endpoint",
                "description": "Example for speech endpoint"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "BadRequest",
                "message": "The request has been incorrect."
              }
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "409": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "NotFound",
                "message": "The specified entity cannot be found."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      }
    },
    "/endpoints/locales": {
      "get": {
        "tags": [
          "Custom Speech endpoints:"
        ],
        "summary": "Gets a list of supported locales for endpoint creations.",
        "operationId": "GetSupportedLocalesForEndpoints",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "headers": {},
            "examples": {
              "application/json": [
                "en-US",
                "de-DE"
              ]
            }
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      }
    },
    "/endpoints/{endpointId}/data": {
      "get": {
        "tags": [
          "Custom Speech endpoints:"
        ],
        "summary": "Gets the list of endpoint data export tasks for the authenticated user.",
        "operationId": "GetEndpointDataExports",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "The identifier of the endpoint.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EndpointData"
              }
            },
            "headers": {},
            "examples": {
              "application/json": [
                {
                  "startDate": "2018-12-08T00:00:00Z",
                  "endDate": "2019-01-07T00:00:00Z",
                  "dataUrl": "https://contoso.com/",
                  "id": "9cf1e320-41b1-41e6-bdd3-8fb27cb2c90a",
                  "createdDateTime": "2019-01-07T12:34:12Z",
                  "lastActionDateTime": "2019-01-07T12:36:07Z",
                  "status": "Succeeded"
                }
              ]
            }
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "NotFound",
                "message": "The specified entity cannot be found."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      },
      "post": {
        "tags": [
          "Custom Speech endpoints:"
        ],
        "summary": "Create a new endpoint data export task.",
        "operationId": "CreateEndpointDataExport",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "The identifier of the endpoint.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "endpointDataDefinition",
            "in": "body",
            "description": "The details of the new endpoint data export.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndpointDataDefinition"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The response contains the id of the endpoint data export task.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Location": {
                "description": "The location of the created resource.",
                "type": "string",
                "format": "uri"
              },
              "Retry-After": {
                "description": "The minimum number of seconds to wait before accessing the resource created in this operation.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "BadRequest",
                "message": "The request has been incorrect."
              }
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "NotFound",
                "message": "The specified entity cannot be found."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "delete": {
        "tags": [
          "Custom Speech endpoints:"
        ],
        "summary": "Deletes the transcriptions and captured audio files associated with the endpoint identified by the given ID.",
        "description": "Deletion will happen in the background and can take up to a day.",
        "operationId": "DeleteEndpointData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "The identifier of the endpoint.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "The endpoint data export tasks were successfully deleted.",
            "headers": {}
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      }
    },
    "/endpoints/{endpointId}/data/{id}": {
      "get": {
        "tags": [
          "Custom Speech endpoints:"
        ],
        "summary": "Gets the specified endpoint data export task for the authenticated user.",
        "operationId": "GetEndpointDataExport",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "The identifier of the endpoint.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the data export.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EndpointData"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "startDate": "2018-12-08T00:00:00Z",
                "endDate": "2019-01-07T00:00:00Z",
                "dataUrl": "https://contoso.com/",
                "id": "9cf1e320-41b1-41e6-bdd3-8fb27cb2c90a",
                "createdDateTime": "2019-01-07T12:34:12Z",
                "lastActionDateTime": "2019-01-07T12:36:07Z",
                "status": "Succeeded"
              }
            }
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "NotFound",
                "message": "The specified entity cannot be found."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Custom Speech endpoints:"
        ],
        "summary": "Deletes the endpoint data export task identified by the given ID.",
        "operationId": "DeleteEndpointDataExport",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "The identifier of the endpoint.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the endpoint data export.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "The endpoint data export task was successfully deleted.",
            "headers": {}
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "BadRequest",
                "message": "The request has been incorrect."
              }
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      }
    },
    "/models": {
      "get": {
        "tags": [
          "Custom Speech models:"
        ],
        "summary": "Gets the list of models for the authenticated subscription.",
        "operationId": "GetModels",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Model"
              }
            },
            "headers": {},
            "examples": {
              "application/json": [
                {
                  "modelKind": "Language",
                  "baseModel": {
                    "modelKind": "AcousticAndLanguage",
                    "datasets": [],
                    "lastActionDateTime": "2019-01-07T12:36:07Z",
                    "status": "Succeeded",
                    "id": "b28b9e52-395c-4d1b-b5a7-2c6fc4dd5715",
                    "createdDateTime": "2019-01-07T12:34:12Z",
                    "locale": "en-US",
                    "name": "Base model",
                    "description": "Base model description"
                  },
                  "datasets": [
                    {
                      "dataImportKind": "Language",
                      "lastActionDateTime": "2019-01-07T12:36:07Z",
                      "status": "Succeeded",
                      "id": "702d913a-8ba6-4f66-ad5c-897400b081fb",
                      "createdDateTime": "2019-01-07T12:34:12Z",
                      "locale": "en-US",
                      "name": "Language dataset",
                      "properties": {
                        "AcceptedLines": "11",
                        "RejectedLines": "2",
                        "ReportUri": "https://www.example.org/LanguageData/74be207a-22a3-4c24-b6c9-e51297d3d537?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=86eacb5b-f18e-4df4-a250-fcdcbc059c1b"
                      }
                    }
                  ],
                  "lastActionDateTime": "2019-01-07T12:36:07Z",
                  "status": "Running",
                  "id": "ff3c2797-f5f0-4122-9712-83ee87a0abb8",
                  "createdDateTime": "2019-01-07T12:34:12Z",
                  "locale": "en-US",
                  "name": "Language model",
                  "description": "This is a language model"
                },
                {
                  "modelKind": "Acoustic",
                  "datasets": [
                    {
                      "dataImportKind": "Acoustic",
                      "lastActionDateTime": "2019-01-07T12:36:07Z",
                      "status": "Succeeded",
                      "id": "9d5f4100-5f8e-4dd6-bd83-9bbbf50d57f1",
                      "createdDateTime": "2019-01-07T12:34:12Z",
                      "locale": "en-US",
                      "name": "Acoustic dataset",
                      "properties": {
                        "AcceptedLines": "11",
                        "RejectedLines": "2",
                        "ReportUri": "https://www.example.org/AcousticData/6d52cb46-a6d8-4954-ba7e-1407a1bc2a4a?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=a324840f-37fa-4bbf-91a7-1ced1052bc3e"
                      }
                    }
                  ],
                  "lastActionDateTime": "2019-01-07T12:36:07Z",
                  "status": "Running",
                  "id": "827712a5-f942-4997-91c3-7c6cde35600b",
                  "createdDateTime": "2019-01-07T12:34:12Z",
                  "locale": "en-US",
                  "name": "Acoustic model",
                  "description": "Example for an acoustic model"
                }
              ]
            }
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      },
      "post": {
        "tags": [
          "Custom Speech models:"
        ],
        "summary": "Creates a new model.",
        "operationId": "CreateModel",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "modelDefinition",
            "in": "body",
            "description": "The details of the new model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SpeechModelDefinition"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The response contains the location of the entity as header.",
            "headers": {
              "Location": {
                "description": "The location of the created resource.",
                "type": "string",
                "format": "uri"
              },
              "Retry-After": {
                "description": "The minimum number of seconds to wait before accessing the resource created in this operation.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "BadRequest",
                "message": "The request has been incorrect."
              }
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/models/{id}": {
      "get": {
        "tags": [
          "Custom Speech models:"
        ],
        "summary": "Gets the model identified by the given ID.",
        "operationId": "GetModel",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the model.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Model"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "modelKind": "Language",
                "baseModel": {
                  "modelKind": "AcousticAndLanguage",
                  "datasets": [],
                  "lastActionDateTime": "2019-01-07T12:36:07Z",
                  "status": "Succeeded",
                  "id": "b28b9e52-395c-4d1b-b5a7-2c6fc4dd5715",
                  "createdDateTime": "2019-01-07T12:34:12Z",
                  "locale": "en-US",
                  "name": "Base model",
                  "description": "Base model description"
                },
                "datasets": [
                  {
                    "dataImportKind": "Language",
                    "lastActionDateTime": "2019-01-07T12:36:07Z",
                    "status": "Succeeded",
                    "id": "702d913a-8ba6-4f66-ad5c-897400b081fb",
                    "createdDateTime": "2019-01-07T12:34:12Z",
                    "locale": "en-US",
                    "name": "Language dataset",
                    "properties": {
                      "AcceptedLines": "11",
                      "RejectedLines": "2",
                      "ReportUri": "https://www.example.org/LanguageData/74be207a-22a3-4c24-b6c9-e51297d3d537?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=86eacb5b-f18e-4df4-a250-fcdcbc059c1b"
                    }
                  }
                ],
                "lastActionDateTime": "2019-01-07T12:36:07Z",
                "status": "Running",
                "id": "ff3c2797-f5f0-4122-9712-83ee87a0abb8",
                "createdDateTime": "2019-01-07T12:34:12Z",
                "locale": "en-US",
                "name": "Language model",
                "description": "This is a language model"
              }
            }
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "NotFound",
                "message": "The specified entity cannot be found."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Custom Speech models:"
        ],
        "summary": "Deletes the model identified by the given ID.",
        "operationId": "DeleteModel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the model.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "The model was successfully deleted.",
            "headers": {}
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "BadRequest",
                "message": "The request has been incorrect."
              }
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Custom Speech models:"
        ],
        "summary": "Updates the metadata of the model identified by the given ID.",
        "operationId": "UpdateModel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the model.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "modelUpdate",
            "in": "body",
            "description": "The updated values for the model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Model"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "modelKind": "Language",
                "baseModel": {
                  "modelKind": "AcousticAndLanguage",
                  "datasets": [],
                  "lastActionDateTime": "2019-01-07T12:36:07Z",
                  "status": "Succeeded",
                  "id": "b28b9e52-395c-4d1b-b5a7-2c6fc4dd5715",
                  "createdDateTime": "2019-01-07T12:34:12Z",
                  "locale": "en-US",
                  "name": "Base model",
                  "description": "Base model description"
                },
                "datasets": [
                  {
                    "dataImportKind": "Language",
                    "lastActionDateTime": "2019-01-07T12:36:07Z",
                    "status": "Succeeded",
                    "id": "702d913a-8ba6-4f66-ad5c-897400b081fb",
                    "createdDateTime": "2019-01-07T12:34:12Z",
                    "locale": "en-US",
                    "name": "Language dataset",
                    "properties": {
                      "AcceptedLines": "11",
                      "RejectedLines": "2",
                      "ReportUri": "https://www.example.org/LanguageData/74be207a-22a3-4c24-b6c9-e51297d3d537?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=86eacb5b-f18e-4df4-a250-fcdcbc059c1b"
                    }
                  }
                ],
                "lastActionDateTime": "2019-01-07T12:36:07Z",
                "status": "Running",
                "id": "ff3c2797-f5f0-4122-9712-83ee87a0abb8",
                "createdDateTime": "2019-01-07T12:34:12Z",
                "locale": "en-US",
                "name": "Language model",
                "description": "This is a language model"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "BadRequest",
                "message": "The request has been incorrect."
              }
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "409": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "NotFound",
                "message": "The specified entity cannot be found."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      }
    },
    "/models/locales": {
      "get": {
        "tags": [
          "Custom Speech models:"
        ],
        "summary": "Gets a list of supported locales for model adaptation.",
        "operationId": "GetSupportedLocalesForModels",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "title": "IReadOnlyDictionary`2",
              "type": "object",
              "properties": {
                "None": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "Acoustic": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "Language": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "AcousticAndLanguage": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "Sentiment": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "Diarization": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "PronunciationScore": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "headers": {},
            "examples": {
              "application/json": {
                "Acoustic": [
                  "en-US"
                ],
                "Language": [
                  "en-US",
                  "de-DE"
                ]
              }
            }
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      }
    },
    "/transcriptions/{id}": {
      "get": {
        "tags": [
          "Custom Speech transcriptions:"
        ],
        "summary": "Gets the transcription identified by the given ID.",
        "operationId": "GetTranscription",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the transcription.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Transcription"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "recordingsUrl": "https://contoso.com/",
                "reportFileUrl": "https://contoso.com/",
                "resultsUrls": {
                  "channel_0": "https://contoso.com/audiofile1.wav?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=6c044930-3926-4be4-be76-f72832e6600c",
                  "channel_1": "https://contoso.com/audiofile2.wav?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=3e0163f1-0029-4d4a-988d-3fba7d7c53b5"
                },
                "models": [
                  {
                    "modelKind": "Acoustic",
                    "datasets": [
                      {
                        "dataImportKind": "Acoustic",
                        "lastActionDateTime": "2019-01-07T12:36:07Z",
                        "status": "Succeeded",
                        "id": "9d5f4100-5f8e-4dd6-bd83-9bbbf50d57f1",
                        "createdDateTime": "2019-01-07T12:34:12Z",
                        "locale": "en-US",
                        "name": "Acoustic dataset",
                        "properties": {
                          "AcceptedLines": "11",
                          "RejectedLines": "2",
                          "ReportUri": "https://www.example.org/AcousticData/6d52cb46-a6d8-4954-ba7e-1407a1bc2a4a?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=a324840f-37fa-4bbf-91a7-1ced1052bc3e"
                        }
                      }
                    ],
                    "lastActionDateTime": "2019-01-07T12:36:07Z",
                    "status": "Running",
                    "id": "827712a5-f942-4997-91c3-7c6cde35600b",
                    "createdDateTime": "2019-01-07T12:34:12Z",
                    "locale": "en-US",
                    "name": "Acoustic model",
                    "description": "Example for an acoustic model"
                  },
                  {
                    "modelKind": "Language",
                    "baseModel": {
                      "modelKind": "AcousticAndLanguage",
                      "datasets": [],
                      "lastActionDateTime": "2019-01-07T12:36:07Z",
                      "status": "Succeeded",
                      "id": "b28b9e52-395c-4d1b-b5a7-2c6fc4dd5715",
                      "createdDateTime": "2019-01-07T12:34:12Z",
                      "locale": "en-US",
                      "name": "Base model",
                      "description": "Base model description"
                    },
                    "datasets": [
                      {
                        "dataImportKind": "Language",
                        "lastActionDateTime": "2019-01-07T12:36:07Z",
                        "status": "Succeeded",
                        "id": "702d913a-8ba6-4f66-ad5c-897400b081fb",
                        "createdDateTime": "2019-01-07T12:34:12Z",
                        "locale": "en-US",
                        "name": "Language dataset",
                        "properties": {
                          "AcceptedLines": "11",
                          "RejectedLines": "2",
                          "ReportUri": "https://www.example.org/LanguageData/74be207a-22a3-4c24-b6c9-e51297d3d537?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=86eacb5b-f18e-4df4-a250-fcdcbc059c1b"
                        }
                      }
                    ],
                    "lastActionDateTime": "2019-01-07T12:36:07Z",
                    "status": "Running",
                    "id": "ff3c2797-f5f0-4122-9712-83ee87a0abb8",
                    "createdDateTime": "2019-01-07T12:34:12Z",
                    "locale": "en-US",
                    "name": "Language model",
                    "description": "This is a language model"
                  }
                ],
                "lastActionDateTime": "2019-01-07T12:36:07Z",
                "status": "Succeeded",
                "id": "9891c965-bb32-4880-b14b-6d44efb158f3",
                "createdDateTime": "2019-01-07T12:34:12Z",
                "locale": "en-US",
                "name": "Transcription using locale en-US",
                "properties": {
                  "ProfanityFilterMode": "Masked",
                  "PunctuationMode": "DictatedAndAutomatic",
                  "Duration": "00:00:42"
                }
              }
            }
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "NotFound",
                "message": "The specified entity cannot be found."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Custom Speech transcriptions:"
        ],
        "summary": "Deletes the specified transcription task.",
        "operationId": "DeleteTranscription",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the transcription.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "The transcription task was successfully deleted.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {}
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "BadRequest",
                "message": "The request has been incorrect."
              }
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Custom Speech transcriptions:"
        ],
        "summary": "Updates the mutable details of the transcription identified by its ID.",
        "operationId": "UpdateTranscription",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the transcription.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "transcriptionUpdate",
            "in": "body",
            "description": "The updated values for the transcription.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TranscriptionUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Transcription"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "recordingsUrl": "https://contoso.com/",
                "reportFileUrl": "https://contoso.com/",
                "resultsUrls": {
                  "channel_0": "https://contoso.com/audiofile1.wav?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=6c044930-3926-4be4-be76-f72832e6600c",
                  "channel_1": "https://contoso.com/audiofile2.wav?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=3e0163f1-0029-4d4a-988d-3fba7d7c53b5"
                },
                "models": [
                  {
                    "modelKind": "Acoustic",
                    "datasets": [
                      {
                        "dataImportKind": "Acoustic",
                        "lastActionDateTime": "2019-01-07T12:36:07Z",
                        "status": "Succeeded",
                        "id": "9d5f4100-5f8e-4dd6-bd83-9bbbf50d57f1",
                        "createdDateTime": "2019-01-07T12:34:12Z",
                        "locale": "en-US",
                        "name": "Acoustic dataset",
                        "properties": {
                          "AcceptedLines": "11",
                          "RejectedLines": "2",
                          "ReportUri": "https://www.example.org/AcousticData/6d52cb46-a6d8-4954-ba7e-1407a1bc2a4a?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=a324840f-37fa-4bbf-91a7-1ced1052bc3e"
                        }
                      }
                    ],
                    "lastActionDateTime": "2019-01-07T12:36:07Z",
                    "status": "Running",
                    "id": "827712a5-f942-4997-91c3-7c6cde35600b",
                    "createdDateTime": "2019-01-07T12:34:12Z",
                    "locale": "en-US",
                    "name": "Acoustic model",
                    "description": "Example for an acoustic model"
                  },
                  {
                    "modelKind": "Language",
                    "baseModel": {
                      "modelKind": "AcousticAndLanguage",
                      "datasets": [],
                      "lastActionDateTime": "2019-01-07T12:36:07Z",
                      "status": "Succeeded",
                      "id": "b28b9e52-395c-4d1b-b5a7-2c6fc4dd5715",
                      "createdDateTime": "2019-01-07T12:34:12Z",
                      "locale": "en-US",
                      "name": "Base model",
                      "description": "Base model description"
                    },
                    "datasets": [
                      {
                        "dataImportKind": "Language",
                        "lastActionDateTime": "2019-01-07T12:36:07Z",
                        "status": "Succeeded",
                        "id": "702d913a-8ba6-4f66-ad5c-897400b081fb",
                        "createdDateTime": "2019-01-07T12:34:12Z",
                        "locale": "en-US",
                        "name": "Language dataset",
                        "properties": {
                          "AcceptedLines": "11",
                          "RejectedLines": "2",
                          "ReportUri": "https://www.example.org/LanguageData/74be207a-22a3-4c24-b6c9-e51297d3d537?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=86eacb5b-f18e-4df4-a250-fcdcbc059c1b"
                        }
                      }
                    ],
                    "lastActionDateTime": "2019-01-07T12:36:07Z",
                    "status": "Running",
                    "id": "ff3c2797-f5f0-4122-9712-83ee87a0abb8",
                    "createdDateTime": "2019-01-07T12:34:12Z",
                    "locale": "en-US",
                    "name": "Language model",
                    "description": "This is a language model"
                  }
                ],
                "lastActionDateTime": "2019-01-07T12:36:07Z",
                "status": "Succeeded",
                "id": "9891c965-bb32-4880-b14b-6d44efb158f3",
                "createdDateTime": "2019-01-07T12:34:12Z",
                "locale": "en-US",
                "name": "Transcription using locale en-US",
                "properties": {
                  "ProfanityFilterMode": "Masked",
                  "PunctuationMode": "DictatedAndAutomatic",
                  "Duration": "00:00:42"
                }
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "BadRequest",
                "message": "The request has been incorrect."
              }
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "409": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "NotFound",
                "message": "The specified entity cannot be found."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      }
    },
    "/transcriptions/locales": {
      "get": {
        "tags": [
          "Custom Speech transcriptions:"
        ],
        "summary": "Gets a list of supported locales for offline transcriptions.",
        "operationId": "GetSupportedLocalesForTranscriptions",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "headers": {},
            "examples": {
              "application/json": [
                "en-US",
                "de-DE"
              ]
            }
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      }
    },
    "/transcriptions": {
      "get": {
        "tags": [
          "Custom Speech transcriptions:"
        ],
        "summary": "Gets a list of transcriptions for the authenticated subscription.",
        "operationId": "GetTranscriptions",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "Number of transcriptions that will be skipped.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "take",
            "in": "query",
            "description": "Number of transcriptions that will be included after skipping.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Transcription"
              }
            },
            "headers": {},
            "examples": {
              "application/json": [
                {
                  "recordingsUrl": "https://contoso.com/",
                  "reportFileUrl": "https://contoso.com/",
                  "resultsUrls": {
                    "channel_0": "https://contoso.com/audiofile1.wav?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=6c044930-3926-4be4-be76-f72832e6600c",
                    "channel_1": "https://contoso.com/audiofile2.wav?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=3e0163f1-0029-4d4a-988d-3fba7d7c53b5"
                  },
                  "models": [
                    {
                      "modelKind": "Acoustic",
                      "datasets": [
                        {
                          "dataImportKind": "Acoustic",
                          "lastActionDateTime": "2019-01-07T12:36:07Z",
                          "status": "Succeeded",
                          "id": "9d5f4100-5f8e-4dd6-bd83-9bbbf50d57f1",
                          "createdDateTime": "2019-01-07T12:34:12Z",
                          "locale": "en-US",
                          "name": "Acoustic dataset",
                          "properties": {
                            "AcceptedLines": "11",
                            "RejectedLines": "2",
                            "ReportUri": "https://www.example.org/AcousticData/6d52cb46-a6d8-4954-ba7e-1407a1bc2a4a?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=a324840f-37fa-4bbf-91a7-1ced1052bc3e"
                          }
                        }
                      ],
                      "lastActionDateTime": "2019-01-07T12:36:07Z",
                      "status": "Running",
                      "id": "827712a5-f942-4997-91c3-7c6cde35600b",
                      "createdDateTime": "2019-01-07T12:34:12Z",
                      "locale": "en-US",
                      "name": "Acoustic model",
                      "description": "Example for an acoustic model"
                    },
                    {
                      "modelKind": "Language",
                      "baseModel": {
                        "modelKind": "AcousticAndLanguage",
                        "datasets": [],
                        "lastActionDateTime": "2019-01-07T12:36:07Z",
                        "status": "Succeeded",
                        "id": "b28b9e52-395c-4d1b-b5a7-2c6fc4dd5715",
                        "createdDateTime": "2019-01-07T12:34:12Z",
                        "locale": "en-US",
                        "name": "Base model",
                        "description": "Base model description"
                      },
                      "datasets": [
                        {
                          "dataImportKind": "Language",
                          "lastActionDateTime": "2019-01-07T12:36:07Z",
                          "status": "Succeeded",
                          "id": "702d913a-8ba6-4f66-ad5c-897400b081fb",
                          "createdDateTime": "2019-01-07T12:34:12Z",
                          "locale": "en-US",
                          "name": "Language dataset",
                          "properties": {
                            "AcceptedLines": "11",
                            "RejectedLines": "2",
                            "ReportUri": "https://www.example.org/LanguageData/74be207a-22a3-4c24-b6c9-e51297d3d537?st=2018-02-09T18%3A07%3A00Z&se=2018-02-10T18%3A07%3A00Z&sp=rl&sv=2017-04-17&sr=b&sig=86eacb5b-f18e-4df4-a250-fcdcbc059c1b"
                          }
                        }
                      ],
                      "lastActionDateTime": "2019-01-07T12:36:07Z",
                      "status": "Running",
                      "id": "ff3c2797-f5f0-4122-9712-83ee87a0abb8",
                      "createdDateTime": "2019-01-07T12:34:12Z",
                      "locale": "en-US",
                      "name": "Language model",
                      "description": "This is a language model"
                    }
                  ],
                  "lastActionDateTime": "2019-01-07T12:36:07Z",
                  "status": "Succeeded",
                  "id": "9891c965-bb32-4880-b14b-6d44efb158f3",
                  "createdDateTime": "2019-01-07T12:34:12Z",
                  "locale": "en-US",
                  "name": "Transcription using locale en-US",
                  "properties": {
                    "ProfanityFilterMode": "Masked",
                    "PunctuationMode": "DictatedAndAutomatic",
                    "Duration": "00:00:42"
                  }
                }
              ]
            }
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ]
      },
      "post": {
        "tags": [
          "Custom Speech transcriptions:"
        ],
        "summary": "Creates a new transcription.",
        "operationId": "CreateTranscription",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "transcription",
            "in": "body",
            "description": "The details of the new transcription.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TranscriptionDefinition"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The response contains the location of the entity as header.",
            "headers": {
              "Location": {
                "description": "The location of the created resource.",
                "type": "string",
                "format": "uri"
              },
              "Retry-After": {
                "description": "The minimum number of seconds to wait before accessing the resource created in this operation.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "BadRequest",
                "message": "The request has been incorrect."
              }
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Unauthorized",
                "message": "Authentication is required to access the resource."
              }
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {},
            "examples": {
              "application/json": {
                "code": "Forbidden",
                "message": "No permission to access this resource."
              }
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorContent"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "code": "TooManyRequests",
                "message": "The rate limit has been reached. The timeout in seconds can be found in the Retry-After header."
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    }
  },
  "definitions": {
    "Test": {
      "title": "Test",
      "required": [
        "id",
        "models",
        "name"
      ],
      "type": "object",
      "properties": {
        "resultsUrl": {
          "description": "The URL that can be used to download the test results.\r\nEach line in the file represents a tab separated list of filename, reference transcription and decoder output.\r\n            \r\nThe URL will only be valid, if the test completed successfully.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "format": "uuid",
          "description": "The identifier of this entity.",
          "type": "string",
          "readOnly": false,
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "wordErrorRate": {
          "format": "double",
          "description": "The word error rate of the tested model.",
          "type": "number",
          "readOnly": true
        },
        "lastActionDateTime": {
          "format": "date-time",
          "description": "The time-stamp when the current status was entered.\r\nThe time stamp is encoded as ISO 8601 date and time format\r\n(\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "The status of the object.",
          "enum": [
            "NotStarted",
            "Running",
            "Succeeded",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": false
          }
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "The time-stamp when the object was created.\r\nThe time stamp is encoded as ISO 8601 date and time format\r\n(\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).",
          "type": "string",
          "readOnly": true
        },
        "models": {
          "description": "Information about the models used for this accuracy test.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Model"
          },
          "readOnly": false
        },
        "dataset": {
          "$ref": "#/definitions/Dataset",
          "description": "Information about the dataset used in the test.",
          "readOnly": false
        },
        "name": {
          "description": "The name of the object.",
          "type": "string",
          "readOnly": false
        },
        "description": {
          "description": "The description of the object.",
          "type": "string",
          "readOnly": false
        },
        "properties": {
          "description": "The custom properties of this entity. The maximum allowed key length is 64 characters, the maximum\r\nallowed value length is 256 characters and the count of allowed entries is 10.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": false
        }
      }
    },
    "Model": {
      "title": "Model",
      "required": [
        "id",
        "name",
        "modelKind",
        "locale"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The identifier of this entity.",
          "type": "string",
          "readOnly": false,
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "name": {
          "description": "The name of the object.",
          "type": "string",
          "readOnly": false
        },
        "description": {
          "description": "The description of the object.",
          "type": "string",
          "readOnly": false
        },
        "modelKind": {
          "description": "The kind of this model (e.g. acoustic, language ...)",
          "enum": [
            "None",
            "Acoustic",
            "Language",
            "AcousticAndLanguage",
            "Sentiment",
            "Diarization",
            "PronunciationScore"
          ],
          "type": "string",
          "readOnly": false
        },
        "text": {
          "description": "The text used to adapt this language model.",
          "type": "string",
          "readOnly": false
        },
        "baseModel": {
          "$ref": "#/definitions/Model",
          "description": "The base model used for adaptation.",
          "readOnly": false
        },
        "datasets": {
          "description": "Datasets used for adaptation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dataset"
          },
          "readOnly": false
        },
        "locale": {
          "description": "The locale of the contained data.",
          "type": "string",
          "readOnly": false
        },
        "properties": {
          "description": "The custom properties of this entity. The maximum allowed key length is 64 characters, the maximum\r\nallowed value length is 256 characters and the count of allowed entries is 10.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": false
        },
        "lastActionDateTime": {
          "format": "date-time",
          "description": "The time-stamp when the current status was entered.\r\nThe time stamp is encoded as ISO 8601 date and time format\r\n(\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "The status of the object.",
          "enum": [
            "NotStarted",
            "Running",
            "Succeeded",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": false
          }
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "The time-stamp when the object was created.\r\nThe time stamp is encoded as ISO 8601 date and time format\r\n(\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Dataset": {
      "title": "Dataset",
      "required": [
        "id",
        "dataImportKind",
        "name",
        "locale"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The identifier of this entity.",
          "type": "string",
          "readOnly": false,
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "dataImportKind": {
          "description": "The kind of the dataset (e.g. acoustic data, language data ...)",
          "enum": [
            "None",
            "Language",
            "Acoustic",
            "Pronunciation",
            "AudioFiles"
          ],
          "type": "string",
          "readOnly": false
        },
        "name": {
          "description": "The name of the object.",
          "type": "string",
          "readOnly": false
        },
        "description": {
          "description": "The description of the object.",
          "type": "string",
          "readOnly": false
        },
        "properties": {
          "description": "The custom properties of this entity. The maximum allowed key length is 64 characters, the maximum\r\nallowed value length is 256 characters and the count of allowed entries is 10.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": false
        },
        "locale": {
          "description": "The locale of the contained data.",
          "type": "string",
          "readOnly": false
        },
        "lastActionDateTime": {
          "format": "date-time",
          "description": "The time-stamp when the current status was entered.\r\nThe time stamp is encoded as ISO 8601 date and time format\r\n(\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "The status of the object.",
          "enum": [
            "NotStarted",
            "Running",
            "Succeeded",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": false
          }
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "The time-stamp when the object was created.\r\nThe time stamp is encoded as ISO 8601 date and time format\r\n(\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ErrorContent": {
      "title": "ErrorContent",
      "description": "The interface represents the content of an error response defined in the OneAPI v2.1 documentation.",
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "details": {
          "description": "An array of details representing distinct related errors that occured during the request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": false
        },
        "innererror": {
          "$ref": "#/definitions/InnerErrorV2",
          "description": "The stack trace of the error. The payload is service-defined.\r\nIf the error is not at the root level, the object contains a Code\r\nand an InnerError property.",
          "readOnly": false
        },
        "code": {
          "description": "A service-defined error code that should be human-readable.\r\nThis code serves as a more specific indicator of the error than\r\nthe HTTP error code specified in the response.",
          "type": "string",
          "readOnly": false
        },
        "message": {
          "description": "A human-readable representation of the error. It is intended as\r\nan aid to developers and is not suitable for exposure to end users.",
          "type": "string",
          "readOnly": false
        },
        "target": {
          "description": "The target of the particular error (e.g., the name of the property in error).",
          "type": "string",
          "readOnly": false
        }
      }
    },
    "ErrorDetail": {
      "title": "ErrorDetail",
      "description": "An array of implementations of this interface can be used as details for an error.",
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "code": {
          "description": "A service-defined error code that should be human-readable.\r\nThis code serves as a more specific indicator of the error than\r\nthe HTTP error code specified in the response.",
          "type": "string",
          "readOnly": false
        },
        "message": {
          "description": "A human-readable representation of the error. It is intended as\r\nan aid to developers and is not suitable for exposure to end users.",
          "type": "string",
          "readOnly": false
        },
        "target": {
          "description": "The target of the particular error (e.g., the name of the property in error).",
          "type": "string",
          "readOnly": false
        }
      }
    },
    "InnerErrorV2": {
      "title": "InnerErrorV2",
      "description": "An implementation of this interface represents a stage in a stack trace.\r\nIf the error levvel is the root, the {Microsoft.SpeechServices.Http.Dto.IInnerError.Code} and the {Microsoft.SpeechServices.Http.Dto.IInnerError.InnerError}\r\nproperty may be omitted.",
      "type": "object",
      "properties": {
        "code": {
          "description": "A service-defined error code that should be human-readable.\r\nThis code serves as a more specific indicator of the error than\r\nthe HTTP error code specified in the response.",
          "type": "string",
          "readOnly": false
        },
        "innererror": {
          "$ref": "#/definitions/InnerErrorV2",
          "description": "A human-readable representation of the error. It is intended as\r\nan aid to developers and is not suitable for exposure to end users.",
          "readOnly": false
        }
      }
    },
    "TestDefinition": {
      "title": "TestDefinition",
      "required": [
        "models",
        "name"
      ],
      "type": "object",
      "properties": {
        "models": {
          "description": "Information about the models used for this accuracy test.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelIdentity"
          },
          "readOnly": false
        },
        "dataset": {
          "$ref": "#/definitions/DatasetIdentity",
          "description": "Information about the dataset used in the test.",
          "readOnly": false
        },
        "name": {
          "description": "The name of the object.",
          "type": "string",
          "readOnly": false
        },
        "description": {
          "description": "The description of the object.",
          "type": "string",
          "readOnly": false
        },
        "properties": {
          "description": "The custom properties of this entity. The maximum allowed key length is 64 characters, the maximum\r\nallowed value length is 256 characters and the count of allowed entries is 10.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": false
        }
      },
      "example": {
        "models": [
          {
            "id": "685b5e3a-e5c0-45ae-8c8a-86b50cabd3ea"
          },
          {
            "id": "15fde948-c8b7-4484-a610-07d4ddc69fad"
          }
        ],
        "dataset": {
          "id": "5d2b9da6-e687-47b3-bb71-140a4d1ca3d5"
        },
        "name": "Accuracy test",
        "description": "This is an accuracy test"
      }
    },
    "ModelIdentity": {
      "title": "ModelIdentity",
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The identifier of this entity.",
          "type": "string",
          "readOnly": false,
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "DatasetIdentity": {
      "title": "DatasetIdentity",
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The identifier of this entity.",
          "type": "string",
          "readOnly": false,
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "TestUpdate": {
      "title": "TestUpdate",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the object.",
          "type": "string",
          "readOnly": false
        },
        "description": {
          "description": "The description of the object.",
          "type": "string",
          "readOnly": false
        }
      },
      "example": {
        "name": "Updated test name",
        "description": "Updated test description"
      }
    },
    "DatasetUpdate": {
      "title": "DatasetUpdate",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the object.",
          "type": "string",
          "readOnly": false
        },
        "description": {
          "description": "The description of the object.",
          "type": "string",
          "readOnly": false
        }
      },
      "example": {
        "name": "Updated dataset name",
        "description": "Updated dataset description"
      }
    },
    "Endpoint": {
      "title": "Endpoint",
      "required": [
        "id",
        "name",
        "endpointKind",
        "models",
        "locale"
      ],
      "type": "object",
      "properties": {
        "concurrentRecognitions": {
          "format": "int32",
          "description": "The number of concurrent recognitions the endpoint supports.",
          "type": "integer",
          "readOnly": false
        },
        "id": {
          "format": "uuid",
          "description": "The identifier of this entity.",
          "type": "string",
          "readOnly": false,
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "name": {
          "description": "The name of the object.",
          "type": "string",
          "readOnly": false
        },
        "description": {
          "description": "The description of the object.",
          "type": "string",
          "readOnly": false
        },
        "endpointUrls": {
          "description": "The list of endpoint urls.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "endpointKind": {
          "description": "The kind of this endpoint (e.g. custom speech).",
          "enum": [
            "SpeechRecognition",
            "PronunciationScore"
          ],
          "type": "string",
          "readOnly": false
        },
        "lastActionDateTime": {
          "format": "date-time",
          "description": "The time-stamp when the current status was entered.\r\nThe time stamp is encoded as ISO 8601 date and time format\r\n(\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "The status of the object.",
          "enum": [
            "NotStarted",
            "Running",
            "Succeeded",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": false
          }
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "The time-stamp when the object was created.\r\nThe time stamp is encoded as ISO 8601 date and time format\r\n(\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).",
          "type": "string",
          "readOnly": true
        },
        "contentLoggingEnabled": {
          "description": "A value indicating whether content logging (audio &amp; transcriptions) is being used for a deployment.",
          "type": "boolean",
          "readOnly": false
        },
        "models": {
          "description": "Information about the deployed models.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Model"
          },
          "readOnly": false
        },
        "locale": {
          "description": "The locale of the contained data.",
          "type": "string",
          "readOnly": false
        },
        "properties": {
          "description": "The custom properties of this entity. The maximum allowed key length is 64 characters, the maximum\r\nallowed value length is 256 characters and the count of allowed entries is 10.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": false
        }
      }
    },
    "SpeechEndpointDefinition": {
      "title": "SpeechEndpointDefinition",
      "required": [
        "models",
        "locale",
        "name"
      ],
      "type": "object",
      "properties": {
        "concurrentRecognitions": {
          "format": "int32",
          "description": "The number of concurrent recognitions the endpoint supports.",
          "maximum": 20,
          "minimum": 1,
          "type": "integer",
          "readOnly": false
        },
        "contentLoggingEnabled": {
          "description": "A value indicating whether content logging (audio &amp; transcriptions) is being used for a deployment.",
          "type": "boolean",
          "readOnly": false
        },
        "models": {
          "description": "Information about the deployed models.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelIdentity"
          },
          "readOnly": false
        },
        "description": {
          "description": "The description of the object.",
          "type": "string",
          "readOnly": false
        },
        "locale": {
          "description": "The locale of the contained data.",
          "type": "string",
          "readOnly": false
        },
        "properties": {
          "description": "The custom properties of this entity. The maximum allowed key length is 64 characters, the maximum\r\nallowed value length is 256 characters and the count of allowed entries is 10.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": false
        },
        "name": {
          "description": "The name of the object.",
          "type": "string",
          "readOnly": false
        }
      },
      "example": {
        "models": [
          {
            "id": "d7295e5c-089f-44ab-99b0-73c17ffc3ae0"
          }
        ],
        "concurrentRecognitions": 1,
        "contentLoggingEnabled": false,
        "locale": "en-US",
        "name": "Speech endpoint definition",
        "description": "This is a speech endpoint"
      }
    },
    "EndpointMetadataUpdate": {
      "title": "EndpointMetadataUpdate",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the object.",
          "type": "string",
          "readOnly": false
        },
        "description": {
          "description": "The description of the object.",
          "type": "string",
          "readOnly": false
        }
      },
      "example": {
        "name": "Updated speech endpoint",
        "description": "Example for an updated speech endpoint"
      }
    },
    "EndpointData": {
      "title": "EndpointData",
      "required": [
        "id",
        "startDate",
        "endDate"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The identifier of this entity.",
          "type": "string",
          "readOnly": false,
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "dataUrl": {
          "description": "The resulting data Url for the model deployment.",
          "type": "string",
          "readOnly": false
        },
        "lastActionDateTime": {
          "format": "date-time",
          "description": "The time-stamp when the current status was entered.\r\nThe time stamp is encoded as ISO 8601 date and time format\r\n(\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "The status of the object.",
          "enum": [
            "NotStarted",
            "Running",
            "Succeeded",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": false
          }
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "The time-stamp when the object was created.\r\nThe time stamp is encoded as ISO 8601 date and time format\r\n(\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).",
          "type": "string",
          "readOnly": true
        },
        "startDate": {
          "format": "date-time",
          "description": "The start date of the demplyment data export.",
          "type": "string",
          "readOnly": false
        },
        "endDate": {
          "format": "date-time",
          "description": "The end date of the demplyment data export.",
          "type": "string",
          "readOnly": false
        }
      }
    },
    "EndpointDataDefinition": {
      "title": "EndpointDataDefinition",
      "required": [
        "startDate",
        "endDate"
      ],
      "type": "object",
      "properties": {
        "startDate": {
          "format": "date-time",
          "description": "The start date of the demplyment data export.",
          "type": "string",
          "readOnly": false
        },
        "endDate": {
          "format": "date-time",
          "description": "The end date of the demplyment data export.",
          "type": "string",
          "readOnly": false
        }
      },
      "example": {
        "startDate": "2018-12-08T00:00:00Z",
        "endDate": "2019-01-07T00:00:00Z"
      }
    },
    "SpeechModelDefinition": {
      "title": "SpeechModelDefinition",
      "required": [
        "modelKind",
        "locale",
        "name"
      ],
      "type": "object",
      "properties": {
        "modelKind": {
          "description": "The kind of this model (e.g. acoustic, language ...)",
          "enum": [
            "None",
            "Acoustic",
            "Language",
            "AcousticAndLanguage",
            "Sentiment",
            "Diarization",
            "PronunciationScore"
          ],
          "type": "string",
          "readOnly": false
        },
        "text": {
          "description": "The text used to adapt this language model.",
          "type": "string",
          "readOnly": false
        },
        "baseModel": {
          "$ref": "#/definitions/ModelIdentity",
          "description": "The base model used for adaptation.",
          "readOnly": false
        },
        "datasets": {
          "description": "Datasets used for adaptation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatasetIdentity"
          },
          "readOnly": false
        },
        "description": {
          "description": "The description of the object.",
          "type": "string",
          "readOnly": false
        },
        "locale": {
          "description": "The locale of the contained data.",
          "type": "string",
          "readOnly": false
        },
        "properties": {
          "description": "The custom properties of this entity. The maximum allowed key length is 64 characters, the maximum\r\nallowed value length is 256 characters and the count of allowed entries is 10.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": false
        },
        "name": {
          "description": "The name of the object.",
          "type": "string",
          "readOnly": false
        }
      },
      "example": {
        "modelKind": "Language",
        "baseModel": {
          "id": "f2842de0-fc16-4858-8391-e3fd1efb6980"
        },
        "datasets": [
          {
            "id": "a712c3ba-0e49-4059-a17f-0465426514c7"
          }
        ],
        "locale": "en-US",
        "name": "Language model",
        "description": "This is a language model definition"
      }
    },
    "ModelUpdate": {
      "title": "ModelUpdate",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the object.",
          "type": "string",
          "readOnly": false
        },
        "description": {
          "description": "The description of the object.",
          "type": "string",
          "readOnly": false
        }
      }
    },
    "Transcription": {
      "title": "Transcription",
      "required": [
        "recordingsUrl",
        "id",
        "locale",
        "name"
      ],
      "type": "object",
      "properties": {
        "recordingsUrl": {
          "type": "string",
          "readOnly": false
        },
        "reportFileUrl": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "format": "uuid",
          "description": "The identifier of this entity.",
          "type": "string",
          "readOnly": false,
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "models": {
          "description": "The models used in this transcription.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Model"
          },
          "readOnly": false
        },
        "locale": {
          "description": "The locale of the contained data.",
          "type": "string",
          "readOnly": false
        },
        "resultsUrls": {
          "description": "The results Urls for the transcription.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "statusMessage": {
          "description": "The failure reason for the transcription.",
          "type": "string",
          "readOnly": true
        },
        "lastActionDateTime": {
          "format": "date-time",
          "description": "The time-stamp when the current status was entered.\r\nThe time stamp is encoded as ISO 8601 date and time format\r\n(\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "The status of the object.",
          "enum": [
            "NotStarted",
            "Running",
            "Succeeded",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": false
          }
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "The time-stamp when the object was created.\r\nThe time stamp is encoded as ISO 8601 date and time format\r\n(\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the object.",
          "type": "string",
          "readOnly": false
        },
        "description": {
          "description": "The description of the object.",
          "type": "string",
          "readOnly": false
        },
        "properties": {
          "description": "The custom properties of this entity. The maximum allowed key length is 64 characters, the maximum\r\nallowed value length is 256 characters and the count of allowed entries is 10.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": false
        }
      }
    },
    "TranscriptionUpdate": {
      "title": "TranscriptionUpdate",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the object.",
          "type": "string",
          "readOnly": false
        },
        "description": {
          "description": "The description of the object.",
          "type": "string",
          "readOnly": false
        }
      },
      "example": {
        "name": "Updated transcription name",
        "description": "Updated transcription description"
      }
    },
    "TranscriptionDefinition": {
      "title": "TranscriptionDefinition",
      "required": [
        "recordingsUrl",
        "locale",
        "name"
      ],
      "type": "object",
      "properties": {
        "recordingsUrl": {
          "type": "string",
          "readOnly": false
        },
        "models": {
          "description": "The models used in this transcription.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelIdentity"
          },
          "readOnly": false
        },
        "locale": {
          "description": "The locale of the contained data.",
          "type": "string",
          "readOnly": false
        },
        "name": {
          "description": "The name of the object.",
          "type": "string",
          "readOnly": false
        },
        "description": {
          "description": "The description of the object.",
          "type": "string",
          "readOnly": false
        },
        "properties": {
          "description": "The custom properties of this entity. The maximum allowed key length is 64 characters, the maximum\r\nallowed value length is 256 characters and the count of allowed entries is 10.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": false
        }
      },
      "example": {
        "recordingsUrl": "https://contoso.com/mystoragelocation",
        "models": [],
        "locale": "en-US",
        "name": "Transcription using locale en-US",
        "description": "An optional description of the transcription.",
        "properties": {
          "AddWordLevelTimestamps": "True",
          "AddDiarization": "True",
          "AddSentiment": "True",
          "ProfanityFilterMode": "Masked",
          "PunctuationMode": "DictatedAndAutomatic"
        }
      }
    }
  },
  "parameters": {
    "Endpoint": {
      "name": "endpoint",
      "description": "Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus2.api.cognitive.microsoft.com).",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "in": "path",
      "x-ms-skip-url-encoding": true        
    }
  },
  "securityDefinitions": {
    "subscription_key": {
      "type": "apiKey",
      "description": "Provide your cognitive services subscription key here.",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    },
    "token": {
      "type": "apiKey",
      "description": "Provide an access token from the JWT returned by the STS of this region. Make sure to add the management scope to the token by adding the following query string to the STS URL: ?scope=speechservicesmanagement",
      "name": "Authorization",
      "in": "header"
    }
  }
}