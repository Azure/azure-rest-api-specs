{
  "swagger": "2.0",
  "info": {
    "title": "Speech Services API v3.0",
    "description": "Speech Services API v3.0.",
    "contact": {
      "name": "Cognitive Services - Speech Services",
      "url": "https://docs.microsoft.com/azure/cognitive-services/speech-service/support"
    },
    "version": "v3.0"
  },
  "paths": {
    "/datasets/locales": {
      "get": {
        "tags": [
          "Custom Speech datasets for model adaptation:"
        ],
        "summary": "Gets a list of supported locales for data imports.",
        "operationId": "GetSupportedLocalesForDatasets",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatasetLocales"
            }
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Get the supported locales": {
            "$ref": "./examples/get_supported_dataset_locales.json"
          }
        }
      }
    },
    "/datasets": {
      "get": {
        "tags": [
          "Custom Speech datasets for model adaptation:"
        ],
        "summary": "Gets a list of datasets for the authenticated subscription.",
        "operationId": "GetDatasets",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "description": "Number of datasets that will be skipped.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "Number of datasets that will be included after skipping.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedDatasets"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-pageable": {
          "itemName": "values",
          "nextLinkName": "@nextLink"
        },
        "x-ms-examples": {
          "Get all datasets": {
            "$ref": "./examples/get_datasets.json"
          }
        }
      },
      "post": {
        "tags": [
          "Custom Speech datasets for model adaptation:"
        ],
        "summary": "Uploads and creates a new dataset by getting the data from a specified URL.",
        "operationId": "CreateDataset",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dataset",
            "description": "Definition for the new dataset.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dataset"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The response contains the location of the entity as header.",
            "schema": {
              "$ref": "#/definitions/Dataset"
            },
            "headers": {
              "Location": {
                "description": "The location of the created resource.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Create a dataset": {
            "$ref": "./examples/create_dataset.json"
          }
        }
      }
    },
    "/datasets/{id}": {
      "get": {
        "tags": [
          "Custom Speech datasets for model adaptation:"
        ],
        "summary": "Gets the dataset identified by the given ID.",
        "operationId": "GetDataset",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the dataset.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Dataset"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Get a dataset": {
            "$ref": "./examples/get_dataset.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Custom Speech datasets for model adaptation:"
        ],
        "summary": "Updates the mutable details of the dataset identified by its ID.",
        "operationId": "UpdateDataset",
        "consumes": [
          "application/json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the dataset.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "datasetUpdate",
            "description": "The updated values for the dataset.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatasetUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Dataset"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "409": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Update a dataset": {
            "$ref": "./examples/update_dataset.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Custom Speech datasets for model adaptation:"
        ],
        "summary": "Deletes the specified dataset.",
        "operationId": "DeleteDataset",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the dataset.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "The dataset was successfully deleted or did not exist."
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Delete a dataset": {
            "$ref": "./examples/delete_dataset.json"
          }
        }
      }
    },
    "/datasets/upload": {
      "post": {
        "tags": [
          "Custom Speech datasets for model adaptation:"
        ],
        "summary": "Uploads data and creates a new dataset.",
        "operationId": "UploadDatasetFromForm",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "project",
            "description": "The optional string representation of the url of a project. If set, the dataset will be associated with that project.",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "displayName",
            "description": "The name of this data import (required).",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "description": "Optional description of this data import.",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "locale",
            "description": "The locale of this data import (required).",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "kind",
            "description": "The kind of the data import (required). Possible values are \"Language\", \"Acoustic\", \"Pronunciation\", \"AudioFiles\".",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "customProperties",
            "description": "The optional custom properties of this entity. The maximum allowed key length is 64 characters, the maximum allowed value length is 256 characters and the count of allowed entries is 10.",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "data",
            "description": "For acoustic data imports, a zip file containing the audio data and a text file containing the transcriptions for the audio data. For language data imports, a text file containing the language or pronunciation data. Required in both cases.",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "email",
            "description": "An optional string containing the email address to send email notifications to in case the operation completes. The value will be removed after successfully sending the email.",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "The response contains the location of the entity as header.",
            "schema": {
              "$ref": "#/definitions/Dataset"
            },
            "headers": {
              "Location": {
                "description": "The location of the created resource.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "415": {
            "description": "In case the media type of a file part is not supported.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "deprecated": true,
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Upload a dataset": {
            "$ref": "./examples/upload_dataset.json"
          }
        }
      }
    },
    "/datasets/{id}/files": {
      "get": {
        "tags": [
          "Custom Speech datasets for model adaptation:"
        ],
        "summary": "Gets the files of the dataset identified by the given ID.",
        "operationId": "GetDatasetFiles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the dataset.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "sasValidityInSeconds",
            "description": "The duration in seconds that an SAS url should be valid. The default duration is 12 hours.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "Number of files that will be skipped.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "Number of files that will be included after skipping.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedFiles"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-pageable": {
          "itemName": "values",
          "nextLinkName": "@nextLink"
        },
        "x-ms-examples": {
          "Get all files": {
            "$ref": "./examples/get_dataset_files.json"
          }
        }
      }
    },
    "/datasets/{id}/files/{fileId}": {
      "get": {
        "tags": [
          "Custom Speech datasets for model adaptation:"
        ],
        "summary": "Gets one specific file (identified with fileId) from a dataset (identified with id).",
        "operationId": "GetDatasetFile",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the dataset.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "fileId",
            "description": "The identifier of the file.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "sasValidityInSeconds",
            "description": "The duration in seconds that an SAS url should be valid. The default duration is 12 hours.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/File"
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Get a file": {
            "$ref": "./examples/get_dataset_file.json"
          }
        }
      }
    },
    "/endpoints/locales": {
      "get": {
        "tags": [
          "Custom Speech endpoints:"
        ],
        "summary": "Gets a list of supported locales for endpoint creations.",
        "operationId": "GetSupportedLocalesForEndpoints",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Get the supported locales": {
            "$ref": "./examples/get_supported_endpoint_locales.json"
          }
        }
      }
    },
    "/endpoints": {
      "get": {
        "tags": [
          "Custom Speech endpoints:"
        ],
        "summary": "Gets the list of endpoints for the authenticated subscription.",
        "operationId": "GetEndpoints",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "description": "Number of endpoints that will be skipped.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "Number of endpoints that will be included after skipping.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedEndpoints"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-pageable": {
          "itemName": "values",
          "nextLinkName": "@nextLink"
        },
        "x-ms-examples": {
          "Get all endpoints": {
            "$ref": "./examples/get_endpoints.json"
          }
        }
      },
      "post": {
        "tags": [
          "Custom Speech endpoints:"
        ],
        "summary": "Creates a new endpoint.",
        "operationId": "CreateEndpoint",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "endpoint",
            "description": "The details of the endpoint.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Endpoint"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The response contains the location of the entity as header.",
            "schema": {
              "$ref": "#/definitions/Endpoint"
            },
            "headers": {
              "Location": {
                "description": "The location of the created resource.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Create an endpoint": {
            "$ref": "./examples/create_endpoint.json"
          }
        }
      }
    },
    "/endpoints/{id}": {
      "get": {
        "tags": [
          "Custom Speech endpoints:"
        ],
        "summary": "Gets the endpoint identified by the given ID.",
        "operationId": "GetEndpoint",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the endpoint.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Endpoint"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Get an endpoint": {
            "$ref": "./examples/get_endpoint.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Custom Speech endpoints:"
        ],
        "summary": "Deletes the endpoint identified by the given ID.",
        "operationId": "DeleteEndpoint",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the endpoint.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "The model endpoint was successfully deleted."
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Delete an endpoint": {
            "$ref": "./examples/delete_endpoint.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Custom Speech endpoints:"
        ],
        "summary": "Updates the metadata of the endpoint identified by the given ID.",
        "operationId": "UpdateEndpoint",
        "consumes": [
          "application/json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the endpoint.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "endpointUpdate",
            "description": "The updated values for the endpoint.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndpointUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Endpoint"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "409": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Update an endpoint": {
            "$ref": "./examples/update_endpoint.json"
          }
        }
      }
    },
    "/endpoints/{id}/files/logs": {
      "get": {
        "tags": [
          "Custom Speech endpoints:"
        ],
        "summary": "Gets the list of audio and transcription logs that have been stored for a given endpoint.",
        "operationId": "GetEndpointLogs",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the endpoint.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "sasValidityInSeconds",
            "description": "The duration in seconds that an SAS url should be valid. The default duration is 12 hours.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "skipToken",
            "description": "Token to skip logs that were already retrieved in previous requests. Pagination starts from beginning when not defined.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "top",
            "description": "Number of files that will be included (between 1 and 5000).",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedFiles"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-pageable": {
          "itemName": "values",
          "nextLinkName": "@nextLink"
        },
        "x-ms-examples": {
          "Get all endpoint logs": {
            "$ref": "./examples/get_endpoint_logs.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Custom Speech endpoints:"
        ],
        "summary": "Deletes the specified audio and transcription logs that have been stored for a given endpoint. It deletes all logs before (and including) a specific day.",
        "description": "The deletion process is done asynchronously and can take up to one day depending on the amount of log files.",
        "operationId": "DeleteEndpointLogs",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the endpoint.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "endDate",
            "description": "The end date of the audio logs deletion (specific day, UTC).\r\n            Expected format: \"yyyy-mm-dd\". For instance, \"2019-09-20\" results in deleting all logs on September 20h, 2019 and before.\r\n            Deletes all existing logs when date is not specified.",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The logs will be deleted."
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Delete all endpoint logs": {
            "$ref": "./examples/delete_endpoint_logs.json"
          }
        }
      }
    },
    "/endpoints/{id}/files/logs/{logId}": {
      "get": {
        "tags": [
          "Custom Speech endpoints:"
        ],
        "summary": "Gets a specific audio or transcription log for a given endpoint.",
        "operationId": "GetEndpointLog",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the endpoint.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "logId",
            "description": "The identifier of the log.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "sasValidityInSeconds",
            "description": "The duration in seconds that an SAS url should be valid. The default duration is 12 hours.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/File"
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Get an endpoint log": {
            "$ref": "./examples/get_endpoint_log.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Custom Speech endpoints:"
        ],
        "summary": "Deletes one audio or transcription log that have been stored for a given endpoint.",
        "operationId": "DeleteEndpointLog",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the endpoint.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "logId",
            "description": "The identifier of the log.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "The log was successfully deleted."
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Delete an endpoint log": {
            "$ref": "./examples/delete_endpoint_log.json"
          }
        }
      }
    },
    "/endpoints/base/{locale}/files/logs": {
      "get": {
        "tags": [
          "Custom Speech endpoints:"
        ],
        "summary": "Gets the list of audio and transcription logs that have been stored when using the default base model of a given language.",
        "operationId": "GetBaseModelLogs",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "locale",
            "description": "The language used to select the default base model.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "sasValidityInSeconds",
            "description": "The duration in seconds that an SAS url should be valid. The default duration is 12 hours.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "skipToken",
            "description": "Token to skip logs that were already retrieved in previous requests. Pagination starts from beginning when not defined.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "top",
            "description": "Number of files that will be included (between 1 and 5000).",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedFiles"
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-pageable": {
          "itemName": "values",
          "nextLinkName": "@nextLink"
        },
        "x-ms-examples": {
          "Get all base model logs": {
            "$ref": "./examples/get_base_model_logs.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Custom Speech endpoints:"
        ],
        "summary": "Deletes the specified audio and transcription logs that have been stored when using the default base model of a given language. It deletes all logs before (and including) a specific day.",
        "description": "Deletion process is done asynchronously and can take up to one day depending on the amount of log files.",
        "operationId": "DeleteBaseModelLogs",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "locale",
            "description": "The language used to select the default base model.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "endDate",
            "description": "The end date of the audio logs deletion (specific day, UTC).\r\n            Expected format: \"yyyy-mm-dd\". For instance, \"2019-09-20\" results in deleting all logs on September 20h, 2019 and before.\r\n            Deletes all existing logs when date is not specified.",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The logs will be deleted."
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Delete all base model logs": {
            "$ref": "./examples/delete_base_model_logs.json"
          }
        }
      }
    },
    "/endpoints/base/{locale}/files/logs/{logId}": {
      "get": {
        "tags": [
          "Custom Speech endpoints:"
        ],
        "summary": "Gets a specific audio or transcription log for the default base model in a given language.",
        "operationId": "GetBaseModelLog",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "locale",
            "description": "The language used to select the default base model.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "logId",
            "description": "The identifier of the log.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "sasValidityInSeconds",
            "description": "The duration in seconds that an SAS url should be valid. The default duration is 12 hours.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/File"
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Get a base model log": {
            "$ref": "./examples/get_base_model_log.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Custom Speech endpoints:"
        ],
        "summary": "Deletes one audio or transcription log that have been stored when using the default base model of a given language.",
        "operationId": "DeleteBaseModelLog",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "locale",
            "description": "The language used to select the default base model.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "logId",
            "description": "The identifier of the log.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "The log was successfully deleted."
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Delete a base model log": {
            "$ref": "./examples/delete_base_model_log.json"
          }
        }
      }
    },
    "/evaluations/locales": {
      "get": {
        "tags": [
          "Custom Speech model evaluations:"
        ],
        "summary": "Gets a list of supported locales for evaluations.",
        "operationId": "GetSupportedLocalesForEvaluations",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Get the supported locales": {
            "$ref": "./examples/get_supported_evaluations_locales.json"
          }
        }
      }
    },
    "/evaluations": {
      "get": {
        "tags": [
          "Custom Speech model evaluations:"
        ],
        "summary": "Gets the list of evaluations for the authenticated subscription.",
        "operationId": "GetEvaluations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "description": "Number of evaluations that will be skipped.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "Number of evaluations that will be included after skipping.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedEvaluations"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-pageable": {
          "itemName": "values",
          "nextLinkName": "@nextLink"
        },
        "x-ms-examples": {
          "Get all evaluations": {
            "$ref": "./examples/get_evaluations.json"
          }
        }
      },
      "post": {
        "tags": [
          "Custom Speech model evaluations:"
        ],
        "summary": "Creates a new evaluation.",
        "operationId": "CreateEvaluation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "evaluation",
            "description": "The details of the new evaluation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Evaluation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The response contains the location of the entity as header.",
            "schema": {
              "$ref": "#/definitions/Evaluation"
            },
            "headers": {
              "Location": {
                "description": "The location of the created resource.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Create a evaluation": {
            "$ref": "./examples/create_evaluation.json"
          }
        }
      }
    },
    "/evaluations/{id}/files": {
      "get": {
        "tags": [
          "Custom Speech model evaluations:"
        ],
        "summary": "Gets the files of the evaluation identified by the given ID.",
        "operationId": "GetEvaluationFiles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the evaluation.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "sasValidityInSeconds",
            "description": "The duration in seconds that an SAS url should be valid. The default duration is 12 hours.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "Number of files that will be skipped.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "Number of files that will be included after skipping.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedFiles"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-pageable": {
          "itemName": "values",
          "nextLinkName": "@nextLink"
        },
        "x-ms-examples": {
          "Get all files": {
            "$ref": "./examples/get_evaluation_files.json"
          }
        }
      }
    },
    "/evaluations/{id}/files/{fileId}": {
      "get": {
        "tags": [
          "Custom Speech model evaluations:"
        ],
        "summary": "Gets one specific file (identified with fileId) from an evaluation (identified with id).",
        "operationId": "GetEvaluationFile",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the evaluation.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "fileId",
            "description": "The identifier of the file.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "sasValidityInSeconds",
            "description": "The duration in seconds that an SAS url should be valid. The default duration is 12 hours.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/File"
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Get a file": {
            "$ref": "./examples/get_evaluation_file.json"
          }
        }
      }
    },
    "/evaluations/{id}": {
      "get": {
        "tags": [
          "Custom Speech model evaluations:"
        ],
        "summary": "Gets the evaluation identified by the given ID.",
        "operationId": "GetEvaluation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the evaluation.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Evaluation"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Get a evaluation": {
            "$ref": "./examples/get_evaluation.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Custom Speech model evaluations:"
        ],
        "summary": "Updates the mutable details of the evaluation identified by its id.",
        "operationId": "UpdateEvaluation",
        "consumes": [
          "application/json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the evaluation.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "evaluationUpdate",
            "description": "The object containing the updated fields of the evaluation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EvaluationUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Evaluation"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "409": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Update a evaluation": {
            "$ref": "./examples/update_evaluation.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Custom Speech model evaluations:"
        ],
        "summary": "Deletes the evaluation identified by the given ID.",
        "operationId": "DeleteEvaluation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the evaluation.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "The evaluation was successfully deleted or did not exist."
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Delete a evaluation": {
            "$ref": "./examples/delete_evaluation.json"
          }
        }
      }
    },
    "/models/locales": {
      "get": {
        "tags": [
          "Custom Speech models:"
        ],
        "summary": "Gets a list of supported locales for model adaptation.",
        "operationId": "GetSupportedLocalesForModels",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Get the supported locales": {
            "$ref": "./examples/get_supported_model_locales.json"
          }
        }
      }
    },
    "/models": {
      "get": {
        "tags": [
          "Custom Speech models:"
        ],
        "summary": "Gets the list of custom models for the authenticated subscription.",
        "operationId": "GetModels",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "description": "Number of models that will be skipped.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "Number of models that will be included after skipping.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedModels"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-pageable": {
          "itemName": "values",
          "nextLinkName": "@nextLink"
        },
        "x-ms-examples": {
          "Get all models": {
            "$ref": "./examples/get_models.json"
          }
        }
      },
      "post": {
        "tags": [
          "Custom Speech models:"
        ],
        "summary": "Creates a new model.",
        "operationId": "CreateModel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "model",
            "description": "The details of the new model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Model"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The response contains the location of the entity as header.",
            "schema": {
              "$ref": "#/definitions/Model"
            },
            "headers": {
              "Location": {
                "description": "The location of the created resource.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Create a model": {
            "$ref": "./examples/create_model.json"
          }
        }
      }
    },
    "/models/base": {
      "get": {
        "tags": [
          "Custom Speech models:"
        ],
        "summary": "Gets the list of base models for the authenticated subscription.",
        "operationId": "GetBaseModels",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "description": "Number of base models that will be skipped.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "Number of base models that will be included after skipping.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedModels"
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-pageable": {
          "itemName": "values",
          "nextLinkName": "@nextLink"
        },
        "x-ms-examples": {
          "Get all base models": {
            "$ref": "./examples/get_base_models.json"
          }
        }
      }
    },
    "/models/{id}": {
      "get": {
        "tags": [
          "Custom Speech models:"
        ],
        "summary": "Gets the model identified by the given ID.",
        "operationId": "GetModel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the model.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Model"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Get a model": {
            "$ref": "./examples/get_model.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Custom Speech models:"
        ],
        "summary": "Updates the metadata of the model identified by the given ID.",
        "operationId": "UpdateModel",
        "consumes": [
          "application/json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the model.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "modelUpdate",
            "description": "The updated values for the model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Model"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "409": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Update a model": {
            "$ref": "./examples/update_model.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Custom Speech models:"
        ],
        "summary": "Deletes the model identified by the given ID.",
        "operationId": "DeleteModel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the model.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "The model was successfully deleted or did not exist."
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Delete a model": {
            "$ref": "./examples/delete_model.json"
          }
        }
      }
    },
    "/models/base/{id}": {
      "get": {
        "tags": [
          "Custom Speech models:"
        ],
        "summary": "Gets the base model identified by the given ID.",
        "operationId": "GetBaseModel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the base model.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Model"
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Get a base model": {
            "$ref": "./examples/get_base_model.json"
          }
        }
      }
    },
    "/models/{id}/copyto": {
      "post": {
        "tags": [
          "Custom Speech models:"
        ],
        "summary": "Copies a model from one subscription to another.",
        "description": "This method can be used to copy a model from one location to another. If the target subscription\r\nkey belongs to a subscription created for another location, the model will be copied to that location.\r\nOnly adapted models are allowed to copy to another subscription.",
        "operationId": "CopyModelToSubscription",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the model that will be copied.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "modelCopy",
            "description": "The body contains the subscription key of the target subscription.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelCopy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The response contains the location of the entity as header.",
            "schema": {
              "$ref": "#/definitions/Model"
            },
            "headers": {
              "Location": {
                "description": "The location of the created resource.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Copy a model": {
            "$ref": "./examples/copy_model.json"
          }
        }
      }
    },
    "/models/{id}/manifest": {
      "get": {
        "tags": [
          "Custom Speech models:"
        ],
        "summary": "Returns an manifest for this model which can be used in an on-premise container.",
        "operationId": "GetModelManifest",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the model to generate a manifest for.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "sasValidityInSeconds",
            "description": "The duration in seconds that an SAS url should be valid. The default duration is 12 hours.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully generated a model manifest.",
            "schema": {
              "$ref": "#/definitions/ModelManifest"
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Get a model manifest": {
            "$ref": "./examples/get_model_manifest.json"
          }
        }
      }
    },
    "/models/base/{id}/manifest": {
      "get": {
        "tags": [
          "Custom Speech models:"
        ],
        "summary": "Returns an manifest for this base model which can be used in an on-premise container.",
        "operationId": "GetBaseModelManifest",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the model to generate a manifest for.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "sasValidityInSeconds",
            "description": "The duration in seconds that an SAS url should be valid. The default duration is 12 hours.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully generated a model manifest.",
            "schema": {
              "$ref": "#/definitions/ModelManifest"
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Get a base model manifest": {
            "$ref": "./examples/get_base_model_manifest.json"
          }
        }
      }
    },
    "/projects/locales": {
      "get": {
        "tags": [
          "Custom Speech projects:"
        ],
        "summary": "Gets the list of supported locales.",
        "operationId": "GetSupportedProjectLocales",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Get the supported locales": {
            "$ref": "./examples/get_supported_project_locales.json"
          }
        }
      }
    },
    "/projects": {
      "get": {
        "tags": [
          "Custom Speech projects:"
        ],
        "summary": "Gets the list of projects for the authenticated subscription.",
        "operationId": "GetProjects",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "description": "Number of projects that will be skipped.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "Number of projects that will be included after skipping.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedProjects"
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-pageable": {
          "itemName": "values",
          "nextLinkName": "@nextLink"
        },
        "x-ms-examples": {
          "Get all projects": {
            "$ref": "./examples/get_projects.json"
          }
        }
      },
      "post": {
        "tags": [
          "Custom Speech projects:"
        ],
        "summary": "Creates a new project.",
        "operationId": "CreateProject",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "project",
            "description": "The details of the project.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The response contains the location of the entity as header.",
            "schema": {
              "$ref": "#/definitions/Project"
            },
            "headers": {
              "Location": {
                "description": "The location of the created resource.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Create a project": {
            "$ref": "./examples/create_project.json"
          }
        }
      }
    },
    "/projects/{id}": {
      "get": {
        "tags": [
          "Custom Speech projects:"
        ],
        "summary": "Gets the project identified by the given ID.",
        "operationId": "GetProject",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the project.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Get a project": {
            "$ref": "./examples/get_project.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Custom Speech projects:"
        ],
        "summary": "Updates the project identified by the given ID.",
        "operationId": "UpdateProject",
        "consumes": [
          "application/json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the project.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "projectUpdate",
            "description": "The updated values for the project.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "409": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Update a project": {
            "$ref": "./examples/update_project.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Custom Speech projects:"
        ],
        "summary": "Deletes the project identified by the given ID.",
        "operationId": "DeleteProject",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the project.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "The project was successfully deleted or did not exist."
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Delete a project": {
            "$ref": "./examples/delete_project.json"
          }
        }
      }
    },
    "/projects/{id}/evaluations": {
      "get": {
        "tags": [
          "Custom Speech projects:"
        ],
        "summary": "Gets the list of evaluations for specified project.",
        "operationId": "GetEvaluationsForProject",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the project.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "Number of evaluations that will be skipped.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "Number of evaluations that will be included after skipping.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedEvaluations"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-pageable": {
          "itemName": "values",
          "nextLinkName": "@nextLink"
        },
        "x-ms-examples": {
          "Get all evaluations": {
            "$ref": "./examples/get_project_evaluations.json"
          }
        }
      }
    },
    "/projects/{id}/datasets": {
      "get": {
        "tags": [
          "Custom Speech projects:"
        ],
        "summary": "Gets the list of datasets for specified project.",
        "operationId": "GetDatasetsForProject",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the project.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "Number of datasets that will be skipped.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "Number of datasets that will be included after skipping.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedDatasets"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-pageable": {
          "itemName": "values",
          "nextLinkName": "@nextLink"
        },
        "x-ms-examples": {
          "Get all datasets": {
            "$ref": "./examples/get_project_datasets.json"
          }
        }
      }
    },
    "/projects/{id}/endpoints": {
      "get": {
        "tags": [
          "Custom Speech projects:"
        ],
        "summary": "Gets the list of endpoints for specified project.",
        "operationId": "GetEndpointsForProject",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the project.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "Number of endpoints that will be skipped.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "Number of endpoints that will be included after skipping.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedEndpoints"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-pageable": {
          "itemName": "values",
          "nextLinkName": "@nextLink"
        },
        "x-ms-examples": {
          "Get all endpoints": {
            "$ref": "./examples/get_project_endpoints.json"
          }
        }
      }
    },
    "/projects/{id}/models": {
      "get": {
        "tags": [
          "Custom Speech projects:"
        ],
        "summary": "Gets the list of models for specified project.",
        "operationId": "GetModelsForProject",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the project.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "Number of models that will be skipped.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "Number of models that will be included after skipping.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedModels"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-pageable": {
          "itemName": "values",
          "nextLinkName": "@nextLink"
        },
        "x-ms-examples": {
          "Get all models": {
            "$ref": "./examples/get_project_models.json"
          }
        }
      }
    },
    "/projects/{id}/transcriptions": {
      "get": {
        "tags": [
          "Custom Speech projects:"
        ],
        "summary": "Gets the list of transcriptions for specified project.",
        "operationId": "GetTranscriptionsForProject",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the project.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "Number of transcriptions that will be skipped.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "Number of transcriptions that will be included after skipping.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedTranscriptions"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-pageable": {
          "itemName": "values",
          "nextLinkName": "@nextLink"
        },
        "x-ms-examples": {
          "Get all transcriptions": {
            "$ref": "./examples/get_project_transcriptions.json"
          }
        }
      }
    },
    "/transcriptions/locales": {
      "get": {
        "tags": [
          "Custom Speech transcriptions:"
        ],
        "summary": "Gets a list of supported locales for offline transcriptions.",
        "operationId": "GetSupportedLocalesForTranscriptions",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Get the supported locales": {
            "$ref": "./examples/get_supported_transcription_locales.json"
          }
        }
      }
    },
    "/transcriptions": {
      "get": {
        "tags": [
          "Custom Speech transcriptions:"
        ],
        "summary": "Gets a list of transcriptions for the authenticated subscription.",
        "operationId": "GetTranscriptions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "description": "Number of transcriptions that will be skipped.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "Number of transcriptions that will be included after skipping.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedTranscriptions"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-pageable": {
          "itemName": "values",
          "nextLinkName": "@nextLink"
        },
        "x-ms-examples": {
          "Get all transcriptions": {
            "$ref": "./examples/get_transcriptions.json"
          }
        }
      },
      "post": {
        "tags": [
          "Custom Speech transcriptions:"
        ],
        "summary": "Creates a new transcription.",
        "operationId": "CreateTranscription",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "transcription",
            "description": "The details of the new transcription.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Transcription"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The response contains the location of the entity as header.",
            "schema": {
              "$ref": "#/definitions/Transcription"
            },
            "headers": {
              "Location": {
                "description": "The location of the created resource.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Create a transcription": {
            "$ref": "./examples/create_transcription.json"
          }
        }
      }
    },
    "/transcriptions/{id}": {
      "get": {
        "tags": [
          "Custom Speech transcriptions:"
        ],
        "summary": "Gets the transcription identified by the given ID.",
        "operationId": "GetTranscription",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the transcription.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Transcription"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Get a transcription": {
            "$ref": "./examples/get_transcription.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Custom Speech transcriptions:"
        ],
        "summary": "Updates the mutable details of the transcription identified by its ID.",
        "operationId": "UpdateTranscription",
        "consumes": [
          "application/json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the transcription.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "transcriptionUpdate",
            "description": "The updated values for the transcription.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TranscriptionUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Transcription"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "409": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Update a transcription": {
            "$ref": "./examples/update_transcription.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Custom Speech transcriptions:"
        ],
        "summary": "Deletes the specified transcription task.",
        "operationId": "DeleteTranscription",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the transcription.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "The transcription was successfully deleted or did not exist."
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Delete a transcription": {
            "$ref": "./examples/delete_transcription.json"
          }
        }
      }
    },
    "/transcriptions/{id}/files": {
      "get": {
        "tags": [
          "Custom Speech transcriptions:"
        ],
        "summary": "Gets the files of the transcription identified by the given ID.",
        "operationId": "GetTranscriptionFiles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the transcription.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "sasValidityInSeconds",
            "description": "The duration in seconds that an SAS url should be valid. The default duration is 12 hours.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "Number of files that will be skipped.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "Number of files that will be included after skipping.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedFiles"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-pageable": {
          "itemName": "values",
          "nextLinkName": "@nextLink"
        },
        "x-ms-examples": {
          "Get all files": {
            "$ref": "./examples/get_transcription_files.json"
          }
        }
      }
    },
    "/transcriptions/{id}/files/{fileId}": {
      "get": {
        "tags": [
          "Custom Speech transcriptions:"
        ],
        "summary": "Gets one specific file (identified with fileId) from a transcription (identified with id).",
        "operationId": "GetTranscriptionFile",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the transcription.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "fileId",
            "description": "The identifier of the file.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "sasValidityInSeconds",
            "description": "The duration in seconds that an SAS url should be valid. The default duration is 12 hours.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/File"
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Get a file": {
            "$ref": "./examples/get_transcription_file.json"
          }
        }
      }
    },
    "/webhooks": {
      "get": {
        "tags": [
          "Custom Speech web hooks:"
        ],
        "summary": "Gets the list of web hooks for the authenticated subscription.",
        "operationId": "GetHooks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "description": "Number of hooks that will be skipped.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "Number of hooks that will be included after skipping.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedWebHooks"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-pageable": {
          "itemName": "values",
          "nextLinkName": "@nextLink"
        },
        "x-ms-examples": {
          "Get all web hooks": {
            "$ref": "./examples/get_web_hooks.json"
          }
        }
      },
      "post": {
        "tags": [
          "Custom Speech web hooks:"
        ],
        "summary": "Creates a new web hook.",
        "description": "If the property secret in the configuration is present and contains a non-empty string, it will be used to create a SHA256 hash of the payload with\r\nthe secret as HMAC key. This hash will be set as X-MicrosoftSpeechServices-Signature header when calling back into the registered URL.\r\n            \r\nWhen calling back into the registered URL, the request will contain a X-MicrosoftSpeechServices-Event header containing one of the registered event\r\ntypes. There will be one request per registered event type.\r\n            \r\nAfter successfully registering the web hook, it will not be usable until a challenge/response is completed. To do this, a request with the event type\r\nchallenge will be made with a query parameter called validationToken. Respond to the challenge with a 200 OK containing the value of the validationToken\r\nquery parameter as the response body. When the challenge/response is successfully completed, the web hook will begin receiving events.",
        "operationId": "CreateHook",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "webHook",
            "description": "The details of the new web hook.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebHook"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The response contains the location of the entity as header.",
            "schema": {
              "$ref": "#/definitions/WebHook"
            },
            "headers": {
              "Location": {
                "description": "The location of the created resource.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Create a web hook": {
            "$ref": "./examples/create_web_hook.json"
          }
        }
      }
    },
    "/webhooks/{id}": {
      "get": {
        "tags": [
          "Custom Speech web hooks:"
        ],
        "summary": "Gets the web hook identified by the given ID.",
        "operationId": "GetHook",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the web hook.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebHook"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Get a web hook": {
            "$ref": "./examples/get_web_hook.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Custom Speech web hooks:"
        ],
        "summary": "Updates the web hook identified by the given ID.",
        "description": "If the property secret in the configuration is omitted or contains an empty string, future callbacks won't contain X-MicrosoftSpeechServices-Signature\r\nheaders. If the property contains a non-empty string, it will be used to create a SHA256 hash of the payload with the secret as HMAC key. This hash\r\nwill be set as X-MicrosoftSpeechServices-Signature header when calling back into the registered URL.\r\n            \r\nIf the URL changes,  the web hook will stop receiving events until a\r\nchallenge/response is completed. To do this, a request with the event type challenge will be made with a query parameter called validationToken.\r\nRespond to the challenge with a 200 OK containing the value of the validationToken query parameter as the response body. When the challenge/response\r\nis successfully completed, the web hook will begin receiving events.",
        "operationId": "UpdateHook",
        "consumes": [
          "application/json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the web hook.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "webHookUpdate",
            "description": "The updated values for the web hook.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebHookUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebHook"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait for a non terminal operation to complete.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "409": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Update a web hook": {
            "$ref": "./examples/update_web_hook.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Custom Speech web hooks:"
        ],
        "summary": "Deletes the web hook identified by the given ID.",
        "operationId": "DeleteHook",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the web hook.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "The web hook was successfully deleted."
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Delete a web hook": {
            "$ref": "./examples/delete_web_hook.json"
          }
        }
      }
    },
    "/webhooks/{id}/ping": {
      "post": {
        "tags": [
          "Custom Speech web hooks:"
        ],
        "summary": "Sends a ping event to the registered URL.",
        "description": "The request body of the POST request sent to the registered web hook URL is of the same shape as in the GET request for a specific hook.\r\nThe Swagger Schema ID of the model is WebHookV3.\r\n            \r\nThe request will contain a X-MicrosoftSpeechServices-Event header with the value ping. If the web hook was registered with\r\na secret it will contain a X-MicrosoftSpeechServices-Signature header with an SHA256 hash of the payload with\r\nthe secret as HMAC key. The hash is base64 encoded.",
        "operationId": "PingHook",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the web hook to ping.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "202": {
            "description": "Started trying to send a ping request to the web hook.",
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before accessing the resource created in this operation.",
                "type": "integer"
              },
              "Location": {
                "description": "The location of the created resource.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Ping a web hook": {
            "$ref": "./examples/ping_web_hook.json"
          }
        }
      }
    },
    "/webhooks/{id}/test": {
      "post": {
        "tags": [
          "Custom Speech web hooks:"
        ],
        "summary": "Sends a request for each registered event type to the registered URL.",
        "description": "The payload will be generated from the last entity that would have invoked the web hook. If no entity is present for none of the registered event types,\r\nthe POST will respond with 204. If a test request can be made, it will respond with 200.\r\nThe request will contain a X-MicrosoftSpeechServices-Event header with the respective registered event type.\r\nIf the web hook was registered with a secret it will contain a X-MicrosoftSpeechServices-Signature header with an SHA256 hash of the payload with\r\nthe secret as HMAC key. The hash is base64 encoded.",
        "operationId": "TestHook",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The identifier of the web hook to ping.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "202": {
            "description": "A test request with the last entity is sent to the registered web hook.",
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before accessing the resource created in this operation.",
                "type": "integer"
              },
              "Location": {
                "description": "The location of the created resource.",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "No entity could be found for any event type, so no test request is sent to the registered web hook."
          },
          "400": {
            "description": "In case the operation cannot be performed successfully with the specified values.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "404": {
            "description": "In case the specified entity doesn't exist",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Test a web hook": {
            "$ref": "./examples/test_web_hook.json"
          }
        }
      }
    },
    "/healthstatus": {
      "get": {
        "tags": [
          "Service Health:"
        ],
        "summary": "Returns the overall health of the service and optionally of the different subcomponents.",
        "operationId": "GetHealthStatus",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceHealth"
            }
          },
          "401": {
            "description": "In case the user isn't authorized.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "In case authorized user isn't known or doesn't have the required permissions.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "In case the rate limit has been exceeded.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Retry-After": {
                "description": "The minimum number of seconds to wait before not getting this response anymore.",
                "type": "integer"
              }
            },
            "x-ms-error-response": true
          }
        },
        "security": [
          {
            "subscription_key": [],
            "token": []
          }
        ],
        "x-ms-examples": {
          "Gets the health status": {
            "$ref": "examples/get_healthstatus.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Component": {
      "title": "Component",
      "type": "object",
      "properties": {
        "message": {
          "description": "Additional messages about the current service health.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the component.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "The health status of this component.",
          "enum": [
            "Unhealthy",
            "Degraded",
            "Healthy"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "HealthStatus",
            "modelAsString": false
          }
        },
        "type": {
          "description": "The type of this component.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Dataset": {
      "title": "Dataset",
      "required": [
        "displayName",
        "kind",
        "locale"
      ],
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "properties": {
          "$ref": "#/definitions/DatasetProperties"
        },
        "kind": {
          "description": "The kind of the dataset.",
          "enum": [
            "Language",
            "Acoustic",
            "Pronunciation",
            "AudioFiles"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DatasetKind",
            "modelAsString": false
          }
        },
        "self": {
          "description": "The location of this entity.",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "The display name of the object.",
          "type": "string"
        },
        "description": {
          "description": "The description of the object.",
          "type": "string"
        },
        "project": {
          "$ref": "#/definitions/EntityReference"
        },
        "contentUrl": {
          "description": "The URL of the data for the dataset.",
          "type": "string"
        },
        "customProperties": {
          "description": "The custom properties of this entity. The maximum allowed key length is 64 characters, the maximum\r\nallowed value length is 256 characters and the count of allowed entries is 10.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "locale": {
          "description": "The locale of the contained data.",
          "type": "string"
        },
        "lastActionDateTime": {
          "format": "date-time",
          "description": "The time-stamp when the current status was entered.\r\nThe time stamp is encoded as ISO 8601 date and time format\r\n(\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "The status of the object.",
          "enum": [
            "NotStarted",
            "Running",
            "Succeeded",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": false
          }
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "The time-stamp when the object was created.\r\nThe time stamp is encoded as ISO 8601 date and time format\r\n(\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DatasetLocales": {
      "title": "DatasetLocales",
      "type": "object",
      "additionalProperties": {
        "type": "array",
        "items": {
          "enum": [
            "Language",
            "Acoustic",
            "Pronunciation",
            "AudioFiles"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DatasetKind",
            "modelAsString": false
          }
        }
      }
    },
    "DatasetProperties": {
      "title": "DatasetProperties",
      "type": "object",
      "properties": {
        "acceptedLineCount": {
          "format": "int32",
          "description": "The number of lines accepted for this data set.",
          "type": "integer",
          "readOnly": true
        },
        "rejectedLineCount": {
          "format": "int32",
          "description": "The number of lines rejected for this data set.",
          "type": "integer",
          "readOnly": true
        },
        "duration": {
          "description": "The total duration of the datasets if it contains audio files. The duration is encoded as ISO 8601 duration\r\n(\"PnYnMnDTnHnMnS\", see https://en.wikipedia.org/wiki/ISO_8601#Durations).",
          "type": "string",
          "readOnly": true
        },
        "email": {
          "description": "The email address to send email notifications to in case the operation completes.\r\nThe value will be removed after successfully sending the email.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/EntityError"
        }
      }
    },
    "DatasetUpdate": {
      "title": "DatasetUpdate",
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/EntityReference"
        },
        "displayName": {
          "description": "The name of the object.",
          "type": "string"
        },
        "description": {
          "description": "The description of the object.",
          "type": "string"
        },
        "customProperties": {
          "description": "The custom properties of this entity. The maximum allowed key length is 64 characters, the maximum\r\nallowed value length is 256 characters and the count of allowed entries is 10.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Endpoint": {
      "title": "Endpoint",
      "required": [
        "displayName",
        "locale"
      ],
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/EntityReference"
        },
        "links": {
          "$ref": "#/definitions/EndpointLinks"
        },
        "properties": {
          "$ref": "#/definitions/EndpointProperties"
        },
        "self": {
          "description": "The location of this entity.",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "The display name of the object.",
          "type": "string"
        },
        "description": {
          "description": "The description of the object.",
          "type": "string"
        },
        "text": {
          "description": "The text used to adapt a language model for this endpoint.",
          "type": "string"
        },
        "model": {
          "$ref": "#/definitions/EntityReference"
        },
        "locale": {
          "description": "The locale of the contained data.",
          "type": "string"
        },
        "customProperties": {
          "description": "The custom properties of this entity. The maximum allowed key length is 64 characters, the maximum\r\nallowed value length is 256 characters and the count of allowed entries is 10.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "lastActionDateTime": {
          "format": "date-time",
          "description": "The time-stamp when the current status was entered.\r\nThe time stamp is encoded as ISO 8601 date and time format\r\n(\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "The status of the object.",
          "enum": [
            "NotStarted",
            "Running",
            "Succeeded",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": false
          }
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "The time-stamp when the object was created.\r\nThe time stamp is encoded as ISO 8601 date and time format\r\n(\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EndpointLinks": {
      "title": "EndpointLinks",
      "type": "object",
      "properties": {
        "restInteractive": {
          "description": "The REST endpoint for short requests up to 15 seconds.",
          "type": "string",
          "readOnly": true
        },
        "restConversation": {
          "description": "The REST endpoint for requests up to 60 seconds.",
          "type": "string",
          "readOnly": true
        },
        "restDictation": {
          "description": "The REST endpoint for requests up to 60 seconds, supporting dictation of punctuation marks.",
          "type": "string",
          "readOnly": true
        },
        "webSocketInteractive": {
          "description": "The Speech SDK endpoint for short requests up to 15 seconds with a single final result.",
          "type": "string",
          "readOnly": true
        },
        "webSocketConversation": {
          "description": "The Speech SDK endpoint for long requests with multiple final results.",
          "type": "string",
          "readOnly": true
        },
        "webSocketDictation": {
          "description": "The Speech SDK endpoint for long requests with multiple final results, supporting dictation of\r\npunctuation marks.",
          "type": "string",
          "readOnly": true
        },
        "logs": {
          "description": "The audio and transcription logs for this endpoint.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EndpointProperties": {
      "title": "EndpointProperties",
      "type": "object",
      "properties": {
        "loggingEnabled": {
          "description": "A value indicating whether content logging (audio & transcriptions) is being used for a deployment.",
          "type": "boolean"
        },
        "timeToLive": {
          "description": "How long the endpoint will be kept in the system. Once the endpoint reaches the time to live\r\nafter completion (successful or failed) it will be automatically deleted. Not setting this value or setting\r\nto 0 will disable automatic deletion.\r\nThe duration is encoded as ISO 8601 duration (\"PnYnMnDTnHnMnS\", see https://en.wikipedia.org/wiki/ISO_8601#Durations).",
          "type": "string"
        },
        "email": {
          "description": "The email address to send email notifications to in case the operation completes.\r\nThe value will be removed after successfully sending the email.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/EntityError"
        }
      }
    },
    "EndpointPropertiesUpdate": {
      "title": "EndpointPropertiesUpdate",
      "type": "object",
      "properties": {
        "contentLoggingEnabled": {
          "description": "A value indicating whether content logging (audio & transcriptions)\r\nis being used for a deployment.",
          "type": "boolean"
        }
      }
    },
    "EndpointUpdate": {
      "title": "EndpointUpdate",
      "type": "object",
      "properties": {
        "model": {
          "$ref": "#/definitions/EntityReference"
        },
        "properties": {
          "$ref": "#/definitions/EndpointPropertiesUpdate"
        },
        "project": {
          "$ref": "#/definitions/EntityReference"
        },
        "displayName": {
          "description": "The name of the object.",
          "type": "string"
        },
        "description": {
          "description": "The description of the object.",
          "type": "string"
        },
        "customProperties": {
          "description": "The custom properties of this entity. The maximum allowed key length is 64 characters, the maximum\r\nallowed value length is 256 characters and the count of allowed entries is 10.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "EntityError": {
      "title": "EntityError",
      "type": "object",
      "properties": {
        "code": {
          "description": "The code of this error.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "The message for this error.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EntityReference": {
      "title": "EntityReference",
      "required": [
        "self"
      ],
      "type": "object",
      "properties": {
        "self": {
          "description": "The location of the referenced entity.",
          "type": "string"
        }
      }
    },
    "Error": {
      "title": "Error",
      "description": "New format which conforms to the new Cognitive Services API guidelines which is available at https://microsoft.sharepoint.com/%3Aw%3A/t/CognitiveServicesPMO/EUoytcrjuJdKpeOKIK_QRC8BPtUYQpKBi8JsWyeDMRsWlQ?e=CPq8ow.\r\nThis contains an outer error with error code, message, details, target and an inner error with more descriptive details.",
      "type": "object",
      "properties": {
        "code": {
          "title": "ErrorCode",
          "description": "High level error code.",
          "enum": [
            "InvalidRequest",
            "InvalidArgument",
            "InternalServerError",
            "ServiceUnavailable",
            "NotFound",
            "PipelineError",
            "Conflict",
            "InternalCommunicationFailed",
            "Forbidden",
            "NotAllowed",
            "Unauthorized",
            "UnsupportedMediaType",
            "TooManyRequests"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ErrorCode",
            "modelAsString": true
          }
        },
        "details": {
          "description": "Additional supportive details regarding the error and/or expected policies.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "message": {
          "description": "High level error message.",
          "type": "string"
        },
        "target": {
          "description": "The source of the error.\r\nFor example it would be \"documents\" or \"document id\" in case of invalid document.",
          "type": "string"
        },
        "innerError": {
          "$ref": "#/definitions/InnerError"
        }
      }
    },
    "Evaluation": {
      "title": "Evaluation",
      "required": [
        "dataset",
        "displayName",
        "locale",
        "model1",
        "model2"
      ],
      "type": "object",
      "properties": {
        "model1": {
          "$ref": "#/definitions/EntityReference"
        },
        "model2": {
          "$ref": "#/definitions/EntityReference"
        },
        "transcription1": {
          "$ref": "#/definitions/EntityReference"
        },
        "transcription2": {
          "$ref": "#/definitions/EntityReference"
        },
        "dataset": {
          "$ref": "#/definitions/EntityReference"
        },
        "links": {
          "$ref": "#/definitions/Links"
        },
        "properties": {
          "$ref": "#/definitions/EvaluationProperties"
        },
        "project": {
          "$ref": "#/definitions/EntityReference"
        },
        "self": {
          "description": "The location of this entity.",
          "type": "string",
          "readOnly": true
        },
        "lastActionDateTime": {
          "format": "date-time",
          "description": "The time-stamp when the current status was entered.\r\nThe time stamp is encoded as ISO 8601 date and time format\r\n(\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "The status of the object.",
          "enum": [
            "NotStarted",
            "Running",
            "Succeeded",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": false
          }
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "The time-stamp when the object was created.\r\nThe time stamp is encoded as ISO 8601 date and time format\r\n(\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "The display name of the object.",
          "type": "string"
        },
        "description": {
          "description": "The description of the object.",
          "type": "string"
        },
        "customProperties": {
          "description": "The custom properties of this entity. The maximum allowed key length is 64 characters, the maximum\r\nallowed value length is 256 characters and the count of allowed entries is 10.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "locale": {
          "description": "The locale of the contained data.",
          "type": "string"
        }
      }
    },
    "EvaluationProperties": {
      "title": "EvaluationProperties",
      "type": "object",
      "properties": {
        "wordErrorRate2": {
          "format": "double",
          "description": "The word error rate of recognition with model2.",
          "type": "number",
          "readOnly": true
        },
        "wordErrorRate1": {
          "format": "double",
          "description": "The word error rate of recognition with model1.",
          "type": "number",
          "readOnly": true
        },
        "sentenceErrorRate2": {
          "format": "double",
          "description": "The sentence error rate of recognition with model2.",
          "type": "number",
          "readOnly": true
        },
        "sentenceCount2": {
          "format": "int32",
          "description": "The number of processed sentences by model2.",
          "type": "integer",
          "readOnly": true
        },
        "wordCount2": {
          "format": "int32",
          "description": "The number of processed words by model2.",
          "type": "integer",
          "readOnly": true
        },
        "correctWordCount2": {
          "format": "int32",
          "description": "The number of correctly recognized words by model2.",
          "type": "integer",
          "readOnly": true
        },
        "wordSubstitutionCount2": {
          "format": "int32",
          "description": "The number of recognized words by model2, that are substitutions.",
          "type": "integer",
          "readOnly": true
        },
        "wordDeletionCount2": {
          "format": "int32",
          "description": "The number of recognized words by model2, that are deletions.",
          "type": "integer",
          "readOnly": true
        },
        "wordInsertionCount2": {
          "format": "int32",
          "description": "The number of recognized words by model2, that are insertions.",
          "type": "integer",
          "readOnly": true
        },
        "sentenceErrorRate1": {
          "format": "double",
          "description": "The sentence error rate of recognition with model1.",
          "type": "number",
          "readOnly": true
        },
        "sentenceCount1": {
          "format": "int32",
          "description": "The number of processed sentences by model1.",
          "type": "integer",
          "readOnly": true
        },
        "wordCount1": {
          "format": "int32",
          "description": "The number of processed words by model1.",
          "type": "integer",
          "readOnly": true
        },
        "correctWordCount1": {
          "format": "int32",
          "description": "The number of correctly recognized words by model1.",
          "type": "integer",
          "readOnly": true
        },
        "wordSubstitutionCount1": {
          "format": "int32",
          "description": "The number of recognized words by model1, that are substitutions.",
          "type": "integer",
          "readOnly": true
        },
        "wordDeletionCount1": {
          "format": "int32",
          "description": "The number of recognized words by model1, that are deletions.",
          "type": "integer",
          "readOnly": true
        },
        "wordInsertionCount1": {
          "format": "int32",
          "description": "The number of recognized words by model1, that are insertions.",
          "type": "integer",
          "readOnly": true
        },
        "email": {
          "description": "The email address to send email notifications to in case the operation completes.\r\nThe value will be removed after successfully sending the email.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/EntityError"
        }
      }
    },
    "EvaluationUpdate": {
      "title": "EvaluationUpdate",
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/EntityReference"
        },
        "displayName": {
          "description": "The name of the object.",
          "type": "string"
        },
        "description": {
          "description": "The description of the object.",
          "type": "string"
        },
        "customProperties": {
          "description": "The custom properties of this entity. The maximum allowed key length is 64 characters, the maximum\r\nallowed value length is 256 characters and the count of allowed entries is 10.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "File": {
      "title": "File",
      "type": "object",
      "properties": {
        "kind": {
          "description": "The kind of this file.",
          "enum": [
            "DatasetReport",
            "Audio",
            "LanguageData",
            "PronunciationData",
            "AcousticDataArchive",
            "AcousticDataTranscriptionV2",
            "Transcription",
            "TranscriptionReport",
            "EvaluationDetails"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "FileKind",
            "modelAsString": true
          }
        },
        "links": {
          "$ref": "#/definitions/FileLinks"
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "The creation time of this file.\r\nThe time stamp is encoded as ISO 8601 date and time format\r\n(see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/FileProperties"
        },
        "name": {
          "description": "The name of this file.",
          "type": "string",
          "readOnly": true
        },
        "self": {
          "description": "The location of this entity.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "FileLinks": {
      "title": "FileLinks",
      "type": "object",
      "properties": {
        "contentUrl": {
          "description": "The url to retrieve the content of this file.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "FileProperties": {
      "title": "FileProperties",
      "type": "object",
      "properties": {
        "size": {
          "format": "int64",
          "description": "The size of the data in bytes.",
          "type": "integer",
          "readOnly": true
        },
        "duration": {
          "description": "The duration in case this file is an audio file. The duration is encoded as ISO 8601\r\nduration (\"PnYnMnDTnHnMnS\", see https://en.wikipedia.org/wiki/ISO_8601#Durations).",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "InnerError": {
      "title": "InnerError",
      "description": "New Inner Error format which conforms to Cognitive Services API Guidelines which is available at https://microsoft.sharepoint.com/%3Aw%3A/t/CognitiveServicesPMO/EUoytcrjuJdKpeOKIK_QRC8BPtUYQpKBi8JsWyeDMRsWlQ?e=CPq8ow.\r\nThis contains required properties ErrorCode, message and optional properties target, details(key value pair), inner error(this can be nested).",
      "type": "object",
      "properties": {
        "code": {
          "description": "Detailed error code.",
          "enum": [
            "InvalidParameterValue",
            "InvalidRequestBodyFormat",
            "EmptyRequest",
            "MissingInputRecords",
            "InvalidDocument",
            "ModelVersionIncorrect",
            "InvalidDocumentBatch",
            "UnsupportedLanguageCode",
            "DataImportFailed",
            "InUseViolation",
            "InvalidLocale",
            "InvalidBaseModel",
            "InvalidAdaptationMapping",
            "InvalidDataset",
            "InvalidTest",
            "FailedDataset",
            "InvalidModel",
            "InvalidTranscription",
            "InvalidPayload",
            "InvalidParameter",
            "EndpointWithoutLogging",
            "InvalidPermissions",
            "InvalidPrerequisite",
            "InvalidProductId",
            "InvalidSubscription",
            "InvalidProject",
            "InvalidProjectKind",
            "InvalidRecordingsUri",
            "OnlyOneOfUrlsOrContainerOrDataset",
            "ExceededNumberOfRecordingsUris",
            "ModelMismatch",
            "ProjectGenderMismatch",
            "ModelDeprecated",
            "ModelExists",
            "ModelNotDeployable",
            "EndpointNotUpdatable",
            "SingleDefaultEndpoint",
            "EndpointCannotBeDefault",
            "InvalidModelUri",
            "SubscriptionNotFound",
            "QuotaViolation",
            "UnsupportedDelta",
            "UnsupportedFilter",
            "UnsupportedPagination",
            "UnsupportedDynamicConfiguration",
            "UnsupportedOrderBy",
            "NoUtf8WithBom",
            "ModelDeploymentNotCompleteState",
            "SkuLimitsExist",
            "DeployingFailedModel",
            "UnsupportedTimeRange",
            "InvalidLogDate",
            "InvalidLogId",
            "InvalidLogStartTime",
            "InvalidLogEndTime",
            "InvalidTopForLogs",
            "DeleteNotAllowed",
            "Forbidden",
            "DeployNotAllowed",
            "UnexpectedError",
            "InvalidCollection",
            "InvalidCallbackUri",
            "InvalidSasValidityDuration",
            "InaccessibleCustomerStorage",
            "UnsupportedClassBasedAdaptation",
            "InvalidWebHookEventKind"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DetailedErrorCode",
            "modelAsString": true
          }
        },
        "details": {
          "description": "Additional supportive details regarding the error and/or expected policies.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "message": {
          "description": "High level error message.",
          "type": "string"
        },
        "target": {
          "description": "The source of the error.\r\nFor example it would be \"documents\" or \"document id\" in case of invalid document.",
          "type": "string"
        },
        "innerError": {
          "$ref": "#/definitions/InnerError"
        }
      }
    },
    "Links": {
      "title": "Links",
      "type": "object",
      "properties": {
        "files": {
          "description": "The location to get all files of this entity.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Model": {
      "title": "Model",
      "required": [
        "displayName",
        "locale"
      ],
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/EntityReference"
        },
        "links": {
          "$ref": "#/definitions/ModelLinks"
        },
        "properties": {
          "$ref": "#/definitions/ModelProperties"
        },
        "self": {
          "description": "The location of this entity.",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "The display name of the object.",
          "type": "string"
        },
        "description": {
          "description": "The description of the object.",
          "type": "string"
        },
        "text": {
          "description": "The text used to adapt this language model.",
          "type": "string"
        },
        "baseModel": {
          "$ref": "#/definitions/EntityReference"
        },
        "datasets": {
          "description": "Datasets used for adaptation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityReference"
          }
        },
        "locale": {
          "description": "The locale of the contained data.",
          "type": "string"
        },
        "lastActionDateTime": {
          "format": "date-time",
          "description": "The time-stamp when the current status was entered.\r\nThe time stamp is encoded as ISO 8601 date and time format\r\n(\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "The status of the object.",
          "enum": [
            "NotStarted",
            "Running",
            "Succeeded",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": false
          }
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "The time-stamp when the object was created.\r\nThe time stamp is encoded as ISO 8601 date and time format\r\n(\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).",
          "type": "string",
          "readOnly": true
        },
        "customProperties": {
          "description": "The custom properties of this entity. The maximum allowed key length is 64 characters, the maximum\r\nallowed value length is 256 characters and the count of allowed entries is 10.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ModelCopy": {
      "title": "ModelCopy",
      "required": [
        "targetSubscriptionKey"
      ],
      "type": "object",
      "properties": {
        "targetSubscriptionKey": {
          "description": "The subscription key of the subscription that is the target of the copy operation.",
          "type": "string"
        }
      }
    },
    "ModelDeprecationDates": {
      "title": "ModelDeprecationDates",
      "type": "object",
      "properties": {
        "adaptationDateTime": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "transcriptionDateTime": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ModelFile": {
      "title": "ModelFile",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of this file.",
          "type": "string",
          "readOnly": true
        },
        "contentUrl": {
          "description": "The url to retrieve the content of this file.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ModelLinks": {
      "title": "ModelLinks",
      "type": "object",
      "properties": {
        "manifest": {
          "description": "The location to get a manifest for this model to be used in the on-prem container.",
          "type": "string",
          "readOnly": true
        },
        "copyTo": {
          "description": "The location to the model copy action.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ModelManifest": {
      "title": "ModelManifest",
      "required": [
        "model",
        "modelFiles",
        "properties"
      ],
      "type": "object",
      "properties": {
        "model": {
          "$ref": "#/definitions/EntityReference"
        },
        "modelFiles": {
          "description": "The model files, the endpoint requires.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelFile"
          }
        },
        "properties": {
          "description": "The configuration of the endpoint.",
          "type": "object",
          "additionalProperties": {
            "title": "Object",
            "type": "object"
          }
        }
      }
    },
    "ModelProperties": {
      "title": "ModelProperties",
      "type": "object",
      "properties": {
        "deprecationDates": {
          "$ref": "#/definitions/ModelDeprecationDates"
        },
        "email": {
          "description": "The email address to send email notifications to in case the operation completes.\r\nThe value will be removed after successfully sending the email.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/EntityError"
        }
      }
    },
    "ModelUpdate": {
      "title": "ModelUpdate",
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/EntityReference"
        },
        "displayName": {
          "description": "The name of the object.",
          "type": "string"
        },
        "description": {
          "description": "The description of the object.",
          "type": "string"
        },
        "customProperties": {
          "description": "The custom properties of this entity. The maximum allowed key length is 64 characters, the maximum\r\nallowed value length is 256 characters and the count of allowed entries is 10.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "PaginatedDatasets": {
      "title": "PaginatedDatasets",
      "type": "object",
      "properties": {
        "values": {
          "description": "A list of entities limited by either the passed query parameters 'skip' and 'top' or their default values.\r\n            \r\nWhen iterating through a list using pagination and deleting entities in parallel, some entities will be skipped in the results.\r\nIt's recommended to build a list on the client and delete after the fetching of the complete list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dataset"
          },
          "readOnly": true
        },
        "@nextLink": {
          "description": "A link to the next set of paginated results if there are more entities available; otherwise null.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PaginatedEndpoints": {
      "title": "PaginatedEndpoints",
      "type": "object",
      "properties": {
        "values": {
          "description": "A list of entities limited by either the passed query parameters 'skip' and 'top' or their default values.\r\n            \r\nWhen iterating through a list using pagination and deleting entities in parallel, some entities will be skipped in the results.\r\nIt's recommended to build a list on the client and delete after the fetching of the complete list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Endpoint"
          },
          "readOnly": true
        },
        "@nextLink": {
          "description": "A link to the next set of paginated results if there are more entities available; otherwise null.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PaginatedEvaluations": {
      "title": "PaginatedEvaluations",
      "type": "object",
      "properties": {
        "values": {
          "description": "A list of entities limited by either the passed query parameters 'skip' and 'top' or their default values.\r\n            \r\nWhen iterating through a list using pagination and deleting entities in parallel, some entities will be skipped in the results.\r\nIt's recommended to build a list on the client and delete after the fetching of the complete list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Evaluation"
          },
          "readOnly": true
        },
        "@nextLink": {
          "description": "A link to the next set of paginated results if there are more entities available; otherwise null.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PaginatedFiles": {
      "title": "PaginatedFiles",
      "type": "object",
      "properties": {
        "values": {
          "description": "A list of entities limited by either the passed query parameters 'skip' and 'top' or their default values.\r\n            \r\nWhen iterating through a list using pagination and deleting entities in parallel, some entities will be skipped in the results.\r\nIt's recommended to build a list on the client and delete after the fetching of the complete list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/File"
          },
          "readOnly": true
        },
        "@nextLink": {
          "description": "A link to the next set of paginated results if there are more entities available; otherwise null.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PaginatedModels": {
      "title": "PaginatedModels",
      "type": "object",
      "properties": {
        "values": {
          "description": "A list of entities limited by either the passed query parameters 'skip' and 'top' or their default values.\r\n            \r\nWhen iterating through a list using pagination and deleting entities in parallel, some entities will be skipped in the results.\r\nIt's recommended to build a list on the client and delete after the fetching of the complete list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Model"
          },
          "readOnly": true
        },
        "@nextLink": {
          "description": "A link to the next set of paginated results if there are more entities available; otherwise null.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PaginatedProjects": {
      "title": "PaginatedProjects",
      "type": "object",
      "properties": {
        "values": {
          "description": "A list of entities limited by either the passed query parameters 'skip' and 'top' or their default values.\r\n            \r\nWhen iterating through a list using pagination and deleting entities in parallel, some entities will be skipped in the results.\r\nIt's recommended to build a list on the client and delete after the fetching of the complete list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Project"
          },
          "readOnly": true
        },
        "@nextLink": {
          "description": "A link to the next set of paginated results if there are more entities available; otherwise null.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PaginatedTranscriptions": {
      "title": "PaginatedTranscriptions",
      "type": "object",
      "properties": {
        "values": {
          "description": "A list of entities limited by either the passed query parameters 'skip' and 'top' or their default values.\r\n            \r\nWhen iterating through a list using pagination and deleting entities in parallel, some entities will be skipped in the results.\r\nIt's recommended to build a list on the client and delete after the fetching of the complete list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transcription"
          },
          "readOnly": true
        },
        "@nextLink": {
          "description": "A link to the next set of paginated results if there are more entities available; otherwise null.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PaginatedWebHooks": {
      "title": "PaginatedWebHooks",
      "type": "object",
      "properties": {
        "values": {
          "description": "A list of entities limited by either the passed query parameters 'skip' and 'top' or their default values.\r\n            \r\nWhen iterating through a list using pagination and deleting entities in parallel, some entities will be skipped in the results.\r\nIt's recommended to build a list on the client and delete after the fetching of the complete list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebHook"
          },
          "readOnly": true
        },
        "@nextLink": {
          "description": "A link to the next set of paginated results if there are more entities available; otherwise null.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Project": {
      "title": "Project",
      "required": [
        "displayName",
        "locale"
      ],
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/ProjectLinks"
        },
        "properties": {
          "$ref": "#/definitions/ProjectProperties"
        },
        "self": {
          "description": "The location of this entity.",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "The display name of the object.",
          "type": "string"
        },
        "description": {
          "description": "The description of the object.",
          "type": "string"
        },
        "locale": {
          "description": "The locale of the contained data.",
          "type": "string"
        },
        "customProperties": {
          "description": "The custom properties of this entity. The maximum allowed key length is 64 characters, the maximum\r\nallowed value length is 256 characters and the count of allowed entries is 10.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "The time-stamp when the object was created.\r\nThe time stamp is encoded as ISO 8601 date and time format\r\n(\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ProjectLinks": {
      "title": "ProjectLinks",
      "type": "object",
      "properties": {
        "evaluations": {
          "description": "The location to get a list of all evaluations of this project.",
          "type": "string",
          "readOnly": true
        },
        "datasets": {
          "description": "The location to get a list of all datasets of this project.",
          "type": "string",
          "readOnly": true
        },
        "models": {
          "description": "The location to get a list of all models of this project.",
          "type": "string",
          "readOnly": true
        },
        "endpoints": {
          "description": "The location to get a list of all endpoints of this project.",
          "type": "string",
          "readOnly": true
        },
        "transcriptions": {
          "description": "The location to get a list of all transcriptions of this project.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ProjectProperties": {
      "title": "ProjectProperties",
      "type": "object",
      "properties": {
        "datasetCount": {
          "format": "int32",
          "description": "The number of datasets associated to this project.",
          "type": "integer",
          "readOnly": true
        },
        "evaluationCount": {
          "format": "int32",
          "description": "The number of evaluations associated to this project.",
          "type": "integer",
          "readOnly": true
        },
        "modelCount": {
          "format": "int32",
          "description": "The number of models associated to this project.",
          "type": "integer",
          "readOnly": true
        },
        "transcriptionCount": {
          "format": "int32",
          "description": "The number of transcriptions associated to this project.",
          "type": "integer",
          "readOnly": true
        },
        "endpointCount": {
          "format": "int32",
          "description": "The number of endpoints associated to this project.",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "ProjectUpdate": {
      "title": "ProjectUpdate",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The name of the object.",
          "type": "string"
        },
        "description": {
          "description": "The description of the object.",
          "type": "string"
        },
        "customProperties": {
          "description": "The custom properties of this entity. The maximum allowed key length is 64 characters, the maximum\r\nallowed value length is 256 characters and the count of allowed entries is 10.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ServiceHealth": {
      "title": "ServiceHealth",
      "type": "object",
      "properties": {
        "status": {
          "description": "The overall service status.",
          "enum": [
            "Unhealthy",
            "Degraded",
            "Healthy"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "HealthStatus",
            "modelAsString": false
          }
        },
        "message": {
          "description": "Additional messages about the current service health.",
          "type": "string",
          "readOnly": true
        },
        "components": {
          "description": "Optional subcomponents of this service and their status.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Component"
          },
          "readOnly": true
        }
      }
    },
    "Transcription": {
      "title": "Transcription",
      "required": [
        "displayName",
        "locale"
      ],
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "properties": {
          "$ref": "#/definitions/TranscriptionProperties"
        },
        "self": {
          "description": "The location of this entity.",
          "type": "string",
          "readOnly": true
        },
        "model": {
          "$ref": "#/definitions/EntityReference"
        },
        "project": {
          "$ref": "#/definitions/EntityReference"
        },
        "dataset": {
          "$ref": "#/definitions/EntityReference"
        },
        "contentUrls": {
          "description": "A list of content urls to get audio files from for transcription. Up to 1000 urls are allowed.\r\nThis property will not be returned in a response.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contentContainerUrl": {
          "description": "A URL for an Azure blob container that contains the audio files. A container is allowed to have a maximum size of 5GB and a maximum number of 10000 blobs.\r\nThe maximum size for a blob is 2.5GB.\r\nContainer SAS should contain 'r' (read) and 'l' (list) permissions.\r\nThis property will not be returned in a response.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the object.",
          "type": "string"
        },
        "description": {
          "description": "The description of the object.",
          "type": "string"
        },
        "customProperties": {
          "description": "The custom properties of this entity. The maximum allowed key length is 64 characters, the maximum\r\nallowed value length is 256 characters and the count of allowed entries is 10.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "locale": {
          "description": "The locale of the contained data.",
          "type": "string"
        },
        "lastActionDateTime": {
          "format": "date-time",
          "description": "The time-stamp when the current status was entered.\r\nThe time stamp is encoded as ISO 8601 date and time format\r\n(\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "The status of the object.",
          "enum": [
            "NotStarted",
            "Running",
            "Succeeded",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": false
          }
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "The time-stamp when the object was created.\r\nThe time stamp is encoded as ISO 8601 date and time format\r\n(\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TranscriptionProperties": {
      "title": "TranscriptionProperties",
      "type": "object",
      "properties": {
        "diarizationEnabled": {
          "description": "A value indicating whether diarization (speaker separation) is requested.",
          "type": "boolean"
        },
        "wordLevelTimestampsEnabled": {
          "description": "A value indicating whether word level timestamps are requested.",
          "type": "boolean"
        },
        "duration": {
          "description": "The duration of the transcription. The duration is encoded as ISO 8601 duration\r\n(\"PnYnMnDTnHnMnS\", see https://en.wikipedia.org/wiki/ISO_8601#Durations).",
          "type": "string",
          "readOnly": true
        },
        "channels": {
          "description": "A collection of the requested channel numbers.\r\nIn the default case, the channels 0 and 1 are considered.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "destinationContainerUrl": {
          "description": "The requested destination container.",
          "type": "string"
        },
        "punctuationMode": {
          "title": "PunctuationMode",
          "description": "The requested punctuation mode.",
          "enum": [
            "None",
            "Dictated",
            "Automatic",
            "DictatedAndAutomatic"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PunctuationMode",
            "modelAsString": false
          }
        },
        "profanityFilterMode": {
          "title": "ProfanityFilterMode",
          "description": "The requested profanity filter mode.",
          "enum": [
            "None",
            "Removed",
            "Tags",
            "Masked"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ProfanityFilterMode",
            "modelAsString": false
          }
        },
        "timeToLive": {
          "description": "How long the transcription will be kept in the system. Once the transcription reaches the time to live\r\nafter completion (successful or failed) it will be automatically deleted. Not setting this value or setting\r\nto 0 will disable automatic deletion.\r\nThe duration is encoded as ISO 8601 duration (\"PnYnMnDTnHnMnS\", see https://en.wikipedia.org/wiki/ISO_8601#Durations).",
          "type": "string"
        },
        "email": {
          "description": "The email address to send email notifications to in case the operation completes.\r\nThe value will be removed after successfully sending the email.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/EntityError"
        }
      }
    },
    "TranscriptionUpdate": {
      "title": "TranscriptionUpdate",
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/EntityReference"
        },
        "displayName": {
          "description": "The name of the object.",
          "type": "string"
        },
        "description": {
          "description": "The description of the object.",
          "type": "string"
        },
        "customProperties": {
          "description": "The custom properties of this entity. The maximum allowed key length is 64 characters, the maximum\r\nallowed value length is 256 characters and the count of allowed entries is 10.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "WebHook": {
      "title": "WebHook",
      "required": [
        "displayName",
        "events",
        "webUrl"
      ],
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/WebHookLinks"
        },
        "properties": {
          "$ref": "#/definitions/WebHookProperties"
        },
        "self": {
          "description": "The location of this entity.",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "The display name of the object.",
          "type": "string"
        },
        "description": {
          "description": "The description of the object.",
          "type": "string"
        },
        "webUrl": {
          "description": "The registered URL that will be used to send the POST requests for the registered events to.",
          "type": "string"
        },
        "events": {
          "title": "WebHookEvents",
          "description": "A value indicating the webhook event kinds.",
          "type": "object",
          "properties": {
            "datasetCreation": {
              "type": "boolean"
            },
            "datasetProcessing": {
              "type": "boolean"
            },
            "datasetCompletion": {
              "type": "boolean"
            },
            "datasetDeletion": {
              "type": "boolean"
            },
            "modelCreation": {
              "type": "boolean"
            },
            "modelProcessing": {
              "type": "boolean"
            },
            "modelCompletion": {
              "type": "boolean"
            },
            "modelDeletion": {
              "type": "boolean"
            },
            "evaluationCreation": {
              "type": "boolean"
            },
            "evaluationProcessing": {
              "type": "boolean"
            },
            "evaluationCompletion": {
              "type": "boolean"
            },
            "evaluationDeletion": {
              "type": "boolean"
            },
            "transcriptionCreation": {
              "type": "boolean"
            },
            "transcriptionProcessing": {
              "type": "boolean"
            },
            "transcriptionCompletion": {
              "type": "boolean"
            },
            "transcriptionDeletion": {
              "type": "boolean"
            },
            "endpointCreation": {
              "type": "boolean"
            },
            "endpointProcessing": {
              "type": "boolean"
            },
            "endpointCompletion": {
              "type": "boolean"
            },
            "endpointDeletion": {
              "type": "boolean"
            },
            "ping": {
              "type": "boolean"
            },
            "challenge": {
              "type": "boolean"
            }
          }
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "The time-stamp when the object was created.\r\nThe time stamp is encoded as ISO 8601 date and time format\r\n(\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).",
          "type": "string",
          "readOnly": true
        },
        "lastActionDateTime": {
          "format": "date-time",
          "description": "The time-stamp when the current status was entered.\r\nThe time stamp is encoded as ISO 8601 date and time format\r\n(\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "The status of the object.",
          "enum": [
            "NotStarted",
            "Running",
            "Succeeded",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": false
          }
        },
        "customProperties": {
          "description": "The custom properties of this entity. The maximum allowed key length is 64 characters, the maximum\r\nallowed value length is 256 characters and the count of allowed entries is 10.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "WebHookLinks": {
      "title": "WebHookLinks",
      "type": "object",
      "properties": {
        "ping": {
          "description": "The URL that can be used to trigger the sending of a ping event to the registered URL of a web hook registration.",
          "type": "string",
          "readOnly": true
        },
        "test": {
          "description": "The URL that can be used sending test events to the registered URL of a web hook registration.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "WebHookProperties": {
      "title": "WebHookProperties",
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/EntityError"
        },
        "apiVersion": {
          "description": "The API version the web hook was created in. This defines the shape of the payload in the callbacks.\r\nIf the payload type is not supported anymore, because the shape changed and the API version using it is removed (after deprecation),\r\nthe web hook will be disabled.",
          "type": "string",
          "readOnly": true
        },
        "secret": {
          "description": "A secret that will be used to create a SHA256 hash of the payload with the secret as HMAC key.\r\nThis hash will be set as X-MicrosoftSpeechServices-Signature header when calling back into the registered URL.",
          "type": "string"
        }
      }
    },
    "WebHookPropertiesUpdate": {
      "title": "WebHookPropertiesUpdate",
      "type": "object",
      "properties": {
        "secret": {
          "description": "A secret that will be used to create a SHA256 hash of the payload with the secret as HMAC key.\r\nThis hash will be set as X-MicrosoftSpeechServices-Signature header when calling back into the registered URL.",
          "type": "string"
        }
      }
    },
    "WebHookUpdate": {
      "title": "WebHookUpdate",
      "type": "object",
      "properties": {
        "webUrl": {
          "description": "The registered URL that will be used to send the POST requests for the registered events to.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/WebHookPropertiesUpdate"
        },
        "events": {
          "title": "WebHookEvents",
          "description": "A value indicating the webhook event kinds.",
          "type": "object",
          "properties": {
            "datasetCreation": {
              "type": "boolean"
            },
            "datasetProcessing": {
              "type": "boolean"
            },
            "datasetCompletion": {
              "type": "boolean"
            },
            "datasetDeletion": {
              "type": "boolean"
            },
            "modelCreation": {
              "type": "boolean"
            },
            "modelProcessing": {
              "type": "boolean"
            },
            "modelCompletion": {
              "type": "boolean"
            },
            "modelDeletion": {
              "type": "boolean"
            },
            "evaluationCreation": {
              "type": "boolean"
            },
            "evaluationProcessing": {
              "type": "boolean"
            },
            "evaluationCompletion": {
              "type": "boolean"
            },
            "evaluationDeletion": {
              "type": "boolean"
            },
            "transcriptionCreation": {
              "type": "boolean"
            },
            "transcriptionProcessing": {
              "type": "boolean"
            },
            "transcriptionCompletion": {
              "type": "boolean"
            },
            "transcriptionDeletion": {
              "type": "boolean"
            },
            "endpointCreation": {
              "type": "boolean"
            },
            "endpointProcessing": {
              "type": "boolean"
            },
            "endpointCompletion": {
              "type": "boolean"
            },
            "endpointDeletion": {
              "type": "boolean"
            },
            "ping": {
              "type": "boolean"
            },
            "challenge": {
              "type": "boolean"
            }
          }
        },
        "displayName": {
          "description": "The name of the object.",
          "type": "string"
        },
        "description": {
          "description": "The description of the object.",
          "type": "string"
        },
        "customProperties": {
          "description": "The custom properties of this entity. The maximum allowed key length is 64 characters, the maximum\r\nallowed value length is 256 characters and the count of allowed entries is 10.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "subscription_key": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header",
      "description": "Provide your cognitive services subscription key here."
    },
    "token": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Provide an access token from the JWT returned by the STS of this region. Make sure to add the management scope to the token by adding the following query string to the STS URL: ?scope=speechservicesmanagement"
    }
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{Endpoint}/speechtotext/v3.0",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/Endpoint"
      }
    ]
  },
  "parameters": {
    "Endpoint": {
      "name": "Endpoint",
      "description": "Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "in": "path",
      "x-ms-skip-url-encoding": true
    }
  }
}
