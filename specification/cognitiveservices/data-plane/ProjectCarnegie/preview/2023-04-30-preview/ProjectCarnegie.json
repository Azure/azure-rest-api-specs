{
  "swagger": "2.0",
  "info": {
    "title": "ProjectCarnegie service",
    "version": "2023-04-30-preview",
    "description": "Analyze harmful content",
    "x-cadl-generated": [
      {
        "emitter": "@azure-tools/cadl-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}/carnegie/carnegie",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "endpoint",
        "in": "path",
        "required": true,
        "description": "Supported Cognitive Services endpoints (protocol and hostname, for example:\nhttps://<resource-name>.cognitiveservices.azure.com).",
        "type": "string"
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "tags": [],
  "paths": {
    "/image:analyze": {
      "post": {
        "operationId": "ImageOperations_Detect",
        "summary": "Analyze Image",
        "description": "A sync API for harmful content analysis for image",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "description": "The analysis request of the image",
            "schema": {
              "$ref": "#/definitions/ImageDetectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ImageDetectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    },
    "/text/lists": {
      "get": {
        "operationId": "ListManagementTextListsOperations_GetAllTextLists",
        "summary": "Get All Text Lists",
        "description": "Get All Text Lists",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Paths1E17OmdTextListsGetResponses200ContentApplicationJsonSchema"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    },
    "/text/lists/{listId}": {
      "get": {
        "operationId": "ListManagementTextListsOperations_GetDetails",
        "summary": "Get Text List By listId",
        "description": "Returns text list details of the Text List with list Id equal to list Id passed.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "listId",
            "in": "path",
            "required": true,
            "description": "List Id of the list.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TextList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "ListManagementTextListsOperations_Delete",
        "summary": "Delete Text List By listId",
        "description": "Deletes Text List with the list Id equal to list Id passed.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "listId",
            "in": "path",
            "required": true,
            "description": "List Id of the list.",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "operationId": "ListManagementTextListsOperations_Update",
        "summary": "Create Or Update Text List",
        "description": "Updates an Text List by listId, , if listId not exists, create a new Text List",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "listId",
            "in": "path",
            "required": true,
            "description": "List Id of the list.",
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "description": "Properties of the Text List.",
            "schema": {
              "$ref": "#/definitions/TextList"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    },
    "/text/lists/{listId}/items": {
      "get": {
        "operationId": "ListManagementTermOperations_GetAllTerms",
        "summary": "Get All Items By listId",
        "description": "Get All Items By listId",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "listId",
            "in": "path",
            "required": true,
            "description": "List Id of the list.",
            "type": "string"
          },
          {
            "name": "skip",
            "in": "query",
            "required": true,
            "description": "How many terms will be skipped.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "top",
            "in": "query",
            "required": true,
            "description": "How many terms will be fetched.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PathsG4WtohTextListsListidItemsGetResponses200ContentApplicationJsonSchema"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    },
    "/text/lists/{listId}/items/{itemId}": {
      "get": {
        "operationId": "ListManagementTermOperations_AddTerm",
        "summary": "Get Item By itemId and listId",
        "description": "Get Item By itemId and listId",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "listId",
            "in": "path",
            "required": true,
            "description": "List Id of the list.",
            "type": "string"
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "description": "Id of the item in list.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TextListItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "ListManagementTermOperations_DeleteTerm",
        "summary": "Delete Item By itemId and listId",
        "description": "Delete Item By itemId and listId",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "listId",
            "in": "path",
            "required": true,
            "description": "List Id of the list.",
            "type": "string"
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "description": "Id of the item in list.",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "operationId": "ListManagementTermOperations_UpdateTerm",
        "summary": "Create Item In Text List",
        "description": "Create Item In Text List",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "listId",
            "in": "path",
            "required": true,
            "description": "List Id of the list.",
            "type": "string"
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "description": "Id of the item in list.",
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "description": "Schema of the term update body.",
            "schema": {
              "$ref": "#/definitions/TextListItem"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    },
    "/text:analyze": {
      "post": {
        "operationId": "TextOperations_Analyze",
        "summary": "Analyze Text",
        "description": "A sync API for harmful content analysis for text",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "language",
            "in": "query",
            "required": true,
            "description": "Language hint for text analysis.  Value may contain only the language code (ex.\n\"en\", \"fr\") of BCP 47.",
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "description": "The analysis request of the text",
            "schema": {
              "$ref": "#/definitions/TextDetectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TextDetectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "Azure.Core.Foundations.Error[]",
          "description": "An array of details about specific errors that led to this reported error."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "description": "The error object.",
      "required": [
        "code",
        "message",
        "details"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "description": "A response containing error details.",
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      },
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "required": [
        "code"
      ]
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "target": {
          "type": "string",
          "description": "Target of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "Error[]",
          "description": "List of detailed errors."
        },
        "innererror": {
          "$ref": "#/definitions/InnerError",
          "description": "Detailed error."
        }
      },
      "description": "Error info.",
      "required": [
        "code",
        "message"
      ]
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/Error",
          "description": "Error info."
        }
      },
      "description": "Error response object.",
      "required": [
        "error"
      ]
    },
    "Image": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "description": "Base64 encoding of image"
        },
        "url": {
          "type": "string",
          "description": "The blob url of image"
        }
      },
      "description": "The content or url of image"
    },
    "ImageCategory": {
      "type": "string",
      "enum": [
        "Hate",
        "SelfHarm",
        "Sexual",
        "Violence"
      ],
      "x-ms-enum": {
        "name": "ImageCategory",
        "modelAsString": true
      }
    },
    "ImageDetectRequest": {
      "type": "object",
      "properties": {
        "image": {
          "$ref": "#/definitions/Image",
          "description": "The image needs to be scanned"
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageCategory"
          },
          "x-cadl-name": "ImageCategory[]",
          "description": "The categories will be analyzed, if not assigned, default categories will be\nanalyzed"
        }
      },
      "description": "The analysis request of the image",
      "required": [
        "image"
      ]
    },
    "ImageDetectResponse": {
      "type": "object",
      "properties": {
        "hateResult": {
          "$ref": "#/definitions/ImageDetectResult"
        },
        "selfHarmResult": {
          "$ref": "#/definitions/ImageDetectResult"
        },
        "sexualResult": {
          "$ref": "#/definitions/ImageDetectResult"
        },
        "violenceResult": {
          "$ref": "#/definitions/ImageDetectResult"
        }
      },
      "description": "The analysis response of the image"
    },
    "ImageDetectResult": {
      "type": "object",
      "properties": {
        "category": {
          "$ref": "#/definitions/ImageCategory"
        },
        "riskLevel": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "category"
      ]
    },
    "InnerError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "innererror": {
          "$ref": "#/definitions/InnerError",
          "description": "Detailed error."
        }
      },
      "description": "Detailed error.",
      "required": [
        "code"
      ]
    },
    "Paths1E17OmdTextListsGetResponses200ContentApplicationJsonSchema": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextList"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "TextList[]"
        }
      }
    },
    "PathsG4WtohTextListsListidItemsGetResponses200ContentApplicationJsonSchema": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextListItem"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "TextListItem[]"
        }
      }
    },
    "TextBatchDetectStatus": {
      "type": "string",
      "enum": [
        "NotStarted",
        "Running",
        "Failed",
        "Succeeded"
      ],
      "x-ms-enum": {
        "name": "TextBatchDetectStatus",
        "modelAsString": true
      }
    },
    "TextCategory": {
      "type": "string",
      "enum": [
        "Hate",
        "SelfHarm",
        "Sexual",
        "Violence"
      ],
      "x-ms-enum": {
        "name": "TextCategory",
        "modelAsString": true
      }
    },
    "TextDetectRequest": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "The text needs to be scanned"
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextCategory"
          },
          "x-cadl-name": "TextCategory[]",
          "description": "The categories will be analyzed, if not assigned, a default set of categories'\nanalysis results will be returned."
        },
        "blockListIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "The ids of blocklists"
        },
        "breakByBlocklists": {
          "type": "boolean",
          "description": "When set to true, other analysis will be skipped once any of configured\nblocklists was hit. When set to false, all the analysis will be done even when\nblocklists were hit."
        }
      },
      "description": "The analysis request of the text",
      "required": [
        "text"
      ]
    },
    "TextDetectResponse": {
      "type": "object",
      "properties": {
        "blocklistMatchResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextListMatchResult"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "TextListMatchResult[]",
          "description": "The details of list match"
        },
        "hateResult": {
          "$ref": "#/definitions/TextDetectResult"
        },
        "selfHarmResult": {
          "$ref": "#/definitions/TextDetectResult"
        },
        "sexualResult": {
          "$ref": "#/definitions/TextDetectResult"
        },
        "violenceResult": {
          "$ref": "#/definitions/TextDetectResult"
        }
      },
      "description": "The analysis response of the text"
    },
    "TextDetectResult": {
      "type": "object",
      "properties": {
        "category": {
          "$ref": "#/definitions/TextCategory"
        },
        "riskLevel": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "category"
      ]
    },
    "TextList": {
      "type": "object",
      "properties": {
        "listId": {
          "type": "string",
          "description": "Text List Id."
        },
        "name": {
          "type": "string",
          "description": "Text List name."
        },
        "description": {
          "type": "string",
          "description": "Description for Text List."
        }
      },
      "description": "Text List."
    },
    "TextListItem": {
      "type": "object",
      "properties": {
        "itemId": {
          "type": "string",
          "description": "Item id"
        },
        "description": {
          "type": "string",
          "description": "Text data description"
        },
        "text": {
          "type": "string",
          "description": "Text list item content."
        },
        "language": {
          "type": "string",
          "description": "Language of this item, Value may contain only the language code (ex. \"en\",\n\"fr\") of BCP 47. If not assigned, \"en\" will be used"
        }
      },
      "description": "Text data"
    },
    "TextListMatchResult": {
      "type": "object",
      "properties": {
        "listId": {
          "type": "string",
          "description": "The id of matched custom list"
        },
        "itemId": {
          "type": "string",
          "description": "The id of matched item"
        },
        "itemText": {
          "type": "string",
          "description": "The content of matched item"
        },
        "offset": {
          "type": "string",
          "description": "The character offset of matched text in original input"
        },
        "length": {
          "type": "string",
          "description": "The length of matched text in original input"
        }
      },
      "description": "The result of custom list match",
      "required": [
        "listId",
        "itemId",
        "itemText"
      ]
    },
    "Versions": {
      "type": "string",
      "enum": [
        "2023-04-30-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2023_04_30_Preview",
            "value": "2023-04-30-preview"
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "description": "The API version to use for this operation.",
      "x-ms-client-name": "apiVersion",
      "minLength": 1,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
