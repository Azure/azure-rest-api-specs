import "@azure-tools/cadl-azure-core";
import "@cadl-lang/rest";
import "./models.cadl";

using Cadl.Http;
using Cadl.Rest;
using Cadl.Versioning;
using Azure.Core;

namespace ProjectCarnegie;

interface TextOperations {
  @summary("Analyze Text")
  @doc("A sync API for harmful content analysis for text")
  @route("/text:analyze")
  @post
  Analyze is Azure.Core.Foundations.Operation<
    {
      @doc("The analysis request of the text")
      @body
      request: TextDetectRequest;
    },
    TextDetectResponse
  >;
}

interface ImageOperations {
  @summary("Analyze Image")
  @doc("A sync API for harmful content analysis for image")
  @route("/image:analyze")
  @post
  Detect is Azure.Core.Foundations.Operation<
    {
      @doc("The analysis request of the image")
      @body
      request: ImageDetectRequest;
    },
    ImageDetectResponse
  >;
}


interface TextLists{
    @summary("Get Text List By listId")
    @doc("Returns text list details of the Text List with list Id equal to list Id passed.")
    GetTextList is Azure.Core.ResourceRead<TextList>;

    @summary("Create Or Update Text List")
    @doc("Updates an Text List by listId, if listId not exists, create a new Text List")
    CreateOrUpdateList is Azure.Core.ResourceCreateOrUpdate<TextList>;

    @summary("Delete Text List By listId")
    @doc("Deletes Text List with the list Id equal to list Id passed.")  
    DeleteTextList is Azure.Core.ResourceDelete<TextList>;

    @summary("Get All Text Lists")
    @doc("Get All Text Lists")
    ListTextLists is Azure.Core.ResourceList<TextList>;

    // @post
    // @route("/text/lists/{listName}")
    // @summary("Create Item In Text List")
    // op CreateListItem(
    //   @doc("Text List Item Info")
    //   @body listItemInfo: TextListItemInfo,
    //   @doc("List Id of Text Listlist.")
    //   @path
    //   listName: string;
    //   ): {
    //   @statusCode statusCode: 201,
    //   @header Location: string,
    //   @body result: TextListItem
    // } | Azure.Core.Foundations.ErrorResponse;

    // @put
    // @route("/text/lists/{listName}/items/{itemId}")
    // @summary("Update Item In Text List")
    // op UpdateListItem(
    //   @doc("Text List Item Info")
    //   @body listItemInfo: TextListItemInfo,
    //   @doc("List Id of Text Listlist.")
    //   @path
    //   listName: string,
    //   @path
    //   @doc("Item Id")
    //   itemId: string;
    //   ): {
    //   @statusCode statusCode: 200,
    //   @header Location: string,
    //   @body result: TextListItem
    // } | Azure.Core.Foundations.ErrorResponse;

    addItems is ResourceAction<TextList, BatchCreateTextListItemsRequest, BatchCreateTextListItemsResponse>;

    removeItems is ResourceAction<TextList, BatchDeleteTextListItemsRequest, NoContentResponse>;

    @summary("Get Item By itemId and listId")
    @doc("Get Item By itemId and listId")
    GetTextListItem is Azure.Core.ResourceRead<TextListItem>;
  
    // @summary("Delete Item By itemId and listId")
    // @doc("Delete Item By itemId and listId")
    // DeleteTextListItem is Azure.Core.ResourceDelete<TextListItem>;

    @summary("Get All Items By listId")
    @doc("Get All Items By listId")
    ListTextListItems is Azure.Core.ResourceList<
    TextListItem, 
    {
      parameters: {
        ...TopQueryParameter;
        ...SkipQueryParameter;
        ...MaxPageSizeQueryParameter;
      };
    }
  >;
}

// interface TextListItems {
//     @summary("Get Item By itemId and listId")
//     @doc("Get Item By itemId and listId")
//     GetTextListItem is Azure.Core.ResourceRead<TextListItem>;

//     @summary("Create Or Update Item In Text List")
//     @doc("Create Or Update Item In Text List")
//     CreateOrUpdateListItem is Azure.Core.ResourceCreateOrUpdate<TextListItem>;
  
//     @summary("Delete Item By itemId and listId")
//     @doc("Delete Item By itemId and listId")
//     DeleteTextListItem is Azure.Core.ResourceDelete<TextListItem>;

//     @summary("Get All Items By listId")
//     @doc("Get All Items By listId")
//     ListTextListItems is Azure.Core.ResourceList<TextListItem>;
// }

// interface TextListItems {

// }