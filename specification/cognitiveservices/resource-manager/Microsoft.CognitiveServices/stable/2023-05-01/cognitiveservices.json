{
  "swagger": "2.0",
  "info": {
    "title": "CognitiveServicesManagementClient",
    "description": "Cognitive Services Management Client",
    "version": "2023-05-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}": {
      "put": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "description": "Create Cognitive Services Account. Accounts is a resource group wide resource type. It holds the keys for developer to access intelligent APIs. It's also the resource type for billing.",
        "operationId": "Accounts_Create",
        "x-ms-examples": {
          "Create Account": {
            "$ref": "./examples/CreateAccount.json"
          },
          "Create Account Min": {
            "$ref": "./examples/CreateAccountMin.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "name": "account",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            },
            "description": "The parameters to provide for the created account."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "If resource is created successfully or already existed, the service should return 200 (OK).",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "201": {
            "description": "If resource is created successfully, the service should return 201 (OK).",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "202": {
            "description": "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "description": "Updates a Cognitive Services account",
        "operationId": "Accounts_Update",
        "x-ms-examples": {
          "Update Account": {
            "$ref": "./examples/UpdateAccount.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "name": "account",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            },
            "description": "The parameters to provide for the created account."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. ",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "202": {
            "description": "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group *or* resource does not exist, 404 (NotFound) should be returned.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "description": "Deletes a Cognitive Services account from the resource group. ",
        "operationId": "Accounts_Delete",
        "x-ms-examples": {
          "Delete Account": {
            "$ref": "./examples/DeleteAccount.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A 200 (OK) should be returned if the object exists and was deleted successfully;"
          },
          "202": {
            "description": "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously."
          },
          "204": {
            "description": "a 204 (NoContent) should be used if the resource does not exist and the request is well formed."
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "description": "Returns a Cognitive Services account specified by the parameters.",
        "operationId": "Accounts_Get",
        "x-ms-examples": {
          "Get Account": {
            "$ref": "./examples/GetAccount.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully.\nFor a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. The only GET specific properties are \"name,\" \"type\" and \"id.\"\nField\tDescription\nKind\trequired.  String.\n\tThe API set for this API account. It can be \n\tÂ· a single API, for example: Face API, Vision API, Speech API. \n\ta bundle of APIs:  Face + Speech, Vision + Emotion, etc.\nsku.name\tRequired.\n\tThe pricing tier/plan of this API. Could be: \n\tF0 - Free\n\tB0 - Basic\n\tS0 - Standard\n\tP0 - Premium\n",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource does not exist, 404 (NotFound) should be returned.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/locations/{location}/resourceGroups/{resourceGroupName}/deletedAccounts/{accountName}": {
      "get": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "description": "Returns a Cognitive Services account specified by the parameters.",
        "operationId": "DeletedAccounts_Get",
        "x-ms-examples": {
          "Get Account": {
            "$ref": "./examples/GetDeletedAccount.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/locationParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully.\nFor a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. The only GET specific properties are \"name,\" \"type\" and \"id.\"\nField\tDescription\nKind\trequired.  String.\n\tThe API set for this API account. It can be \n\tÂ· a single API, for example: Face API, Vision API, Speech API. \n\ta bundle of APIs:  Face + Speech, Vision + Emotion, etc.\nsku.name\tRequired.\n\tThe pricing tier/plan of this API. Could be: \n\tF0 - Free\n\tB0 - Basic\n\tS0 - Standard\n\tP0 - Premium\n",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource does not exist, 404 (NotFound) should be returned.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "description": "Deletes a Cognitive Services account from the resource group. ",
        "operationId": "DeletedAccounts_Purge",
        "x-ms-examples": {
          "Delete Account": {
            "$ref": "./examples/PurgeDeletedAccount.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/locationParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A 200 (OK) should be returned if the object exists and was deleted successfully;"
          },
          "202": {
            "description": "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously."
          },
          "204": {
            "description": "a 204 (NoContent) should be used if the resource does not exist and the request is well formed."
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts": {
      "get": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "description": "Returns all the resources of a particular type belonging to a resource group",
        "operationId": "Accounts_ListByResourceGroup",
        "x-ms-examples": {
          "List Accounts by Resource Group": {
            "$ref": "./examples/ListAccountsByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.\nThe nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses here. If a resource provider does not support paging, it should return the same body (JSON object with \"value\" property) but omit nextLink entirely (or set to null, *not* empty string) for future compatibility.\nThe nextLink should be implemented using following query parameters:\nÂ· skipToken: opaque token that allows the resource provider to skip resources already enumerated. This value is defined and returned by the RP after first request via nextLink.\nÂ· top: the optional client query parameter which defines the maximum number of records to be returned by the server.\nImplementation details:\nÂ· NextLink may include all the query parameters (specifically OData $filter) used by the client in the first query. \nÂ· Server may return less records than requested with nextLink. Returning zero records with NextLink is an acceptable response. \nClients must fetch records until the nextLink is not returned back / null. Clients should never rely on number of returned records to determinate if pagination is completed.",
            "schema": {
              "$ref": "#/definitions/AccountListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/accounts": {
      "get": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "description": "Returns all the resources of a particular type belonging to a subscription.",
        "operationId": "Accounts_List",
        "x-ms-examples": {
          "List Accounts by Subscription": {
            "$ref": "./examples/ListAccountsBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.\nThe nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses. If a resource provider does not support paging, it should return the same body but leave nextLink empty for future compatibility.\nFor a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. ",
            "schema": {
              "$ref": "#/definitions/AccountListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/deletedAccounts": {
      "get": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "description": "Returns all the resources of a particular type belonging to a subscription.",
        "operationId": "DeletedAccounts_List",
        "x-ms-examples": {
          "List Deleted Accounts by Subscription": {
            "$ref": "./examples/ListDeletedAccountsBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.\nThe nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses. If a resource provider does not support paging, it should return the same body but leave nextLink empty for future compatibility.\nFor a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. ",
            "schema": {
              "$ref": "#/definitions/AccountListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/listKeys": {
      "post": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "operationId": "Accounts_ListKeys",
        "description": "Lists the account keys for the specified Cognitive Services account.",
        "x-ms-examples": {
          "List Keys": {
            "$ref": "./examples/ListKeys.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns with a response body containing the subscription keys for the resource: key1\nThe first API key for authentication when client calls the API endpoint.\n\nkey2\nThe second API key for authentication when client calls the API endpoint.",
            "schema": {
              "$ref": "#/definitions/ApiKeys"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/regenerateKey": {
      "post": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "operationId": "Accounts_RegenerateKey",
        "description": "Regenerates the specified account key for the specified Cognitive Services account.",
        "x-ms-examples": {
          "Regenerate Keys": {
            "$ref": "./examples/RegenerateKey.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "$ref": "#/definitions/RegenerateKeyParameters"
            },
            "description": "regenerate key parameters."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ApiKeys"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/skus": {
      "get": {
        "tags": [
          "Skus",
          "CognitiveServicesAccounts"
        ],
        "operationId": "ResourceSkus_List",
        "description": "Gets the list of Microsoft.CognitiveServices SKUs available for your Subscription.",
        "x-ms-examples": {
          "Regenerate Keys": {
            "$ref": "./examples/GetSkus.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceSkuListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/skus": {
      "get": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "description": "List available SKUs for the requested Cognitive Services account",
        "x-ms-examples": {
          "List SKUs": {
            "$ref": "./examples/ListSkus.json"
          }
        },
        "operationId": "Accounts_ListSkus",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully.\nFor a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. The only GET specific properties are \"name,\" \"type\" and \"id.\"\nField\tDescription\nsku\tRequired, object\n\tThe exact set of keys that define this sku. This matches the fields on the respective resource.\nsku.name\tRequired, string\n\tThe name of the SKU. This is typically a letter + number code, such as A0 or P3\nsku.tier\tRequired, string\n\tThe tier of this particular SKU. Typically one of:\n\tÂ· Free\n\tÂ· Basic\n\tÂ· Standard\n\tÂ· Premium\n",
            "schema": {
              "$ref": "#/definitions/AccountSkuListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/locations/{location}/usages": {
      "get": {
        "tags": [
          "Usages"
        ],
        "description": "Get usages for the requested subscription",
        "x-ms-examples": {
          "Get Usages": {
            "$ref": "./examples/ListUsages.json"
          }
        },
        "operationId": "Usages_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/locationParameter"
          },
          {
            "$ref": "#/parameters/usageFilterParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/UsageListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/usages": {
      "get": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "description": "Get usages for the requested Cognitive Services account",
        "x-ms-examples": {
          "Get Usages": {
            "$ref": "./examples/GetUsages.json"
          }
        },
        "operationId": "Accounts_ListUsages",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/usageFilterParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The usages for Cognitive Services account were retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/UsageListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/models": {
      "get": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "description": "List available Models for the requested Cognitive Services account",
        "x-ms-examples": {
          "List AccountModels": {
            "$ref": "./examples/ListAccountModels.json"
          }
        },
        "operationId": "Accounts_ListModels",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully.\nFor a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. The only GET specific properties are \"name,\" \"type\" and \"id.\"\nField\tDescription\nsku\tRequired, object\n\tThe exact set of keys that define this sku. This matches the fields on the respective resource.\nsku.name\tRequired, string\n\tThe name of the SKU. This is typically a letter + number code, such as A0 or P3\nsku.tier\tRequired, string\n\tThe tier of this particular SKU. Typically one of:\n\tÂ· Free\n\tÂ· Basic\n\tÂ· Standard\n\tÂ· Premium\n",
            "schema": {
              "$ref": "#/definitions/AccountModelListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.CognitiveServices/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all the available Cognitive Services account operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "Get Operations": {
            "$ref": "./examples/GetOperations.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/locations/{location}/checkSkuAvailability": {
      "post": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "operationId": "CheckSkuAvailability",
        "description": "Check available SKUs.",
        "x-ms-examples": {
          "Check SKU Availability": {
            "$ref": "./examples/CheckSkuAvailability.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/locationParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "$ref": "#/definitions/CheckSkuAvailabilityParameter"
            },
            "description": "Check SKU Availability POST body."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/SkuAvailabilityListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/locations/{location}/commitmentTiers": {
      "get": {
        "tags": [
          "CommitmentTiers"
        ],
        "operationId": "CommitmentTiers_List",
        "description": "List Commitment Tiers.",
        "x-ms-examples": {
          "ListCommitmentTiers": {
            "$ref": "./examples/ListCommitmentTiers.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/locationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/CommitmentTierListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/locations/{location}/models": {
      "get": {
        "tags": [
          "Models"
        ],
        "operationId": "Models_List",
        "description": "List Models.",
        "x-ms-examples": {
          "ListModels": {
            "$ref": "./examples/ListModels.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/locationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/ModelListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/checkDomainAvailability": {
      "post": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "operationId": "CheckDomainAvailability",
        "description": "Check whether a domain is available.",
        "x-ms-examples": {
          "Check SKU Availability": {
            "$ref": "./examples/CheckDomainAvailability.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "$ref": "#/definitions/CheckDomainAvailabilityParameter"
            },
            "description": "Check Domain Availability parameter."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/DomainAvailability"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_List",
        "description": "Gets the private endpoint connections associated with the Cognitive Services account.",
        "x-ms-examples": {
          "GetPrivateEndpointConnection": {
            "$ref": "./examples/ListPrivateEndpointConnections.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved private endpoint connections.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Get",
        "description": "Gets the specified private endpoint connection associated with the Cognitive Services account.",
        "x-ms-examples": {
          "GetPrivateEndpointConnection": {
            "$ref": "./examples/GetPrivateEndpointConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/privateEndpointConnectionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Get the private endpoint connection properties successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "description": "Update the state of specified private endpoint connection associated with the Cognitive Services account.",
        "x-ms-examples": {
          "PutPrivateEndpointConnection": {
            "$ref": "./examples/PutPrivateEndpointConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/privateEndpointConnectionNameParameter"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            },
            "description": "The private endpoint connection properties."
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Update the private endpoint connection properties successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "202": {
            "description": "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Delete",
        "description": "Deletes the specified private endpoint connection associated with the Cognitive Services account.",
        "x-ms-examples": {
          "DeletePrivateEndpointConnection": {
            "$ref": "./examples/DeletePrivateEndpointConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/privateEndpointConnectionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Delete the private endpoint connection successfully."
          },
          "202": {
            "description": "Accepted -- the operation was successfully started and will complete asynchronously."
          },
          "204": {
            "description": "No Content -- The private endpoint connection does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/privateLinkResources": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "operationId": "PrivateLinkResources_List",
        "description": "Gets the private link resources that need to be created for a Cognitive Services account.",
        "x-ms-examples": {
          "ListPrivateLinkResources": {
            "$ref": "./examples/ListPrivateLinkResources.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved private link resources.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/deployments": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_List",
        "description": "Gets the deployments associated with the Cognitive Services account.",
        "x-ms-examples": {
          "ListDeployments": {
            "$ref": "./examples/ListDeployments.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved deployments.",
            "schema": {
              "$ref": "#/definitions/DeploymentListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/deployments/{deploymentName}": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_Get",
        "description": "Gets the specified deployments associated with the Cognitive Services account.",
        "x-ms-examples": {
          "GetDeployment": {
            "$ref": "./examples/GetDeployment.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/deploymentNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Get the deployments properties successfully.",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CreateOrUpdate",
        "description": "Update the state of specified deployments associated with the Cognitive Services account.",
        "x-ms-examples": {
          "PutDeployment": {
            "$ref": "./examples/PutDeployment.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/deploymentNameParameter"
          },
          {
            "name": "deployment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deployment"
            },
            "description": "The deployment properties."
          }
        ],
        "responses": {
          "200": {
            "description": "Create/Update the deployment successfully.",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          "201": {
            "description": "Create the deployment successfully.",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_Delete",
        "description": "Deletes the specified deployment associated with the Cognitive Services account.",
        "x-ms-examples": {
          "DeleteDeployment": {
            "$ref": "./examples/DeleteDeployment.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/deploymentNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Delete the deployment successfully."
          },
          "202": {
            "description": "Accepted -- the operation was successfully started and will complete asynchronously."
          },
          "204": {
            "description": "No Content -- The deployment does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/commitmentPlans": {
      "get": {
        "tags": [
          "CommitmentPlans"
        ],
        "operationId": "CommitmentPlans_List",
        "description": "Gets the commitmentPlans associated with the Cognitive Services account.",
        "x-ms-examples": {
          "ListCommitmentPlans": {
            "$ref": "./examples/ListCommitmentPlans.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved commitmentPlans.",
            "schema": {
              "$ref": "#/definitions/CommitmentPlanListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/commitmentPlans/{commitmentPlanName}": {
      "get": {
        "tags": [
          "CommitmentPlans"
        ],
        "operationId": "CommitmentPlans_Get",
        "description": "Gets the specified commitmentPlans associated with the Cognitive Services account.",
        "x-ms-examples": {
          "GetCommitmentPlan": {
            "$ref": "./examples/GetCommitmentPlan.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/commitmentPlanNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Get the commitmentPlans properties successfully.",
            "schema": {
              "$ref": "#/definitions/CommitmentPlan"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "CommitmentPlans"
        ],
        "operationId": "CommitmentPlans_CreateOrUpdate",
        "description": "Update the state of specified commitmentPlans associated with the Cognitive Services account.",
        "x-ms-examples": {
          "PutCommitmentPlan": {
            "$ref": "./examples/PutCommitmentPlan.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/commitmentPlanNameParameter"
          },
          {
            "name": "commitmentPlan",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommitmentPlan"
            },
            "description": "The commitmentPlan properties."
          }
        ],
        "responses": {
          "200": {
            "description": "Create/Update the CommitmentPlan successfully.",
            "schema": {
              "$ref": "#/definitions/CommitmentPlan"
            }
          },
          "201": {
            "description": "Create the CommitmentPlan successfully.",
            "schema": {
              "$ref": "#/definitions/CommitmentPlan"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CommitmentPlans"
        ],
        "operationId": "CommitmentPlans_Delete",
        "description": "Deletes the specified commitmentPlan associated with the Cognitive Services account.",
        "x-ms-examples": {
          "DeleteCommitmentPlan": {
            "$ref": "./examples/DeleteCommitmentPlan.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/commitmentPlanNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Delete the commitmentPlan successfully."
          },
          "202": {
            "description": "Accepted -- the operation was successfully started and will complete asynchronously."
          },
          "204": {
            "description": "No Content -- The commitmentPlan does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/commitmentPlans/{commitmentPlanName}": {
      "put": {
        "tags": [
          "CognitiveServicesCommitmentPlans"
        ],
        "description": "Create Cognitive Services commitment plan.",
        "operationId": "CommitmentPlans_CreateOrUpdatePlan",
        "x-ms-examples": {
          "Create Commitment Plan": {
            "$ref": "./examples/CreateSharedCommitmentPlan.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/commitmentPlanResourceNameParameter"
          },
          {
            "name": "commitmentPlan",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommitmentPlan"
            },
            "description": "The parameters to provide for the created commitment plan."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "If resource is created successfully or already existed, the service should return 200 (OK).",
            "schema": {
              "$ref": "#/definitions/CommitmentPlan"
            }
          },
          "201": {
            "description": "If resource is created successfully, the service should return 201 (OK).",
            "schema": {
              "$ref": "#/definitions/CommitmentPlan"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "CognitiveServicesCommitmentPlans"
        ],
        "description": "Create Cognitive Services commitment plan.",
        "operationId": "CommitmentPlans_UpdatePlan",
        "x-ms-examples": {
          "Create Commitment Plan": {
            "$ref": "./examples/UpdateSharedCommitmentPlan.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/commitmentPlanResourceNameParameter"
          },
          {
            "name": "commitmentPlan",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatchResourceTagsAndSku"
            },
            "description": "The parameters to provide for the created commitment plan."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "If resource is updated successfully or already existed, the service should return 200 (OK).",
            "schema": {
              "$ref": "#/definitions/CommitmentPlan"
            }
          },
          "202": {
            "headers": {
              "location": {
                "type": "string"
              }
            },
            "description": "If resource is updated successfully, the service should return 201 (OK)."
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "delete": {
        "tags": [
          "CognitiveServicesCommitmentPlans"
        ],
        "description": "Deletes a Cognitive Services commitment plan from the resource group. ",
        "operationId": "CommitmentPlans_DeletePlan",
        "x-ms-examples": {
          "Delete Commitment Plan": {
            "$ref": "./examples/DeleteSharedCommitmentPlan.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/commitmentPlanResourceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A 200 (OK) should be returned if the object exists and was deleted successfully;"
          },
          "202": {
            "headers": {
              "location": {
                "type": "string"
              }
            },
            "description": "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously."
          },
          "204": {
            "description": "a 204 (NoContent) should be used if the resource does not exist and the request is well formed."
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "CognitiveServicesCommitmentPlans"
        ],
        "description": "Returns a Cognitive Services commitment plan specified by the parameters.",
        "operationId": "CommitmentPlans_GetPlan",
        "x-ms-examples": {
          "Get Commitment Plan": {
            "$ref": "./examples/GetSharedCommitmentPlan.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/commitmentPlanResourceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved commitment plan resources.",
            "schema": {
              "$ref": "#/definitions/CommitmentPlan"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource does not exist, 404 (NotFound) should be returned.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/commitmentPlans": {
      "get": {
        "tags": [
          "CognitiveServicesCommitmentPlans"
        ],
        "description": "Returns all the resources of a particular type belonging to a resource group",
        "operationId": "CommitmentPlans_ListPlansByResourceGroup",
        "x-ms-examples": {
          "List Commitment Plans by Resource Group": {
            "$ref": "./examples/ListSharedCommitmentPlansByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved commitment plan resources.",
            "schema": {
              "$ref": "#/definitions/CommitmentPlanListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/commitmentPlans": {
      "get": {
        "tags": [
          "CognitiveServicesCommitmentPlans"
        ],
        "description": "Returns all the resources of a particular type belonging to a subscription.",
        "operationId": "CommitmentPlans_ListPlansBySubscription",
        "x-ms-examples": {
          "List Accounts by Subscription": {
            "$ref": "./examples/ListSharedCommitmentPlansBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved commitment plan resources.",
            "schema": {
              "$ref": "#/definitions/CommitmentPlanListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/commitmentPlans/{commitmentPlanName}/accountAssociations": {
      "get": {
        "tags": [
          "CommitmentPlans"
        ],
        "operationId": "CommitmentPlans_ListAssociations",
        "description": "Gets the associations of the Cognitive Services commitment plan.",
        "x-ms-examples": {
          "ListCommitmentPlans": {
            "$ref": "./examples/ListSharedCommitmentPlanAssociations.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/commitmentPlanResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved Commitment Plan Associations.",
            "schema": {
              "$ref": "#/definitions/CommitmentPlanAccountAssociationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/commitmentPlans/{commitmentPlanName}/accountAssociations/{commitmentPlanAssociationName}": {
      "get": {
        "tags": [
          "CommitmentPlans"
        ],
        "operationId": "CommitmentPlans_GetAssociation",
        "description": "Gets the association of the Cognitive Services commitment plan.",
        "x-ms-examples": {
          "GetCommitmentPlan": {
            "$ref": "./examples/GetSharedCommitmentPlanAssociation.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/commitmentPlanResourceNameParameter"
          },
          {
            "$ref": "#/parameters/commitmentPlanAssociationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Get the Commitment Plan Association successfully.",
            "schema": {
              "$ref": "#/definitions/CommitmentPlanAccountAssociation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "CommitmentPlans"
        ],
        "operationId": "CommitmentPlans_CreateOrUpdateAssociation",
        "description": "Create or update the association of the Cognitive Services commitment plan.",
        "x-ms-examples": {
          "PutCommitmentPlan": {
            "$ref": "./examples/CreateSharedCommitmentPlanAssociation.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/commitmentPlanResourceNameParameter"
          },
          {
            "$ref": "#/parameters/commitmentPlanAssociationNameParameter"
          },
          {
            "name": "association",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommitmentPlanAccountAssociation"
            },
            "description": "The commitmentPlan properties."
          }
        ],
        "responses": {
          "200": {
            "description": "Create/Update the Commitment Plan Association successfully.",
            "schema": {
              "$ref": "#/definitions/CommitmentPlanAccountAssociation"
            }
          },
          "201": {
            "description": "Create the Commitment Plan Association successfully.",
            "schema": {
              "$ref": "#/definitions/CommitmentPlanAccountAssociation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "CommitmentPlans"
        ],
        "operationId": "CommitmentPlans_DeleteAssociation",
        "description": "Deletes the association of the Cognitive Services commitment plan.",
        "x-ms-examples": {
          "DeleteCommitmentPlan": {
            "$ref": "./examples/DeleteSharedCommitmentPlanAssociation.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/commitmentPlanResourceNameParameter"
          },
          {
            "$ref": "#/parameters/commitmentPlanAssociationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Delete the CommitmentPlanAssociation successfully."
          },
          "202": {
            "headers": {
              "location": {
                "type": "string"
              }
            },
            "description": "Accepted -- the operation was successfully started and will complete asynchronously."
          },
          "204": {
            "description": "No Content -- The Commitment Plan Association does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    }
  },
  "definitions": {
    "Kind": {
      "type": "string",
      "description": "The kind (type) of cognitive service account."
    },
    "Sku": {
      "description": "The resource model definition representing SKU",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
        },
        "tier": {
          "type": "string",
          "enum": [
            "Free",
            "Basic",
            "Standard",
            "Premium",
            "Enterprise"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": true
          },
          "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuName": {
      "type": "string",
      "description": "The name of SKU."
    },
    "Account": {
      "description": "Cognitive Services account is an Azure resource representing the provisioned account, it's type, location and SKU.",
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/Kind",
          "description": "The Kind of the resource."
        },
        "sku": {
          "$ref": "#/definitions/Sku"
        },
        "identity": {
          "$ref": "#/definitions/Identity"
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "$ref": "#/definitions/AccountProperties",
          "description": "Properties of Cognitive Services account."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/AzureEntityResource"
        }
      ]
    },
    "AccountListResult": {
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of accounts.",
          "type": "string"
        },
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Account"
          },
          "description": "Gets the list of Cognitive Services accounts and their properties."
        }
      },
      "description": "The list of cognitive services accounts operation response."
    },
    "AccountProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the status of the cognitive services account at the time the operation was called.",
          "enum": [
            "Accepted",
            "Creating",
            "Deleting",
            "Moving",
            "Failed",
            "Succeeded",
            "ResolvingDNS"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "endpoint": {
          "type": "string",
          "description": "Endpoint of the created account.",
          "readOnly": true
        },
        "internalId": {
          "type": "string",
          "description": "The internal identifier (deprecated, do not use this property).",
          "readOnly": true
        },
        "capabilities": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuCapability"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "Gets the capabilities of the cognitive services account. Each item indicates the capability of a specific feature. The values are read-only and for reference only."
        },
        "isMigrated": {
          "type": "boolean",
          "description": "If the resource is migrated from an existing key.",
          "readOnly": true
        },
        "migrationToken": {
          "type": "string",
          "description": "Resource migration token."
        },
        "skuChangeInfo": {
          "$ref": "#/definitions/SkuChangeInfo",
          "description": "Sku change info of account.",
          "readOnly": true
        },
        "customSubDomainName": {
          "type": "string",
          "description": "Optional subdomain name used for token-based authentication."
        },
        "networkAcls": {
          "$ref": "#/definitions/NetworkRuleSet",
          "description": "A collection of rules governing the accessibility from specific network locations."
        },
        "encryption": {
          "$ref": "#/definitions/Encryption",
          "description": "The encryption properties for this resource."
        },
        "userOwnedStorage": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserOwnedStorage"
          },
          "x-ms-identifiers": [
            "resourceId"
          ],
          "description": "The storage accounts for this resource."
        },
        "privateEndpointConnections": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "description": "The private endpoint connection associated with the Cognitive Services account."
        },
        "publicNetworkAccess": {
          "type": "string",
          "description": "Whether or not public endpoint access is allowed for this account.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          }
        },
        "apiProperties": {
          "$ref": "#/definitions/ApiProperties",
          "description": "The api properties for special APIs."
        },
        "dateCreated": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the date of cognitive services account creation."
        },
        "callRateLimit": {
          "readOnly": true,
          "$ref": "#/definitions/CallRateLimit"
        },
        "dynamicThrottlingEnabled": {
          "type": "boolean",
          "description": "The flag to enable dynamic throttling."
        },
        "quotaLimit": {
          "readOnly": true,
          "$ref": "#/definitions/QuotaLimit"
        },
        "restrictOutboundNetworkAccess": {
          "type": "boolean"
        },
        "allowedFqdnList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "disableLocalAuth": {
          "type": "boolean"
        },
        "endpoints": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "restore": {
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "deletionDate": {
          "type": "string",
          "description": "The deletion date, only available for deleted account.",
          "readOnly": true
        },
        "scheduledPurgeDate": {
          "type": "string",
          "description": "The scheduled purge date, only available for deleted account.",
          "readOnly": true
        },
        "locations": {
          "$ref": "#/definitions/MultiRegionSettings",
          "description": "The multiregion settings of Cognitive Services account."
        },
        "commitmentPlanAssociations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommitmentPlanAssociation"
          },
          "x-ms-identifiers": [
            "commitmentPlanId"
          ],
          "description": "The commitment plan associations of Cognitive Services account.",
          "readOnly": true
        },
        "abusePenalty": {
          "readOnly": true,
          "$ref": "#/definitions/AbusePenalty"
        }
      },
      "description": "Properties of Cognitive Services account."
    },
    "ApiProperties": {
      "type": "object",
      "additionalProperties": {
        "type": "object"
      },
      "properties": {
        "qnaRuntimeEndpoint": {
          "type": "string",
          "description": "(QnAMaker Only) The runtime endpoint of QnAMaker."
        },
        "qnaAzureSearchEndpointKey": {
          "type": "string",
          "description": "(QnAMaker Only) The Azure Search endpoint key of QnAMaker."
        },
        "qnaAzureSearchEndpointId": {
          "type": "string",
          "description": "(QnAMaker Only) The Azure Search endpoint id of QnAMaker."
        },
        "statisticsEnabled": {
          "type": "boolean",
          "description": "(Bing Search Only) The flag to enable statistics of Bing Search."
        },
        "eventHubConnectionString": {
          "type": "string",
          "description": "(Personalization Only) The flag to enable statistics of Bing Search.",
          "pattern": "^( *)Endpoint=sb://(.*);( *)SharedAccessKeyName=(.*);( *)SharedAccessKey=(.*)$",
          "maxLength": 1000
        },
        "storageAccountConnectionString": {
          "type": "string",
          "description": "(Personalization Only) The storage account connection string.",
          "pattern": "^(( *)DefaultEndpointsProtocol=(http|https)( *);( *))?AccountName=(.*)AccountKey=(.*)EndpointSuffix=(.*)$",
          "maxLength": 1000
        },
        "aadClientId": {
          "type": "string",
          "description": "(Metrics Advisor Only) The Azure AD Client Id (Application Id).",
          "maxLength": 500
        },
        "aadTenantId": {
          "type": "string",
          "description": "(Metrics Advisor Only) The Azure AD Tenant Id.",
          "maxLength": 500
        },
        "superUser": {
          "type": "string",
          "description": "(Metrics Advisor Only) The super user of Metrics Advisor.",
          "maxLength": 500
        },
        "websiteName": {
          "type": "string",
          "description": "(Metrics Advisor Only) The website name of Metrics Advisor.",
          "maxLength": 500
        }
      },
      "description": "The api properties for special APIs."
    },
    "CommitmentPlanAccountAssociationListResult": {
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of Commitment Plan Account Association.",
          "type": "string"
        },
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommitmentPlanAccountAssociation"
          },
          "x-ms-identifiers": [
            "id"
          ],
          "description": "Gets the list of Cognitive Services Commitment Plan Account Association and their properties."
        }
      },
      "description": "The list of cognitive services Commitment Plan Account Association operation response."
    },
    "CommitmentPlanAccountAssociation": {
      "description": "The commitment plan association.",
      "type": "object",
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Etag."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CommitmentPlanAccountAssociationProperties",
          "description": "Properties of Cognitive Services account commitment plan association."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AbusePenalty": {
      "description": "The abuse penalty.",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "enum": [
            "Throttle",
            "Block"
          ],
          "x-ms-enum": {
            "name": "AbusePenaltyAction",
            "modelAsString": true
          },
          "description": "The action of AbusePenalty."
        },
        "rateLimitPercentage": {
          "type": "number",
          "description": "The percentage of rate limit."
        },
        "expiration": {
          "type": "string",
          "format": "date-time",
          "description": "The datetime of expiration of the AbusePenalty."
        }
      }
    },
    "CommitmentPlanAccountAssociationProperties": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "The Azure resource id of the account."
        }
      },
      "description": "The commitment plan account association properties."
    },
    "CommitmentPlanAssociation": {
      "type": "object",
      "properties": {
        "commitmentPlanId": {
          "type": "string",
          "description": "The Azure resource id of the commitment plan."
        },
        "commitmentPlanLocation": {
          "type": "string",
          "description": "The location of of the commitment plan."
        }
      },
      "description": "The commitment plan association."
    },
    "MultiRegionSettings": {
      "type": "object",
      "properties": {
        "routingMethod": {
          "type": "string",
          "enum": [
            "Priority",
            "Weighted",
            "Performance"
          ],
          "x-ms-enum": {
            "name": "RoutingMethods",
            "modelAsString": true
          },
          "description": "Multiregion routing methods."
        },
        "regions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegionSetting"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "description": "The multiregion settings Cognitive Services account."
    },
    "RegionSetting": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the region."
        },
        "value": {
          "type": "number",
          "description": "A value for priority or weighted routing methods."
        },
        "customsubdomain": {
          "type": "string",
          "description": "Maps the region to the regional custom subdomain."
        }
      },
      "description": "The call rate limit Cognitive Services account."
    },
    "CapacityConfig": {
      "type": "object",
      "properties": {
        "minimum": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum capacity."
        },
        "maximum": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum capacity."
        },
        "step": {
          "type": "integer",
          "format": "int32",
          "description": "The minimal incremental between allowed values for capacity."
        },
        "default": {
          "type": "integer",
          "format": "int32",
          "description": "The default capacity."
        }
      },
      "description": "The capacity configuration."
    },
    "CallRateLimit": {
      "type": "object",
      "properties": {
        "count": {
          "type": "number",
          "description": "The count value of Call Rate Limit."
        },
        "renewalPeriod": {
          "type": "number",
          "description": "The renewal period in seconds of Call Rate Limit."
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThrottlingRule"
          },
          "x-ms-identifiers": [
            "key"
          ]
        }
      },
      "description": "The call rate limit Cognitive Services account."
    },
    "QuotaLimit": {
      "type": "object",
      "properties": {
        "count": {
          "type": "number"
        },
        "renewalPeriod": {
          "type": "number"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThrottlingRule"
          },
          "x-ms-identifiers": [
            "key"
          ]
        }
      }
    },
    "ThrottlingRule": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "renewalPeriod": {
          "type": "number"
        },
        "count": {
          "type": "number"
        },
        "minCount": {
          "type": "number"
        },
        "dynamicThrottlingEnabled": {
          "type": "boolean"
        },
        "matchPatterns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequestMatchPattern"
          },
          "x-ms-identifiers": [
            "path",
            "method"
          ]
        }
      }
    },
    "RequestMatchPattern": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "method": {
          "type": "string"
        }
      }
    },
    "ApiKeys": {
      "type": "object",
      "properties": {
        "key1": {
          "type": "string",
          "description": "Gets the value of key 1."
        },
        "key2": {
          "type": "string",
          "description": "Gets the value of key 2."
        }
      },
      "description": "The access keys for the cognitive services account."
    },
    "SkuChangeInfo": {
      "type": "object",
      "properties": {
        "countOfDowngrades": {
          "type": "number",
          "description": "Gets the count of downgrades."
        },
        "countOfUpgradesAfterDowngrades": {
          "type": "number",
          "description": "Gets the count of upgrades after downgrades."
        },
        "lastChangeDate": {
          "type": "string",
          "description": "Gets the last change date."
        }
      },
      "description": "Sku change info of account."
    },
    "RegenerateKeyParameters": {
      "type": "object",
      "properties": {
        "keyName": {
          "type": "string",
          "description": "key name to generate (Key1|Key2)",
          "enum": [
            "Key1",
            "Key2"
          ],
          "x-ms-enum": {
            "name": "KeyName",
            "modelAsString": false
          }
        }
      },
      "required": [
        "keyName"
      ],
      "description": "Regenerate key parameters."
    },
    "AccountSkuListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountSku"
          },
          "x-ms-identifiers": [
            "sku/name",
            "resourceType"
          ],
          "description": "Gets the list of Cognitive Services accounts and their properties."
        }
      },
      "description": "The list of cognitive services accounts operation response."
    },
    "AccountSku": {
      "type": "object",
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "Resource Namespace and Type"
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU of Cognitive Services account."
        }
      },
      "description": "Cognitive Services resource type and SKU."
    },
    "UsageListResult": {
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of Usages.",
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Usage"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "The list of usages for Cognitive Service account."
        }
      },
      "description": "The response to a list usage request."
    },
    "Usage": {
      "type": "object",
      "properties": {
        "unit": {
          "description": "The unit of the metric.",
          "$ref": "#/definitions/UnitType"
        },
        "name": {
          "$ref": "#/definitions/MetricName",
          "description": "The name information for the metric."
        },
        "quotaPeriod": {
          "type": "string",
          "description": "The quota period used to summarize the usage values."
        },
        "limit": {
          "type": "number",
          "format": "double",
          "description": "Maximum value for this metric."
        },
        "currentValue": {
          "type": "number",
          "format": "double",
          "description": "Current value for this metric."
        },
        "nextResetTime": {
          "type": "string",
          "description": "Next reset time for current quota."
        },
        "status": {
          "type": "string",
          "description": "Cognitive Services account quota usage status.",
          "enum": [
            "Included",
            "Blocked",
            "InOverage",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "QuotaUsageStatus",
            "modelAsString": true
          }
        }
      },
      "description": "The usage data for a usage request."
    },
    "MetricName": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "The name of the metric."
        },
        "localizedValue": {
          "type": "string",
          "description": "The friendly name of the metric."
        }
      },
      "description": "A metric name."
    },
    "UnitType": {
      "type": "string",
      "description": "The unit of the metric.",
      "enum": [
        "Count",
        "Bytes",
        "Seconds",
        "Percent",
        "CountPerSecond",
        "BytesPerSecond",
        "Milliseconds"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "UnitType"
      }
    },
    "CheckSkuAvailabilityParameter": {
      "type": "object",
      "description": "Check SKU availability parameter.",
      "properties": {
        "skus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuName"
          },
          "description": "The SKU of the resource."
        },
        "kind": {
          "$ref": "#/definitions/Kind",
          "description": "The Kind of the resource."
        },
        "type": {
          "type": "string",
          "description": "The Type of the resource."
        }
      },
      "required": [
        "skus",
        "kind",
        "type"
      ]
    },
    "SkuAvailabilityListResult": {
      "type": "object",
      "description": "Check SKU availability result list.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuAvailability"
          },
          "x-ms-identifiers": [
            "skuName",
            "type",
            "kind"
          ],
          "description": "Check SKU availability result list."
        }
      }
    },
    "SkuAvailability": {
      "type": "object",
      "description": "SKU availability.",
      "properties": {
        "kind": {
          "$ref": "#/definitions/Kind",
          "description": "The Kind of the resource."
        },
        "type": {
          "type": "string",
          "description": "The Type of the resource."
        },
        "skuName": {
          "$ref": "#/definitions/SkuName",
          "description": "The SKU of Cognitive Services account."
        },
        "skuAvailable": {
          "type": "boolean",
          "description": "Indicates the given SKU is available or not."
        },
        "reason": {
          "type": "string",
          "description": "Reason why the SKU is not available."
        },
        "message": {
          "type": "string",
          "description": "Additional error message."
        }
      }
    },
    "SkuCapability": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SkuCapability."
        },
        "value": {
          "type": "string",
          "description": "The value of the SkuCapability."
        }
      },
      "description": "SkuCapability indicates the capability of a certain feature."
    },
    "CheckDomainAvailabilityParameter": {
      "type": "object",
      "description": "Check Domain availability parameter.",
      "properties": {
        "subdomainName": {
          "type": "string",
          "description": "The subdomain name to use."
        },
        "type": {
          "type": "string",
          "description": "The Type of the resource."
        },
        "kind": {
          "$ref": "#/definitions/Kind",
          "description": "The Kind of the resource."
        }
      },
      "required": [
        "subdomainName",
        "type"
      ]
    },
    "DomainAvailability": {
      "type": "object",
      "description": "Domain availability.",
      "properties": {
        "isSubdomainAvailable": {
          "type": "boolean",
          "description": "Indicates the given SKU is available or not."
        },
        "reason": {
          "type": "string",
          "description": "Reason why the SKU is not available."
        },
        "subdomainName": {
          "type": "string",
          "description": "The subdomain name to use."
        },
        "type": {
          "type": "string",
          "description": "The Type of the resource."
        },
        "kind": {
          "$ref": "#/definitions/Kind",
          "description": "The Kind of the resource."
        }
      }
    },
    "ResourceSkuRestrictions": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of restrictions.",
          "enum": [
            "Location",
            "Zone"
          ],
          "x-ms-enum": {
            "name": "ResourceSkuRestrictionsType",
            "modelAsString": false
          }
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted."
        },
        "restrictionInfo": {
          "$ref": "#/definitions/ResourceSkuRestrictionInfo",
          "description": "The information about the restriction where the SKU cannot be used."
        },
        "reasonCode": {
          "type": "string",
          "description": "The reason for restriction.",
          "enum": [
            "QuotaId",
            "NotAvailableForSubscription"
          ],
          "x-ms-enum": {
            "name": "ResourceSkuRestrictionsReasonCode",
            "modelAsString": true
          }
        }
      },
      "description": "Describes restrictions of a SKU."
    },
    "ResourceSku": {
      "type": "object",
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "The type of resource the SKU applies to."
        },
        "name": {
          "type": "string",
          "description": "The name of SKU."
        },
        "tier": {
          "type": "string",
          "description": "Specifies the tier of Cognitive Services account."
        },
        "kind": {
          "type": "string",
          "description": "The Kind of resources that are supported in this SKU."
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of locations that the SKU is available."
        },
        "restrictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceSkuRestrictions"
          },
          "x-ms-identifiers": [],
          "description": "The restrictions because of which SKU cannot be used. This is empty if there are no restrictions."
        }
      },
      "description": "Describes an available Cognitive Services SKU."
    },
    "ResourceSkuRestrictionInfo": {
      "type": "object",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations where the SKU is restricted"
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of availability zones where the SKU is restricted."
        }
      }
    },
    "ResourceSkuListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceSku"
          },
          "x-ms-identifiers": [
            "resourceType",
            "name",
            "kind"
          ],
          "description": "The list of skus available for the subscription."
        },
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of Skus."
        }
      },
      "required": [
        "value"
      ],
      "description": "The Get Skus operation response."
    },
    "NetworkRuleSet": {
      "type": "object",
      "properties": {
        "defaultAction": {
          "type": "string",
          "description": "The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.",
          "enum": [
            "Allow",
            "Deny"
          ],
          "x-ms-enum": {
            "name": "NetworkRuleAction",
            "modelAsString": true
          }
        },
        "ipRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpRule"
          },
          "x-ms-identifiers": [],
          "description": "The list of IP address rules."
        },
        "virtualNetworkRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkRule"
          },
          "description": "The list of virtual network rules."
        }
      },
      "description": "A set of rules governing the network accessibility."
    },
    "IpRule": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78)."
        }
      },
      "required": [
        "value"
      ],
      "description": "A rule governing the accessibility from a specific ip address or ip range."
    },
    "VirtualNetworkRule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'."
        },
        "state": {
          "type": "string",
          "description": "Gets the state of virtual network rule."
        },
        "ignoreMissingVnetServiceEndpoint": {
          "type": "boolean",
          "description": "Ignore missing vnet service endpoint or not."
        }
      },
      "required": [
        "id"
      ],
      "description": "A rule governing the accessibility from a specific virtual network."
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "None",
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant ID of resource."
        },
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal ID of resource identity."
        },
        "userAssignedIdentities": {
          "description": "The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}",
          "type": "object",
          "additionalProperties": {
            "description": "User-assigned managed identity.",
            "$ref": "#/definitions/UserAssignedIdentity"
          }
        }
      }
    },
    "UserAssignedIdentity": {
      "type": "object",
      "description": "User-assigned managed identity.",
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "Azure Active Directory principal ID associated with this Identity."
        },
        "clientId": {
          "readOnly": true,
          "type": "string",
          "description": "Client App Id associated with this identity."
        }
      }
    },
    "Encryption": {
      "type": "object",
      "properties": {
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Properties of KeyVault"
        },
        "keySource": {
          "type": "string",
          "description": "Enumerates the possible value of keySource for Encryption",
          "default": "Microsoft.KeyVault",
          "enum": [
            "Microsoft.CognitiveServices",
            "Microsoft.KeyVault"
          ],
          "x-ms-enum": {
            "name": "keySource",
            "modelAsString": true
          }
        }
      },
      "description": "Properties to configure Encryption"
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyName": {
          "type": "string",
          "description": "Name of the Key from KeyVault"
        },
        "keyVersion": {
          "type": "string",
          "description": "Version of the Key from KeyVault"
        },
        "keyVaultUri": {
          "type": "string",
          "description": "Uri of KeyVault"
        },
        "identityClientId": {
          "type": "string"
        }
      },
      "description": "Properties to configure keyVault Properties"
    },
    "UserOwnedStorage": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "Full resource id of a Microsoft.Storage resource."
        },
        "identityClientId": {
          "type": "string"
        }
      },
      "description": "The user owned storage for Cognitive Services account."
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private endpoint connections",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        }
      },
      "description": "A list of private endpoint connections"
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "Resource properties."
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The location of the private endpoint connection"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/AzureEntityResource"
        }
      ],
      "description": "The Private Endpoint Connection resource."
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "properties": {
        "privateEndpoint": {
          "$ref": "../../../../../common-types/resource-management/v2/privatelinks.json#/definitions/PrivateEndpoint",
          "description": "The resource of private end point."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "../../../../../common-types/resource-management/v2/privatelinks.json#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of information about the state of the connection between service consumer and provider."
        },
        "provisioningState": {
          "$ref": "../../../../../common-types/resource-management/v2/privatelinks.json#/definitions/PrivateEndpointConnectionProvisioningState",
          "description": "The provisioning state of the private endpoint connection resource."
        },
        "groupIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The private link resource group ids."
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ],
      "description": "Properties of the PrivateEndpointConnectProperties."
    },
    "PrivateLinkResourceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private link resources",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        }
      },
      "description": "A list of private link resources"
    },
    "PrivateLinkResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Resource properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/Resource"
        }
      ],
      "description": "A private link resource"
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "properties": {
        "groupId": {
          "description": "The private link resource group id.",
          "type": "string",
          "readOnly": true
        },
        "requiredMembers": {
          "description": "The private link resource required member names.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The private link resource Private link DNS zone name."
        },
        "displayName": {
          "description": "The private link resource display name.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Properties of a private link resource."
    },
    "DeploymentListResult": {
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of Deployment.",
          "type": "string"
        },
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Deployment"
          },
          "description": "Gets the list of Cognitive Services accounts Deployment and their properties."
        }
      },
      "description": "The list of cognitive services accounts operation response."
    },
    "Deployment": {
      "description": "Cognitive Services account deployment.",
      "type": "object",
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku"
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Etag."
        },
        "properties": {
          "$ref": "#/definitions/DeploymentProperties",
          "description": "Properties of Cognitive Services account deployment."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DeploymentProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the status of the resource at the time the operation was called.",
          "enum": [
            "Accepted",
            "Creating",
            "Deleting",
            "Moving",
            "Failed",
            "Succeeded",
            "Disabled",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "DeploymentProvisioningState",
            "modelAsString": true
          }
        },
        "model": {
          "type": "object",
          "$ref": "#/definitions/DeploymentModel"
        },
        "scaleSettings": {
          "type": "object",
          "$ref": "#/definitions/DeploymentScaleSettings"
        },
        "capabilities": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The capabilities."
        },
        "raiPolicyName": {
          "type": "string",
          "description": "The name of RAI policy."
        },
        "callRateLimit": {
          "readOnly": true,
          "$ref": "#/definitions/CallRateLimit"
        },
        "rateLimits": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThrottlingRule"
          },
          "x-ms-identifiers": [
            "key"
          ]
        },
        "versionUpgradeOption": {
          "type": "string",
          "description": "Deployment model version upgrade option.",
          "enum": [
            "OnceNewDefaultVersionAvailable",
            "OnceCurrentVersionExpired",
            "NoAutoUpgrade"
          ],
          "x-ms-enum": {
            "name": "DeploymentModelVersionUpgradeOption",
            "modelAsString": true
          }
        }
      },
      "description": "Properties of Cognitive Services account deployment."
    },
    "DeploymentModel": {
      "type": "object",
      "properties": {
        "format": {
          "type": "string",
          "description": "Deployment model format."
        },
        "name": {
          "type": "string",
          "description": "Deployment model name."
        },
        "version": {
          "type": "string",
          "description": "Optional. Deployment model version. If version is not specified, a default version will be assigned. The default version is different for different models and might change when there is new version available for a model. Default version for a model could be found from list models API."
        },
        "source": {
          "type": "string",
          "description": "Optional. Deployment model source ARM resource ID."
        },
        "callRateLimit": {
          "readOnly": true,
          "$ref": "#/definitions/CallRateLimit"
        }
      },
      "description": "Properties of Cognitive Services account deployment model."
    },
    "DeploymentScaleSettings": {
      "type": "object",
      "properties": {
        "scaleType": {
          "type": "string",
          "description": "Deployment scale type.",
          "enum": [
            "Standard",
            "Manual"
          ],
          "x-ms-enum": {
            "name": "DeploymentScaleType",
            "modelAsString": true
          }
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "Deployment capacity."
        },
        "activeCapacity": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Deployment active capacity. This value might be different from `capacity` if customer recently updated `capacity`."
        }
      },
      "description": "Properties of Cognitive Services account deployment model."
    },
    "CommitmentTierListResult": {
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of CommitmentTier.",
          "type": "string"
        },
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommitmentTier"
          },
          "x-ms-identifiers": [
            "kind",
            "tier",
            "skuName",
            "hostingModel",
            "planType"
          ],
          "description": "Gets the list of Cognitive Services accounts CommitmentTier and their properties."
        }
      },
      "description": "The list of cognitive services accounts operation response."
    },
    "CommitmentTier": {
      "description": "Cognitive Services account commitment tier.",
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/Kind",
          "description": "The Kind of the resource."
        },
        "skuName": {
          "type": "string",
          "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
        },
        "hostingModel": {
          "$ref": "#/definitions/HostingModel",
          "description": "Account hosting model."
        },
        "planType": {
          "type": "string",
          "description": "Commitment plan type."
        },
        "tier": {
          "type": "string",
          "description": "Commitment period commitment tier."
        },
        "maxCount": {
          "type": "integer",
          "format": "int32",
          "description": "Commitment period commitment max count."
        },
        "quota": {
          "type": "object",
          "$ref": "#/definitions/CommitmentQuota"
        },
        "cost": {
          "type": "object",
          "$ref": "#/definitions/CommitmentCost"
        }
      }
    },
    "CommitmentQuota": {
      "type": "object",
      "properties": {
        "quantity": {
          "type": "integer",
          "format": "int64",
          "description": "Commitment quota quantity."
        },
        "unit": {
          "type": "string",
          "description": "Commitment quota unit."
        }
      },
      "description": "Cognitive Services account commitment quota."
    },
    "CommitmentCost": {
      "type": "object",
      "properties": {
        "commitmentMeterId": {
          "type": "string",
          "description": "Commitment meter Id."
        },
        "overageMeterId": {
          "type": "string",
          "description": "Overage meter Id."
        }
      },
      "description": "Cognitive Services account commitment cost."
    },
    "CommitmentPlanListResult": {
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of CommitmentPlan.",
          "type": "string"
        },
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommitmentPlan"
          },
          "description": "Gets the list of Cognitive Services accounts CommitmentPlan and their properties."
        }
      },
      "description": "The list of cognitive services accounts operation response."
    },
    "CommitmentPlan": {
      "description": "Cognitive Services account commitment plan.",
      "type": "object",
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Etag."
        },
        "kind": {
          "$ref": "#/definitions/Kind",
          "description": "The Kind of the resource."
        },
        "sku": {
          "$ref": "#/definitions/Sku"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "$ref": "#/definitions/CommitmentPlanProperties",
          "description": "Properties of Cognitive Services account commitment plan."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "CommitmentPlanProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the status of the resource at the time the operation was called.",
          "enum": [
            "Accepted",
            "Creating",
            "Deleting",
            "Moving",
            "Failed",
            "Succeeded",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "CommitmentPlanProvisioningState",
            "modelAsString": true
          }
        },
        "commitmentPlanGuid": {
          "type": "string",
          "description": "Commitment plan guid."
        },
        "hostingModel": {
          "$ref": "#/definitions/HostingModel",
          "description": "Account hosting model."
        },
        "planType": {
          "type": "string",
          "description": "Commitment plan type."
        },
        "current": {
          "type": "object",
          "$ref": "#/definitions/CommitmentPeriod"
        },
        "autoRenew": {
          "type": "boolean",
          "description": "AutoRenew commitment plan."
        },
        "next": {
          "type": "object",
          "$ref": "#/definitions/CommitmentPeriod"
        },
        "last": {
          "type": "object",
          "$ref": "#/definitions/CommitmentPeriod",
          "readOnly": true
        },
        "provisioningIssues": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of ProvisioningIssue."
        }
      },
      "description": "Properties of Cognitive Services account commitment plan."
    },
    "HostingModel": {
      "type": "string",
      "description": "Account hosting model.",
      "enum": [
        "Web",
        "ConnectedContainer",
        "DisconnectedContainer",
        "ProvisionedWeb"
      ],
      "x-ms-enum": {
        "name": "HostingModel",
        "modelAsString": true
      }
    },
    "CommitmentPeriod": {
      "type": "object",
      "properties": {
        "tier": {
          "type": "string",
          "description": "Commitment period commitment tier."
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "Commitment period commitment count."
        },
        "quota": {
          "type": "object",
          "$ref": "#/definitions/CommitmentQuota",
          "readOnly": true
        },
        "startDate": {
          "type": "string",
          "description": "Commitment period start date.",
          "readOnly": true
        },
        "endDate": {
          "type": "string",
          "description": "Commitment period end date.",
          "readOnly": true
        }
      },
      "description": "Cognitive Services account commitment period."
    },
    "ModelListResult": {
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of Model.",
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Model"
          },
          "x-ms-identifiers": [
            "kind",
            "skuName",
            "/model/name",
            "/model/format",
            "/model/version"
          ],
          "description": "Gets the list of Cognitive Services accounts Model and their properties."
        }
      },
      "description": "The list of cognitive services models."
    },
    "Model": {
      "description": "Cognitive Services Model.",
      "type": "object",
      "properties": {
        "model": {
          "type": "object",
          "description": "Model Metadata.",
          "$ref": "#/definitions/AccountModel"
        },
        "kind": {
          "$ref": "#/definitions/Kind",
          "description": "The Kind of the Model."
        },
        "skuName": {
          "$ref": "#/definitions/SkuName",
          "description": "The SKU of the Model."
        }
      }
    },
    "ModelSku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the model SKU."
        },
        "usageName": {
          "type": "string",
          "description": "The usage name of the model SKU."
        },
        "deprecationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The datetime of deprecation of the model SKU."
        },
        "capacity": {
          "type": "object",
          "description": "The capacity configuration.",
          "$ref": "#/definitions/CapacityConfig"
        },
        "rateLimits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CallRateLimit"
          },
          "x-ms-identifiers": [],
          "description": "The list of rateLimit."
        }
      },
      "description": "Describes an available Cognitive Services Model SKU."
    },
    "AccountModelListResult": {
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of Model.",
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountModel"
          },
          "x-ms-identifiers": [
            "name",
            "format",
            "version"
          ],
          "description": "Gets the list of Cognitive Services accounts Model and their properties."
        }
      },
      "description": "The list of cognitive services accounts operation response."
    },
    "AccountModel": {
      "description": "Cognitive Services account Model.",
      "type": "object",
      "properties": {
        "baseModel": {
          "type": "object",
          "description": "Base Model Identifier.",
          "$ref": "#/definitions/DeploymentModel"
        },
        "isDefaultVersion": {
          "type": "boolean",
          "description": "If the model is default version."
        },
        "skus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelSku"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "The list of Model Sku."
        },
        "maxCapacity": {
          "type": "integer",
          "format": "int32",
          "description": "The max capacity."
        },
        "capabilities": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The capabilities."
        },
        "finetuneCapabilities": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The capabilities for finetune models."
        },
        "deprecation": {
          "type": "object",
          "$ref": "#/definitions/ModelDeprecationInfo"
        },
        "lifecycleStatus": {
          "type": "string",
          "enum": [
            "GenerallyAvailable",
            "Preview"
          ],
          "x-ms-enum": {
            "name": "ModelLifecycleStatus",
            "modelAsString": true
          },
          "description": "Model lifecycle status."
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DeploymentModel"
        }
      ]
    },
    "ModelDeprecationInfo": {
      "description": "Cognitive Services account ModelDeprecationInfo.",
      "type": "object",
      "properties": {
        "fineTune": {
          "type": "string",
          "description": "The datetime of deprecation of the fineTune Model."
        },
        "inference": {
          "type": "string",
          "description": "The datetime of deprecation of the inference Model."
        }
      }
    },
    "PatchResourceTags": {
      "description": "The object being used to update tags of a resource, in general used for PATCH operations.",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        }
      }
    },
    "PatchResourceTagsAndSku": {
      "description": "The object being used to update tags and sku of a resource, in general used for PATCH operations.",
      "type": "object",
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PatchResourceTags"
        }
      ]
    }
  },
  "parameters": {
    "accountNameParameter": {
      "name": "accountName",
      "in": "path",
      "required": true,
      "type": "string",
      "maxLength": 64,
      "minLength": 2,
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
      "description": "The name of Cognitive Services account.",
      "x-ms-parameter-location": "method"
    },
    "locationParameter": {
      "name": "location",
      "in": "path",
      "description": "Resource location.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "usageFilterParameter": {
      "name": "$filter",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "An OData filter expression that describes a subset of usages to return. The supported parameter is name.value (name of the metric, can have an or of multiple names).",
      "x-ms-parameter-location": "method"
    },
    "privateEndpointConnectionNameParameter": {
      "name": "privateEndpointConnectionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the private endpoint connection associated with the Cognitive Services Account",
      "x-ms-parameter-location": "method"
    },
    "deploymentNameParameter": {
      "name": "deploymentName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the deployment associated with the Cognitive Services Account",
      "x-ms-parameter-location": "method"
    },
    "commitmentPlanNameParameter": {
      "name": "commitmentPlanName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the commitmentPlan associated with the Cognitive Services Account",
      "x-ms-parameter-location": "method"
    },
    "commitmentPlanResourceNameParameter": {
      "name": "commitmentPlanName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
      "description": "The name of the commitmentPlan associated with the Cognitive Services Account",
      "x-ms-parameter-location": "method"
    },
    "commitmentPlanAssociationNameParameter": {
      "name": "commitmentPlanAssociationName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
      "description": "The name of the commitment plan association with the Cognitive Services Account",
      "x-ms-parameter-location": "method"
    }
  }
}
