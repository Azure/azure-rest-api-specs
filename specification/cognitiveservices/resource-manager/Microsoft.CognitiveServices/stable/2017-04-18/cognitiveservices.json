{
  "swagger": "2.0",
  "info": {
    "title": "CognitiveServicesManagementClient",
    "description": "Cognitive Services Management Client",
    "version": "2017-04-18"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}": {
      "put": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "description": "Create Cognitive Services Account. Accounts is a resource group wide resource type. It holds the keys for developer to access intelligent APIs. It's also the resource type for billing.",
        "operationId": "Accounts_Create",
        "x-ms-examples": {
          "Create Account": {
            "$ref": "./examples/CreateAccount.json"
          }
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group within the user's subscription."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of Cognitive Services account."
          },
          {
            "name": "account",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CognitiveServicesAccount"
            },
            "description": "The parameters to provide for the created account."
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "If resource is created successfully or already existed, the service should return 200 (OK).",
            "schema": {
              "$ref": "#/definitions/CognitiveServicesAccount"
            }
          },
          "201": {
            "description": "If resource is created successfully, the service should return 201 (OK).",
            "schema": {
              "$ref": "#/definitions/CognitiveServicesAccount"
            }
          },
          "202": {
            "description": "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/CognitiveServicesAccount"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "description": "Updates a Cognitive Services account",
        "operationId": "Accounts_Update",
        "x-ms-examples": {
          "Update Account": {
            "$ref": "./examples/UpdateAccount.json"
          }
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group within the user's subscription."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of Cognitive Services account."
          },
          {
            "name": "account",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CognitiveServicesAccount"
            },
            "description": "The parameters to provide for the created account."
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. ",
            "schema": {
              "$ref": "#/definitions/CognitiveServicesAccount"
            }
          },
          "202": {
            "description": "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/CognitiveServicesAccount"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group *or* resource does not exist, 404 (NotFound) should be returned.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "description": "Deletes a Cognitive Services account from the resource group. ",
        "operationId": "Accounts_Delete",
        "x-ms-examples": {
          "Delete Account": {
            "$ref": "./examples/DeleteAccount.json"
          }
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group within the user's subscription."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of Cognitive Services account."
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A 200 (OK) should be returned if the object exists and was deleted successfully;"
          },
          "202": {
            "description": "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously."
          },
          "204": {
            "description": "a 204 (NoContent) should be used if the resource does not exist and the request is well formed."
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "description": "Returns a Cognitive Services account specified by the parameters.",
        "operationId": "Accounts_GetProperties",
        "x-ms-examples": {
          "Get Account": {
            "$ref": "./examples/GetAccount.json"
          }
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group within the user's subscription."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of Cognitive Services account."
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully.\nFor a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. The only GET specific properties are \"name,\" \"type\" and \"id.\"\nField\tDescription\nKind\trequired.  String.\n\tThe API set for this API account. It can be \n\tÂ· a single API, for example: Face API, Vision API, Speech API. \n\ta bundle of APIs:  Face + Speech, Vision + Emotion, etc.\nsku.name\tRequired.\n\tThe pricing tier/plan of this API. Could be: \n\tF0 - Free\n\tB0 - Basic\n\tS0 - Standard\n\tP0 - Premium\n",
            "schema": {
              "$ref": "#/definitions/CognitiveServicesAccount"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource does not exist, 404 (NotFound) should be returned.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts": {
      "get": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "description": "Returns all the resources of a particular type belonging to a resource group",
        "operationId": "Accounts_ListByResourceGroup",
        "x-ms-examples": {
          "List Accounts by Resource Group": {
            "$ref": "./examples/ListAccountsByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group within the user's subscription."
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.\nThe nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses here. If a resource provider does not support paging, it should return the same body (JSON object with \"value\" property) but omit nextLink entirely (or set to null, *not* empty string) for future compatibility.\nThe nextLink should be implemented using following query parameters:\nÂ· skipToken: opaque token that allows the resource provider to skip resources already enumerated. This value is defined and returned by the RP after first request via nextLink.\nÂ· top: the optional client query parameter which defines the maximum number of records to be returned by the server.\nImplementation details:\nÂ· NextLink may include all the query parameters (specifically OData $filter) used by the client in the first query. \nÂ· Server may return less records than requested with nextLink. Returning zero records with NextLink is an acceptable response. \nClients must fetch records until the nextLink is not returned back / null. Clients should never rely on number of returned records to determinate if pagination is completed.",
            "schema": {
              "$ref": "#/definitions/CognitiveServicesAccountListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/accounts": {
      "get": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "description": "Returns all the resources of a particular type belonging to a subscription.",
        "operationId": "Accounts_List",
        "x-ms-examples": {
          "List Accounts by Subscription": {
            "$ref": "./examples/ListAccountsBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.\nThe nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses. If a resource provider does not support paging, it should return the same body but leave nextLink empty for future compatibility.\nFor a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. ",
            "schema": {
              "$ref": "#/definitions/CognitiveServicesAccountListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/listKeys": {
      "post": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "operationId": "Accounts_ListKeys",
        "description": "Lists the account keys for the specified Cognitive Services account.",
        "x-ms-examples": {
          "List Keys": {
            "$ref": "./examples/ListKeys.json"
          }
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group within the user's subscription."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of Cognitive Services account."
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns with a response body containing the subscription keys for the resource: key1\nThe first API key for authentication when client calls the API endpoint.\n\nkey2\nThe second API key for authentication when client calls the API endpoint.",
            "schema": {
              "$ref": "#/definitions/CognitiveServicesAccountKeys"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/regenerateKey": {
      "post": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "operationId": "Accounts_RegenerateKey",
        "description": "Regenerates the specified account key for the specified Cognitive Services account.",
        "x-ms-examples": {
          "Regenerate Keys": {
            "$ref": "./examples/RegenerateKey.json"
          }
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group within the user's subscription."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of Cognitive Services account."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "$ref": "#/definitions/RegenerateKeyParameters"
            },
            "description": "regenerate key parameters."
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CognitiveServicesAccountKeys"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/skus": {
      "get": {
        "tags": [
          "Skus",
          "CognitiveServicesAccounts"
        ],
        "operationId": "ResourceSkus_List",
        "description": "Gets the list of Microsoft.CognitiveServices SKUs available for your Subscription.",
        "x-ms-examples": {
          "Regenerate Keys": {
            "$ref": "./examples/GetSkus.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceSkusResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/skus": {
      "get": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "description": "List available SKUs for the requested Cognitive Services account",
        "x-ms-examples": {
          "List SKUs": {
            "$ref": "./examples/ListSkus.json"
          }
        },
        "operationId": "Accounts_ListSkus",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group within the user's subscription."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of Cognitive Services account."
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully.\nFor a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. The only GET specific properties are \"name,\" \"type\" and \"id.\"\nField\tDescription\nsku\tRequired, object\n\tThe exact set of keys that define this sku. This matches the fields on the respective resource.\nsku.name\tRequired, string\n\tThe name of the SKU. This is typically a letter + number code, such as A0 or P3\nsku.tier\tRequired, string\n\tThe tier of this particular SKU. Typically one of:\n\tÂ· Free\n\tÂ· Basic\n\tÂ· Standard\n\tÂ· Premium\n",
            "schema": {
              "$ref": "#/definitions/CognitiveServicesAccountEnumerateSkusResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/usages": {
      "get": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "description": "Get usages for the requested Cognitive Services account",
        "x-ms-examples": {
          "Get Usages": {
            "$ref": "./examples/GetUsages.json"
          }
        },
        "operationId": "Accounts_GetUsages",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group within the user's subscription."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of Cognitive Services account."
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/usageFilterParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The usages for Cognitive Services account were retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/UsagesResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/providers/Microsoft.CognitiveServices/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all the available Cognitive Services account operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "Get Operations": {
            "$ref": "./examples/GetOperations.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/OperationEntityListResult"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/locations/{location}/checkSkuAvailability": {
      "post": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "operationId": "CheckSkuAvailability",
        "description": "Check available SKUs.",
        "x-ms-examples": {
          "Check SKU Availability": {
            "$ref": "./examples/CheckSkuAvailability.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/locationParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "$ref": "#/definitions/CheckSkuAvailabilityParameter"
            },
            "description": "Check SKU Availability POST body."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/CheckSkuAvailabilityResultList"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/checkDomainAvailability": {
      "post": {
        "tags": [
          "CognitiveServicesAccounts"
        ],
        "operationId": "CheckDomainAvailability",
        "description": "Check whether a domain is available.",
        "x-ms-examples": {
          "Check SKU Availability": {
            "$ref": "./examples/CheckDomainAvailability.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "$ref": "#/definitions/CheckDomainAvailabilityParameter"
            },
            "description": "Check Domain Availability parameter."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/CheckDomainAvailabilityResult"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CognitiveServicesAccountKind": {
      "type": "string",
      "description": "Required. Indicates the type of cognitive service account."
    },
    "Sku": {
      "properties": {
        "name": {
          "$ref": "#/definitions/SkuName",
          "description": "Gets or sets the sku name. Required for account creation, optional for update."
        },
        "tier": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the sku tier. This is based on the SKU name.",
          "enum": [
            "Free",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": false
          }
        }
      },
      "required": [
        "name"
      ],
      "description": "The SKU of the cognitive services account."
    },
    "SkuName": {
      "type": "string",
      "description": "The name of SKU."
    },
    "CognitiveServicesAccount": {
      "description": "Cognitive Services Account is an Azure resource representing the provisioned account, its type, location and SKU.",
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Entity Tag",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "The id of the created account",
          "readOnly": true
        },
        "kind": {
          "$ref": "#/definitions/CognitiveServicesAccountKind",
          "description": "The Kind of the resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource"
        },
        "name": {
          "type": "string",
          "description": "The name of the created account",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/CognitiveServicesAccountProperties",
          "description": "Properties of Cognitive Services account."
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU of Cognitive Services account."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters."
        },
        "type": {
          "type": "string",
          "description": "Resource type",
          "readOnly": true
        },
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "The identity of Cognitive Services account."
        }
      },
      "x-ms-azure-resource": true
    },
    "CognitiveServicesAccountListResult": {
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of accounts.",
          "type": "string"
        },
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CognitiveServicesAccount"
          },
          "description": "Gets the list of Cognitive Services accounts and their properties."
        }
      },
      "description": "The list of cognitive services accounts operation response."
    },
    "CognitiveServicesAccountProperties": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the status of the cognitive services account at the time the operation was called.",
          "enum": [
            "Creating",
            "ResolvingDNS",
            "Moving",
            "Deleting",
            "Succeeded",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "endpoint": {
          "type": "string",
          "description": "Endpoint of the created account.",
          "readOnly": true
        },
        "internalId": {
          "type": "string",
          "description": "The internal identifier.",
          "readOnly": true
        },
        "customSubDomainName": {
          "type": "string",
          "description": "Optional subdomain name used for token-based authentication."
        },
        "networkAcls": {
          "$ref": "#/definitions/NetworkRuleSet",
          "description": "A collection of rules governing the accessibility from specific network locations."
        },
        "encryption": {
          "$ref": "#/definitions/Encryption",
          "description": "The encryption properties for this resource."
        },
        "userOwnedStorage": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserOwnedStorage"
          },
          "description": "The storage accounts for this resource."
        },
        "apiProperties": {
          "$ref": "#/definitions/CognitiveServicesAccountApiProperties",
          "description": "The api properties for special APIs."
        }
      },
      "description": "Properties of Cognitive Services account."
    },
    "CognitiveServicesAccountApiProperties": {
      "properties": {
        "qnaRuntimeEndpoint": {
          "type": "string",
          "description": "(QnAMaker Only) The runtime endpoint of QnAMaker."
        },
        "statisticsEnabled": {
          "type": "boolean",
          "description": "(Bing Search Only) The flag to enable statistics of Bing Search."
        },
        "eventHubConnectionString": {
          "type": "string",
          "description": "(Personalization Only) The flag to enable statistics of Bing Search.",
          "pattern": "^( *)Endpoint=sb://(.*);( *)SharedAccessKeyName=(.*);( *)SharedAccessKey=(.*)$",
          "maxLength": 1000
        },
        "storageAccountConnectionString": {
          "type": "string",
          "description": "(Personalization Only) The storage account connection string.",
          "pattern": "^(( *)DefaultEndpointsProtocol=(http|https)( *);( *))?AccountName=(.*)AccountKey=(.*)EndpointSuffix=(.*)$",
          "maxLength": 1000
        }
      },
      "description": "The api properties for special APIs."
    },
    "CognitiveServicesAccountKeys": {
      "properties": {
        "key1": {
          "type": "string",
          "description": "Gets the value of key 1."
        },
        "key2": {
          "type": "string",
          "description": "Gets the value of key 2."
        }
      },
      "description": "The access keys for the cognitive services account."
    },
    "RegenerateKeyParameters": {
      "properties": {
        "keyName": {
          "type": "string",
          "description": "key name to generate (Key1|Key2)",
          "enum": [
            "Key1",
            "Key2"
          ],
          "x-ms-enum": {
            "name": "KeyName",
            "modelAsString": false
          }
        }
      },
      "required": [
        "keyName"
      ],
      "description": "Regenerate key parameters."
    },
    "CognitiveServicesAccountEnumerateSkusResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CognitiveServicesResourceAndSku"
          },
          "description": "Gets the list of Cognitive Services accounts and their properties."
        }
      },
      "description": "The list of cognitive services accounts operation response."
    },
    "CognitiveServicesResourceAndSku": {
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "Resource Namespace and Type"
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU of Cognitive Services account."
        }
      },
      "description": "Cognitive Services resource type and SKU."
    },
    "UsagesResult": {
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Usage"
          },
          "description": "The list of usages for Cognitive Service account."
        }
      },
      "description": "The response to a list usage request."
    },
    "Usage": {
      "properties": {
        "unit": {
          "description": "The unit of the metric.",
          "$ref": "#/definitions/UnitType"
        },
        "name": {
          "$ref": "#/definitions/MetricName",
          "readOnly": true,
          "description": "The name information for the metric."
        },
        "quotaPeriod": {
          "type": "string",
          "readOnly": true,
          "description": "The quota period used to summarize the usage values."
        },
        "limit": {
          "type": "number",
          "format": "double",
          "readOnly": true,
          "description": "Maximum value for this metric."
        },
        "currentValue": {
          "type": "number",
          "format": "double",
          "readOnly": true,
          "description": "Current value for this metric."
        },
        "nextResetTime": {
          "type": "string",
          "readOnly": true,
          "description": "Next reset time for current quota."
        },
        "status": {
          "type": "string",
          "description": "Cognitive Services account quota usage status.",
          "enum": [
            "Included",
            "Blocked",
            "InOverage",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "QuotaUsageStatus",
            "modelAsString": true
          }
        }
      },
      "description": "The usage data for a usage request."
    },
    "MetricName": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the metric."
        },
        "localizedValue": {
          "readOnly": true,
          "type": "string",
          "description": "The friendly name of the metric."
        }
      },
      "description": "A metric name."
    },
    "UnitType": {
      "type": "string",
      "readOnly": true,
      "description": "The unit of the metric.",
      "enum": [
        "Count",
        "Bytes",
        "Seconds",
        "Percent",
        "CountPerSecond",
        "BytesPerSecond",
        "Milliseconds"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "UnitType"
      }
    },
    "Error": {
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorBody",
          "description": "The error body."
        }
      },
      "description": "Cognitive Services error object."
    },
    "ErrorBody": {
      "properties": {
        "code": {
          "type": "string",
          "description": "error code"
        },
        "message": {
          "type": "string",
          "description": "error message"
        }
      },
      "description": "Cognitive Services error body.",
      "required": [
        "code",
        "message"
      ]
    },
    "OperationEntityListResult": {
      "description": "The list of cognitive services accounts operation response.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        },
        "value": {
          "description": "The list of operations.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationEntity"
          }
        }
      }
    },
    "OperationEntity": {
      "description": "The operation supported by Cognitive Services.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}.",
          "type": "string"
        },
        "display": {
          "$ref": "#/definitions/OperationDisplayInfo",
          "description": "The operation supported by Cognitive Services."
        },
        "origin": {
          "description": "The origin of the operation.",
          "type": "string"
        },
        "properties": {
          "description": "Additional properties.",
          "type": "object"
        }
      }
    },
    "OperationDisplayInfo": {
      "description": "The operation supported by Cognitive Services.",
      "type": "object",
      "properties": {
        "description": {
          "description": "The description of the operation.",
          "type": "string"
        },
        "operation": {
          "description": "The action that users can perform, based on their permission level.",
          "type": "string"
        },
        "provider": {
          "description": "Service provider: Microsoft Cognitive Services.",
          "type": "string"
        },
        "resource": {
          "description": "Resource on which the operation is performed.",
          "type": "string"
        }
      }
    },
    "CheckSkuAvailabilityParameter": {
      "description": "Check SKU availability parameter.",
      "properties": {
        "skus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuName"
          },
          "description": "The SKU of the resource."
        },
        "kind": {
          "$ref": "#/definitions/CognitiveServicesAccountKind",
          "description": "The Kind of the resource."
        },
        "type": {
          "type": "string",
          "description": "The Type of the resource."
        }
      },
      "required": [
        "skus",
        "kind",
        "type"
      ]
    },
    "CheckSkuAvailabilityResultList": {
      "description": "Check SKU availability result list.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckSkuAvailabilityResult"
          },
          "description": "Check SKU availability result list."
        }
      }
    },
    "CheckSkuAvailabilityResult": {
      "description": "Check SKU availability result.",
      "properties": {
        "kind": {
          "$ref": "#/definitions/CognitiveServicesAccountKind",
          "description": "The Kind of the resource."
        },
        "type": {
          "type": "string",
          "description": "The Type of the resource."
        },
        "skuName": {
          "$ref": "#/definitions/SkuName",
          "description": "The SKU of Cognitive Services account."
        },
        "skuAvailable": {
          "type": "boolean",
          "description": "Indicates the given SKU is available or not."
        },
        "reason": {
          "type": "string",
          "description": "Reason why the SKU is not available."
        },
        "message": {
          "type": "string",
          "description": "Additional error message."
        }
      }
    },
    "CheckDomainAvailabilityParameter": {
      "description": "Check Domain availability parameter.",
      "properties": {
        "subdomainName": {
          "type": "string",
          "description": "The subdomain name to use."
        },
        "type": {
          "type": "string",
          "description": "The Type of the resource."
        }
      },
      "required": [
        "subdomainName",
        "type"
      ]
    },
    "CheckDomainAvailabilityResult": {
      "description": "Check Domain availability result.",
      "properties": {
        "isSubdomainAvailable": {
          "type": "boolean",
          "description": "Indicates the given SKU is available or not."
        },
        "reason": {
          "type": "string",
          "description": "Reason why the SKU is not available."
        },
        "subdomainName": {
          "type": "string",
          "description": "The subdomain name to use."
        },
        "type": {
          "type": "string",
          "description": "The Type of the resource."
        }
      }
    },
    "ResourceSkuRestrictions": {
      "properties": {
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "The type of restrictions.",
          "enum": [
            "Location",
            "Zone"
          ],
          "x-ms-enum": {
            "name": "ResourceSkuRestrictionsType",
            "modelAsString": false
          }
        },
        "values": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "description": "The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted."
        },
        "restrictionInfo": {
          "$ref": "#/definitions/ResourceSkuRestrictionInfo",
          "readOnly": true,
          "description": "The information about the restriction where the SKU cannot be used."
        },
        "reasonCode": {
          "type": "string",
          "readOnly": true,
          "description": "The reason for restriction.",
          "enum": [
            "QuotaId",
            "NotAvailableForSubscription"
          ],
          "x-ms-enum": {
            "name": "ResourceSkuRestrictionsReasonCode",
            "modelAsString": true
          }
        }
      },
      "description": "Describes restrictions of a SKU."
    },
    "ResourceSku": {
      "properties": {
        "resourceType": {
          "readOnly": true,
          "type": "string",
          "description": "The type of resource the SKU applies to."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of SKU."
        },
        "tier": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the tier of Cognitive Services account."
        },
        "kind": {
          "readOnly": true,
          "type": "string",
          "description": "The Kind of resources that are supported in this SKU."
        },
        "locations": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "description": "The set of locations that the SKU is available."
        },
        "restrictions": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ResourceSkuRestrictions"
          },
          "description": "The restrictions because of which SKU cannot be used. This is empty if there are no restrictions."
        }
      },
      "description": "Describes an available Cognitive Services SKU."
    },
    "ResourceSkuRestrictionInfo": {
      "properties": {
        "locations": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations where the SKU is restricted"
        },
        "zones": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of availability zones where the SKU is restricted."
        }
      }
    },
    "ResourceSkusResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceSku"
          },
          "description": "The list of skus available for the subscription."
        },
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of Skus."
        }
      },
      "required": [
        "value"
      ],
      "description": "The Get Skus operation response."
    },
    "NetworkRuleSet": {
      "properties": {
        "defaultAction": {
          "type": "string",
          "description": "The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.",
          "enum": [
            "Allow",
            "Deny"
          ],
          "x-ms-enum": {
            "name": "NetworkRuleAction",
            "modelAsString": true
          }
        },
        "ipRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpRule"
          },
          "description": "The list of IP address rules."
        },
        "virtualNetworkRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkRule"
          },
          "description": "The list of virtual network rules."
        }
      },
      "description": "A set of rules governing the network accessibility."
    },
    "IpRule": {
      "properties": {
        "value": {
          "type": "string",
          "description": "An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78)."
        }
      },
      "required": [
        "value"
      ],
      "description": "A rule governing the accessibility from a specific ip address or ip range."
    },
    "VirtualNetworkRule": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'."
        },
        "state": {
          "type": "string",
          "description": "Gets the state of virtual network rule."
        },
        "ignoreMissingVnetServiceEndpoint": {
          "type": "boolean",
          "description": "Ignore missing vnet service endpoint or not."
        }
      },
      "required": [
        "id"
      ],
      "description": "A rule governing the accessibility from a specific virtual network."
    },
    "Identity": {
      "description": "Managed service identity.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of managed service identity.",
          "enum": [
            "None",
            "SystemAssigned",
            "UserAssigned"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "IdentityType",
            "modelAsString": false
          }
        },
        "tenantId": {
          "description": "Tenant of managed service identity.",
          "type": "string",
          "readOnly": true
        },
        "principalId": {
          "description": "Principal Id of managed service identity.",
          "type": "string",
          "readOnly": true
        },
        "userAssignedIdentities": {
          "description": "The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}",
          "type": "object",
          "additionalProperties": {
            "description": "User-assigned managed identity.",
            "$ref": "#/definitions/UserAssignedIdentity"
          }
        }
      }
    },
    "UserAssignedIdentity": {
      "type": "object",
      "description": "User-assigned managed identity.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "Azure Active Directory principal ID associated with this Identity."
        },
        "clientId": {
          "type": "string",
          "description": "Client App Id associated with this identity."
        }
      }
    },
    "Encryption": {
      "properties": {
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Properties of KeyVault"
        },
        "keySource": {
          "type": "string",
          "description": "Enumerates the possible value of keySource for Encryption",
          "default": "Microsoft.KeyVault",
          "enum": [
            "Microsoft.CognitiveServices",
            "Microsoft.KeyVault"
          ],
          "x-ms-enum": {
            "name": "keySource",
            "modelAsString": true
          }
        }
      },
      "description": "Properties to configure Encryption"
    },
    "KeyVaultProperties": {
      "properties": {
        "keyName": {
          "type": "string",
          "description": "Name of the Key from KeyVault"
        },
        "keyVersion": {
          "type": "string",
          "description": "Version of the Key from KeyVault"
        },
        "keyVaultUri": {
          "type": "string",
          "description": "Uri of KeyVault"
        }
      },
      "description": "Properties to configure keyVault Properties"
    },
    "UserOwnedStorage": {
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "Full resource id of a Microsoft.Storage resource."
        }
      },
      "description": "The user owned storage for Cognitive Services account."
    }
  },
  "parameters": {
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Azure Subscription ID.",
      "required": true,
      "type": "string"
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Version of the API to be used with the client request. Current version is 2017-04-18"
    },
    "locationParameter": {
      "name": "location",
      "in": "path",
      "description": "Resource location.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "usageFilterParameter": {
      "name": "$filter",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "An OData filter expression that describes a subset of usages to return. The supported parameter is name.value (name of the metric, can have an or of multiple names).",
      "x-ms-parameter-location": "method"
    }
  }
}
