{
  "swagger": "2.0",
  "info": {
    "title": "EdgeMarketPlaceClient",
    "version": "2023-08-01",
    "description": "Edge marketplace extensions",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Publishers"
    },
    {
      "name": "Offers"
    }
  ],
  "paths": {
    "/{resourceUri}/providers/Microsoft.EdgeMarketPlace/offers": {
      "get": {
        "operationId": "Offers_List",
        "tags": [
          "Offers"
        ],
        "description": "List Offer resources by parent",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of result items to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-client-name": "top"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "The number of result items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxpagesize",
            "in": "query",
            "description": "The maximum number of result items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter the result list using the given expression.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "filter"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Skip over when retrieving results.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "skipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OfferListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.EdgeMarketPlace/offers/{offerId}": {
      "get": {
        "operationId": "Offers_Get",
        "tags": [
          "Offers"
        ],
        "description": "Get a Offer",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "offerId",
            "in": "path",
            "description": "Id of the offer",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Offer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.EdgeMarketPlace/offers/{offerId}/generateAccessToken": {
      "post": {
        "operationId": "Offers_GenerateAccessToken",
        "tags": [
          "Offers"
        ],
        "description": "A long-running resource action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "offerId",
            "in": "path",
            "description": "Id of the offer",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccessTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DiskAccessToken"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/{resourceUri}/providers/Microsoft.EdgeMarketPlace/offers/{offerId}/getAccessToken": {
      "post": {
        "operationId": "Offers_GetAccessToken",
        "tags": [
          "Offers"
        ],
        "description": "get access token.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "offerId",
            "in": "path",
            "description": "Id of the offer",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccessTokenReadRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DiskAccessToken"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.EdgeMarketPlace/publishers": {
      "get": {
        "operationId": "Publishers_List",
        "tags": [
          "Publishers"
        ],
        "description": "List Publisher resources by parent",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of result items to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-client-name": "top"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "The number of result items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxpagesize",
            "in": "query",
            "description": "The maximum number of result items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter the result list using the given expression.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "filter"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Skip over when retrieving results.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "skipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PublisherListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.EdgeMarketPlace/publishers/{publisherName}": {
      "get": {
        "operationId": "Publishers_Get",
        "tags": [
          "Publishers"
        ],
        "description": "Get a Publisher",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "publisherName",
            "in": "path",
            "description": "Name of the publisher",
            "required": true,
            "type": "string",
            "pattern": "^.*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Publisher"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.EdgeMarketPlace/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "AccessTokenReadRequest": {
      "type": "object",
      "description": "Access token request object",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "The name of the publisher."
        }
      },
      "required": [
        "requestId"
      ]
    },
    "AccessTokenRequest": {
      "type": "object",
      "description": "Access token request object",
      "properties": {
        "publisherName": {
          "type": "string",
          "description": "The name of the publisher."
        },
        "edgeMarketPlaceRegion": {
          "type": "string",
          "description": "The region where the disk will be created."
        },
        "egeMarketPlaceResourceId": {
          "type": "string",
          "description": "The region where the disk will be created."
        },
        "hypervGeneration": {
          "type": "string",
          "description": "The hyperv version."
        },
        "marketPlaceSku": {
          "type": "string",
          "description": "The marketplace sku."
        },
        "marketPlaceSkuVersion": {
          "type": "string",
          "description": "The marketplace sku version."
        },
        "deviceSku": {
          "type": "string",
          "description": "The device sku."
        },
        "deviceVersion": {
          "type": "string",
          "description": "The device sku version."
        }
      },
      "required": [
        "edgeMarketPlaceRegion"
      ]
    },
    "ActionType": {
      "type": "string",
      "description": "ActionType Enum",
      "enum": [
        "Internal"
      ],
      "x-ms-enum": {
        "name": "ActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "Internal",
            "value": "Internal",
            "description": "ActionType is internal"
          }
        ]
      }
    },
    "CreatedByType": {
      "type": "string",
      "description": "Enum for CreatedBy",
      "enum": [
        "User",
        "Application",
        "ManagedIdentity",
        "Key"
      ],
      "x-ms-enum": {
        "name": "CreatedByType",
        "modelAsString": true,
        "values": [
          {
            "name": "User",
            "value": "User",
            "description": "The resource is created by user"
          },
          {
            "name": "Application",
            "value": "Application",
            "description": "The resource is created by application"
          },
          {
            "name": "ManagedIdentity",
            "value": "ManagedIdentity",
            "description": "The resource is created by managed identity"
          },
          {
            "name": "Key",
            "value": "Key",
            "description": "The resource is created by key"
          }
        ]
      }
    },
    "DiskAccessToken": {
      "type": "object",
      "description": "The disk access token",
      "properties": {
        "diskId": {
          "type": "string",
          "description": "The disk id."
        },
        "status": {
          "type": "string",
          "description": "The access token creation status."
        },
        "accessToken": {
          "type": "string",
          "description": "The access token."
        }
      },
      "required": [
        "accessToken"
      ]
    },
    "IconFileUris": {
      "type": "object",
      "description": "Icon files",
      "properties": {
        "small": {
          "type": "string",
          "description": "uri of small icon"
        },
        "medium": {
          "type": "string",
          "description": "uri of medium icon"
        },
        "wide": {
          "type": "string",
          "description": "uri of wide icon"
        },
        "large": {
          "type": "string",
          "description": "uri of large icon"
        }
      }
    },
    "MarketplaceSku": {
      "type": "object",
      "description": "The marketplace sku",
      "properties": {
        "catalogPlanId": {
          "type": "string",
          "description": "The catalog plan id"
        },
        "marketplaceSkuId": {
          "type": "string",
          "description": "The marketplace sku id"
        },
        "type": {
          "type": "string",
          "description": "The type of marketplace sku"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of marketplace sku"
        },
        "summary": {
          "type": "string",
          "description": "The summary"
        },
        "longSummary": {
          "type": "string",
          "description": "The long summary"
        },
        "description": {
          "type": "string",
          "description": "The description"
        },
        "generation": {
          "type": "string",
          "description": "The generation"
        },
        "displayRank": {
          "type": "integer",
          "format": "int32",
          "description": "The display rank of the sku"
        },
        "operatingSystem": {
          "$ref": "#/definitions/SkuOperatingSystem",
          "description": "The operating system supported"
        },
        "marketplaceSkuVersions": {
          "type": "array",
          "description": "The marketplace sku version",
          "items": {
            "$ref": "#/definitions/MarketplaceSkuVersion"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "catalogPlanId",
        "marketplaceSkuId"
      ]
    },
    "MarketplaceSkuVersion": {
      "type": "object",
      "description": "The marketplace sku version",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of sku version"
        },
        "sizeOnDiskInMb": {
          "type": "integer",
          "format": "int32",
          "description": "The size of the image"
        },
        "minimumDownloadSizeInMb": {
          "type": "integer",
          "format": "int32",
          "description": "The size of the download"
        },
        "stageName": {
          "type": "string",
          "description": "The stage name"
        }
      },
      "required": [
        "name"
      ]
    },
    "Offer": {
      "type": "object",
      "description": "An offer.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/OfferProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "OfferAvailability": {
      "type": "string",
      "description": "OfferAvailability Enum",
      "enum": [
        "Private",
        "Public"
      ],
      "x-ms-enum": {
        "name": "OfferAvailability",
        "modelAsString": true,
        "values": [
          {
            "name": "Private",
            "value": "Private",
            "description": "The offer availability is private"
          },
          {
            "name": "Public",
            "value": "Public",
            "description": "The offer availability is public"
          }
        ]
      }
    },
    "OfferContent": {
      "type": "object",
      "description": "The offer content",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The display name of the offer"
        },
        "summary": {
          "type": "string",
          "description": "The summary"
        },
        "longSummary": {
          "type": "string",
          "description": "The long summary"
        },
        "description": {
          "type": "string",
          "description": "The description"
        },
        "offerId": {
          "type": "string",
          "description": "The offer id"
        },
        "offerType": {
          "type": "string",
          "description": "The offer type"
        },
        "supportUri": {
          "type": "string",
          "description": "The support uri"
        },
        "popularity": {
          "type": "integer",
          "format": "int32",
          "description": "The popularity of the offer"
        },
        "offerPublisher": {
          "$ref": "#/definitions/OfferPublisher",
          "description": "The publisher of the offer"
        },
        "availability": {
          "$ref": "#/definitions/OfferAvailability",
          "description": "The availability of the offer"
        },
        "releaseType": {
          "$ref": "#/definitions/OfferReleaseType",
          "description": "The release type of the offer"
        },
        "iconFileUris": {
          "$ref": "#/definitions/IconFileUris",
          "description": "The icon files"
        },
        "termsAndConditions": {
          "$ref": "#/definitions/TermsAndConditions",
          "description": "The terms and conditions"
        },
        "categoryIds": {
          "type": "array",
          "description": "The category ids ",
          "items": {
            "type": "string"
          }
        },
        "operatingSystems": {
          "type": "array",
          "description": "The operating systems",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "displayName",
        "offerId"
      ]
    },
    "OfferListResult": {
      "type": "object",
      "description": "The response of a Offer list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Offer items on this page",
          "items": {
            "$ref": "#/definitions/Offer"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "OfferProperties": {
      "type": "object",
      "description": "The offer properties",
      "properties": {
        "contentVersion": {
          "type": "string",
          "description": "The content version"
        },
        "contentUrl": {
          "type": "string",
          "description": "The content url"
        },
        "offerContent": {
          "$ref": "#/definitions/OfferContent",
          "description": "The offer content"
        },
        "provisioningState": {
          "$ref": "#/definitions/ResourceProvisioningState",
          "description": "The resource provisioning state"
        },
        "marketplaceSkus": {
          "type": "array",
          "description": "The marketplace skus",
          "items": {
            "$ref": "#/definitions/MarketplaceSku"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "offerContent"
      ]
    },
    "OfferPublisher": {
      "type": "object",
      "description": "The offer publisher",
      "properties": {
        "publisherId": {
          "type": "string",
          "description": "The publisher Id"
        },
        "publisherDisplayName": {
          "type": "string",
          "description": "The publisher name"
        }
      },
      "required": [
        "publisherId",
        "publisherDisplayName"
      ]
    },
    "OfferReleaseType": {
      "type": "string",
      "description": "OffereReleaseType Enum",
      "enum": [
        "Preview",
        "GA"
      ],
      "x-ms-enum": {
        "name": "OfferReleaseType",
        "modelAsString": true,
        "values": [
          {
            "name": "Preview",
            "value": "Preview",
            "description": "The offer in preview"
          },
          {
            "name": "GA",
            "value": "GA",
            "description": "The offer in GA"
          }
        ]
      }
    },
    "Origin": {
      "type": "string",
      "description": "Origin Enum",
      "enum": [
        "user",
        "system",
        "user,system"
      ],
      "x-ms-enum": {
        "name": "Origin",
        "modelAsString": true,
        "values": [
          {
            "name": "user",
            "value": "user",
            "description": "Origin is user"
          },
          {
            "name": "system",
            "value": "system",
            "description": "Origin is system"
          },
          {
            "name": "user,system",
            "value": "user,system",
            "description": "Origin is user and system"
          }
        ]
      }
    },
    "Publisher": {
      "type": "object",
      "description": "A publisher who provides offers.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PublisherProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PublisherListResult": {
      "type": "object",
      "description": "The response of a Publisher list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Publisher items on this page",
          "items": {
            "$ref": "#/definitions/Publisher"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PublisherProperties": {
      "type": "object",
      "description": "Publisher properties",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ResourceProvisioningState",
          "description": "The resource provisioning state"
        }
      },
      "required": [
        "provisioningState"
      ]
    },
    "ResourceProvisioningState": {
      "type": "string",
      "description": "ResourceProvisioningState Enum",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ResourceProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      }
    },
    "SkuOperatingSystem": {
      "type": "object",
      "description": "The sku operating system",
      "properties": {
        "family": {
          "type": "string",
          "description": "The family of the operating system"
        },
        "type": {
          "type": "string",
          "description": "The type of the operating system"
        },
        "name": {
          "type": "string",
          "description": "The name of the operating system"
        }
      },
      "required": [
        "name"
      ]
    },
    "TermsAndConditions": {
      "type": "object",
      "description": "Terms and conditions",
      "properties": {
        "legalTermsUri": {
          "type": "string",
          "description": "The legal terms and conditions uri"
        },
        "legalTermsType": {
          "type": "string",
          "description": "The type of legal terms"
        },
        "privacyPolicyUri": {
          "type": "string",
          "description": "The privacy policy uri"
        }
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2023-08-01"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2023_08_01",
            "value": "2023-08-01",
            "description": "Version 2023-08-01"
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.ResourceManager.ResourceUriParameter": {
      "name": "resourceUri",
      "in": "path",
      "description": "The fully qualified Azure Resource manager identifier of the resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    }
  }
}
