{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.IoTOperations management service.",
    "version": "2025-07-01-preview",
    "description": "Microsoft.IoTOperations Resource Provider management API.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Instance"
    },
    {
      "name": "Broker"
    },
    {
      "name": "BrokerListener"
    },
    {
      "name": "BrokerAuthentication"
    },
    {
      "name": "BrokerAuthorization"
    },
    {
      "name": "DataflowProfile"
    },
    {
      "name": "Dataflow"
    },
    {
      "name": "DataflowEndpoint"
    },
    {
      "name": "DataflowGraph"
    },
    {
      "name": "RegistryEndpoint"
    },
    {
      "name": "AkriConnectorTemplate"
    },
    {
      "name": "AkriConnector"
    }
  ],
  "paths": {
    "/providers/Microsoft.IoTOperations/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.IoTOperations/instances": {
      "get": {
        "operationId": "Instance_ListBySubscription",
        "tags": [
          "Instance"
        ],
        "description": "List InstanceResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InstanceResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instance_ListBySubscription": {
            "$ref": "./examples/Instance_ListBySubscription_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances": {
      "get": {
        "operationId": "Instance_ListByResourceGroup",
        "tags": [
          "Instance"
        ],
        "description": "List InstanceResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InstanceResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instance_ListByResourceGroup": {
            "$ref": "./examples/Instance_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}": {
      "get": {
        "operationId": "Instance_Get",
        "tags": [
          "Instance"
        ],
        "description": "Get a InstanceResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InstanceResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instance_Get": {
            "$ref": "./examples/Instance_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Instance_CreateOrUpdate",
        "tags": [
          "Instance"
        ],
        "description": "Create a InstanceResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InstanceResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'InstanceResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/InstanceResource"
            }
          },
          "201": {
            "description": "Resource 'InstanceResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/InstanceResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instance_CreateOrUpdate": {
            "$ref": "./examples/Instance_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Instance_Update",
        "tags": [
          "Instance"
        ],
        "description": "Update a InstanceResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InstancePatchModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InstanceResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instance_Update": {
            "$ref": "./examples/Instance_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "Instance_Delete",
        "tags": [
          "Instance"
        ],
        "description": "Delete a InstanceResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instance_Delete": {
            "$ref": "./examples/Instance_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/akriConnectorTemplates": {
      "get": {
        "operationId": "AkriConnectorTemplate_ListByInstanceResource",
        "tags": [
          "AkriConnectorTemplate"
        ],
        "description": "List AkriConnectorTemplateResource resources by InstanceResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AkriConnectorTemplateResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AkriConnectorTemplate_ListByInstanceResource_MaximumSet": {
            "$ref": "./examples/AkriConnectorTemplate_ListByInstanceResource_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/akriConnectorTemplates/{akriConnectorTemplateName}": {
      "get": {
        "operationId": "AkriConnectorTemplate_Get",
        "tags": [
          "AkriConnectorTemplate"
        ],
        "description": "Get a AkriConnectorTemplateResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "akriConnectorTemplateName",
            "in": "path",
            "description": "Name of AkriConnectorTemplate resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AkriConnectorTemplateResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AkriConnectorTemplate_Get_Managed_Rest": {
            "$ref": "./examples/AkriConnectorTemplate_Get_Managed_Rest.json"
          },
          "AkriConnectorTemplate_Get_MaximumSet": {
            "$ref": "./examples/AkriConnectorTemplate_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "AkriConnectorTemplate_CreateOrUpdate",
        "tags": [
          "AkriConnectorTemplate"
        ],
        "description": "Create a AkriConnectorTemplateResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "akriConnectorTemplateName",
            "in": "path",
            "description": "Name of AkriConnectorTemplate resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AkriConnectorTemplateResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AkriConnectorTemplateResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AkriConnectorTemplateResource"
            }
          },
          "201": {
            "description": "Resource 'AkriConnectorTemplateResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/AkriConnectorTemplateResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AkriConnectorTemplate_CreateOrUpdate_MaximumSet": {
            "$ref": "./examples/AkriConnectorTemplate_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "AkriConnectorTemplate_Delete",
        "tags": [
          "AkriConnectorTemplate"
        ],
        "description": "Delete a AkriConnectorTemplateResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "akriConnectorTemplateName",
            "in": "path",
            "description": "Name of AkriConnectorTemplate resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AkriConnectorTemplate_Delete_MaximumSet": {
            "$ref": "./examples/AkriConnectorTemplate_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/akriConnectorTemplates/{akriConnectorTemplateName}/connectors": {
      "get": {
        "operationId": "AkriConnector_ListByTemplate",
        "tags": [
          "AkriConnector"
        ],
        "description": "List AkriConnectorResource resources by AkriConnectorTemplateResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "akriConnectorTemplateName",
            "in": "path",
            "description": "Name of AkriConnectorTemplate resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AkriConnectorResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AkriConnector_ListByTemplate_MaximumSet": {
            "$ref": "./examples/AkriConnector_ListByTemplate_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/akriConnectorTemplates/{akriConnectorTemplateName}/connectors/{connectorName}": {
      "get": {
        "operationId": "AkriConnector_Get",
        "tags": [
          "AkriConnector"
        ],
        "description": "Get a AkriConnectorResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "akriConnectorTemplateName",
            "in": "path",
            "description": "Name of AkriConnectorTemplate resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "connectorName",
            "in": "path",
            "description": "Name of AkriConnector resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AkriConnectorResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AkriConnector_Get_MaximumSet": {
            "$ref": "./examples/AkriConnector_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "AkriConnector_CreateOrUpdate",
        "tags": [
          "AkriConnector"
        ],
        "description": "Create a AkriConnectorResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "akriConnectorTemplateName",
            "in": "path",
            "description": "Name of AkriConnectorTemplate resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "connectorName",
            "in": "path",
            "description": "Name of AkriConnector resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AkriConnectorResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AkriConnectorResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AkriConnectorResource"
            }
          },
          "201": {
            "description": "Resource 'AkriConnectorResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/AkriConnectorResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AkriConnector_CreateOrUpdate_MaximumSet": {
            "$ref": "./examples/AkriConnector_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "AkriConnector_Delete",
        "tags": [
          "AkriConnector"
        ],
        "description": "Delete a AkriConnectorResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "akriConnectorTemplateName",
            "in": "path",
            "description": "Name of AkriConnectorTemplate resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "connectorName",
            "in": "path",
            "description": "Name of AkriConnector resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AkriConnector_Delete_MaximumSet": {
            "$ref": "./examples/AkriConnector_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/brokers": {
      "get": {
        "operationId": "Broker_ListByResourceGroup",
        "tags": [
          "Broker"
        ],
        "description": "List BrokerResource resources by InstanceResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BrokerResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Broker_ListByResourceGroup": {
            "$ref": "./examples/Broker_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/brokers/{brokerName}": {
      "get": {
        "operationId": "Broker_Get",
        "tags": [
          "Broker"
        ],
        "description": "Get a BrokerResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BrokerResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Broker_Get": {
            "$ref": "./examples/Broker_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Broker_CreateOrUpdate",
        "tags": [
          "Broker"
        ],
        "description": "Create a BrokerResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BrokerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BrokerResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/BrokerResource"
            }
          },
          "201": {
            "description": "Resource 'BrokerResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/BrokerResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Broker_CreateOrUpdate": {
            "$ref": "./examples/Broker_CreateOrUpdate_MaximumSet_Gen.json"
          },
          "Broker_CreateOrUpdate_Complex": {
            "$ref": "./examples/Broker_CreateOrUpdate_Complex.json"
          },
          "Broker_CreateOrUpdate_Minimal": {
            "$ref": "./examples/Broker_CreateOrUpdate_Minimal.json"
          },
          "Broker_CreateOrUpdate_Simple": {
            "$ref": "./examples/Broker_CreateOrUpdate_Simple.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Broker_Delete",
        "tags": [
          "Broker"
        ],
        "description": "Delete a BrokerResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Broker_Delete": {
            "$ref": "./examples/Broker_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/brokers/{brokerName}/authentications": {
      "get": {
        "operationId": "BrokerAuthentication_ListByResourceGroup",
        "tags": [
          "BrokerAuthentication"
        ],
        "description": "List BrokerAuthenticationResource resources by BrokerResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BrokerAuthenticationResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BrokerAuthentication_ListByResourceGroup": {
            "$ref": "./examples/BrokerAuthentication_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/brokers/{brokerName}/authentications/{authenticationName}": {
      "get": {
        "operationId": "BrokerAuthentication_Get",
        "tags": [
          "BrokerAuthentication"
        ],
        "description": "Get a BrokerAuthenticationResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "authenticationName",
            "in": "path",
            "description": "Name of Instance broker authentication resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BrokerAuthenticationResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BrokerAuthentication_Get": {
            "$ref": "./examples/BrokerAuthentication_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "BrokerAuthentication_CreateOrUpdate",
        "tags": [
          "BrokerAuthentication"
        ],
        "description": "Create a BrokerAuthenticationResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "authenticationName",
            "in": "path",
            "description": "Name of Instance broker authentication resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BrokerAuthenticationResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BrokerAuthenticationResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/BrokerAuthenticationResource"
            }
          },
          "201": {
            "description": "Resource 'BrokerAuthenticationResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/BrokerAuthenticationResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BrokerAuthentication_CreateOrUpdate": {
            "$ref": "./examples/BrokerAuthentication_CreateOrUpdate_MaximumSet_Gen.json"
          },
          "BrokerAuthentication_CreateOrUpdate_Complex": {
            "$ref": "./examples/BrokerAuthentication_CreateOrUpdate_Complex.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "BrokerAuthentication_Delete",
        "tags": [
          "BrokerAuthentication"
        ],
        "description": "Delete a BrokerAuthenticationResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "authenticationName",
            "in": "path",
            "description": "Name of Instance broker authentication resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BrokerAuthentication_Delete": {
            "$ref": "./examples/BrokerAuthentication_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/brokers/{brokerName}/authorizations": {
      "get": {
        "operationId": "BrokerAuthorization_ListByResourceGroup",
        "tags": [
          "BrokerAuthorization"
        ],
        "description": "List BrokerAuthorizationResource resources by BrokerResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BrokerAuthorizationResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BrokerAuthorization_ListByResourceGroup": {
            "$ref": "./examples/BrokerAuthorization_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/brokers/{brokerName}/authorizations/{authorizationName}": {
      "get": {
        "operationId": "BrokerAuthorization_Get",
        "tags": [
          "BrokerAuthorization"
        ],
        "description": "Get a BrokerAuthorizationResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "authorizationName",
            "in": "path",
            "description": "Name of Instance broker authorization resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BrokerAuthorizationResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BrokerAuthorization_Get": {
            "$ref": "./examples/BrokerAuthorization_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "BrokerAuthorization_CreateOrUpdate",
        "tags": [
          "BrokerAuthorization"
        ],
        "description": "Create a BrokerAuthorizationResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "authorizationName",
            "in": "path",
            "description": "Name of Instance broker authorization resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BrokerAuthorizationResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BrokerAuthorizationResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/BrokerAuthorizationResource"
            }
          },
          "201": {
            "description": "Resource 'BrokerAuthorizationResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/BrokerAuthorizationResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BrokerAuthorization_CreateOrUpdate": {
            "$ref": "./examples/BrokerAuthorization_CreateOrUpdate_MaximumSet_Gen.json"
          },
          "BrokerAuthorization_CreateOrUpdate_Complex": {
            "$ref": "./examples/BrokerAuthorization_CreateOrUpdate_Complex.json"
          },
          "BrokerAuthorization_CreateOrUpdate_Simple": {
            "$ref": "./examples/BrokerAuthorization_CreateOrUpdate_Simple.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "BrokerAuthorization_Delete",
        "tags": [
          "BrokerAuthorization"
        ],
        "description": "Delete a BrokerAuthorizationResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "authorizationName",
            "in": "path",
            "description": "Name of Instance broker authorization resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BrokerAuthorization_Delete": {
            "$ref": "./examples/BrokerAuthorization_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/brokers/{brokerName}/listeners": {
      "get": {
        "operationId": "BrokerListener_ListByResourceGroup",
        "tags": [
          "BrokerListener"
        ],
        "description": "List BrokerListenerResource resources by BrokerResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BrokerListenerResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BrokerListener_ListByResourceGroup": {
            "$ref": "./examples/BrokerListener_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/brokers/{brokerName}/listeners/{listenerName}": {
      "get": {
        "operationId": "BrokerListener_Get",
        "tags": [
          "BrokerListener"
        ],
        "description": "Get a BrokerListenerResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "listenerName",
            "in": "path",
            "description": "Name of Instance broker listener resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BrokerListenerResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BrokerListener_Get": {
            "$ref": "./examples/BrokerListener_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "BrokerListener_CreateOrUpdate",
        "tags": [
          "BrokerListener"
        ],
        "description": "Create a BrokerListenerResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "listenerName",
            "in": "path",
            "description": "Name of Instance broker listener resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BrokerListenerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BrokerListenerResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/BrokerListenerResource"
            }
          },
          "201": {
            "description": "Resource 'BrokerListenerResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/BrokerListenerResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BrokerListener_CreateOrUpdate": {
            "$ref": "./examples/BrokerListener_CreateOrUpdate_MaximumSet_Gen.json"
          },
          "BrokerListener_CreateOrUpdate_Complex": {
            "$ref": "./examples/BrokerListener_CreateOrUpdate_Complex.json"
          },
          "BrokerListener_CreateOrUpdate_Simple": {
            "$ref": "./examples/BrokerListener_CreateOrUpdate_Simple.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "BrokerListener_Delete",
        "tags": [
          "BrokerListener"
        ],
        "description": "Delete a BrokerListenerResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "listenerName",
            "in": "path",
            "description": "Name of Instance broker listener resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BrokerListener_Delete": {
            "$ref": "./examples/BrokerListener_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/dataflowEndpoints": {
      "get": {
        "operationId": "DataflowEndpoint_ListByResourceGroup",
        "tags": [
          "DataflowEndpoint"
        ],
        "description": "List DataflowEndpointResource resources by InstanceResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataflowEndpointResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DataflowEndpoint_ListByResourceGroup": {
            "$ref": "./examples/DataflowEndpoint_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/dataflowEndpoints/{dataflowEndpointName}": {
      "get": {
        "operationId": "DataflowEndpoint_Get",
        "tags": [
          "DataflowEndpoint"
        ],
        "description": "Get a DataflowEndpointResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowEndpointName",
            "in": "path",
            "description": "Name of Instance dataflowEndpoint resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataflowEndpointResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DataflowEndpoint_Get": {
            "$ref": "./examples/DataflowEndpoint_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "DataflowEndpoint_CreateOrUpdate",
        "tags": [
          "DataflowEndpoint"
        ],
        "description": "Create a DataflowEndpointResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowEndpointName",
            "in": "path",
            "description": "Name of Instance dataflowEndpoint resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataflowEndpointResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DataflowEndpointResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DataflowEndpointResource"
            }
          },
          "201": {
            "description": "Resource 'DataflowEndpointResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DataflowEndpointResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DataflowEndpoint_CreateOrUpdate": {
            "$ref": "./examples/DataflowEndpoint_CreateOrUpdate_MaximumSet_Gen.json"
          },
          "DataflowEndpoint_CreateOrUpdate_ADLSv2": {
            "$ref": "./examples/DataflowEndpoint_CreateOrUpdate_ADLSv2.json"
          },
          "DataflowEndpoint_CreateOrUpdate_ADX": {
            "$ref": "./examples/DataflowEndpoint_CreateOrUpdate_ADX.json"
          },
          "DataflowEndpoint_CreateOrUpdate_AIO": {
            "$ref": "./examples/DataflowEndpoint_CreateOrUpdate_AIO.json"
          },
          "DataflowEndpoint_CreateOrUpdate_EventGrid": {
            "$ref": "./examples/DataflowEndpoint_CreateOrUpdate_EventGrid.json"
          },
          "DataflowEndpoint_CreateOrUpdate_EventHub": {
            "$ref": "./examples/DataflowEndpoint_CreateOrUpdate_EventHub.json"
          },
          "DataflowEndpoint_CreateOrUpdate_Fabric": {
            "$ref": "./examples/DataflowEndpoint_CreateOrUpdate_Fabric.json"
          },
          "DataflowEndpoint_CreateOrUpdate_Kafka": {
            "$ref": "./examples/DataflowEndpoint_CreateOrUpdate_Kafka.json"
          },
          "DataflowEndpoint_CreateOrUpdate_LocalStorage": {
            "$ref": "./examples/DataflowEndpoint_CreateOrUpdate_LocalStorage.json"
          },
          "DataflowEndpoint_CreateOrUpdate_MQTT": {
            "$ref": "./examples/DataflowEndpoint_CreateOrUpdate_MQTT.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "DataflowEndpoint_Delete",
        "tags": [
          "DataflowEndpoint"
        ],
        "description": "Delete a DataflowEndpointResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowEndpointName",
            "in": "path",
            "description": "Name of Instance dataflowEndpoint resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DataflowEndpoint_Delete": {
            "$ref": "./examples/DataflowEndpoint_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/dataflowProfiles": {
      "get": {
        "operationId": "DataflowProfile_ListByResourceGroup",
        "tags": [
          "DataflowProfile"
        ],
        "description": "List DataflowProfileResource resources by InstanceResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataflowProfileResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DataflowProfile_ListByResourceGroup": {
            "$ref": "./examples/DataflowProfile_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/dataflowProfiles/{dataflowProfileName}": {
      "get": {
        "operationId": "DataflowProfile_Get",
        "tags": [
          "DataflowProfile"
        ],
        "description": "Get a DataflowProfileResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowProfileName",
            "in": "path",
            "description": "Name of Instance dataflowProfile resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataflowProfileResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DataflowProfile_Get": {
            "$ref": "./examples/DataflowProfile_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "DataflowProfile_CreateOrUpdate",
        "tags": [
          "DataflowProfile"
        ],
        "description": "Create a DataflowProfileResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowProfileName",
            "in": "path",
            "description": "Name of Instance dataflowProfile resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataflowProfileResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DataflowProfileResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DataflowProfileResource"
            }
          },
          "201": {
            "description": "Resource 'DataflowProfileResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DataflowProfileResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DataflowProfile_CreateOrUpdate": {
            "$ref": "./examples/DataflowProfile_CreateOrUpdate_MaximumSet_Gen.json"
          },
          "DataflowProfile_CreateOrUpdate_Minimal": {
            "$ref": "./examples/DataflowProfile_CreateOrUpdate_Minimal.json"
          },
          "DataflowProfile_CreateOrUpdate_Multi": {
            "$ref": "./examples/DataflowProfile_CreateOrUpdate_Multi.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "DataflowProfile_Delete",
        "tags": [
          "DataflowProfile"
        ],
        "description": "Delete a DataflowProfileResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowProfileName",
            "in": "path",
            "description": "Name of Instance dataflowProfile resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DataflowProfile_Delete": {
            "$ref": "./examples/DataflowProfile_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/dataflowProfiles/{dataflowProfileName}/dataflowGraphs": {
      "get": {
        "operationId": "DataflowGraph_ListByDataflowProfile",
        "tags": [
          "DataflowGraph"
        ],
        "description": "List DataflowGraphResource resources by DataflowProfileResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowProfileName",
            "in": "path",
            "description": "Name of Instance dataflowProfile resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataflowGraphResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DataflowGraph_ListByDataflowProfile_MaximumSet": {
            "$ref": "./examples/DataflowGraph_ListByDataflowProfile_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/dataflowProfiles/{dataflowProfileName}/dataflowGraphs/{dataflowGraphName}": {
      "get": {
        "operationId": "DataflowGraph_Get",
        "tags": [
          "DataflowGraph"
        ],
        "description": "Get a DataflowGraphResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowProfileName",
            "in": "path",
            "description": "Name of Instance dataflowProfile resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowGraphName",
            "in": "path",
            "description": "Name of Instance dataflowEndpoint resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataflowGraphResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DataflowGraph_Get_MaximumSet": {
            "$ref": "./examples/DataflowGraph_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "DataflowGraph_CreateOrUpdate",
        "tags": [
          "DataflowGraph"
        ],
        "description": "Create a DataflowGraphResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowProfileName",
            "in": "path",
            "description": "Name of Instance dataflowProfile resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowGraphName",
            "in": "path",
            "description": "Name of Instance dataflowEndpoint resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataflowGraphResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DataflowGraphResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DataflowGraphResource"
            }
          },
          "201": {
            "description": "Resource 'DataflowGraphResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DataflowGraphResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DataflowGraph_CreateOrUpdate_MaximumSet": {
            "$ref": "./examples/DataflowGraph_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "DataflowGraph_Delete",
        "tags": [
          "DataflowGraph"
        ],
        "description": "Delete a DataflowGraphResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowProfileName",
            "in": "path",
            "description": "Name of Instance dataflowProfile resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowGraphName",
            "in": "path",
            "description": "Name of Instance dataflowEndpoint resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DataflowGraph_Delete_MaximumSet": {
            "$ref": "./examples/DataflowGraph_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/dataflowProfiles/{dataflowProfileName}/dataflows": {
      "get": {
        "operationId": "Dataflow_ListByProfileResource",
        "tags": [
          "Dataflow"
        ],
        "description": "List DataflowResource resources by DataflowProfileResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowProfileName",
            "in": "path",
            "description": "Name of Instance dataflowProfile resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataflowResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Dataflow_ListByProfileResource": {
            "$ref": "./examples/Dataflow_ListByProfileResource_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/dataflowProfiles/{dataflowProfileName}/dataflows/{dataflowName}": {
      "get": {
        "operationId": "Dataflow_Get",
        "tags": [
          "Dataflow"
        ],
        "description": "Get a DataflowResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowProfileName",
            "in": "path",
            "description": "Name of Instance dataflowProfile resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowName",
            "in": "path",
            "description": "Name of Instance dataflowProfile dataflow resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataflowResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Dataflow_Get": {
            "$ref": "./examples/Dataflow_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Dataflow_CreateOrUpdate",
        "tags": [
          "Dataflow"
        ],
        "description": "Create a DataflowResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowProfileName",
            "in": "path",
            "description": "Name of Instance dataflowProfile resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowName",
            "in": "path",
            "description": "Name of Instance dataflowProfile dataflow resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataflowResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DataflowResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DataflowResource"
            }
          },
          "201": {
            "description": "Resource 'DataflowResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DataflowResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Dataflow_CreateOrUpdate": {
            "$ref": "./examples/Dataflow_CreateOrUpdate_MaximumSet_Gen.json"
          },
          "Dataflow_CreateOrUpdate_ComplexContextualization": {
            "$ref": "./examples/Dataflow_CreateOrUpdate_ComplexContextualization.json"
          },
          "Dataflow_CreateOrUpdate_ComplexEventHub": {
            "$ref": "./examples/Dataflow_CreateOrUpdate_ComplexEventHub.json"
          },
          "Dataflow_CreateOrUpdate_FilterToTopic": {
            "$ref": "./examples/Dataflow_CreateOrUpdate_FilterToTopic.json"
          },
          "Dataflow_CreateOrUpdate_SimpleEventGrid": {
            "$ref": "./examples/Dataflow_CreateOrUpdate_SimpleEventGrid.json"
          },
          "Dataflow_CreateOrUpdate_SimpleFabric": {
            "$ref": "./examples/Dataflow_CreateOrUpdate_SimpleFabric.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Dataflow_Delete",
        "tags": [
          "Dataflow"
        ],
        "description": "Delete a DataflowResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowProfileName",
            "in": "path",
            "description": "Name of Instance dataflowProfile resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowName",
            "in": "path",
            "description": "Name of Instance dataflowProfile dataflow resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Dataflow_Delete": {
            "$ref": "./examples/Dataflow_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/registryEndpoints": {
      "get": {
        "operationId": "RegistryEndpoint_ListByInstanceResource",
        "tags": [
          "RegistryEndpoint"
        ],
        "description": "List RegistryEndpointResource resources by InstanceResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RegistryEndpointResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryEndpoint_ListByInstanceResource_MaximumSet": {
            "$ref": "./examples/RegistryEndpoint_ListByInstanceResource_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/registryEndpoints/{registryEndpointName}": {
      "get": {
        "operationId": "RegistryEndpoint_Get",
        "tags": [
          "RegistryEndpoint"
        ],
        "description": "Get a RegistryEndpointResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "registryEndpointName",
            "in": "path",
            "description": "Name of RegistryEndpoint resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RegistryEndpointResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryEndpoint_Get_MaximumSet": {
            "$ref": "./examples/RegistryEndpoint_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "RegistryEndpoint_CreateOrUpdate",
        "tags": [
          "RegistryEndpoint"
        ],
        "description": "Create a RegistryEndpointResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "registryEndpointName",
            "in": "path",
            "description": "Name of RegistryEndpoint resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegistryEndpointResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'RegistryEndpointResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/RegistryEndpointResource"
            }
          },
          "201": {
            "description": "Resource 'RegistryEndpointResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/RegistryEndpointResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryEndpoint_CreateOrUpdate_MaximumSet": {
            "$ref": "./examples/RegistryEndpoint_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "RegistryEndpoint_Delete",
        "tags": [
          "RegistryEndpoint"
        ],
        "description": "Delete a RegistryEndpointResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "registryEndpointName",
            "in": "path",
            "description": "Name of RegistryEndpoint resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryEndpoint_Delete_MaximumSet": {
            "$ref": "./examples/RegistryEndpoint_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AccessTokenMethod": {
      "type": "string",
      "description": "Access Token Method",
      "enum": [
        "AccessToken"
      ],
      "x-ms-enum": {
        "name": "AccessTokenMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "AccessToken",
            "value": "AccessToken",
            "description": "AccessToken Option"
          }
        ]
      }
    },
    "AdvancedSettings": {
      "type": "object",
      "description": "Broker Advanced Settings",
      "properties": {
        "clients": {
          "$ref": "#/definitions/ClientConfig",
          "description": "Configurations related to All Clients."
        },
        "encryptInternalTraffic": {
          "type": "string",
          "description": "The setting to enable or disable encryption of internal Traffic.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        },
        "internalCerts": {
          "$ref": "#/definitions/CertManagerCertOptions",
          "description": "Certificate rotation and private key configuration."
        }
      }
    },
    "AkriConnectorProperties": {
      "type": "object",
      "description": "AkriConnector properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      }
    },
    "AkriConnectorResource": {
      "type": "object",
      "description": "AkriConnector resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AkriConnectorProperties",
          "description": "The resource-specific properties for this resource."
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AkriConnectorResourceListResult": {
      "type": "object",
      "description": "The response of a AkriConnectorResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AkriConnectorResource items on this page",
          "items": {
            "$ref": "#/definitions/AkriConnectorResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AkriConnectorTemplateAioMetadata": {
      "type": "object",
      "description": "AkriConnectorTemplateAioMetadata properties.",
      "properties": {
        "aioMinVersion": {
          "type": "string",
          "description": "The minimum version of AIO required for the connector."
        },
        "aioMaxVersion": {
          "type": "string",
          "description": "The maximum version of AIO required for the connector."
        }
      }
    },
    "AkriConnectorTemplateAllocation": {
      "type": "object",
      "description": "AkriConnectorTemplateAllocation properties.",
      "properties": {
        "policy": {
          "$ref": "#/definitions/AkriConnectorTemplateAllocationPolicy",
          "description": "The allocation policy type."
        }
      },
      "discriminator": "policy",
      "required": [
        "policy"
      ]
    },
    "AkriConnectorTemplateAllocationPolicy": {
      "type": "string",
      "description": "AkriConnectorTemplateAllocationPolicy properties.",
      "enum": [
        "Bucketized"
      ],
      "x-ms-enum": {
        "name": "AkriConnectorTemplateAllocationPolicy",
        "modelAsString": true,
        "values": [
          {
            "name": "Bucketized",
            "value": "Bucketized",
            "description": "Bucketized allocation policy."
          }
        ]
      }
    },
    "AkriConnectorTemplateBucketizedAllocation": {
      "type": "object",
      "description": "AkriConnectorTemplateBucketizedAllocation properties.",
      "properties": {
        "bucketSize": {
          "type": "integer",
          "format": "int32",
          "description": "The bucketized allocation of AEPs for connectors.",
          "minimum": 1,
          "maximum": 100
        }
      },
      "required": [
        "bucketSize"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AkriConnectorTemplateAllocation"
        }
      ],
      "x-ms-discriminator-value": "Bucketized"
    },
    "AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs": {
      "type": "object",
      "description": "AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs properties.",
      "properties": {
        "defaultDatasetConfigSchemaRef": {
          "type": "string",
          "description": "The default configuration schema reference for datasets."
        },
        "defaultEventsConfigSchemaRef": {
          "type": "string",
          "description": "The default configuration schema reference for events."
        },
        "defaultProcessControlConfigSchemaRef": {
          "type": "string",
          "description": "The default configuration schema reference for process control."
        },
        "defaultStreamsConfigSchemaRef": {
          "type": "string",
          "description": "The default configuration schema reference for streams."
        },
        "additionalConfigSchemaRef": {
          "type": "string",
          "description": "The additional configuration schema reference."
        }
      }
    },
    "AkriConnectorTemplateDeviceInboundEndpointType": {
      "type": "object",
      "description": "AkriConnectorTemplateDeviceInboundEndpointType properties.",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description of the device inbound endpoint."
        },
        "endpointType": {
          "$ref": "#/definitions/NonEmptyString",
          "description": "The type of the device inbound endpoint."
        },
        "version": {
          "$ref": "#/definitions/NonEmptyString",
          "description": "The version of the device inbound endpoint."
        },
        "configurationSchemaRefs": {
          "$ref": "#/definitions/AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs",
          "description": "The configuration schema references for the device inbound endpoint."
        }
      },
      "required": [
        "endpointType"
      ]
    },
    "AkriConnectorTemplateDiagnostics": {
      "type": "object",
      "description": "AkriConnectorTemplateDiagnostics properties.",
      "properties": {
        "logs": {
          "$ref": "#/definitions/AkriConnectorsDiagnosticsLogs",
          "description": "The log settings for the Connector template."
        }
      },
      "required": [
        "logs"
      ]
    },
    "AkriConnectorTemplateHelmAdvancedConfiguration": {
      "type": "object",
      "description": "AkriConnectorTemplateHelmAdvancedConfiguration properties.",
      "properties": {
        "delete": {
          "$ref": "#/definitions/AkriConnectorTemplateHelmDeleteConfiguration",
          "description": "Delete operation configuration for the Helm chart."
        },
        "install": {
          "$ref": "#/definitions/AkriConnectorTemplateHelmInstallConfiguration",
          "description": "Install operation configuration for the Helm chart."
        },
        "upgrade": {
          "$ref": "#/definitions/AkriConnectorTemplateHelmUpgradeConfiguration",
          "description": "Upgrade operation configuration for the Helm chart."
        }
      }
    },
    "AkriConnectorTemplateHelmAuthSecretRef": {
      "type": "object",
      "description": "AkriConnectorTemplateHelmAuthSecretRef properties.",
      "properties": {
        "secretRef": {
          "type": "string",
          "description": "The name of the secret."
        },
        "passwordKey": {
          "type": "string",
          "description": "The key of the password in the secret."
        },
        "usernameKey": {
          "type": "string",
          "description": "The key of the username in the secret."
        }
      },
      "required": [
        "secretRef",
        "passwordKey",
        "usernameKey"
      ]
    },
    "AkriConnectorTemplateHelmConfiguration": {
      "type": "object",
      "description": "AkriConnectorTemplateHelmConfiguration properties.",
      "properties": {
        "helmConfigurationSettings": {
          "$ref": "#/definitions/AkriConnectorTemplateHelmConfigurationSettings",
          "description": "The Helm configuration settings."
        }
      },
      "required": [
        "helmConfigurationSettings"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AkriConnectorTemplateRuntimeConfiguration"
        }
      ],
      "x-ms-discriminator-value": "HelmConfiguration"
    },
    "AkriConnectorTemplateHelmConfigurationSettings": {
      "type": "object",
      "description": "AkriConnectorTemplateHelmConfiguration properties.",
      "properties": {
        "registrySettings": {
          "$ref": "#/definitions/AkriConnectorTemplateHelmRegistrySettings",
          "description": "The registry settings for the helm chart to be used."
        },
        "releaseName": {
          "type": "string",
          "description": "The release name of the Helm chart."
        },
        "repositoryName": {
          "type": "string",
          "description": "The name of the repository"
        },
        "version": {
          "type": "string",
          "description": "The version of the Helm chart."
        },
        "advancedConfiguration": {
          "$ref": "#/definitions/AkriConnectorTemplateHelmAdvancedConfiguration",
          "description": "Advanced configuration for the Helm chart.\nInstall, upgrade, and uninstall options for the helm chart such as atomic, wait, timeout, `wait_for_jobs`, and `disable_hooks`."
        },
        "values": {
          "type": "object",
          "description": "A map of values to pass to the helm chart.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "releaseName",
        "repositoryName",
        "version"
      ]
    },
    "AkriConnectorTemplateHelmContainerRegistry": {
      "type": "object",
      "description": "AkriConnectorTemplateHelmContainerRegistry properties.",
      "properties": {
        "containerRegistrySettings": {
          "$ref": "#/definitions/AkriConnectorTemplateHelmContainerRegistrySettings",
          "description": "The registry settings for the container registry."
        }
      },
      "required": [
        "containerRegistrySettings"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AkriConnectorTemplateHelmRegistrySettings"
        }
      ],
      "x-ms-discriminator-value": "ContainerRegistry"
    },
    "AkriConnectorTemplateHelmContainerRegistrySettings": {
      "type": "object",
      "description": "AkriConnectorTemplateHelmContainerRegistrySettings properties.",
      "properties": {
        "registry": {
          "type": "string",
          "description": "The registry to use for the Helm chart."
        },
        "authSecretRef": {
          "$ref": "#/definitions/AkriConnectorTemplateHelmAuthSecretRef",
          "description": "Optional reference to a secret in the same namespace to use for pulling the Helm chart."
        }
      },
      "required": [
        "registry"
      ]
    },
    "AkriConnectorTemplateHelmDeleteConfiguration": {
      "type": "object",
      "description": "AkriConnectorTemplateHelmDeleteConfiguration properties.",
      "properties": {
        "timeout": {
          "type": "integer",
          "format": "int32",
          "description": "Time to wait for any individual Kubernetes operation (like `Jobs` for hooks)."
        },
        "waitForJobs": {
          "type": "boolean",
          "description": "If set, the operation will wait for jobs to complete before marking the release as successful."
        },
        "atomic": {
          "type": "boolean",
          "description": "If set, the operation will be atomic. If the operation fails, all changes will be rolled back."
        },
        "disableHooks": {
          "type": "boolean",
          "description": "Disable pre/post upgrade hooks for the operation."
        },
        "wait": {
          "type": "boolean",
          "description": "If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful."
        }
      }
    },
    "AkriConnectorTemplateHelmInstallConfiguration": {
      "type": "object",
      "description": "AkriConnectorTemplateHelmInstallConfiguration properties.",
      "properties": {
        "timeout": {
          "type": "integer",
          "format": "int32",
          "description": "Time to wait for any individual Kubernetes operation (like `Jobs` for hooks)."
        },
        "waitForJobs": {
          "type": "boolean",
          "description": "If set, the operation will wait for jobs to complete before marking the release as successful."
        },
        "atomic": {
          "type": "boolean",
          "description": "If set, the operation will be atomic. If the operation fails, all changes will be rolled back."
        },
        "disableHooks": {
          "type": "boolean",
          "description": "Disable pre/post upgrade hooks for the operation."
        },
        "wait": {
          "type": "boolean",
          "description": "If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful."
        }
      }
    },
    "AkriConnectorTemplateHelmRegistryEndpointRef": {
      "type": "object",
      "description": "AkriConnectorTemplateHelmRegistryEndpointRef properties.",
      "properties": {
        "registryEndpointRef": {
          "type": "string",
          "description": "The name of the registry endpoint."
        }
      },
      "required": [
        "registryEndpointRef"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AkriConnectorTemplateHelmRegistrySettings"
        }
      ],
      "x-ms-discriminator-value": "RegistryEndpointRef"
    },
    "AkriConnectorTemplateHelmRegistrySettings": {
      "type": "object",
      "description": "AkriConnectorTemplateHelmRegistrySettings properties.",
      "properties": {
        "registrySettingsType": {
          "$ref": "#/definitions/AkriConnectorTemplateHelmRegistrySettingsType"
        }
      },
      "discriminator": "registrySettingsType",
      "required": [
        "registrySettingsType"
      ]
    },
    "AkriConnectorTemplateHelmRegistrySettingsType": {
      "type": "string",
      "description": "AkriConnectorTemplateHelmRegistrySettingsType values.",
      "enum": [
        "RegistryEndpointRef",
        "ContainerRegistry"
      ],
      "x-ms-enum": {
        "name": "AkriConnectorTemplateHelmRegistrySettingsType",
        "modelAsString": true,
        "values": [
          {
            "name": "RegistryEndpointRef",
            "value": "RegistryEndpointRef",
            "description": "A Registry Endpoint reference."
          },
          {
            "name": "ContainerRegistry",
            "value": "ContainerRegistry",
            "description": "A Container Registry reference."
          }
        ]
      }
    },
    "AkriConnectorTemplateHelmUpgradeConfiguration": {
      "type": "object",
      "description": "AkriConnectorTemplateHelmUpgradeConfiguration properties.",
      "properties": {
        "timeout": {
          "type": "integer",
          "format": "int32",
          "description": "Time to wait for any individual Kubernetes operation (like `Jobs` for hooks)."
        },
        "waitForJobs": {
          "type": "boolean",
          "description": "If set, the operation will wait for jobs to complete before marking the release as successful."
        },
        "atomic": {
          "type": "boolean",
          "description": "If set, the operation will be atomic. If the operation fails, all changes will be rolled back."
        },
        "disableHooks": {
          "type": "boolean",
          "description": "Disable pre/post upgrade hooks for the operation."
        },
        "wait": {
          "type": "boolean",
          "description": "If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful."
        }
      }
    },
    "AkriConnectorTemplateManagedConfiguration": {
      "type": "object",
      "description": "AkriConnectorTemplateManagedConfiguration properties.",
      "properties": {
        "managedConfigurationSettings": {
          "$ref": "#/definitions/AkriConnectorTemplateManagedConfigurationSettings",
          "description": "The managed configuration settings."
        }
      },
      "required": [
        "managedConfigurationSettings"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AkriConnectorTemplateRuntimeConfiguration"
        }
      ],
      "x-ms-discriminator-value": "ManagedConfiguration"
    },
    "AkriConnectorTemplateManagedConfigurationSettings": {
      "type": "object",
      "description": "AkriConnectorTemplateManagedConfiguration properties.",
      "properties": {
        "managedConfigurationType": {
          "$ref": "#/definitions/AkriConnectorTemplateManagedConfigurationType",
          "description": "The type of the managed configuration."
        },
        "allocation": {
          "$ref": "#/definitions/AkriConnectorTemplateAllocation",
          "description": "Allocation settings for the managed configuration."
        },
        "persistentVolumeClaims": {
          "type": "array",
          "description": "The persistent volume claims for the managed configuration.",
          "items": {
            "$ref": "#/definitions/AkriConnectorTemplatePersistentVolumeClaim"
          },
          "x-ms-identifiers": [
            "claimName"
          ]
        },
        "additionalConfiguration": {
          "type": "object",
          "description": "Additional configuration for the image of the managed configuration.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "persistentVolumeClaimTemplates": {
          "type": "array",
          "description": "The persistent volume claim templates for the managed configuration.\nSee https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json.",
          "items": {
            "type": "object",
            "additionalProperties": {}
          },
          "x-ms-identifiers": []
        },
        "secrets": {
          "type": "array",
          "description": "Connector secrets that will be mounted onto all connector instances.",
          "items": {
            "$ref": "#/definitions/AkriConnectorsSecret"
          },
          "x-ms-identifiers": [
            "secretAlias"
          ]
        },
        "trustSettings": {
          "$ref": "#/definitions/AkriConnectorTemplateTrustList",
          "description": "Trust list for the connector. This is used to specify the certificates that all connector instances should trust."
        }
      },
      "discriminator": "managedConfigurationType",
      "required": [
        "managedConfigurationType"
      ]
    },
    "AkriConnectorTemplateManagedConfigurationType": {
      "type": "string",
      "description": "Managed configuration types.",
      "enum": [
        "ImageConfiguration",
        "StatefulSetConfiguration"
      ],
      "x-ms-enum": {
        "name": "AkriConnectorTemplateManagedConfigurationType",
        "modelAsString": true,
        "values": [
          {
            "name": "ImageConfiguration",
            "value": "ImageConfiguration",
            "description": "Image Configuration Type."
          },
          {
            "name": "StatefulSetConfiguration",
            "value": "StatefulSetConfiguration",
            "description": "StatefulSet Configuration Type."
          }
        ]
      }
    },
    "AkriConnectorTemplatePersistentVolumeClaim": {
      "type": "object",
      "description": "AkriConnectorTemplatePersistentVolumeClaim properties.",
      "properties": {
        "claimName": {
          "type": "string",
          "description": "The name of the persistent volume claim."
        },
        "mountPath": {
          "type": "string",
          "description": "The mount path for the persistent volume claim."
        }
      },
      "required": [
        "claimName",
        "mountPath"
      ]
    },
    "AkriConnectorTemplateProperties": {
      "type": "object",
      "description": "AkriConnectorTemplate properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "aioMetadata": {
          "$ref": "#/definitions/AkriConnectorTemplateAioMetadata",
          "description": "Metadata about AIO."
        },
        "runtimeConfiguration": {
          "$ref": "#/definitions/AkriConnectorTemplateRuntimeConfiguration",
          "description": "The runtime configuration for the Connector template."
        },
        "diagnostics": {
          "$ref": "#/definitions/AkriConnectorTemplateDiagnostics",
          "description": "Diagnostics settings for the Connector template."
        },
        "deviceInboundEndpointTypes": {
          "type": "array",
          "description": "Device inbound endpoint types.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/AkriConnectorTemplateDeviceInboundEndpointType"
          },
          "x-ms-identifiers": [
            "endpointType",
            "version"
          ]
        },
        "mqttConnectionConfiguration": {
          "$ref": "#/definitions/AkriConnectorsMqttConnectionConfiguration",
          "description": "Mqtt connection configuration settings."
        }
      },
      "required": [
        "runtimeConfiguration",
        "deviceInboundEndpointTypes"
      ]
    },
    "AkriConnectorTemplateResource": {
      "type": "object",
      "description": "AkriConnectorTemplate resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AkriConnectorTemplateProperties",
          "description": "The resource-specific properties for this resource."
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AkriConnectorTemplateResourceListResult": {
      "type": "object",
      "description": "The response of a AkriConnectorTemplateResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AkriConnectorTemplateResource items on this page",
          "items": {
            "$ref": "#/definitions/AkriConnectorTemplateResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AkriConnectorTemplateRuntimeConfiguration": {
      "type": "object",
      "description": "AkriConnectorTemplateRuntimeConfiguration properties.",
      "properties": {
        "runtimeConfigurationType": {
          "$ref": "#/definitions/AkriConnectorTemplateRuntimeConfigurationType",
          "description": "Runtime configuration type for the Connector template."
        }
      },
      "discriminator": "runtimeConfigurationType",
      "required": [
        "runtimeConfigurationType"
      ]
    },
    "AkriConnectorTemplateRuntimeConfigurationType": {
      "type": "string",
      "description": "Runtime configuration types.",
      "enum": [
        "HelmConfiguration",
        "ManagedConfiguration"
      ],
      "x-ms-enum": {
        "name": "AkriConnectorTemplateRuntimeConfigurationType",
        "modelAsString": true,
        "values": [
          {
            "name": "HelmConfiguration",
            "value": "HelmConfiguration",
            "description": "Helm Configuration Type."
          },
          {
            "name": "ManagedConfiguration",
            "value": "ManagedConfiguration",
            "description": "Managed Configuration Type."
          }
        ]
      }
    },
    "AkriConnectorTemplateRuntimeImageConfiguration": {
      "type": "object",
      "description": "AkriConnectorTemplateRuntimeImageConfiguration properties.",
      "properties": {
        "imageConfigurationSettings": {
          "$ref": "#/definitions/AkriConnectorTemplateRuntimeImageConfigurationSettings",
          "description": "The image configuration settings."
        }
      },
      "required": [
        "imageConfigurationSettings"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AkriConnectorTemplateManagedConfigurationSettings"
        }
      ],
      "x-ms-discriminator-value": "ImageConfiguration"
    },
    "AkriConnectorTemplateRuntimeImageConfigurationSettings": {
      "type": "object",
      "description": "AkriConnectorTemplateRuntimeImageConfiguration properties.",
      "properties": {
        "imageName": {
          "type": "string",
          "description": "The image name without any registry reference, tag or digest."
        },
        "imagePullPolicy": {
          "$ref": "#/definitions/AkriConnectorsImagePullPolicy",
          "description": "The pull policy of the image."
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "description": "The number of replicas to be set up."
        },
        "registrySettings": {
          "$ref": "#/definitions/AkriConnectorsRegistrySettings",
          "description": "The registry settings for the image. You can omit this field if using the default docker hub repository or using a local image."
        },
        "tagDigestSettings": {
          "$ref": "#/definitions/AkriConnectorsTagDigestSettings",
          "description": "Optional image tag or digest. If not specified, the default tag is `latest`."
        }
      },
      "required": [
        "imageName"
      ]
    },
    "AkriConnectorTemplateRuntimeStatefulSetConfiguration": {
      "type": "object",
      "description": "AkriConnectorTemplateRuntimeStatefulSetConfiguration properties.",
      "properties": {
        "statefulSetConfigurationSettings": {
          "type": "object",
          "description": "The stateful set configuration settings. This corresponds to the Kubernetes StatefulSet resource.\nSee https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json#/components/schemas/io.k8s.api.apps.v1.StatefulSetSpec",
          "additionalProperties": {}
        }
      },
      "required": [
        "statefulSetConfigurationSettings"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AkriConnectorTemplateManagedConfigurationSettings"
        }
      ],
      "x-ms-discriminator-value": "StatefulSetConfiguration"
    },
    "AkriConnectorTemplateTrustList": {
      "type": "object",
      "description": "AkriConnectorTemplateTrustList properties.",
      "properties": {
        "trustListSecretRef": {
          "type": "string",
          "description": "The secret reference for certificates to trust."
        }
      },
      "required": [
        "trustListSecretRef"
      ]
    },
    "AkriConnectorsContainerRegistry": {
      "type": "object",
      "description": "AkriConnectorsContainerRegistry properties.",
      "properties": {
        "containerRegistrySettings": {
          "$ref": "#/definitions/AkriConnectorsContainerRegistrySettings",
          "description": "The registry settings for the container registry."
        }
      },
      "required": [
        "containerRegistrySettings"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AkriConnectorsRegistrySettings"
        }
      ],
      "x-ms-discriminator-value": "ContainerRegistry"
    },
    "AkriConnectorsContainerRegistrySettings": {
      "type": "object",
      "description": "AkriConnectorsContainerRegistry properties.",
      "properties": {
        "registry": {
          "type": "string",
          "description": "The container registry to use for the artifact."
        },
        "imagePullSecrets": {
          "type": "array",
          "description": "Optional list of references to secrets in the same namespace to use for pulling the connector image.",
          "items": {
            "$ref": "#/definitions/AkriConnectorsImagePullSecret"
          },
          "x-ms-identifiers": [
            "secretRef"
          ]
        }
      },
      "required": [
        "registry"
      ]
    },
    "AkriConnectorsDiagnosticsLogs": {
      "type": "object",
      "description": "AkriConnectorsDiagnostic Log properties.",
      "properties": {
        "level": {
          "type": "string",
          "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
          "default": "info"
        }
      }
    },
    "AkriConnectorsDigest": {
      "type": "object",
      "description": "AkriConnectorsDigest properties.",
      "properties": {
        "digest": {
          "type": "string",
          "description": "The digest of the image."
        }
      },
      "required": [
        "digest"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AkriConnectorsTagDigestSettings"
        }
      ],
      "x-ms-discriminator-value": "Digest"
    },
    "AkriConnectorsImagePullPolicy": {
      "type": "string",
      "description": "Image pull policy.",
      "enum": [
        "Always",
        "IfNotPresent",
        "Never"
      ],
      "x-ms-enum": {
        "name": "AkriConnectorsImagePullPolicy",
        "modelAsString": true,
        "values": [
          {
            "name": "Always",
            "value": "Always",
            "description": "Always pull the image."
          },
          {
            "name": "IfNotPresent",
            "value": "IfNotPresent",
            "description": "IfNotPresent pull the image."
          },
          {
            "name": "Never",
            "value": "Never",
            "description": "Never pull the image."
          }
        ]
      }
    },
    "AkriConnectorsImagePullSecret": {
      "type": "object",
      "description": "AkriConnectorsImagePullSecret properties.",
      "properties": {
        "secretRef": {
          "type": "string",
          "description": "The name of the image pull secret."
        }
      },
      "required": [
        "secretRef"
      ]
    },
    "AkriConnectorsMqttAuthentication": {
      "type": "object",
      "description": "AkriConnectorsMqttAuthentication properties.",
      "properties": {
        "method": {
          "$ref": "#/definitions/AkriConnectorsMqttAuthenticationMethod",
          "description": "The authentication method for the MQTT connection."
        }
      },
      "discriminator": "method",
      "required": [
        "method"
      ]
    },
    "AkriConnectorsMqttAuthenticationMethod": {
      "type": "string",
      "description": "AkriConnectorsMqttAuthenticationMethod properties.",
      "enum": [
        "ServiceAccountToken"
      ],
      "x-ms-enum": {
        "name": "AkriConnectorsMqttAuthenticationMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "ServiceAccountToken",
            "value": "ServiceAccountToken",
            "description": "Service Account Token authentication."
          }
        ]
      }
    },
    "AkriConnectorsMqttConnectionConfiguration": {
      "type": "object",
      "description": "AkriConnectorsMqttConnectionConfiguration properties.",
      "properties": {
        "authentication": {
          "$ref": "#/definitions/AkriConnectorsMqttAuthentication",
          "description": "Authentication properties."
        },
        "host": {
          "type": "string",
          "description": "Host of the Broker in the form of <hostname>:<port>."
        },
        "protocol": {
          "$ref": "#/definitions/AkriConnectorsMqttProtocolType",
          "description": "The protocol to use for the connection. Currently only `mqtt` is supported."
        },
        "keepAliveSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "KeepAlive for connection in seconds.",
          "minimum": 0
        },
        "maxInflightMessages": {
          "type": "integer",
          "format": "int32",
          "description": "The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.",
          "minimum": 0
        },
        "sessionExpirySeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Session expiry in seconds.",
          "minimum": 0
        },
        "tls": {
          "$ref": "#/definitions/TlsProperties",
          "description": "TLS configuration."
        }
      }
    },
    "AkriConnectorsMqttProtocolType": {
      "type": "string",
      "description": "Mqtt protocol types.",
      "enum": [
        "Mqtt"
      ],
      "x-ms-enum": {
        "name": "AkriConnectorsMqttProtocolType",
        "modelAsString": true,
        "values": [
          {
            "name": "Mqtt",
            "value": "Mqtt",
            "description": "Mqtt protocol."
          }
        ]
      }
    },
    "AkriConnectorsRegistryEndpointRef": {
      "type": "object",
      "description": "AkriConnectorsRegistryEndpointRef properties.",
      "properties": {
        "registryEndpointRef": {
          "type": "string",
          "description": "The name of the registry endpoint."
        }
      },
      "required": [
        "registryEndpointRef"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AkriConnectorsRegistrySettings"
        }
      ],
      "x-ms-discriminator-value": "RegistryEndpointRef"
    },
    "AkriConnectorsRegistrySettings": {
      "type": "object",
      "description": "AkriConnectorsRegistrySettings properties.",
      "properties": {
        "registrySettingsType": {
          "$ref": "#/definitions/AkriConnectorsRegistrySettingsType"
        }
      },
      "discriminator": "registrySettingsType",
      "required": [
        "registrySettingsType"
      ]
    },
    "AkriConnectorsRegistrySettingsType": {
      "type": "string",
      "description": "AkriConnectorsRegistrySettings properties.",
      "enum": [
        "RegistryEndpointRef",
        "ContainerRegistry"
      ],
      "x-ms-enum": {
        "name": "AkriConnectorsRegistrySettingsType",
        "modelAsString": true,
        "values": [
          {
            "name": "RegistryEndpointRef",
            "value": "RegistryEndpointRef",
            "description": "A Registry Endpoint reference."
          },
          {
            "name": "ContainerRegistry",
            "value": "ContainerRegistry",
            "description": "A Container Registry reference."
          }
        ]
      }
    },
    "AkriConnectorsSecret": {
      "type": "object",
      "description": "AkriConnectorsSecret properties.",
      "properties": {
        "secretKey": {
          "type": "string",
          "description": "The key in the secret to be mounted."
        },
        "secretAlias": {
          "type": "string",
          "description": "The application-defined alias for the secret."
        },
        "secretRef": {
          "type": "string",
          "description": "The name of the secret to be mounted."
        }
      },
      "required": [
        "secretKey",
        "secretAlias",
        "secretRef"
      ]
    },
    "AkriConnectorsServiceAccountAuthentication": {
      "type": "object",
      "description": "AkriConnectorsServiceAccountAuthentication properties.",
      "properties": {
        "serviceAccountTokenSettings": {
          "$ref": "#/definitions/AkriConnectorsServiceAccountTokenSettings",
          "description": "The service account token for the MQTT connection."
        }
      },
      "required": [
        "serviceAccountTokenSettings"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AkriConnectorsMqttAuthentication"
        }
      ],
      "x-ms-discriminator-value": "ServiceAccountToken"
    },
    "AkriConnectorsServiceAccountTokenSettings": {
      "type": "object",
      "description": "AkriConnectorsServiceAccountTokenSettings properties.",
      "properties": {
        "audience": {
          "type": "string",
          "description": "The audience for the service account token."
        }
      },
      "required": [
        "audience"
      ]
    },
    "AkriConnectorsTag": {
      "type": "object",
      "description": "AkriConnectorsTag properties.",
      "properties": {
        "tag": {
          "type": "string",
          "description": "The tag of the image."
        }
      },
      "required": [
        "tag"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AkriConnectorsTagDigestSettings"
        }
      ],
      "x-ms-discriminator-value": "Tag"
    },
    "AkriConnectorsTagDigestSettings": {
      "type": "object",
      "description": "AkriConnectorsTagDigestSettings properties.",
      "properties": {
        "tagDigestType": {
          "$ref": "#/definitions/AkriConnectorsTagDigestType",
          "description": "The tag or digest type."
        }
      },
      "discriminator": "tagDigestType",
      "required": [
        "tagDigestType"
      ]
    },
    "AkriConnectorsTagDigestType": {
      "type": "string",
      "description": "AkriConnectorsTagDigestType values.",
      "enum": [
        "Tag",
        "Digest"
      ],
      "x-ms-enum": {
        "name": "AkriConnectorsTagDigestType",
        "modelAsString": true,
        "values": [
          {
            "name": "Tag",
            "value": "Tag",
            "description": "Indicates that a tag should be specified."
          },
          {
            "name": "Digest",
            "value": "Digest",
            "description": "Indicates that a digest should be specified."
          }
        ]
      }
    },
    "AnonymousMethod": {
      "type": "string",
      "description": "x509 Certificate Method",
      "enum": [
        "Anonymous"
      ],
      "x-ms-enum": {
        "name": "AnonymousMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "Anonymous",
            "value": "Anonymous",
            "description": "Anonymous Option"
          }
        ]
      }
    },
    "AuthorizationConfig": {
      "type": "object",
      "description": "Broker AuthorizationConfig properties",
      "properties": {
        "cache": {
          "type": "string",
          "description": "Enable caching of the authorization rules.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        },
        "rules": {
          "type": "array",
          "description": "The authorization rules to follow. If no rule is set, but Authorization Resource is used that would mean DenyAll.",
          "items": {
            "$ref": "#/definitions/AuthorizationRule"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "AuthorizationRule": {
      "type": "object",
      "description": "AuthorizationConfig Rule Properties",
      "properties": {
        "brokerResources": {
          "type": "array",
          "description": "Give access to Broker methods and topics.",
          "items": {
            "$ref": "#/definitions/BrokerResourceRule"
          },
          "x-ms-identifiers": []
        },
        "principals": {
          "$ref": "#/definitions/PrincipalDefinition",
          "description": "Give access to clients based on the following properties."
        },
        "stateStoreResources": {
          "type": "array",
          "description": "Give access to state store resources.",
          "items": {
            "$ref": "#/definitions/StateStoreResourceRule"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "brokerResources",
        "principals"
      ]
    },
    "AzureDeviceRegistryNamespaceID": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.DeviceRegistry/namespaces"
          }
        ]
      }
    },
    "AzureDeviceRegistryNamespaceRef": {
      "type": "object",
      "description": "Azure Device Registry Namespace reference.",
      "properties": {
        "resourceId": {
          "$ref": "#/definitions/AzureDeviceRegistryNamespaceID",
          "description": "The resource ID of the Azure Device Registry Namespace."
        }
      },
      "required": [
        "resourceId"
      ]
    },
    "BackendChain": {
      "type": "object",
      "description": "Desired properties of the backend instances of the broker",
      "properties": {
        "partitions": {
          "type": "integer",
          "format": "int32",
          "description": "The desired number of physical backend partitions.",
          "minimum": 1,
          "maximum": 16
        },
        "redundancyFactor": {
          "type": "integer",
          "format": "int32",
          "description": "The desired numbers of backend replicas (pods) in a physical partition.",
          "minimum": 1,
          "maximum": 5
        },
        "workers": {
          "type": "integer",
          "format": "int32",
          "description": "Number of logical backend workers per replica (pod).",
          "default": 1,
          "minimum": 1,
          "maximum": 16
        }
      },
      "required": [
        "partitions",
        "redundancyFactor"
      ]
    },
    "BatchingConfiguration": {
      "type": "object",
      "description": "Batching configuration",
      "properties": {
        "latencySeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Batching latency in seconds.",
          "default": 60,
          "minimum": 0,
          "maximum": 65535
        },
        "maxMessages": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of messages in a batch.",
          "default": 100000,
          "minimum": 0,
          "maximum": 4294967295
        }
      }
    },
    "BrokerAuthenticationMethod": {
      "type": "string",
      "description": "Broker Authentication Mode",
      "enum": [
        "Custom",
        "ServiceAccountToken",
        "X509"
      ],
      "x-ms-enum": {
        "name": "BrokerAuthenticationMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "Custom",
            "value": "Custom",
            "description": "Custom authentication configuration."
          },
          {
            "name": "ServiceAccountToken",
            "value": "ServiceAccountToken",
            "description": "ServiceAccountToken authentication configuration."
          },
          {
            "name": "X509",
            "value": "X509",
            "description": "X.509 authentication configuration."
          }
        ]
      }
    },
    "BrokerAuthenticationProperties": {
      "type": "object",
      "description": "BrokerAuthentication Resource properties",
      "properties": {
        "authenticationMethods": {
          "type": "array",
          "description": "Defines a set of Broker authentication methods to be used on `BrokerListeners`. For each array element one authenticator type supported.",
          "items": {
            "$ref": "#/definitions/BrokerAuthenticatorMethods"
          },
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      },
      "required": [
        "authenticationMethods"
      ]
    },
    "BrokerAuthenticationResource": {
      "type": "object",
      "description": "Instance broker authentication resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BrokerAuthenticationProperties",
          "description": "The resource-specific properties for this resource."
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BrokerAuthenticationResourceListResult": {
      "type": "object",
      "description": "The response of a BrokerAuthenticationResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BrokerAuthenticationResource items on this page",
          "items": {
            "$ref": "#/definitions/BrokerAuthenticationResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BrokerAuthenticatorCustomAuth": {
      "type": "object",
      "description": "Custom Authentication properties",
      "properties": {
        "x509": {
          "$ref": "#/definitions/X509ManualCertificate",
          "description": "X509 Custom Auth type details."
        }
      },
      "required": [
        "x509"
      ]
    },
    "BrokerAuthenticatorMethodCustom": {
      "type": "object",
      "description": "Custom method for BrokerAuthentication",
      "properties": {
        "auth": {
          "$ref": "#/definitions/BrokerAuthenticatorCustomAuth",
          "description": "Optional authentication needed for authenticating with the custom authentication server."
        },
        "caCertConfigMap": {
          "type": "string",
          "description": "Optional CA certificate for validating the custom authentication server's certificate."
        },
        "endpoint": {
          "type": "string",
          "format": "uri",
          "description": "Endpoint of the custom authentication server. Must be an HTTPS endpoint.",
          "pattern": "^https://.*$"
        },
        "headers": {
          "type": "object",
          "description": "Additional HTTP headers to pass to the custom authentication server.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "endpoint"
      ]
    },
    "BrokerAuthenticatorMethodSat": {
      "type": "object",
      "description": "Service Account Token for BrokerAuthentication",
      "properties": {
        "audiences": {
          "type": "array",
          "description": "List of allowed audience.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "audiences"
      ]
    },
    "BrokerAuthenticatorMethodX509": {
      "type": "object",
      "description": "X509 for BrokerAuthentication.",
      "properties": {
        "authorizationAttributes": {
          "type": "object",
          "description": "X509 authorization attributes properties.",
          "additionalProperties": {
            "$ref": "#/definitions/BrokerAuthenticatorMethodX509Attributes"
          }
        },
        "trustedClientCaCert": {
          "type": "string",
          "description": "Name of the trusted client ca cert resource.",
          "default": "client-ca"
        },
        "additionalValidation": {
          "$ref": "#/definitions/BrokerAuthenticatorValidationMethods",
          "description": "X509 authentication attributes properties."
        }
      }
    },
    "BrokerAuthenticatorMethodX509Attributes": {
      "type": "object",
      "description": "BrokerAuthenticatorMethodX509Attributes properties.",
      "properties": {
        "attributes": {
          "type": "object",
          "description": "Attributes object.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "subject": {
          "type": "string",
          "description": "Subject of the X509 attribute."
        }
      },
      "required": [
        "attributes",
        "subject"
      ]
    },
    "BrokerAuthenticatorMethods": {
      "type": "object",
      "description": "Set of broker authentication policies. Only one method is supported for each entry.",
      "properties": {
        "method": {
          "$ref": "#/definitions/BrokerAuthenticationMethod",
          "description": "Custom authentication configuration."
        },
        "customSettings": {
          "$ref": "#/definitions/BrokerAuthenticatorMethodCustom",
          "description": "Custom authentication configuration."
        },
        "serviceAccountTokenSettings": {
          "$ref": "#/definitions/BrokerAuthenticatorMethodSat",
          "description": "ServiceAccountToken authentication configuration."
        },
        "x509Settings": {
          "$ref": "#/definitions/BrokerAuthenticatorMethodX509",
          "description": "X.509 authentication configuration."
        }
      },
      "required": [
        "method"
      ]
    },
    "BrokerAuthenticatorValidationMethods": {
      "type": "string",
      "description": "X509 authentication validation methods.",
      "enum": [
        "None",
        "AzureDeviceRegistry"
      ],
      "x-ms-enum": {
        "name": "BrokerAuthenticatorValidationMethods",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "No additional validation is performed"
          },
          {
            "name": "AzureDeviceRegistry",
            "value": "AzureDeviceRegistry",
            "description": "Additional validation is performed using the Azure Device Registry."
          }
        ]
      }
    },
    "BrokerAuthorizationProperties": {
      "type": "object",
      "description": "BrokerAuthorization Resource properties",
      "properties": {
        "authorizationPolicies": {
          "$ref": "#/definitions/AuthorizationConfig",
          "description": "The list of authorization policies supported by the Authorization Resource."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      },
      "required": [
        "authorizationPolicies"
      ]
    },
    "BrokerAuthorizationResource": {
      "type": "object",
      "description": "Instance broker authorizations resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BrokerAuthorizationProperties",
          "description": "The resource-specific properties for this resource."
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BrokerAuthorizationResourceListResult": {
      "type": "object",
      "description": "The response of a BrokerAuthorizationResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BrokerAuthorizationResource items on this page",
          "items": {
            "$ref": "#/definitions/BrokerAuthorizationResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BrokerDiagnostics": {
      "type": "object",
      "description": "Broker Diagnostic Setting properties",
      "properties": {
        "logs": {
          "$ref": "#/definitions/DiagnosticsLogs",
          "description": "Diagnostic log settings for the resource."
        },
        "metrics": {
          "$ref": "#/definitions/Metrics",
          "description": "The metrics settings for the resource."
        },
        "selfCheck": {
          "$ref": "#/definitions/SelfCheck",
          "description": "The self check properties."
        },
        "traces": {
          "$ref": "#/definitions/Traces",
          "description": "The trace properties."
        }
      }
    },
    "BrokerListenerProperties": {
      "type": "object",
      "description": "Defines a Broker listener. A listener is a collection of ports on which the broker accepts connections from clients.",
      "properties": {
        "serviceName": {
          "type": "string",
          "description": "Kubernetes Service name of this listener."
        },
        "ports": {
          "type": "array",
          "description": "Ports on which this listener accepts client connections.",
          "items": {
            "$ref": "#/definitions/ListenerPort"
          },
          "x-ms-identifiers": [
            "port"
          ]
        },
        "serviceType": {
          "type": "string",
          "description": "Kubernetes Service type of this listener.",
          "default": "ClusterIp",
          "enum": [
            "ClusterIp",
            "LoadBalancer",
            "NodePort"
          ],
          "x-ms-enum": {
            "name": "ServiceType",
            "modelAsString": true,
            "values": [
              {
                "name": "ClusterIp",
                "value": "ClusterIp",
                "description": "Cluster IP Service."
              },
              {
                "name": "LoadBalancer",
                "value": "LoadBalancer",
                "description": "Load Balancer Service."
              },
              {
                "name": "NodePort",
                "value": "NodePort",
                "description": "Node Port Service."
              }
            ]
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      },
      "required": [
        "ports"
      ]
    },
    "BrokerListenerResource": {
      "type": "object",
      "description": "Instance broker resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BrokerListenerProperties",
          "description": "The resource-specific properties for this resource."
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BrokerListenerResourceListResult": {
      "type": "object",
      "description": "The response of a BrokerListenerResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BrokerListenerResource items on this page",
          "items": {
            "$ref": "#/definitions/BrokerListenerResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BrokerMemoryProfile": {
      "type": "string",
      "description": "The memory profile settings of the Broker",
      "enum": [
        "Tiny",
        "Low",
        "Medium",
        "High"
      ],
      "x-ms-enum": {
        "name": "BrokerMemoryProfile",
        "modelAsString": true,
        "values": [
          {
            "name": "Tiny",
            "value": "Tiny",
            "description": "Tiny memory profile."
          },
          {
            "name": "Low",
            "value": "Low",
            "description": "Low memory profile."
          },
          {
            "name": "Medium",
            "value": "Medium",
            "description": "Medium memory profile."
          },
          {
            "name": "High",
            "value": "High",
            "description": "High memory profile."
          }
        ]
      }
    },
    "BrokerPersistence": {
      "type": "object",
      "description": "Disk persistence configuration.\n\nWhen persistence is enabled, certain items (non-performance-critical data) selected for persistence will reside only on disk. Below are the affected items: \n\n- Retained messages will be stored on disk only. \n- WILL messages will be stored on disk only. \n- DSS key/value pairs will be stored on disk only, except for performance-critical items like timed locks, which remain in both disk and memory for improved performance.\n\nOptional. Everything is in-memory if not set. \nNote: if configured, all MQTT session states are written to disk.",
      "properties": {
        "dynamicSettings": {
          "$ref": "#/definitions/BrokerPersistenceDynamicSettings",
          "description": "Client sets the specified user property key/value in the CONNECT/SUBSCRIBE/PUBLISH. \nOptionally, if the customer specifies a configurable user property, it will work to enable persistence dynamically. The default user property key is 'aio-persistence' and value 'true'."
        },
        "maxSize": {
          "type": "string",
          "description": "The max size of the message buffer on disk. If a PVC template is specified using persistentVolumeClaimSpec Then this size is used as the request and limit sizes of that template. If a PVC template isn't specified Then local-path provisioner is requested with this size limit. Required.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "persistentVolumeClaimSpec": {
          "$ref": "#/definitions/VolumeClaimSpec",
          "description": "Use the specified persistent volume claim template to mount a persistent volume. Same object as in diskBackedMessageBuffer, but with a limitation that access modes field must be set to `ReadWriteOncePod`.\n\nIf unset, a default PVC with default properties will be used. Among other things this PVC will use the cluster default storage class, which may or may not be using a local path provisioner. User is opting in to sub-optimal behavior if they leave this unset or set it without the storage class field, and their cluster default is not a local path class.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "retain": {
          "$ref": "#/definitions/BrokerRetainMessagesPolicy",
          "description": "Controls which topic's retained messages should be persisted to disk."
        },
        "stateStore": {
          "$ref": "#/definitions/BrokerStateStorePolicy",
          "description": "Controls which keys should be persisted to disk for the state store."
        },
        "subscriberQueue": {
          "$ref": "#/definitions/BrokerSubscriberQueuePolicy",
          "description": "Controls which subscriber message queues should be persisted to disk. Important: to facilitate reconnection, session state metadata are ALWAYS written to disk if any persistence setting is specified, even if this section isn't set."
        },
        "encryption": {
          "$ref": "#/definitions/BrokerPersistenceEncryption",
          "description": "Controls settings related to encryption of the persistence database. Optional, defaults to enabling encryption."
        }
      },
      "required": [
        "maxSize"
      ]
    },
    "BrokerPersistenceDynamicSettings": {
      "type": "object",
      "description": "Dynamic settings of the persistence.",
      "properties": {
        "userPropertyKey": {
          "type": "string",
          "description": "The user property key to enable persistence."
        },
        "userPropertyValue": {
          "type": "string",
          "description": "The user property value to enable persistence."
        }
      },
      "required": [
        "userPropertyKey",
        "userPropertyValue"
      ]
    },
    "BrokerPersistenceEncryption": {
      "type": "object",
      "description": "Broker Persistence Encryption properties.",
      "properties": {
        "mode": {
          "$ref": "#/definitions/OperationalMode",
          "description": "Determines if encryption is enabled."
        }
      },
      "required": [
        "mode"
      ]
    },
    "BrokerPersistencePolicyMode": {
      "type": "string",
      "description": "Broker Persistence Policy Mode values.",
      "enum": [
        "All",
        "None",
        "Custom"
      ],
      "x-ms-enum": {
        "name": "BrokerPersistencePolicyMode",
        "modelAsString": true,
        "values": [
          {
            "name": "All",
            "value": "All",
            "description": "Policy mode for All."
          },
          {
            "name": "None",
            "value": "None",
            "description": "Policy mode for None."
          },
          {
            "name": "Custom",
            "value": "Custom",
            "description": "Indicates that the policy is a custom policy."
          }
        ]
      }
    },
    "BrokerProperties": {
      "type": "object",
      "description": "Broker Resource properties",
      "properties": {
        "advanced": {
          "$ref": "#/definitions/AdvancedSettings",
          "description": "Advanced settings of Broker.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "cardinality": {
          "$ref": "#/definitions/Cardinality",
          "description": "The cardinality details of the broker.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "diagnostics": {
          "$ref": "#/definitions/BrokerDiagnostics",
          "description": "Spec defines the desired identities of Broker diagnostics settings."
        },
        "diskBackedMessageBuffer": {
          "$ref": "#/definitions/DiskBackedMessageBuffer",
          "description": "Settings of Disk Backed Message Buffer.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "generateResourceLimits": {
          "$ref": "#/definitions/GenerateResourceLimits",
          "description": "This setting controls whether Kubernetes CPU resource limits are requested. Increasing the number of replicas or workers proportionally increases the amount of CPU resources requested. If this setting is enabled and there are insufficient CPU resources, an error will be emitted.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "memoryProfile": {
          "type": "string",
          "description": "Memory profile of Broker.",
          "default": "Medium",
          "enum": [
            "Tiny",
            "Low",
            "Medium",
            "High"
          ],
          "x-ms-enum": {
            "name": "BrokerMemoryProfile",
            "modelAsString": true,
            "values": [
              {
                "name": "Tiny",
                "value": "Tiny",
                "description": "Tiny memory profile."
              },
              {
                "name": "Low",
                "value": "Low",
                "description": "Low memory profile."
              },
              {
                "name": "Medium",
                "value": "Medium",
                "description": "Medium memory profile."
              },
              {
                "name": "High",
                "value": "High",
                "description": "High memory profile."
              }
            ]
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "persistence": {
          "$ref": "#/definitions/BrokerPersistence",
          "description": "The persistence settings of the Broker."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      }
    },
    "BrokerProtocolType": {
      "type": "string",
      "description": "Broker Protocol types",
      "enum": [
        "Mqtt",
        "WebSockets"
      ],
      "x-ms-enum": {
        "name": "BrokerProtocolType",
        "modelAsString": true,
        "values": [
          {
            "name": "Mqtt",
            "value": "Mqtt",
            "description": "protocol broker"
          },
          {
            "name": "WebSockets",
            "value": "WebSockets",
            "description": "protocol websocket"
          }
        ]
      }
    },
    "BrokerResource": {
      "type": "object",
      "description": "Instance broker resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BrokerProperties",
          "description": "The resource-specific properties for this resource."
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BrokerResourceDefinitionMethods": {
      "type": "string",
      "description": "BrokerResourceDefinitionMethods methods allowed",
      "enum": [
        "Connect",
        "Publish",
        "Subscribe"
      ],
      "x-ms-enum": {
        "name": "BrokerResourceDefinitionMethods",
        "modelAsString": true,
        "values": [
          {
            "name": "Connect",
            "value": "Connect",
            "description": "Allowed Connecting to Broker"
          },
          {
            "name": "Publish",
            "value": "Publish",
            "description": "Allowed Publishing to Broker"
          },
          {
            "name": "Subscribe",
            "value": "Subscribe",
            "description": "Allowed Subscribing to Broker"
          }
        ]
      }
    },
    "BrokerResourceListResult": {
      "type": "object",
      "description": "The response of a BrokerResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BrokerResource items on this page",
          "items": {
            "$ref": "#/definitions/BrokerResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BrokerResourceRule": {
      "type": "object",
      "description": "Broker Resource Rule properties. This defines the objects that represent the actions or topics, such as - method.Connect, method.Publish, etc.",
      "properties": {
        "method": {
          "$ref": "#/definitions/BrokerResourceDefinitionMethods",
          "description": "Give access for a Broker method (i.e., Connect, Subscribe, or Publish)."
        },
        "clientIds": {
          "type": "array",
          "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection. This subfield may be set if the method is Connect.",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "topics": {
          "type": "array",
          "description": "A list of topics or topic patterns that match the topics that the clients can publish or subscribe to. This subfield is required if the method is Publish or Subscribe.",
          "default": [],
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "method"
      ]
    },
    "BrokerRetainMessagesCustomPolicy": {
      "type": "object",
      "description": "Custom Broker Retain Message Policy.",
      "properties": {
        "retainSettings": {
          "$ref": "#/definitions/BrokerRetainMessagesSettings",
          "description": "Settings for the policy."
        }
      },
      "required": [
        "retainSettings"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BrokerRetainMessagesPolicy"
        }
      ],
      "x-ms-discriminator-value": "Custom"
    },
    "BrokerRetainMessagesDynamic": {
      "type": "object",
      "description": "Dynamic settings of BrokerRetainMessagesCustomPolicy.",
      "properties": {
        "mode": {
          "$ref": "#/definitions/OperationalMode",
          "description": "Mode of the BrokerRetainMessagesCustomPolicy."
        }
      },
      "required": [
        "mode"
      ]
    },
    "BrokerRetainMessagesPolicy": {
      "type": "object",
      "description": "Broker Retain policy properties.",
      "properties": {
        "mode": {
          "$ref": "#/definitions/BrokerPersistencePolicyMode",
          "description": "'All' to persist all retain messages, 'None' to not persist any, 'Custom' to persist only the specified topics."
        }
      },
      "discriminator": "mode",
      "required": [
        "mode"
      ]
    },
    "BrokerRetainMessagesSettings": {
      "type": "object",
      "description": "Broker Retain Messages properties.",
      "properties": {
        "topics": {
          "type": "array",
          "description": "List of topics under which retained messages would be persisted to disk. Wildcards # and + supported.",
          "items": {
            "type": "string"
          }
        },
        "dynamic": {
          "$ref": "#/definitions/BrokerRetainMessagesDynamic",
          "description": "Controls if MQTT clients can request for disk persistence via `MQTTv5` user property. Works in addition to other groups (logical OR)."
        }
      }
    },
    "BrokerStateStoreCustomPolicy": {
      "type": "object",
      "description": "Broker State Store Custom Policy.",
      "properties": {
        "stateStoreSettings": {
          "$ref": "#/definitions/BrokerStateStorePolicySettings",
          "description": "Settings for the policy."
        }
      },
      "required": [
        "stateStoreSettings"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BrokerStateStorePolicy"
        }
      ],
      "x-ms-discriminator-value": "Custom"
    },
    "BrokerStateStoreDynamic": {
      "type": "object",
      "description": "Dynamic settings of BrokerStateStoreCustomPolicy.",
      "properties": {
        "mode": {
          "$ref": "#/definitions/OperationalMode",
          "description": "Mode of the BrokerStateStoreCustomPolicy."
        }
      },
      "required": [
        "mode"
      ]
    },
    "BrokerStateStoreKeyType": {
      "type": "string",
      "description": "Broker State Store Key Type properties.",
      "enum": [
        "Pattern",
        "String",
        "Binary"
      ],
      "x-ms-enum": {
        "name": "BrokerStateStoreKeyType",
        "modelAsString": true,
        "values": [
          {
            "name": "Pattern",
            "value": "Pattern",
            "description": "Used for glob-style pattern matching."
          },
          {
            "name": "String",
            "value": "String",
            "description": "Used to do exact match, for example, when a key contains characters that might be otherwise matched as a pattern (*, ?, [0-9])."
          },
          {
            "name": "Binary",
            "value": "Binary",
            "description": "Used to match a binary key."
          }
        ]
      }
    },
    "BrokerStateStorePolicy": {
      "type": "object",
      "description": "Broker State Store Policy.",
      "properties": {
        "mode": {
          "$ref": "#/definitions/BrokerPersistencePolicyMode",
          "description": "'All' to persist all keys, 'None' to not persist any, 'Custom' to persist only the specified keys."
        }
      },
      "discriminator": "mode",
      "required": [
        "mode"
      ]
    },
    "BrokerStateStorePolicyResources": {
      "type": "object",
      "description": "Broker State Store Policy Resources properties.",
      "properties": {
        "keyType": {
          "$ref": "#/definitions/BrokerStateStoreKeyType",
          "description": "The key to persist to disk."
        },
        "keys": {
          "type": "array",
          "description": "List of keys to persist to disk, required.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "keyType",
        "keys"
      ]
    },
    "BrokerStateStorePolicySettings": {
      "type": "object",
      "description": "Broker State Store Custom Policy Settings.",
      "properties": {
        "stateStoreResources": {
          "type": "array",
          "description": "List of key and key type to persist to disk.",
          "items": {
            "$ref": "#/definitions/BrokerStateStorePolicyResources"
          },
          "x-ms-identifiers": []
        },
        "dynamic": {
          "$ref": "#/definitions/BrokerStateStoreDynamic",
          "description": "Controls if MQTT clients can request for disk persistence via `MQTTv5` user property. Works in addition to other groups (logical OR)."
        }
      }
    },
    "BrokerSubscriberQueueCustomPolicy": {
      "type": "object",
      "description": "Custom Subscriber Queue Policy Properties.",
      "properties": {
        "subscriberQueueSettings": {
          "$ref": "#/definitions/BrokerSubscriberQueueCustomPolicySettings",
          "description": "Custom policy, required if mode is Custom. Subscriber queues from all groups are persisted to disk (logical OR)."
        }
      },
      "required": [
        "subscriberQueueSettings"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BrokerSubscriberQueuePolicy"
        }
      ],
      "x-ms-discriminator-value": "Custom"
    },
    "BrokerSubscriberQueueCustomPolicySettings": {
      "type": "object",
      "description": "Broker Subscriber Queue Custom Policy properties.",
      "properties": {
        "subscriberClientIds": {
          "type": "array",
          "description": "List of client IDs of the subscribers, wildcard * supported.",
          "items": {
            "type": "string"
          }
        },
        "dynamic": {
          "$ref": "#/definitions/BrokerSubscriberQueueDynamic",
          "description": "Controls if MQTT clients can request for disk persistence via `MQTTv5` user property. Works in addition to other groups (logical OR)."
        },
        "topics": {
          "type": "array",
          "description": "List of topics under which messages would be persisted to disk for each subscriber. Wildcards # and + supported.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BrokerSubscriberQueueDynamic": {
      "type": "object",
      "description": "Dynamic settings of BrokerSubscriberQueueCustomPolicy.",
      "properties": {
        "mode": {
          "$ref": "#/definitions/OperationalMode",
          "description": "Mode of the BrokerSubscriberQueueCustomPolicy."
        }
      },
      "required": [
        "mode"
      ]
    },
    "BrokerSubscriberQueuePolicy": {
      "type": "object",
      "description": "Broker Subscriber Queue Policy properties.",
      "properties": {
        "mode": {
          "$ref": "#/definitions/BrokerPersistencePolicyMode",
          "description": "'All' to persist all subscriber queues, 'None' to not persist any, 'Custom' to persist only the specified queues."
        }
      },
      "discriminator": "mode",
      "required": [
        "mode"
      ]
    },
    "Cardinality": {
      "type": "object",
      "description": "Cardinality properties",
      "properties": {
        "backendChain": {
          "$ref": "#/definitions/BackendChain",
          "description": "The backend broker desired properties"
        },
        "frontend": {
          "$ref": "#/definitions/Frontend",
          "description": "The frontend desired properties"
        }
      },
      "required": [
        "backendChain",
        "frontend"
      ]
    },
    "CertManagerCertOptions": {
      "type": "object",
      "description": "Cert Manager Cert properties",
      "properties": {
        "duration": {
          "type": "string",
          "description": "Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
        },
        "renewBefore": {
          "type": "string",
          "description": "When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
        },
        "privateKey": {
          "$ref": "#/definitions/CertManagerPrivateKey",
          "description": "Configuration of certificate private key."
        }
      },
      "required": [
        "duration",
        "renewBefore",
        "privateKey"
      ]
    },
    "CertManagerCertificateSpec": {
      "type": "object",
      "description": "Automatic TLS server certificate management with cert-manager",
      "properties": {
        "duration": {
          "type": "string",
          "description": "Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
        },
        "secretName": {
          "type": "string",
          "description": "Secret for storing server certificate. Any existing data will be overwritten. This is a reference to the secret through an identifying name, not the secret itself."
        },
        "renewBefore": {
          "type": "string",
          "description": "When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
        },
        "issuerRef": {
          "$ref": "#/definitions/CertManagerIssuerRef",
          "description": "cert-manager issuerRef."
        },
        "privateKey": {
          "$ref": "#/definitions/CertManagerPrivateKey",
          "description": "Type of certificate private key."
        },
        "san": {
          "$ref": "#/definitions/SanForCert",
          "description": "Additional Subject Alternative Names (SANs) to include in the certificate."
        }
      },
      "required": [
        "issuerRef"
      ]
    },
    "CertManagerIssuerKind": {
      "type": "string",
      "description": "CertManagerIssuerKind properties",
      "enum": [
        "Issuer",
        "ClusterIssuer"
      ],
      "x-ms-enum": {
        "name": "CertManagerIssuerKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Issuer",
            "value": "Issuer",
            "description": "Issuer kind."
          },
          {
            "name": "ClusterIssuer",
            "value": "ClusterIssuer",
            "description": "ClusterIssuer kind."
          }
        ]
      }
    },
    "CertManagerIssuerRef": {
      "type": "object",
      "description": "Cert-Manager issuerRef properties",
      "properties": {
        "group": {
          "type": "string",
          "description": "group of issuer.",
          "default": "cert-manager.io"
        },
        "kind": {
          "$ref": "#/definitions/CertManagerIssuerKind",
          "description": "kind of issuer (Issuer or ClusterIssuer)."
        },
        "name": {
          "type": "string",
          "description": "name of issuer."
        }
      },
      "required": [
        "group",
        "kind",
        "name"
      ]
    },
    "CertManagerPrivateKey": {
      "type": "object",
      "description": "Cert Manager private key properties",
      "properties": {
        "algorithm": {
          "$ref": "#/definitions/PrivateKeyAlgorithm",
          "description": "algorithm for private key."
        },
        "rotationPolicy": {
          "$ref": "#/definitions/PrivateKeyRotationPolicy",
          "description": "cert-manager private key rotationPolicy."
        }
      },
      "required": [
        "algorithm",
        "rotationPolicy"
      ]
    },
    "ClientConfig": {
      "type": "object",
      "description": "The settings of Client Config.",
      "properties": {
        "maxSessionExpirySeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Upper bound of Session Expiry Interval, in seconds.",
          "minimum": 1,
          "maximum": 4294967295
        },
        "maxMessageExpirySeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Upper bound of Message Expiry Interval, in seconds.",
          "minimum": 1,
          "maximum": 4294967295
        },
        "maxPacketSizeBytes": {
          "type": "integer",
          "format": "int32",
          "description": "Max message size for a packet in Bytes.",
          "minimum": 1,
          "maximum": 268435456
        },
        "subscriberQueueLimit": {
          "$ref": "#/definitions/SubscriberQueueLimit",
          "description": "The limit on the number of queued messages for a subscriber."
        },
        "maxReceiveMaximum": {
          "type": "integer",
          "format": "int32",
          "description": "Upper bound of Receive Maximum that a client can request in the CONNECT packet.",
          "minimum": 1,
          "maximum": 65535
        },
        "maxKeepAliveSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Upper bound of a client's Keep Alive, in seconds.",
          "minimum": 0,
          "maximum": 65535
        }
      }
    },
    "CloudEventAttributeType": {
      "type": "string",
      "description": "How to map events to the cloud.",
      "enum": [
        "Propagate",
        "CreateOrRemap"
      ],
      "x-ms-enum": {
        "name": "CloudEventAttributeType",
        "modelAsString": true,
        "values": [
          {
            "name": "Propagate",
            "value": "Propagate",
            "description": "Propagate type"
          },
          {
            "name": "CreateOrRemap",
            "value": "CreateOrRemap",
            "description": "CreateOrRemap type"
          }
        ]
      }
    },
    "DataExplorerAuthMethod": {
      "$ref": "#/definitions/ManagedIdentityMethod",
      "x-nullable": false
    },
    "DataLakeStorageAuthMethod": {
      "type": "string",
      "description": "DataflowEndpoint Data Lake Storage Authentication Method properties",
      "enum": [
        "SystemAssignedManagedIdentity",
        "UserAssignedManagedIdentity",
        "AccessToken"
      ],
      "x-ms-enum": {
        "name": "DataLakeStorageAuthMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "SystemAssignedManagedIdentity",
            "value": "SystemAssignedManagedIdentity",
            "description": "SystemAssignedManagedIdentity type"
          },
          {
            "name": "UserAssignedManagedIdentity",
            "value": "UserAssignedManagedIdentity",
            "description": "UserAssignedManagedIdentity type"
          },
          {
            "name": "AccessToken",
            "value": "AccessToken",
            "description": "AccessToken Option"
          }
        ]
      }
    },
    "DataflowBuiltInTransformationDataset": {
      "type": "object",
      "description": "Dataflow BuiltIn Transformation dataset properties",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key of the dataset.",
          "maxLength": 64
        },
        "description": {
          "type": "string",
          "description": "A user provided optional description of the dataset.",
          "maxLength": 256
        },
        "schemaRef": {
          "type": "string",
          "description": "The reference to the schema that describes the dataset. Allowed: JSON Schema/draft-7."
        },
        "inputs": {
          "type": "array",
          "description": "List of fields for enriching from the Broker State Store.",
          "items": {
            "type": "string"
          }
        },
        "expression": {
          "type": "string",
          "description": "Condition to enrich data from Broker State Store. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)"
        }
      },
      "required": [
        "key",
        "inputs"
      ]
    },
    "DataflowBuiltInTransformationFilter": {
      "type": "object",
      "description": "Dataflow BuiltIn Transformation filter properties",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of dataflow operation.",
          "default": "Filter",
          "enum": [
            "Filter"
          ],
          "x-ms-enum": {
            "name": "FilterType",
            "modelAsString": true,
            "values": [
              {
                "name": "Filter",
                "value": "Filter",
                "description": "Filter type"
              }
            ]
          }
        },
        "description": {
          "type": "string",
          "description": "A user provided optional description of the filter.",
          "maxLength": 256
        },
        "inputs": {
          "type": "array",
          "description": "List of fields for filtering in JSON path expression.",
          "items": {
            "type": "string"
          }
        },
        "expression": {
          "type": "string",
          "description": "Condition to filter data. Can reference input fields with {n} where n is the index of the input field starting from 1. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)"
        }
      },
      "required": [
        "inputs",
        "expression"
      ]
    },
    "DataflowBuiltInTransformationMap": {
      "type": "object",
      "description": "Dataflow BuiltIn Transformation map properties",
      "properties": {
        "type": {
          "$ref": "#/definitions/DataflowMappingType",
          "description": "Type of transformation."
        },
        "description": {
          "type": "string",
          "description": "A user provided optional description of the mapping function.",
          "maxLength": 256
        },
        "inputs": {
          "type": "array",
          "description": "List of fields for mapping in JSON path expression.",
          "items": {
            "type": "string"
          }
        },
        "expression": {
          "type": "string",
          "description": "Modify the inputs field(s) to the final output field. Example: $1 * 2.2 (Assuming inputs section $1 is provided)"
        },
        "output": {
          "type": "string",
          "description": "Where and how the input fields to be organized in the output record."
        }
      },
      "required": [
        "inputs",
        "output"
      ]
    },
    "DataflowBuiltInTransformationSettings": {
      "type": "object",
      "description": "Dataflow BuiltIn Transformation properties",
      "properties": {
        "serializationFormat": {
          "type": "string",
          "description": "Serialization format. Optional; defaults to JSON. Allowed value JSON Schema/draft-7, Parquet. Default: Json",
          "default": "Json",
          "enum": [
            "Delta",
            "Json",
            "Parquet"
          ],
          "x-ms-enum": {
            "name": "TransformationSerializationFormat",
            "modelAsString": true,
            "values": [
              {
                "name": "Delta",
                "value": "Delta",
                "description": "Delta Format"
              },
              {
                "name": "Json",
                "value": "Json",
                "description": "JSON Format"
              },
              {
                "name": "Parquet",
                "value": "Parquet",
                "description": "Parquet Format"
              }
            ]
          }
        },
        "schemaRef": {
          "type": "string",
          "description": "Reference to the schema that describes the output of the transformation."
        },
        "datasets": {
          "type": "array",
          "description": "Enrich data from Broker State Store. Dataset references a key in Broker State Store.",
          "default": [],
          "maxItems": 1,
          "items": {
            "$ref": "#/definitions/DataflowBuiltInTransformationDataset"
          },
          "x-ms-identifiers": []
        },
        "filter": {
          "type": "array",
          "description": "Filters input record or datapoints based on condition.",
          "default": [],
          "items": {
            "$ref": "#/definitions/DataflowBuiltInTransformationFilter"
          },
          "x-ms-identifiers": []
        },
        "map": {
          "type": "array",
          "description": "Maps input to output message.",
          "default": [],
          "items": {
            "$ref": "#/definitions/DataflowBuiltInTransformationMap"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "DataflowDestinationOperationSettings": {
      "type": "object",
      "description": "Dataflow Destination Operation properties",
      "properties": {
        "endpointRef": {
          "type": "string",
          "description": "Reference to the Endpoint CR. Can be of Broker, Kafka, Fabric, ADLS, ADX type."
        },
        "dataDestination": {
          "$ref": "#/definitions/NonEmptyString",
          "description": "Destination location, can be a topic or table name. Supports dynamic values with $topic, $systemProperties, $userProperties, $payload, $context, and $subscription."
        }
      },
      "required": [
        "endpointRef",
        "dataDestination"
      ]
    },
    "DataflowEndpointAuthenticationAccessToken": {
      "type": "object",
      "description": "DataflowEndpoint Authentication Access Token properties",
      "properties": {
        "secretRef": {
          "type": "string",
          "description": "Token secret name."
        }
      },
      "required": [
        "secretRef"
      ]
    },
    "DataflowEndpointAuthenticationAnonymous": {
      "type": "object",
      "description": "DataflowEndpoint Anonymous Authentication properties",
      "additionalProperties": false
    },
    "DataflowEndpointAuthenticationSasl": {
      "type": "object",
      "description": "DataflowEndpoint Authentication Sasl properties",
      "properties": {
        "saslType": {
          "$ref": "#/definitions/DataflowEndpointAuthenticationSaslType",
          "description": "Type of SASL authentication. Can be PLAIN, SCRAM-SHA-256, or SCRAM-SHA-512."
        },
        "secretRef": {
          "type": "string",
          "description": "Token secret name."
        }
      },
      "required": [
        "saslType",
        "secretRef"
      ]
    },
    "DataflowEndpointAuthenticationSaslType": {
      "type": "string",
      "description": "DataflowEndpoint Authentication Sasl Type properties",
      "enum": [
        "Plain",
        "ScramSha256",
        "ScramSha512"
      ],
      "x-ms-enum": {
        "name": "DataflowEndpointAuthenticationSaslType",
        "modelAsString": true,
        "values": [
          {
            "name": "Plain",
            "value": "Plain",
            "description": "PLAIN Type"
          },
          {
            "name": "ScramSha256",
            "value": "ScramSha256",
            "description": "SCRAM_SHA_256 Type"
          },
          {
            "name": "ScramSha512",
            "value": "ScramSha512",
            "description": "SCRAM_SHA_512 Type"
          }
        ]
      }
    },
    "DataflowEndpointAuthenticationServiceAccountToken": {
      "type": "object",
      "description": "Service Account Token for BrokerAuthentication",
      "properties": {
        "audience": {
          "type": "string",
          "description": "Audience of the service account. Optional, defaults to the broker internal service account audience."
        }
      },
      "required": [
        "audience"
      ]
    },
    "DataflowEndpointAuthenticationSystemAssignedManagedIdentity": {
      "type": "object",
      "description": "DataflowEndpoint Authentication SystemAssignedManagedIdentity properties",
      "properties": {
        "audience": {
          "type": "string",
          "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
        }
      }
    },
    "DataflowEndpointAuthenticationUserAssignedManagedIdentity": {
      "type": "object",
      "description": "DataflowEndpoint Authentication UserAssignedManagedIdentity properties",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "Client ID for the user-assigned managed identity."
        },
        "scope": {
          "type": "string",
          "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
        },
        "tenantId": {
          "type": "string",
          "description": "Tenant ID."
        }
      },
      "required": [
        "clientId",
        "tenantId"
      ]
    },
    "DataflowEndpointAuthenticationX509": {
      "type": "object",
      "description": "DataflowEndpoint Authentication X509 properties",
      "properties": {
        "secretRef": {
          "type": "string",
          "description": "Secret reference of the X.509 certificate."
        }
      },
      "required": [
        "secretRef"
      ]
    },
    "DataflowEndpointDataExplorer": {
      "type": "object",
      "description": "Azure Data Explorer endpoint properties",
      "properties": {
        "authentication": {
          "$ref": "#/definitions/DataflowEndpointDataExplorerAuthentication",
          "description": "Authentication configuration. NOTE - only authentication property is allowed per entry."
        },
        "database": {
          "type": "string",
          "description": "Database name."
        },
        "host": {
          "type": "string",
          "description": "Host of the Azure Data Explorer in the form of <cluster>.<region>.kusto.windows.net .",
          "pattern": ".+\\..+\\.kusto\\.windows\\.net"
        },
        "batching": {
          "$ref": "#/definitions/BatchingConfiguration",
          "description": "Azure Data Explorer endpoint batching configuration."
        }
      },
      "required": [
        "authentication",
        "database",
        "host"
      ]
    },
    "DataflowEndpointDataExplorerAuthentication": {
      "type": "object",
      "description": "Azure Data Explorer Authentication properties. NOTE - only authentication property is allowed per entry.",
      "properties": {
        "method": {
          "$ref": "#/definitions/DataExplorerAuthMethod",
          "description": "Mode of Authentication."
        },
        "systemAssignedManagedIdentitySettings": {
          "$ref": "#/definitions/DataflowEndpointAuthenticationSystemAssignedManagedIdentity",
          "description": "System-assigned managed identity authentication."
        },
        "userAssignedManagedIdentitySettings": {
          "$ref": "#/definitions/DataflowEndpointAuthenticationUserAssignedManagedIdentity",
          "description": "User-assigned managed identity authentication."
        }
      },
      "required": [
        "method"
      ]
    },
    "DataflowEndpointDataLakeStorage": {
      "type": "object",
      "description": "Azure Data Lake endpoint properties",
      "properties": {
        "authentication": {
          "$ref": "#/definitions/DataflowEndpointDataLakeStorageAuthentication",
          "description": "Authentication configuration. NOTE - only authentication property is allowed per entry."
        },
        "host": {
          "type": "string",
          "description": "Host of the Azure Data Lake in the form of <account>.blob.core.windows.net .",
          "pattern": ".+\\.blob\\.core\\.windows\\.net"
        },
        "batching": {
          "$ref": "#/definitions/BatchingConfiguration",
          "description": "Azure Data Lake endpoint batching configuration."
        }
      },
      "required": [
        "authentication",
        "host"
      ]
    },
    "DataflowEndpointDataLakeStorageAuthentication": {
      "type": "object",
      "description": "Azure Data Lake endpoint Authentication properties.  NOTE Enum - Only one method is supported for one entry",
      "properties": {
        "method": {
          "$ref": "#/definitions/DataLakeStorageAuthMethod",
          "description": "Mode of Authentication."
        },
        "accessTokenSettings": {
          "$ref": "#/definitions/DataflowEndpointAuthenticationAccessToken",
          "description": "SAS token authentication."
        },
        "systemAssignedManagedIdentitySettings": {
          "$ref": "#/definitions/DataflowEndpointAuthenticationSystemAssignedManagedIdentity",
          "description": "System-assigned managed identity authentication."
        },
        "userAssignedManagedIdentitySettings": {
          "$ref": "#/definitions/DataflowEndpointAuthenticationUserAssignedManagedIdentity",
          "description": "User-assigned managed identity authentication."
        }
      },
      "required": [
        "method"
      ]
    },
    "DataflowEndpointFabricOneLake": {
      "type": "object",
      "description": "Microsoft Fabric endpoint properties",
      "properties": {
        "authentication": {
          "$ref": "#/definitions/DataflowEndpointFabricOneLakeAuthentication",
          "description": "Authentication configuration. NOTE - only one authentication property is allowed per entry."
        },
        "names": {
          "$ref": "#/definitions/DataflowEndpointFabricOneLakeNames",
          "description": "Names of the workspace and lakehouse."
        },
        "oneLakePathType": {
          "$ref": "#/definitions/DataflowEndpointFabricPathType",
          "description": "Type of location of the data in the workspace. Can be either tables or files."
        },
        "host": {
          "type": "string",
          "description": "Host of the Microsoft Fabric in the form of https://<host>.fabric.microsoft.com.",
          "pattern": ".+\\.fabric\\.microsoft\\.com"
        },
        "batching": {
          "$ref": "#/definitions/BatchingConfiguration",
          "description": "Batching configuration."
        }
      },
      "required": [
        "authentication",
        "names",
        "oneLakePathType",
        "host"
      ]
    },
    "DataflowEndpointFabricOneLakeAuthentication": {
      "type": "object",
      "description": "Microsoft Fabric endpoint. Authentication properties. NOTE - Only one method is supported for one entry",
      "properties": {
        "method": {
          "$ref": "#/definitions/FabricOneLakeAuthMethod",
          "description": "Mode of Authentication."
        },
        "systemAssignedManagedIdentitySettings": {
          "$ref": "#/definitions/DataflowEndpointAuthenticationSystemAssignedManagedIdentity",
          "description": "System-assigned managed identity authentication."
        },
        "userAssignedManagedIdentitySettings": {
          "$ref": "#/definitions/DataflowEndpointAuthenticationUserAssignedManagedIdentity",
          "description": "User-assigned managed identity authentication."
        }
      },
      "required": [
        "method"
      ]
    },
    "DataflowEndpointFabricOneLakeNames": {
      "type": "object",
      "description": "Microsoft Fabric endpoint Names properties",
      "properties": {
        "lakehouseName": {
          "type": "string",
          "description": "Lakehouse name."
        },
        "workspaceName": {
          "type": "string",
          "description": "Workspace name."
        }
      },
      "required": [
        "lakehouseName",
        "workspaceName"
      ]
    },
    "DataflowEndpointFabricPathType": {
      "type": "string",
      "description": "DataflowEndpoint Fabric Path Type properties",
      "enum": [
        "Files",
        "Tables"
      ],
      "x-ms-enum": {
        "name": "DataflowEndpointFabricPathType",
        "modelAsString": true,
        "values": [
          {
            "name": "Files",
            "value": "Files",
            "description": "FILES Type"
          },
          {
            "name": "Tables",
            "value": "Tables",
            "description": "TABLES Type"
          }
        ]
      }
    },
    "DataflowEndpointHostType": {
      "type": "string",
      "description": "DataflowEndpoint Host Type properties",
      "enum": [
        "FabricRT",
        "EventGrid",
        "LocalBroker",
        "Eventhub",
        "CustomMqtt",
        "CustomKafka"
      ],
      "x-ms-enum": {
        "name": "DataflowEndpointHostType",
        "modelAsString": true,
        "values": [
          {
            "name": "FabricRT",
            "value": "FabricRT",
            "description": "Fabric Real-Time Type"
          },
          {
            "name": "EventGrid",
            "value": "EventGrid",
            "description": "EventGrid Type"
          },
          {
            "name": "LocalBroker",
            "value": "LocalBroker",
            "description": "Local MQTT Type"
          },
          {
            "name": "Eventhub",
            "value": "Eventhub",
            "description": "EventHub Type"
          },
          {
            "name": "CustomMqtt",
            "value": "CustomMqtt",
            "description": "Custom MQTT Type"
          },
          {
            "name": "CustomKafka",
            "value": "CustomKafka",
            "description": "Custom Kafka Type"
          }
        ]
      }
    },
    "DataflowEndpointKafka": {
      "type": "object",
      "description": "Kafka endpoint properties",
      "properties": {
        "authentication": {
          "$ref": "#/definitions/DataflowEndpointKafkaAuthentication",
          "description": "Authentication configuration. NOTE - only authentication property is allowed per entry."
        },
        "consumerGroupId": {
          "type": "string",
          "description": "Consumer group ID."
        },
        "host": {
          "type": "string",
          "description": "Kafka endpoint host."
        },
        "batching": {
          "$ref": "#/definitions/DataflowEndpointKafkaBatching",
          "description": "Batching configuration."
        },
        "copyMqttProperties": {
          "type": "string",
          "description": "Copy Broker properties. No effect if the endpoint is used as a source or if the dataflow doesn't have an Broker source.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        },
        "compression": {
          "type": "string",
          "description": "Compression. Can be none, gzip, lz4, or snappy. No effect if the endpoint is used as a source.",
          "default": "None",
          "enum": [
            "None",
            "Gzip",
            "Snappy",
            "Lz4"
          ],
          "x-ms-enum": {
            "name": "DataflowEndpointKafkaCompression",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None",
                "description": "NONE Option"
              },
              {
                "name": "Gzip",
                "value": "Gzip",
                "description": "Gzip Option"
              },
              {
                "name": "Snappy",
                "value": "Snappy",
                "description": "SNAPPY Option"
              },
              {
                "name": "Lz4",
                "value": "Lz4",
                "description": "LZ4 Option"
              }
            ]
          }
        },
        "kafkaAcks": {
          "type": "string",
          "description": "Kafka acks. Can be all, one, or zero. No effect if the endpoint is used as a source.",
          "default": "All",
          "enum": [
            "Zero",
            "One",
            "All"
          ],
          "x-ms-enum": {
            "name": "DataflowEndpointKafkaAcks",
            "modelAsString": true,
            "values": [
              {
                "name": "Zero",
                "value": "Zero",
                "description": "ZERO Option"
              },
              {
                "name": "One",
                "value": "One",
                "description": "ONE Option"
              },
              {
                "name": "All",
                "value": "All",
                "description": "ALL Option"
              }
            ]
          }
        },
        "partitionStrategy": {
          "type": "string",
          "description": "Partition handling strategy. Can be default or static. No effect if the endpoint is used as a source.",
          "default": "Default",
          "enum": [
            "Default",
            "Static",
            "Topic",
            "Property"
          ],
          "x-ms-enum": {
            "name": "DataflowEndpointKafkaPartitionStrategy",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default",
                "description": "Default: Assigns messages to random partitions, using a round-robin algorithm."
              },
              {
                "name": "Static",
                "value": "Static",
                "description": "Static: Assigns messages to a fixed partition number that's derived from the instance ID of the dataflow."
              },
              {
                "name": "Topic",
                "value": "Topic",
                "description": "TOPIC Option"
              },
              {
                "name": "Property",
                "value": "Property",
                "description": "PROPERTY Option"
              }
            ]
          }
        },
        "tls": {
          "$ref": "#/definitions/TlsProperties",
          "description": "TLS configuration."
        },
        "cloudEventAttributes": {
          "$ref": "#/definitions/CloudEventAttributeType",
          "description": "Cloud event mapping config."
        }
      },
      "required": [
        "authentication",
        "host"
      ]
    },
    "DataflowEndpointKafkaAcks": {
      "type": "string",
      "description": "DataflowEndpoint Kafka Acks properties",
      "enum": [
        "Zero",
        "One",
        "All"
      ],
      "x-ms-enum": {
        "name": "DataflowEndpointKafkaAcks",
        "modelAsString": true,
        "values": [
          {
            "name": "Zero",
            "value": "Zero",
            "description": "ZERO Option"
          },
          {
            "name": "One",
            "value": "One",
            "description": "ONE Option"
          },
          {
            "name": "All",
            "value": "All",
            "description": "ALL Option"
          }
        ]
      }
    },
    "DataflowEndpointKafkaAuthentication": {
      "type": "object",
      "description": "Kafka endpoint Authentication properties. NOTE - only authentication property is allowed per entry",
      "properties": {
        "method": {
          "$ref": "#/definitions/KafkaAuthMethod",
          "description": "Mode of Authentication."
        },
        "systemAssignedManagedIdentitySettings": {
          "$ref": "#/definitions/DataflowEndpointAuthenticationSystemAssignedManagedIdentity",
          "description": "System-assigned managed identity authentication."
        },
        "userAssignedManagedIdentitySettings": {
          "$ref": "#/definitions/DataflowEndpointAuthenticationUserAssignedManagedIdentity",
          "description": "User-assigned managed identity authentication."
        },
        "saslSettings": {
          "$ref": "#/definitions/DataflowEndpointAuthenticationSasl",
          "description": "SASL authentication."
        },
        "x509CertificateSettings": {
          "$ref": "#/definitions/DataflowEndpointAuthenticationX509",
          "description": "X.509 certificate authentication."
        }
      },
      "required": [
        "method"
      ]
    },
    "DataflowEndpointKafkaBatching": {
      "type": "object",
      "description": "Kafka endpoint Batching properties",
      "properties": {
        "mode": {
          "type": "string",
          "description": "Mode for batching.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        },
        "latencyMs": {
          "type": "integer",
          "format": "int32",
          "description": "Batching latency in milliseconds.",
          "default": 5,
          "minimum": 0,
          "maximum": 65535
        },
        "maxBytes": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of bytes in a batch.",
          "default": 1000000,
          "minimum": 0,
          "maximum": 4294967295
        },
        "maxMessages": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of messages in a batch.",
          "default": 100000,
          "minimum": 0,
          "maximum": 4294967295
        }
      }
    },
    "DataflowEndpointKafkaCompression": {
      "type": "string",
      "description": "Kafka endpoint Compression properties",
      "enum": [
        "None",
        "Gzip",
        "Snappy",
        "Lz4"
      ],
      "x-ms-enum": {
        "name": "DataflowEndpointKafkaCompression",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "NONE Option"
          },
          {
            "name": "Gzip",
            "value": "Gzip",
            "description": "Gzip Option"
          },
          {
            "name": "Snappy",
            "value": "Snappy",
            "description": "SNAPPY Option"
          },
          {
            "name": "Lz4",
            "value": "Lz4",
            "description": "LZ4 Option"
          }
        ]
      }
    },
    "DataflowEndpointKafkaPartitionStrategy": {
      "type": "string",
      "description": "DataflowEndpoint Kafka Partition Strategy properties",
      "enum": [
        "Default",
        "Static",
        "Topic",
        "Property"
      ],
      "x-ms-enum": {
        "name": "DataflowEndpointKafkaPartitionStrategy",
        "modelAsString": true,
        "values": [
          {
            "name": "Default",
            "value": "Default",
            "description": "Default: Assigns messages to random partitions, using a round-robin algorithm."
          },
          {
            "name": "Static",
            "value": "Static",
            "description": "Static: Assigns messages to a fixed partition number that's derived from the instance ID of the dataflow."
          },
          {
            "name": "Topic",
            "value": "Topic",
            "description": "TOPIC Option"
          },
          {
            "name": "Property",
            "value": "Property",
            "description": "PROPERTY Option"
          }
        ]
      }
    },
    "DataflowEndpointLocalStorage": {
      "type": "object",
      "description": "Local persistent volume endpoint properties",
      "properties": {
        "persistentVolumeClaimRef": {
          "type": "string",
          "description": "Persistent volume claim name."
        }
      },
      "required": [
        "persistentVolumeClaimRef"
      ]
    },
    "DataflowEndpointMqtt": {
      "type": "object",
      "description": "Broker endpoint properties",
      "properties": {
        "authentication": {
          "$ref": "#/definitions/DataflowEndpointMqttAuthentication",
          "description": "authentication properties. DEFAULT: kubernetes.audience=aio-internal. NOTE - Enum field only property is allowed"
        },
        "clientIdPrefix": {
          "type": "string",
          "description": "Client ID prefix. Client ID generated by the dataflow is <prefix>-TBD. Optional; no prefix if omitted."
        },
        "host": {
          "type": "string",
          "description": "Host of the Broker in the form of <hostname>:<port>. Optional; connects to Broker if omitted."
        },
        "protocol": {
          "type": "string",
          "description": "Enable or disable websockets.",
          "default": "Mqtt",
          "enum": [
            "Mqtt",
            "WebSockets"
          ],
          "x-ms-enum": {
            "name": "BrokerProtocolType",
            "modelAsString": true,
            "values": [
              {
                "name": "Mqtt",
                "value": "Mqtt",
                "description": "protocol broker"
              },
              {
                "name": "WebSockets",
                "value": "WebSockets",
                "description": "protocol websocket"
              }
            ]
          }
        },
        "keepAliveSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Broker KeepAlive for connection in seconds.",
          "default": 60,
          "minimum": 0
        },
        "retain": {
          "type": "string",
          "description": "Whether or not to keep the retain setting.",
          "default": "Keep",
          "enum": [
            "Keep",
            "Never"
          ],
          "x-ms-enum": {
            "name": "MqttRetainType",
            "modelAsString": true,
            "values": [
              {
                "name": "Keep",
                "value": "Keep",
                "description": "Retain the messages."
              },
              {
                "name": "Never",
                "value": "Never",
                "description": "Never retain messages."
              }
            ]
          }
        },
        "maxInflightMessages": {
          "type": "integer",
          "format": "int32",
          "description": "The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.",
          "default": 100,
          "minimum": 0
        },
        "qos": {
          "type": "integer",
          "format": "int32",
          "description": "Qos for Broker connection.",
          "default": 1,
          "minimum": 0,
          "maximum": 1
        },
        "sessionExpirySeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Session expiry in seconds.",
          "minimum": 0
        },
        "tls": {
          "$ref": "#/definitions/TlsProperties",
          "description": "TLS configuration."
        },
        "cloudEventAttributes": {
          "$ref": "#/definitions/CloudEventAttributeType",
          "description": "Cloud event mapping config."
        }
      },
      "required": [
        "authentication"
      ]
    },
    "DataflowEndpointMqttAuthentication": {
      "type": "object",
      "description": "Mqtt endpoint Authentication properties. NOTE - only authentication property is allowed per entry.",
      "properties": {
        "method": {
          "$ref": "#/definitions/MqttAuthMethod",
          "description": "Mode of Authentication."
        },
        "systemAssignedManagedIdentitySettings": {
          "$ref": "#/definitions/DataflowEndpointAuthenticationSystemAssignedManagedIdentity",
          "description": "System-assigned managed identity authentication."
        },
        "userAssignedManagedIdentitySettings": {
          "$ref": "#/definitions/DataflowEndpointAuthenticationUserAssignedManagedIdentity",
          "description": "User-assigned managed identity authentication."
        },
        "serviceAccountTokenSettings": {
          "$ref": "#/definitions/DataflowEndpointAuthenticationServiceAccountToken",
          "description": "Kubernetes service account token authentication. Default audience if not set is aio-internal"
        },
        "x509CertificateSettings": {
          "$ref": "#/definitions/DataflowEndpointAuthenticationX509",
          "description": "X.509 certificate authentication."
        }
      },
      "required": [
        "method"
      ]
    },
    "DataflowEndpointOpenTelemetry": {
      "type": "object",
      "description": "OpenTelemetry endpoint properties.",
      "properties": {
        "host": {
          "type": "string",
          "description": "Host of the OpenTelemetry in the form of <host>:<port>."
        },
        "batching": {
          "$ref": "#/definitions/BatchingConfiguration",
          "description": "Batching configuration."
        },
        "tls": {
          "$ref": "#/definitions/TlsProperties",
          "description": "TLS configuration."
        },
        "authentication": {
          "$ref": "#/definitions/DataflowOpenTelemetryAuthentication",
          "description": "Authentication properties for OpenTelemetry endpoints"
        }
      },
      "required": [
        "host",
        "authentication"
      ]
    },
    "DataflowEndpointProperties": {
      "type": "object",
      "description": "DataflowEndpoint Resource properties. NOTE - Only one type of endpoint is supported for one Resource",
      "properties": {
        "endpointType": {
          "$ref": "#/definitions/EndpointType",
          "description": "Endpoint Type."
        },
        "hostType": {
          "$ref": "#/definitions/DataflowEndpointHostType",
          "description": "The type of the Kafka host. E.g FabricRT, EventGrid."
        },
        "dataExplorerSettings": {
          "$ref": "#/definitions/DataflowEndpointDataExplorer",
          "description": "Azure Data Explorer endpoint."
        },
        "dataLakeStorageSettings": {
          "$ref": "#/definitions/DataflowEndpointDataLakeStorage",
          "description": "Azure Data Lake endpoint."
        },
        "fabricOneLakeSettings": {
          "$ref": "#/definitions/DataflowEndpointFabricOneLake",
          "description": "Microsoft Fabric endpoint."
        },
        "kafkaSettings": {
          "$ref": "#/definitions/DataflowEndpointKafka",
          "description": "Kafka endpoint."
        },
        "localStorageSettings": {
          "$ref": "#/definitions/DataflowEndpointLocalStorage",
          "description": "Local persistent volume endpoint."
        },
        "mqttSettings": {
          "$ref": "#/definitions/DataflowEndpointMqtt",
          "description": "Broker endpoint."
        },
        "openTelemetrySettings": {
          "$ref": "#/definitions/DataflowEndpointOpenTelemetry",
          "description": "OpenTelemetry endpoint."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      },
      "required": [
        "endpointType"
      ]
    },
    "DataflowEndpointResource": {
      "type": "object",
      "description": "Instance dataflowEndpoint resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataflowEndpointProperties",
          "description": "The resource-specific properties for this resource."
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DataflowEndpointResourceListResult": {
      "type": "object",
      "description": "The response of a DataflowEndpointResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DataflowEndpointResource items on this page",
          "items": {
            "$ref": "#/definitions/DataflowEndpointResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DataflowGraphConnectionInput": {
      "type": "object",
      "description": "DataflowGraph DataflowGraphNode Connection Input.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the input node."
        },
        "schema": {
          "$ref": "#/definitions/DataflowGraphConnectionSchemaSettings",
          "description": "Schema settings for the input node."
        }
      },
      "required": [
        "name"
      ]
    },
    "DataflowGraphConnectionOutput": {
      "type": "object",
      "description": "DataflowGraph DataflowGraphNode Connection Output.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the destination node."
        }
      },
      "required": [
        "name"
      ]
    },
    "DataflowGraphConnectionSchemaSerializationFormat": {
      "type": "string",
      "description": "Serialization format for dataflow graph connection.",
      "enum": [
        "Delta",
        "Json",
        "Parquet",
        "Avro"
      ],
      "x-ms-enum": {
        "name": "DataflowGraphConnectionSchemaSerializationFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "Delta",
            "value": "Delta",
            "description": "Delta Format"
          },
          {
            "name": "Json",
            "value": "Json",
            "description": "JSON Format"
          },
          {
            "name": "Parquet",
            "value": "Parquet",
            "description": "Parquet Format"
          },
          {
            "name": "Avro",
            "value": "Avro",
            "description": "Avro serialization format."
          }
        ]
      }
    },
    "DataflowGraphConnectionSchemaSettings": {
      "type": "object",
      "description": "DataflowGraph connection node output schema settings.",
      "properties": {
        "serializationFormat": {
          "$ref": "#/definitions/DataflowGraphConnectionSchemaSerializationFormat",
          "description": "Output serialization format."
        },
        "schemaRef": {
          "type": "string",
          "description": "Reference to the schema that describes the output of the transformation."
        }
      }
    },
    "DataflowGraphDestinationNode": {
      "type": "object",
      "description": "DataflowGraph destination node properties.",
      "properties": {
        "destinationSettings": {
          "$ref": "#/definitions/DataflowGraphDestinationNodeSettings",
          "description": "Destination configuration."
        }
      },
      "required": [
        "destinationSettings"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataflowGraphNode"
        }
      ],
      "x-ms-discriminator-value": "Destination"
    },
    "DataflowGraphDestinationNodeSettings": {
      "type": "object",
      "description": "DataflowGraph destination node settings.",
      "properties": {
        "endpointRef": {
          "type": "string",
          "description": "The name of the DataflowEndpoint resource ."
        },
        "dataDestination": {
          "type": "string",
          "description": "Data destination at the endpoint."
        },
        "outputSchemaSettings": {
          "$ref": "#/definitions/DataflowGraphDestinationSchemaSettings",
          "description": "Output schema settings."
        }
      },
      "required": [
        "endpointRef",
        "dataDestination"
      ]
    },
    "DataflowGraphDestinationSchemaSerializationFormat": {
      "type": "string",
      "description": "Serialization format for dataflow graph.",
      "enum": [
        "Parquet",
        "Delta"
      ],
      "x-ms-enum": {
        "name": "DataflowGraphDestinationSchemaSerializationFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "Parquet",
            "value": "Parquet",
            "description": "Parquet serialization format."
          },
          {
            "name": "Delta",
            "value": "Delta",
            "description": "Delta serialization format."
          }
        ]
      }
    },
    "DataflowGraphDestinationSchemaSettings": {
      "type": "object",
      "description": "DataflowGraph destination node output schema settings.",
      "properties": {
        "serializationFormat": {
          "$ref": "#/definitions/DataflowGraphDestinationSchemaSerializationFormat",
          "description": "The format of the output data."
        },
        "schemaRef": {
          "type": "string",
          "description": "Reference to the schema that describes the output of the transformation."
        }
      },
      "required": [
        "serializationFormat"
      ]
    },
    "DataflowGraphGraphNode": {
      "type": "object",
      "description": "DataflowGraph graph node properties.",
      "properties": {
        "graphSettings": {
          "$ref": "#/definitions/DataflowGraphNodeGraphSettings",
          "description": "Graph configuration."
        }
      },
      "required": [
        "graphSettings"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataflowGraphNode"
        }
      ],
      "x-ms-discriminator-value": "Graph"
    },
    "DataflowGraphGraphNodeConfiguration": {
      "type": "object",
      "description": "DataflowGraph graph node configuration.",
      "properties": {
        "key": {
          "type": "string",
          "description": "Key of the configuration."
        },
        "value": {
          "type": "string",
          "description": "Value of the configuration."
        }
      },
      "required": [
        "key",
        "value"
      ]
    },
    "DataflowGraphNode": {
      "type": "object",
      "description": "DataflowGraph node properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the node."
        },
        "nodeType": {
          "$ref": "#/definitions/DataflowGraphNodeType",
          "description": "Type of the node."
        }
      },
      "discriminator": "nodeType",
      "required": [
        "name",
        "nodeType"
      ]
    },
    "DataflowGraphNodeConnection": {
      "type": "object",
      "description": "DataflowGraph DataflowGraphNode Connection.",
      "properties": {
        "from": {
          "$ref": "#/definitions/DataflowGraphConnectionInput",
          "description": "Information about the source node."
        },
        "to": {
          "$ref": "#/definitions/DataflowGraphConnectionOutput",
          "description": "Information about the destination node."
        }
      },
      "required": [
        "from",
        "to"
      ]
    },
    "DataflowGraphNodeGraphSettings": {
      "type": "object",
      "description": "DataflowGraph graph node settings.",
      "properties": {
        "registryEndpointRef": {
          "type": "string",
          "description": "Reference to the registry endpoint for pulling the artifact."
        },
        "artifact": {
          "type": "string",
          "description": "The artifact name and version to pull. This should be in the format `<artifact-name>:<version>`."
        },
        "configuration": {
          "type": "array",
          "description": "Configuration key-value pairs.",
          "items": {
            "$ref": "#/definitions/DataflowGraphGraphNodeConfiguration"
          },
          "x-ms-identifiers": [
            "key"
          ]
        }
      },
      "required": [
        "registryEndpointRef",
        "artifact"
      ]
    },
    "DataflowGraphNodeType": {
      "type": "string",
      "description": "DataflowGraph node types.",
      "enum": [
        "Source",
        "Graph",
        "Destination"
      ],
      "x-ms-enum": {
        "name": "DataflowGraphNodeType",
        "modelAsString": true,
        "values": [
          {
            "name": "Source",
            "value": "Source",
            "description": "Dataflow source node."
          },
          {
            "name": "Graph",
            "value": "Graph",
            "description": "Dataflow graph node."
          },
          {
            "name": "Destination",
            "value": "Destination",
            "description": "Dataflow destination node."
          }
        ]
      }
    },
    "DataflowGraphProperties": {
      "type": "object",
      "description": "DataflowGraph properties.",
      "properties": {
        "mode": {
          "type": "string",
          "description": "The mode of the dataflow graph.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        },
        "requestDiskPersistence": {
          "$ref": "#/definitions/OperationalMode",
          "description": "Disk persistence mode."
        },
        "nodes": {
          "type": "array",
          "description": "List of nodes in the dataflow graph.",
          "items": {
            "$ref": "#/definitions/DataflowGraphNode"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nodeConnections": {
          "type": "array",
          "description": "List of connections between nodes in the dataflow graph.",
          "items": {
            "$ref": "#/definitions/DataflowGraphNodeConnection"
          },
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the dataflow graph.",
          "readOnly": true
        }
      },
      "required": [
        "nodes",
        "nodeConnections"
      ]
    },
    "DataflowGraphResource": {
      "type": "object",
      "description": "Instance dataflowEndpoint resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataflowGraphProperties",
          "description": "The resource-specific properties for this resource."
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DataflowGraphResourceListResult": {
      "type": "object",
      "description": "The response of a DataflowGraphResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DataflowGraphResource items on this page",
          "items": {
            "$ref": "#/definitions/DataflowGraphResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DataflowGraphSourceNode": {
      "type": "object",
      "description": "DataflowGraph source node properties.",
      "properties": {
        "sourceSettings": {
          "$ref": "#/definitions/DataflowGraphSourceSettings",
          "description": "Source configuration."
        }
      },
      "required": [
        "sourceSettings"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataflowGraphNode"
        }
      ],
      "x-ms-discriminator-value": "Source"
    },
    "DataflowGraphSourceSettings": {
      "type": "object",
      "description": "DataflowGraph source node settings.",
      "properties": {
        "endpointRef": {
          "type": "string",
          "description": "The endpoint reference for the source."
        },
        "dataSources": {
          "type": "array",
          "description": "List of data sources.",
          "items": {
            "type": "string"
          }
        },
        "assetRef": {
          "type": "string",
          "description": "Reference to the resource in Azure Device Registry where the data in the endpoint originates from."
        }
      },
      "required": [
        "endpointRef",
        "dataSources"
      ]
    },
    "DataflowMappingType": {
      "type": "string",
      "description": "Dataflow type mapping properties",
      "enum": [
        "NewProperties",
        "Rename",
        "Compute",
        "PassThrough",
        "BuiltInFunction"
      ],
      "x-ms-enum": {
        "name": "DataflowMappingType",
        "modelAsString": true,
        "values": [
          {
            "name": "NewProperties",
            "value": "NewProperties",
            "description": "New Properties type"
          },
          {
            "name": "Rename",
            "value": "Rename",
            "description": "Rename type"
          },
          {
            "name": "Compute",
            "value": "Compute",
            "description": "Compute type"
          },
          {
            "name": "PassThrough",
            "value": "PassThrough",
            "description": "Pass-through type"
          },
          {
            "name": "BuiltInFunction",
            "value": "BuiltInFunction",
            "description": "Built in function type"
          }
        ]
      }
    },
    "DataflowOpenTelemetryAnonymousAuthentication": {
      "type": "object",
      "description": "DataflowOpenTelemetryAnonymousAuthentication properties.",
      "properties": {
        "anonymousSettings": {
          "$ref": "#/definitions/DataflowEndpointAuthenticationAnonymous",
          "description": "Settings for the anonymous connection"
        }
      },
      "required": [
        "anonymousSettings"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataflowOpenTelemetryAuthentication"
        }
      ],
      "x-ms-discriminator-value": "Anonymous"
    },
    "DataflowOpenTelemetryAuthentication": {
      "type": "object",
      "description": "Dataflow OpenTelemetry authentication properties.",
      "properties": {
        "method": {
          "$ref": "#/definitions/DataflowOpenTelemetryAuthenticationMethod",
          "description": "The authentication method."
        }
      },
      "discriminator": "method",
      "required": [
        "method"
      ]
    },
    "DataflowOpenTelemetryAuthenticationMethod": {
      "type": "string",
      "description": "Dataflow OpenTelemetry authentication method values.",
      "enum": [
        "ServiceAccountToken",
        "X509Certificate",
        "Anonymous"
      ],
      "x-ms-enum": {
        "name": "DataflowOpenTelemetryAuthenticationMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "ServiceAccountToken",
            "value": "ServiceAccountToken",
            "description": "Uses serviceaccount token."
          },
          {
            "name": "X509Certificate",
            "value": "X509Certificate",
            "description": "Uses x509 certificate."
          },
          {
            "name": "Anonymous",
            "value": "Anonymous",
            "description": "Connects anonymously."
          }
        ]
      }
    },
    "DataflowOpenTelemetryServiceAccountAuthentication": {
      "type": "object",
      "description": "DataflowOpenTelemetryServiceAccountAuthentication properties.",
      "properties": {
        "serviceAccountTokenSettings": {
          "$ref": "#/definitions/DataflowEndpointAuthenticationServiceAccountToken",
          "description": "Kubernetes service account token authentication."
        }
      },
      "required": [
        "serviceAccountTokenSettings"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataflowOpenTelemetryAuthentication"
        }
      ],
      "x-ms-discriminator-value": "ServiceAccountToken"
    },
    "DataflowOpenTelemetryX509CertificateAuthentication": {
      "type": "object",
      "description": "DataflowOpenTelemetryX509CertificateAuthentication properties.",
      "properties": {
        "x509CertificateSettings": {
          "$ref": "#/definitions/DataflowEndpointAuthenticationX509",
          "description": "X.509 certificate authentication settings."
        }
      },
      "required": [
        "x509CertificateSettings"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataflowOpenTelemetryAuthentication"
        }
      ],
      "x-ms-discriminator-value": "X509Certificate"
    },
    "DataflowOperation": {
      "type": "object",
      "description": "Dataflow Operation properties. NOTE - One only method is allowed to be used for one entry.",
      "properties": {
        "operationType": {
          "$ref": "#/definitions/OperationType",
          "description": "Type of operation."
        },
        "name": {
          "type": "string",
          "description": "Optional user provided name of the transformation.",
          "maxLength": 64
        },
        "sourceSettings": {
          "$ref": "#/definitions/DataflowSourceOperationSettings",
          "description": "Source configuration."
        },
        "builtInTransformationSettings": {
          "$ref": "#/definitions/DataflowBuiltInTransformationSettings",
          "description": "Built In Transformation configuration."
        },
        "destinationSettings": {
          "$ref": "#/definitions/DataflowDestinationOperationSettings",
          "description": "Destination configuration."
        }
      },
      "required": [
        "operationType"
      ]
    },
    "DataflowProfileProperties": {
      "type": "object",
      "description": "DataflowProfile Resource properties",
      "properties": {
        "diagnostics": {
          "$ref": "#/definitions/ProfileDiagnostics",
          "description": "Spec defines the desired identities of NBC diagnostics settings."
        },
        "instanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "To manually scale the dataflow profile, specify the maximum number of instances you want to run.",
          "default": 1,
          "minimum": 1,
          "maximum": 20
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      }
    },
    "DataflowProfileResource": {
      "type": "object",
      "description": "Instance dataflowProfile resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataflowProfileProperties",
          "description": "The resource-specific properties for this resource."
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DataflowProfileResourceListResult": {
      "type": "object",
      "description": "The response of a DataflowProfileResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DataflowProfileResource items on this page",
          "items": {
            "$ref": "#/definitions/DataflowProfileResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DataflowProperties": {
      "type": "object",
      "description": "Dataflow Resource properties",
      "properties": {
        "mode": {
          "type": "string",
          "description": "Mode for Dataflow. Optional; defaults to Enabled.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        },
        "requestDiskPersistence": {
          "$ref": "#/definitions/OperationalMode",
          "description": "Disk persistence mode."
        },
        "operations": {
          "type": "array",
          "description": "List of operations including source and destination references as well as transformation.",
          "items": {
            "$ref": "#/definitions/DataflowOperation"
          },
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      },
      "required": [
        "operations"
      ]
    },
    "DataflowResource": {
      "type": "object",
      "description": "Instance dataflowProfile dataflow resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataflowProperties",
          "description": "The resource-specific properties for this resource."
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DataflowResourceListResult": {
      "type": "object",
      "description": "The response of a DataflowResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DataflowResource items on this page",
          "items": {
            "$ref": "#/definitions/DataflowResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DataflowSourceOperationSettings": {
      "type": "object",
      "description": "Dataflow Source Operation properties",
      "properties": {
        "endpointRef": {
          "type": "string",
          "description": "Reference to the Dataflow Endpoint resource. Can only be of Broker and Kafka type."
        },
        "assetRef": {
          "type": "string",
          "description": "Reference to the resource in Azure Device Registry where the data in the endpoint originates from."
        },
        "serializationFormat": {
          "type": "string",
          "description": "Content is a JSON Schema. Allowed: JSON Schema/draft-7.",
          "default": "Json",
          "enum": [
            "Json"
          ],
          "x-ms-enum": {
            "name": "SourceSerializationFormat",
            "modelAsString": true,
            "values": [
              {
                "name": "Json",
                "value": "Json",
                "description": "JSON Format"
              }
            ]
          }
        },
        "schemaRef": {
          "type": "string",
          "description": "Schema CR reference. Data will be deserialized according to the schema, and dropped if it doesn't match."
        },
        "dataSources": {
          "type": "array",
          "description": "List of source locations. Can be Broker or Kafka topics. Supports wildcards # and +.",
          "items": {
            "$ref": "#/definitions/NonEmptyString"
          }
        }
      },
      "required": [
        "endpointRef",
        "dataSources"
      ]
    },
    "DiagnosticsLogs": {
      "type": "object",
      "description": "Diagnostic Log properties",
      "properties": {
        "level": {
          "type": "string",
          "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
          "default": "info"
        }
      }
    },
    "DiskBackedMessageBuffer": {
      "type": "object",
      "description": "DiskBackedMessageBuffer properties",
      "properties": {
        "maxSize": {
          "type": "string",
          "description": "The max size of the message buffer on disk. If a PVC template is specified using one of ephemeralVolumeClaimSpec or persistentVolumeClaimSpec, then this size is used as the request and limit sizes of that template. If neither ephemeralVolumeClaimSpec nor persistentVolumeClaimSpec are specified, then an emptyDir volume is mounted with this size as its limit. See <https://kubernetes.io/docs/concepts/storage/volumes/#emptydir> for details.",
          "pattern": "^[0-9]+[KMGTPE]$"
        },
        "ephemeralVolumeClaimSpec": {
          "$ref": "#/definitions/VolumeClaimSpec",
          "description": "Use the specified persistent volume claim template to mount a \"generic ephemeral volume\" for the message buffer. See <https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes> for details."
        },
        "persistentVolumeClaimSpec": {
          "$ref": "#/definitions/VolumeClaimSpec",
          "description": "Use the specified persistent volume claim template to mount a persistent volume for the message buffer."
        }
      },
      "required": [
        "maxSize"
      ]
    },
    "EndpointType": {
      "type": "string",
      "description": "DataflowEndpoint Type properties",
      "enum": [
        "DataExplorer",
        "DataLakeStorage",
        "FabricOneLake",
        "Kafka",
        "LocalStorage",
        "Mqtt",
        "OpenTelemetry"
      ],
      "x-ms-enum": {
        "name": "EndpointType",
        "modelAsString": true,
        "values": [
          {
            "name": "DataExplorer",
            "value": "DataExplorer",
            "description": "Azure Data Explorer Type"
          },
          {
            "name": "DataLakeStorage",
            "value": "DataLakeStorage",
            "description": "Azure Data Lake Type"
          },
          {
            "name": "FabricOneLake",
            "value": "FabricOneLake",
            "description": "Microsoft Fabric Type"
          },
          {
            "name": "Kafka",
            "value": "Kafka",
            "description": "Kafka Type"
          },
          {
            "name": "LocalStorage",
            "value": "LocalStorage",
            "description": "Local Storage Type"
          },
          {
            "name": "Mqtt",
            "value": "Mqtt",
            "description": "Broker Type"
          },
          {
            "name": "OpenTelemetry",
            "value": "OpenTelemetry",
            "description": "OpenTelemetry Type"
          }
        ]
      }
    },
    "ExtendedLocation": {
      "type": "object",
      "description": "Extended location is an extension of Azure locations. They provide a way to use their Azure ARC enabled Kubernetes clusters as target locations for deploying Azure services instances.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the extended location."
        },
        "type": {
          "$ref": "#/definitions/ExtendedLocationType",
          "description": "Type of ExtendedLocation."
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "ExtendedLocationType": {
      "type": "string",
      "description": "The enum defining type of ExtendedLocation accepted.",
      "enum": [
        "CustomLocation"
      ],
      "x-ms-enum": {
        "name": "ExtendedLocationType",
        "modelAsString": true,
        "values": [
          {
            "name": "CustomLocation",
            "value": "CustomLocation",
            "description": "CustomLocation type"
          }
        ]
      }
    },
    "FabricOneLakeAuthMethod": {
      "$ref": "#/definitions/ManagedIdentityMethod",
      "x-nullable": false
    },
    "FilterType": {
      "type": "string",
      "description": "Filter Type properties",
      "enum": [
        "Filter"
      ],
      "x-ms-enum": {
        "name": "FilterType",
        "modelAsString": true,
        "values": [
          {
            "name": "Filter",
            "value": "Filter",
            "description": "Filter type"
          }
        ]
      }
    },
    "Frontend": {
      "type": "object",
      "description": "The desired properties of the frontend instances of the Broker",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32",
          "description": "The desired number of frontend instances (pods).",
          "minimum": 1,
          "maximum": 16
        },
        "workers": {
          "type": "integer",
          "format": "int32",
          "description": "Number of logical frontend workers per instance (pod).",
          "default": 2,
          "minimum": 1,
          "maximum": 16
        }
      },
      "required": [
        "replicas"
      ]
    },
    "GenerateResourceLimits": {
      "type": "object",
      "description": "GenerateResourceLimits properties",
      "properties": {
        "cpu": {
          "type": "string",
          "description": "The toggle to enable/disable cpu resource limits.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        }
      }
    },
    "InstanceFeature": {
      "type": "object",
      "description": "The features of the AIO Instance.",
      "properties": {
        "mode": {
          "$ref": "#/definitions/InstanceFeatureMode",
          "description": "The state of the feature."
        },
        "settings": {
          "type": "object",
          "description": "The settings of the feature.",
          "additionalProperties": {
            "$ref": "#/definitions/OperationalMode"
          }
        }
      }
    },
    "InstanceFeatureMode": {
      "type": "string",
      "description": "The enum defining mode of a feature.",
      "enum": [
        "Stable",
        "Preview",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "InstanceFeatureMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Stable",
            "value": "Stable",
            "description": "Opt in to enable a stable feature"
          },
          {
            "name": "Preview",
            "value": "Preview",
            "description": "Opt in to enable a preview feature"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Opt out of a feature"
          }
        ]
      }
    },
    "InstancePatchModel": {
      "type": "object",
      "description": "The Instance update model.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      }
    },
    "InstanceProperties": {
      "type": "object",
      "description": "The properties of the Instance resource.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Detailed description of the Instance."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "The Azure IoT Operations version.",
          "readOnly": true
        },
        "schemaRegistryRef": {
          "$ref": "#/definitions/SchemaRegistryRef",
          "description": "The reference to the Schema Registry for this AIO Instance."
        },
        "defaultSecretProviderClassRef": {
          "$ref": "#/definitions/SecretProviderClassRef",
          "description": "The reference to the AIO Secret provider class."
        },
        "features": {
          "type": "object",
          "description": "The features of the AIO Instance.",
          "additionalProperties": {
            "$ref": "#/definitions/InstanceFeature"
          }
        },
        "adrNamespaceRef": {
          "$ref": "#/definitions/AzureDeviceRegistryNamespaceRef",
          "description": "The Azure Device Registry Namespace used by Assets, Discovered Assets and devices"
        }
      },
      "required": [
        "schemaRegistryRef"
      ]
    },
    "InstanceResource": {
      "type": "object",
      "description": "A Instance resource is a logical container for a set of child resources.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/InstanceProperties",
          "description": "The resource-specific properties for this resource."
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "required": [
        "extendedLocation"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "InstanceResourceListResult": {
      "type": "object",
      "description": "The response of a InstanceResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The InstanceResource items on this page",
          "items": {
            "$ref": "#/definitions/InstanceResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "KafkaAuthMethod": {
      "type": "string",
      "description": "DataflowEndpoint Kafka Authentication Method properties",
      "enum": [
        "SystemAssignedManagedIdentity",
        "UserAssignedManagedIdentity",
        "Sasl",
        "X509Certificate",
        "Anonymous"
      ],
      "x-ms-enum": {
        "name": "KafkaAuthMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "SystemAssignedManagedIdentity",
            "value": "SystemAssignedManagedIdentity",
            "description": "SystemAssignedManagedIdentity type"
          },
          {
            "name": "UserAssignedManagedIdentity",
            "value": "UserAssignedManagedIdentity",
            "description": "UserAssignedManagedIdentity type"
          },
          {
            "name": "Sasl",
            "value": "Sasl",
            "description": "Sasl Option"
          },
          {
            "name": "X509Certificate",
            "value": "X509Certificate",
            "description": "x509Certificate Option"
          },
          {
            "name": "Anonymous",
            "value": "Anonymous",
            "description": "Anonymous Option"
          }
        ]
      }
    },
    "KubernetesReference": {
      "type": "object",
      "description": "Kubernetes reference",
      "properties": {
        "apiGroup": {
          "type": "string",
          "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
        },
        "kind": {
          "type": "string",
          "description": "Kind is the type of resource being referenced"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of resource being referenced"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
        }
      },
      "required": [
        "kind",
        "name"
      ]
    },
    "ListenerPort": {
      "type": "object",
      "description": "Defines a TCP port on which a `BrokerListener` listens.",
      "properties": {
        "authenticationRef": {
          "type": "string",
          "description": "Reference to client authentication settings. Omit to disable authentication."
        },
        "authorizationRef": {
          "type": "string",
          "description": "Reference to client authorization settings. Omit to disable authorization."
        },
        "nodePort": {
          "type": "integer",
          "format": "int32",
          "description": "Kubernetes node port. Only relevant when this port is associated with a `NodePort` listener.",
          "minimum": 0,
          "maximum": 65535
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "TCP port for accepting client connections.",
          "minimum": 0,
          "maximum": 65535
        },
        "protocol": {
          "type": "string",
          "description": "Protocol to use for client connections.",
          "default": "Mqtt",
          "enum": [
            "Mqtt",
            "WebSockets"
          ],
          "x-ms-enum": {
            "name": "BrokerProtocolType",
            "modelAsString": true,
            "values": [
              {
                "name": "Mqtt",
                "value": "Mqtt",
                "description": "protocol broker"
              },
              {
                "name": "WebSockets",
                "value": "WebSockets",
                "description": "protocol websocket"
              }
            ]
          }
        },
        "tls": {
          "$ref": "#/definitions/TlsCertMethod",
          "description": "TLS server certificate settings for this port. Omit to disable TLS."
        }
      },
      "required": [
        "port"
      ]
    },
    "LocalKubernetesReference": {
      "type": "object",
      "description": "Kubernetes reference",
      "properties": {
        "apiGroup": {
          "type": "string",
          "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
        },
        "kind": {
          "type": "string",
          "description": "Kind is the type of resource being referenced"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of resource being referenced"
        }
      },
      "required": [
        "kind",
        "name"
      ]
    },
    "ManagedIdentity": {
      "type": "object",
      "description": "System and Use Assigned Managed Identity properties",
      "properties": {
        "systemAssignedManagedIdentitySettings": {
          "$ref": "#/definitions/DataflowEndpointAuthenticationSystemAssignedManagedIdentity",
          "description": "System-assigned managed identity authentication."
        },
        "userAssignedManagedIdentitySettings": {
          "$ref": "#/definitions/DataflowEndpointAuthenticationUserAssignedManagedIdentity",
          "description": "User-assigned managed identity authentication."
        }
      }
    },
    "ManagedIdentityMethod": {
      "type": "string",
      "description": "Managed Identity Method",
      "enum": [
        "SystemAssignedManagedIdentity",
        "UserAssignedManagedIdentity"
      ],
      "x-ms-enum": {
        "name": "ManagedIdentityMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "SystemAssignedManagedIdentity",
            "value": "SystemAssignedManagedIdentity",
            "description": "SystemAssignedManagedIdentity type"
          },
          {
            "name": "UserAssignedManagedIdentity",
            "value": "UserAssignedManagedIdentity",
            "description": "UserAssignedManagedIdentity type"
          }
        ]
      }
    },
    "MetricProperties": {
      "type": "object",
      "description": "Metric properties",
      "properties": {
        "logs": {
          "$ref": "#/definitions/DiagnosticsLogs",
          "description": "Diagnostic log settings for the resource."
        },
        "metrics": {
          "$ref": "#/definitions/Metrics",
          "description": "The metrics settings for the resource."
        }
      }
    },
    "Metrics": {
      "type": "object",
      "description": "Diagnostic Metrics properties",
      "properties": {
        "prometheusPort": {
          "type": "integer",
          "format": "int32",
          "description": "The prometheus port to expose the metrics.",
          "default": 9600,
          "minimum": 0,
          "maximum": 65535
        }
      }
    },
    "MqttAuthMethod": {
      "type": "string",
      "description": "DataflowEndpoint Mqtt Authentication Method properties",
      "enum": [
        "SystemAssignedManagedIdentity",
        "UserAssignedManagedIdentity",
        "ServiceAccountToken",
        "X509Certificate",
        "Anonymous"
      ],
      "x-ms-enum": {
        "name": "MqttAuthMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "SystemAssignedManagedIdentity",
            "value": "SystemAssignedManagedIdentity",
            "description": "SystemAssignedManagedIdentity type"
          },
          {
            "name": "UserAssignedManagedIdentity",
            "value": "UserAssignedManagedIdentity",
            "description": "UserAssignedManagedIdentity type"
          },
          {
            "name": "ServiceAccountToken",
            "value": "ServiceAccountToken",
            "description": "ServiceAccountToken Option"
          },
          {
            "name": "X509Certificate",
            "value": "X509Certificate",
            "description": "x509Certificate Option"
          },
          {
            "name": "Anonymous",
            "value": "Anonymous",
            "description": "Anonymous Option"
          }
        ]
      }
    },
    "MqttRetainType": {
      "type": "string",
      "description": "Broker Retain types",
      "enum": [
        "Keep",
        "Never"
      ],
      "x-ms-enum": {
        "name": "MqttRetainType",
        "modelAsString": true,
        "values": [
          {
            "name": "Keep",
            "value": "Keep",
            "description": "Retain the messages."
          },
          {
            "name": "Never",
            "value": "Never",
            "description": "Never retain messages."
          }
        ]
      }
    },
    "NonEmptyString": {
      "type": "string",
      "description": "A string with a minimum length of 1.",
      "minLength": 1
    },
    "OperationType": {
      "type": "string",
      "description": "Dataflow Operation Type properties",
      "enum": [
        "Source",
        "Destination",
        "BuiltInTransformation"
      ],
      "x-ms-enum": {
        "name": "OperationType",
        "modelAsString": true,
        "values": [
          {
            "name": "Source",
            "value": "Source",
            "description": "Dataflow Source Operation"
          },
          {
            "name": "Destination",
            "value": "Destination",
            "description": "Dataflow Destination Operation"
          },
          {
            "name": "BuiltInTransformation",
            "value": "BuiltInTransformation",
            "description": "Dataflow BuiltIn Transformation Operation"
          }
        ]
      }
    },
    "OperationalMode": {
      "type": "string",
      "description": "Mode properties",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "OperationalMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Enabled is equivalent to True"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Disabled is equivalent to False."
          }
        ]
      }
    },
    "OperatorValues": {
      "type": "string",
      "description": "Valid operators are In, NotIn, Exists and DoesNotExist.",
      "enum": [
        "In",
        "NotIn",
        "Exists",
        "DoesNotExist"
      ],
      "x-ms-enum": {
        "name": "OperatorValues",
        "modelAsString": true,
        "values": [
          {
            "name": "In",
            "value": "In",
            "description": "In operator."
          },
          {
            "name": "NotIn",
            "value": "NotIn",
            "description": "NotIn operator."
          },
          {
            "name": "Exists",
            "value": "Exists",
            "description": "Exists operator."
          },
          {
            "name": "DoesNotExist",
            "value": "DoesNotExist",
            "description": "DoesNotExist operator."
          }
        ]
      }
    },
    "PrincipalDefinition": {
      "type": "object",
      "description": "PrincipalDefinition properties of Rule",
      "properties": {
        "attributes": {
          "type": "array",
          "description": "A list of key-value pairs that match the attributes of the clients. The attributes are case-sensitive and must match the attributes provided by the clients during authentication.",
          "default": [],
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "x-ms-identifiers": []
        },
        "clientIds": {
          "type": "array",
          "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection.",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "usernames": {
          "type": "array",
          "description": "A list of usernames that match the clients. The usernames are case-sensitive and must match the usernames provided by the clients during authentication.",
          "default": [],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrivateKeyAlgorithm": {
      "type": "string",
      "description": "Private key algorithm types.",
      "enum": [
        "Ec256",
        "Ec384",
        "Ec521",
        "Ed25519",
        "Rsa2048",
        "Rsa4096",
        "Rsa8192"
      ],
      "x-ms-enum": {
        "name": "PrivateKeyAlgorithm",
        "modelAsString": true,
        "values": [
          {
            "name": "Ec256",
            "value": "Ec256",
            "description": "Algorithm - ec256."
          },
          {
            "name": "Ec384",
            "value": "Ec384",
            "description": "Algorithm - ec384."
          },
          {
            "name": "Ec521",
            "value": "Ec521",
            "description": "Algorithm - ec521."
          },
          {
            "name": "Ed25519",
            "value": "Ed25519",
            "description": "Algorithm - ed25519."
          },
          {
            "name": "Rsa2048",
            "value": "Rsa2048",
            "description": "Algorithm - rsa2048."
          },
          {
            "name": "Rsa4096",
            "value": "Rsa4096",
            "description": "Algorithm - rsa4096."
          },
          {
            "name": "Rsa8192",
            "value": "Rsa8192",
            "description": "Algorithm - rsa8192."
          }
        ]
      }
    },
    "PrivateKeyRotationPolicy": {
      "type": "string",
      "description": "Private key rotation policy.",
      "enum": [
        "Always",
        "Never"
      ],
      "x-ms-enum": {
        "name": "PrivateKeyRotationPolicy",
        "modelAsString": true,
        "values": [
          {
            "name": "Always",
            "value": "Always",
            "description": "Rotation Policy - Always."
          },
          {
            "name": "Never",
            "value": "Never",
            "description": "Rotation Policy - Never."
          }
        ]
      }
    },
    "ProfileDiagnostics": {
      "type": "object",
      "description": "DataflowProfile Diagnostics properties",
      "properties": {
        "logs": {
          "$ref": "#/definitions/DiagnosticsLogs",
          "description": "Diagnostic log settings for the resource."
        },
        "metrics": {
          "$ref": "#/definitions/Metrics",
          "description": "The metrics settings for the resource."
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The enum defining status of resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Resource is getting provisioned."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Resource is Updating."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Resource is Deleting."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Resource has been Accepted."
          }
        ]
      },
      "readOnly": true
    },
    "RegistryEndpointAnonymousAuthentication": {
      "type": "object",
      "description": "Anonymous authentication",
      "properties": {
        "anonymousSettings": {
          "$ref": "#/definitions/RegistryEndpointAnonymousSettings",
          "description": "Anonymous authentication properties"
        }
      },
      "required": [
        "anonymousSettings"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/RegistryEndpointAuthentication"
        }
      ],
      "x-ms-discriminator-value": "Anonymous"
    },
    "RegistryEndpointAnonymousSettings": {
      "type": "object",
      "description": "RegistryEndpoint Anonymous authentication properties",
      "additionalProperties": false
    },
    "RegistryEndpointArtifactPullSecretAuthentication": {
      "type": "object",
      "description": "Artifact Pull Secret authentication",
      "properties": {
        "artifactPullSecretSettings": {
          "$ref": "#/definitions/RegistryEndpointArtifactPullSecretSettings",
          "description": "Artifact Pull Secret authentication properties"
        }
      },
      "required": [
        "artifactPullSecretSettings"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/RegistryEndpointAuthentication"
        }
      ],
      "x-ms-discriminator-value": "ArtifactPullSecret"
    },
    "RegistryEndpointArtifactPullSecretSettings": {
      "type": "object",
      "description": "RegistryEndpoint Artifact Pull Secret authentication properties",
      "properties": {
        "secretRef": {
          "type": "string",
          "description": "The name of the kubernetes secret that contains the artifact pull secret."
        }
      },
      "required": [
        "secretRef"
      ]
    },
    "RegistryEndpointAuthentication": {
      "type": "object",
      "description": "Model for RegistryEndpointAuthentication",
      "properties": {
        "method": {
          "$ref": "#/definitions/RegistryEndpointAuthenticationMethod",
          "description": "The authentication method."
        }
      },
      "discriminator": "method",
      "required": [
        "method"
      ]
    },
    "RegistryEndpointAuthenticationMethod": {
      "type": "string",
      "description": "The authentication method.",
      "enum": [
        "SystemAssignedManagedIdentity",
        "UserAssignedManagedIdentity",
        "Anonymous",
        "ArtifactPullSecret"
      ],
      "x-ms-enum": {
        "name": "RegistryEndpointAuthenticationMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "SystemAssignedManagedIdentity",
            "value": "SystemAssignedManagedIdentity",
            "description": "SystemAssignedManagedIdentity type"
          },
          {
            "name": "UserAssignedManagedIdentity",
            "value": "UserAssignedManagedIdentity",
            "description": "UserAssignedManagedIdentity type"
          },
          {
            "name": "Anonymous",
            "value": "Anonymous",
            "description": "Anonymous Option"
          },
          {
            "name": "ArtifactPullSecret",
            "value": "ArtifactPullSecret",
            "description": "Artifact Pull Secret authentication"
          }
        ]
      }
    },
    "RegistryEndpointProperties": {
      "type": "object",
      "description": "RegistryEndpoint properties",
      "properties": {
        "host": {
          "type": "string",
          "description": "The Container Registry endpoint hostname.",
          "minLength": 3,
          "maxLength": 63
        },
        "authentication": {
          "$ref": "#/definitions/RegistryEndpointAuthentication",
          "description": "The authentication settings for the Azure Container Registry."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "trustSettings": {
          "$ref": "#/definitions/RegistryEndpointTrustedSettings",
          "description": "Trust settings for the registry endpoint"
        }
      },
      "required": [
        "host",
        "authentication"
      ]
    },
    "RegistryEndpointResource": {
      "type": "object",
      "description": "RegistryEndpoint resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RegistryEndpointProperties",
          "description": "The resource-specific properties for this resource."
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "RegistryEndpointResourceListResult": {
      "type": "object",
      "description": "The response of a RegistryEndpointResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The RegistryEndpointResource items on this page",
          "items": {
            "$ref": "#/definitions/RegistryEndpointResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "RegistryEndpointSystemAssignedIdentityAuthentication": {
      "type": "object",
      "description": "System assigned identity authentication",
      "properties": {
        "systemAssignedManagedIdentitySettings": {
          "$ref": "#/definitions/RegistryEndpointSystemAssignedManagedIdentitySettings",
          "description": "System assigned managed identity properties"
        }
      },
      "required": [
        "systemAssignedManagedIdentitySettings"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/RegistryEndpointAuthentication"
        }
      ],
      "x-ms-discriminator-value": "SystemAssignedManagedIdentity"
    },
    "RegistryEndpointSystemAssignedManagedIdentitySettings": {
      "type": "object",
      "description": "System assigned managed identity properties",
      "properties": {
        "audience": {
          "type": "string",
          "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
        }
      }
    },
    "RegistryEndpointTrustedSettings": {
      "type": "object",
      "description": "RegistryEndpointTrustedSettings properties",
      "properties": {
        "trustedSigningKeys": {
          "$ref": "#/definitions/RegistryEndpointTrustedSigningKey",
          "description": "The trust properties for the registry endpoint."
        }
      },
      "required": [
        "trustedSigningKeys"
      ]
    },
    "RegistryEndpointTrustedSigningKey": {
      "type": "object",
      "description": "RegistryEndpoint Trust properties",
      "properties": {
        "type": {
          "$ref": "#/definitions/RegistryEndpointTrustedSigningKeyType",
          "description": "The trust type for the registry endpoint."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "RegistryEndpointTrustedSigningKeyConfigMap": {
      "type": "object",
      "description": "Settings for RegistryEndpoint trust provided through a configmap.",
      "properties": {
        "configMapRef": {
          "type": "string",
          "description": "The name of the configmap."
        }
      },
      "required": [
        "configMapRef"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/RegistryEndpointTrustedSigningKey"
        }
      ],
      "x-ms-discriminator-value": "ConfigMap"
    },
    "RegistryEndpointTrustedSigningKeySecret": {
      "type": "object",
      "description": "Settings for RegistryEndpoint trust provided through a secret.",
      "properties": {
        "secretRef": {
          "type": "string",
          "description": "The name of the secret."
        }
      },
      "required": [
        "secretRef"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/RegistryEndpointTrustedSigningKey"
        }
      ],
      "x-ms-discriminator-value": "Secret"
    },
    "RegistryEndpointTrustedSigningKeyType": {
      "type": "string",
      "description": "RegistryEndpointTrustedSigningKeyType values",
      "enum": [
        "Secret",
        "ConfigMap"
      ],
      "x-ms-enum": {
        "name": "RegistryEndpointTrustedSigningKeyType",
        "modelAsString": true,
        "values": [
          {
            "name": "Secret",
            "value": "Secret",
            "description": "Trust settings stored in a Kubernetes Secret."
          },
          {
            "name": "ConfigMap",
            "value": "ConfigMap",
            "description": "Trust settings stored in a Kubernetes ConfigMap."
          }
        ]
      }
    },
    "RegistryEndpointUserAssignedIdentityAuthentication": {
      "type": "object",
      "description": "User assigned identity authentication",
      "properties": {
        "userAssignedManagedIdentitySettings": {
          "$ref": "#/definitions/RegistryEndpointUserAssignedManagedIdentitySettings",
          "description": "User assigned managed identity properties"
        }
      },
      "required": [
        "userAssignedManagedIdentitySettings"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/RegistryEndpointAuthentication"
        }
      ],
      "x-ms-discriminator-value": "UserAssignedManagedIdentity"
    },
    "RegistryEndpointUserAssignedManagedIdentitySettings": {
      "type": "object",
      "description": "User assigned managed identity properties",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "Client ID for the user-assigned managed identity."
        },
        "scope": {
          "type": "string",
          "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
        },
        "tenantId": {
          "type": "string",
          "description": "Tenant ID."
        }
      },
      "required": [
        "clientId",
        "tenantId"
      ]
    },
    "SanForCert": {
      "type": "object",
      "description": "Subject Alternative Names (SANs) for certificate.",
      "properties": {
        "dns": {
          "type": "array",
          "description": "DNS SANs.",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "ip": {
          "type": "array",
          "description": "IP address SANs.",
          "default": [],
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "dns",
        "ip"
      ]
    },
    "SaslMethod": {
      "type": "string",
      "description": "Sasl Method",
      "enum": [
        "Sasl"
      ],
      "x-ms-enum": {
        "name": "SaslMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "Sasl",
            "value": "Sasl",
            "description": "Sasl Option"
          }
        ]
      }
    },
    "SchemaRegistryID": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.DeviceRegistry/schemaRegistries"
          }
        ]
      }
    },
    "SchemaRegistryRef": {
      "type": "object",
      "description": "The reference to the Schema Registry for this AIO Instance.",
      "properties": {
        "resourceId": {
          "$ref": "#/definitions/SchemaRegistryID",
          "description": "The resource ID of the Schema Registry."
        }
      },
      "required": [
        "resourceId"
      ]
    },
    "SecretProviderClassID": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.SecretSyncController/azureKeyVaultSecretProviderClasses"
          }
        ]
      }
    },
    "SecretProviderClassRef": {
      "type": "object",
      "description": "The reference to the AIO Secret provider class.",
      "properties": {
        "resourceId": {
          "$ref": "#/definitions/SecretProviderClassID",
          "description": "The resource ID of the AIO Secret provider class."
        }
      },
      "required": [
        "resourceId"
      ]
    },
    "SelfCheck": {
      "type": "object",
      "description": "Broker Diagnostic Self check properties",
      "properties": {
        "mode": {
          "type": "string",
          "description": "The toggle to enable/disable self check.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        },
        "intervalSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The self check interval.",
          "default": 30,
          "minimum": 30,
          "maximum": 300
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The timeout for self check.",
          "default": 15,
          "minimum": 5,
          "maximum": 120
        }
      }
    },
    "SelfTracing": {
      "type": "object",
      "description": "Diagnostic Self tracing properties",
      "properties": {
        "mode": {
          "type": "string",
          "description": "The toggle to enable/disable self tracing.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        },
        "intervalSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The self tracing interval.",
          "default": 30,
          "minimum": 1,
          "maximum": 300
        }
      }
    },
    "ServiceAccountTokenMethod": {
      "type": "string",
      "description": "Service Account Token Method",
      "enum": [
        "ServiceAccountToken"
      ],
      "x-ms-enum": {
        "name": "ServiceAccountTokenMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "ServiceAccountToken",
            "value": "ServiceAccountToken",
            "description": "ServiceAccountToken Option"
          }
        ]
      }
    },
    "ServiceType": {
      "type": "string",
      "description": "Kubernetes Service Types supported by Listener",
      "enum": [
        "ClusterIp",
        "LoadBalancer",
        "NodePort"
      ],
      "x-ms-enum": {
        "name": "ServiceType",
        "modelAsString": true,
        "values": [
          {
            "name": "ClusterIp",
            "value": "ClusterIp",
            "description": "Cluster IP Service."
          },
          {
            "name": "LoadBalancer",
            "value": "LoadBalancer",
            "description": "Load Balancer Service."
          },
          {
            "name": "NodePort",
            "value": "NodePort",
            "description": "Node Port Service."
          }
        ]
      }
    },
    "SourceSerializationFormat": {
      "type": "string",
      "description": "Serialization Format properties",
      "enum": [
        "Json"
      ],
      "x-ms-enum": {
        "name": "SourceSerializationFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "Json",
            "value": "Json",
            "description": "JSON Format"
          }
        ]
      }
    },
    "StateStoreResourceDefinitionMethods": {
      "type": "string",
      "description": "StateStoreResourceDefinitionMethods methods allowed",
      "enum": [
        "Read",
        "Write",
        "ReadWrite"
      ],
      "x-ms-enum": {
        "name": "StateStoreResourceDefinitionMethods",
        "modelAsString": true,
        "values": [
          {
            "name": "Read",
            "value": "Read",
            "description": "Get/KeyNotify from Store"
          },
          {
            "name": "Write",
            "value": "Write",
            "description": "Set/Delete in Store"
          },
          {
            "name": "ReadWrite",
            "value": "ReadWrite",
            "description": "Allowed all operations on Store - Get/KeyNotify/Set/Delete"
          }
        ]
      }
    },
    "StateStoreResourceKeyTypes": {
      "type": "string",
      "description": "StateStoreResourceKeyTypes properties",
      "enum": [
        "Pattern",
        "String",
        "Binary"
      ],
      "x-ms-enum": {
        "name": "StateStoreResourceKeyTypes",
        "modelAsString": true,
        "values": [
          {
            "name": "Pattern",
            "value": "Pattern",
            "description": "Key type - pattern"
          },
          {
            "name": "String",
            "value": "String",
            "description": "Key type - string"
          },
          {
            "name": "Binary",
            "value": "Binary",
            "description": "Key type - binary"
          }
        ]
      }
    },
    "StateStoreResourceRule": {
      "type": "object",
      "description": "State Store Resource Rule properties.",
      "properties": {
        "keyType": {
          "$ref": "#/definitions/StateStoreResourceKeyTypes",
          "description": "Allowed keyTypes pattern, string, binary. The key type used for matching, for example pattern tries to match the key to a glob-style pattern and string checks key is equal to value provided in keys."
        },
        "keys": {
          "type": "array",
          "description": "Give access to state store keys for the corresponding principals defined. When key type is pattern set glob-style pattern (e.g., '*', 'clients/*').",
          "items": {
            "type": "string"
          }
        },
        "method": {
          "$ref": "#/definitions/StateStoreResourceDefinitionMethods",
          "description": "Give access for `Read`, `Write` and `ReadWrite` access level."
        }
      },
      "required": [
        "keyType",
        "keys",
        "method"
      ]
    },
    "SubscriberMessageDropStrategy": {
      "type": "string",
      "description": "The enum defining strategies for dropping messages from the subscriber queue.",
      "enum": [
        "None",
        "DropOldest"
      ],
      "x-ms-enum": {
        "name": "SubscriberMessageDropStrategy",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "Messages are never dropped."
          },
          {
            "name": "DropOldest",
            "value": "DropOldest",
            "description": "The oldest message is dropped."
          }
        ]
      }
    },
    "SubscriberQueueLimit": {
      "type": "object",
      "description": "The settings of Subscriber Queue Limit.",
      "properties": {
        "length": {
          "type": "integer",
          "format": "int64",
          "description": "The maximum length of the queue before messages start getting dropped.",
          "minimum": 1
        },
        "strategy": {
          "type": "string",
          "description": "The strategy to use for dropping messages from the queue.",
          "default": "None",
          "enum": [
            "None",
            "DropOldest"
          ],
          "x-ms-enum": {
            "name": "SubscriberMessageDropStrategy",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None",
                "description": "Messages are never dropped."
              },
              {
                "name": "DropOldest",
                "value": "DropOldest",
                "description": "The oldest message is dropped."
              }
            ]
          }
        }
      }
    },
    "TlsCertMethod": {
      "type": "object",
      "description": "Collection of different TLS types, NOTE- Enum at a time only one of them needs to be supported",
      "properties": {
        "mode": {
          "$ref": "#/definitions/TlsCertMethodMode",
          "description": "Mode of TLS server certificate management."
        },
        "certManagerCertificateSpec": {
          "$ref": "#/definitions/CertManagerCertificateSpec",
          "description": "Option 1 - Automatic TLS server certificate management with cert-manager."
        },
        "manual": {
          "$ref": "#/definitions/X509ManualCertificate",
          "description": "Option 2 - Manual TLS server certificate management through a defined secret."
        }
      },
      "required": [
        "mode"
      ]
    },
    "TlsCertMethodMode": {
      "type": "string",
      "description": "Broker Authentication Mode",
      "enum": [
        "Automatic",
        "Manual"
      ],
      "x-ms-enum": {
        "name": "TlsCertMethodMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Automatic",
            "value": "Automatic",
            "description": "Automatic TLS server certificate configuration."
          },
          {
            "name": "Manual",
            "value": "Manual",
            "description": "Manual TLS server certificate configuration."
          }
        ]
      }
    },
    "TlsProperties": {
      "type": "object",
      "description": "Tls properties",
      "properties": {
        "mode": {
          "type": "string",
          "description": "Mode for TLS.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        },
        "trustedCaCertificateConfigMapRef": {
          "type": "string",
          "description": "Trusted CA certificate config map."
        }
      }
    },
    "Traces": {
      "type": "object",
      "description": "Broker Diagnostic Trace properties",
      "properties": {
        "mode": {
          "type": "string",
          "description": "The toggle to enable/disable traces.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        },
        "cacheSizeMegabytes": {
          "type": "integer",
          "format": "int32",
          "description": "The cache size in megabytes.",
          "default": 16,
          "minimum": 1,
          "maximum": 128
        },
        "selfTracing": {
          "$ref": "#/definitions/SelfTracing",
          "description": "The self tracing properties."
        },
        "spanChannelCapacity": {
          "type": "integer",
          "format": "int32",
          "description": "The span channel capacity.",
          "default": 1000,
          "minimum": 1000,
          "maximum": 100000
        }
      }
    },
    "TransformationSerializationFormat": {
      "type": "string",
      "description": "Transformation Format properties",
      "enum": [
        "Delta",
        "Json",
        "Parquet"
      ],
      "x-ms-enum": {
        "name": "TransformationSerializationFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "Delta",
            "value": "Delta",
            "description": "Delta Format"
          },
          {
            "name": "Json",
            "value": "Json",
            "description": "JSON Format"
          },
          {
            "name": "Parquet",
            "value": "Parquet",
            "description": "Parquet Format"
          }
        ]
      }
    },
    "VolumeClaimResourceRequirements": {
      "type": "object",
      "description": "VolumeClaimResourceRequirements properties",
      "properties": {
        "limits": {
          "type": "object",
          "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "additionalProperties": {
            "type": "string"
          }
        },
        "requests": {
          "type": "object",
          "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "additionalProperties": {
            "type": "string"
          }
        },
        "claims": {
          "type": "array",
          "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
          "items": {
            "$ref": "#/definitions/VolumeClaimResourceRequirementsClaims"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "VolumeClaimResourceRequirementsClaims": {
      "type": "object",
      "description": "VolumeClaimResourceRequirementsClaims properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
        }
      },
      "required": [
        "name"
      ]
    },
    "VolumeClaimSpec": {
      "type": "object",
      "description": "VolumeClaimSpec properties",
      "properties": {
        "volumeName": {
          "type": "string",
          "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
        },
        "volumeMode": {
          "type": "string",
          "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
        },
        "storageClassName": {
          "type": "string",
          "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
        },
        "accessModes": {
          "type": "array",
          "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
          "items": {
            "type": "string"
          }
        },
        "dataSource": {
          "$ref": "#/definitions/LocalKubernetesReference",
          "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field."
        },
        "dataSourceRef": {
          "$ref": "#/definitions/KubernetesReference",
          "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled."
        },
        "resources": {
          "$ref": "#/definitions/VolumeClaimResourceRequirements",
          "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources"
        },
        "selector": {
          "$ref": "#/definitions/VolumeClaimSpecSelector",
          "description": "A label query over volumes to consider for binding."
        }
      }
    },
    "VolumeClaimSpecSelector": {
      "type": "object",
      "description": "VolumeClaimSpecSelector properties",
      "properties": {
        "matchExpressions": {
          "type": "array",
          "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
          "items": {
            "$ref": "#/definitions/VolumeClaimSpecSelectorMatchExpressions"
          },
          "x-ms-identifiers": []
        },
        "matchLabels": {
          "type": "object",
          "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "VolumeClaimSpecSelectorMatchExpressions": {
      "type": "object",
      "description": "VolumeClaimSpecSelectorMatchExpressions properties",
      "properties": {
        "key": {
          "type": "string",
          "description": "key is the label key that the selector applies to."
        },
        "operator": {
          "$ref": "#/definitions/OperatorValues",
          "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist."
        },
        "values": {
          "type": "array",
          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "key",
        "operator"
      ]
    },
    "X509ManualCertificate": {
      "type": "object",
      "description": "X509 Certificate Authentication properties.",
      "properties": {
        "secretRef": {
          "type": "string",
          "description": "Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself."
        }
      },
      "required": [
        "secretRef"
      ]
    },
    "x509CertificateMethod": {
      "type": "string",
      "description": "x509 Certificate Method",
      "enum": [
        "X509Certificate"
      ],
      "x-ms-enum": {
        "name": "x509CertificateMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "X509Certificate",
            "value": "X509Certificate",
            "description": "x509Certificate Option"
          }
        ]
      }
    }
  },
  "parameters": {}
}
