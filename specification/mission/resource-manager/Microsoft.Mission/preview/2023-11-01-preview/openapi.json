{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft Mission",
    "version": "2023-11-01-preview",
    "description": "Microsoft Mission Resource Provider management API.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Workload"
    },
    {
      "name": "Endpoint"
    },
    {
      "name": "VirtualEnclave"
    },
    {
      "name": "Community"
    },
    {
      "name": "Catalog"
    },
    {
      "name": "InternalConnections"
    },
    {
      "name": "TransitHub"
    },
    {
      "name": "EnclaveConnection"
    },
    {
      "name": "EnclaveEndpoints"
    },
    {
      "name": "CommunityEndpoints"
    },
    {
      "name": "ExternalConnections"
    }
  ],
  "paths": {
    "/providers/Microsoft.Mission/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Mission/catalogs": {
      "get": {
        "operationId": "Catalog_ListBySubscription",
        "tags": [
          "Catalog"
        ],
        "description": "List CatalogResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CatalogResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Catalog_ListBySubscription": {
            "$ref": "./examples/Catalog_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Mission/communities": {
      "get": {
        "operationId": "Community_ListBySubscription",
        "tags": [
          "Community"
        ],
        "description": "List CommunityResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommunityResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Community_ListBySubscription": {
            "$ref": "./examples/Community_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Mission/communities/{communityName}/communityEndpoints": {
      "get": {
        "operationId": "CommunityEndpoints_ListBySubscription",
        "tags": [
          "CommunityEndpoints"
        ],
        "description": "List CommunityEndpointResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommunityEndpointResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CommunityEndpoints_ListBySubscription": {
            "$ref": "./examples/CommunityEndpoints_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Mission/communities/{communityName}/transitHubs": {
      "get": {
        "operationId": "TransitHub_ListBySubscription",
        "tags": [
          "TransitHub"
        ],
        "description": "List TransitHubResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TransitHubResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TransitHub_ListBySubscription": {
            "$ref": "./examples/TransitHub_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Mission/enclaveConnections": {
      "get": {
        "operationId": "EnclaveConnection_ListBySubscription",
        "tags": [
          "EnclaveConnection"
        ],
        "description": "List EnclaveConnectionResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnclaveConnectionResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnclaveConnection_ListBySubscription": {
            "$ref": "./examples/EnclaveConnection_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Mission/externalConnections": {
      "get": {
        "operationId": "ExternalConnections_ListBySubscription",
        "tags": [
          "ExternalConnections"
        ],
        "description": "List ExternalConnection resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ExternalConnectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ExternalConnections_ListBySubscription": {
            "$ref": "./examples/ExternalConnections_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Mission/internalConnections": {
      "get": {
        "operationId": "InternalConnections_ListBySubscription",
        "tags": [
          "InternalConnections"
        ],
        "description": "List InternalConnection resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InternalConnectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternalConnections_ListBySubscription": {
            "$ref": "./examples/InternalConnections_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Mission/virtualEnclaves": {
      "get": {
        "operationId": "VirtualEnclave_ListBySubscription",
        "tags": [
          "VirtualEnclave"
        ],
        "description": "List EnclaveResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnclaveResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VirtualEnclave_ListBySubscription": {
            "$ref": "./examples/VirtualEnclave_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}/enclaveEndpoints": {
      "get": {
        "operationId": "EnclaveEndpoints_ListBySubscription",
        "tags": [
          "EnclaveEndpoints"
        ],
        "description": "List EnclaveEndpointResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnclaveEndpointResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnclaveEndpoints_ListBySubscription": {
            "$ref": "./examples/EnclaveEndpoints_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}/endpoints": {
      "get": {
        "operationId": "Endpoint_ListBySubscription",
        "tags": [
          "Endpoint"
        ],
        "description": "List EndpointResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EndpointResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Endpoint_ListBySubscription": {
            "$ref": "./examples/Endpoint_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}/workloads": {
      "get": {
        "operationId": "Workload_ListBySubscription",
        "tags": [
          "Workload"
        ],
        "description": "List WorkloadResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workload_ListBySubscription": {
            "$ref": "./examples/Workload_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/catalogs": {
      "get": {
        "operationId": "Catalog_ListByResourceGroup",
        "tags": [
          "Catalog"
        ],
        "description": "List CatalogResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CatalogResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Catalog_ListByResourceGroup": {
            "$ref": "./examples/Catalog_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/catalogs/{catalogName}": {
      "get": {
        "operationId": "Catalog_Get",
        "tags": [
          "Catalog"
        ],
        "description": "Get a CatalogResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "catalogName",
            "in": "path",
            "description": "The name of the catalogResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CatalogResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Catalog_Get": {
            "$ref": "./examples/Catalog_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Catalog_CreateOrUpdate",
        "tags": [
          "Catalog"
        ],
        "description": "Create a CatalogResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "catalogName",
            "in": "path",
            "description": "The name of the catalogResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CatalogResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful",
            "schema": {
              "$ref": "#/definitions/CatalogResource"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CatalogResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Catalog_CreateOrUpdate": {
            "$ref": "./examples/Catalog_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Catalog_Update",
        "tags": [
          "Catalog"
        ],
        "description": "Update a CatalogResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "catalogName",
            "in": "path",
            "description": "The name of the catalogResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CatalogResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CatalogResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Catalog_Update": {
            "$ref": "./examples/Catalog_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Catalog_Delete",
        "tags": [
          "Catalog"
        ],
        "description": "Delete a CatalogResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "catalogName",
            "in": "path",
            "description": "The name of the catalogResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Catalog_Delete": {
            "$ref": "./examples/Catalog_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/communities": {
      "get": {
        "operationId": "Community_ListByResourceGroup",
        "tags": [
          "Community"
        ],
        "description": "List CommunityResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommunityResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Community_ListByResourceGroup": {
            "$ref": "./examples/Community_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/communities/{communityName}": {
      "get": {
        "operationId": "Community_Get",
        "tags": [
          "Community"
        ],
        "description": "Get a CommunityResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommunityResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Community_Get": {
            "$ref": "./examples/Community_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Community_CreateOrUpdate",
        "tags": [
          "Community"
        ],
        "description": "Create a CommunityResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommunityResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful",
            "schema": {
              "$ref": "#/definitions/CommunityResource"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommunityResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Community_CreateOrUpdate": {
            "$ref": "./examples/Community_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Community_Update",
        "tags": [
          "Community"
        ],
        "description": "Update a CommunityResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommunityResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommunityResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Community_Update": {
            "$ref": "./examples/Community_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Community_Delete",
        "tags": [
          "Community"
        ],
        "description": "Delete a CommunityResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Community_Delete": {
            "$ref": "./examples/Community_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/communities/{communityName}/communityEndpoints": {
      "get": {
        "operationId": "CommunityEndpoints_ListByCommunityResource",
        "tags": [
          "CommunityEndpoints"
        ],
        "description": "List CommunityEndpointResource resources by CommunityResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommunityEndpointResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CommunityEndpoints_ListByCommunityResource": {
            "$ref": "./examples/CommunityEndpoints_ListByCommunityResource.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/communities/{communityName}/communityEndpoints/{communityEndpointName}": {
      "get": {
        "operationId": "CommunityEndpoints_Get",
        "tags": [
          "CommunityEndpoints"
        ],
        "description": "Get a CommunityEndpointResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "communityEndpointName",
            "in": "path",
            "description": "The name of the Community Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommunityEndpointResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CommunityEndpoints_Get": {
            "$ref": "./examples/CommunityEndpoints_Get.json"
          }
        }
      },
      "put": {
        "operationId": "CommunityEndpoints_CreateOrUpdate",
        "tags": [
          "CommunityEndpoints"
        ],
        "description": "Create a CommunityEndpointResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "communityEndpointName",
            "in": "path",
            "description": "The name of the Community Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommunityEndpointResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful",
            "schema": {
              "$ref": "#/definitions/CommunityEndpointResource"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommunityEndpointResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CommunityEndpoints_CreateOrUpdate": {
            "$ref": "./examples/CommunityEndpoints_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "CommunityEndpoints_Update",
        "tags": [
          "CommunityEndpoints"
        ],
        "description": "Update a CommunityEndpointResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "communityEndpointName",
            "in": "path",
            "description": "The name of the Community Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommunityEndpointResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommunityEndpointResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CommunityEndpoints_Update": {
            "$ref": "./examples/CommunityEndpoints_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "CommunityEndpoints_Delete",
        "tags": [
          "CommunityEndpoints"
        ],
        "description": "Delete a CommunityEndpointResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "communityEndpointName",
            "in": "path",
            "description": "The name of the Community Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CommunityEndpoints_Delete": {
            "$ref": "./examples/CommunityEndpoints_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/communities/{communityName}/transitHubs": {
      "get": {
        "operationId": "TransitHub_ListByCommunityResource",
        "tags": [
          "TransitHub"
        ],
        "description": "List TransitHubResource resources by CommunityResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TransitHubResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TransitHub_ListByCommunityResource": {
            "$ref": "./examples/TransitHub_ListByCommunityResource.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/communities/{communityName}/transitHubs/{transitHubName}": {
      "get": {
        "operationId": "TransitHub_Get",
        "tags": [
          "TransitHub"
        ],
        "description": "Get a TransitHubResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "transitHubName",
            "in": "path",
            "description": "The name of the TransitHub Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TransitHubResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TransitHub_Get": {
            "$ref": "./examples/TransitHub_Get.json"
          }
        }
      },
      "put": {
        "operationId": "TransitHub_CreateOrUpdate",
        "tags": [
          "TransitHub"
        ],
        "description": "Create a TransitHubResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "transitHubName",
            "in": "path",
            "description": "The name of the TransitHub Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransitHubResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful",
            "schema": {
              "$ref": "#/definitions/TransitHubResource"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TransitHubResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TransitHub_CreateOrUpdate": {
            "$ref": "./examples/TransitHub_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "TransitHub_Update",
        "tags": [
          "TransitHub"
        ],
        "description": "Update a TransitHubResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "transitHubName",
            "in": "path",
            "description": "The name of the TransitHub Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransitHubResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TransitHubResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TransitHub_Update": {
            "$ref": "./examples/TransitHub_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "TransitHub_Delete",
        "tags": [
          "TransitHub"
        ],
        "description": "Delete a TransitHubResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "transitHubName",
            "in": "path",
            "description": "The name of the TransitHub Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TransitHub_Delete": {
            "$ref": "./examples/TransitHub_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/enclaveConnections": {
      "get": {
        "operationId": "EnclaveConnection_ListByResourceGroup",
        "tags": [
          "EnclaveConnection"
        ],
        "description": "List EnclaveConnectionResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnclaveConnectionResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnclaveConnection_ListByResourceGroup": {
            "$ref": "./examples/EnclaveConnection_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/enclaveConnections/{enclaveConnectionName}": {
      "get": {
        "operationId": "EnclaveConnection_Get",
        "tags": [
          "EnclaveConnection"
        ],
        "description": "Get a EnclaveConnectionResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "enclaveConnectionName",
            "in": "path",
            "description": "The name of the Enclave Connection Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnclaveConnectionResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnclaveConnection_Get": {
            "$ref": "./examples/EnclaveConnection_Get.json"
          }
        }
      },
      "put": {
        "operationId": "EnclaveConnection_CreateOrUpdate",
        "tags": [
          "EnclaveConnection"
        ],
        "description": "Create a EnclaveConnectionResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "enclaveConnectionName",
            "in": "path",
            "description": "The name of the Enclave Connection Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnclaveConnectionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful",
            "schema": {
              "$ref": "#/definitions/EnclaveConnectionResource"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnclaveConnectionResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnclaveConnection_CreateOrUpdate": {
            "$ref": "./examples/EnclaveConnection_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "EnclaveConnection_Update",
        "tags": [
          "EnclaveConnection"
        ],
        "description": "Update a EnclaveConnectionResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "enclaveConnectionName",
            "in": "path",
            "description": "The name of the Enclave Connection Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnclaveConnectionResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnclaveConnectionResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnclaveConnection_Update": {
            "$ref": "./examples/EnclaveConnection_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "EnclaveConnection_Delete",
        "tags": [
          "EnclaveConnection"
        ],
        "description": "Delete a EnclaveConnectionResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "enclaveConnectionName",
            "in": "path",
            "description": "The name of the Enclave Connection Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnclaveConnection_Delete": {
            "$ref": "./examples/EnclaveConnection_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/externalConnections": {
      "get": {
        "operationId": "ExternalConnections_ListByResourceGroup",
        "tags": [
          "ExternalConnections"
        ],
        "description": "List ExternalConnection resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ExternalConnectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ExternalConnections_ListByResourceGroup": {
            "$ref": "./examples/ExternalConnections_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/externalConnections/{externalConnectionName}": {
      "get": {
        "operationId": "ExternalConnections_Get",
        "tags": [
          "ExternalConnections"
        ],
        "description": "Get a ExternalConnection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "externalConnectionName",
            "in": "path",
            "description": "The name of the external connection.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ExternalConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ExternalConnections_Get": {
            "$ref": "./examples/ExternalConnections_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ExternalConnections_CreateOrUpdate",
        "tags": [
          "ExternalConnections"
        ],
        "description": "Create a ExternalConnection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "externalConnectionName",
            "in": "path",
            "description": "The name of the external connection.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful",
            "schema": {
              "$ref": "#/definitions/ExternalConnection"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ExternalConnection"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ExternalConnections_CreateOrUpdate": {
            "$ref": "./examples/ExternalConnections_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ExternalConnections_Update",
        "tags": [
          "ExternalConnections"
        ],
        "description": "Update a ExternalConnection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "externalConnectionName",
            "in": "path",
            "description": "The name of the external connection.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalConnectionUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ExternalConnection"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ExternalConnections_Update": {
            "$ref": "./examples/ExternalConnections_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ExternalConnections_Delete",
        "tags": [
          "ExternalConnections"
        ],
        "description": "Delete a ExternalConnection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "externalConnectionName",
            "in": "path",
            "description": "The name of the external connection.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ExternalConnections_Delete": {
            "$ref": "./examples/ExternalConnections_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/internalConnections": {
      "get": {
        "operationId": "InternalConnections_ListByResourceGroup",
        "tags": [
          "InternalConnections"
        ],
        "description": "List InternalConnection resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InternalConnectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternalConnections_ListByResourceGroup": {
            "$ref": "./examples/InternalConnections_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/internalConnections/{internalConnectionName}": {
      "get": {
        "operationId": "InternalConnections_Get",
        "tags": [
          "InternalConnections"
        ],
        "description": "Get a InternalConnection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "internalConnectionName",
            "in": "path",
            "description": "The name of the internal connection.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InternalConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternalConnections_Get": {
            "$ref": "./examples/InternalConnections_Get.json"
          }
        }
      },
      "put": {
        "operationId": "InternalConnections_CreateOrUpdate",
        "tags": [
          "InternalConnections"
        ],
        "description": "Create a InternalConnection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "internalConnectionName",
            "in": "path",
            "description": "The name of the internal connection.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InternalConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful",
            "schema": {
              "$ref": "#/definitions/InternalConnection"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InternalConnection"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternalConnections_CreateOrUpdate": {
            "$ref": "./examples/InternalConnections_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "InternalConnections_Update",
        "tags": [
          "InternalConnections"
        ],
        "description": "Update a InternalConnection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "internalConnectionName",
            "in": "path",
            "description": "The name of the internal connection.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InternalConnectionUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InternalConnection"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternalConnections_Update": {
            "$ref": "./examples/InternalConnections_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "InternalConnections_Delete",
        "tags": [
          "InternalConnections"
        ],
        "description": "Delete a InternalConnection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "internalConnectionName",
            "in": "path",
            "description": "The name of the internal connection.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternalConnections_Delete": {
            "$ref": "./examples/InternalConnections_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/virtualEnclaves": {
      "get": {
        "operationId": "VirtualEnclave_ListByResourceGroup",
        "tags": [
          "VirtualEnclave"
        ],
        "description": "List EnclaveResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnclaveResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VirtualEnclave_ListByResourceGroup": {
            "$ref": "./examples/VirtualEnclave_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}": {
      "get": {
        "operationId": "VirtualEnclave_Get",
        "tags": [
          "VirtualEnclave"
        ],
        "description": "Get a EnclaveResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnclaveResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VirtualEnclave_Get": {
            "$ref": "./examples/VirtualEnclave_Get.json"
          }
        }
      },
      "put": {
        "operationId": "VirtualEnclave_CreateOrUpdate",
        "tags": [
          "VirtualEnclave"
        ],
        "description": "Create a EnclaveResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnclaveResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful",
            "schema": {
              "$ref": "#/definitions/EnclaveResource"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnclaveResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VirtualEnclave_CreateOrUpdate": {
            "$ref": "./examples/VirtualEnclave_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "VirtualEnclave_Update",
        "tags": [
          "VirtualEnclave"
        ],
        "description": "Update a EnclaveResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnclaveResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnclaveResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VirtualEnclave_Update": {
            "$ref": "./examples/VirtualEnclave_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "VirtualEnclave_Delete",
        "tags": [
          "VirtualEnclave"
        ],
        "description": "Delete a EnclaveResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VirtualEnclave_Delete": {
            "$ref": "./examples/VirtualEnclave_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}/checkAddressSpaceAvailability": {
      "post": {
        "operationId": "VirtualEnclave_CheckAddressSpaceAvailability",
        "tags": [
          "VirtualEnclave"
        ],
        "description": "Checks that the IP Address Space to be allocated for this Virtual Enclave is available.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "checkAddressSpaceAvailabilityRequest",
            "in": "body",
            "description": "Check IP Address Space request body.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckAddressSpaceAvailabilityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CheckAddressSpaceAvailabilityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VirtualEnclave_CheckAddressSpaceAvailability": {
            "$ref": "./examples/VirtualEnclave_PostCheckAddressSpaceAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}/enclaveEndpoints": {
      "get": {
        "operationId": "EnclaveEndpoints_ListByEnclaveResource",
        "tags": [
          "EnclaveEndpoints"
        ],
        "description": "List EnclaveEndpointResource resources by EnclaveResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnclaveEndpointResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnclaveEndpoints_ListByEnclaveResource": {
            "$ref": "./examples/EnclaveEndpoints_ListByEnclaveResource.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}/enclaveEndpoints/{enclaveEndpointName}": {
      "get": {
        "operationId": "EnclaveEndpoints_Get",
        "tags": [
          "EnclaveEndpoints"
        ],
        "description": "Get a EnclaveEndpointResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "enclaveEndpointName",
            "in": "path",
            "description": "The name of the Enclave Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnclaveEndpointResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnclaveEndpoints_Get": {
            "$ref": "./examples/EnclaveEndpoints_Get.json"
          }
        }
      },
      "put": {
        "operationId": "EnclaveEndpoints_CreateOrUpdate",
        "tags": [
          "EnclaveEndpoints"
        ],
        "description": "Create a EnclaveEndpointResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "enclaveEndpointName",
            "in": "path",
            "description": "The name of the Enclave Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnclaveEndpointResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful",
            "schema": {
              "$ref": "#/definitions/EnclaveEndpointResource"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnclaveEndpointResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnclaveEndpoints_CreateOrUpdate": {
            "$ref": "./examples/EnclaveEndpoints_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "EnclaveEndpoints_Update",
        "tags": [
          "EnclaveEndpoints"
        ],
        "description": "Update a EnclaveEndpointResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "enclaveEndpointName",
            "in": "path",
            "description": "The name of the Enclave Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnclaveEndpointResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnclaveEndpointResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnclaveEndpoints_Update": {
            "$ref": "./examples/EnclaveEndpoints_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "EnclaveEndpoints_Delete",
        "tags": [
          "EnclaveEndpoints"
        ],
        "description": "Delete a EnclaveEndpointResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "enclaveEndpointName",
            "in": "path",
            "description": "The name of the Enclave Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnclaveEndpoints_Delete": {
            "$ref": "./examples/EnclaveEndpoints_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}/endpoints": {
      "get": {
        "operationId": "Endpoint_ListByEnclaveResource",
        "tags": [
          "Endpoint"
        ],
        "description": "List EndpointResource resources by EnclaveResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EndpointResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Endpoint_ListByEnclaveResource": {
            "$ref": "./examples/Endpoint_ListByEnclaveResource.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}/endpoints/{endpointName}": {
      "get": {
        "operationId": "Endpoint_Get",
        "tags": [
          "Endpoint"
        ],
        "description": "Get a EndpointResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "The name of the endpointResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EndpointResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Endpoint_Get": {
            "$ref": "./examples/Endpoint_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Endpoint_CreateOrUpdate",
        "tags": [
          "Endpoint"
        ],
        "description": "Create a EndpointResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "The name of the endpointResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndpointResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful",
            "schema": {
              "$ref": "#/definitions/EndpointResource"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EndpointResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Endpoint_CreateOrUpdate": {
            "$ref": "./examples/Endpoint_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Endpoint_Update",
        "tags": [
          "Endpoint"
        ],
        "description": "Update a EndpointResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "The name of the endpointResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndpointResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EndpointResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Endpoint_Update": {
            "$ref": "./examples/Endpoint_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Endpoint_Delete",
        "tags": [
          "Endpoint"
        ],
        "description": "Delete a EndpointResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "The name of the endpointResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Endpoint_Delete": {
            "$ref": "./examples/Endpoint_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}/workloads": {
      "get": {
        "operationId": "Workload_ListByEnclaveResource",
        "tags": [
          "Workload"
        ],
        "description": "List WorkloadResource resources by EnclaveResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workload_ListByEnclaveResource": {
            "$ref": "./examples/Workload_ListByEnclaveResource.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}/workloads/{workloadName}": {
      "get": {
        "operationId": "Workload_Get",
        "tags": [
          "Workload"
        ],
        "description": "Get a WorkloadResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "workloadName",
            "in": "path",
            "description": "The name of the workloadResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workload_Get": {
            "$ref": "./examples/Workload_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Workload_CreateOrUpdate",
        "tags": [
          "Workload"
        ],
        "description": "Create a WorkloadResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "workloadName",
            "in": "path",
            "description": "The name of the workloadResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful",
            "schema": {
              "$ref": "#/definitions/WorkloadResource"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workload_CreateOrUpdate": {
            "$ref": "./examples/Workload_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Workload_Update",
        "tags": [
          "Workload"
        ],
        "description": "Update a WorkloadResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "workloadName",
            "in": "path",
            "description": "The name of the workloadResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workload_Update": {
            "$ref": "./examples/Workload_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Workload_Delete",
        "tags": [
          "Workload"
        ],
        "description": "Delete a WorkloadResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "workloadName",
            "in": "path",
            "description": "The name of the workloadResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workload_Delete": {
            "$ref": "./examples/Workload_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "BlobCatalog": {
      "type": "object",
      "description": "Blob Catalog type.",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Catalog Storage's URI."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CatalogBase"
        }
      ]
    },
    "Catalog": {
      "type": "object",
      "x-nullable": false,
      "allOf": [
        {
          "$ref": "#/definitions/BlobCatalog"
        }
      ]
    },
    "CatalogBase": {
      "type": "object",
      "description": "Base type for catalog.",
      "properties": {
        "catalogStorageType": {
          "$ref": "#/definitions/CatalogStorageType",
          "description": "Catalog's storage type."
        }
      }
    },
    "CatalogProperties": {
      "type": "object",
      "description": "Catalog properties",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning State.",
          "readOnly": true
        },
        "ownedBy": {
          "type": "string",
          "description": "Owning Resource of the Catalog."
        },
        "communityResourceId": {
          "type": "string",
          "description": "Community Resource Id."
        },
        "enclaveResourceId": {
          "type": "string",
          "description": "Virtual Enclave Resource Id."
        },
        "catalog": {
          "$ref": "#/definitions/Catalog",
          "description": "Catalog Connection properties."
        },
        "packageCollection": {
          "type": "array",
          "description": "List of packages for catalog.",
          "items": {
            "$ref": "#/definitions/Package"
          }
        }
      }
    },
    "CatalogResource": {
      "type": "object",
      "description": "Catalog Model Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CatalogProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "CatalogResourceListResult": {
      "type": "object",
      "description": "The response of a CatalogResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CatalogResource items on this page",
          "items": {
            "$ref": "#/definitions/CatalogResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CatalogResourceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the CatalogResource.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/CatalogResourceUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "CatalogResourceUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the CatalogResource.",
      "properties": {
        "ownedBy": {
          "type": "string",
          "description": "Owning Resource of the Catalog."
        },
        "communityResourceId": {
          "type": "string",
          "description": "Community Resource Id."
        },
        "enclaveResourceId": {
          "type": "string",
          "description": "Virtual Enclave Resource Id."
        },
        "catalog": {
          "$ref": "#/definitions/Catalog",
          "description": "Catalog Connection properties."
        },
        "packageCollection": {
          "type": "array",
          "description": "List of packages for catalog.",
          "items": {
            "$ref": "#/definitions/Package"
          }
        }
      }
    },
    "CatalogStorageType": {
      "type": "string",
      "description": "List of storage types support by catalog",
      "enum": [
        "BlobCatalog"
      ],
      "x-ms-enum": {
        "name": "CatalogStorageType",
        "modelAsString": true,
        "values": [
          {
            "name": "BlobCatalog",
            "value": "BlobCatalog",
            "description": "Blob Storage Catalog Type"
          }
        ]
      }
    },
    "CheckAddressSpaceAvailabilityRequest": {
      "type": "object",
      "description": "Request to the action call to check address space availability.",
      "properties": {
        "communityResourceId": {
          "type": "string",
          "description": "Resource Id of the Community"
        },
        "enclaveVirtualNetwork": {
          "$ref": "#/definitions/EnclaveVirtualNetwork",
          "description": "Information about the enclave virtual network"
        }
      },
      "required": [
        "communityResourceId",
        "enclaveVirtualNetwork"
      ]
    },
    "CheckAddressSpaceAvailabilityResponse": {
      "type": "object",
      "description": "Response of availability of the requested address space.",
      "properties": {
        "value": {
          "type": "boolean",
          "description": "Boolean representing whether the address space is available."
        }
      },
      "required": [
        "value"
      ]
    },
    "CommunityEndpointProperties": {
      "type": "object",
      "description": "Community Endpoint Resource properties",
      "properties": {
        "destinationRuleCollection": {
          "type": "array",
          "description": "Destination Rule Collection.",
          "items": {
            "$ref": "#/definitions/DestinationRule"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning State.",
          "readOnly": true
        }
      },
      "required": [
        "destinationRuleCollection"
      ]
    },
    "CommunityEndpointProtocol": {
      "type": "string",
      "description": "Community Endpoint Protocol Enum",
      "enum": [
        "ANY",
        "TCP",
        "UDP",
        "ICMP",
        "ESP",
        "AH"
      ],
      "x-ms-enum": {
        "name": "CommunityEndpointProtocol",
        "modelAsString": true,
        "values": [
          {
            "name": "ANY",
            "value": "ANY",
            "description": "CommunityEndpointProtocol Type ANY"
          },
          {
            "name": "TCP",
            "value": "TCP",
            "description": "CommunityEndpointProtocol Type TCP"
          },
          {
            "name": "UDP",
            "value": "UDP",
            "description": "CommunityEndpointProtocol Type UDP"
          },
          {
            "name": "ICMP",
            "value": "ICMP",
            "description": "CommunityEndpointProtocol Type ICMP"
          },
          {
            "name": "ESP",
            "value": "ESP",
            "description": "CommunityEndpointProtocol Type ESP"
          },
          {
            "name": "AH",
            "value": "AH",
            "description": "CommunityEndpointProtocol Type AH"
          }
        ]
      }
    },
    "CommunityEndpointResource": {
      "type": "object",
      "description": "CommunityEndpoint Model Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CommunityEndpointProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "CommunityEndpointResourceListResult": {
      "type": "object",
      "description": "The response of a CommunityEndpointResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CommunityEndpointResource items on this page",
          "items": {
            "$ref": "#/definitions/CommunityEndpointResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CommunityEndpointResourceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the CommunityEndpointResource.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/CommunityEndpointResourceUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "CommunityEndpointResourceUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the CommunityEndpointResource.",
      "properties": {
        "destinationRuleCollection": {
          "type": "array",
          "description": "Destination Rule Collection.",
          "items": {
            "$ref": "#/definitions/DestinationRule"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "CommunityProperties": {
      "type": "object",
      "description": "Community Resource Properties",
      "properties": {
        "addressSpace": {
          "type": "string",
          "description": "Address Space."
        },
        "dnsServers": {
          "type": "array",
          "description": "Dns Servers.",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning State.",
          "readOnly": true
        },
        "resourceCollection": {
          "type": "array",
          "description": "List of resource ids created by communities.",
          "items": {
            "type": "string"
          }
        },
        "managedResourceGroupConfiguration": {
          "$ref": "#/definitions/ManagedResourceGroupConfiguration",
          "description": "Managed resource group configuration."
        }
      }
    },
    "CommunityResource": {
      "type": "object",
      "description": "Community Model Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CommunityProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "CommunityResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an ARM resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Mission/communities"
          }
        ]
      }
    },
    "CommunityResourceListResult": {
      "type": "object",
      "description": "The response of a CommunityResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CommunityResource items on this page",
          "items": {
            "$ref": "#/definitions/CommunityResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CommunityResourceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the CommunityResource.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/CommunityResourceUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "CommunityResourceUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the CommunityResource.",
      "properties": {
        "addressSpace": {
          "type": "string",
          "description": "Address Space."
        },
        "dnsServers": {
          "type": "array",
          "description": "Dns Servers.",
          "items": {
            "type": "string"
          }
        },
        "resourceCollection": {
          "type": "array",
          "description": "List of resource ids created by communities.",
          "items": {
            "type": "string"
          }
        },
        "managedResourceGroupConfiguration": {
          "$ref": "#/definitions/ManagedResourceGroupConfiguration",
          "description": "Managed resource group configuration."
        }
      }
    },
    "DestinationEndpointResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an ARM resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Mission/virtualEnclaves/enclaveEndpoints"
          },
          {
            "type": "Microsoft.Mission/communities/communityEndpoints"
          }
        ]
      }
    },
    "DestinationRule": {
      "type": "object",
      "description": "Base type for destination rules.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Destination Rule Name."
        },
        "destinationType": {
          "$ref": "#/definitions/DestinationType",
          "description": "Destination Type."
        },
        "destination": {
          "type": "array",
          "description": "Destination must follow the format for FQDNs if it is selected as the destination type (no IP/CIDR or full web URLs).",
          "items": {
            "type": "string"
          }
        },
        "port": {
          "type": "string",
          "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
        },
        "protocol": {
          "type": "array",
          "description": "Protocol. Options specified by Endpoint Protocol Enum.",
          "items": {
            "$ref": "#/definitions/CommunityEndpointProtocol"
          }
        },
        "transitHubResourceId": {
          "$ref": "#/definitions/TransitHubResourceId",
          "description": "Transit Hub Resource Id."
        }
      },
      "required": [
        "destination"
      ]
    },
    "DestinationType": {
      "type": "string",
      "description": "Destination Type Enum",
      "enum": [
        "FQDN",
        "FQDNTag",
        "IPAddress",
        "PrivateNetwork"
      ],
      "x-ms-enum": {
        "name": "DestinationType",
        "modelAsString": true,
        "values": [
          {
            "name": "FQDN",
            "value": "FQDN",
            "description": "DestinationType Type FQDN"
          },
          {
            "name": "FQDNTag",
            "value": "FQDNTag",
            "description": "DestinationType Type FQDNTag"
          },
          {
            "name": "IPAddress",
            "value": "IPAddress",
            "description": "DestinationType Type IPAddress"
          },
          {
            "name": "PrivateNetwork",
            "value": "PrivateNetwork",
            "description": "DestinationType Type PrivateNetwork"
          }
        ]
      }
    },
    "EnclaveAddressSpaces": {
      "type": "object",
      "description": "Enclave Address Spaces",
      "properties": {
        "enclaveAddressSpace": {
          "type": "string",
          "description": "Enclave Address Space"
        },
        "managedAddressSpace": {
          "type": "string",
          "description": "Managed Address Space"
        }
      },
      "required": [
        "enclaveAddressSpace",
        "managedAddressSpace"
      ]
    },
    "EnclaveConnectionProperties": {
      "type": "object",
      "description": "Enclave Connection Resource properties",
      "properties": {
        "state": {
          "$ref": "#/definitions/EnclaveConnectionState",
          "description": "The state of the enclaveConnection."
        },
        "communityResourceId": {
          "$ref": "#/definitions/CommunityResourceId",
          "description": "Community Resource Id."
        },
        "sourceResourceId": {
          "$ref": "#/definitions/EnclaveConnectionSourceResourceId",
          "description": "Source Resource Id."
        },
        "sourceCidr": {
          "type": "string",
          "description": "Source CIDR."
        },
        "ipGroup": {
          "$ref": "#/definitions/IPGroupResourceId",
          "description": "Source IP group Resource Id."
        },
        "destinationEndpointId": {
          "$ref": "#/definitions/DestinationEndpointResourceId",
          "description": "Destination Endpoint Resource Id."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning State.",
          "readOnly": true
        },
        "resourceCollection": {
          "type": "array",
          "description": "List of resource ids modified by enclave Connections.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "communityResourceId",
        "sourceResourceId",
        "destinationEndpointId"
      ]
    },
    "EnclaveConnectionResource": {
      "type": "object",
      "description": "EnclaveConnection Model Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EnclaveConnectionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "EnclaveConnectionResourceListResult": {
      "type": "object",
      "description": "The response of a EnclaveConnectionResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EnclaveConnectionResource items on this page",
          "items": {
            "$ref": "#/definitions/EnclaveConnectionResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EnclaveConnectionResourceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the EnclaveConnectionResource.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/EnclaveConnectionResourceUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "EnclaveConnectionResourceUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the EnclaveConnectionResource.",
      "properties": {
        "state": {
          "$ref": "#/definitions/EnclaveConnectionState",
          "description": "The state of the enclaveConnection."
        },
        "communityResourceId": {
          "$ref": "#/definitions/CommunityResourceId",
          "description": "Community Resource Id."
        },
        "sourceResourceId": {
          "$ref": "#/definitions/EnclaveConnectionSourceResourceId",
          "description": "Source Resource Id."
        },
        "sourceCidr": {
          "type": "string",
          "description": "Source CIDR."
        },
        "ipGroup": {
          "$ref": "#/definitions/IPGroupResourceId",
          "description": "Source IP group Resource Id."
        },
        "destinationEndpointId": {
          "$ref": "#/definitions/DestinationEndpointResourceId",
          "description": "Destination Endpoint Resource Id."
        },
        "resourceCollection": {
          "type": "array",
          "description": "List of resource ids modified by enclave Connections.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "EnclaveConnectionSourceResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an ARM resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Mission/virtualEnclaves"
          },
          {
            "type": "Microsoft.Mission/communities/transitHubs"
          }
        ]
      }
    },
    "EnclaveConnectionState": {
      "type": "string",
      "description": "Specifies the state of the enclave connection.",
      "enum": [
        "PendingApproval",
        "PendingUpdate",
        "Approved",
        "Active",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "EnclaveConnectionState",
        "modelAsString": true,
        "values": [
          {
            "name": "PendingApproval",
            "value": "PendingApproval",
            "description": "EnclaveConnectionState Type Pending Approval"
          },
          {
            "name": "PendingUpdate",
            "value": "PendingUpdate",
            "description": "EnclaveConnectionState Type Pending Update"
          },
          {
            "name": "Approved",
            "value": "Approved",
            "description": "EnclaveConnectionState Type Approved"
          },
          {
            "name": "Active",
            "value": "Active",
            "description": "EnclaveConnectionState Type Active"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "EnclaveConnectionState Type Failed"
          }
        ]
      }
    },
    "EnclaveDefaultSettings": {
      "type": "object",
      "description": "Virtual Enclave Default Settings",
      "properties": {
        "keyVaultResourceId": {
          "$ref": "#/definitions/KeyVaultResourceId",
          "description": "Key Vault Resource Id."
        },
        "logAnalyticsResourceId": {
          "$ref": "#/definitions/LogAnalyticsResourceId",
          "description": "Log Analytics Resource Id."
        },
        "storageAccountResourceId": {
          "$ref": "#/definitions/StorageAccountResourceId",
          "description": "Storage Account Resource Id."
        }
      }
    },
    "EnclaveEndpointProperties": {
      "type": "object",
      "description": "Enclave Endpoint Resource properties",
      "properties": {
        "endpointRuleCollection": {
          "type": "array",
          "description": "Endpoint Rule Collection.",
          "items": {
            "$ref": "#/definitions/EnclaveEndpointRule"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning State.",
          "readOnly": true
        }
      }
    },
    "EnclaveEndpointProtocol": {
      "type": "string",
      "description": "Enclave Endpoint Protocol Enum",
      "enum": [
        "ANY",
        "TCP",
        "UDP",
        "ICMP",
        "ESP",
        "AH"
      ],
      "x-ms-enum": {
        "name": "EnclaveEndpointProtocol",
        "modelAsString": true,
        "values": [
          {
            "name": "ANY",
            "value": "ANY",
            "description": "EndpointProtocol Type ANY"
          },
          {
            "name": "TCP",
            "value": "TCP",
            "description": "EndpointProtocol Type TCP"
          },
          {
            "name": "UDP",
            "value": "UDP",
            "description": "EndpointProtocol Type UDP"
          },
          {
            "name": "ICMP",
            "value": "ICMP",
            "description": "EndpointProtocol Type ICMP"
          },
          {
            "name": "ESP",
            "value": "ESP",
            "description": "EndpointProtocol Type ESP"
          },
          {
            "name": "AH",
            "value": "AH",
            "description": "EndpointProtocol Type AH"
          }
        ]
      }
    },
    "EnclaveEndpointResource": {
      "type": "object",
      "description": "EnclaveEndpoint Model Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EnclaveEndpointProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "EnclaveEndpointResourceListResult": {
      "type": "object",
      "description": "The response of a EnclaveEndpointResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EnclaveEndpointResource items on this page",
          "items": {
            "$ref": "#/definitions/EnclaveEndpointResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EnclaveEndpointResourceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the EnclaveEndpointResource.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/EnclaveEndpointResourceUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "EnclaveEndpointResourceUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the EnclaveEndpointResource.",
      "properties": {
        "endpointRuleCollection": {
          "type": "array",
          "description": "Endpoint Rule Collection.",
          "items": {
            "$ref": "#/definitions/EnclaveEndpointRule"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "EnclaveEndpointRule": {
      "type": "object",
      "description": "Enclave Endpoint Rule Properties",
      "properties": {
        "name": {
          "type": "string",
          "description": "Endpoint Rule Name."
        },
        "address": {
          "type": "string",
          "description": "IP Address. Can include multiple CIDR/IP Addresses separated by commas."
        },
        "port": {
          "type": "string",
          "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
        },
        "protocol": {
          "$ref": "#/definitions/EnclaveEndpointProtocol",
          "description": "Protocol. Options specified by Endpoint Protocol Enum."
        }
      }
    },
    "EnclaveResource": {
      "type": "object",
      "description": "Virtual Enclave Model Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VirtualEnclaveProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "EnclaveResourceListResult": {
      "type": "object",
      "description": "The response of a EnclaveResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EnclaveResource items on this page",
          "items": {
            "$ref": "#/definitions/EnclaveResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EnclaveResourceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the EnclaveResource.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/EnclaveResourceUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "EnclaveResourceUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the EnclaveResource.",
      "properties": {
        "enclaveVirtualNetwork": {
          "$ref": "#/definitions/EnclaveVirtualNetworkUpdate",
          "description": "Virtual Network."
        },
        "communityResourceId": {
          "$ref": "#/definitions/CommunityResourceId",
          "description": "Community Resource Id."
        },
        "enclaveDefaultSettings": {
          "$ref": "#/definitions/EnclaveDefaultSettings",
          "description": "Default Settings"
        },
        "resourceCollection": {
          "type": "array",
          "description": "List of resource ids created by Virtual Enclave.",
          "items": {
            "type": "string"
          }
        },
        "managedResourceGroupConfiguration": {
          "$ref": "#/definitions/ManagedResourceGroupConfiguration",
          "description": "Managed resource group configuration."
        }
      }
    },
    "EnclaveVirtualNetwork": {
      "type": "object",
      "description": "Enclave Virtual Network Properties",
      "properties": {
        "networkSize": {
          "type": "string",
          "description": "Network Size."
        },
        "customCidrRange": {
          "type": "string",
          "description": "Custom CIDR Range."
        }
      },
      "required": [
        "networkSize"
      ]
    },
    "EnclaveVirtualNetworkUpdate": {
      "type": "object",
      "description": "Enclave Virtual Network Properties",
      "properties": {
        "networkSize": {
          "type": "string",
          "description": "Network Size."
        },
        "customCidrRange": {
          "type": "string",
          "description": "Custom CIDR Range."
        }
      }
    },
    "EndpointProperties": {
      "type": "object",
      "description": "Endpoint Resource properties",
      "properties": {
        "endpointRuleCollection": {
          "type": "array",
          "description": "Endpoint Rule Collection.",
          "items": {
            "$ref": "#/definitions/EndpointRule"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning State.",
          "readOnly": true
        }
      }
    },
    "EndpointProtocol": {
      "type": "string",
      "description": "Endpoint Protocol Enum",
      "enum": [
        "ANY",
        "TCP",
        "UDP",
        "ICMP",
        "ESP",
        "AH"
      ],
      "x-ms-enum": {
        "name": "EndpointProtocol",
        "modelAsString": true,
        "values": [
          {
            "name": "ANY",
            "value": "ANY",
            "description": "EndpointProtocol Type ANY"
          },
          {
            "name": "TCP",
            "value": "TCP",
            "description": "EndpointProtocol Type TCP"
          },
          {
            "name": "UDP",
            "value": "UDP",
            "description": "EndpointProtocol Type UDP"
          },
          {
            "name": "ICMP",
            "value": "ICMP",
            "description": "EndpointProtocol Type ICMP"
          },
          {
            "name": "ESP",
            "value": "ESP",
            "description": "EndpointProtocol Type ESP"
          },
          {
            "name": "AH",
            "value": "AH",
            "description": "EndpointProtocol Type AH"
          }
        ]
      }
    },
    "EndpointResource": {
      "type": "object",
      "description": "Endpoint Model Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EndpointProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "EndpointResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an ARM resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Mission/virtualEnclaves/endpoints"
          }
        ]
      }
    },
    "EndpointResourceListResult": {
      "type": "object",
      "description": "The response of a EndpointResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EndpointResource items on this page",
          "items": {
            "$ref": "#/definitions/EndpointResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EndpointResourceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the EndpointResource.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/EndpointResourceUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "EndpointResourceUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the EndpointResource.",
      "properties": {
        "endpointRuleCollection": {
          "type": "array",
          "description": "Endpoint Rule Collection.",
          "items": {
            "$ref": "#/definitions/EndpointRule"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "EndpointRule": {
      "type": "object",
      "description": "EndpointRule Properties",
      "properties": {
        "name": {
          "type": "string",
          "description": "Endpoint Rule Name."
        },
        "address": {
          "type": "string",
          "description": "IP Address. Can include multiple CIDR/IP Addresses separated by commas."
        },
        "port": {
          "type": "string",
          "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
        },
        "protocol": {
          "$ref": "#/definitions/EndpointProtocol",
          "description": "Protocol. Options specified by Endpoint Protocol Enum."
        }
      }
    },
    "ExternalConnection": {
      "type": "object",
      "description": "Describes an External Connection.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ExternalConnectionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ExternalConnectionListResult": {
      "type": "object",
      "description": "The response of a ExternalConnection list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ExternalConnection items on this page",
          "items": {
            "$ref": "#/definitions/ExternalConnection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ExternalConnectionProperties": {
      "type": "object",
      "description": "Describes the properties of an External Connection.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/ExternalConnectionState",
          "description": "The state of the externalConnection."
        },
        "communityResourceId": {
          "$ref": "#/definitions/CommunityResourceId",
          "description": "Community Resource Id."
        },
        "enclaveIds": {
          "type": "array",
          "description": "The enclaves' resource IDs.",
          "items": {
            "$ref": "#/definitions/VirtualEnclaveResourceId"
          }
        },
        "externalCidrs": {
          "type": "array",
          "description": "The external CIDR IP addresses.",
          "items": {
            "type": "string"
          }
        },
        "resourceCollection": {
          "type": "array",
          "description": "List of resource ids modified by externalConnections.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "communityResourceId",
        "enclaveIds",
        "externalCidrs"
      ]
    },
    "ExternalConnectionState": {
      "type": "string",
      "description": "Specifies the state of the externalConnection.",
      "enum": [
        "Pending",
        "Approved",
        "Active"
      ],
      "x-ms-enum": {
        "name": "ExternalConnectionState",
        "modelAsString": true,
        "values": [
          {
            "name": "Pending",
            "value": "Pending",
            "description": "ExternalConnectionState Type Pending"
          },
          {
            "name": "Approved",
            "value": "Approved",
            "description": "ExternalConnectionState Type Approved"
          },
          {
            "name": "Active",
            "value": "Active",
            "description": "ExternalConnectionState Type Active"
          }
        ]
      }
    },
    "ExternalConnectionUpdate": {
      "type": "object",
      "description": "The type used for update operations of the ExternalConnection.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/ExternalConnectionUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ExternalConnectionUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the ExternalConnection.",
      "properties": {
        "state": {
          "$ref": "#/definitions/ExternalConnectionState",
          "description": "The state of the externalConnection."
        },
        "communityResourceId": {
          "$ref": "#/definitions/CommunityResourceId",
          "description": "Community Resource Id."
        },
        "enclaveIds": {
          "type": "array",
          "description": "The enclaves' resource IDs.",
          "items": {
            "$ref": "#/definitions/VirtualEnclaveResourceId"
          }
        },
        "externalCidrs": {
          "type": "array",
          "description": "The external CIDR IP addresses.",
          "items": {
            "type": "string"
          }
        },
        "resourceCollection": {
          "type": "array",
          "description": "List of resource ids modified by externalConnections.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IPGroupResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an ARM resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Network/IpGroups"
          }
        ]
      }
    },
    "InternalConnection": {
      "type": "object",
      "description": "Describes an Internal Connection.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/InternalConnectionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "InternalConnectionListResult": {
      "type": "object",
      "description": "The response of a InternalConnection list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The InternalConnection items on this page",
          "items": {
            "$ref": "#/definitions/InternalConnection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "InternalConnectionProperties": {
      "type": "object",
      "description": "Describes the properties of an Internal Connection.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "connectionType": {
          "$ref": "#/definitions/InternalConnectionType",
          "description": "Specifies the type of internal connection. \n Possible values are:\n PrivateLink \n NetworkSecurityGroup"
        },
        "state": {
          "$ref": "#/definitions/InternalConnectionState",
          "description": "The state of the internalConnection."
        },
        "communityResourceId": {
          "$ref": "#/definitions/CommunityResourceId",
          "description": "Community Resource Id."
        },
        "destinationEnclaveId": {
          "$ref": "#/definitions/VirtualEnclaveResourceId",
          "description": "The destination enclave's resource ID."
        },
        "destinationEndpointId": {
          "$ref": "#/definitions/EndpointResourceId",
          "description": "The destination endpoint's resource ID."
        },
        "sourceEnclaveId": {
          "$ref": "#/definitions/VirtualEnclaveResourceId",
          "description": "The source enclave's resource ID."
        },
        "sourceCidrs": {
          "type": "array",
          "description": "The source CIDR IP addresses.",
          "items": {
            "type": "string"
          }
        },
        "resourceCollection": {
          "type": "array",
          "description": "List of resource ids modified by internalConnections.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "connectionType",
        "communityResourceId",
        "destinationEnclaveId",
        "destinationEndpointId",
        "sourceEnclaveId",
        "sourceCidrs"
      ]
    },
    "InternalConnectionState": {
      "type": "string",
      "description": "Specifies the state of the internalConnection.",
      "enum": [
        "PendingApproval",
        "PendingUpdate",
        "Approved",
        "Active",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "InternalConnectionState",
        "modelAsString": true,
        "values": [
          {
            "name": "PendingApproval",
            "value": "PendingApproval",
            "description": "InternalConnectionState Type Pending Approval"
          },
          {
            "name": "PendingUpdate",
            "value": "PendingUpdate",
            "description": "InternalConnectionState Type Pending Update"
          },
          {
            "name": "Approved",
            "value": "Approved",
            "description": "InternalConnectionState Type Approved"
          },
          {
            "name": "Active",
            "value": "Active",
            "description": "InternalConnectionState Type Active"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "InternalConnectionState Type Failed"
          }
        ]
      }
    },
    "InternalConnectionType": {
      "type": "string",
      "description": "Specifies the different types of network connections.",
      "enum": [
        "PrivateLink",
        "NetworkSecurityGroup"
      ],
      "x-ms-enum": {
        "name": "InternalConnectionType",
        "modelAsString": true,
        "values": [
          {
            "name": "PrivateLink",
            "value": "PrivateLink",
            "description": "InternalConnectionType Type PrivateLink"
          },
          {
            "name": "NetworkSecurityGroup",
            "value": "NetworkSecurityGroup",
            "description": "InternalConnectionType Type NetworkSecurityGroup."
          }
        ]
      }
    },
    "InternalConnectionUpdate": {
      "type": "object",
      "description": "The type used for update operations of the InternalConnection.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/InternalConnectionUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "InternalConnectionUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the InternalConnection.",
      "properties": {
        "connectionType": {
          "$ref": "#/definitions/InternalConnectionType",
          "description": "Specifies the type of internal connection. \n Possible values are:\n PrivateLink \n NetworkSecurityGroup"
        },
        "state": {
          "$ref": "#/definitions/InternalConnectionState",
          "description": "The state of the internalConnection."
        },
        "communityResourceId": {
          "$ref": "#/definitions/CommunityResourceId",
          "description": "Community Resource Id."
        },
        "destinationEnclaveId": {
          "$ref": "#/definitions/VirtualEnclaveResourceId",
          "description": "The destination enclave's resource ID."
        },
        "destinationEndpointId": {
          "$ref": "#/definitions/EndpointResourceId",
          "description": "The destination endpoint's resource ID."
        },
        "sourceEnclaveId": {
          "$ref": "#/definitions/VirtualEnclaveResourceId",
          "description": "The source enclave's resource ID."
        },
        "sourceCidrs": {
          "type": "array",
          "description": "The source CIDR IP addresses.",
          "items": {
            "type": "string"
          }
        },
        "resourceCollection": {
          "type": "array",
          "description": "List of resource ids modified by internalConnections.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "KeyVaultResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an ARM resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.KeyVault/vaults"
          }
        ]
      }
    },
    "LogAnalyticsResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an ARM resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.OperationalInsights/workspaces"
          }
        ]
      }
    },
    "ManagedResourceGroupConfiguration": {
      "type": "object",
      "description": "ManagedResourceGroup related properties",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of managed resource group"
        },
        "location": {
          "type": "string",
          "description": "Managed Resource Group location"
        }
      }
    },
    "Package": {
      "type": "object",
      "description": "Package Properties",
      "properties": {
        "id": {
          "type": "string",
          "description": "Package Id."
        },
        "name": {
          "type": "string",
          "description": "Package Name."
        },
        "metadata": {
          "type": "object",
          "description": "Package metadata.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning State Enum",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Accepted",
        "Created",
        "Creating",
        "Deleted",
        "Deleting",
        "NotSpecified",
        "Ready",
        "Running",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Provisioning State Type Accepted"
          },
          {
            "name": "Created",
            "value": "Created",
            "description": "Provisioning State Type Created"
          },
          {
            "name": "Creating",
            "value": "Creating",
            "description": "Provisioning State Type Creating"
          },
          {
            "name": "Deleted",
            "value": "Deleted",
            "description": "Provisioning State Type Deleted"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Provisioning State Type Deleting"
          },
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Provisioning State Type NotSpecified"
          },
          {
            "name": "Ready",
            "value": "Ready",
            "description": "Provisioning State Type Ready"
          },
          {
            "name": "Running",
            "value": "Running",
            "description": "Provisioning State Type Running"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Provisioning State Type Updating"
          }
        ]
      }
    },
    "StorageAccountResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an ARM resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Storage/storageAccounts"
          }
        ]
      }
    },
    "TransitHubProperties": {
      "type": "object",
      "description": "Describes the properties of an Transit Hub.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/TransitHubState",
          "description": "The state of the transitHub."
        },
        "transitOption": {
          "$ref": "#/definitions/TransitOption",
          "description": "The TransitOption of the transitHub."
        },
        "resourceCollection": {
          "type": "array",
          "description": "List of resource ids modified by transitHubs.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TransitHubResource": {
      "type": "object",
      "description": "TransitHub Model Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TransitHubProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "TransitHubResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an ARM resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Mission/communities/transitHubs"
          }
        ]
      }
    },
    "TransitHubResourceListResult": {
      "type": "object",
      "description": "The response of a TransitHubResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The TransitHubResource items on this page",
          "items": {
            "$ref": "#/definitions/TransitHubResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "TransitHubResourceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the TransitHubResource.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/TransitHubResourceUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "TransitHubResourceUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the TransitHubResource.",
      "properties": {
        "state": {
          "$ref": "#/definitions/TransitHubState",
          "description": "The state of the transitHub."
        },
        "transitOption": {
          "$ref": "#/definitions/TransitOption",
          "description": "The TransitOption of the transitHub."
        },
        "resourceCollection": {
          "type": "array",
          "description": "List of resource ids modified by transitHubs.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TransitHubState": {
      "type": "string",
      "description": "Specifies the state of the transitHub.",
      "enum": [
        "PendingApproval",
        "Approved",
        "PendingUpdate",
        "Active",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "TransitHubState",
        "modelAsString": true,
        "values": [
          {
            "name": "PendingApproval",
            "value": "PendingApproval",
            "description": "TransitHubState Type PendingApproval"
          },
          {
            "name": "Approved",
            "value": "Approved",
            "description": "TransitHubState Type Approved"
          },
          {
            "name": "PendingUpdate",
            "value": "PendingUpdate",
            "description": "TransitHubState Type PendingUpdate"
          },
          {
            "name": "Active",
            "value": "Active",
            "description": "TransitHubState Type Active"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "TransitHubState Type Failed"
          }
        ]
      }
    },
    "TransitOption": {
      "type": "object",
      "description": "TransitOption Properties",
      "properties": {
        "type": {
          "$ref": "#/definitions/TransitOptionType",
          "description": "Transit Option Type."
        },
        "params": {
          "$ref": "#/definitions/TransitOptionParams",
          "description": "Transit Option Params"
        }
      }
    },
    "TransitOptionParams": {
      "type": "object",
      "description": "TransitOptionParams Properties",
      "properties": {
        "scaleUnits": {
          "type": "integer",
          "format": "int64",
          "description": "Transit Option Params scaleUnits."
        },
        "remoteVirtualNetworkId": {
          "type": "string",
          "description": "Transit Option Params remoteVirtualNetworkId."
        }
      }
    },
    "TransitOptionType": {
      "type": "string",
      "description": "Specifies the type of the transitOption.",
      "enum": [
        "ExpressRoute",
        "Gateway",
        "Peering"
      ],
      "x-ms-enum": {
        "name": "TransitOptionType",
        "modelAsString": true,
        "values": [
          {
            "name": "ExpressRoute",
            "value": "ExpressRoute",
            "description": "TransitOptionType ExpressRoute"
          },
          {
            "name": "Gateway",
            "value": "Gateway",
            "description": "TransitOptionType Gateway"
          },
          {
            "name": "Peering",
            "value": "Peering",
            "description": "TransitOptionType Peering"
          }
        ]
      }
    },
    "Versions": {
      "type": "string",
      "description": "Supported API versions for the Microsoft.Mission resource provider.",
      "enum": [
        "2023-02-01-preview",
        "2023-08-01-preview",
        "2023-11-01-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2023_02_01_preview",
            "value": "2023-02-01-preview",
            "description": "The 2023-02-01-preview version."
          },
          {
            "name": "v2023_08_01_preview",
            "value": "2023-08-01-preview",
            "description": "The 2023-08-01-preview version."
          },
          {
            "name": "v2023_11_01_preview",
            "value": "2023-11-01-preview",
            "description": "The 2023-11-01-preview version."
          }
        ]
      }
    },
    "VirtualEnclaveProperties": {
      "type": "object",
      "description": "Virtual Enclave Resource properties",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning State.",
          "readOnly": true
        },
        "enclaveVirtualNetwork": {
          "$ref": "#/definitions/EnclaveVirtualNetwork",
          "description": "Virtual Network."
        },
        "enclaveAddressSpaces": {
          "$ref": "#/definitions/EnclaveAddressSpaces",
          "description": "Enclave Address Spaces",
          "readOnly": true
        },
        "communityResourceId": {
          "$ref": "#/definitions/CommunityResourceId",
          "description": "Community Resource Id."
        },
        "enclaveDefaultSettings": {
          "$ref": "#/definitions/EnclaveDefaultSettings",
          "description": "Default Settings"
        },
        "resourceCollection": {
          "type": "array",
          "description": "List of resource ids created by Virtual Enclave.",
          "items": {
            "type": "string"
          }
        },
        "managedResourceGroupConfiguration": {
          "$ref": "#/definitions/ManagedResourceGroupConfiguration",
          "description": "Managed resource group configuration."
        }
      },
      "required": [
        "enclaveVirtualNetwork",
        "communityResourceId"
      ]
    },
    "VirtualEnclaveResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an ARM resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Mission/virtualEnclaves"
          }
        ]
      }
    },
    "WorkloadProperties": {
      "type": "object",
      "description": "Workload Resource properties",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning State.",
          "readOnly": true
        },
        "managedResourceGroupConfiguration": {
          "$ref": "#/definitions/ManagedResourceGroupConfiguration",
          "description": "Managed resource group configuration."
        }
      },
      "required": [
        "managedResourceGroupConfiguration"
      ]
    },
    "WorkloadResource": {
      "type": "object",
      "description": "Workload Model Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "WorkloadResourceListResult": {
      "type": "object",
      "description": "The response of a WorkloadResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadResource items on this page",
          "items": {
            "$ref": "#/definitions/WorkloadResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadResourceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the WorkloadResource.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/WorkloadResourceUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkloadResourceUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the WorkloadResource.",
      "properties": {
        "managedResourceGroupConfiguration": {
          "$ref": "#/definitions/ManagedResourceGroupConfiguration",
          "description": "Managed resource group configuration."
        }
      }
    }
  },
  "parameters": {}
}
