{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.Mission",
    "version": "2024-06-01-preview",
    "description": "Microsoft Mission Resource Provider management API.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Workload"
    },
    {
      "name": "VirtualEnclave"
    },
    {
      "name": "Community"
    },
    {
      "name": "TransitHub"
    },
    {
      "name": "EnclaveConnection"
    },
    {
      "name": "EnclaveEndpoints"
    },
    {
      "name": "CommunityEndpoints"
    },
    {
      "name": "Approval"
    }
  ],
  "paths": {
    "/{resourceUri}/providers/Microsoft.Mission/approvals": {
      "get": {
        "operationId": "Approval_ListByParent",
        "tags": [
          "Approval"
        ],
        "description": "List ApprovalResource resources by parent",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApprovalResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Approval_ListByParent": {
            "$ref": "./examples/Approvals_ListByParent.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.Mission/approvals/{approvalName}": {
      "get": {
        "operationId": "Approval_Get",
        "tags": [
          "Approval"
        ],
        "description": "Get a ApprovalResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "approvalName",
            "in": "path",
            "description": "The name of the approvals resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApprovalResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Approval_Get": {
            "$ref": "./examples/Approvals_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Approval_CreateOrUpdate",
        "tags": [
          "Approval"
        ],
        "description": "Create a ApprovalResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "approvalName",
            "in": "path",
            "description": "The name of the approvals resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApprovalResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ApprovalResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApprovalResource"
            }
          },
          "201": {
            "description": "Resource 'ApprovalResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApprovalResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Approval_CreateOrUpdate": {
            "$ref": "./examples/Approvals_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Approval_Update",
        "tags": [
          "Approval"
        ],
        "description": "Update a ApprovalResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "approvalName",
            "in": "path",
            "description": "The name of the approvals resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApprovalPatchModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApprovalResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Approval_Update": {
            "$ref": "./examples/Approvals_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Approval_Delete",
        "tags": [
          "Approval"
        ],
        "description": "Delete a ApprovalResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "approvalName",
            "in": "path",
            "description": "The name of the approvals resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Approval_Delete": {
            "$ref": "./examples/Approvals_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/{resourceUri}/providers/Microsoft.Mission/approvals/{approvalName}/initiatorCallback": {
      "post": {
        "operationId": "Approval_InitiatorCallback",
        "tags": [
          "Approval"
        ],
        "description": "Upon receiving approval or rejection from approver, this facilitates actions on approval resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "approvalName",
            "in": "path",
            "description": "The name of the approvals resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApprovalActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApprovalActionResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Approval_InitiatorCallback": {
            "$ref": "./examples/Approvals_InitiatorCallback.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/providers/Microsoft.Mission/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Mission/communities": {
      "get": {
        "operationId": "Community_ListBySubscription",
        "tags": [
          "Community"
        ],
        "description": "List CommunityResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommunityResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Community_ListBySubscription": {
            "$ref": "./examples/Community_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Mission/communities/{communityName}/communityEndpoints": {
      "get": {
        "operationId": "CommunityEndpoints_ListBySubscription",
        "tags": [
          "CommunityEndpoints"
        ],
        "description": "List CommunityEndpointResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommunityEndpointResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CommunityEndpoints_ListBySubscription": {
            "$ref": "./examples/CommunityEndpoints_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Mission/communities/{communityName}/transitHubs": {
      "get": {
        "operationId": "TransitHub_ListBySubscription",
        "tags": [
          "TransitHub"
        ],
        "description": "List TransitHubResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TransitHubResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TransitHub_ListBySubscription": {
            "$ref": "./examples/TransitHub_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Mission/enclaveConnections": {
      "get": {
        "operationId": "EnclaveConnection_ListBySubscription",
        "tags": [
          "EnclaveConnection"
        ],
        "description": "List EnclaveConnectionResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnclaveConnectionResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnclaveConnection_ListBySubscription": {
            "$ref": "./examples/EnclaveConnection_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Mission/virtualEnclaves": {
      "get": {
        "operationId": "VirtualEnclave_ListBySubscription",
        "tags": [
          "VirtualEnclave"
        ],
        "description": "List EnclaveResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnclaveResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VirtualEnclave_ListBySubscription": {
            "$ref": "./examples/VirtualEnclave_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}/enclaveEndpoints": {
      "get": {
        "operationId": "EnclaveEndpoints_ListBySubscription",
        "tags": [
          "EnclaveEndpoints"
        ],
        "description": "List EnclaveEndpointResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnclaveEndpointResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnclaveEndpoints_ListBySubscription": {
            "$ref": "./examples/EnclaveEndpoints_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}/workloads": {
      "get": {
        "operationId": "Workload_ListBySubscription",
        "tags": [
          "Workload"
        ],
        "description": "List WorkloadResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workload_ListBySubscription": {
            "$ref": "./examples/Workload_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/communities": {
      "get": {
        "operationId": "Community_ListByResourceGroup",
        "tags": [
          "Community"
        ],
        "description": "List CommunityResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommunityResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Community_ListByResourceGroup": {
            "$ref": "./examples/Community_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/communities/{communityName}": {
      "get": {
        "operationId": "Community_Get",
        "tags": [
          "Community"
        ],
        "description": "Get a CommunityResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommunityResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Community_Get": {
            "$ref": "./examples/Community_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Community_CreateOrUpdate",
        "tags": [
          "Community"
        ],
        "description": "Create a CommunityResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommunityResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CommunityResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/CommunityResource"
            }
          },
          "201": {
            "description": "Resource 'CommunityResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/CommunityResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Community_CreateOrUpdate": {
            "$ref": "./examples/Community_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Community_Update",
        "tags": [
          "Community"
        ],
        "description": "Update a CommunityResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommunityPatchModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommunityResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Community_Update": {
            "$ref": "./examples/Community_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Community_Delete",
        "tags": [
          "Community"
        ],
        "description": "Delete a CommunityResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Community_Delete": {
            "$ref": "./examples/Community_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/communities/{communityName}/checkAddressSpaceAvailability": {
      "post": {
        "operationId": "Community_CheckAddressSpaceAvailability",
        "tags": [
          "Community"
        ],
        "description": "Checks that the IP Address Space to be allocated for this Community is available.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "checkAddressSpaceAvailabilityRequest",
            "in": "body",
            "description": "Check IP Address Space request body.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckAddressSpaceAvailabilityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CheckAddressSpaceAvailabilityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Community_CheckAddressSpaceAvailability": {
            "$ref": "./examples/Community_PostCheckAddressSpaceAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/communities/{communityName}/communityEndpoints": {
      "get": {
        "operationId": "CommunityEndpoints_ListByCommunityResource",
        "tags": [
          "CommunityEndpoints"
        ],
        "description": "List CommunityEndpointResource resources by CommunityResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommunityEndpointResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CommunityEndpoints_ListByCommunityResource": {
            "$ref": "./examples/CommunityEndpoints_ListByCommunityResource.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/communities/{communityName}/communityEndpoints/{communityEndpointName}": {
      "get": {
        "operationId": "CommunityEndpoints_Get",
        "tags": [
          "CommunityEndpoints"
        ],
        "description": "Get a CommunityEndpointResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "communityEndpointName",
            "in": "path",
            "description": "The name of the Community Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommunityEndpointResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CommunityEndpoints_Get": {
            "$ref": "./examples/CommunityEndpoints_Get.json"
          }
        }
      },
      "put": {
        "operationId": "CommunityEndpoints_CreateOrUpdate",
        "tags": [
          "CommunityEndpoints"
        ],
        "description": "Create a CommunityEndpointResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "communityEndpointName",
            "in": "path",
            "description": "The name of the Community Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommunityEndpointResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CommunityEndpointResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/CommunityEndpointResource"
            }
          },
          "201": {
            "description": "Resource 'CommunityEndpointResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/CommunityEndpointResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CommunityEndpoints_CreateOrUpdate": {
            "$ref": "./examples/CommunityEndpoints_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "CommunityEndpoints_Update",
        "tags": [
          "CommunityEndpoints"
        ],
        "description": "Update a CommunityEndpointResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "communityEndpointName",
            "in": "path",
            "description": "The name of the Community Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommunityEndpointPatchModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommunityEndpointResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CommunityEndpoints_Update": {
            "$ref": "./examples/CommunityEndpoints_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "CommunityEndpoints_Delete",
        "tags": [
          "CommunityEndpoints"
        ],
        "description": "Delete a CommunityEndpointResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "communityEndpointName",
            "in": "path",
            "description": "The name of the Community Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CommunityEndpoints_Delete": {
            "$ref": "./examples/CommunityEndpoints_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/communities/{communityName}/transitHubs": {
      "get": {
        "operationId": "TransitHub_ListByCommunityResource",
        "tags": [
          "TransitHub"
        ],
        "description": "List TransitHubResource resources by CommunityResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TransitHubResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TransitHub_ListByCommunityResource": {
            "$ref": "./examples/TransitHub_ListByCommunityResource.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/communities/{communityName}/transitHubs/{transitHubName}": {
      "get": {
        "operationId": "TransitHub_Get",
        "tags": [
          "TransitHub"
        ],
        "description": "Get a TransitHubResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "transitHubName",
            "in": "path",
            "description": "The name of the TransitHub Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TransitHubResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TransitHub_Get": {
            "$ref": "./examples/TransitHub_Get.json"
          }
        }
      },
      "put": {
        "operationId": "TransitHub_CreateOrUpdate",
        "tags": [
          "TransitHub"
        ],
        "description": "Create a TransitHubResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "transitHubName",
            "in": "path",
            "description": "The name of the TransitHub Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransitHubResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'TransitHubResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/TransitHubResource"
            }
          },
          "201": {
            "description": "Resource 'TransitHubResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/TransitHubResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TransitHub_CreateOrUpdate": {
            "$ref": "./examples/TransitHub_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "TransitHub_Update",
        "tags": [
          "TransitHub"
        ],
        "description": "Update a TransitHubResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "transitHubName",
            "in": "path",
            "description": "The name of the TransitHub Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransitHubPatchModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TransitHubResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TransitHub_Update": {
            "$ref": "./examples/TransitHub_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "TransitHub_Delete",
        "tags": [
          "TransitHub"
        ],
        "description": "Delete a TransitHubResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "communityName",
            "in": "path",
            "description": "The name of the communityResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "transitHubName",
            "in": "path",
            "description": "The name of the TransitHub Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TransitHub_Delete": {
            "$ref": "./examples/TransitHub_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/enclaveConnections": {
      "get": {
        "operationId": "EnclaveConnection_ListByResourceGroup",
        "tags": [
          "EnclaveConnection"
        ],
        "description": "List EnclaveConnectionResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnclaveConnectionResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnclaveConnection_ListByResourceGroup": {
            "$ref": "./examples/EnclaveConnection_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/enclaveConnections/{enclaveConnectionName}": {
      "get": {
        "operationId": "EnclaveConnection_Get",
        "tags": [
          "EnclaveConnection"
        ],
        "description": "Get a EnclaveConnectionResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "enclaveConnectionName",
            "in": "path",
            "description": "The name of the Enclave Connection Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnclaveConnectionResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnclaveConnection_Get": {
            "$ref": "./examples/EnclaveConnection_Get.json"
          }
        }
      },
      "put": {
        "operationId": "EnclaveConnection_CreateOrUpdate",
        "tags": [
          "EnclaveConnection"
        ],
        "description": "Create a EnclaveConnectionResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "enclaveConnectionName",
            "in": "path",
            "description": "The name of the Enclave Connection Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnclaveConnectionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EnclaveConnectionResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/EnclaveConnectionResource"
            }
          },
          "201": {
            "description": "Resource 'EnclaveConnectionResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/EnclaveConnectionResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnclaveConnection_CreateOrUpdate": {
            "$ref": "./examples/EnclaveConnection_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "EnclaveConnection_Update",
        "tags": [
          "EnclaveConnection"
        ],
        "description": "Update a EnclaveConnectionResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "enclaveConnectionName",
            "in": "path",
            "description": "The name of the Enclave Connection Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnclaveConnectionPatchModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnclaveConnectionResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnclaveConnection_Update": {
            "$ref": "./examples/EnclaveConnection_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "EnclaveConnection_Delete",
        "tags": [
          "EnclaveConnection"
        ],
        "description": "Delete a EnclaveConnectionResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "enclaveConnectionName",
            "in": "path",
            "description": "The name of the Enclave Connection Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnclaveConnection_Delete": {
            "$ref": "./examples/EnclaveConnection_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/enclaveConnections/{enclaveConnectionName}/approvalCallback": {
      "post": {
        "operationId": "EnclaveConnection_ApprovalCallback",
        "tags": [
          "EnclaveConnection"
        ],
        "description": "Callback that triggers on approval state change.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "enclaveConnectionName",
            "in": "path",
            "description": "The name of the Enclave Connection Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApprovalCallbackRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApprovalActionResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnclaveConnection_ApprovalCallback": {
            "$ref": "./examples/EnclaveConnection_PostApprovalCallback.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/enclaveConnections/{enclaveConnectionName}/approvalDeletionCallback": {
      "post": {
        "operationId": "EnclaveConnection_ApprovalDeletionCallback",
        "tags": [
          "EnclaveConnection"
        ],
        "description": "Callback that triggers on approval deletion state change.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "enclaveConnectionName",
            "in": "path",
            "description": "The name of the Enclave Connection Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApprovalDeletionCallbackRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApprovalActionResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnclaveConnection_ApprovalDeletionCallback": {
            "$ref": "./examples/EnclaveConnection_ApprovalDeletionCallback.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/virtualEnclaves": {
      "get": {
        "operationId": "VirtualEnclave_ListByResourceGroup",
        "tags": [
          "VirtualEnclave"
        ],
        "description": "List EnclaveResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnclaveResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VirtualEnclave_ListByResourceGroup": {
            "$ref": "./examples/VirtualEnclave_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}": {
      "get": {
        "operationId": "VirtualEnclave_Get",
        "tags": [
          "VirtualEnclave"
        ],
        "description": "Get a EnclaveResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnclaveResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VirtualEnclave_Get": {
            "$ref": "./examples/VirtualEnclave_Get.json"
          }
        }
      },
      "put": {
        "operationId": "VirtualEnclave_CreateOrUpdate",
        "tags": [
          "VirtualEnclave"
        ],
        "description": "Create a EnclaveResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnclaveResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EnclaveResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/EnclaveResource"
            }
          },
          "201": {
            "description": "Resource 'EnclaveResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/EnclaveResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VirtualEnclave_CreateOrUpdate": {
            "$ref": "./examples/VirtualEnclave_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "VirtualEnclave_Update",
        "tags": [
          "VirtualEnclave"
        ],
        "description": "Update a EnclaveResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualEnclavePatchModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnclaveResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VirtualEnclave_Update": {
            "$ref": "./examples/VirtualEnclave_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "VirtualEnclave_Delete",
        "tags": [
          "VirtualEnclave"
        ],
        "description": "Delete a EnclaveResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VirtualEnclave_Delete": {
            "$ref": "./examples/VirtualEnclave_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}/enclaveEndpoints": {
      "get": {
        "operationId": "EnclaveEndpoints_ListByEnclaveResource",
        "tags": [
          "EnclaveEndpoints"
        ],
        "description": "List EnclaveEndpointResource resources by EnclaveResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnclaveEndpointResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnclaveEndpoints_ListByEnclaveResource": {
            "$ref": "./examples/EnclaveEndpoints_ListByEnclaveResource.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}/enclaveEndpoints/{enclaveEndpointName}": {
      "get": {
        "operationId": "EnclaveEndpoints_Get",
        "tags": [
          "EnclaveEndpoints"
        ],
        "description": "Get a EnclaveEndpointResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "enclaveEndpointName",
            "in": "path",
            "description": "The name of the Enclave Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnclaveEndpointResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnclaveEndpoints_Get": {
            "$ref": "./examples/EnclaveEndpoints_Get.json"
          }
        }
      },
      "put": {
        "operationId": "EnclaveEndpoints_CreateOrUpdate",
        "tags": [
          "EnclaveEndpoints"
        ],
        "description": "Create a EnclaveEndpointResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "enclaveEndpointName",
            "in": "path",
            "description": "The name of the Enclave Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnclaveEndpointResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EnclaveEndpointResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/EnclaveEndpointResource"
            }
          },
          "201": {
            "description": "Resource 'EnclaveEndpointResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/EnclaveEndpointResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnclaveEndpoints_CreateOrUpdate": {
            "$ref": "./examples/EnclaveEndpoints_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "EnclaveEndpoints_Update",
        "tags": [
          "EnclaveEndpoints"
        ],
        "description": "Update a EnclaveEndpointResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "enclaveEndpointName",
            "in": "path",
            "description": "The name of the Enclave Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnclaveEndpointPatchModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnclaveEndpointResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnclaveEndpoints_Update": {
            "$ref": "./examples/EnclaveEndpoints_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "EnclaveEndpoints_Delete",
        "tags": [
          "EnclaveEndpoints"
        ],
        "description": "Delete a EnclaveEndpointResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "enclaveEndpointName",
            "in": "path",
            "description": "The name of the Enclave Endpoint Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnclaveEndpoints_Delete": {
            "$ref": "./examples/EnclaveEndpoints_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}/workloads": {
      "get": {
        "operationId": "Workload_ListByEnclaveResource",
        "tags": [
          "Workload"
        ],
        "description": "List WorkloadResource resources by EnclaveResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workload_ListByEnclaveResource": {
            "$ref": "./examples/Workload_ListByEnclaveResource.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/virtualEnclaves/{virtualEnclaveName}/workloads/{workloadName}": {
      "get": {
        "operationId": "Workload_Get",
        "tags": [
          "Workload"
        ],
        "description": "Get a WorkloadResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "workloadName",
            "in": "path",
            "description": "The name of the workloadResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workload_Get": {
            "$ref": "./examples/Workload_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Workload_CreateOrUpdate",
        "tags": [
          "Workload"
        ],
        "description": "Create a WorkloadResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "workloadName",
            "in": "path",
            "description": "The name of the workloadResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WorkloadResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadResource"
            }
          },
          "201": {
            "description": "Resource 'WorkloadResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workload_CreateOrUpdate": {
            "$ref": "./examples/Workload_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Workload_Update",
        "tags": [
          "Workload"
        ],
        "description": "Update a WorkloadResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "workloadName",
            "in": "path",
            "description": "The name of the workloadResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadPatchModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workload_Update": {
            "$ref": "./examples/Workload_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Workload_Delete",
        "tags": [
          "Workload"
        ],
        "description": "Delete a WorkloadResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualEnclaveName",
            "in": "path",
            "description": "The name of the enclaveResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          },
          {
            "name": "workloadName",
            "in": "path",
            "description": "The name of the workloadResource Resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workload_Delete": {
            "$ref": "./examples/Workload_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "ApprovalActionRequest": {
      "type": "object",
      "description": "Request body for calling post-action",
      "properties": {
        "approvalStatus": {
          "type": "string",
          "description": "Approval status indicating 'Approved' or 'Rejected'",
          "enum": [
            "Approved",
            "Rejected"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        }
      },
      "required": [
        "approvalStatus"
      ]
    },
    "ApprovalActionResponse": {
      "type": "object",
      "description": "Response body after handling of approvalCallbackRequest",
      "properties": {
        "message": {
          "type": "string",
          "description": "Confirmation message indicating the result of the operation."
        }
      },
      "required": [
        "message"
      ]
    },
    "ApprovalCallbackRequest": {
      "type": "object",
      "description": "Request body for calling post-action",
      "properties": {
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Resource Id of the item being approved or rejected"
        },
        "resourceRequestAction": {
          "type": "string",
          "description": "Resource request action indicating action which needed to be performed upon calling approval-callback post action",
          "enum": [
            "Create",
            "Delete",
            "Update",
            "Reset"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        },
        "approvalStatus": {
          "type": "string",
          "description": "Approval status indicating 'Approved' or 'Rejected'",
          "enum": [
            "Approved",
            "Rejected"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        }
      },
      "required": [
        "resourceId",
        "resourceRequestAction",
        "approvalStatus"
      ]
    },
    "ApprovalDeletionCallbackRequest": {
      "type": "object",
      "description": "Request body for calling post-action",
      "properties": {
        "resourceRequestAction": {
          "type": "string",
          "description": "Resource request action indicating action which needed to be performed upon calling approval-deletion-callback post action",
          "enum": [
            "Create",
            "Delete",
            "Update"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        }
      },
      "required": [
        "resourceRequestAction"
      ]
    },
    "ApprovalPatchModel": {
      "type": "object",
      "description": "Approvals patch model.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApprovalPatchProperties",
          "description": "Approval Patch properties"
        }
      }
    },
    "ApprovalPatchProperties": {
      "type": "object",
      "description": "Approvals patch properties.",
      "properties": {
        "parent1": {
          "type": "string",
          "description": "Parameter for optimizing query results"
        },
        "parent2": {
          "type": "string",
          "description": "Parameter for optimizing query results"
        },
        "requestMetadata": {
          "$ref": "#/definitions/RequestMetadataUpdatableProperties",
          "description": "Request metadata for the approval request."
        }
      }
    },
    "ApprovalProperties": {
      "type": "object",
      "description": "Approval Base model.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning State.",
          "readOnly": true
        },
        "parent1": {
          "type": "string",
          "description": "Parameter for optimizing query results"
        },
        "parent2": {
          "type": "string",
          "description": "Parameter for optimizing query results"
        },
        "requestMetadata": {
          "$ref": "#/definitions/RequestMetadata",
          "description": "Request metadata for the approval request."
        }
      },
      "required": [
        "requestMetadata"
      ]
    },
    "ApprovalResource": {
      "type": "object",
      "description": "Approval Model Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApprovalProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ApprovalResourceListResult": {
      "type": "object",
      "description": "The response of a ApprovalResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ApprovalResource items on this page",
          "items": {
            "$ref": "#/definitions/ApprovalResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ApprovalStatus": {
      "type": "string",
      "description": "Approval Status. It can be Approved, Rejected, Pending, Deleted or Expired.",
      "enum": [
        "Approved",
        "Rejected",
        "Pending"
      ],
      "x-ms-enum": {
        "name": "ApprovalStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Approved",
            "value": "Approved",
            "description": "ApprovalStatus Type Approved"
          },
          {
            "name": "Rejected",
            "value": "Rejected",
            "description": "ApprovalStatus Type Rejected"
          },
          {
            "name": "Pending",
            "value": "Pending",
            "description": "ApprovalStatus Type Pending"
          }
        ]
      }
    },
    "Azure.Core.azureLocation": {
      "type": "string",
      "description": "Represents an Azure geography region where supported resource providers live."
    },
    "Azure.ResourceManager.CommonTypes.ManagedServiceIdentityUpdate": {
      "type": "object",
      "description": "Managed service identity (system assigned and/or user assigned identities)",
      "properties": {
        "type": {
          "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/ManagedServiceIdentityType",
          "description": "The type of managed identity assigned to this resource."
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "The identities assigned to this resource by the user.",
          "additionalProperties": {
            "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/UserAssignedIdentity",
            "x-nullable": true
          }
        }
      }
    },
    "CheckAddressSpaceAvailabilityRequest": {
      "type": "object",
      "description": "Request to the action call to check address space availability.",
      "properties": {
        "communityResourceId": {
          "$ref": "#/definitions/CommunityResourceId",
          "description": "Resource Id of the Community"
        },
        "enclaveVirtualNetwork": {
          "$ref": "#/definitions/EnclaveVirtualNetworkModel",
          "description": "Information about the enclave virtual network"
        }
      },
      "required": [
        "communityResourceId",
        "enclaveVirtualNetwork"
      ]
    },
    "CheckAddressSpaceAvailabilityResponse": {
      "type": "object",
      "description": "Response of availability of the requested address space.",
      "properties": {
        "value": {
          "type": "boolean",
          "description": "Boolean representing whether the address space is available."
        }
      },
      "required": [
        "value"
      ]
    },
    "CommunityEndpointDestinationRule": {
      "type": "object",
      "description": "Base type for destination rules.",
      "properties": {
        "destinationType": {
          "$ref": "#/definitions/DestinationType",
          "description": "Destination Type."
        },
        "protocols": {
          "type": "array",
          "description": "Protocols. Options specified by Endpoint Protocol Enum.",
          "items": {
            "$ref": "#/definitions/CommunityEndpointProtocol"
          }
        },
        "transitHubResourceId": {
          "$ref": "#/definitions/TransitHubResourceId",
          "description": "Transit Hub Resource Id."
        },
        "name": {
          "type": "string",
          "description": "Endpoint Rule Name."
        },
        "destination": {
          "type": "string",
          "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
        },
        "port": {
          "type": "string",
          "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
        }
      }
    },
    "CommunityEndpointPatchModel": {
      "type": "object",
      "description": "Community Endpoint Patch Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CommunityEndpointPatchProperties",
          "description": "Community Endpoint Patch properties"
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CommunityEndpointPatchProperties": {
      "type": "object",
      "description": "Community Endpoint patchable Properties",
      "properties": {
        "ruleCollection": {
          "type": "array",
          "description": "Community Endpoint Rule Collection.",
          "items": {
            "$ref": "#/definitions/CommunityEndpointDestinationRule"
          },
          "x-ms-identifiers": []
        },
        "approvalRequired": {
          "type": "boolean",
          "description": "Whether approval is needed for the connection (True or False)."
        }
      }
    },
    "CommunityEndpointProperties": {
      "type": "object",
      "description": "Community Endpoint Resource properties",
      "properties": {
        "ruleCollection": {
          "type": "array",
          "description": "Community Endpoint Rule Collection.",
          "items": {
            "$ref": "#/definitions/CommunityEndpointDestinationRule"
          },
          "x-ms-identifiers": []
        },
        "resourceCollection": {
          "type": "array",
          "description": "List of resource ids created by community endpoint.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning State.",
          "readOnly": true
        },
        "approvalRequired": {
          "type": "boolean",
          "description": "Whether approval is needed for the connection (True or False)."
        }
      },
      "required": [
        "ruleCollection"
      ]
    },
    "CommunityEndpointProtocol": {
      "type": "string",
      "description": "Community Endpoint Protocol Enum",
      "enum": [
        "ANY",
        "TCP",
        "UDP",
        "ICMP",
        "ESP",
        "AH",
        "HTTPS",
        "HTTP"
      ],
      "x-ms-enum": {
        "name": "CommunityEndpointProtocol",
        "modelAsString": true,
        "values": [
          {
            "name": "ANY",
            "value": "ANY",
            "description": "CommunityEndpointProtocol Type ANY"
          },
          {
            "name": "TCP",
            "value": "TCP",
            "description": "CommunityEndpointProtocol Type TCP"
          },
          {
            "name": "UDP",
            "value": "UDP",
            "description": "CommunityEndpointProtocol Type UDP"
          },
          {
            "name": "ICMP",
            "value": "ICMP",
            "description": "CommunityEndpointProtocol Type ICMP"
          },
          {
            "name": "ESP",
            "value": "ESP",
            "description": "CommunityEndpointProtocol Type ESP"
          },
          {
            "name": "AH",
            "value": "AH",
            "description": "CommunityEndpointProtocol Type AH"
          },
          {
            "name": "HTTPS",
            "value": "HTTPS",
            "description": "CommunityEndpointProtocol Type HTTPS"
          },
          {
            "name": "HTTP",
            "value": "HTTP",
            "description": "CommunityEndpointProtocol Type HTTP"
          }
        ]
      }
    },
    "CommunityEndpointResource": {
      "type": "object",
      "description": "CommunityEndpoint Model Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CommunityEndpointProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "CommunityEndpointResourceListResult": {
      "type": "object",
      "description": "The response of a CommunityEndpointResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CommunityEndpointResource items on this page",
          "items": {
            "$ref": "#/definitions/CommunityEndpointResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CommunityPatchModel": {
      "type": "object",
      "description": "Community Patch Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CommunityPatchProperties",
          "description": "Community Patch properties"
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.ManagedServiceIdentityUpdate",
          "description": "The managed service identities assigned to this resource."
        }
      }
    },
    "CommunityPatchProperties": {
      "type": "object",
      "description": "Community Resource Properties without default values",
      "properties": {
        "dnsServers": {
          "type": "array",
          "description": "DNS Servers.",
          "items": {
            "type": "string"
          }
        },
        "governedServiceList": {
          "type": "array",
          "description": "List of services governed by a community.",
          "items": {
            "$ref": "#/definitions/GovernedServiceItem"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "CommunityProperties": {
      "type": "object",
      "description": "Community Resource Properties",
      "properties": {
        "addressSpace": {
          "type": "string",
          "description": "Address Space.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "dnsServers": {
          "type": "array",
          "description": "DNS Servers.",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning State.",
          "readOnly": true
        },
        "resourceCollection": {
          "type": "array",
          "description": "List of resource ids created by communities.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "managedResourceGroupConfiguration": {
          "$ref": "#/definitions/ManagedResourceGroupConfiguration",
          "description": "Managed resource group name.",
          "readOnly": true
        },
        "governedServiceList": {
          "type": "array",
          "description": "List of services governed by a community.",
          "items": {
            "$ref": "#/definitions/GovernedServiceItem"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "CommunityResource": {
      "type": "object",
      "description": "Community Model Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CommunityProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "CommunityResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Mission/communities"
          }
        ]
      }
    },
    "CommunityResourceListResult": {
      "type": "object",
      "description": "The response of a CommunityResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CommunityResource items on this page",
          "items": {
            "$ref": "#/definitions/CommunityResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DestinationEndpointResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Mission/virtualEnclaves/enclaveEndpoints"
          },
          {
            "type": "Microsoft.Mission/communities/communityEndpoints"
          }
        ]
      }
    },
    "DestinationType": {
      "type": "string",
      "description": "Destination Type Enum",
      "enum": [
        "FQDN",
        "FQDNTag",
        "IPAddress",
        "PrivateNetwork"
      ],
      "x-ms-enum": {
        "name": "DestinationType",
        "modelAsString": true,
        "values": [
          {
            "name": "FQDN",
            "value": "FQDN",
            "description": "DestinationType Type FQDN"
          },
          {
            "name": "FQDNTag",
            "value": "FQDNTag",
            "description": "DestinationType Type FQDNTag"
          },
          {
            "name": "IPAddress",
            "value": "IPAddress",
            "description": "DestinationType Type IPAddress"
          },
          {
            "name": "PrivateNetwork",
            "value": "PrivateNetwork",
            "description": "DestinationType Type PrivateNetwork"
          }
        ]
      }
    },
    "DiagnosticDestination": {
      "type": "string",
      "description": "Specifies the destination of where to store diagnostic logs.",
      "enum": [
        "CommunityOnly",
        "EnclaveOnly",
        "Both"
      ],
      "x-ms-enum": {
        "name": "DiagnosticDestination",
        "modelAsString": true,
        "values": [
          {
            "name": "CommunityOnly",
            "value": "CommunityOnly",
            "description": "DiagnosticDestination Type CommunityOnly"
          },
          {
            "name": "EnclaveOnly",
            "value": "EnclaveOnly",
            "description": "DiagnosticDestination Type EnclaveOnly"
          },
          {
            "name": "Both",
            "value": "Both",
            "description": "DiagnosticDestination Type Both"
          }
        ]
      }
    },
    "EnclaveAddressSpacesModel": {
      "type": "object",
      "description": "Enclave Address Spaces",
      "properties": {
        "enclaveAddressSpace": {
          "type": "string",
          "description": "Enclave Address Space"
        },
        "managedAddressSpace": {
          "type": "string",
          "description": "Managed Address Space"
        }
      }
    },
    "EnclaveConnectionPatchModel": {
      "type": "object",
      "description": "Enclave Connection Patch Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EnclaveConnectionPatchProperties",
          "description": "Enclave Connection Patch properties"
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "EnclaveConnectionPatchProperties": {
      "type": "object",
      "description": "Enclave Connection patchable Properties",
      "properties": {
        "sourceCidr": {
          "type": "string",
          "description": "Source CIDR."
        }
      }
    },
    "EnclaveConnectionProperties": {
      "type": "object",
      "description": "Enclave Connection Resource properties",
      "properties": {
        "state": {
          "$ref": "#/definitions/EnclaveConnectionState",
          "description": "The state of the enclaveConnection.",
          "readOnly": true
        },
        "communityResourceId": {
          "$ref": "#/definitions/CommunityResourceId",
          "description": "Community Resource Id.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sourceResourceId": {
          "$ref": "#/definitions/EnclaveConnectionSourceResourceId",
          "description": "Source Resource Id.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sourceCidr": {
          "type": "string",
          "description": "Source CIDR."
        },
        "ipGroup": {
          "$ref": "#/definitions/IPGroupResourceId",
          "description": "Source IP group Resource Id.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "destinationEndpointId": {
          "$ref": "#/definitions/DestinationEndpointResourceId",
          "description": "Destination Endpoint Resource Id.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning State.",
          "readOnly": true
        },
        "resourceCollection": {
          "type": "array",
          "description": "List of resource ids modified by enclave Connections.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "required": [
        "communityResourceId",
        "sourceResourceId",
        "destinationEndpointId"
      ]
    },
    "EnclaveConnectionResource": {
      "type": "object",
      "description": "EnclaveConnection Model Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EnclaveConnectionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "EnclaveConnectionResourceListResult": {
      "type": "object",
      "description": "The response of a EnclaveConnectionResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EnclaveConnectionResource items on this page",
          "items": {
            "$ref": "#/definitions/EnclaveConnectionResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EnclaveConnectionSourceResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Mission/virtualEnclaves"
          },
          {
            "type": "Microsoft.Mission/communities/transitHubs"
          }
        ]
      }
    },
    "EnclaveConnectionState": {
      "type": "string",
      "description": "Specifies the state of the enclave connection.",
      "enum": [
        "PendingApproval",
        "PendingUpdate",
        "Approved",
        "Active",
        "Failed",
        "Connected",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "EnclaveConnectionState",
        "modelAsString": true,
        "values": [
          {
            "name": "PendingApproval",
            "value": "PendingApproval",
            "description": "EnclaveConnectionState Type Pending Approval"
          },
          {
            "name": "PendingUpdate",
            "value": "PendingUpdate",
            "description": "EnclaveConnectionState Type Pending Update"
          },
          {
            "name": "Approved",
            "value": "Approved",
            "description": "EnclaveConnectionState Type Approved"
          },
          {
            "name": "Active",
            "value": "Active",
            "description": "EnclaveConnectionState Type Active"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "EnclaveConnectionState Type Failed"
          },
          {
            "name": "Connected",
            "value": "Connected",
            "description": "EnclaveConnectionState Type Connected"
          },
          {
            "name": "Disconnected",
            "value": "Disconnected",
            "description": "EnclaveConnectionState Type Disconnected"
          }
        ]
      }
    },
    "EnclaveDefaultSettingsModel": {
      "type": "object",
      "description": "Virtual Enclave Default Settings",
      "properties": {
        "keyVaultResourceId": {
          "$ref": "#/definitions/KeyVaultResourceId",
          "description": "Key Vault Resource Id.",
          "readOnly": true
        },
        "storageAccountResourceId": {
          "$ref": "#/definitions/StorageAccountResourceId",
          "description": "Storage Account Resource Id.",
          "readOnly": true
        },
        "logAnalyticsResourceIdCollection": {
          "type": "array",
          "description": "Log Analytics Resource Ids.",
          "items": {
            "$ref": "#/definitions/LogAnalyticsResourceId"
          },
          "readOnly": true
        },
        "diagnosticDestination": {
          "type": "string",
          "description": "Diagnostic Destination.",
          "default": "EnclaveOnly",
          "enum": [
            "CommunityOnly",
            "EnclaveOnly",
            "Both"
          ],
          "x-ms-enum": {
            "name": "DiagnosticDestination",
            "modelAsString": true,
            "values": [
              {
                "name": "CommunityOnly",
                "value": "CommunityOnly",
                "description": "DiagnosticDestination Type CommunityOnly"
              },
              {
                "name": "EnclaveOnly",
                "value": "EnclaveOnly",
                "description": "DiagnosticDestination Type EnclaveOnly"
              },
              {
                "name": "Both",
                "value": "Both",
                "description": "DiagnosticDestination Type Both"
              }
            ]
          }
        }
      }
    },
    "EnclaveDefaultSettingsPatchModel": {
      "type": "object",
      "description": "Virtual Enclave Default Settings",
      "properties": {
        "diagnosticDestination": {
          "$ref": "#/definitions/DiagnosticDestination",
          "description": "Diagnostic Destination."
        }
      }
    },
    "EnclaveEndpointDestinationRule": {
      "type": "object",
      "description": "Enclave Endpoint Rule Properties",
      "properties": {
        "protocols": {
          "type": "array",
          "description": "Protocols. Options specified by Endpoint Protocol Enum.",
          "items": {
            "$ref": "#/definitions/EnclaveEndpointProtocol"
          }
        },
        "name": {
          "type": "string",
          "description": "Endpoint Rule Name."
        },
        "destination": {
          "type": "string",
          "description": "Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas."
        },
        "port": {
          "type": "string",
          "description": "Port. Can include multiple ports separated by commas or a range indicated by a hyphen."
        }
      }
    },
    "EnclaveEndpointPatchModel": {
      "type": "object",
      "description": "Enclave Endpoint Patch Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EnclaveEndpointPatchProperties",
          "description": "Enclave Endpoint Patch properties"
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "EnclaveEndpointPatchProperties": {
      "type": "object",
      "description": "Enclave Endpoint patchable Properties",
      "properties": {
        "ruleCollection": {
          "type": "array",
          "description": "Enclave Endpoint Rule Collection.",
          "items": {
            "$ref": "#/definitions/EnclaveEndpointDestinationRule"
          },
          "x-ms-identifiers": []
        },
        "approvalRequired": {
          "type": "boolean",
          "description": "Whether approval is needed for the connection (True or False)."
        }
      }
    },
    "EnclaveEndpointProperties": {
      "type": "object",
      "description": "Enclave Endpoint Resource properties",
      "properties": {
        "ruleCollection": {
          "type": "array",
          "description": "Enclave Endpoint Rule Collection.",
          "items": {
            "$ref": "#/definitions/EnclaveEndpointDestinationRule"
          },
          "x-ms-identifiers": []
        },
        "resourceCollection": {
          "type": "array",
          "description": "List of resource ids created by community endpoint.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning State.",
          "readOnly": true
        },
        "approvalRequired": {
          "type": "boolean",
          "description": "Whether approval is needed for the connection (True or False)."
        }
      },
      "required": [
        "ruleCollection"
      ]
    },
    "EnclaveEndpointProtocol": {
      "type": "string",
      "description": "Enclave Endpoint Protocol Enum",
      "enum": [
        "ANY",
        "TCP",
        "UDP",
        "ICMP",
        "ESP",
        "AH"
      ],
      "x-ms-enum": {
        "name": "EnclaveEndpointProtocol",
        "modelAsString": true,
        "values": [
          {
            "name": "ANY",
            "value": "ANY",
            "description": "EndpointProtocol Type ANY"
          },
          {
            "name": "TCP",
            "value": "TCP",
            "description": "EndpointProtocol Type TCP"
          },
          {
            "name": "UDP",
            "value": "UDP",
            "description": "EndpointProtocol Type UDP"
          },
          {
            "name": "ICMP",
            "value": "ICMP",
            "description": "EndpointProtocol Type ICMP"
          },
          {
            "name": "ESP",
            "value": "ESP",
            "description": "EndpointProtocol Type ESP"
          },
          {
            "name": "AH",
            "value": "AH",
            "description": "EndpointProtocol Type AH"
          }
        ]
      }
    },
    "EnclaveEndpointResource": {
      "type": "object",
      "description": "EnclaveEndpoint Model Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EnclaveEndpointProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "EnclaveEndpointResourceListResult": {
      "type": "object",
      "description": "The response of a EnclaveEndpointResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EnclaveEndpointResource items on this page",
          "items": {
            "$ref": "#/definitions/EnclaveEndpointResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EnclaveResource": {
      "type": "object",
      "description": "Virtual Enclave Model Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VirtualEnclaveProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "EnclaveResourceListResult": {
      "type": "object",
      "description": "The response of a EnclaveResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EnclaveResource items on this page",
          "items": {
            "$ref": "#/definitions/EnclaveResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EnclaveVirtualNetworkModel": {
      "type": "object",
      "description": "Enclave Virtual Network Properties",
      "properties": {
        "name": {
          "type": "string",
          "description": "Network Name."
        },
        "networkSize": {
          "type": "string",
          "description": "Network Size.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "customCidrRange": {
          "type": "string",
          "description": "Custom CIDR Range.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "subnetConfigurations": {
          "type": "array",
          "description": "Subnet Configurations.",
          "items": {
            "$ref": "#/definitions/SubnetConfiguration"
          },
          "x-ms-identifiers": []
        },
        "allowSubnetCommunication": {
          "type": "boolean",
          "description": "Allow Subnet Communication.",
          "default": false,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "connectToAzureServices": {
          "type": "boolean",
          "description": "Connect to Azure Services (True or False).",
          "default": false,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "GovernedServiceItem": {
      "type": "object",
      "description": "GovernedServiceItem Properties",
      "properties": {
        "id": {
          "$ref": "#/definitions/ServiceIdentifier",
          "description": "Service ID"
        },
        "name": {
          "type": "string",
          "description": "Service name.",
          "readOnly": true
        },
        "option": {
          "type": "string",
          "description": "Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).",
          "enum": [
            "Allow",
            "Deny",
            "ExceptionOnly",
            "NotApplicable"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        },
        "enforcement": {
          "type": "string",
          "description": "Initiative enforcement (Enabled or Disabled).",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        },
        "auditOnly": {
          "type": "boolean",
          "description": "Policies set to auditOnly (True or False)."
        },
        "initiatives": {
          "type": "array",
          "description": "Initiatives associated with this service.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "required": [
        "id"
      ]
    },
    "IPGroupResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Network/IpGroups"
          }
        ]
      }
    },
    "KeyVaultResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.KeyVault/vaults"
          }
        ]
      }
    },
    "LogAnalyticsResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.OperationalInsights/workspaces"
          }
        ]
      }
    },
    "MaintenanceModeConfigurationModel": {
      "type": "object",
      "description": "Maintenance Mode",
      "properties": {
        "mode": {
          "type": "string",
          "description": "Current mode of Maintenance Mode Configuration",
          "default": "Off",
          "enum": [
            "On",
            "CanNotDelete",
            "Off",
            "General",
            "Advanced"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        },
        "principals": {
          "type": "array",
          "description": "The user, group or service principal object affected by Maintenance Mode",
          "default": [],
          "items": {
            "$ref": "#/definitions/Principal"
          }
        },
        "justification": {
          "type": "string",
          "description": "Justification for entering or exiting Maintenance Mode",
          "default": "Off",
          "enum": [
            "Networking",
            "Governance",
            "Off"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        }
      },
      "required": [
        "mode"
      ]
    },
    "MaintenanceModeConfigurationPatchModel": {
      "type": "object",
      "description": "Maintenance Mode Patch Model",
      "properties": {
        "mode": {
          "type": "string",
          "description": "Current mode of Maintenance Mode Configuration",
          "enum": [
            "On",
            "CanNotDelete",
            "Off",
            "General",
            "Advanced"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        },
        "principals": {
          "type": "array",
          "description": "The user, group or service principal object affected by Maintenance Mode",
          "items": {
            "$ref": "#/definitions/Principal"
          }
        },
        "justification": {
          "type": "string",
          "description": "Justification for entering or exiting Maintenance Mode",
          "enum": [
            "Networking",
            "Governance",
            "Off"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        }
      }
    },
    "ManagedResourceGroupConfiguration": {
      "type": "object",
      "description": "ManagedResourceGroup related properties",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of managed resource group"
        },
        "location": {
          "$ref": "#/definitions/Azure.Core.azureLocation",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "NsgResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Network/networkSecurityGroups"
          }
        ]
      }
    },
    "Principal": {
      "type": "object",
      "description": "Principal for maintenance mode or role assignments",
      "properties": {
        "id": {
          "type": "string",
          "description": "The object id associated with the principal"
        },
        "type": {
          "type": "string",
          "description": "The type of the object id. We currently allow users, groups, and service principals",
          "enum": [
            "User",
            "Group",
            "ServicePrincipal"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        }
      },
      "required": [
        "id",
        "type"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The provisioning status of the resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Accepted",
        "Creating",
        "Deleting",
        "NotSpecified",
        "Running",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Provisioning State Type Accepted"
          },
          {
            "name": "Creating",
            "value": "Creating",
            "description": "Provisioning State Type Creating"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Provisioning State Type Deleting"
          },
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Provisioning State Type NotSpecified"
          },
          {
            "name": "Running",
            "value": "Running",
            "description": "Provisioning State Type Running"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Provisioning State Type Updating"
          }
        ]
      },
      "readOnly": true
    },
    "RequestMetadata": {
      "type": "object",
      "description": "Request Metadata for approvals request.",
      "properties": {
        "resourceAction": {
          "type": "string",
          "description": "Resource Action of the item being approved or declined."
        },
        "approvalStatus": {
          "type": "string",
          "description": "Status of the approval. Uses ApprovalStatus enum.",
          "default": "Pending",
          "enum": [
            "Approved",
            "Rejected",
            "Pending"
          ],
          "x-ms-enum": {
            "name": "ApprovalStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Approved",
                "value": "Approved",
                "description": "ApprovalStatus Type Approved"
              },
              {
                "name": "Rejected",
                "value": "Rejected",
                "description": "ApprovalStatus Type Rejected"
              },
              {
                "name": "Pending",
                "value": "Pending",
                "description": "ApprovalStatus Type Pending"
              }
            ]
          }
        }
      },
      "required": [
        "resourceAction"
      ]
    },
    "RequestMetadataUpdatableProperties": {
      "type": "object",
      "description": "Request Metadata patch properties.",
      "properties": {
        "resourceAction": {
          "type": "string",
          "description": "Resource Action of the item being approved or declined."
        },
        "approvalStatus": {
          "$ref": "#/definitions/ApprovalStatus",
          "description": "Status of the approval. Uses ApprovalStatus enum."
        }
      }
    },
    "ServiceIdentifier": {
      "type": "string",
      "description": "Identifier for governed services.",
      "enum": [
        "AKS",
        "AppService",
        "AzureFirewalls",
        "ContainerRegistry",
        "CosmosDB",
        "DataConnectors",
        "Insights",
        "KeyVault",
        "Logic",
        "MicrosoftSQL",
        "Monitoring",
        "PostgreSQL",
        "PrivateDNSZones",
        "ServiceBus",
        "Storage"
      ],
      "x-ms-enum": {
        "name": "ServiceIdentifier",
        "modelAsString": true,
        "values": [
          {
            "name": "AKS",
            "value": "AKS",
            "description": "Service identifier for AKS"
          },
          {
            "name": "AppService",
            "value": "AppService",
            "description": "Service identifier for App Service"
          },
          {
            "name": "AzureFirewalls",
            "value": "AzureFirewalls",
            "description": "Service identifier for Azure Firewalls"
          },
          {
            "name": "ContainerRegistry",
            "value": "ContainerRegistry",
            "description": "Service identifier for Container Registry"
          },
          {
            "name": "CosmosDB",
            "value": "CosmosDB",
            "description": "Service identifier for CosmosDB"
          },
          {
            "name": "DataConnectors",
            "value": "DataConnectors",
            "description": "Service identifier for Data Connectors"
          },
          {
            "name": "Insights",
            "value": "Insights",
            "description": "Service identifier for Insights"
          },
          {
            "name": "KeyVault",
            "value": "KeyVault",
            "description": "Service identifier for Key Vault"
          },
          {
            "name": "Logic",
            "value": "Logic",
            "description": "Service identifier for Logic"
          },
          {
            "name": "MicrosoftSql",
            "value": "MicrosoftSQL",
            "description": "Service identifier for Microsoft SQL"
          },
          {
            "name": "Monitoring",
            "value": "Monitoring",
            "description": "Service identifier for Monitoring"
          },
          {
            "name": "PostgreSql",
            "value": "PostgreSQL",
            "description": "Service identifier for PostgreSQL"
          },
          {
            "name": "PrivateDNSZones",
            "value": "PrivateDNSZones",
            "description": "Service identifier for Private DNS Zones"
          },
          {
            "name": "ServiceBus",
            "value": "ServiceBus",
            "description": "Service identifier for Service Bus"
          },
          {
            "name": "Storage",
            "value": "Storage",
            "description": "Service identifier for Storage"
          }
        ]
      }
    },
    "StorageAccountResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Storage/storageAccounts"
          }
        ]
      }
    },
    "SubnetConfiguration": {
      "type": "object",
      "description": "Subnet Configuration",
      "properties": {
        "name": {
          "type": "string",
          "description": "Subnet name."
        },
        "id": {
          "$ref": "#/definitions/SubnetResourceId",
          "description": "Subnet Resource ID.",
          "readOnly": true
        },
        "networkPrefixSize": {
          "type": "integer",
          "format": "int32",
          "description": "Network prefix size."
        },
        "subnetDelegation": {
          "type": "string",
          "description": "Subnet delegation."
        },
        "addressPrefix": {
          "type": "string",
          "description": "Address prefix.",
          "readOnly": true
        },
        "networkSecurityGroupId": {
          "$ref": "#/definitions/NsgResourceId",
          "description": "Network security group ID.",
          "readOnly": true
        }
      },
      "required": [
        "name",
        "networkPrefixSize"
      ]
    },
    "SubnetResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Network/virtualNetworks/subnets"
          }
        ]
      }
    },
    "TransitHubPatchModel": {
      "type": "object",
      "description": "TH Patch Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TransitHubPatchProperties",
          "description": "The TransitHub resource."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "TransitHubPatchProperties": {
      "type": "object",
      "description": "Transit Hub patchable Properties",
      "properties": {
        "state": {
          "$ref": "#/definitions/TransitHubState",
          "description": "The state of the transitHub."
        },
        "transitOption": {
          "$ref": "#/definitions/TransitOption",
          "description": "The TransitOption of the transitHub."
        }
      }
    },
    "TransitHubProperties": {
      "type": "object",
      "description": "Describes the properties of an Transit Hub.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/TransitHubState",
          "description": "The state of the transitHub."
        },
        "transitOption": {
          "$ref": "#/definitions/TransitOption",
          "description": "The TransitOption of the transitHub."
        },
        "resourceCollection": {
          "type": "array",
          "description": "List of resource ids modified by transitHubs.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "TransitHubResource": {
      "type": "object",
      "description": "TransitHub Model Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TransitHubProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "TransitHubResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Mission/communities/transitHubs"
          }
        ]
      }
    },
    "TransitHubResourceListResult": {
      "type": "object",
      "description": "The response of a TransitHubResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The TransitHubResource items on this page",
          "items": {
            "$ref": "#/definitions/TransitHubResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "TransitHubState": {
      "type": "string",
      "description": "Specifies the state of the transitHub.",
      "enum": [
        "PendingApproval",
        "Approved",
        "PendingUpdate",
        "Active",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "TransitHubState",
        "modelAsString": true,
        "values": [
          {
            "name": "PendingApproval",
            "value": "PendingApproval",
            "description": "TransitHubState Type PendingApproval"
          },
          {
            "name": "Approved",
            "value": "Approved",
            "description": "TransitHubState Type Approved"
          },
          {
            "name": "PendingUpdate",
            "value": "PendingUpdate",
            "description": "TransitHubState Type PendingUpdate"
          },
          {
            "name": "Active",
            "value": "Active",
            "description": "TransitHubState Type Active"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "TransitHubState Type Failed"
          }
        ]
      }
    },
    "TransitOption": {
      "type": "object",
      "description": "TransitOption Properties",
      "properties": {
        "type": {
          "$ref": "#/definitions/TransitOptionType",
          "description": "Transit Option Type."
        },
        "params": {
          "$ref": "#/definitions/TransitOptionParams",
          "description": "Transit Option Params"
        }
      }
    },
    "TransitOptionParams": {
      "type": "object",
      "description": "TransitOptionParams Properties",
      "properties": {
        "scaleUnits": {
          "type": "integer",
          "format": "int64",
          "description": "Transit Option Params scaleUnits."
        },
        "remoteVirtualNetworkId": {
          "$ref": "#/definitions/VirtualNetworkResourceId",
          "description": "Transit Option Params remoteVirtualNetworkId."
        }
      }
    },
    "TransitOptionType": {
      "type": "string",
      "description": "Specifies the type of the transitOption.",
      "enum": [
        "ExpressRoute",
        "Gateway",
        "Peering"
      ],
      "x-ms-enum": {
        "name": "TransitOptionType",
        "modelAsString": true,
        "values": [
          {
            "name": "ExpressRoute",
            "value": "ExpressRoute",
            "description": "TransitOptionType ExpressRoute"
          },
          {
            "name": "Gateway",
            "value": "Gateway",
            "description": "TransitOptionType Gateway"
          },
          {
            "name": "Peering",
            "value": "Peering",
            "description": "TransitOptionType Peering"
          }
        ]
      }
    },
    "VirtualEnclavePatchModel": {
      "type": "object",
      "description": "Virtual Enclave Patch Model",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VirtualEnclavePatchProperties",
          "description": "Virtual Enclave Patch properties"
        },
        "identity": {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.ManagedServiceIdentityUpdate",
          "description": "The managed service identities assigned to this resource."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "VirtualEnclavePatchProperties": {
      "type": "object",
      "description": "Virtual Enclave Patchable Properties",
      "properties": {
        "enclaveVirtualNetwork": {
          "$ref": "#/definitions/EnclaveVirtualNetworkModel",
          "description": "Virtual Network."
        },
        "bastionEnabled": {
          "type": "boolean",
          "description": "Deploy Bastion service (True or False)."
        },
        "enclaveDefaultSettings": {
          "$ref": "#/definitions/EnclaveDefaultSettingsPatchModel",
          "description": "Enclave default settings."
        },
        "maintenanceModeConfiguration": {
          "$ref": "#/definitions/MaintenanceModeConfigurationPatchModel",
          "description": "Maintenance Mode configuration."
        }
      }
    },
    "VirtualEnclaveProperties": {
      "type": "object",
      "description": "Virtual Enclave Resource properties",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning State.",
          "readOnly": true
        },
        "enclaveVirtualNetwork": {
          "$ref": "#/definitions/EnclaveVirtualNetworkModel",
          "description": "Virtual Network."
        },
        "enclaveAddressSpaces": {
          "$ref": "#/definitions/EnclaveAddressSpacesModel",
          "description": "Enclave Address Spaces",
          "readOnly": true
        },
        "communityResourceId": {
          "$ref": "#/definitions/CommunityResourceId",
          "description": "Community Resource Id.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "resourceCollection": {
          "type": "array",
          "description": "List of resource ids created by Virtual Enclave.",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource."
          },
          "readOnly": true
        },
        "managedResourceGroupConfiguration": {
          "$ref": "#/definitions/ManagedResourceGroupConfiguration",
          "description": "Managed resource group name.",
          "readOnly": true
        },
        "bastionEnabled": {
          "type": "boolean",
          "description": "Deploy Bastion service (True or False).",
          "default": false
        },
        "enclaveDefaultSettings": {
          "$ref": "#/definitions/EnclaveDefaultSettingsModel",
          "description": "Enclave default settings."
        },
        "maintenanceModeConfiguration": {
          "$ref": "#/definitions/MaintenanceModeConfigurationModel",
          "description": "Maintenance Mode configuration."
        }
      },
      "required": [
        "enclaveVirtualNetwork",
        "communityResourceId"
      ]
    },
    "VirtualNetworkResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Network/virtualNetworks"
          }
        ]
      }
    },
    "WorkloadPatchModel": {
      "type": "object",
      "description": "Workload Patch Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadPatchProperties",
          "description": "Workload Patch properties"
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "WorkloadPatchProperties": {
      "type": "object",
      "description": "Workload patchable Properties",
      "properties": {
        "resourceGroupCollection": {
          "type": "array",
          "description": "List of resource group ids.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "WorkloadProperties": {
      "type": "object",
      "description": "Workload Resource properties",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning State.",
          "readOnly": true
        },
        "resourceGroupCollection": {
          "type": "array",
          "description": "List of resource group ids.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "WorkloadResource": {
      "type": "object",
      "description": "Workload Model Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "WorkloadResourceListResult": {
      "type": "object",
      "description": "The response of a WorkloadResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadResource items on this page",
          "items": {
            "$ref": "#/definitions/WorkloadResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    }
  },
  "parameters": {
    "Azure.ResourceManager.ResourceUriParameter": {
      "name": "resourceUri",
      "in": "path",
      "description": "The fully qualified Azure Resource manager identifier of the resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    }
  }
}
