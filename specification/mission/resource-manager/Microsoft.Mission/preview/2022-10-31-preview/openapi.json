{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft Mission",
    "version": "2022-10-31-preview",
    "description": "Microsoft Mission Resource Provider management API.",
    "x-cadl-generated": [
      {
        "emitter": "@azure-tools/cadl-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "VirtualEnclave"
    },
    {
      "name": "Community"
    },
    {
      "name": "Operations"
    }
  ],
  "paths": {
    "/providers/Microsoft.Mission/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Operations_List_MaximumSet_Gen": {
            "$ref": "./examples/Operations_List_MaximumSet_Gen.json"
          },
          "Operations_List_MinimumSet_Gen": {
            "$ref": "./examples/Operations_List_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Mission/communities": {
      "get": {
        "tags": [
          "Community"
        ],
        "operationId": "Community_ListBySubscription",
        "description": "List communityResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/communityResourceListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Community_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/Community_ListBySubscription_MaximumSet_Gen.json"
          },
          "Community_ListBySubscription_MinimumSet_Gen": {
            "$ref": "./examples/Community_ListBySubscription_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Mission/communities/{communityName}/virtualEnclaves": {
      "get": {
        "tags": [
          "VirtualEnclave"
        ],
        "operationId": "VirtualEnclave_ListBySubscription",
        "description": "List enclaveResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/communityResource.communityName"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/enclaveResourceListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "VirtualEnclave_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/VirtualEnclave_ListBySubscription_MaximumSet_Gen.json"
          },
          "VirtualEnclave_ListBySubscription_MinimumSet_Gen": {
            "$ref": "./examples/VirtualEnclave_ListBySubscription_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/communities": {
      "get": {
        "tags": [
          "Community"
        ],
        "operationId": "Community_ListByResourceGroup",
        "description": "List communityResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/communityResourceListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Community_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/Community_ListByResourceGroup_MaximumSet_Gen.json"
          },
          "Community_ListByResourceGroup_MinimumSet_Gen": {
            "$ref": "./examples/Community_ListByResourceGroup_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/communities/{communityName}": {
      "get": {
        "tags": [
          "Community"
        ],
        "operationId": "Community_Get",
        "description": "Get a communityResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/communityResource.communityName"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/communityResource"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Community_Get_MaximumSet_Gen": {
            "$ref": "./examples/Community_Get_MaximumSet_Gen.json"
          },
          "Community_Get_MinimumSet_Gen": {
            "$ref": "./examples/Community_Get_MinimumSet_Gen.json"
          }
        }
      },
      "put": {
        "tags": [
          "Community"
        ],
        "operationId": "Community_CreateOrUpdate",
        "description": "Create a communityResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/communityResource.communityName"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/communityResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/communityResource"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/communityResource"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Community_CreateOrUpdate_MaximumSet_Gen": {
            "$ref": "./examples/Community_CreateOrUpdate_MaximumSet_Gen.json"
          },
          "Community_CreateOrUpdate_MinimumSet_Gen": {
            "$ref": "./examples/Community_CreateOrUpdate_MinimumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Community"
        ],
        "operationId": "Community_Update",
        "description": "Update a communityResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/communityResource.communityName"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/communityResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/communityResource"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Community_Update_MaximumSet_Gen": {
            "$ref": "./examples/Community_Update_MaximumSet_Gen.json"
          },
          "Community_Update_MinimumSet_Gen": {
            "$ref": "./examples/Community_Update_MinimumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Community"
        ],
        "operationId": "Community_Delete",
        "description": "Delete a communityResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/communityResource.communityName"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Community_Delete_MaximumSet_Gen": {
            "$ref": "./examples/Community_Delete_MaximumSet_Gen.json"
          },
          "Community_Delete_MinimumSet_Gen": {
            "$ref": "./examples/Community_Delete_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/communities/{communityName}/virtualEnclaves": {
      "get": {
        "tags": [
          "VirtualEnclave"
        ],
        "operationId": "VirtualEnclave_ListByCommunityResource",
        "description": "List enclaveResource resources by CommunityResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/communityResource.communityName"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/enclaveResourceListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "VirtualEnclave_ListByCommunityResource_MaximumSet_Gen": {
            "$ref": "./examples/VirtualEnclave_ListByCommunityResource_MaximumSet_Gen.json"
          },
          "VirtualEnclave_ListByCommunityResource_MinimumSet_Gen": {
            "$ref": "./examples/VirtualEnclave_ListByCommunityResource_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Mission/communities/{communityName}/virtualEnclaves/{virtualEnclaveName}": {
      "get": {
        "tags": [
          "VirtualEnclave"
        ],
        "operationId": "VirtualEnclave_Get",
        "description": "Get a enclaveResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/communityResource.communityName"
          },
          {
            "$ref": "#/parameters/enclaveResource.virtualEnclaveName"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/enclaveResource"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VirtualEnclave_Get_MaximumSet_Gen": {
            "$ref": "./examples/VirtualEnclave_Get_MaximumSet_Gen.json"
          },
          "VirtualEnclave_Get_MinimumSet_Gen": {
            "$ref": "./examples/VirtualEnclave_Get_MinimumSet_Gen.json"
          }
        }
      },
      "put": {
        "tags": [
          "VirtualEnclave"
        ],
        "operationId": "VirtualEnclave_CreateOrUpdate",
        "description": "Create a enclaveResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/communityResource.communityName"
          },
          {
            "$ref": "#/parameters/enclaveResource.virtualEnclaveName"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/enclaveResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/enclaveResource"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/enclaveResource"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "VirtualEnclave_CreateOrUpdate_MaximumSet_Gen": {
            "$ref": "./examples/VirtualEnclave_CreateOrUpdate_MaximumSet_Gen.json"
          },
          "VirtualEnclave_CreateOrUpdate_MinimumSet_Gen": {
            "$ref": "./examples/VirtualEnclave_CreateOrUpdate_MinimumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "VirtualEnclave"
        ],
        "operationId": "VirtualEnclave_Update",
        "description": "Update a enclaveResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/communityResource.communityName"
          },
          {
            "$ref": "#/parameters/enclaveResource.virtualEnclaveName"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/enclaveResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/enclaveResource"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VirtualEnclave_Update_MaximumSet_Gen": {
            "$ref": "./examples/VirtualEnclave_Update_MaximumSet_Gen.json"
          },
          "VirtualEnclave_Update_MinimumSet_Gen": {
            "$ref": "./examples/VirtualEnclave_Update_MinimumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "VirtualEnclave"
        ],
        "operationId": "VirtualEnclave_Delete",
        "description": "Delete a enclaveResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/communityResource.communityName"
          },
          {
            "$ref": "#/parameters/enclaveResource.virtualEnclaveName"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "VirtualEnclave_Delete_MaximumSet_Gen": {
            "$ref": "./examples/VirtualEnclave_Delete_MaximumSet_Gen.json"
          },
          "VirtualEnclave_Delete_MinimumSet_Gen": {
            "$ref": "./examples/VirtualEnclave_Delete_MinimumSet_Gen.json"
          }
        }
      }
    }
  },
  "definitions": {
    "communityProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Community Description."
        },
        "addressSpace": {
          "type": "string",
          "description": "Address Space."
        },
        "dnsServers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Dns Servers."
        },
        "provisioningState": {
          "$ref": "#/definitions/provisioningState",
          "description": "Provisioning State.",
          "readOnly": true
        }
      },
      "description": "Community Resource Properties"
    },
    "communityResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/communityProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-client-flatten": true
        }
      },
      "description": "Community Model Resource",
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "communityResourceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/communityResource"
          },
          "x-cadl-name": "communityResource[]",
          "description": "The communityResource items on this page"
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items"
        }
      },
      "description": "The response of a communityResource list operation.",
      "required": [
        "value"
      ]
    },
    "communityResourceUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/communityResourceUpdateProperties"
        }
      },
      "description": "The type used for update operations of the communityResource."
    },
    "communityResourceUpdateProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Community Description."
        },
        "addressSpace": {
          "type": "string",
          "description": "Address Space."
        },
        "dnsServers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Dns Servers."
        }
      },
      "description": "The updatable properties of the communityResource."
    },
    "enclaveCore": {
      "type": "object",
      "properties": {
        "enclaveKeyVault": {
          "$ref": "#/definitions/enclaveKeyVault",
          "description": "Virtual Enclave's centrally shared Key Vault."
        },
        "ipAddress": {
          "type": "string",
          "description": "Ip Address."
        }
      },
      "description": "Enclave Core properties"
    },
    "enclaveKeyVault": {
      "type": "object",
      "properties": {
        "domainNameValue": {
          "type": "string",
          "description": "Domain Name."
        },
        "domainPasswordSecretValue": {
          "type": "string",
          "description": "Domain Password Secret Value."
        },
        "domainAccountValue": {
          "type": "string",
          "description": "Domain Account Value."
        },
        "localAccountValue": {
          "type": "string",
          "description": "Local Account Value."
        },
        "localPasswordSecretValue": {
          "type": "string",
          "description": "Local Password Secret Value."
        },
        "ouPathValue": {
          "type": "string",
          "description": "Ou Path Value."
        }
      },
      "description": "Enclave Key Vault Properties"
    },
    "enclaveResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/virtualEnclaveProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-client-flatten": true
        }
      },
      "description": "Virtual Enclave Model Resource",
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "enclaveResourceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/enclaveResource"
          },
          "x-cadl-name": "enclaveResource[]",
          "description": "The enclaveResource items on this page"
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items"
        }
      },
      "description": "The response of a enclaveResource list operation.",
      "required": [
        "value"
      ]
    },
    "enclaveResourceUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/enclaveResourceUpdateProperties"
        }
      },
      "description": "The type used for update operations of the enclaveResource."
    },
    "enclaveResourceUpdateProperties": {
      "type": "object",
      "properties": {
        "enclaveResourcesGroupId": {
          "type": "string",
          "description": "Virtual Enclave Resource Group Id."
        },
        "enclaveVirtualNetwork": {
          "$ref": "#/definitions/enclaveVirtualNetwork",
          "description": "Virtual Enclave Virtual Network."
        },
        "enclaveCore": {
          "$ref": "#/definitions/enclaveCore",
          "description": "Virtual Enclave Core."
        },
        "enclaveAdministratorsObjectId": {
          "type": "string",
          "description": "Virtual Enclave Administrators Object Id."
        }
      },
      "description": "The updatable properties of the enclaveResource."
    },
    "enclaveVirtualNetwork": {
      "type": "object",
      "properties": {
        "networkSize": {
          "type": "string",
          "description": "Network Size."
        },
        "networkCidr": {
          "type": "string",
          "description": "Network Address."
        },
        "subnetGatewayCidr": {
          "type": "string",
          "description": "Subnet Gateway Address."
        },
        "subnetClientCidr": {
          "type": "string",
          "description": "Subnet Client Address."
        },
        "subnetManagementCidr": {
          "type": "string",
          "description": "Subnet Management Address."
        },
        "subnetResourcesCidr": {
          "type": "string",
          "description": "Subnet Resources Address."
        },
        "subnetHostPoolCidr": {
          "type": "string",
          "description": "Subnet HostPool Address."
        },
        "vpnASN": {
          "type": "integer",
          "format": "int32",
          "description": "VPN asn."
        }
      },
      "description": "Enclave Virtual Network Properties"
    },
    "provisioningState": {
      "type": "string",
      "description": "Provisioning State Enum",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Unknown",
        "Validating",
        "Processing",
        "Deleting",
        "Accepted",
        "Completed",
        "Deleted"
      ],
      "x-ms-enum": {
        "name": "provisioningState",
        "modelAsString": true
      }
    },
    "virtualEnclaveProperties": {
      "type": "object",
      "properties": {
        "enclaveResourcesGroupId": {
          "type": "string",
          "description": "Virtual Enclave Resource Group Id."
        },
        "enclaveVirtualNetwork": {
          "$ref": "#/definitions/enclaveVirtualNetwork",
          "description": "Virtual Enclave Virtual Network."
        },
        "enclaveCore": {
          "$ref": "#/definitions/enclaveCore",
          "description": "Virtual Enclave Core."
        },
        "enclaveAdministratorsObjectId": {
          "type": "string",
          "description": "Virtual Enclave Administrators Object Id."
        },
        "provisioningState": {
          "$ref": "#/definitions/provisioningState",
          "description": "Provisioning State.",
          "readOnly": true
        }
      },
      "description": "Virtual Enclave Resource properties"
    }
  },
  "parameters": {
    "communityResource.communityName": {
      "name": "communityName",
      "in": "path",
      "required": true,
      "description": "The name of the communityResource Resource",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "enclaveResource.virtualEnclaveName": {
      "name": "virtualEnclaveName",
      "in": "path",
      "required": true,
      "description": "The name of the enclaveResource Resource",
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
