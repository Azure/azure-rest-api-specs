{
  "swagger": "2.0",
  "info": {
    "title": "CustomerInsightsManagementClient",
    "version": "2017-04-26",
    "description": "The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Hubs"
    },
    {
      "name": "Images"
    },
    {
      "name": "Roles"
    },
    {
      "name": "Profiles"
    },
    {
      "name": "Interactions"
    },
    {
      "name": "Relationships"
    },
    {
      "name": "RelationshipLinks"
    },
    {
      "name": "AuthorizationPolicies"
    },
    {
      "name": "Connectors"
    },
    {
      "name": "ConnectorMappings"
    },
    {
      "name": "Kpi"
    },
    {
      "name": "WidgetTypes"
    },
    {
      "name": "Views"
    },
    {
      "name": "Links"
    },
    {
      "name": "RoleAssignments"
    },
    {
      "name": "Predictions"
    }
  ],
  "paths": {
    "/providers/Azure.ResourceManager.CustomerInsights/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Azure.ResourceManager.CustomerInsights/hubs": {
      "get": {
        "operationId": "Hubs_List",
        "tags": [
          "Hubs"
        ],
        "description": "Gets all hubs in the specified subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HubListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs": {
      "get": {
        "operationId": "Hubs_ListByResourceGroup",
        "tags": [
          "Hubs"
        ],
        "description": "Gets all the hubs in a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HubListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}": {
      "get": {
        "operationId": "Hubs_Get",
        "tags": [
          "Hubs"
        ],
        "description": "Gets information about the specified hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Hub"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Hubs_CreateOrUpdate",
        "tags": [
          "Hubs"
        ],
        "description": "Creates a hub, or updates an existing hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Hub"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Hub' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Hub"
            }
          },
          "201": {
            "description": "Resource 'Hub' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Hub"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "operationId": "Hubs_Update",
        "tags": [
          "Hubs"
        ],
        "description": "Updates a Hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HubUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Hub"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "Hubs_Delete",
        "tags": [
          "Hubs"
        ],
        "description": "Deletes the specified hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/authorizationPolicies": {
      "get": {
        "operationId": "AuthorizationPolicies_ListByHub",
        "tags": [
          "AuthorizationPolicies"
        ],
        "description": "Gets all the authorization policies in a specified hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AuthorizationPolicyResourceFormatListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/authorizationPolicies/{authorizationPolicyName}": {
      "get": {
        "operationId": "AuthorizationPolicies_Get",
        "tags": [
          "AuthorizationPolicies"
        ],
        "description": "Gets an authorization policy in the hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorizationPolicyName",
            "in": "path",
            "description": "The name of the policy.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AuthorizationPolicyResourceFormat"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "AuthorizationPolicies_CreateOrUpdate",
        "tags": [
          "AuthorizationPolicies"
        ],
        "description": "Creates an authorization policy or updates an existing authorization policy.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorizationPolicyName",
            "in": "path",
            "description": "The name of the policy.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthorizationPolicyResourceFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AuthorizationPolicyResourceFormat' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AuthorizationPolicyResourceFormat"
            }
          },
          "201": {
            "description": "Resource 'AuthorizationPolicyResourceFormat' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/AuthorizationPolicyResourceFormat"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/authorizationPolicies/{authorizationPolicyName}/regeneratePrimaryKey": {
      "post": {
        "operationId": "AuthorizationPolicies_RegeneratePrimaryKey",
        "tags": [
          "AuthorizationPolicies"
        ],
        "description": "Regenerates the primary policy key of the specified authorization policy.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorizationPolicyName",
            "in": "path",
            "description": "The name of the policy.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AuthorizationPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/authorizationPolicies/{authorizationPolicyName}/regenerateSecondaryKey": {
      "post": {
        "operationId": "AuthorizationPolicies_RegenerateSecondaryKey",
        "tags": [
          "AuthorizationPolicies"
        ],
        "description": "Regenerates the secondary policy key of the specified authorization policy.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorizationPolicyName",
            "in": "path",
            "description": "The name of the policy.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AuthorizationPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/connectors": {
      "get": {
        "operationId": "Connectors_ListByHub",
        "tags": [
          "Connectors"
        ],
        "description": "Gets all the connectors in the specified hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConnectorResourceFormatListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/connectors/{connectorName}": {
      "get": {
        "operationId": "Connectors_Get",
        "tags": [
          "Connectors"
        ],
        "description": "Gets a connector in the hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorName",
            "in": "path",
            "description": "The name of the connector.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConnectorResourceFormat"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Connectors_CreateOrUpdate",
        "tags": [
          "Connectors"
        ],
        "description": "Creates a connector or updates an existing connector in the hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorName",
            "in": "path",
            "description": "The name of the connector.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectorResourceFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ConnectorResourceFormat' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ConnectorResourceFormat"
            }
          },
          "201": {
            "description": "Resource 'ConnectorResourceFormat' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ConnectorResourceFormat"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Connectors_Delete",
        "tags": [
          "Connectors"
        ],
        "description": "Deletes a connector in the hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorName",
            "in": "path",
            "description": "The name of the connector.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/connectors/{connectorName}/mappings": {
      "get": {
        "operationId": "ConnectorMappings_ListByConnectorResourceFormat",
        "tags": [
          "ConnectorMappings"
        ],
        "description": "Gets all the connector mappings in the specified connector.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorName",
            "in": "path",
            "description": "The name of the connector.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConnectorMappingResourceFormatListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/connectors/{connectorName}/mappings/{mappingName}": {
      "get": {
        "operationId": "ConnectorMappings_Get",
        "tags": [
          "ConnectorMappings"
        ],
        "description": "Gets a connector mapping in the connector.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorName",
            "in": "path",
            "description": "The name of the connector.",
            "required": true,
            "type": "string"
          },
          {
            "name": "mappingName",
            "in": "path",
            "description": "The name of the connector mapping.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConnectorMappingResourceFormat"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "ConnectorMappings_CreateOrUpdate",
        "tags": [
          "ConnectorMappings"
        ],
        "description": "Creates a connector mapping or updates an existing connector mapping in the connector.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorName",
            "in": "path",
            "description": "The name of the connector.",
            "required": true,
            "type": "string"
          },
          {
            "name": "mappingName",
            "in": "path",
            "description": "The name of the connector mapping.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectorMappingResourceFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ConnectorMappingResourceFormat' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ConnectorMappingResourceFormat"
            }
          },
          "201": {
            "description": "Resource 'ConnectorMappingResourceFormat' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ConnectorMappingResourceFormat"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "ConnectorMappings_Delete",
        "tags": [
          "ConnectorMappings"
        ],
        "description": "Deletes a connector mapping in the connector.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorName",
            "in": "path",
            "description": "The name of the connector.",
            "required": true,
            "type": "string"
          },
          {
            "name": "mappingName",
            "in": "path",
            "description": "The name of the connector mapping.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/getUploadUrlForData": {
      "post": {
        "operationId": "Images_GetUploadUrlForData",
        "tags": [
          "Images"
        ],
        "description": "Gets data image upload URL.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetImageUploadUrlInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImageDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/getUploadUrlForEntityType": {
      "post": {
        "operationId": "Images_GetUploadUrlForEntityType",
        "tags": [
          "Images"
        ],
        "description": "Gets entity type (profile or interaction) image upload URL.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetImageUploadUrlInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImageDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/interactions": {
      "get": {
        "operationId": "Interactions_ListByHub",
        "tags": [
          "Interactions"
        ],
        "description": "Gets all interactions in the hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "locale-code",
            "in": "query",
            "description": "Locale of interaction to retrieve, default is en-us.",
            "required": false,
            "type": "string",
            "default": "en-us"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InteractionResourceFormatListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/interactions/{interactionName}": {
      "get": {
        "operationId": "Interactions_Get",
        "tags": [
          "Interactions"
        ],
        "description": "Gets information about the specified interaction.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "locale-code",
            "in": "query",
            "description": "Locale of interaction to retrieve, default is en-us.",
            "required": false,
            "type": "string",
            "default": "en-us"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "interactionName",
            "in": "path",
            "description": "The name of the interaction.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InteractionResourceFormat"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Interactions_CreateOrUpdate",
        "tags": [
          "Interactions"
        ],
        "description": "Creates an interaction or updates an existing interaction within a hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "interactionName",
            "in": "path",
            "description": "The name of the interaction.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InteractionResourceFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'InteractionResourceFormat' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/InteractionResourceFormat"
            }
          },
          "201": {
            "description": "Resource 'InteractionResourceFormat' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/InteractionResourceFormat"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/interactions/{interactionName}/suggestRelationshipLinks": {
      "post": {
        "operationId": "Interactions_SuggestRelationshipLinks",
        "tags": [
          "Interactions"
        ],
        "description": "Suggests relationships to create relationship links.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "interactionName",
            "in": "path",
            "description": "The name of the interaction.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SuggestRelationshipLinksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/kpi": {
      "get": {
        "operationId": "Kpi_ListByHub",
        "tags": [
          "Kpi"
        ],
        "description": "Gets all the KPIs in the specified hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/KpiResourceFormatListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/kpi/{kpiName}": {
      "get": {
        "operationId": "Kpi_Get",
        "tags": [
          "Kpi"
        ],
        "description": "Gets a KPI in the hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "kpiName",
            "in": "path",
            "description": "The name of the KPI.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/KpiResourceFormat"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Kpi_CreateOrUpdate",
        "tags": [
          "Kpi"
        ],
        "description": "Creates a KPI or updates an existing KPI in the hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "kpiName",
            "in": "path",
            "description": "The name of the KPI.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KpiResourceFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'KpiResourceFormat' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/KpiResourceFormat"
            }
          },
          "201": {
            "description": "Resource 'KpiResourceFormat' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/KpiResourceFormat"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Kpi_Delete",
        "tags": [
          "Kpi"
        ],
        "description": "Deletes a KPI in the hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "kpiName",
            "in": "path",
            "description": "The name of the KPI.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/kpi/{kpiName}/reprocess": {
      "post": {
        "operationId": "Kpi_Reprocess",
        "tags": [
          "Kpi"
        ],
        "description": "Reprocesses the Kpi values of the specified KPI.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "kpiName",
            "in": "path",
            "description": "The name of the KPI.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Action completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/links": {
      "get": {
        "operationId": "Links_ListByHub",
        "tags": [
          "Links"
        ],
        "description": "Gets all the links in the specified hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LinkResourceFormatListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/links/{linkName}": {
      "get": {
        "operationId": "Links_Get",
        "tags": [
          "Links"
        ],
        "description": "Gets a link in the hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "linkName",
            "in": "path",
            "description": "The name of the link.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LinkResourceFormat"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Links_CreateOrUpdate",
        "tags": [
          "Links"
        ],
        "description": "Creates a link or updates an existing link in the hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "linkName",
            "in": "path",
            "description": "The name of the link.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LinkResourceFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'LinkResourceFormat' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/LinkResourceFormat"
            }
          },
          "201": {
            "description": "Resource 'LinkResourceFormat' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/LinkResourceFormat"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Links_Delete",
        "tags": [
          "Links"
        ],
        "description": "Deletes a link in the hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "linkName",
            "in": "path",
            "description": "The name of the link.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/predictions": {
      "get": {
        "operationId": "Predictions_ListByHub",
        "tags": [
          "Predictions"
        ],
        "description": "Gets all the predictions in the specified hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PredictionResourceFormatListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/predictions/{predictionName}": {
      "get": {
        "operationId": "Predictions_Get",
        "tags": [
          "Predictions"
        ],
        "description": "Gets a Prediction in the hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "predictionName",
            "in": "path",
            "description": "The name of the Prediction.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PredictionResourceFormat"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Predictions_CreateOrUpdate",
        "tags": [
          "Predictions"
        ],
        "description": "Creates a Prediction or updates an existing Prediction in the hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "predictionName",
            "in": "path",
            "description": "The name of the Prediction.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PredictionResourceFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PredictionResourceFormat' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PredictionResourceFormat"
            }
          },
          "201": {
            "description": "Resource 'PredictionResourceFormat' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/PredictionResourceFormat"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Predictions_Delete",
        "tags": [
          "Predictions"
        ],
        "description": "Deletes a Prediction in the hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "predictionName",
            "in": "path",
            "description": "The name of the Prediction.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/predictions/{predictionName}/getModelStatus": {
      "post": {
        "operationId": "Predictions_GetModelStatus",
        "tags": [
          "Predictions"
        ],
        "description": "Gets model status of the prediction.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "predictionName",
            "in": "path",
            "description": "The name of the Prediction.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PredictionModelStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/predictions/{predictionName}/getTrainingResults": {
      "post": {
        "operationId": "Predictions_GetTrainingResults",
        "tags": [
          "Predictions"
        ],
        "description": "Gets training results.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "predictionName",
            "in": "path",
            "description": "The name of the Prediction.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PredictionTrainingResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/predictions/{predictionName}/modelStatus": {
      "post": {
        "operationId": "Predictions_ModelStatus",
        "tags": [
          "Predictions"
        ],
        "description": "Creates or updates the model status of prediction.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "predictionName",
            "in": "path",
            "description": "The name of the Prediction.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PredictionModelStatus"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/profiles": {
      "get": {
        "operationId": "Profiles_ListByHub",
        "tags": [
          "Profiles"
        ],
        "description": "Gets all profile in the hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "locale-code",
            "in": "query",
            "description": "Locale of profile to retrieve, default is en-us.",
            "required": false,
            "type": "string",
            "default": "en-us"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProfileResourceFormatListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/profiles/{profileName}": {
      "get": {
        "operationId": "Profiles_Get",
        "tags": [
          "Profiles"
        ],
        "description": "Gets information about the specified profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "locale-code",
            "in": "query",
            "description": "Locale of profile to retrieve, default is en-us.",
            "required": false,
            "type": "string",
            "default": "en-us"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "The name of the profile.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProfileResourceFormat"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Profiles_CreateOrUpdate",
        "tags": [
          "Profiles"
        ],
        "description": "Creates a profile within a Hub, or updates an existing profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "The name of the profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProfileResourceFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ProfileResourceFormat' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ProfileResourceFormat"
            }
          },
          "201": {
            "description": "Resource 'ProfileResourceFormat' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ProfileResourceFormat"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Profiles_Delete",
        "tags": [
          "Profiles"
        ],
        "description": "Deletes a profile within a hub",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "locale-code",
            "in": "query",
            "description": "Locale of profile to retrieve, default is en-us.",
            "required": false,
            "type": "string",
            "default": "en-us"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "The name of the profile.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/profiles/{profileName}/getEnrichingKpis": {
      "post": {
        "operationId": "Profiles_GetEnrichingKpis",
        "tags": [
          "Profiles"
        ],
        "description": "Gets the KPIs that enrich the profile Type identified by the supplied name. Enrichment happens through participants of the Interaction on an Interaction KPI and through Relationships for Profile KPIs.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "The name of the profile.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/relationshipLinks": {
      "get": {
        "operationId": "RelationshipLinks_ListByHub",
        "tags": [
          "RelationshipLinks"
        ],
        "description": "Gets all relationship links in the hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RelationshipLinkResourceFormatListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/relationshipLinks/{relationshipLinkName}": {
      "get": {
        "operationId": "RelationshipLinks_Get",
        "tags": [
          "RelationshipLinks"
        ],
        "description": "Gets information about the specified relationship Link.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "relationshipLinkName",
            "in": "path",
            "description": "The name of the relationship link.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RelationshipLinkResourceFormat"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "RelationshipLinks_CreateOrUpdate",
        "tags": [
          "RelationshipLinks"
        ],
        "description": "Creates a relationship link or updates an existing relationship link within a hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "relationshipLinkName",
            "in": "path",
            "description": "The name of the relationship link.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RelationshipLinkResourceFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'RelationshipLinkResourceFormat' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/RelationshipLinkResourceFormat"
            }
          },
          "201": {
            "description": "Resource 'RelationshipLinkResourceFormat' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/RelationshipLinkResourceFormat"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "RelationshipLinks_Delete",
        "tags": [
          "RelationshipLinks"
        ],
        "description": "Deletes a relationship link within a hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "relationshipLinkName",
            "in": "path",
            "description": "The name of the relationship link.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/relationships": {
      "get": {
        "operationId": "Relationships_ListByHub",
        "tags": [
          "Relationships"
        ],
        "description": "Gets all relationships in the hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RelationshipResourceFormatListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/relationships/{relationshipName}": {
      "get": {
        "operationId": "Relationships_Get",
        "tags": [
          "Relationships"
        ],
        "description": "Gets information about the specified relationship.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "relationshipName",
            "in": "path",
            "description": "The name of the relationship.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RelationshipResourceFormat"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Relationships_CreateOrUpdate",
        "tags": [
          "Relationships"
        ],
        "description": "Creates a relationship or updates an existing relationship within a hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "relationshipName",
            "in": "path",
            "description": "The name of the relationship.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RelationshipResourceFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'RelationshipResourceFormat' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/RelationshipResourceFormat"
            }
          },
          "201": {
            "description": "Resource 'RelationshipResourceFormat' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/RelationshipResourceFormat"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Relationships_Delete",
        "tags": [
          "Relationships"
        ],
        "description": "Deletes a relationship within a hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "relationshipName",
            "in": "path",
            "description": "The name of the relationship.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/roleAssignments": {
      "get": {
        "operationId": "RoleAssignments_ListByHub",
        "tags": [
          "RoleAssignments"
        ],
        "description": "Gets all the role assignments for the specified hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RoleAssignmentResourceFormatListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/roleAssignments/{assignmentName}": {
      "get": {
        "operationId": "RoleAssignments_Get",
        "tags": [
          "RoleAssignments"
        ],
        "description": "Gets the role assignment in the hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "assignmentName",
            "in": "path",
            "description": "The name of the role assignment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RoleAssignmentResourceFormat"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "RoleAssignments_CreateOrUpdate",
        "tags": [
          "RoleAssignments"
        ],
        "description": "Creates or updates a role assignment in the hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "assignmentName",
            "in": "path",
            "description": "The name of the role assignment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoleAssignmentResourceFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'RoleAssignmentResourceFormat' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/RoleAssignmentResourceFormat"
            }
          },
          "201": {
            "description": "Resource 'RoleAssignmentResourceFormat' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/RoleAssignmentResourceFormat"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "RoleAssignments_Delete",
        "tags": [
          "RoleAssignments"
        ],
        "description": "Deletes the role assignment in the hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "assignmentName",
            "in": "path",
            "description": "The name of the role assignment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/views": {
      "get": {
        "operationId": "Views_ListByHub",
        "tags": [
          "Views"
        ],
        "description": "Gets all available views for given user in the specified hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "The user ID. Use * to retrieve hub level views.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ViewResourceFormatListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/views/{viewName}": {
      "get": {
        "operationId": "Views_Get",
        "tags": [
          "Views"
        ],
        "description": "Gets a view in the hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "The user ID. Use * to retrieve hub level view.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "viewName",
            "in": "path",
            "description": "The name of the view.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ViewResourceFormat"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Views_CreateOrUpdate",
        "tags": [
          "Views"
        ],
        "description": "Creates a view or updates an existing view in the hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "viewName",
            "in": "path",
            "description": "The name of the view.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ViewResourceFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ViewResourceFormat' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ViewResourceFormat"
            }
          },
          "201": {
            "description": "Resource 'ViewResourceFormat' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ViewResourceFormat"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "Views_Delete",
        "tags": [
          "Views"
        ],
        "description": "Deletes a view in the specified hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "The user ID. Use * to retrieve hub level view.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "viewName",
            "in": "path",
            "description": "The name of the view.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/widgetTypes": {
      "get": {
        "operationId": "WidgetTypes_ListByHub",
        "tags": [
          "WidgetTypes"
        ],
        "description": "Gets all available widget types in the specified hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WidgetTypeResourceFormatListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/widgetTypes/{widgetTypeName}": {
      "get": {
        "operationId": "WidgetTypes_Get",
        "tags": [
          "WidgetTypes"
        ],
        "description": "Gets a widget type in the specified hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "widgetTypeName",
            "in": "path",
            "description": "The name of the widget type.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WidgetTypeResourceFormat"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/roles/{resourceGroupName}/{hubName}/{subscriptionId}": {
      "get": {
        "operationId": "Roles_ListByHub",
        "tags": [
          "Roles"
        ],
        "description": "Gets all the roles for the hub.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hubName",
            "in": "path",
            "description": "The name of the hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedRoleResourceFormat"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "AssignmentPrincipal": {
      "type": "object",
      "description": "The AssignmentPrincipal",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal id being assigned to."
        },
        "principalType": {
          "type": "string",
          "description": "The Type of the principal ID."
        },
        "principalMetadata": {
          "type": "object",
          "description": "Other metadata for the principal.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "principalId",
        "principalType"
      ]
    },
    "AuthorizationPolicy": {
      "type": "object",
      "description": "The authorization policy.",
      "properties": {
        "policyName": {
          "type": "string",
          "description": "Name of the policy.",
          "readOnly": true
        },
        "permissions": {
          "type": "array",
          "description": "The permissions associated with the policy.",
          "items": {
            "$ref": "#/definitions/PermissionTypes"
          }
        },
        "primaryKey": {
          "type": "string",
          "description": "Primary key associated with the policy."
        },
        "secondaryKey": {
          "type": "string",
          "description": "Secondary key associated with the policy."
        }
      },
      "required": [
        "permissions"
      ]
    },
    "AuthorizationPolicyResourceFormat": {
      "type": "object",
      "description": "The authorization policy resource format.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AuthorizationPolicy",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the policy.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AuthorizationPolicyResourceFormatListResult": {
      "type": "object",
      "description": "The response of a AuthorizationPolicyResourceFormat list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AuthorizationPolicyResourceFormat items on this page",
          "items": {
            "$ref": "#/definitions/AuthorizationPolicyResourceFormat"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "AzureBlobConnectorProperties": {
      "type": "object",
      "description": "The Azure Blob connector properties.",
      "properties": {
        "connectionKeyVaultUrl": {
          "type": "string",
          "description": "The connection KeyVault URL."
        }
      },
      "required": [
        "connectionKeyVaultUrl"
      ]
    },
    "CalculationWindowTypes": {
      "type": "string",
      "enum": [
        "Lifetime",
        "Hour",
        "Day",
        "Week",
        "Month"
      ],
      "x-ms-enum": {
        "name": "CalculationWindowTypes",
        "modelAsString": false
      }
    },
    "CanonicalProfileDefinition": {
      "type": "object",
      "description": "Definition of canonical profile.",
      "properties": {
        "canonicalProfileId": {
          "type": "integer",
          "format": "int32",
          "description": "Canonical profile ID."
        },
        "properties": {
          "type": "array",
          "description": "Properties of the canonical profile.",
          "items": {
            "$ref": "#/definitions/CanonicalProfileDefinitionPropertiesItem"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "CanonicalProfileDefinitionPropertiesItem": {
      "type": "object",
      "description": "The definition of a canonical profile property.",
      "properties": {
        "profileName": {
          "type": "string",
          "description": "Profile name."
        },
        "profilePropertyName": {
          "type": "string",
          "description": "Property name of profile."
        },
        "rank": {
          "type": "integer",
          "format": "int32",
          "description": "The rank."
        },
        "type": {
          "$ref": "#/definitions/CanonicalPropertyValueType",
          "description": "Type of canonical property value."
        },
        "value": {
          "type": "string",
          "description": "Value of the canonical property."
        }
      }
    },
    "CanonicalPropertyValueType": {
      "type": "string",
      "enum": [
        "Numeric",
        "Categorical",
        "DerivedCategorical",
        "DerivedNumeric"
      ],
      "x-ms-enum": {
        "name": "CanonicalPropertyValueType",
        "modelAsString": true
      }
    },
    "CardinalityTypes": {
      "type": "string",
      "enum": [
        "OneToOne",
        "OneToMany",
        "ManyToMany"
      ],
      "x-ms-enum": {
        "name": "CardinalityTypes",
        "modelAsString": false
      }
    },
    "CompletionOperationTypes": {
      "type": "string",
      "enum": [
        "DoNothing",
        "DeleteFile",
        "MoveFile"
      ],
      "x-ms-enum": {
        "name": "CompletionOperationTypes",
        "modelAsString": false
      }
    },
    "Connector": {
      "type": "object",
      "description": "Properties of connector.",
      "properties": {
        "connectorId": {
          "type": "integer",
          "format": "int32",
          "description": "ID of the connector.",
          "readOnly": true
        },
        "connectorName": {
          "type": "string",
          "description": "Name of the connector."
        },
        "connectorType": {
          "$ref": "#/definitions/ConnectorTypes",
          "description": "Type of connector."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the connector."
        },
        "description": {
          "type": "string",
          "description": "Description of the connector."
        },
        "connectorProperties": {
          "type": "object",
          "description": "The connector properties.",
          "additionalProperties": {
            "additionalProperties": {},
            "type": "object"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The created time.",
          "readOnly": true
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "The last modified time.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/ConnectorStates",
          "description": "State of connector.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The hub name.",
          "readOnly": true
        },
        "isInternal": {
          "type": "boolean",
          "description": "If this is an internal connector."
        }
      },
      "required": [
        "connectorType",
        "connectorProperties"
      ]
    },
    "ConnectorMapping": {
      "type": "object",
      "description": "The connector mapping definition.",
      "properties": {
        "connectorName": {
          "type": "string",
          "description": "The connector name.",
          "readOnly": true
        },
        "connectorType": {
          "$ref": "#/definitions/ConnectorTypes",
          "description": "Type of connector."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The created time.",
          "readOnly": true
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "The last modified time.",
          "readOnly": true
        },
        "entityType": {
          "$ref": "#/definitions/EntityTypes",
          "description": "Defines which entity type the file should map to."
        },
        "entityTypeName": {
          "type": "string",
          "description": "The mapping entity name."
        },
        "connectorMappingName": {
          "type": "string",
          "description": "The connector mapping name",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Display name for the connector mapping."
        },
        "description": {
          "type": "string",
          "description": "The description of the connector mapping."
        },
        "dataFormatId": {
          "type": "string",
          "description": "The DataFormat ID.",
          "readOnly": true
        },
        "mappingProperties": {
          "$ref": "#/definitions/ConnectorMappingProperties",
          "description": "The properties of the mapping."
        },
        "nextRunTime": {
          "type": "string",
          "format": "date-time",
          "description": "The next run time based on customer's settings.",
          "readOnly": true
        },
        "runId": {
          "type": "string",
          "description": "The RunId.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/ConnectorMappingStates",
          "description": "State of connector mapping.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The hub name.",
          "readOnly": true
        }
      },
      "required": [
        "entityType",
        "entityTypeName",
        "mappingProperties"
      ]
    },
    "ConnectorMappingAvailability": {
      "type": "object",
      "description": "Connector mapping property availability.",
      "properties": {
        "frequency": {
          "$ref": "#/definitions/FrequencyTypes",
          "description": "The frequency to update."
        },
        "interval": {
          "type": "integer",
          "format": "int32",
          "description": "The interval of the given frequency to use."
        }
      },
      "required": [
        "interval"
      ]
    },
    "ConnectorMappingCompleteOperation": {
      "type": "object",
      "description": "The complete operation.",
      "properties": {
        "completionOperationType": {
          "$ref": "#/definitions/CompletionOperationTypes",
          "description": "The type of completion operation."
        },
        "destinationFolder": {
          "type": "string",
          "description": "The destination folder where files will be moved to once the import is done."
        }
      }
    },
    "ConnectorMappingErrorManagement": {
      "type": "object",
      "description": "The error management.",
      "properties": {
        "errorManagementType": {
          "$ref": "#/definitions/ErrorManagementTypes",
          "description": "The type of error management to use for the mapping."
        },
        "errorLimit": {
          "type": "integer",
          "format": "int32",
          "description": "The error limit allowed while importing data."
        }
      },
      "required": [
        "errorManagementType"
      ]
    },
    "ConnectorMappingFormat": {
      "type": "object",
      "description": "Connector mapping property format.",
      "properties": {
        "formatType": {
          "type": "string",
          "description": "The type mapping format.",
          "enum": [
            "TextFormat"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "columnDelimiter": {
          "type": "string",
          "description": "The character that signifies a break between columns."
        },
        "acceptLanguage": {
          "type": "string",
          "description": "The oData language."
        },
        "quoteCharacter": {
          "type": "string",
          "description": "Quote character, used to indicate enquoted fields."
        },
        "quoteEscapeCharacter": {
          "type": "string",
          "description": "Escape character for quotes, can be the same as the quoteCharacter."
        },
        "arraySeparator": {
          "type": "string",
          "description": "Character separating array elements."
        }
      },
      "required": [
        "formatType"
      ]
    },
    "ConnectorMappingProperties": {
      "type": "object",
      "description": "The connector mapping properties.",
      "properties": {
        "folderPath": {
          "type": "string",
          "description": "The folder path for the mapping."
        },
        "fileFilter": {
          "type": "string",
          "description": "The file filter for the mapping."
        },
        "hasHeader": {
          "type": "boolean",
          "description": "If the file contains a header or not."
        },
        "errorManagement": {
          "$ref": "#/definitions/ConnectorMappingErrorManagement",
          "description": "The error management setting for the mapping."
        },
        "format": {
          "$ref": "#/definitions/ConnectorMappingFormat",
          "description": "The format of mapping property."
        },
        "availability": {
          "$ref": "#/definitions/ConnectorMappingAvailability",
          "description": "The availability of mapping property."
        },
        "structure": {
          "type": "array",
          "description": "Ingestion mapping information at property level.",
          "items": {
            "$ref": "#/definitions/ConnectorMappingStructure"
          },
          "x-ms-identifiers": []
        },
        "completeOperation": {
          "$ref": "#/definitions/ConnectorMappingCompleteOperation",
          "description": "The operation after import is done."
        }
      },
      "required": [
        "errorManagement",
        "format",
        "availability",
        "structure",
        "completeOperation"
      ]
    },
    "ConnectorMappingResourceFormat": {
      "type": "object",
      "description": "The connector mapping resource format.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConnectorMapping",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the connector mapping.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ConnectorMappingResourceFormatListResult": {
      "type": "object",
      "description": "The response of a ConnectorMappingResourceFormat list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ConnectorMappingResourceFormat items on this page",
          "items": {
            "$ref": "#/definitions/ConnectorMappingResourceFormat"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ConnectorMappingStates": {
      "type": "string",
      "enum": [
        "Creating",
        "Created",
        "Failed",
        "Ready",
        "Running",
        "Stopped",
        "Expiring"
      ],
      "x-ms-enum": {
        "name": "ConnectorMappingStates",
        "modelAsString": false
      }
    },
    "ConnectorMappingStructure": {
      "type": "object",
      "description": "Connector mapping property structure.",
      "properties": {
        "propertyName": {
          "type": "string",
          "description": "The property name of the mapping entity."
        },
        "columnName": {
          "type": "string",
          "description": "The column name of the import file."
        },
        "customFormatSpecifier": {
          "type": "string",
          "description": "Custom format specifier for input parsing."
        },
        "isEncrypted": {
          "type": "boolean",
          "description": "Indicates if the column is encrypted."
        }
      },
      "required": [
        "propertyName",
        "columnName"
      ]
    },
    "ConnectorResourceFormat": {
      "type": "object",
      "description": "The connector resource format.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/Connector",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the connector.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ConnectorResourceFormatListResult": {
      "type": "object",
      "description": "The response of a ConnectorResourceFormat list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ConnectorResourceFormat items on this page",
          "items": {
            "$ref": "#/definitions/ConnectorResourceFormat"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ConnectorStates": {
      "type": "string",
      "enum": [
        "Creating",
        "Created",
        "Ready",
        "Expiring",
        "Deleting",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "ConnectorStates",
        "modelAsString": false
      }
    },
    "ConnectorTypes": {
      "type": "string",
      "enum": [
        "None",
        "CRM",
        "AzureBlob",
        "Salesforce",
        "ExchangeOnline",
        "Outbound"
      ],
      "x-ms-enum": {
        "name": "ConnectorTypes",
        "modelAsString": true
      }
    },
    "CrmConnectorEntities": {
      "type": "object",
      "description": "The CRM connector entities.",
      "properties": {
        "logicalName": {
          "type": "string",
          "description": "The logical name."
        },
        "displayName": {
          "type": "string",
          "description": "The display name."
        },
        "isProfile": {
          "type": "boolean",
          "description": "Indicating whether this is profile."
        }
      },
      "required": [
        "logicalName"
      ]
    },
    "CrmConnectorProperties": {
      "type": "object",
      "description": "The CRM connector properties.",
      "properties": {
        "connectionString": {
          "type": "string",
          "description": "The connection string."
        },
        "organizationId": {
          "type": "string",
          "description": "The organization ID."
        },
        "organizationUrl": {
          "type": "string",
          "description": "The organization URL."
        },
        "entities": {
          "type": "array",
          "description": "The entities like account, contact, opportunity.",
          "items": {
            "$ref": "#/definitions/CrmConnectorEntities"
          },
          "x-ms-identifiers": []
        },
        "accessToken": {
          "type": "string",
          "description": "The access token."
        }
      },
      "required": [
        "organizationId",
        "organizationUrl",
        "entities"
      ]
    },
    "DataSource": {
      "type": "object",
      "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The data source name",
          "readOnly": true
        },
        "dataSourceType": {
          "$ref": "#/definitions/DataSourceType",
          "description": "The data source type.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/Status",
          "description": "The data source status.",
          "readOnly": true
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The data source ID.",
          "readOnly": true
        },
        "dataSourceReferenceId": {
          "type": "string",
          "description": "The data source reference id.",
          "readOnly": true
        }
      }
    },
    "DataSourcePrecedence": {
      "type": "object",
      "description": "The data source precedence is a way to know the precedence of each data source.",
      "properties": {
        "dataSource": {
          "$ref": "#/definitions/DataSource",
          "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
        },
        "precedence": {
          "type": "integer",
          "format": "int32",
          "description": "the precedence value."
        }
      }
    },
    "DataSourceType": {
      "type": "string",
      "enum": [
        "Connector",
        "LinkInteraction",
        "SystemDefault"
      ],
      "x-ms-enum": {
        "name": "DataSourceType",
        "modelAsString": true
      }
    },
    "EnrichingKpi": {
      "type": "object",
      "description": "The enriching KPI definition.",
      "allOf": [
        {
          "$ref": "#/definitions/KpiDefinition"
        }
      ]
    },
    "EntityType": {
      "type": "string",
      "enum": [
        "None",
        "Profile",
        "Interaction",
        "Relationship"
      ],
      "x-ms-enum": {
        "name": "EntityType",
        "modelAsString": false
      }
    },
    "EntityTypeDefinition": {
      "type": "object",
      "description": "Describes an entity.",
      "properties": {
        "apiEntitySetName": {
          "type": "string",
          "description": "The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object."
        },
        "entityType": {
          "$ref": "#/definitions/EntityTypes",
          "description": "Type of entity."
        },
        "fields": {
          "type": "array",
          "description": "The properties of the Profile.",
          "items": {
            "$ref": "#/definitions/PropertyDefinition"
          },
          "x-ms-identifiers": []
        },
        "instancesCount": {
          "type": "integer",
          "format": "int32",
          "description": "The instance count."
        },
        "lastChangedUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The last changed time for the type definition.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningStates",
          "description": "Provisioning state.",
          "readOnly": true
        },
        "schemaItemTypeLink": {
          "type": "string",
          "description": "The schema org link. This helps ACI identify and suggest semantic models."
        },
        "tenantId": {
          "type": "string",
          "description": "The hub name.",
          "readOnly": true
        },
        "timestampFieldName": {
          "type": "string",
          "description": "The timestamp property name. Represents the time when the interaction or profile update happened."
        },
        "typeName": {
          "type": "string",
          "description": "The name of the entity."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/MetadataDefinitionBase"
        }
      ]
    },
    "EntityTypes": {
      "type": "string",
      "enum": [
        "None",
        "Profile",
        "Interaction",
        "Relationship"
      ],
      "x-ms-enum": {
        "name": "EntityTypes",
        "modelAsString": false
      }
    },
    "ErrorManagementTypes": {
      "type": "string",
      "enum": [
        "RejectAndContinue",
        "StopImport",
        "RejectUntilLimit"
      ],
      "x-ms-enum": {
        "name": "ErrorManagementTypes",
        "modelAsString": false
      }
    },
    "FrequencyTypes": {
      "type": "string",
      "enum": [
        "Minute",
        "Hour",
        "Day",
        "Week",
        "Month"
      ],
      "x-ms-enum": {
        "name": "FrequencyTypes",
        "modelAsString": false
      }
    },
    "GetImageUploadUrlInput": {
      "type": "object",
      "description": "Input type for getting image upload url.",
      "properties": {
        "entityType": {
          "type": "string",
          "description": "Type of entity. Can be Profile or Interaction."
        },
        "entityTypeName": {
          "type": "string",
          "description": "Name of the entity type."
        },
        "relativePath": {
          "type": "string",
          "description": "Relative path of the image."
        }
      }
    },
    "Hub": {
      "type": "object",
      "description": "Hub resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/HubPropertiesFormat",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the hub.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "HubBillingInfoFormat": {
      "type": "object",
      "description": "Hub billing info.",
      "properties": {
        "skuName": {
          "type": "string",
          "description": "The sku name."
        },
        "minUnits": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum number of units will be billed. One unit is 10,000 Profiles and 100,000 Interactions.",
          "minimum": 1,
          "maximum": 10
        },
        "maxUnits": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of units can be used.  One unit is 10,000 Profiles and 100,000 Interactions.",
          "minimum": 1,
          "maximum": 10
        }
      }
    },
    "HubListResult": {
      "type": "object",
      "description": "The response of a Hub list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Hub items on this page",
          "items": {
            "$ref": "#/definitions/Hub"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "HubPropertiesFormat": {
      "type": "object",
      "description": "Properties of hub.",
      "properties": {
        "apiEndpoint": {
          "type": "string",
          "description": "API endpoint URL of the hub.",
          "readOnly": true
        },
        "webEndpoint": {
          "type": "string",
          "description": "Web endpoint URL of the hub.",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the hub.",
          "readOnly": true
        },
        "tenantFeatures": {
          "type": "integer",
          "format": "int32",
          "description": "The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0."
        },
        "hubBillingInfo": {
          "$ref": "#/definitions/HubBillingInfoFormat",
          "description": "Billing settings of the hub."
        }
      }
    },
    "HubUpdate": {
      "type": "object",
      "description": "Hub resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ImageDefinition": {
      "type": "object",
      "description": "The image definition.",
      "properties": {
        "imageExists": {
          "type": "boolean",
          "description": "Whether image exists already."
        },
        "contentUrl": {
          "type": "string",
          "description": "Content URL for the image blob."
        },
        "relativePath": {
          "type": "string",
          "description": "Relative path of the image."
        }
      }
    },
    "InstanceOperationType": {
      "type": "string",
      "enum": [
        "Upsert",
        "Delete"
      ],
      "x-ms-enum": {
        "name": "InstanceOperationType",
        "modelAsString": false
      }
    },
    "InteractionResourceFormat": {
      "type": "object",
      "description": "The interaction resource format.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/InteractionTypeDefinition",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the interaction.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "InteractionResourceFormatListResult": {
      "type": "object",
      "description": "The response of a InteractionResourceFormat list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The InteractionResourceFormat items on this page",
          "items": {
            "$ref": "#/definitions/InteractionResourceFormat"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "InteractionTypeDefinition": {
      "type": "object",
      "description": "The Interaction Type Definition",
      "properties": {
        "idPropertyNames": {
          "type": "array",
          "description": "The id property names. Properties which uniquely identify an interaction instance.",
          "items": {
            "type": "string"
          }
        },
        "participantProfiles": {
          "type": "array",
          "description": "Profiles that participated in the interaction.",
          "items": {
            "$ref": "#/definitions/Participant"
          },
          "x-ms-identifiers": []
        },
        "primaryParticipantProfilePropertyName": {
          "type": "string",
          "description": "The primary participant property name for an interaction ,This is used to logically represent the agent of the interaction, Specify the participant name here from ParticipantName."
        },
        "dataSourcePrecedenceRules": {
          "type": "array",
          "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules.",
          "items": {
            "$ref": "#/definitions/DataSourcePrecedence"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "defaultDataSource": {
          "$ref": "#/definitions/DataSource",
          "description": "Default data source is specifically used in cases where data source is not specified in an instance."
        },
        "isActivity": {
          "type": "boolean",
          "description": "An interaction can be tagged as an activity only during create. This enables the interaction to be editable and can enable merging of properties from multiple data sources based on precedence, which is defined at a link level."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EntityTypeDefinition"
        }
      ]
    },
    "KpiAlias": {
      "type": "object",
      "description": "The KPI alias.",
      "properties": {
        "aliasName": {
          "type": "string",
          "description": "KPI alias name."
        },
        "expression": {
          "type": "string",
          "description": "The expression."
        }
      },
      "required": [
        "aliasName",
        "expression"
      ]
    },
    "KpiDefinition": {
      "type": "object",
      "description": "Defines the KPI Threshold limits.",
      "properties": {
        "entityType": {
          "$ref": "#/definitions/EntityTypes",
          "description": "The mapping entity type."
        },
        "entityTypeName": {
          "type": "string",
          "description": "The mapping entity name."
        },
        "tenantId": {
          "type": "string",
          "description": "The hub name.",
          "readOnly": true
        },
        "kpiName": {
          "type": "string",
          "description": "The KPI name.",
          "readOnly": true
        },
        "displayName": {
          "type": "object",
          "description": "Localized display name for the KPI.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "object",
          "description": "Localized description for the KPI.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "calculationWindow": {
          "$ref": "#/definitions/CalculationWindowTypes",
          "description": "The calculation window."
        },
        "calculationWindowFieldName": {
          "type": "string",
          "description": "Name of calculation window field."
        },
        "function": {
          "$ref": "#/definitions/KpiFunctions",
          "description": "The computation function for the KPI."
        },
        "expression": {
          "type": "string",
          "description": "The computation expression for the KPI."
        },
        "unit": {
          "type": "string",
          "description": "The unit of measurement for the KPI."
        },
        "filter": {
          "type": "string",
          "description": "The filter expression for the KPI."
        },
        "groupBy": {
          "type": "array",
          "description": "the group by properties for the KPI.",
          "items": {
            "type": "string"
          }
        },
        "groupByMetadata": {
          "type": "array",
          "description": "The KPI GroupByMetadata.",
          "items": {
            "$ref": "#/definitions/KpiGroupByMetadata"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "participantProfilesMetadata": {
          "type": "array",
          "description": "The participant profiles.",
          "items": {
            "$ref": "#/definitions/KpiParticipantProfilesMetadata"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningStates",
          "description": "Provisioning state.",
          "readOnly": true
        },
        "thresHolds": {
          "$ref": "#/definitions/KpiThresholds",
          "description": "The KPI thresholds."
        },
        "aliases": {
          "type": "array",
          "description": "The aliases.",
          "items": {
            "$ref": "#/definitions/KpiAlias"
          },
          "x-ms-identifiers": []
        },
        "extracts": {
          "type": "array",
          "description": "The KPI extracts.",
          "items": {
            "$ref": "#/definitions/KpiExtract"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "entityType",
        "entityTypeName",
        "calculationWindow",
        "function",
        "expression"
      ]
    },
    "KpiExtract": {
      "type": "object",
      "description": "The KPI extract.",
      "properties": {
        "extractName": {
          "type": "string",
          "description": "KPI extract name."
        },
        "expression": {
          "type": "string",
          "description": "The expression."
        }
      },
      "required": [
        "extractName",
        "expression"
      ]
    },
    "KpiFunctions": {
      "type": "string",
      "enum": [
        "Sum",
        "Avg",
        "Min",
        "Max",
        "Last",
        "Count",
        "None",
        "CountDistinct"
      ],
      "x-ms-enum": {
        "name": "KpiFunctions",
        "modelAsString": false
      }
    },
    "KpiGroupByMetadata": {
      "type": "object",
      "description": "The KPI GroupBy field metadata.",
      "properties": {
        "displayName": {
          "type": "object",
          "description": "The display name.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "fieldName": {
          "type": "string",
          "description": "The name of the field."
        },
        "fieldType": {
          "type": "string",
          "description": "The type of the field."
        }
      }
    },
    "KpiParticipantProfilesMetadata": {
      "type": "object",
      "description": "The KPI participant profile metadata.",
      "properties": {
        "typeName": {
          "type": "string",
          "description": "Name of the type."
        }
      },
      "required": [
        "typeName"
      ]
    },
    "KpiResourceFormat": {
      "type": "object",
      "description": "The KPI resource format.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/KpiDefinition",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the KPI.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "KpiResourceFormatListResult": {
      "type": "object",
      "description": "The response of a KpiResourceFormat list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The KpiResourceFormat items on this page",
          "items": {
            "$ref": "#/definitions/KpiResourceFormat"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "KpiThresholds": {
      "type": "object",
      "description": "Defines the KPI Threshold limits.",
      "properties": {
        "lowerLimit": {
          "type": "number",
          "format": "float",
          "description": "The lower threshold limit."
        },
        "upperLimit": {
          "type": "number",
          "format": "float",
          "description": "The upper threshold limit."
        },
        "increasingKpi": {
          "type": "boolean",
          "description": "Whether or not the KPI is an increasing KPI."
        }
      },
      "required": [
        "lowerLimit",
        "upperLimit",
        "increasingKpi"
      ]
    },
    "LinkDefinition": {
      "type": "object",
      "description": "The definition of Link.",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The hub name.",
          "readOnly": true
        },
        "linkName": {
          "type": "string",
          "description": "The link name.",
          "readOnly": true
        },
        "sourceEntityType": {
          "$ref": "#/definitions/EntityType",
          "description": "Type of source entity."
        },
        "targetEntityType": {
          "$ref": "#/definitions/EntityType",
          "description": "Type of target entity."
        },
        "sourceEntityTypeName": {
          "type": "string",
          "description": "Name of the source Entity Type."
        },
        "targetEntityTypeName": {
          "type": "string",
          "description": "Name of the target Entity Type."
        },
        "displayName": {
          "type": "object",
          "description": "Localized display name for the Link.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "object",
          "description": "Localized descriptions for the Link.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "mappings": {
          "type": "array",
          "description": "The set of properties mappings between the source and target Types.",
          "items": {
            "$ref": "#/definitions/TypePropertiesMapping"
          },
          "x-ms-identifiers": []
        },
        "participantPropertyReferences": {
          "type": "array",
          "description": "The properties that represent the participating profile.",
          "items": {
            "$ref": "#/definitions/ParticipantPropertyReference"
          },
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningStates",
          "description": "Provisioning state.",
          "readOnly": true
        },
        "referenceOnly": {
          "type": "boolean",
          "description": "Indicating whether the link is reference only link. This flag is ignored if the Mappings are defined. If the mappings are not defined and it is set to true, links processing will not create or update profiles."
        },
        "operationType": {
          "$ref": "#/definitions/InstanceOperationType",
          "description": "Determines whether this link is supposed to create or delete instances if Link is NOT Reference Only."
        }
      },
      "required": [
        "sourceEntityType",
        "targetEntityType",
        "sourceEntityTypeName",
        "targetEntityTypeName",
        "participantPropertyReferences"
      ]
    },
    "LinkResourceFormat": {
      "type": "object",
      "description": "The link resource format.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LinkDefinition",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the link.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "LinkResourceFormatListResult": {
      "type": "object",
      "description": "The response of a LinkResourceFormat list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The LinkResourceFormat items on this page",
          "items": {
            "$ref": "#/definitions/LinkResourceFormat"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "LinkTypes": {
      "type": "string",
      "enum": [
        "UpdateAlways",
        "CopyIfNull"
      ],
      "x-ms-enum": {
        "name": "LinkTypes",
        "modelAsString": false
      }
    },
    "MetadataDefinitionBase": {
      "type": "object",
      "description": "The Metadata definition base.",
      "properties": {
        "attributes": {
          "type": "object",
          "description": "The attributes for the Type.",
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "description": {
          "type": "object",
          "description": "Localized descriptions for the property.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "type": "object",
          "description": "Localized display names for the property.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "localizedAttributes": {
          "type": "object",
          "description": "Any custom localized attributes for the Type.",
          "additionalProperties": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          }
        },
        "smallImage": {
          "type": "string",
          "description": "Small Image associated with the Property or EntityType."
        },
        "mediumImage": {
          "type": "string",
          "description": "Medium Image associated with the Property or EntityType."
        },
        "largeImage": {
          "type": "string",
          "description": "Large Image associated with the Property or EntityType."
        }
      }
    },
    "PagedRoleResourceFormat": {
      "type": "object",
      "description": "The response of list role assignment operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The RoleResourceFormat items on this page",
          "items": {
            "$ref": "#/definitions/RoleResourceFormat"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "Participant": {
      "type": "object",
      "description": "Describes a profile type participating in an interaction.",
      "properties": {
        "profileTypeName": {
          "type": "string",
          "description": "Profile type name."
        },
        "participantPropertyReferences": {
          "type": "array",
          "description": "The property references.",
          "items": {
            "$ref": "#/definitions/ParticipantPropertyReference"
          },
          "x-ms-identifiers": []
        },
        "participantName": {
          "type": "string",
          "description": "Participant name."
        },
        "displayName": {
          "type": "object",
          "description": "Localized display name.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "object",
          "description": "Localized descriptions.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "role": {
          "type": "string",
          "description": "The role that the participant is playing in the interaction."
        }
      },
      "required": [
        "profileTypeName",
        "participantPropertyReferences",
        "participantName"
      ]
    },
    "ParticipantProfilePropertyReference": {
      "type": "object",
      "description": "The participant profile property reference.",
      "properties": {
        "interactionPropertyName": {
          "type": "string",
          "description": "The source interaction property that maps to the target profile property."
        },
        "profilePropertyName": {
          "type": "string",
          "description": "The target profile property that maps to the source interaction property."
        }
      },
      "required": [
        "interactionPropertyName",
        "profilePropertyName"
      ]
    },
    "ParticipantPropertyReference": {
      "type": "object",
      "description": "The participant property reference.",
      "properties": {
        "sourcePropertyName": {
          "type": "string",
          "description": "The source property that maps to the target property."
        },
        "targetPropertyName": {
          "type": "string",
          "description": "The target property that maps to the source property."
        }
      },
      "required": [
        "sourcePropertyName",
        "targetPropertyName"
      ]
    },
    "PermissionTypes": {
      "type": "string",
      "enum": [
        "Read",
        "Write",
        "Manage"
      ],
      "x-ms-enum": {
        "name": "PermissionTypes",
        "modelAsString": false
      }
    },
    "Prediction": {
      "type": "object",
      "description": "The prediction definition.",
      "properties": {
        "description": {
          "type": "object",
          "description": "Description of the prediction.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "type": "object",
          "description": "Display name of the prediction.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "involvedInteractionTypes": {
          "type": "array",
          "description": "Interaction types involved in the prediction.",
          "items": {
            "type": "string"
          }
        },
        "involvedKpiTypes": {
          "type": "array",
          "description": "KPI types involved in the prediction.",
          "items": {
            "type": "string"
          }
        },
        "involvedRelationships": {
          "type": "array",
          "description": "Relationships involved in the prediction.",
          "items": {
            "type": "string"
          }
        },
        "negativeOutcomeExpression": {
          "type": "string",
          "description": "Negative outcome expression."
        },
        "positiveOutcomeExpression": {
          "type": "string",
          "description": "Positive outcome expression."
        },
        "primaryProfileType": {
          "type": "string",
          "description": "Primary profile type."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningStates",
          "description": "Provisioning state.",
          "readOnly": true
        },
        "predictionName": {
          "type": "string",
          "description": "Name of the prediction."
        },
        "scopeExpression": {
          "type": "string",
          "description": "Scope expression."
        },
        "tenantId": {
          "type": "string",
          "description": "The hub name.",
          "readOnly": true
        },
        "autoAnalyze": {
          "type": "boolean",
          "description": "Whether do auto analyze."
        },
        "mappings": {
          "$ref": "#/definitions/PredictionMappings",
          "description": "Definition of the link mapping of prediction."
        },
        "scoreLabel": {
          "type": "string",
          "description": "Score label."
        },
        "grades": {
          "type": "array",
          "description": "The prediction grades.",
          "items": {
            "$ref": "#/definitions/PredictionGradesItem"
          },
          "x-ms-identifiers": []
        },
        "systemGeneratedEntities": {
          "$ref": "#/definitions/PredictionSystemGeneratedEntities",
          "description": "System generated entities.",
          "readOnly": true
        }
      },
      "required": [
        "negativeOutcomeExpression",
        "positiveOutcomeExpression",
        "primaryProfileType",
        "scopeExpression",
        "autoAnalyze",
        "mappings",
        "scoreLabel"
      ]
    },
    "PredictionDistributionDefinition": {
      "type": "object",
      "description": "The definition of the prediction distribution.",
      "properties": {
        "totalPositives": {
          "type": "integer",
          "format": "int32",
          "description": "Total positive in the distribution."
        },
        "totalNegatives": {
          "type": "integer",
          "format": "int32",
          "description": "Total negatives in the distribution."
        },
        "distributions": {
          "type": "array",
          "description": "Distributions of the prediction.",
          "items": {
            "$ref": "#/definitions/PredictionDistributionDefinitionDistributionsItem"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "PredictionDistributionDefinitionDistributionsItem": {
      "type": "object",
      "description": "The definition of a prediction distribution.",
      "properties": {
        "scoreThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "Score threshold."
        },
        "positives": {
          "type": "integer",
          "format": "int32",
          "description": "Number of positives."
        },
        "negatives": {
          "type": "integer",
          "format": "int32",
          "description": "Number of negatives."
        },
        "positivesAboveThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "Number of positives above threshold."
        },
        "negativesAboveThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "Number of negatives above threshold."
        }
      }
    },
    "PredictionGradesItem": {
      "type": "object",
      "description": "The definition of a prediction grade.",
      "properties": {
        "gradeName": {
          "type": "string",
          "description": "Name of the grade."
        },
        "minScoreThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum score threshold."
        },
        "maxScoreThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum score threshold."
        }
      }
    },
    "PredictionMappings": {
      "type": "object",
      "description": "Definition of the link mapping of prediction.",
      "properties": {
        "score": {
          "type": "string",
          "description": "The score of the link mapping."
        },
        "grade": {
          "type": "string",
          "description": "The grade of the link mapping."
        },
        "reason": {
          "type": "string",
          "description": "The reason of the link mapping."
        }
      },
      "required": [
        "score",
        "grade",
        "reason"
      ]
    },
    "PredictionModelLifeCycle": {
      "type": "string",
      "enum": [
        "New",
        "Provisioning",
        "ProvisioningFailed",
        "PendingDiscovering",
        "Discovering",
        "PendingFeaturing",
        "Featuring",
        "FeaturingFailed",
        "PendingTraining",
        "Training",
        "TrainingFailed",
        "Evaluating",
        "EvaluatingFailed",
        "PendingModelConfirmation",
        "Active",
        "Deleted",
        "HumanIntervention",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "PredictionModelLifeCycle",
        "modelAsString": true
      }
    },
    "PredictionModelStatus": {
      "type": "object",
      "description": "The prediction model status.",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The hub name.",
          "readOnly": true
        },
        "predictionName": {
          "type": "string",
          "description": "The prediction name.",
          "readOnly": true
        },
        "predictionGuidId": {
          "type": "string",
          "description": "The prediction GUID ID.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/PredictionModelLifeCycle",
          "description": "Prediction model life cycle.  When prediction is in PendingModelConfirmation status, it is allowed to update the status to PendingFeaturing or Active through API."
        },
        "message": {
          "type": "string",
          "description": "The model status message.",
          "readOnly": true
        },
        "trainingSetCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of the training set.",
          "readOnly": true
        },
        "testSetCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of the test set.",
          "readOnly": true
        },
        "validationSetCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of the validation set.",
          "readOnly": true
        },
        "trainingAccuracy": {
          "type": "number",
          "format": "float",
          "description": "The training accuracy.",
          "readOnly": true
        },
        "signalsUsed": {
          "type": "integer",
          "format": "int32",
          "description": "The signals used.",
          "readOnly": true
        },
        "modelVersion": {
          "type": "string",
          "description": "Version of the model.",
          "readOnly": true
        }
      },
      "required": [
        "status"
      ]
    },
    "PredictionResourceFormat": {
      "type": "object",
      "description": "The prediction resource format.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/Prediction",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the Prediction.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PredictionResourceFormatListResult": {
      "type": "object",
      "description": "The response of a PredictionResourceFormat list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PredictionResourceFormat items on this page",
          "items": {
            "$ref": "#/definitions/PredictionResourceFormat"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PredictionSystemGeneratedEntities": {
      "type": "object",
      "description": "System generated entities.",
      "properties": {
        "generatedInteractionTypes": {
          "type": "array",
          "description": "Generated interaction types.",
          "items": {
            "type": "string"
          }
        },
        "generatedLinks": {
          "type": "array",
          "description": "Generated links.",
          "items": {
            "type": "string"
          }
        },
        "generatedKpis": {
          "type": "object",
          "description": "Generated KPIs.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "PredictionTrainingResults": {
      "type": "object",
      "description": "The training results of the prediction.",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The hub name.",
          "readOnly": true
        },
        "scoreName": {
          "type": "string",
          "description": "Score name.",
          "readOnly": true
        },
        "predictionDistribution": {
          "$ref": "#/definitions/PredictionDistributionDefinition",
          "description": "Prediction distribution.",
          "readOnly": true
        },
        "canonicalProfiles": {
          "type": "array",
          "description": "Canonical profiles.",
          "items": {
            "$ref": "#/definitions/CanonicalProfileDefinition"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "primaryProfileInstanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "Instance count of the primary profile.",
          "readOnly": true
        }
      }
    },
    "ProfileEnumValidValuesFormat": {
      "type": "object",
      "description": "Valid enum values in case of an enum property.",
      "properties": {
        "value": {
          "type": "integer",
          "format": "int32",
          "description": "The integer value of the enum member."
        },
        "localizedValueNames": {
          "type": "object",
          "description": "Localized names of the enum member.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ProfileResourceFormat": {
      "type": "object",
      "description": "The profile resource format.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProfileTypeDefinition",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the profile.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ProfileResourceFormatListResult": {
      "type": "object",
      "description": "The response of a ProfileResourceFormat list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ProfileResourceFormat items on this page",
          "items": {
            "$ref": "#/definitions/ProfileResourceFormat"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ProfileTypeDefinition": {
      "type": "object",
      "description": "The profile type definition.",
      "properties": {
        "strongIds": {
          "type": "array",
          "description": "The strong IDs.",
          "items": {
            "$ref": "#/definitions/StrongId"
          },
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EntityTypeDefinition"
        }
      ]
    },
    "PropertyDefinition": {
      "type": "object",
      "description": "Property definition.",
      "properties": {
        "arrayValueSeparator": {
          "type": "string",
          "description": "Array value separator for properties with isArray set."
        },
        "enumValidValues": {
          "type": "array",
          "description": "Describes valid values for an enum property.",
          "items": {
            "$ref": "#/definitions/ProfileEnumValidValuesFormat"
          },
          "x-ms-identifiers": []
        },
        "fieldName": {
          "type": "string",
          "description": "Name of the property."
        },
        "fieldType": {
          "type": "string",
          "description": "Type of the property."
        },
        "isArray": {
          "type": "boolean",
          "description": "Indicates if the property is actually an array of the fieldType above on the data api."
        },
        "isEnum": {
          "type": "boolean",
          "description": "Indicates if the property is an enum."
        },
        "isFlagEnum": {
          "type": "boolean",
          "description": "Indicates if the property is an flag enum."
        },
        "isImage": {
          "type": "boolean",
          "description": "Whether the property is an Image."
        },
        "isLocalizedString": {
          "type": "boolean",
          "description": "Whether the property is a localized string."
        },
        "isName": {
          "type": "boolean",
          "description": "Whether the property is a name or a part of name."
        },
        "isRequired": {
          "type": "boolean",
          "description": "Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field."
        },
        "propertyId": {
          "type": "string",
          "description": "The ID associated with the property."
        },
        "schemaItemPropLink": {
          "type": "string",
          "description": "URL encoded schema.org item prop link for the property."
        },
        "maxLength": {
          "type": "integer",
          "format": "int32",
          "description": "Max length of string. Used only if type is string."
        },
        "isAvailableInGraph": {
          "type": "boolean",
          "description": "Whether property is available in graph or not."
        },
        "dataSourcePrecedenceRules": {
          "type": "array",
          "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules.",
          "items": {
            "$ref": "#/definitions/DataSourcePrecedence"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      },
      "required": [
        "fieldName",
        "fieldType"
      ]
    },
    "ProvisioningStates": {
      "type": "string",
      "enum": [
        "Provisioning",
        "Succeeded",
        "Expiring",
        "Deleting",
        "HumanIntervention",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "ProvisioningStates",
        "modelAsString": true
      }
    },
    "RelationshipDefinition": {
      "type": "object",
      "description": "The definition of Relationship.",
      "properties": {
        "cardinality": {
          "$ref": "#/definitions/CardinalityTypes",
          "description": "The Relationship Cardinality."
        },
        "displayName": {
          "type": "object",
          "description": "Localized display name for the Relationship.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "object",
          "description": "Localized descriptions for the Relationship.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "expiryDateTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The expiry date time in UTC."
        },
        "fields": {
          "type": "array",
          "description": "The properties of the Relationship.",
          "items": {
            "$ref": "#/definitions/PropertyDefinition"
          },
          "x-ms-identifiers": []
        },
        "lookupMappings": {
          "type": "array",
          "description": "Optional property to be used to map fields in profile to their strong ids in related profile.",
          "items": {
            "$ref": "#/definitions/RelationshipTypeMapping"
          },
          "x-ms-identifiers": []
        },
        "profileType": {
          "type": "string",
          "description": "Profile type."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningStates",
          "description": "Provisioning state.",
          "readOnly": true
        },
        "relationshipName": {
          "type": "string",
          "description": "The Relationship name.",
          "readOnly": true
        },
        "relatedProfileType": {
          "type": "string",
          "description": "Related profile being referenced."
        },
        "relationshipGuidId": {
          "type": "string",
          "description": "The relationship guid id.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The hub name.",
          "readOnly": true
        }
      },
      "required": [
        "profileType",
        "relatedProfileType"
      ]
    },
    "RelationshipLinkDefinition": {
      "type": "object",
      "description": "The definition of relationship link.",
      "properties": {
        "displayName": {
          "type": "object",
          "description": "Localized display name for the Relationship Link.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "object",
          "description": "Localized descriptions for the Relationship Link.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "interactionType": {
          "type": "string",
          "description": "The InteractionType associated with the Relationship Link."
        },
        "linkName": {
          "type": "string",
          "description": "The name of the Relationship Link.",
          "readOnly": true
        },
        "mappings": {
          "type": "array",
          "description": "The mappings between Interaction and Relationship fields.",
          "items": {
            "$ref": "#/definitions/RelationshipLinkFieldMapping"
          },
          "x-ms-identifiers": []
        },
        "profilePropertyReferences": {
          "type": "array",
          "description": "The property references for the Profile of the Relationship.",
          "items": {
            "$ref": "#/definitions/ParticipantProfilePropertyReference"
          },
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningStates",
          "description": "Provisioning state.",
          "readOnly": true
        },
        "relatedProfilePropertyReferences": {
          "type": "array",
          "description": "The property references for the Related Profile of the Relationship.",
          "items": {
            "$ref": "#/definitions/ParticipantProfilePropertyReference"
          },
          "x-ms-identifiers": []
        },
        "relationshipName": {
          "type": "string",
          "description": "The Relationship associated with the Link."
        },
        "relationshipGuidId": {
          "type": "string",
          "description": "The relationship guid id.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The hub name.",
          "readOnly": true
        }
      },
      "required": [
        "interactionType",
        "profilePropertyReferences",
        "relatedProfilePropertyReferences",
        "relationshipName"
      ]
    },
    "RelationshipLinkFieldMapping": {
      "type": "object",
      "description": "The fields mapping for Relationships.",
      "properties": {
        "interactionFieldName": {
          "type": "string",
          "description": "The field name on the Interaction Type."
        },
        "linkType": {
          "$ref": "#/definitions/LinkTypes",
          "description": "Link type."
        },
        "relationshipFieldName": {
          "type": "string",
          "description": "The field name on the Relationship metadata."
        }
      },
      "required": [
        "interactionFieldName",
        "relationshipFieldName"
      ]
    },
    "RelationshipLinkResourceFormat": {
      "type": "object",
      "description": "The relationship link resource format.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RelationshipLinkDefinition",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the relationship link.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "RelationshipLinkResourceFormatListResult": {
      "type": "object",
      "description": "The response of a RelationshipLinkResourceFormat list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The RelationshipLinkResourceFormat items on this page",
          "items": {
            "$ref": "#/definitions/RelationshipLinkResourceFormat"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "RelationshipResourceFormat": {
      "type": "object",
      "description": "The relationship resource format.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RelationshipDefinition",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the relationship.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "RelationshipResourceFormatListResult": {
      "type": "object",
      "description": "The response of a RelationshipResourceFormat list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The RelationshipResourceFormat items on this page",
          "items": {
            "$ref": "#/definitions/RelationshipResourceFormat"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "RelationshipTypeFieldMapping": {
      "type": "object",
      "description": "Map a field of profile to its corresponding StrongId in Related Profile.",
      "properties": {
        "profileFieldName": {
          "type": "string",
          "description": "Specifies the fieldName in profile."
        },
        "relatedProfileKeyProperty": {
          "type": "string",
          "description": "Specifies the KeyProperty (from StrongId) of the related profile."
        }
      },
      "required": [
        "profileFieldName",
        "relatedProfileKeyProperty"
      ]
    },
    "RelationshipTypeMapping": {
      "type": "object",
      "description": "Maps fields in Profile to their corresponding StrongIds in Related Profile.",
      "properties": {
        "fieldMappings": {
          "type": "array",
          "description": "Maps a profile property with the StrongId of related profile. This is an array to support StrongIds that are composite key as well.",
          "items": {
            "$ref": "#/definitions/RelationshipTypeFieldMapping"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "fieldMappings"
      ]
    },
    "RelationshipsLookup": {
      "type": "object",
      "description": "The definition of suggested relationship for the type.",
      "properties": {
        "profileName": {
          "type": "string",
          "description": "The relationship profile.",
          "readOnly": true
        },
        "profilePropertyReferences": {
          "type": "array",
          "description": "The property references for the profile type.",
          "items": {
            "$ref": "#/definitions/ParticipantProfilePropertyReference"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "relatedProfileName": {
          "type": "string",
          "description": "The related profile.",
          "readOnly": true
        },
        "relatedProfilePropertyReferences": {
          "type": "array",
          "description": "The property references for the related profile type.",
          "items": {
            "$ref": "#/definitions/ParticipantProfilePropertyReference"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "existingRelationshipName": {
          "type": "string",
          "description": "The name of existing Relationship.",
          "readOnly": true
        }
      }
    },
    "Resource": {
      "type": "object",
      "description": "Common properties of Azure resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Resource type.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ResourceSetDescription": {
      "type": "object",
      "description": "The resource set description.",
      "properties": {
        "elements": {
          "type": "array",
          "description": "The elements included in the set.",
          "items": {
            "type": "string"
          }
        },
        "exceptions": {
          "type": "array",
          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Role": {
      "type": "object",
      "description": "The Role definition.",
      "properties": {
        "roleName": {
          "type": "string",
          "description": "The role name."
        },
        "description": {
          "type": "string",
          "description": "The description of the role."
        }
      }
    },
    "RoleAssignment": {
      "type": "object",
      "description": "The Role Assignment definition.",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The hub name.",
          "readOnly": true
        },
        "assignmentName": {
          "type": "string",
          "description": "The name of the metadata object.",
          "readOnly": true
        },
        "displayName": {
          "type": "object",
          "description": "Localized display names for the metadata.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "object",
          "description": "Localized description for the metadata.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningStates",
          "description": "Provisioning state.",
          "readOnly": true
        },
        "role": {
          "$ref": "#/definitions/RoleTypes",
          "description": "Type of roles."
        },
        "principals": {
          "type": "array",
          "description": "The principals being assigned to.",
          "items": {
            "$ref": "#/definitions/AssignmentPrincipal"
          },
          "x-ms-identifiers": []
        },
        "profiles": {
          "$ref": "#/definitions/ResourceSetDescription",
          "description": "Profiles set for the assignment."
        },
        "interactions": {
          "$ref": "#/definitions/ResourceSetDescription",
          "description": "Interactions set for the assignment."
        },
        "links": {
          "$ref": "#/definitions/ResourceSetDescription",
          "description": "Links set for the assignment."
        },
        "kpis": {
          "$ref": "#/definitions/ResourceSetDescription",
          "description": "Kpis set for the assignment."
        },
        "sasPolicies": {
          "$ref": "#/definitions/ResourceSetDescription",
          "description": "Sas Policies set for the assignment."
        },
        "connectors": {
          "$ref": "#/definitions/ResourceSetDescription",
          "description": "Connectors set for the assignment."
        },
        "views": {
          "$ref": "#/definitions/ResourceSetDescription",
          "description": "Views set for the assignment."
        },
        "relationshipLinks": {
          "$ref": "#/definitions/ResourceSetDescription",
          "description": "The Role assignments set for the relationship links."
        },
        "relationships": {
          "$ref": "#/definitions/ResourceSetDescription",
          "description": "The Role assignments set for the relationships."
        },
        "widgetTypes": {
          "$ref": "#/definitions/ResourceSetDescription",
          "description": "Widget types set for the assignment."
        },
        "roleAssignments": {
          "$ref": "#/definitions/ResourceSetDescription",
          "description": "The Role assignments set for the assignment."
        },
        "conflationPolicies": {
          "$ref": "#/definitions/ResourceSetDescription",
          "description": "Widget types set for the assignment."
        },
        "segments": {
          "$ref": "#/definitions/ResourceSetDescription",
          "description": "The Role assignments set for the assignment."
        }
      },
      "required": [
        "role",
        "principals"
      ]
    },
    "RoleAssignmentResourceFormat": {
      "type": "object",
      "description": "The Role Assignment resource format.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RoleAssignment",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the role assignment.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "RoleAssignmentResourceFormatListResult": {
      "type": "object",
      "description": "The response of a RoleAssignmentResourceFormat list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The RoleAssignmentResourceFormat items on this page",
          "items": {
            "$ref": "#/definitions/RoleAssignmentResourceFormat"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "RoleResourceFormat": {
      "type": "object",
      "description": "The role resource format.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/Role",
          "description": "The Role definition."
        }
      }
    },
    "RoleTypes": {
      "type": "string",
      "enum": [
        "Admin",
        "Reader",
        "ManageAdmin",
        "ManageReader",
        "DataAdmin",
        "DataReader"
      ],
      "x-ms-enum": {
        "name": "RoleTypes",
        "modelAsString": false
      }
    },
    "SalesforceConnectorProperties": {
      "type": "object",
      "description": "The Salesforce connector properties.",
      "properties": {
        "usersetting": {
          "$ref": "#/definitions/SalesforceDiscoverSetting",
          "description": "The user settings."
        },
        "salesforcetables": {
          "type": "array",
          "description": "The Salesforce tables.",
          "items": {
            "$ref": "#/definitions/SalesforceTable"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "usersetting",
        "salesforcetables"
      ]
    },
    "SalesforceDiscoverSetting": {
      "type": "object",
      "description": "Salesforce discover setting.",
      "properties": {
        "salesforceConnectionStringSecretUrl": {
          "type": "string",
          "description": "The salesforce connection string secret URL."
        }
      },
      "required": [
        "salesforceConnectionStringSecretUrl"
      ]
    },
    "SalesforceTable": {
      "type": "object",
      "description": "Salesforce table.",
      "properties": {
        "isProfile": {
          "type": "string",
          "description": "Indicating whether this instance is profile."
        },
        "tableCategory": {
          "type": "string",
          "description": "The table category."
        },
        "tableName": {
          "type": "string",
          "description": "The name of the table."
        },
        "tableRemarks": {
          "type": "string",
          "description": "The table remarks."
        },
        "tableSchema": {
          "type": "string",
          "description": "The table schema."
        }
      },
      "required": [
        "tableCategory",
        "tableName",
        "tableSchema"
      ]
    },
    "Status": {
      "type": "string",
      "enum": [
        "None",
        "Active",
        "Deleted"
      ],
      "x-ms-enum": {
        "name": "Status",
        "modelAsString": true
      }
    },
    "StrongId": {
      "type": "object",
      "description": "Property/Properties which represent a unique ID.",
      "properties": {
        "keyPropertyNames": {
          "type": "array",
          "description": "The properties which make up the unique ID.",
          "items": {
            "type": "string"
          }
        },
        "strongIdName": {
          "type": "string",
          "description": "The Name identifying the strong ID."
        },
        "displayName": {
          "type": "object",
          "description": "Localized display name.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "object",
          "description": "Localized descriptions.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "keyPropertyNames",
        "strongIdName"
      ]
    },
    "SuggestRelationshipLinksResponse": {
      "type": "object",
      "description": "The response of suggest relationship links operation.",
      "properties": {
        "interactionName": {
          "type": "string",
          "description": "The interaction name.",
          "readOnly": true
        },
        "suggestedRelationships": {
          "type": "array",
          "description": "Suggested relationships for the type.",
          "items": {
            "$ref": "#/definitions/RelationshipsLookup"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "TypePropertiesMapping": {
      "type": "object",
      "description": "Metadata for a Link's property mapping.",
      "properties": {
        "sourcePropertyName": {
          "type": "string",
          "description": " Property name on the source Entity Type."
        },
        "targetPropertyName": {
          "type": "string",
          "description": "Property name on the target Entity Type."
        },
        "linkType": {
          "$ref": "#/definitions/LinkTypes",
          "description": "Link type."
        }
      },
      "required": [
        "sourcePropertyName",
        "targetPropertyName"
      ]
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2017-04-26"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2017_04_26",
            "value": "2017-04-26"
          }
        ]
      }
    },
    "View": {
      "type": "object",
      "description": "The view in Customer 360 web application.",
      "properties": {
        "viewName": {
          "type": "string",
          "description": "Name of the view.",
          "readOnly": true
        },
        "userId": {
          "type": "string",
          "description": "the user ID."
        },
        "tenantId": {
          "type": "string",
          "description": "the hub name.",
          "readOnly": true
        },
        "displayName": {
          "type": "object",
          "description": "Localized display name for the view.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "definition": {
          "type": "string",
          "description": "View definition."
        },
        "changed": {
          "type": "string",
          "format": "date-time",
          "description": "Date time when view was last modified.",
          "readOnly": true
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Date time when view was created.",
          "readOnly": true
        }
      },
      "required": [
        "definition"
      ]
    },
    "ViewResourceFormat": {
      "type": "object",
      "description": "The view resource format.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/View",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the view.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ViewResourceFormatListResult": {
      "type": "object",
      "description": "The response of a ViewResourceFormat list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ViewResourceFormat items on this page",
          "items": {
            "$ref": "#/definitions/ViewResourceFormat"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WidgetType": {
      "type": "object",
      "description": "Definition of WidgetType.",
      "properties": {
        "widgetTypeName": {
          "type": "string",
          "description": "Name of the widget type.",
          "readOnly": true
        },
        "definition": {
          "type": "string",
          "description": "Definition for widget type."
        },
        "description": {
          "type": "string",
          "description": "Description for widget type."
        },
        "displayName": {
          "type": "object",
          "description": "Localized display name for the widget type.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "imageUrl": {
          "type": "string",
          "description": "The image URL."
        },
        "tenantId": {
          "type": "string",
          "description": "The hub name.",
          "readOnly": true
        },
        "widgetVersion": {
          "type": "string",
          "description": "The widget version."
        },
        "changed": {
          "type": "string",
          "format": "date-time",
          "description": "Date time when widget type was last modified.",
          "readOnly": true
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Date time when widget type was created.",
          "readOnly": true
        }
      },
      "required": [
        "definition"
      ]
    },
    "WidgetTypeResourceFormat": {
      "type": "object",
      "description": "The WidgetTypeResourceFormat",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WidgetType",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the widget type.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WidgetTypeResourceFormatListResult": {
      "type": "object",
      "description": "The response of a WidgetTypeResourceFormat list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WidgetTypeResourceFormat items on this page",
          "items": {
            "$ref": "#/definitions/WidgetTypeResourceFormat"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
