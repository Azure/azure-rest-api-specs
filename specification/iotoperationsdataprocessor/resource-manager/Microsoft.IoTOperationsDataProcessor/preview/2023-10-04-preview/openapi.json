{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.IoTOperationsDataProcessor management service.",
    "version": "2023-10-04-preview",
    "description": "Microsoft.IoTOperationsDataProcessor Resource Provider management API.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Instances"
    },
    {
      "name": "Pipelines"
    },
    {
      "name": "Datasets"
    }
  ],
  "paths": {
    "/providers/Microsoft.IoTOperationsDataProcessor/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List - generated by [MaximumSet] rule": {
            "$ref": "./examples/Operations_List_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.IoTOperationsDataProcessor/instances": {
      "get": {
        "operationId": "Instances_ListBySubscription",
        "tags": [
          "Instances"
        ],
        "description": "List Instance resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InstanceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instances_ListBySubscription - generated by [MaximumSet] rule": {
            "$ref": "./examples/Instances_ListBySubscription_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsDataProcessor/instances": {
      "get": {
        "operationId": "Instances_ListByResourceGroup",
        "tags": [
          "Instances"
        ],
        "description": "List Instance resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InstanceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instances_ListByResourceGroup - generated by [MaximumSet] rule": {
            "$ref": "./examples/Instances_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsDataProcessor/instances/{instanceName}": {
      "get": {
        "operationId": "Instances_Get",
        "tags": [
          "Instances"
        ],
        "description": "Get a Instance",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9][a-z0-9-]{1,60}[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Instance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instances_Get - generated by [MaximumSet] rule": {
            "$ref": "./examples/Instances_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Instances_CreateOrUpdate",
        "tags": [
          "Instances"
        ],
        "description": "Create a Instance",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9][a-z0-9-]{1,60}[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Instance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Instance' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Instance"
            }
          },
          "201": {
            "description": "Resource 'Instance' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Instance"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instances create or update - generated by [MaximumSet] rule": {
            "$ref": "./examples/Instances_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Instances_Update",
        "tags": [
          "Instances"
        ],
        "description": "Update a Instance",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9][a-z0-9-]{1,60}[a-z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InstanceTagsUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Instance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instances_Update - generated by [MaximumSet] rule": {
            "$ref": "./examples/Instances_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "Instances_Delete",
        "tags": [
          "Instances"
        ],
        "description": "Delete a Instance",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9][a-z0-9-]{1,60}[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instances_Delete - generated by [MaximumSet] rule": {
            "$ref": "./examples/Instances_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsDataProcessor/instances/{instanceName}/datasets": {
      "get": {
        "operationId": "Datasets_ListByInstance",
        "tags": [
          "Datasets"
        ],
        "description": "List Dataset resources by Instance",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9][a-z0-9-]{1,60}[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DatasetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Datasets_ListByInstance - generated by [MaximumSet] rule": {
            "$ref": "./examples/Datasets_ListByInstance_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsDataProcessor/instances/{instanceName}/datasets/{datasetName}": {
      "get": {
        "operationId": "Datasets_Get",
        "tags": [
          "Datasets"
        ],
        "description": "Get a Dataset",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9][a-z0-9-]{1,60}[a-z0-9]$"
          },
          {
            "name": "datasetName",
            "in": "path",
            "description": "Name of dataset.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9][a-z0-9-]{1,60}[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Dataset"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Datasets_Get - generated by [MaximumSet] rule": {
            "$ref": "./examples/Datasets_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Datasets_CreateOrUpdate",
        "tags": [
          "Datasets"
        ],
        "description": "Create a Dataset",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9][a-z0-9-]{1,60}[a-z0-9]$"
          },
          {
            "name": "datasetName",
            "in": "path",
            "description": "Name of dataset.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9][a-z0-9-]{1,60}[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dataset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Dataset' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Dataset"
            }
          },
          "201": {
            "description": "Resource 'Dataset' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Dataset"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Datasets create or update - generated by [MaximumSet] rule": {
            "$ref": "./examples/Datasets_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Datasets_Update",
        "tags": [
          "Datasets"
        ],
        "description": "Update a Dataset",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9][a-z0-9-]{1,60}[a-z0-9]$"
          },
          {
            "name": "datasetName",
            "in": "path",
            "description": "Name of dataset.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9][a-z0-9-]{1,60}[a-z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatasetTagsUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Dataset"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Datasets_Update - generated by [MaximumSet] rule": {
            "$ref": "./examples/Datasets_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "Datasets_Delete",
        "tags": [
          "Datasets"
        ],
        "description": "Delete a Dataset",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9][a-z0-9-]{1,60}[a-z0-9]$"
          },
          {
            "name": "datasetName",
            "in": "path",
            "description": "Name of dataset.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9][a-z0-9-]{1,60}[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Datasets_Delete - generated by [MaximumSet] rule": {
            "$ref": "./examples/Datasets_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsDataProcessor/instances/{instanceName}/pipelines": {
      "get": {
        "operationId": "Pipelines_ListByInstance",
        "tags": [
          "Pipelines"
        ],
        "description": "List Pipeline resources by Instance",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9][a-z0-9-]{1,60}[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PipelineListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pipelines_ListByInstance - generated by [MaximumSet] rule": {
            "$ref": "./examples/Pipelines_ListByInstance_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsDataProcessor/instances/{instanceName}/pipelines/{pipelineName}": {
      "get": {
        "operationId": "Pipelines_Get",
        "tags": [
          "Pipelines"
        ],
        "description": "Get a Pipeline",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9][a-z0-9-]{1,60}[a-z0-9]$"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "Name of pipeline",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9][a-z0-9-]{1,60}[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Pipeline"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pipelines_Get - generated by [MaximumSet] rule": {
            "$ref": "./examples/Pipelines_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Pipelines_CreateOrUpdate",
        "tags": [
          "Pipelines"
        ],
        "description": "Create a Pipeline",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9][a-z0-9-]{1,60}[a-z0-9]$"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "Name of pipeline",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9][a-z0-9-]{1,60}[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Pipeline"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Pipeline' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Pipeline"
            }
          },
          "201": {
            "description": "Resource 'Pipeline' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Pipeline"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pipelines create or update - generated by [MaximumSet] rule": {
            "$ref": "./examples/Pipelines_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Pipelines_Update",
        "tags": [
          "Pipelines"
        ],
        "description": "Update a Pipeline",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9][a-z0-9-]{1,60}[a-z0-9]$"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "Name of pipeline",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9][a-z0-9-]{1,60}[a-z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PipelineTagsUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Pipeline"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pipelines_Update - generated by [MaximumSet] rule": {
            "$ref": "./examples/Pipelines_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "Pipelines_Delete",
        "tags": [
          "Pipelines"
        ],
        "description": "Delete a Pipeline",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9][a-z0-9-]{1,60}[a-z0-9]$"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "Name of pipeline",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9][a-z0-9-]{1,60}[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pipelines_Delete - generated by [MaximumSet] rule": {
            "$ref": "./examples/Pipelines_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "Dataset": {
      "type": "object",
      "description": "A Dataset resource belonging to an Instance resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DatasetProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "extendedLocation"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DatasetListResult": {
      "type": "object",
      "description": "The response of a Dataset list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Dataset items on this page",
          "items": {
            "$ref": "#/definitions/Dataset"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DatasetProperties": {
      "type": "object",
      "description": "The properties of a Dataset resource.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Detailed description of the Dataset."
        },
        "payload": {
          "type": "string",
          "description": "Path to the payload in the message. Enrich will add only the payload to the enriched message, other fields will not be kept except for in the indexes."
        },
        "timestamp": {
          "type": "string",
          "description": "Path to an RFC3339 timestamp in the message. If no path is provided, the ingestion time of the record is used for time-based joins."
        },
        "ttl": {
          "type": "string",
          "description": "Time to live for individual records."
        },
        "keys": {
          "type": "object",
          "description": "List of keys that can be used for joining on enrich.",
          "additionalProperties": {
            "$ref": "#/definitions/DatasetPropertyKey"
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      }
    },
    "DatasetPropertyKey": {
      "type": "object",
      "description": "Key that can be used for joining on enrich.",
      "properties": {
        "path": {
          "type": "string",
          "description": "Path to the input value from the message."
        },
        "primaryKey": {
          "type": "boolean",
          "description": "If true the property will be used as a primary key. At most one primary key can exists."
        }
      },
      "required": [
        "path"
      ]
    },
    "DatasetTagsUpdate": {
      "type": "object",
      "description": "The type used for updating tags in Dataset resources.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ExtendedLocation": {
      "type": "object",
      "description": "Extended location is an extension of Azure locations. They provide a way to use their Azure ARC enabled Kubernetes clusters as target locations for deploying Azure services instances.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the extended location."
        },
        "type": {
          "type": "string",
          "description": "The type of the extended location."
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "Instance": {
      "type": "object",
      "description": "A Instance resource is a logical container for a set of child resources.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/InstanceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "extendedLocation"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "InstanceListResult": {
      "type": "object",
      "description": "The response of a Instance list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Instance items on this page",
          "items": {
            "$ref": "#/definitions/Instance"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "InstanceProperties": {
      "type": "object",
      "description": "The properties of a Instance resource.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Detailed description of the Instance."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      }
    },
    "InstanceTagsUpdate": {
      "type": "object",
      "description": "The type used for updating tags in Instance resources.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Pipeline": {
      "type": "object",
      "description": "A Pipeline resource belonging to an Instance resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PipelineProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "extendedLocation"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "PipelineInput": {
      "type": "object",
      "description": "Stage configuration for Pipeline input stage.",
      "properties": {
        "type": {
          "type": "string",
          "description": "ARM resource type."
        },
        "description": {
          "type": "string",
          "description": "Description for stage."
        },
        "next": {
          "type": "array",
          "description": "Next stage in the pipeline.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "type",
        "next"
      ],
      "additionalProperties": {}
    },
    "PipelineListResult": {
      "type": "object",
      "description": "The response of a Pipeline list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Pipeline items on this page",
          "items": {
            "$ref": "#/definitions/Pipeline"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PipelineProperties": {
      "type": "object",
      "description": "The properties of a Pipeline resource.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Detailed description of the Pipeline."
        },
        "enabled": {
          "type": "boolean",
          "description": "Flag indicating whether the pipeline should be running or not."
        },
        "input": {
          "$ref": "#/definitions/PipelineInput",
          "description": "Information about where to pull input data from."
        },
        "stages": {
          "type": "object",
          "description": "Map of stage ids to stage configurations for all pipeline processing and output stages.",
          "additionalProperties": {
            "$ref": "#/definitions/PipelineStage"
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      },
      "required": [
        "enabled",
        "input",
        "stages"
      ]
    },
    "PipelineStage": {
      "type": "object",
      "description": "Stage configurations for all Pipeline processing and output stages.",
      "properties": {
        "type": {
          "type": "string",
          "description": "ARM resource type."
        },
        "description": {
          "type": "string",
          "description": "Description for stage."
        },
        "next": {
          "type": "array",
          "description": "Next stage in the pipeline. Not required if output stage.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": {}
    },
    "PipelineTagsUpdate": {
      "type": "object",
      "description": "The type used for updating tags in Pipeline resources.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The provisioning status of the resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "The resource is being created."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "The resource is being updated."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "The resource is being deleted."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "The resource was accepted by the server."
          }
        ]
      }
    }
  },
  "parameters": {}
}
