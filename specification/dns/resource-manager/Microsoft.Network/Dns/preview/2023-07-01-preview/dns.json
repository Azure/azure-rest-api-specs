{
  "swagger": "2.0",
  "info": {
    "title": "DnsManagementClient",
    "version": "2023-07-01-preview",
    "description": "The DNS Management Client.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "DnssecConfigs"
    },
    {
      "name": "Zones"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/dnszones": {
      "get": {
        "operationId": "Zones_List",
        "tags": [
          "Zones"
        ],
        "description": "Lists the DNS zones in all resource groups in a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of DNS zones to return. If not specified, returns up to 100 zones.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ZoneListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List zones by subscription": {
            "$ref": "./examples/ListZonesBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/getDnsResourceReference": {
      "post": {
        "operationId": "DnsResourceReference_GetByTargetResources",
        "description": "Returns the DNS records specified by the referencing targetResourceIds.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsResourceReferenceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DnsResourceReferenceResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get DNS resource reference": {
            "$ref": "./examples/GetDnsResourceReference.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones": {
      "get": {
        "operationId": "Zones_ListByResourceGroup",
        "tags": [
          "Zones"
        ],
        "description": "Lists the DNS zones within a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of record sets to return. If not specified, returns up to 100 record sets.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ZoneListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List zones by resource group": {
            "$ref": "./examples/ListZonesByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}": {
      "get": {
        "operationId": "Zones_Get",
        "tags": [
          "Zones"
        ],
        "description": "Gets a DNS zone. Retrieves the zone properties, but not the record sets within the zone.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "zoneName",
            "in": "path",
            "description": "The name of the DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Zone"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get zone": {
            "$ref": "./examples/GetZone.json"
          }
        }
      },
      "put": {
        "operationId": "Zones_CreateOrUpdate",
        "tags": [
          "Zones"
        ],
        "description": "Creates or updates a DNS zone. Does not modify DNS records within the zone.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "zoneName",
            "in": "path",
            "description": "The name of the DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The etag of the DNS zone. Omit this value to always overwrite the current zone. Specify the last-seen etag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Set to '*' to allow a new DNS zone to be created, but to prevent updating an existing zone. Other values will be ignored.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfNoneMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the CreateOrUpdate operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Zone"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Zone' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Zone"
            }
          },
          "201": {
            "description": "Resource 'Zone' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Zone"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create zone": {
            "$ref": "./examples/CreateOrUpdateZone.json"
          }
        }
      },
      "patch": {
        "operationId": "Zones_Update",
        "tags": [
          "Zones"
        ],
        "description": "Updates a DNS zone. Does not modify DNS records within the zone.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "zoneName",
            "in": "path",
            "description": "The name of the DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The etag of the DNS zone. Omit this value to always overwrite the current zone. Specify the last-seen etag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the Update operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ZoneUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Zone"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Patch zone": {
            "$ref": "./examples/PatchZone.json"
          }
        }
      },
      "delete": {
        "operationId": "Zones_Delete",
        "tags": [
          "Zones"
        ],
        "description": "Deletes a DNS zone. WARNING: All DNS records in the zone will also be deleted. This operation cannot be undone.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "zoneName",
            "in": "path",
            "description": "The name of the DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The etag of the DNS zone. Omit this value to always delete the current zone. Specify the last-seen etag value to prevent accidentally deleting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfMatch"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete zone": {
            "$ref": "./examples/DeleteZone.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}": {
      "get": {
        "operationId": "RecordSets_ListByType",
        "description": "Lists the record sets of a specified type in a DNS zone.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "zoneName",
            "in": "path",
            "description": "The name of the DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          },
          {
            "name": "recordType",
            "in": "path",
            "description": "The type of DNS record in this record set.",
            "required": true,
            "type": "string",
            "enum": [
              "A",
              "AAAA",
              "CAA",
              "CNAME",
              "MX",
              "NS",
              "PTR",
              "SOA",
              "SRV",
              "TXT",
              "TLSA",
              "DS",
              "NAPTR"
            ],
            "x-ms-enum": {
              "name": "RecordType",
              "modelAsString": false
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of record sets to return. If not specified, returns up to 100 record sets.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$recordsetnamesuffix",
            "in": "query",
            "description": "The suffix label of the record set name that has to be used to filter the record set enumerations. If this parameter is specified, Enumeration will return only records that end with .<recordSetNameSuffix>",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RecordSetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List A recordsets": {
            "$ref": "./examples/ListARecordset.json"
          },
          "List AAAA recordsets": {
            "$ref": "./examples/ListAAAARecordset.json"
          },
          "List CAA recordsets": {
            "$ref": "./examples/ListCaaRecordset.json"
          },
          "List CNAME recordsets": {
            "$ref": "./examples/ListCNAMERecordset.json"
          },
          "List DS recordsets": {
            "$ref": "./examples/ListDSRecordset.json"
          },
          "List MX recordsets": {
            "$ref": "./examples/ListMXRecordset.json"
          },
          "List NAPTR recordsets": {
            "$ref": "./examples/ListNAPTRRecordset.json"
          },
          "List NS recordsets": {
            "$ref": "./examples/ListNSRecordset.json"
          },
          "List PTR recordsets": {
            "$ref": "./examples/ListPTRRecordset.json"
          },
          "List SOA recordsets": {
            "$ref": "./examples/ListSOARecordset.json"
          },
          "List SRV recordsets": {
            "$ref": "./examples/ListSRVRecordset.json"
          },
          "List TLSA recordsets": {
            "$ref": "./examples/ListTLSARecordset.json"
          },
          "List TXT recordsets": {
            "$ref": "./examples/ListTXTRecordset.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}": {
      "get": {
        "operationId": "RecordSets_Get",
        "description": "Gets a record set.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "zoneName",
            "in": "path",
            "description": "The name of the DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          },
          {
            "name": "relativeRecordSetName",
            "in": "path",
            "description": "The name of the record set, relative to the name of the zone.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "recordType",
            "in": "path",
            "description": "The type of DNS record in this record set.",
            "required": true,
            "type": "string",
            "enum": [
              "A",
              "AAAA",
              "CAA",
              "CNAME",
              "MX",
              "NS",
              "PTR",
              "SOA",
              "SRV",
              "TXT",
              "TLSA",
              "DS",
              "NAPTR"
            ],
            "x-ms-enum": {
              "name": "RecordType",
              "modelAsString": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RecordSet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get A recordset": {
            "$ref": "./examples/GetARecordset.json"
          },
          "Get AAAA recordset": {
            "$ref": "./examples/GetAAAARecordset.json"
          },
          "Get CAA recordset": {
            "$ref": "./examples/GetCaaRecordset.json"
          },
          "Get CNAME recordset": {
            "$ref": "./examples/GetCNAMERecordset.json"
          },
          "Get DS recordset": {
            "$ref": "./examples/GetDSRecordset.json"
          },
          "Get MX recordset": {
            "$ref": "./examples/GetMXRecordset.json"
          },
          "Get NAPTR recordset": {
            "$ref": "./examples/GetNAPTRRecordset.json"
          },
          "Get NS recordset": {
            "$ref": "./examples/GetNSRecordset.json"
          },
          "Get PTR recordset": {
            "$ref": "./examples/GetPTRRecordset.json"
          },
          "Get SOA recordset": {
            "$ref": "./examples/GetSOARecordset.json"
          },
          "Get SRV recordset": {
            "$ref": "./examples/GetSRVRecordset.json"
          },
          "Get TLSA recordset": {
            "$ref": "./examples/GetTLSARecordset.json"
          },
          "Get TXT recordset": {
            "$ref": "./examples/GetTXTRecordset.json"
          }
        }
      },
      "put": {
        "operationId": "RecordSets_CreateOrUpdate",
        "description": "Creates or updates a record set within a DNS zone. Record sets of type SOA can be updated but not created (they are created when the DNS zone is created).",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "zoneName",
            "in": "path",
            "description": "The name of the DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          },
          {
            "name": "relativeRecordSetName",
            "in": "path",
            "description": "The name of the record set, relative to the name of the zone.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "recordType",
            "in": "path",
            "description": "The type of DNS record in this record set.",
            "required": true,
            "type": "string",
            "enum": [
              "A",
              "AAAA",
              "CAA",
              "CNAME",
              "MX",
              "NS",
              "PTR",
              "SOA",
              "SRV",
              "TXT",
              "TLSA",
              "DS",
              "NAPTR"
            ],
            "x-ms-enum": {
              "name": "RecordType",
              "modelAsString": false
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The etag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen etag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Set to '*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will be ignored.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfNoneMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the CreateOrUpdate operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecordSet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RecordSet"
            }
          },
          "201": {
            "description": "Azure create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RecordSet"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create A recordset": {
            "$ref": "./examples/CreateOrUpdateARecordset.json"
          },
          "Create A recordset with alias target resource": {
            "$ref": "./examples/CreateOrUpdateARecordsetAlias.json"
          },
          "Create A recordset with traffic management profile": {
            "$ref": "./examples/CreateOrUpdateARecordSetTrafficManagementProfile.json"
          },
          "Create AAAA recordset": {
            "$ref": "./examples/CreateOrUpdateAAAARecordset.json"
          },
          "Create CAA recordset": {
            "$ref": "./examples/CreateOrUpdateCaaRecordset.json"
          },
          "Create CNAME recordset": {
            "$ref": "./examples/CreateOrUpdateCNAMERecordset.json"
          },
          "Create DS recordset": {
            "$ref": "./examples/CreateOrUpdateDSRecordset.json"
          },
          "Create MX recordset": {
            "$ref": "./examples/CreateOrUpdateMXRecordset.json"
          },
          "Create NAPTR recordset": {
            "$ref": "./examples/CreateOrUpdateNAPTRRecordset.json"
          },
          "Create NS recordset": {
            "$ref": "./examples/CreateOrUpdateNSRecordset.json"
          },
          "Create PTR recordset": {
            "$ref": "./examples/CreateOrUpdatePTRRecordset.json"
          },
          "Create SOA recordset": {
            "$ref": "./examples/CreateOrUpdateSOARecordset.json"
          },
          "Create SRV recordset": {
            "$ref": "./examples/CreateOrUpdateSRVRecordset.json"
          },
          "Create TLSA recordset": {
            "$ref": "./examples/CreateOrUpdateTLSARecordset.json"
          },
          "Create TXT recordset": {
            "$ref": "./examples/CreateOrUpdateTXTRecordset.json"
          }
        }
      },
      "patch": {
        "operationId": "RecordSets_Update",
        "description": "Updates a record set within a DNS zone.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "zoneName",
            "in": "path",
            "description": "The name of the DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          },
          {
            "name": "relativeRecordSetName",
            "in": "path",
            "description": "The name of the record set, relative to the name of the zone.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "recordType",
            "in": "path",
            "description": "The type of DNS record in this record set.",
            "required": true,
            "type": "string",
            "enum": [
              "A",
              "AAAA",
              "CAA",
              "CNAME",
              "MX",
              "NS",
              "PTR",
              "SOA",
              "SRV",
              "TXT",
              "TLSA",
              "DS",
              "NAPTR"
            ],
            "x-ms-enum": {
              "name": "RecordType",
              "modelAsString": false
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The etag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen etag value to prevent accidentally overwriting concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the Update operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecordSet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RecordSet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Patch A recordset": {
            "$ref": "./examples/PatchARecordset.json"
          },
          "Patch AAAA recordset": {
            "$ref": "./examples/PatchAAAARecordset.json"
          },
          "Patch CAA recordset": {
            "$ref": "./examples/PatchCaaRecordset.json"
          },
          "Patch CNAME recordset": {
            "$ref": "./examples/PatchCNAMERecordset.json"
          },
          "Patch DS recordset": {
            "$ref": "./examples/PatchDSRecordset.json"
          },
          "Patch MX recordset": {
            "$ref": "./examples/PatchMXRecordset.json"
          },
          "Patch NAPTR recordset": {
            "$ref": "./examples/PatchNAPTRRecordset.json"
          },
          "Patch NS recordset": {
            "$ref": "./examples/PatchNSRecordset.json"
          },
          "Patch PTR recordset": {
            "$ref": "./examples/PatchPTRRecordset.json"
          },
          "Patch SOA recordset": {
            "$ref": "./examples/PatchSOARecordset.json"
          },
          "Patch SRV recordset": {
            "$ref": "./examples/PatchSRVRecordset.json"
          },
          "Patch TLSA recordset": {
            "$ref": "./examples/PatchTLSARecordset.json"
          },
          "Patch TXT recordset": {
            "$ref": "./examples/PatchTXTRecordset.json"
          }
        }
      },
      "delete": {
        "operationId": "RecordSets_Delete",
        "description": "Deletes a record set from a DNS zone. This operation cannot be undone. Record sets of type SOA cannot be deleted (they are deleted when the DNS zone is deleted).",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "zoneName",
            "in": "path",
            "description": "The name of the DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          },
          {
            "name": "relativeRecordSetName",
            "in": "path",
            "description": "The name of the record set, relative to the name of the zone.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "recordType",
            "in": "path",
            "description": "The type of DNS record in this record set.",
            "required": true,
            "type": "string",
            "enum": [
              "A",
              "AAAA",
              "CAA",
              "CNAME",
              "MX",
              "NS",
              "PTR",
              "SOA",
              "SRV",
              "TXT",
              "TLSA",
              "DS",
              "NAPTR"
            ],
            "x-ms-enum": {
              "name": "RecordType",
              "modelAsString": false
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The etag of the record set. Omit this value to always delete the current record set. Specify the last-seen etag value to prevent accidentally deleting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfMatch"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete A recordset": {
            "$ref": "./examples/DeleteARecordset.json"
          },
          "Delete AAAA recordset": {
            "$ref": "./examples/DeleteAAAARecordset.json"
          },
          "Delete CAA recordset": {
            "$ref": "./examples/DeleteCaaRecordset.json"
          },
          "Delete CNAME recordset": {
            "$ref": "./examples/DeleteCNAMERecordset.json"
          },
          "Delete DS recordset": {
            "$ref": "./examples/DeleteDSRecordset.json"
          },
          "Delete MX recordset": {
            "$ref": "./examples/DeleteMXRecordset.json"
          },
          "Delete NAPTR recordset": {
            "$ref": "./examples/DeleteNAPTRRecordset.json"
          },
          "Delete NS recordset": {
            "$ref": "./examples/DeleteNSRecordset.json"
          },
          "Delete PTR recordset": {
            "$ref": "./examples/DeletePTRRecordset.json"
          },
          "Delete SRV recordset": {
            "$ref": "./examples/DeleteSRVRecordset.json"
          },
          "Delete TLSA recordset": {
            "$ref": "./examples/DeleteTLSARecordset.json"
          },
          "Delete TXT recordset": {
            "$ref": "./examples/DeleteTXTRecordset.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/all": {
      "get": {
        "operationId": "RecordSets_ListAllByDnsZone",
        "tags": [
          "Zones"
        ],
        "description": "Lists all record sets in a DNS zone.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "zoneName",
            "in": "path",
            "description": "The name of the DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of record sets to return. If not specified, returns up to 100 record sets.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$recordsetnamesuffix",
            "in": "query",
            "description": "The suffix label of the record set name that has to be used to filter the record set enumerations. If this parameter is specified, Enumeration will return only records that end with .<recordSetNameSuffix>",
            "required": false,
            "type": "string",
            "x-ms-client-name": "recordSetNameSuffix"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RecordSetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all recordsets by zone": {
            "$ref": "./examples/ListAllRecordSetsByZone.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/dnssecConfigs": {
      "get": {
        "operationId": "DnssecConfigs_ListByDnsZone",
        "tags": [
          "DnssecConfigs"
        ],
        "description": "Lists the DNSSEC configurations in a DNS zone.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "zoneName",
            "in": "path",
            "description": "The name of the DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnssecConfigListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List DnssecConfigs": {
            "$ref": "./examples/ListDnssecConfigsByZone.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/dnssecConfigs/default": {
      "get": {
        "operationId": "DnssecConfigs_Get",
        "tags": [
          "DnssecConfigs"
        ],
        "description": "Gets the DNSSEC configuration.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "zoneName",
            "in": "path",
            "description": "The name of the DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnssecConfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get DnssecConfig": {
            "$ref": "./examples/GetDnssecConfig.json"
          }
        }
      },
      "put": {
        "operationId": "DnssecConfigs_CreateOrUpdate",
        "tags": [
          "DnssecConfigs"
        ],
        "description": "Creates or updates the DNSSEC configuration on a DNS zone.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "zoneName",
            "in": "path",
            "description": "The name of the DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The etag of the DNSSEC configuration. Omit this value to always overwrite the DNSSEC configuration. Specify the last-seen etag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Set to '*' to allow this DNSSEC configuration to be created, but to prevent updating existing DNSSEC configuration. Other values will be ignored.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfNoneMatch"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DnssecConfig' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DnssecConfig"
            }
          },
          "201": {
            "description": "Resource 'DnssecConfig' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DnssecConfig"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create DnssecConfig": {
            "$ref": "./examples/CreateOrUpdateDnssecConfig.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "DnssecConfigs_Delete",
        "tags": [
          "DnssecConfigs"
        ],
        "description": "Deletes the DNSSEC configuration on a DNS zone. This operation cannot be undone.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "zoneName",
            "in": "path",
            "description": "The name of the DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The etag of this DNSSEC configuration. Omit this value to always delete the DNSSEC configuration. Specify the last-seen etag value to prevent accidentally deleting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfMatch"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete DnssecConfig": {
            "$ref": "./examples/DeleteDnssecConfig.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/recordsets": {
      "get": {
        "operationId": "RecordSets_ListByDnsZone",
        "tags": [
          "Zones"
        ],
        "description": "Lists all record sets in a DNS zone.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "zoneName",
            "in": "path",
            "description": "The name of the DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of record sets to return. If not specified, returns up to 100 record sets.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$recordsetnamesuffix",
            "in": "query",
            "description": "The suffix label of the record set name that has to be used to filter the record set enumerations. If this parameter is specified, Enumeration will return only records that end with .<recordSetNameSuffix>",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RecordSetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List recordsets by zone": {
            "$ref": "./examples/ListRecordSetsByZone.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "ARecord": {
      "type": "object",
      "description": "An A record.",
      "properties": {
        "ipv4Address": {
          "type": "string",
          "description": "The IPv4 address of this A record."
        }
      }
    },
    "AaaaRecord": {
      "type": "object",
      "description": "An AAAA record.",
      "properties": {
        "ipv6Address": {
          "type": "string",
          "description": "The IPv6 address of this AAAA record."
        }
      }
    },
    "CaaRecord": {
      "type": "object",
      "description": "A CAA record.",
      "properties": {
        "flags": {
          "type": "integer",
          "format": "int32",
          "description": "The flags for this CAA record as an integer between 0 and 255."
        },
        "tag": {
          "type": "string",
          "description": "The tag for this CAA record."
        },
        "value": {
          "type": "string",
          "description": "The value for this CAA record."
        }
      }
    },
    "CloudError": {
      "type": "object",
      "description": "An error response from the service.",
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody",
          "description": "Cloud error body."
        }
      }
    },
    "CloudErrorBody": {
      "type": "object",
      "description": "An error response from the service.",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user interface."
        },
        "target": {
          "type": "string",
          "description": "The target of the particular error. For example, the name of the property in error."
        },
        "details": {
          "type": "array",
          "description": "A list of additional details about the error.",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "CnameRecord": {
      "type": "object",
      "description": "A CNAME record.",
      "properties": {
        "cname": {
          "type": "string",
          "description": "The canonical name for this CNAME record."
        }
      }
    },
    "DelegationSignerInfo": {
      "type": "object",
      "description": "The delegation signer information.",
      "properties": {
        "digestAlgorithmType": {
          "type": "integer",
          "format": "int32",
          "description": "The digest algorithm type represents the standard digest algorithm number used to construct the digest. See: https://www.iana.org/assignments/ds-rr-types/ds-rr-types.xhtml",
          "readOnly": true
        },
        "digestValue": {
          "type": "string",
          "description": "The digest value is a cryptographic hash value of the referenced DNSKEY Resource Record.",
          "readOnly": true
        },
        "record": {
          "type": "string",
          "description": "The record represents a delegation signer (DS) record.",
          "readOnly": true
        }
      }
    },
    "Digest": {
      "type": "object",
      "description": "A digest.",
      "properties": {
        "algorithmType": {
          "type": "integer",
          "format": "int32",
          "description": "The digest algorithm type represents the standard digest algorithm number used to construct the digest. See: https://www.iana.org/assignments/ds-rr-types/ds-rr-types.xhtml"
        },
        "value": {
          "type": "string",
          "description": "The digest value is a cryptographic hash value of the referenced DNSKEY Resource Record."
        }
      }
    },
    "DnsResourceReference": {
      "type": "object",
      "description": "Represents a single Azure resource and its referencing DNS records.",
      "properties": {
        "dnsResources": {
          "type": "array",
          "description": "A list of dns Records",
          "items": {
            "$ref": "#/definitions/SubResource"
          }
        },
        "targetResource": {
          "$ref": "#/definitions/SubResource",
          "description": "A reference to an azure resource from where the dns resource value is taken."
        }
      }
    },
    "DnsResourceReferenceRequest": {
      "type": "object",
      "description": "Represents the properties of the Dns Resource Reference Request.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DnsResourceReferenceRequestProperties",
          "description": "The properties of the Resource Reference Request.",
          "x-ms-client-flatten": true
        }
      }
    },
    "DnsResourceReferenceRequestProperties": {
      "type": "object",
      "description": "Represents the properties of the Dns Resource Reference Request.",
      "properties": {
        "targetResources": {
          "type": "array",
          "description": "A list of references to azure resources for which referencing dns records need to be queried.",
          "items": {
            "$ref": "#/definitions/SubResource"
          }
        }
      }
    },
    "DnsResourceReferenceResult": {
      "type": "object",
      "description": "Represents the properties of the Dns Resource Reference Result.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DnsResourceReferenceResultProperties",
          "description": "The result of dns resource reference request. Returns a list of dns resource references for each of the azure resource in the request.",
          "x-ms-client-flatten": true
        }
      }
    },
    "DnsResourceReferenceResultProperties": {
      "type": "object",
      "description": "The result of dns resource reference request. Returns a list of dns resource references for each of the azure resource in the request.",
      "properties": {
        "dnsResourceReferences": {
          "type": "array",
          "description": "The result of dns resource reference request. A list of dns resource references for each of the azure resource in the request",
          "items": {
            "$ref": "#/definitions/DnsResourceReference"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "DnssecConfig": {
      "type": "object",
      "description": "Represents the DNSSEC configuration.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DnssecProperties",
          "description": "The DNSSEC properties.",
          "readOnly": true,
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "The etag of the DNSSEC configuration."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DnssecConfigListResult": {
      "type": "object",
      "description": "The response of a DnssecConfig list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DnssecConfig items on this page",
          "items": {
            "$ref": "#/definitions/DnssecConfig"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DnssecProperties": {
      "type": "object",
      "description": "Represents the DNSSEC properties.",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Provisioning State of the DNSSEC configuration.",
          "readOnly": true
        },
        "signingKeys": {
          "type": "array",
          "description": "The list of signing keys.",
          "items": {
            "$ref": "#/definitions/SigningKey"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "DsRecord": {
      "type": "object",
      "description": "A DS record. For more information about the DS record format, see RFC 4034: https://www.rfc-editor.org/rfc/rfc4034",
      "properties": {
        "keyTag": {
          "type": "integer",
          "format": "int32",
          "description": "The key tag value is used to determine which DNSKEY Resource Record is used for signature verification."
        },
        "algorithm": {
          "type": "integer",
          "format": "int32",
          "description": "The security algorithm type represents the standard security algorithm number of the DNSKEY Resource Record. See: https://www.iana.org/assignments/dns-sec-alg-numbers/dns-sec-alg-numbers.xhtml"
        },
        "digest": {
          "$ref": "#/definitions/Digest",
          "description": "The digest entity."
        }
      }
    },
    "MxRecord": {
      "type": "object",
      "description": "An MX record.",
      "properties": {
        "preference": {
          "type": "integer",
          "format": "int32",
          "description": "The preference value for this MX record."
        },
        "exchange": {
          "type": "string",
          "description": "The domain name of the mail host for this MX record."
        }
      }
    },
    "NaptrRecord": {
      "type": "object",
      "description": "A NAPTR record. For more information about the NAPTR record format, see RFC 3403: https://www.rfc-editor.org/rfc/rfc3403",
      "properties": {
        "order": {
          "type": "integer",
          "format": "int32",
          "description": "The order in which the NAPTR records MUST be processed in order to accurately represent the ordered list of rules. The ordering is from lowest to highest. Valid values: 0-65535."
        },
        "preference": {
          "type": "integer",
          "format": "int32",
          "description": "The preference specifies the order in which NAPTR records with equal 'order' values should be processed, low numbers being processed before high numbers. Valid values: 0-65535."
        },
        "flags": {
          "type": "string",
          "description": "The flags specific to DDDS applications. Values currently defined in RFC 3404 are uppercase and lowercase letters \"A\", \"P\", \"S\", and \"U\", and the empty string, \"\". Enclose Flags in quotation marks."
        },
        "services": {
          "type": "string",
          "description": "The services specific to DDDS applications. Enclose Services in quotation marks."
        },
        "regexp": {
          "type": "string",
          "description": "The regular expression that the DDDS application uses to convert an input value into an output value. For example: an IP phone system might use a regular expression to convert a phone number that is entered by a user into a SIP URI. Enclose the regular expression in quotation marks. Specify either a value for 'regexp' or a value for 'replacement'."
        },
        "replacement": {
          "type": "string",
          "description": "The replacement is a fully qualified domain name (FQDN) of the next domain name that you want the DDDS application to submit a DNS query for. The DDDS application replaces the input value with the value specified for replacement. Specify either a value for 'regexp' or a value for 'replacement'. If you specify a value for 'regexp', specify a dot (.) for 'replacement'."
        }
      }
    },
    "NsRecord": {
      "type": "object",
      "description": "An NS record.",
      "properties": {
        "nsdname": {
          "type": "string",
          "description": "The name server name for this NS record."
        }
      }
    },
    "PtrRecord": {
      "type": "object",
      "description": "A PTR record.",
      "properties": {
        "ptrdname": {
          "type": "string",
          "description": "The PTR target domain name for this PTR record."
        }
      }
    },
    "RecordSet": {
      "type": "object",
      "description": "Describes a DNS record set (a collection of DNS records with the same name and type).",
      "properties": {
        "etag": {
          "type": "string",
          "description": "The etag of the record set."
        },
        "properties": {
          "$ref": "#/definitions/RecordSetProperties",
          "description": "The properties of the record set.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "RecordSetListResult": {
      "type": "object",
      "description": "The response of a RecordSet list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The RecordSet items on this page",
          "items": {
            "$ref": "#/definitions/RecordSet"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "RecordSetProperties": {
      "type": "object",
      "description": "Represents the properties of the records in the record set.",
      "properties": {
        "metadata": {
          "type": "object",
          "description": "The metadata attached to the record set.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "TTL": {
          "type": "integer",
          "format": "int64",
          "description": "The TTL (time-to-live) of the records in the record set."
        },
        "fqdn": {
          "type": "string",
          "description": "Fully qualified domain name of the record set.",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "description": "provisioning State of the record set.",
          "readOnly": true
        },
        "targetResource": {
          "$ref": "#/definitions/SubResource",
          "description": "A reference to an azure resource from where the dns resource value is taken."
        },
        "trafficManagementProfile": {
          "$ref": "#/definitions/SubResource",
          "description": "A reference to an azure traffic manager profile resource from where the dns resource value is taken."
        },
        "ARecords": {
          "type": "array",
          "description": "The list of A records in the record set.",
          "items": {
            "$ref": "#/definitions/ARecord"
          },
          "x-ms-identifiers": []
        },
        "AAAARecords": {
          "type": "array",
          "description": "The list of AAAA records in the record set.",
          "items": {
            "$ref": "#/definitions/AaaaRecord"
          },
          "x-ms-client-name": "AaaaRecords",
          "x-ms-identifiers": []
        },
        "MXRecords": {
          "type": "array",
          "description": "The list of MX records in the record set.",
          "items": {
            "$ref": "#/definitions/MxRecord"
          },
          "x-ms-client-name": "MxRecords",
          "x-ms-identifiers": []
        },
        "NSRecords": {
          "type": "array",
          "description": "The list of NS records in the record set.",
          "items": {
            "$ref": "#/definitions/NsRecord"
          },
          "x-ms-client-name": "NsRecords",
          "x-ms-identifiers": []
        },
        "PTRRecords": {
          "type": "array",
          "description": "The list of PTR records in the record set.",
          "items": {
            "$ref": "#/definitions/PtrRecord"
          },
          "x-ms-client-name": "PtrRecords",
          "x-ms-identifiers": []
        },
        "SRVRecords": {
          "type": "array",
          "description": "The list of SRV records in the record set.",
          "items": {
            "$ref": "#/definitions/SrvRecord"
          },
          "x-ms-client-name": "SrvRecords",
          "x-ms-identifiers": []
        },
        "TXTRecords": {
          "type": "array",
          "description": "The list of TXT records in the record set.",
          "items": {
            "$ref": "#/definitions/TxtRecord"
          },
          "x-ms-client-name": "TxtRecords",
          "x-ms-identifiers": []
        },
        "CNAMERecord": {
          "$ref": "#/definitions/CnameRecord",
          "description": "The CNAME record in the  record set.",
          "x-ms-client-name": "CnameRecord"
        },
        "SOARecord": {
          "$ref": "#/definitions/SoaRecord",
          "description": "The SOA record in the record set.",
          "x-ms-client-name": "SoaRecord"
        },
        "caaRecords": {
          "type": "array",
          "description": "The list of CAA records in the record set.",
          "items": {
            "$ref": "#/definitions/CaaRecord"
          },
          "x-ms-client-name": "CaaRecords",
          "x-ms-identifiers": []
        },
        "DSRecords": {
          "type": "array",
          "description": "The list of DS records in the record set.",
          "items": {
            "$ref": "#/definitions/DsRecord"
          },
          "x-ms-client-name": "DsRecords",
          "x-ms-identifiers": []
        },
        "TLSARecords": {
          "type": "array",
          "description": "The list of TLSA records in the record set.",
          "items": {
            "$ref": "#/definitions/TlsaRecord"
          },
          "x-ms-client-name": "TlsaRecords",
          "x-ms-identifiers": []
        },
        "NAPTRRecords": {
          "type": "array",
          "description": "The list of NAPTR records in the record set.",
          "items": {
            "$ref": "#/definitions/NaptrRecord"
          },
          "x-ms-client-name": "NaptrRecords",
          "x-ms-identifiers": []
        }
      }
    },
    "SigningKey": {
      "type": "object",
      "description": "Represents the signing key.",
      "properties": {
        "delegationSignerInfo": {
          "type": "array",
          "description": "The delegation signer information.",
          "items": {
            "$ref": "#/definitions/DelegationSignerInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "flags": {
          "type": "integer",
          "format": "int32",
          "description": "The flags specifies how the key is used.",
          "readOnly": true
        },
        "keyTag": {
          "type": "integer",
          "format": "int32",
          "description": "The key tag value of the DNSKEY Resource Record.",
          "readOnly": true
        },
        "protocol": {
          "type": "integer",
          "format": "int32",
          "description": "The protocol value. The value is always 3.",
          "readOnly": true
        },
        "publicKey": {
          "type": "string",
          "description": "The public key, represented as a Base64 encoding.",
          "readOnly": true
        },
        "securityAlgorithmType": {
          "type": "integer",
          "format": "int32",
          "description": "The security algorithm type represents the standard security algorithm number of the DNSKEY Resource Record. See: https://www.iana.org/assignments/dns-sec-alg-numbers/dns-sec-alg-numbers.xhtml",
          "readOnly": true
        }
      }
    },
    "SoaRecord": {
      "type": "object",
      "description": "An SOA record.",
      "properties": {
        "host": {
          "type": "string",
          "description": "The domain name of the authoritative name server for this SOA record."
        },
        "email": {
          "type": "string",
          "description": "The email contact for this SOA record."
        },
        "serialNumber": {
          "type": "integer",
          "format": "int64",
          "description": "The serial number for this SOA record."
        },
        "refreshTime": {
          "type": "integer",
          "format": "int64",
          "description": "The refresh value for this SOA record."
        },
        "retryTime": {
          "type": "integer",
          "format": "int64",
          "description": "The retry time for this SOA record."
        },
        "expireTime": {
          "type": "integer",
          "format": "int64",
          "description": "The expire time for this SOA record."
        },
        "minimumTTL": {
          "type": "integer",
          "format": "int64",
          "description": "The minimum value for this SOA record. By convention this is used to determine the negative caching duration.",
          "x-ms-client-name": "minimumTtl"
        }
      }
    },
    "SrvRecord": {
      "type": "object",
      "description": "An SRV record.",
      "properties": {
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority value for this SRV record."
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "The weight value for this SRV record."
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "The port value for this SRV record."
        },
        "target": {
          "type": "string",
          "description": "The target domain name for this SRV record."
        }
      }
    },
    "SubResource": {
      "type": "object",
      "description": "A reference to a another resource",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource Id."
        }
      }
    },
    "TlsaRecord": {
      "type": "object",
      "description": "A TLSA record. For more information about the TLSA record format, see RFC 6698: https://www.rfc-editor.org/rfc/rfc6698",
      "properties": {
        "usage": {
          "type": "integer",
          "format": "int32",
          "description": "The usage specifies the provided association that will be used to match the certificate presented in the TLS handshake."
        },
        "selector": {
          "type": "integer",
          "format": "int32",
          "description": "The selector specifies which part of the TLS certificate presented by the server will be matched against the association data."
        },
        "matchingType": {
          "type": "integer",
          "format": "int32",
          "description": "The matching type specifies how the certificate association is presented."
        },
        "certAssociationData": {
          "type": "string",
          "description": "This specifies the certificate association data to be matched."
        }
      }
    },
    "TxtRecord": {
      "type": "object",
      "description": "A TXT record.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The text value of this TXT record.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Zone": {
      "type": "object",
      "description": "Describes a DNS zone.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "The etag of the zone."
        },
        "properties": {
          "$ref": "#/definitions/ZoneProperties",
          "description": "The properties of the zone.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ZoneListResult": {
      "type": "object",
      "description": "The response of a Zone list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Zone items on this page",
          "items": {
            "$ref": "#/definitions/Zone"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ZoneProperties": {
      "type": "object",
      "description": "Represents the properties of the zone.",
      "properties": {
        "maxNumberOfRecordSets": {
          "type": "integer",
          "format": "int64",
          "description": "The maximum number of record sets that can be created in this DNS zone.  This is a read-only property and any attempt to set this value will be ignored.",
          "readOnly": true
        },
        "maxNumberOfRecordsPerRecordSet": {
          "type": "integer",
          "format": "int64",
          "description": "The maximum number of records per record set that can be created in this DNS zone.  This is a read-only property and any attempt to set this value will be ignored.",
          "readOnly": true
        },
        "numberOfRecordSets": {
          "type": "integer",
          "format": "int64",
          "description": "The current number of record sets in this DNS zone.  This is a read-only property and any attempt to set this value will be ignored.",
          "readOnly": true
        },
        "nameServers": {
          "type": "array",
          "description": "The name servers for this DNS zone. This is a read-only property and any attempt to set this value will be ignored.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "zoneType": {
          "type": "string",
          "description": "The type of this DNS zone (Public or Private).",
          "default": "Public",
          "enum": [
            "Public",
            "Private"
          ],
          "x-ms-enum": {
            "name": "ZoneType",
            "modelAsString": false
          }
        },
        "registrationVirtualNetworks": {
          "type": "array",
          "description": "A list of references to virtual networks that register hostnames in this DNS zone. This is a only when ZoneType is Private.",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "x-ms-identifiers": []
        },
        "resolutionVirtualNetworks": {
          "type": "array",
          "description": "A list of references to virtual networks that resolve records in this DNS zone. This is a only when ZoneType is Private.",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "x-ms-identifiers": []
        },
        "signingKeys": {
          "type": "array",
          "description": "The list of signing keys.",
          "items": {
            "$ref": "#/definitions/SigningKey"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ZoneUpdate": {
      "type": "object",
      "description": "Describes a request to update a DNS zone.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  },
  "parameters": {}
}
