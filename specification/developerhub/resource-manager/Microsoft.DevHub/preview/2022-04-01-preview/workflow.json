{
  "swagger": "2.0",
  "info": {
    "version": "2022-04-01-preview",
    "title": "DeveloperHubServiceClient",
    "description": "The AKS Developer Hub Service Client"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.DevHub/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "Returns list of operations.",
        "summary": "Gets a list of operations.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation details.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "List available operations for the container service resource provider": {
            "$ref": "./examples/Operation_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevHub/locations/{location}/githuboauth/default/getGitHubOAuthInfo": {
      "post": {
        "tags": [
          "GitHubOAuth"
        ],
        "operationId": "GitHubOAuth",
        "summary": "Gets GitHubOAuth info used to authenticate users with the Developer Hub GitHub App.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/LocationParameter"
          },
          {
            "name": "parameters",
            "required": false,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/GitHubOAuthCallRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GitHubOAuthInfoResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GitHub OAuth": {
            "$ref": "./examples/GitHubOAuth.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevHub/locations/{location}/githuboauth/default": {
      "get": {
        "tags": [
          "GitHubOAuth"
        ],
        "operationId": "GitHubOAuthCallback",
        "summary": "Callback URL to hit once authenticated with GitHub App to have the service store the OAuth token.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/GitHubOAuthCodeParameter"
          },
          {
            "$ref": "#/parameters/GitHubOAuthStateParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GitHubOAuthResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GitHub OAuth Callback": {
            "$ref": "./examples/GitHubOAuthCallback.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevHub/locations/{location}/githuboauth": {
      "get": {
        "tags": [
          "GitHubOAuth"
        ],
        "operationId": "ListGitHubOAuth",
        "summary": "Callback URL to hit once authenticated with GitHub App to have the service store the OAuth token.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GitHubOAuthListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List GitHub OAuth": {
            "$ref": "./examples/GitHubOAuth_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevHub/workflows": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "operationId": "Workflow_List",
        "summary": "Gets a list of workflows associated with the specified subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Describe the result of a successful operation.",
            "schema": {
              "$ref": "#/definitions/WorkflowListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Workflows": {
            "$ref": "./examples/Workflow_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevHub/workflows": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "operationId": "Workflow_ListByResourceGroup",
        "summary": "Gets a list of workflows within a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ManagedClusterParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Describe the result of a successful operation.",
            "schema": {
              "$ref": "#/definitions/WorkflowListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Workflows": {
            "$ref": "./examples/Workflow_ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevHub/workflows/{workflowName}": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "operationId": "Workflow_Get",
        "summary": "Gets a workflow.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkflowNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workflow": {
            "$ref": "./examples/Workflow_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Workflow"
        ],
        "operationId": "Workflow_CreateOrUpdate",
        "summary": "Creates or updates a workflow",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkflowNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Workflow": {
            "$ref": "./examples/Workflow_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Workflow"
        ],
        "operationId": "Workflow_Delete",
        "summary": "Deletes a workflow",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkflowNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful delete with response",
            "schema": {
              "$ref": "#/definitions/DeleteWorkflowResponse"
            }
          },
          "204": {
            "description": "Successfully deleted the resource"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workflow": {
            "$ref": "./examples/Workflow_Delete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Workflow"
        ],
        "operationId": "Workflow_UpdateTags",
        "summary": "Updates tags on a workflow.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkflowNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagsObject"
            },
            "description": "Parameters supplied to the Update Workflow Tags operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Managed Cluster Tags": {
            "$ref": "./examples/Workflow_UpdateTags.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Workflow": {
      "title": "Workflow",
      "description": "Resource representation of a workflow",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Properties of a workflow.",
          "$ref": "#/definitions/WorkflowProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkflowProperties": {
      "type": "object",
      "description": "Workflow properties",
      "properties": {
        "githubWorkflowProfile": {
          "description": "Profile of a github workflow.",
          "$ref": "#/definitions/GitHubWorkflowProfile",
          "x-ms-client-flatten": true
        }
      }
    },
    "GitHubWorkflowProfile": {
      "type": "object",
      "description": "GitHub Workflow Profile",
      "properties": {
        "repositoryOwner": {
          "type": "string",
          "title": "The owner of the repository the workflow is associated with.",
          "description": "Repository Owner"
        },
        "repositoryName": {
          "type": "string",
          "title": "The name of the repository the workflow is associated with.",
          "description": "Repository Name"
        },
        "branchName": {
          "type": "string",
          "title": "The name of the branch the workflow is associated with.",
          "description": "Repository Branch Name"
        },
        "dockerfile": {
          "type": "string",
          "title": "Path to Dockerfile within the repository.",
          "description": "Path to the Dockerfile within the repository."
        },
        "dockerBuildContext": {
          "type": "string",
          "title": "Path to Dockerfile Build Context within the repository.",
          "description": "Path to Dockerfile Build Context within the repository."
        },
        "deploymentProperties": {
          "$ref": "#/definitions/DeploymentProperties"
        },
        "namespace": {
          "type": "string",
          "description": "Kubernetes namespace the application is deployed to.",
          "title": "The Kubernetes namespace the application is deployed to"
        },
        "acr": {
          "$ref": "#/definitions/ACR"
        },
        "oidcCredentials": {
          "type": "object",
          "description": "The fields needed for OIDC with GitHub.",
          "properties": {
            "azureClientId": {
              "type": "string",
              "description": "Azure Application Client ID"
            },
            "azureTenantId": {
              "type": "string",
              "description": "Azure Directory (tenant) ID"
            }
          }
        },
        "aksResourceId": {
          "type": "string",
          "description": "The Azure Kubernetes Cluster Resource the application will be deployed to.",
          "title": "The Azure Kubernetes Managed Cluster resource."
        },
        "prURL": {
          "type": "string",
          "description": "The URL to the Pull Request submitted against the users repository.",
          "readOnly": true
        },
        "pullNumber": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "The number associated with the submitted pull request."
        },
        "prStatus": {
          "$ref": "#/definitions/PullRequestStatus"
        },
        "lastWorkflowRun": {
          "$ref": "#/definitions/WorkflowRun"
        },
        "authStatus": {
          "$ref": "#/definitions/AuthorizationStatus"
        }
      }
    },
    "WorkflowListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Workflow"
          },
          "description": "The list of workflows."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to the next set of workflow results.",
          "readOnly": true
        }
      },
      "description": "The response from List Workflows operation."
    },
    "PullRequestStatus": {
      "type": "string",
      "readOnly": true,
      "enum": [
        "unknown",
        "submitted",
        "merged",
        "removed"
      ],
      "x-ms-enum": {
        "name": "PullRequestStatus",
        "modelAsString": true,
        "values": [
          {
            "value": "unknown",
            "description": "Pull Request state unknown."
          },
          {
            "value": "submitted",
            "description": "Pull Request submitted to repository."
          },
          {
            "value": "merged",
            "description": "Pull Request merged into repository."
          },
          {
            "value": "removed",
            "description": "Workflow no longer found within repository."
          }
        ]
      },
      "description": "The status of the Pull Request submitted against the users repository."
    },
    "DeploymentProperties": {
      "type": "object",
      "properties": {
        "manifestType": {
          "$ref": "#/definitions/ManifestType"
        },
        "kubeManifestLocations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "helmChartPath": {
          "type": "string",
          "description": "Helm chart directory path in repository."
        },
        "helmValues": {
          "type": "string",
          "description": "Helm Values.yaml file location in repository."
        },
        "overrides": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Manifest override values.",
          "description": "Manifest override values."
        }
      }
    },
    "ManifestType": {
      "type": "string",
      "enum": [
        "helm",
        "kube"
      ],
      "x-ms-enum": {
        "name": "ManifestType",
        "modelAsString": true,
        "values": [
          {
            "value": "helm",
            "description": "Repositories using helm"
          },
          {
            "value": "kube",
            "description": "Repositories using kubernetes manifests"
          }
        ]
      },
      "description": "Determines the type of manifests within the repository."
    },
    "AuthorizationStatus": {
      "type": "string",
      "enum": [
        "Authorized",
        "NotFound",
        "Error"
      ],
      "readOnly": true,
      "x-ms-enum": {
        "name": "AuthorizationStatus",
        "modelAsString": true,
        "values": [
          {
            "value": "Authorized",
            "description": "Requests authorized successfully"
          },
          {
            "value": "NotFound",
            "description": "Requests returned NotFound response"
          },
          {
            "value": "Error",
            "description": "Requests returned other error response"
          }
        ]
      },
      "description": "Determines the authorization status of requests."
    },
    "WorkflowRun": {
      "type": "object",
      "properties": {
        "succeeded": {
          "type": "boolean",
          "readOnly": true,
          "description": "Describes if the workflow run succeeded."
        },
        "workflowRunURL": {
          "type": "string",
          "readOnly": true,
          "description": "URL to the run of the workflow."
        },
        "lastRunAt": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The timestamp of the last workflow run."
        }
      }
    },
    "ACR": {
      "type": "object",
      "description": "Information on the azure container registry",
      "properties": {
        "acrSubscriptionId": {
          "type": "string",
          "description": "ACR subscription id"
        },
        "acrResourceGroup": {
          "type": "string",
          "description": "ACR resource group"
        },
        "acrRegistryName": {
          "type": "string",
          "description": "ACR registry"
        },
        "acrRepositoryName": {
          "type": "string",
          "description": "ACR repository"
        }
      }
    },
    "GitHubOAuthInfoResponse": {
      "type": "object",
      "description": "URL used to authorize the Developer Hub GitHub App",
      "properties": {
        "authURL": {
          "type": "string",
          "description": "URL for authorizing the Developer Hub GitHub App"
        },
        "token": {
          "type": "string",
          "description": "OAuth token used to make calls to GitHub"
        }
      }
    },
    "TagsObject": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-ms-mutability": [
        "read",
        "create",
        "update"
      ],
      "description": "Resource tags."
    },
    "DeleteWorkflowResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "delete status message"
        }
      },
      "description": "delete response if content must be provided on delete operation"
    },
    "GitHubOAuthCallRequest": {
      "type": "object",
      "properties": {
        "redirectUrl": {
          "type": "string",
          "description": "The URL the client will redirect to on successful authentication. If empty, no redirect will occur."
        }
      },
      "description": "GitHubOAuth request object"
    },
    "GitHubOAuthResponse": {
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Properties of a workflow.",
          "$ref": "#/definitions/GitHubOAuthProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "Singleton response of GitHubOAuth containing "
    },
    "GitHubOAuthProperties": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "user making request"
        }
      },
      "description": "The response from List GitHubOAuth operation."
    },
    "GitHubOAuthListResponse": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitHubOAuthResponse"
          },
          "description": "Singleton list response containing one GitHubOAuthResponse response"
        }
      },
      "description": "The response from List GitHubOAuth operation."
    }
  },
  "parameters": {
    "ManagedClusterParameter": {
      "name": "managedClusterResource",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "The ManagedCluster resource associated with the workflows.",
      "x-ms-parameter-location": "method"
    },
    "WorkflowNameParameter": {
      "name": "workflowName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 63,
      "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
      "description": "The name of the workflow resource.",
      "x-ms-parameter-location": "method"
    },
    "GitHubOAuthCodeParameter": {
      "name": "code",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The code response from authenticating the GitHub App.",
      "x-ms-parameter-location": "method"
    },
    "GitHubOAuthStateParameter": {
      "name": "state",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The state response from authenticating the GitHub App.",
      "x-ms-parameter-location": "method"
    }
  }
}
