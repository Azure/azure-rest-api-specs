{
  "swagger": "2.0",
  "info": {
    "title": "TrafficControllerClient",
    "version": "2022-10-01-preview",
    "description": "Traffic Controller Provider management API.",
    "x-cadl-generated": [
      {
        "emitter": "@azure-tools/cadl-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "AssociationsInterface"
    },
    {
      "name": "FrontendsInterface"
    },
    {
      "name": "TrafficControllerInterface"
    },
    {
      "name": "Operations"
    }
  ],
  "paths": {
    "/providers/Microsoft.ServiceNetworking/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "List the operations for the provider.",
        "x-ms-examples": {
          "Get Operations List": {
            "$ref": "./examples/OperationsList.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceNetworking/trafficControllers": {
      "get": {
        "tags": [
          "TrafficControllerInterface"
        ],
        "operationId": "TrafficControllerInterface_ListBySubscription",
        "description": "List TrafficController resources by subscription ID.",
        "x-ms-examples": {
          "Get Traffic Controllers List": {
            "$ref": "./examples/TrafficControllersGetList.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TrafficControllerListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceNetworking/trafficControllers": {
      "get": {
        "tags": [
          "TrafficControllerInterface"
        ],
        "operationId": "TrafficControllerInterface_ListByResourceGroup",
        "description": "List TrafficController resources by resource group.",
        "x-ms-examples": {
          "Get Traffic Controllers": {
            "$ref": "./examples/TrafficControllersGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TrafficControllerListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceNetworking/trafficControllers/{trafficControllerName}": {
      "get": {
        "tags": [
          "TrafficControllerInterface"
        ],
        "operationId": "TrafficControllerInterface_Get",
        "description": "Get a TrafficController.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TrafficController.trafficControllerName"
          }
        ],
        "x-ms-examples": {
          "Get Traffic Controller": {
            "$ref": "./examples/TrafficControllerGet.json"
          }
        },
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TrafficController"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "TrafficControllerInterface"
        ],
        "operationId": "TrafficControllerInterface_CreateOrUpdate",
        "description": "Create a TrafficController.",
        "x-ms-examples": {
          "Put Traffic Controller": {
            "$ref": "./examples/TrafficControllerPut.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TrafficController.trafficControllerName"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/TrafficController"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TrafficController"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/TrafficController"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "TrafficControllerInterface"
        ],
        "operationId": "TrafficControllerInterface_Update",
        "description": "Update a TrafficController.",
        "x-ms-examples": {
          "Update Traffic Controller": {
            "$ref": "./examples/TrafficControllerUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TrafficController.trafficControllerName"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/TrafficControllerUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TrafficController"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TrafficControllerInterface"
        ],
        "operationId": "TrafficControllerInterface_Delete",
        "description": "Delete a TrafficController.",
        "x-ms-examples": {
          "Delete Traffic Controller": {
            "$ref": "./examples/TrafficControllerDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TrafficController.trafficControllerName"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceNetworking/trafficControllers/{trafficControllerName}/frontends": {
      "get": {
        "tags": [
          "FrontendsInterface"
        ],
        "operationId": "FrontendsInterface_ListByTrafficController",
        "description": "List Frontend resources by TrafficController.",
        "x-ms-examples": {
          "Get Frontends": {
            "$ref": "./examples/FrontendsGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TrafficController.trafficControllerName"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FrontendListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceNetworking/trafficControllers/{trafficControllerName}/frontends/{frontendName}": {
      "get": {
        "tags": [
          "FrontendsInterface"
        ],
        "operationId": "FrontendsInterface_Get",
        "description": "Get a Frontend.",
        "x-ms-examples": {
          "Get Frontend": {
            "$ref": "./examples/FrontendGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TrafficController.trafficControllerName"
          },
          {
            "$ref": "#/parameters/Frontend.frontendName"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Frontend"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "FrontendsInterface"
        ],
        "operationId": "FrontendsInterface_CreateOrUpdate",
        "description": "Create a Frontend.",
        "x-ms-examples": {
          "Put Frontend": {
            "$ref": "./examples/FrontendPut.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TrafficController.trafficControllerName"
          },
          {
            "$ref": "#/parameters/Frontend.frontendName"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/Frontend"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Frontend"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/Frontend"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "FrontendsInterface"
        ],
        "operationId": "FrontendsInterface_Update",
        "description": "Update a Frontend.",
        "x-ms-examples": {
          "Update Frontend": {
            "$ref": "./examples/FrontendUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TrafficController.trafficControllerName"
          },
          {
            "$ref": "#/parameters/Frontend.frontendName"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/FrontendUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Frontend"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FrontendsInterface"
        ],
        "operationId": "FrontendsInterface_Delete",
        "description": "Delete a Frontend.",
        "x-ms-examples": {
          "Delete Frontend": {
            "$ref": "./examples/FrontendDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TrafficController.trafficControllerName"
          },
          {
            "$ref": "#/parameters/Frontend.frontendName"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceNetworking/trafficControllers/{trafficControllerName}/associations": {
      "get": {
        "tags": [
          "AssociationsInterface"
        ],
        "operationId": "AssociationsInterface_ListByTrafficController",
        "description": "List Association resources by TrafficController.",
        "x-ms-examples": {
          "Get Associations": {
            "$ref": "./examples/AssociationsGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TrafficController.trafficControllerName"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AssociationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceNetworking/trafficControllers/{trafficControllerName}/associations/{associationName}": {
      "get": {
        "tags": [
          "AssociationsInterface"
        ],
        "operationId": "AssociationsInterface_Get",
        "description": "Get a Association.",
        "x-ms-examples": {
          "Get Association": {
            "$ref": "./examples/AssociationGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TrafficController.trafficControllerName"
          },
          {
            "$ref": "#/parameters/Association.associationName"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Association"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AssociationsInterface"
        ],
        "operationId": "AssociationsInterface_CreateOrUpdate",
        "description": "Create a Association.",
        "x-ms-examples": {
          "Put Association": {
            "$ref": "./examples/AssociationPut.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TrafficController.trafficControllerName"
          },
          {
            "$ref": "#/parameters/Association.associationName"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/Association"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Association"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/Association"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "AssociationsInterface"
        ],
        "operationId": "AssociationsInterface_Update",
        "description": "Update a Association.",
        "x-ms-examples": {
          "Update Association": {
            "$ref": "./examples/AssociationUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TrafficController.trafficControllerName"
          },
          {
            "$ref": "#/parameters/Association.associationName"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/AssociationUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Association"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AssociationsInterface"
        ],
        "operationId": "AssociationsInterface_Delete",
        "description": "Delete a Association.",
        "x-ms-examples": {
          "Delete Association": {
            "$ref": "./examples/AssociationDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TrafficController.trafficControllerName"
          },
          {
            "$ref": "#/parameters/Association.associationName"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "Association": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AssociationProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-client-flatten": true
        }
      },
      "description": "Traffic Controller Association.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "AssociationListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Association"
          },
          "x-cadl-name": "Association[]",
          "description": "The Association items on this page."
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items.",
          "x-cadl-name": "Rest.ResourceLocation<Association>"
        }
      },
      "description": "The response of a Association list operation.",
      "required": [
        "value"
      ]
    },
    "AssociationProperties": {
      "type": "object",
      "properties": {
        "associationType": {
          "$ref": "#/definitions/AssociationType",
          "description": "Association Type."
        },
        "subnet": {
          "$ref": "#/definitions/AssociationSubnet",
          "description": "Association Subnet."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning State.",
          "readOnly": true
        }
      },
      "description": "Association Properties.",
      "required": [
        "associationType"
      ]
    },
    "AssociationSubnet": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Association Subnet ID."
        }
      },
      "description": "Association Subnet",
      "required": [
        "id"
      ]
    },
    "AssociationType": {
      "type": "string",
      "enum": [
        "subnets"
      ],
      "description": "Association Type Enum (Eg: subnets)",
      "x-ms-enum": {
        "name": "AssociationType",
        "modelAsString": false
      }
    },
    "AssociationUpdate": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AssociationUpdateProperties"
        }
      },
      "description": "The type used for update operations of the Association."
    },
    "AssociationUpdateProperties": {
      "type": "object",
      "properties": {
        "associationType": {
          "$ref": "#/definitions/AssociationType",
          "description": "Association Type."
        },
        "subnet": {
          "$ref": "#/definitions/AssociationSubnet",
          "description": "Association Subnet."
        }
      },
      "description": "The updatable properties of the Association."
    },
    "Frontend": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FrontendProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-client-flatten": true
        }
      },
      "description": "Traffic Controller Frontends.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "FrontendIPAddressType": {
      "type": "string",
      "enum": [
        "IPv4",
        "IPv6"
      ],
      "description": "Type of the Frontend IP Address Enum (Eg: IPv4, IPv6)",
      "x-ms-enum": {
        "name": "FrontendIPAddressType",
        "modelAsString": false
      }
    },
    "FrontendListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Frontend"
          },
          "x-cadl-name": "Frontend[]",
          "description": "The Frontend items on this page."
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items.",
          "x-cadl-name": "Rest.ResourceLocation<Frontend>"
        }
      },
      "description": "The response of a Frontend list operation.",
      "required": [
        "value"
      ]
    },
    "FrontendProperties": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "description": "Frontend Mode (Optional)."
        },
        "ipAddressType": {
          "$ref": "#/definitions/FrontendIPAddressType",
          "description": "Frontend IP Address Type (Optional)."
        },
        "publicIPAddress": {
          "$ref": "#/definitions/FrontendPropertiesIPAddress",
          "description": "Frontend Public IP Address (Optional)."
        },
        "privateIPAddress": {
          "$ref": "#/definitions/FrontendPropertiesIPAddress",
          "description": "Frontend Private IP Address (Optional)."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning State.",
          "readOnly": true
        }
      },
      "description": "Frontend Properties."
    },
    "FrontendPropertiesIPAddress": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "IP Address."
        }
      },
      "description": "Frontend IP Address.",
      "required": [
        "id"
      ]
    },
    "FrontendUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Resource tags.",
          "x-ms-client-flatten": true
        },
        "properties": {
          "$ref": "#/definitions/FrontendUpdateProperties"
        }
      },
      "description": "The type used for update operations of the Frontend."
    },
    "FrontendUpdateProperties": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "description": "Frontend Mode (Optional)."
        },
        "ipAddressType": {
          "$ref": "#/definitions/FrontendIPAddressType",
          "description": "Frontend IP Address Type (Optional)."
        },
        "publicIPAddress": {
          "$ref": "#/definitions/FrontendPropertiesIPAddress",
          "description": "Frontend Public IP Address (Optional)."
        },
        "privateIPAddress": {
          "$ref": "#/definitions/FrontendPropertiesIPAddress",
          "description": "Frontend Private IP Address (Optional)."
        }
      },
      "description": "The updatable properties of the Frontend."
    },
    "ProvisioningState": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "description": "Provisioning State Enum (Eg: Succeeded, Canceled, Deleting)",
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "TrafficController": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TrafficControllerProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-client-flatten": true
        }
      },
      "description": "Concrete tracked resource types can be created by aliasing this type using a specific property type.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "TrafficControllerListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrafficController"
          },
          "x-cadl-name": "TrafficController[]",
          "description": "The TrafficController items on this page."
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items.",
          "x-cadl-name": "Rest.ResourceLocation<TrafficController>"
        }
      },
      "description": "The response of a TrafficController list operation.",
      "required": [
        "value"
      ]
    },
    "TrafficControllerProperties": {
      "type": "object",
      "properties": {
        "configurationEndpoints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Configuration Endpoints."
        },
        "frontends": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Frontend"
          },
          "x-cadl-name": "Frontend[]",
          "description": "List of Frontends."
        },
        "associations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Association"
          },
          "x-cadl-name": "Association[]",
          "description": "List of Associations."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      },
      "description": "Traffic Controller Properties.",
      "required": [
        "configurationEndpoints",
        "frontends",
        "associations"
      ]
    },
    "TrafficControllerUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/TrafficControllerUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the TrafficController."
    },
    "TrafficControllerUpdateProperties": {
      "type": "object",
      "properties": {
        "configurationEndpoints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Configuration Endpoints."
        },
        "frontends": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Frontend"
          },
          "x-cadl-name": "Frontend[]",
          "description": "List of Frontends."
        },
        "associations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Association"
          },
          "x-cadl-name": "Association[]",
          "description": "List of Associations."
        }
      },
      "description": "The updatable properties of the TrafficController."
    }
  },
  "parameters": {
    "Association.associationName": {
      "name": "associationName",
      "in": "path",
      "required": true,
      "description": "Associations.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "Frontend.frontendName": {
      "name": "frontendName",
      "in": "path",
      "required": true,
      "description": "Frontends.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "TrafficController.trafficControllerName": {
      "name": "trafficControllerName",
      "in": "path",
      "required": true,
      "description": "Traffic controller name for path.",
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
