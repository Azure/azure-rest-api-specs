{
  "swagger": "2.0",
  "info": {
    "title": "AzureSphereManagementClient",
    "description": "Use these APIs to manage Azure Sphere in your Azure subscription",
    "version": "2021-02-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureSphere/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "Lists all operations supported by the Microsoft.AzureSphere resource provider.",
        "operationId": "Operations_ListBySubscription",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of supported operations has been retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/GetOperationsResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get a list of operations supported by Microsoft.AzureSphere resource provider.": {
            "$ref": "./examples/GetOperations.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureSphere/catalogs": {
      "get": {
        "tags": [
          "Catalogs"
        ],
        "description": "Returns a list of catalogs for the given subscriptionId.",
        "operationId": "Catalogs_ListBySubscription",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Catalogs for the subscription details.",
            "schema": {
              "$ref": "#/definitions/GetCatalogsResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get a list of catalogs for a given subscription.": {
            "$ref": "./examples/GetCatalogsSub.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs": {
      "get": {
        "tags": [
          "Catalogs"
        ],
        "description": "Get a list of catalogs in the given resource group.",
        "operationId": "Catalogs_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of catalogs for the given resource group.",
            "schema": {
              "$ref": "#/definitions/GetCatalogsResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get a list of catalogs for a given resource group.": {
            "$ref": "./examples/GetCatalogsRG.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}": {
      "get": {
        "tags": [
          "Catalogs"
        ],
        "description": "Returns a catalog by name.",
        "operationId": "Catalogs_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Catalog details.",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Get the details of a catalog.": {
            "$ref": "./examples/GetCatalog.json"
          }
        }
      },
      "put": {
        "tags": [
          "Catalogs"
        ],
        "description": "Create or update a catalog.",
        "operationId": "Catalogs_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "name": "Catalog",
            "description": "Catalog details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Put the details of the catalog.": {
            "$ref": "./examples/PutCatalog.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Catalogs"
        ],
        "description": "Patch a catalog.",
        "operationId": "Catalogs_Update",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "name": "Catalog",
            "description": "Catalog details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CatalogPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Patch a catalog.": {
            "$ref": "./examples/PatchCatalog.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Catalogs"
        ],
        "description": "Delete an catalog.",
        "operationId": "Catalogs_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful."
          },
          "204": {
            "description": "Successful. Catalog does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Delete a catalog.": {
            "$ref": "./examples/DeleteCatalog.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/cert": {
      "post": {
        "tags": [
          "Catalogs"
        ],
        "description": "Action to retrieve an Azure Sphere Catalog Cert.",
        "operationId": "Catalogs_Cert",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "CertRequest",
            "description": "Cert request parameters.",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CertRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure Sphere Catalog Cert details.",
            "schema": {
              "$ref": "#/definitions/CertResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Get the details of an Azure Sphere Catalog Cert.": {
            "$ref": "./examples/GetCatalogCert.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Returns the associated products of a given catalog by name.",
        "operationId": "Products_List",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Products for the catalog in the subscription.",
            "schema": {
              "$ref": "#/definitions/GetProductsResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get products in a product.": {
            "$ref": "./examples/GetProducts.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/products/{productName}": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Gets the associated product from a given catalog by name.",
        "operationId": "Products_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "$ref": "#/parameters/ProductNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Product details.",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Get the details of a product.": {
            "$ref": "./examples/GetProduct.json"
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "description": "Create or update a product.",
        "operationId": "Products_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "$ref": "#/parameters/ProductNameParameter"
          },
          {
            "name": "Product",
            "description": "Product details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Put a product.": {
            "$ref": "./examples/PutProduct.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Products"
        ],
        "description": "Patch a product.",
        "operationId": "Products_Update",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "$ref": "#/parameters/ProductNameParameter"
          },
          {
            "name": "Product",
            "description": "Product details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Patch a product.": {
            "$ref": "./examples/PatchProduct.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "description": "Delete a product from a catalog.",
        "operationId": "Products_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "$ref": "#/parameters/ProductNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful."
          },
          "204": {
            "description": "Successful. Product does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Delete a product.": {
            "$ref": "./examples/DeleteProduct.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/products/{productName}/devicegroups": {
      "get": {
        "tags": [
          "DeviceGroups"
        ],
        "description": "Returns the associated device groups of a given product by name.",
        "operationId": "DeviceGroups_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "$ref": "#/parameters/ProductNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "DeviceGroups for the product in the catalog.",
            "schema": {
              "$ref": "#/definitions/GetDeviceGroupsResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get device groups in a product.": {
            "$ref": "./examples/GetDeviceGroups.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/products/{productName}/devicegroups/{deviceGroupName}": {
      "get": {
        "tags": [
          "DeviceGroups"
        ],
        "description": "Gets the associated device group from a given product in a catalog by name.",
        "operationId": "DeviceGroups_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "$ref": "#/parameters/ProductNameParameter"
          },
          {
            "$ref": "#/parameters/DeviceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Device Group details.",
            "schema": {
              "$ref": "#/definitions/DeviceGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Get the details of a device group.": {
            "$ref": "./examples/GetDeviceGroup.json"
          }
        }
      },
      "put": {
        "tags": [
          "DeviceGroups"
        ],
        "description": "Create or update a device group.",
        "operationId": "DeviceGroups_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "$ref": "#/parameters/ProductNameParameter"
          },
          {
            "$ref": "#/parameters/DeviceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "DeviceGroup",
            "description": "Device Group details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/DeviceGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Put a product.": {
            "$ref": "./examples/PutDeviceGroup.json"
          }
        }
      },
      "patch": {
        "tags": [
          "DeviceGroups"
        ],
        "description": "Patch a device group.",
        "operationId": "DeviceGroups_Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "$ref": "#/parameters/ProductNameParameter"
          },
          {
            "$ref": "#/parameters/DeviceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "DeviceGroup",
            "description": "DeviceGroup details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceGroupPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/DeviceGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Patch a product.": {
            "$ref": "./examples/PatchDeviceGroup.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DeviceGroups"
        ],
        "description": "Delete a device group from a catalog.",
        "operationId": "DeviceGroups_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "$ref": "#/parameters/ProductNameParameter"
          },
          {
            "$ref": "#/parameters/DeviceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful."
          },
          "204": {
            "description": "Successful. Device group does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Delete a product.": {
            "$ref": "./examples/DeleteDeviceGroup.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Catalog": {
      "type": "object",
      "description": "Catalog details.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "properties": {
          "description": "Catalog properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CatalogProperties"
        }
      }
    },
    "CatalogProperties": {
      "description": "Catalog properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Current provisioning state.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Creating",
            "Updating",
            "Deleting",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "provisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "CertRequest": {
      "type": "object",
      "description": "Catalog Certificate request.",
      "properties": {
        "serialNumber": {
          "$ref": "#/definitions/SerialNumber"
        }
      }
    },
    "SerialNumber": {
      "description": "In this optional parameter, specify the serial number of the public tenant CA certificate to be returned.",
      "type": "string"
    },
    "CertResponse": {
      "type": "object",
      "description": "Catalog Certificate retrieval response.",
      "properties": {
        "certificate": {
          "description": "Bytes representation of the requested catalog certificate",
          "type": "string"
        }
      }
    },
    "CatalogPatch": {
      "type": "object",
      "description": "Catalog details",
      "properties": {
        "properties": {
          "description": "Catalog properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CatalogPatchProperties"
        }
      }
    },
    "CatalogPatchProperties": {
      "description": "Catalog patch properties.",
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the catalog."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      }
    },
    "Operation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Name of the operation."
        },
        "display": {
          "description": "Display information of the operation.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OperationDisplay"
        }
      },
      "description": "Properties of an Operation."
    },
    "OperationDisplay": {
      "type": "object",
      "properties": {
        "operation": {
          "type": "string",
          "readOnly": true,
          "description": "Friendly name of the operation."
        },
        "resource": {
          "type": "string",
          "readOnly": true,
          "description": "Friendly name of the resource type the operation applies to."
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "Friendly description of the operation."
        },
        "provider": {
          "type": "string",
          "readOnly": true,
          "description": "Friendly name of the resource provider."
        }
      },
      "description": "Display information of an operation."
    },
    "GetOperationsResponse": {
      "type": "object",
      "description": "Result of a request to list all operations supported by Microsoft.AzureSphere resource provider.",
      "properties": {
        "value": {
          "description": "The list of available operations.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "nextLink": {
          "description": "The link used to get the next page of operations list, if any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GetCatalogsResponse": {
      "description": "A collection of catalogs.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of catalog list.",
          "type": "string"
        },
        "value": {
          "description": "A collection of catalogs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Catalog"
          }
        }
      }
    },
    "Product": {
      "type": "object",
      "description": "Product details",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "properties": {
          "description": "Product properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ProductProperties"
        }
      }
    },
    "ProductProperties": {
      "description": "Product properties.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Product description.",
          "minLength": 1,
          "maxLength": 150,
          "pattern": "^[A-Za-z0-9-._ ]+$"
        },
        "provisioningState": {
          "description": "Current provisioning state.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Creating",
            "Updating",
            "Deleting",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "provisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "ProductPatch": {
      "type": "object",
      "description": "Product details",
      "properties": {
        "properties": {
          "description": "Product properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ProductPatchProperties"
        }
      }
    },
    "ProductPatchProperties": {
      "description": "Product patch properties.",
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the product."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        },
        "description": {
          "type": "string",
          "description": "Product description.",
          "minLength": 1,
          "maxLength": 150,
          "pattern": "^[A-Za-z0-9-._ ]+$"
        }
      }
    },
    "GetProductsResponse": {
      "description": "The collection of products.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of the product collection.",
          "type": "string"
        },
        "value": {
          "description": "The collection of products.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        }
      }
    },
    "DeviceGroup": {
      "type": "object",
      "description": "DeviceGroup details",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "properties": {
          "description": "DeviceGroup properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DeviceGroupProperties"
        }
      }
    },
    "DeviceGroupProperties": {
      "description": "Device Group properties.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Device Group description.",
          "minLength": 1,
          "maxLength": 100,
          "pattern": "^[A-Za-z0-9-._ ]+$"
        },
        "osFeedType": {
          "description": "The OSFeedType that this device group uses for OS updates.",
          "type": "string",
          "enum": [
            "Retail",
            "RetailEval"
          ],
          "x-ms-enum": {
            "name": "osFeedType",
            "modelAsString": true
          }
        },
        "updatePolicy": {
          "description": "The update policy for this device group. 'UpdateAll': Indicates that all software, OS and customer applications should be updated via OTA. 'No3rdPartyAppUpdates': This option is intended to be used by developers of customer application to allow side-loaded applications to not be overwritten by OTA. 'NoUpdates': The devices in this group should not OTA update ANY software.",
          "type": "string",
          "enum": [
            "UpdateAll",
            "No3rdPartyAppUpdates",
            "NoUpdates"
          ],
          "x-ms-enum": {
            "name": "updatePolicy",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "description": "Current provisioning state.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Creating",
            "Updating",
            "Deleting",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "provisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "DeviceGroupPatch": {
      "type": "object",
      "description": "Device Group details",
      "properties": {
        "properties": {
          "description": "Device Group properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DeviceGroupPatchProperties"
        }
      }
    },
    "DeviceGroupPatchProperties": {
      "description": "DeviceGroup patch properties.",
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the device group."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        },
        "description": {
          "type": "string",
          "description": "Device group description.",
          "minLength": 1,
          "maxLength": 100,
          "pattern": "^[A-Za-z0-9-._ ]+$"
        }
      }
    },
    "GetDeviceGroupsResponse": {
      "description": "The collection of device groups.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of the device groups collection.",
          "type": "string"
        },
        "value": {
          "description": "The collection of device groups.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceGroup"
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Azure subscription ID."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "CatalogNameParameter": {
      "name": "catalogName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the catalog.",
      "x-ms-parameter-location": "method"
    },
    "ProductNameParameter": {
      "name": "productName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the associated product.",
      "x-ms-parameter-location": "method"
    },
    "DeviceGroupNameParameter": {
      "name": "deviceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the associated device group.",
      "x-ms-parameter-location": "method"
    }
  }
}
