{
  "swagger": "2.0",
  "info": {
    "title": "ResourceManagementClient",
    "version": "2019-08-01",
    "description": "Provides operations for working with resources and resource groups."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.Resources/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "Lists all of the available Microsoft.Resources REST API operations.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/unregister": {
      "post": {
        "tags": [
          "Providers"
        ],
        "operationId": "Providers_Unregister",
        "description": "Unregisters a subscription from a resource provider.",
        "parameters": [
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace of the resource provider to unregister."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the resource provider.",
            "schema": {
              "$ref": "#/definitions/Provider"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/register": {
      "post": {
        "tags": [
          "Providers"
        ],
        "operationId": "Providers_Register",
        "description": "Registers a subscription with a resource provider.",
        "parameters": [
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace of the resource provider to register."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the resource provider.",
            "schema": {
              "$ref": "#/definitions/Provider"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers": {
      "get": {
        "tags": [
          "Providers"
        ],
        "operationId": "Providers_List",
        "description": "Gets all resource providers for a subscription.",
        "parameters": [
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to return. If null is passed returns all deployments."
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The properties to include in the results. For example, use &$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of resource providers.",
            "schema": {
              "$ref": "#/definitions/ProviderListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers": {
      "get": {
        "tags": [
          "Providers"
        ],
        "operationId": "Providers_ListAtTenantScope",
        "description": "Gets all resource providers for the tenant.",
        "parameters": [
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to return. If null is passed returns all providers."
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The properties to include in the results. For example, use &$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of resource providers.",
            "schema": {
              "$ref": "#/definitions/ProviderListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}": {
      "get": {
        "tags": [
          "Providers"
        ],
        "operationId": "Providers_Get",
        "description": "Gets the specified resource provider.",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases."
          },
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace of the resource provider."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the resource provider.",
            "schema": {
              "$ref": "#/definitions/Provider"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/providers/{resourceProviderNamespace}": {
      "get": {
        "tags": [
          "Providers"
        ],
        "operationId": "Providers_GetAtTenantScope",
        "description": "Gets the specified resource provider at the tenant level.",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases."
          },
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace of the resource provider."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the resource provider.",
            "schema": {
              "$ref": "#/definitions/Provider"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/resources": {
      "get": {
        "tags": [
          "ResourceGroups"
        ],
        "operationId": "Resources_ListByResourceGroup",
        "description": "Get all the resources for a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group with the resources to get.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation.<br><br>The properties you can use for eq (equals) or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan, plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.<br><br>For example, to filter by a resource type, use: $filter=resourceType eq 'Microsoft.Network/virtualNetworks'<br><br>You can use substringof(value, property) in the filter. The properties you can use for substring are: name and resourceGroup.<br><br>For example, to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo', name)<br><br>You can link more than one substringof together by adding and/or operators.<br><br>You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'. When you filter by a tag name and value, the tags for each resource are not returned in the results.<br><br>You can use some properties together when filtering. The combinations you can use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and identity/principalId."
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Comma-separated list of additional properties to be included in the response. Valid values include `createdTime`, `changedTime` and `provisioningState`. For example, `$expand=createdTime,changedTime`."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to return. If null is passed, returns all resources."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of resources",
            "schema": {
              "$ref": "#/definitions/ResourceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/GenericResourceFilter"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}": {
      "head": {
        "tags": [
          "ResourceGroups"
        ],
        "operationId": "ResourceGroups_CheckExistence",
        "description": "Checks whether a resource group exists.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group to check. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ResourceGroups"
        ],
        "x-ms-examples": {
          "Create or update a resource group": {
            "$ref": "./examples/CreateResourceGroup.json"
          }
        },
        "operationId": "ResourceGroups_CreateOrUpdate",
        "description": "Creates or updates a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group to create or update. Can include alphanumeric, underscore, parentheses, hyphen, period (except at end), and Unicode characters that match the allowed characters.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceGroup"
            },
            "description": "Parameters supplied to the create or update a resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the new resource group.",
            "schema": {
              "$ref": "#/definitions/ResourceGroup"
            }
          },
          "201": {
            "description": "Created - Returns information about the new resource group.",
            "schema": {
              "$ref": "#/definitions/ResourceGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ResourceGroups"
        ],
        "operationId": "ResourceGroups_Delete",
        "summary": "Deletes a resource group.",
        "description": "When you delete a resource group, all of its resources are also deleted. Deleting a resource group deletes all of its template deployments and currently stored operations.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group to delete. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "ResourceGroups"
        ],
        "operationId": "ResourceGroups_Get",
        "description": "Gets a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group to get. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the resource group.",
            "schema": {
              "$ref": "#/definitions/ResourceGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ResourceGroups"
        ],
        "operationId": "ResourceGroups_Update",
        "summary": "Updates a resource group.",
        "description": "Resource groups can be updated through a simple PATCH operation to a group address. The format of the request is the same as that for creating a resource group. If a field is unspecified, the current value is retained.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group to update. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceGroupPatchable"
            },
            "description": "Parameters supplied to update a resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the resource group.",
            "schema": {
              "$ref": "#/definitions/ResourceGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/exportTemplate": {
      "post": {
        "tags": [
          "ResourceGroups"
        ],
        "operationId": "ResourceGroups_ExportTemplate",
        "description": "Captures the specified resource group as a template.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportTemplateRequest"
            },
            "description": "Parameters for exporting the template."
          }
        ],
        "x-ms-examples": {
          "Export a resource group": {
            "$ref": "./examples/ExportResourceGroup.json"
          },
          "Export a resource group with filtering": {
            "$ref": "./examples/ExportResourceGroupWithFiltering.json"
          }
        },
        "responses": {
          "200": {
            "description": "OK - Returns the result of the export.",
            "schema": {
              "$ref": "#/definitions/ResourceGroupExportResult"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups": {
      "get": {
        "tags": [
          "ResourceGroups"
        ],
        "operationId": "ResourceGroups_List",
        "description": "Gets all the resource groups for a subscription.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation.<br><br>You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to return. If null is passed, returns all resource groups."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of resource groups.",
            "schema": {
              "$ref": "#/definitions/ResourceGroupListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/ResourceGroupFilter"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/moveResources": {
      "post": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_MoveResources",
        "summary": "Moves resources from one resource group to another resource group.",
        "description": "The resources to move must be in the same source resource group. The target resource group may be in a different subscription. When moving resources, both the source group and the target group are locked for the duration of the operation. Write and delete operations are blocked on the groups until the move completes. ",
        "parameters": [
          {
            "name": "sourceResourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group containing the resources to move.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourcesMoveInfo"
            },
            "description": "Parameters for moving resources."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/validateMoveResources": {
      "post": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_ValidateMoveResources",
        "summary": "Validates whether resources can be moved from one resource group to another resource group.",
        "description": "This operation checks whether the specified resources can be moved to the target. The resources to move must be in the same source resource group. The target resource group may be in a different subscription. If validation succeeds, it returns HTTP response code 204 (no content). If validation fails, it returns HTTP response code 409 (Conflict) with an error message. Retrieve the URL in the Location header value to check the result of the long-running operation.",
        "parameters": [
          {
            "name": "sourceResourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group containing the resources to validate for move.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourcesMoveInfo"
            },
            "description": "Parameters for moving resources."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resources": {
      "get": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_List",
        "description": "Get all the resources in a subscription.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation.<br><br>The properties you can use for eq (equals) or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan, plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.<br><br>For example, to filter by a resource type, use: $filter=resourceType eq 'Microsoft.Network/virtualNetworks'<br><br>You can use substringof(value, property) in the filter. The properties you can use for substring are: name and resourceGroup.<br><br>For example, to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo', name)<br><br>You can link more than one substringof together by adding and/or operators.<br><br>You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'. When you filter by a tag name and value, the tags for each resource are not returned in the results.<br><br>You can use some properties together when filtering. The combinations you can use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and identity/principalId."
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Comma-separated list of additional properties to be included in the response. Valid values include `createdTime`, `changedTime` and `provisioningState`. For example, `$expand=createdTime,changedTime`."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to return. If null is passed, returns all resources."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of resources.",
            "schema": {
              "$ref": "#/definitions/ResourceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/GenericResourceFilter"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}": {
      "head": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_CheckExistence",
        "description": "Checks whether a resource exists.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group containing the resource to check. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource provider of the resource to check."
          },
          {
            "name": "parentResourcePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The parent resource identity.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource type.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource to check whether it exists."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for the operation.",
            "x-ms-api-version": false
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_Delete",
        "description": "Deletes a resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group that contains the resource to delete. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace of the resource provider."
          },
          {
            "name": "parentResourcePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The parent resource identity.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource type.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource to delete."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for the operation.",
            "x-ms-api-version": false
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_CreateOrUpdate",
        "description": "Creates a resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group for the resource. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace of the resource provider."
          },
          {
            "name": "parentResourcePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The parent resource identity.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource type of the resource to create.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource to create."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for the operation.",
            "x-ms-api-version": false
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenericResource"
            },
            "description": "Parameters for creating or updating the resource."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the resource.",
            "schema": {
              "$ref": "#/definitions/GenericResource"
            }
          },
          "201": {
            "description": "Created - Returns information about the resource.",
            "schema": {
              "$ref": "#/definitions/GenericResource"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_Update",
        "description": "Updates a resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group for the resource. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace of the resource provider."
          },
          {
            "name": "parentResourcePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The parent resource identity.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource type of the resource to update.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource to update."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for the operation.",
            "x-ms-api-version": false
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenericResource"
            },
            "description": "Parameters for updating the resource."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the resource.",
            "schema": {
              "$ref": "#/definitions/GenericResource"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_Get",
        "description": "Gets a resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group containing the resource to get. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace of the resource provider."
          },
          {
            "name": "parentResourcePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The parent resource identity.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource type of the resource.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource to get."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for the operation.",
            "x-ms-api-version": false
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the resource.",
            "schema": {
              "$ref": "#/definitions/GenericResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/{resourceId}": {
      "head": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_CheckExistenceById",
        "description": "Checks by ID whether a resource exists.",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for the operation.",
            "x-ms-api-version": false
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_DeleteById",
        "description": "Deletes a resource by ID.",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for the operation.",
            "x-ms-api-version": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_CreateOrUpdateById",
        "description": "Create a resource by ID.",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for the operation.",
            "x-ms-api-version": false
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenericResource"
            },
            "description": "Create or update resource parameters."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the resource.",
            "schema": {
              "$ref": "#/definitions/GenericResource"
            }
          },
          "201": {
            "description": "Created - Returns information about the resource.",
            "schema": {
              "$ref": "#/definitions/GenericResource"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_UpdateById",
        "description": "Updates a resource by ID.",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for the operation.",
            "x-ms-api-version": false
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenericResource"
            },
            "description": "Update resource parameters."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the resource.",
            "schema": {
              "$ref": "#/definitions/GenericResource"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_GetById",
        "description": "Gets a resource by ID.",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for the operation.",
            "x-ms-api-version": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the resource.",
            "schema": {
              "$ref": "#/definitions/GenericResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}": {
      "delete": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_DeleteValue",
        "description": "Deletes a tag value.",
        "parameters": [
          {
            "name": "tagName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the tag."
          },
          {
            "name": "tagValue",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The value of the tag to delete."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_CreateOrUpdateValue",
        "description": "Creates a tag value. The name of the tag must already exist.",
        "parameters": [
          {
            "name": "tagName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the tag."
          },
          {
            "name": "tagValue",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The value of the tag to create."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the tag value.",
            "schema": {
              "$ref": "#/definitions/TagValue"
            }
          },
          "201": {
            "description": "Created - Returns information about the tag value.",
            "schema": {
              "$ref": "#/definitions/TagValue"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/tagNames/{tagName}": {
      "put": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_CreateOrUpdate",
        "summary": "Creates a tag in the subscription.",
        "description": "The tag name can have a maximum of 512 characters and is case insensitive. Tag names created by Azure have prefixes of microsoft, azure, or windows. You cannot create tags with one of these prefixes.",
        "parameters": [
          {
            "name": "tagName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the tag to create."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the tag.",
            "schema": {
              "$ref": "#/definitions/TagDetails"
            }
          },
          "201": {
            "description": "Created - Returns information about the tag.",
            "schema": {
              "$ref": "#/definitions/TagDetails"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_Delete",
        "summary": "Deletes a tag from the subscription.",
        "description": "You must remove all values from a resource tag before you can delete it.",
        "parameters": [
          {
            "name": "tagName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the tag."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/tagNames": {
      "get": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_List",
        "description": "Gets the names and values of all resource tags that are defined in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of tag names and values.",
            "schema": {
              "$ref": "#/definitions/TagsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "GenericResourceFilter": {
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "The resource type."
        },
        "tagname": {
          "type": "string",
          "description": "The tag name."
        },
        "tagvalue": {
          "type": "string",
          "description": "The tag value."
        }
      },
      "description": "Resource filter."
    },
    "ResourceGroupFilter": {
      "properties": {
        "tagName": {
          "type": "string",
          "description": "The tag name."
        },
        "tagValue": {
          "type": "string",
          "description": "The tag value."
        }
      },
      "description": "Resource group filter."
    },
    "CloudError": {
      "x-ms-external": true,
      "properties": {
        "error": {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse"
        }
      },
      "description": "An error response for a resource management request."
    },
    "AliasPathType": {
      "properties": {
        "path": {
          "type": "string",
          "description": "The path of an alias."
        },
        "apiVersions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The API versions."
        }
      },
      "description": "The type of the paths for alias. "
    },
    "AliasType": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The alias name."
        },
        "paths": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AliasPathType"
          },
          "description": "The paths for an alias."
        }
      },
      "description": "The alias type. "
    },
    "ProviderResourceType": {
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "The resource type."
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The collection of locations where this resource type can be created."
        },
        "aliases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AliasType"
          },
          "description": "The aliases that are supported by this resource type."
        },
        "apiVersions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The API version."
        },
        "zoneMappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ZoneMapping"
          }
        },
        "capabilities": {
          "type": "string",
          "description": "The additional capabilities offered by this resource type."
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "description": "The additional properties. "
          },
          "description": "The properties."
        }
      },
      "description": "Resource type managed by the resource provider."
    },
    "Provider": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The provider ID."
        },
        "namespace": {
          "type": "string",
          "description": "The namespace of the resource provider."
        },
        "registrationState": {
          "readOnly": true,
          "type": "string",
          "description": "The registration state of the resource provider."
        },
        "registrationPolicy": {
          "readOnly": true,
          "type": "string",
          "description": "The registration policy of the resource provider."
        },
        "resourceTypes": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProviderResourceType"
          },
          "description": "The collection of provider resource types."
        }
      },
      "description": "Resource provider information."
    },
    "ProviderListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Provider"
          },
          "description": "An array of resource providers."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "List of resource providers."
    },
    "GenericResource": {
      "properties": {
        "plan": {
          "$ref": "#/definitions/Plan",
          "description": "The plan of the resource."
        },
        "properties": {
          "type": "object",
          "description": "The resource properties."
        },
        "kind": {
          "type": "string",
          "description": "The kind of the resource.",
          "pattern": "^[-\\w\\._,\\(\\)]+$"
        },
        "managedBy": {
          "type": "string",
          "description": "ID of the resource that manages this resource."
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU of the resource."
        },
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "The identity of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Resource information."
    },
    "GenericResourceExpanded": {
      "properties": {
        "createdTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The created time of the resource. This is only present if requested via the $expand query parameter."
        },
        "changedTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The changed time of the resource. This is only present if requested via the $expand query parameter."
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state of the resource. This is only present if requested via the $expand query parameter."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/GenericResource"
        }
      ],
      "description": "Resource information."
    },
    "Plan": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The plan ID."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher ID."
        },
        "product": {
          "type": "string",
          "description": "The offer ID."
        },
        "promotionCode": {
          "type": "string",
          "description": "The promotion code."
        },
        "version": {
          "type": "string",
          "description": "The plan's version."
        }
      },
      "description": "Plan for the resource."
    },
    "Sku": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The SKU name."
        },
        "tier": {
          "type": "string",
          "description": "The SKU tier."
        },
        "size": {
          "type": "string",
          "description": "The SKU size."
        },
        "family": {
          "type": "string",
          "description": "The SKU family."
        },
        "model": {
          "type": "string",
          "description": "The SKU model."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "The SKU capacity."
        }
      },
      "description": "SKU for the resource."
    },
    "Identity": {
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal ID of resource identity."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant ID of resource."
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned",
            "None"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        },
        "userAssignedIdentities": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "principalId": {
                "readOnly": true,
                "type": "string",
                "description": "The principal id of user assigned identity."
              },
              "clientId": {
                "readOnly": true,
                "type": "string",
                "description": "The client id of user assigned identity."
              }
            }
          },
          "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
        }
      },
      "description": "Identity for the resource."
    },
    "ResourceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GenericResourceExpanded"
          },
          "description": "An array of resources."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "List of resource groups."
    },
    "ResourceGroup": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The ID of the resource group."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource group."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource group."
        },
        "properties": {
          "$ref": "#/definitions/ResourceGroupProperties",
          "description": "The resource group properties."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group. It cannot be changed after the resource group has been created. It must be one of the supported Azure locations."
        },
        "managedBy": {
          "type": "string",
          "description": "The ID of the resource that manages this resource group."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "description": "The additional properties. "
          },
          "description": "The tags attached to the resource group."
        }
      },
      "required": [
        "location"
      ],
      "x-ms-azure-resource": true,
      "description": "Resource group information."
    },
    "ResourceGroupPatchable": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource group."
        },
        "properties": {
          "$ref": "#/definitions/ResourceGroupProperties",
          "description": "The resource group properties."
        },
        "managedBy": {
          "type": "string",
          "description": "The ID of the resource that manages this resource group."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "description": "The additional properties. "
          },
          "description": "The tags attached to the resource group."
        }
      },
      "description": "Resource group information."
    },
    "ResourceGroupProperties": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state. "
        }
      },
      "description": "The resource group properties."
    },
    "ResourceGroupListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceGroup"
          },
          "description": "An array of resource groups."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "List of resource groups."
    },
    "ResourcesMoveInfo": {
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of the resources."
        },
        "targetResourceGroup": {
          "type": "string",
          "description": "The target resource group."
        }
      },
      "description": "Parameters of move resources."
    },
    "ExportTemplateRequest": {
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of the resources to filter the export by. To export all resources, supply an array with single entry '*'."
        },
        "options": {
          "type": "string",
          "description": "The export template options. A CSV-formatted list containing zero or more of the following: 'IncludeParameterDefaultValue', 'IncludeComments', 'SkipResourceNameParameterization', 'SkipAllParameterization'"
        }
      },
      "description": "Export resource group template request parameters."
    },
    "TagCount": {
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of count."
        },
        "value": {
          "type": "integer",
          "description": "Value of count."
        }
      },
      "description": "Tag count."
    },
    "TagValue": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The tag ID."
        },
        "tagValue": {
          "type": "string",
          "description": "The tag value."
        },
        "count": {
          "$ref": "#/definitions/TagCount",
          "description": "The tag value count."
        }
      },
      "x-ms-azure-resource": true,
      "description": "Tag information."
    },
    "TagDetails": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The tag ID."
        },
        "tagName": {
          "type": "string",
          "description": "The tag name."
        },
        "count": {
          "$ref": "#/definitions/TagCount",
          "description": "The total number of resources that use the resource tag. When a tag is initially created and has no associated resources, the value is 0."
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagValue"
          },
          "description": "The list of tag values."
        }
      },
      "description": "Tag details."
    },
    "TagsListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagDetails"
          },
          "description": "An array of tags."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "List of subscription tags."
    },
    "ResourceProviderOperationDisplayProperties": {
      "properties": {
        "publisher": {
          "type": "string",
          "description": "Operation description."
        },
        "provider": {
          "type": "string",
          "description": "Operation provider."
        },
        "resource": {
          "type": "string",
          "description": "Operation resource."
        },
        "operation": {
          "type": "string",
          "description": "Resource provider operation."
        },
        "description": {
          "type": "string",
          "description": "Operation description."
        }
      },
      "description": "Resource provider operation's display properties."
    },
    "Resource": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "x-ms-azure-resource": true,
      "description": "Specified resource."
    },
    "SubResource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID"
        }
      },
      "x-ms-azure-resource": true,
      "description": "Sub-resource."
    },
    "ResourceGroupExportResult": {
      "properties": {
        "template": {
          "type": "object",
          "description": "The template content."
        },
        "error": {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse",
          "description": "The template export error."
        }
      },
      "description": "Resource group export result."
    },
    "Operation": {
      "description": "Microsoft.Resources operation",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}",
          "type": "string"
        },
        "display": {
          "description": "The object that represents the operation.",
          "properties": {
            "provider": {
              "description": "Service provider: Microsoft.Resources",
              "type": "string"
            },
            "resource": {
              "description": "Resource on which the operation is performed: Profile, endpoint, etc.",
              "type": "string"
            },
            "operation": {
              "description": "Operation type: Read, write, delete, etc.",
              "type": "string"
            },
            "description": {
              "description": "Description of the operation.",
              "type": "string"
            }
          }
        }
      }
    },
    "OperationListResult": {
      "description": "Result of the request to list Microsoft.Resources operations. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "description": "List of Microsoft.Resources operations."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "ZoneMapping": {
      "properties": {
        "location": {
          "type": "string",
          "description": "The location of the zone mapping."
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID of the target subscription."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to use for this operation."
    }
  }
}
