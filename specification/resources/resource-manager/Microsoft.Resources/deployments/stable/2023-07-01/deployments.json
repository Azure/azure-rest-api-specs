{
  "swagger": "2.0",
  "info": {
    "title": "DeploymentsClient",
    "version": "2023-07-01",
    "description": "Provides operations for working with deployments."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}": {
      "delete": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_DeleteAtScope",
        "summary": "Deletes a deployment from the deployment history.",
        "description": "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.",
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "head": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CheckExistenceAtScope",
        "description": "Checks whether the deployment exists.",
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CreateOrUpdateAtScope",
        "summary": "Deploys resources at a given scope.",
        "description": "You can provide the template and parameters directly in the request or link to JSON files.",
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deployment"
            },
            "description": "Additional parameters supplied to the operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          },
          "201": {
            "description": "Created - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create deployment at a given scope.": {
            "$ref": "./examples/PutDeploymentAtScope.json"
          }
        }
      },
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_GetAtScope",
        "description": "Gets a deployment.",
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CancelAtScope",
        "summary": "Cancels a currently running template deployment.",
        "description": "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed.",
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/validate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ValidateAtScope",
        "x-ms-long-running-operation": true,
        "description": "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..",
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deployment"
            },
            "description": "Parameters to validate."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the validation result.",
            "schema": {
              "$ref": "#/definitions/DeploymentValidateResult"
            }
          },
          "202": {
            "description": "Accepted - The request has been accepted for processing and the operation will complete asynchronously."
          },
          "400": {
            "description": "Returns the validation result.",
            "schema": {
              "$ref": "#/definitions/DeploymentValidateResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ExportTemplateAtScope",
        "description": "Exports the template used for specified deployment.",
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the template.",
            "schema": {
              "$ref": "#/definitions/DeploymentExportResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Resources/deployments/": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ListAtScope",
        "description": "Get all the deployments at the given scope.",
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to get. If null is passed, returns all deployments."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of deployments.",
            "schema": {
              "$ref": "#/definitions/DeploymentListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/DeploymentExtendedFilter"
      }
    },
    "/providers/Microsoft.Resources/deployments/{deploymentName}": {
      "delete": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_DeleteAtTenantScope",
        "summary": "Deletes a deployment from the deployment history.",
        "description": "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.",
        "parameters": [
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "head": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CheckExistenceAtTenantScope",
        "description": "Checks whether the deployment exists.",
        "parameters": [
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CreateOrUpdateAtTenantScope",
        "summary": "Deploys resources at tenant scope.",
        "description": "You can provide the template and parameters directly in the request or link to JSON files.",
        "parameters": [
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScopedDeployment"
            },
            "description": "Additional parameters supplied to the operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          },
          "201": {
            "description": "Created - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create deployment at tenant scope.": {
            "$ref": "./examples/PutDeploymentAtTenant.json"
          }
        }
      },
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_GetAtTenantScope",
        "description": "Gets a deployment.",
        "parameters": [
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/{deploymentName}/cancel": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CancelAtTenantScope",
        "summary": "Cancels a currently running template deployment.",
        "description": "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed.",
        "parameters": [
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/{deploymentName}/validate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ValidateAtTenantScope",
        "x-ms-long-running-operation": true,
        "description": "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..",
        "parameters": [
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScopedDeployment"
            },
            "description": "Parameters to validate."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the validation result.",
            "schema": {
              "$ref": "#/definitions/DeploymentValidateResult"
            }
          },
          "202": {
            "description": "Accepted - The request has been accepted for processing and the operation will complete asynchronously."
          },
          "400": {
            "description": "Returns the validation result.",
            "schema": {
              "$ref": "#/definitions/DeploymentValidateResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_WhatIfAtTenantScope",
        "description": "Returns changes that will be made by the deployment if executed at the scope of the tenant group.",
        "parameters": [
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScopedDeploymentWhatIf"
            },
            "description": "Parameters to validate."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns What-If operation status",
            "schema": {
              "$ref": "#/definitions/WhatIfOperationResult"
            }
          },
          "202": {
            "description": "Accepted - Returns URL in Location header to query for long-running operation status.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL to get status of this long-running operation."
              },
              "Retry-After": {
                "type": "string",
                "description": "Number of seconds to wait before polling for status."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Predict template changes at management group scope": {
            "$ref": "./examples/PostDeploymentWhatIfOnTenant.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ExportTemplateAtTenantScope",
        "description": "Exports the template used for specified deployment.",
        "parameters": [
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the template.",
            "schema": {
              "$ref": "#/definitions/DeploymentExportResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ListAtTenantScope",
        "description": "Get all the deployments at the tenant scope.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to get. If null is passed, returns all deployments."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of deployments.",
            "schema": {
              "$ref": "#/definitions/DeploymentListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/DeploymentExtendedFilter"
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}": {
      "delete": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_DeleteAtManagementGroupScope",
        "summary": "Deletes a deployment from the deployment history.",
        "description": "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.",
        "parameters": [
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "head": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CheckExistenceAtManagementGroupScope",
        "description": "Checks whether the deployment exists.",
        "parameters": [
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CreateOrUpdateAtManagementGroupScope",
        "summary": "Deploys resources at management group scope.",
        "description": "You can provide the template and parameters directly in the request or link to JSON files.",
        "parameters": [
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScopedDeployment"
            },
            "description": "Additional parameters supplied to the operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          },
          "201": {
            "description": "Created - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create deployment at management group scope.": {
            "$ref": "./examples/PutDeploymentAtManagementGroup.json"
          }
        }
      },
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_GetAtManagementGroupScope",
        "description": "Gets a deployment.",
        "parameters": [
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CancelAtManagementGroupScope",
        "summary": "Cancels a currently running template deployment.",
        "description": "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed.",
        "parameters": [
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/validate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ValidateAtManagementGroupScope",
        "x-ms-long-running-operation": true,
        "description": "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..",
        "parameters": [
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScopedDeployment"
            },
            "description": "Parameters to validate."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the validation result.",
            "schema": {
              "$ref": "#/definitions/DeploymentValidateResult"
            }
          },
          "202": {
            "description": "Accepted - The request has been accepted for processing and the operation will complete asynchronously."
          },
          "400": {
            "description": "Returns the validation result.",
            "schema": {
              "$ref": "#/definitions/DeploymentValidateResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_WhatIfAtManagementGroupScope",
        "description": "Returns changes that will be made by the deployment if executed at the scope of the management group.",
        "parameters": [
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScopedDeploymentWhatIf"
            },
            "description": "Parameters to validate."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns What-If operation status",
            "schema": {
              "$ref": "#/definitions/WhatIfOperationResult"
            }
          },
          "202": {
            "description": "Accepted - Returns URL in Location header to query for long-running operation status.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL to get status of this long-running operation."
              },
              "Retry-After": {
                "type": "string",
                "description": "Number of seconds to wait before polling for status."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Predict template changes at management group scope": {
            "$ref": "./examples/PostDeploymentWhatIfOnManagementGroup.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ExportTemplateAtManagementGroupScope",
        "description": "Exports the template used for specified deployment.",
        "parameters": [
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the template.",
            "schema": {
              "$ref": "#/definitions/DeploymentExportResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ListAtManagementGroupScope",
        "description": "Get all the deployments for a management group.",
        "parameters": [
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to get. If null is passed, returns all deployments."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of deployments.",
            "schema": {
              "$ref": "#/definitions/DeploymentListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/DeploymentExtendedFilter"
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}": {
      "delete": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_DeleteAtSubscriptionScope",
        "summary": "Deletes a deployment from the deployment history.",
        "description": "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.",
        "parameters": [
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "head": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CheckExistenceAtSubscriptionScope",
        "description": "Checks whether the deployment exists.",
        "parameters": [
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CreateOrUpdateAtSubscriptionScope",
        "summary": "Deploys resources at subscription scope.",
        "description": "You can provide the template and parameters directly in the request or link to JSON files.",
        "parameters": [
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deployment"
            },
            "description": "Additional parameters supplied to the operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          },
          "201": {
            "description": "Created - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create a deployment that will deploy a templateSpec with the given resourceId": {
            "$ref": "./examples/PutDeploymentSubscriptionTemplateSpecsWithId.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_GetAtSubscriptionScope",
        "description": "Gets a deployment.",
        "parameters": [
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CancelAtSubscriptionScope",
        "summary": "Cancels a currently running template deployment.",
        "description": "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed.",
        "parameters": [
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/validate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ValidateAtSubscriptionScope",
        "x-ms-long-running-operation": true,
        "description": "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..",
        "parameters": [
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deployment"
            },
            "description": "Parameters to validate."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the validation result.",
            "schema": {
              "$ref": "#/definitions/DeploymentValidateResult"
            }
          },
          "202": {
            "description": "Accepted - The request has been accepted for processing and the operation will complete asynchronously."
          },
          "400": {
            "description": "Returns the validation result.",
            "schema": {
              "$ref": "#/definitions/DeploymentValidateResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_WhatIfAtSubscriptionScope",
        "description": "Returns changes that will be made by the deployment if executed at the scope of the subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentWhatIf"
            },
            "description": "Parameters to What If."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns What-If operation status",
            "schema": {
              "$ref": "#/definitions/WhatIfOperationResult"
            }
          },
          "202": {
            "description": "Accepted - Returns URL in Location header to query for long-running operation status.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL to get status of this long-running operation."
              },
              "Retry-After": {
                "type": "string",
                "description": "Number of seconds to wait before polling for status."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Predict template changes at subscription scope": {
            "$ref": "./examples/PostDeploymentWhatIfOnSubscription.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ExportTemplateAtSubscriptionScope",
        "description": "Exports the template used for specified deployment.",
        "parameters": [
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the template.",
            "schema": {
              "$ref": "#/definitions/DeploymentExportResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ListAtSubscriptionScope",
        "description": "Get all the deployments for a subscription.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to get. If null is passed, returns all deployments."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of deployments.",
            "schema": {
              "$ref": "#/definitions/DeploymentListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/DeploymentExtendedFilter"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}": {
      "delete": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_Delete",
        "summary": "Deletes a deployment from the deployment history.",
        "description": "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. Deleting a template deployment does not affect the state of the resource group. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group with the deployment to delete. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "head": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CheckExistence",
        "description": "Checks whether the deployment exists.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group with the deployment to check. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CreateOrUpdate",
        "summary": "Deploys resources to a resource group.",
        "description": "You can provide the template and parameters directly in the request or link to JSON files.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group to deploy the resources to. The name is case insensitive. The resource group must already exist.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deployment"
            },
            "description": "Additional parameters supplied to the operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          },
          "201": {
            "description": "Created - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create a deployment that will redeploy the last successful deployment on failure": {
            "$ref": "./examples/PutDeploymentWithOnErrorDeploymentLastSuccessful.json"
          },
          "Create a deployment that will redeploy another deployment on failure": {
            "$ref": "./examples/PutDeploymentWithOnErrorDeploymentSpecificDeployment.json"
          },
          "Create a deployment that will deploy a templateSpec with the given resourceId": {
            "$ref": "./examples/PutDeploymentResourceGroupTemplateSpecsWithId.json"
          },
          "Create a deployment that will deploy a template with a uri and queryString": {
            "$ref": "./examples/PutDeploymentResourceGroup.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_Get",
        "description": "Gets a deployment.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_Cancel",
        "summary": "Cancels a currently running template deployment.",
        "description": "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resource group partially deployed.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/validate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_Validate",
        "x-ms-long-running-operation": true,
        "description": "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group the template will be deployed to. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deployment"
            },
            "description": "Parameters to validate."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the validation result.",
            "schema": {
              "$ref": "#/definitions/DeploymentValidateResult"
            }
          },
          "202": {
            "description": "Accepted - The request has been accepted for processing and the operation will complete asynchronously."
          },
          "400": {
            "description": "Returns the validation result.",
            "schema": {
              "$ref": "#/definitions/DeploymentValidateResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_WhatIf",
        "description": "Returns changes that will be made by the deployment if executed at the scope of the resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group the template will be deployed to. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentWhatIf"
            },
            "description": "Parameters to validate."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns What-If operation status",
            "schema": {
              "$ref": "#/definitions/WhatIfOperationResult"
            }
          },
          "202": {
            "description": "Accepted - Returns URL in Location header to query for long-running operation status.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL to get status of this long-running operation."
              },
              "Retry-After": {
                "type": "string",
                "description": "Number of seconds to wait before polling for status."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Predict template changes at resource group scope": {
            "$ref": "./examples/PostDeploymentWhatIfOnResourceGroup.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ExportTemplate",
        "description": "Exports the template used for specified deployment.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the template.",
            "schema": {
              "$ref": "#/definitions/DeploymentExportResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ListByResourceGroup",
        "description": "Get all the deployments for a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group with the deployments to get. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to get. If null is passed, returns all deployments."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of deployments.",
            "schema": {
              "$ref": "#/definitions/DeploymentListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/DeploymentExtendedFilter"
      }
    },
    "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_GetAtScope",
        "description": "Gets a deployments operation.",
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the operation to get."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment operation.",
            "schema": {
              "$ref": "#/definitions/DeploymentOperation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_ListAtScope",
        "description": "Gets all deployments operations for a deployment.",
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to return."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Return an array of deployment operations.",
            "schema": {
              "$ref": "#/definitions/DeploymentOperationsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_GetAtTenantScope",
        "description": "Gets a deployments operation.",
        "parameters": [
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the operation to get."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment operation.",
            "schema": {
              "$ref": "#/definitions/DeploymentOperation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Resources/deployments/{deploymentName}/operations": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_ListAtTenantScope",
        "description": "Gets all deployments operations for a deployment.",
        "parameters": [
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to return."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Return an array of deployment operations.",
            "schema": {
              "$ref": "#/definitions/DeploymentOperationsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_GetAtManagementGroupScope",
        "description": "Gets a deployments operation.",
        "parameters": [
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the operation to get."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment operation.",
            "schema": {
              "$ref": "#/definitions/DeploymentOperation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_ListAtManagementGroupScope",
        "description": "Gets all deployments operations for a deployment.",
        "parameters": [
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to return."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Return an array of deployment operations.",
            "schema": {
              "$ref": "#/definitions/DeploymentOperationsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_GetAtSubscriptionScope",
        "description": "Gets a deployments operation.",
        "parameters": [
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the operation to get."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment operation.",
            "schema": {
              "$ref": "#/definitions/DeploymentOperation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_ListAtSubscriptionScope",
        "description": "Gets all deployments operations for a deployment.",
        "parameters": [
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to return."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Return an array of deployment operations.",
            "schema": {
              "$ref": "#/definitions/DeploymentOperationsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations/{operationId}": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_Get",
        "description": "Gets a deployments operation.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the operation to get."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment operation.",
            "schema": {
              "$ref": "#/definitions/DeploymentOperation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_List",
        "description": "Gets all deployments operations for a deployment.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to return."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Return an array of deployment operations.",
            "schema": {
              "$ref": "#/definitions/DeploymentOperationsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Resources/calculateTemplateHash": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CalculateTemplateHash",
        "description": "Calculate the hash of the given template.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "template",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            },
            "description": "The template provided to calculate hash."
          }
        ],
        "x-ms-examples": {
          "Calculate template hash": {
            "$ref": "./examples/CalculateTemplateHash.json"
          }
        },
        "responses": {
          "200": {
            "description": "OK - Returns the hash.",
            "schema": {
              "$ref": "#/definitions/TemplateHashResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "DeploymentExtendedFilter": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state."
        }
      },
      "description": "Deployment filter."
    },
    "TemplateLink": {
      "properties": {
        "uri": {
          "type": "string",
          "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
        },
        "id": {
          "type": "string",
          "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
        },
        "relativePath": {
          "type": "string",
          "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
        },
        "contentVersion": {
          "type": "string",
          "description": "If included, must match the ContentVersion in the template."
        },
        "queryString": {
          "type": "string",
          "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
        }
      },
      "description": "Entity representing the reference to the template."
    },
    "ParametersLink": {
      "properties": {
        "uri": {
          "type": "string",
          "description": "The URI of the parameters file."
        },
        "contentVersion": {
          "type": "string",
          "description": "If included, must match the ContentVersion in the template."
        }
      },
      "required": [
        "uri"
      ],
      "description": "Entity representing the reference to the deployment parameters."
    },
    "DeploymentProperties": {
      "properties": {
        "template": {
          "type": "object",
          "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
        },
        "templateLink": {
          "$ref": "#/definitions/TemplateLink",
          "description": "The URI of the template. Use either the templateLink property or the template property, but not both."
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DeploymentParameter"
          },
          "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
        },
        "parametersLink": {
          "$ref": "#/definitions/ParametersLink",
          "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both."
        },
        "mode": {
          "type": "string",
          "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
          "enum": [
            "Incremental",
            "Complete"
          ],
          "x-ms-enum": {
            "name": "DeploymentMode",
            "modelAsString": false
          }
        },
        "debugSetting": {
          "$ref": "#/definitions/DebugSetting",
          "description": "The debug setting of the deployment."
        },
        "onErrorDeployment": {
          "$ref": "#/definitions/OnErrorDeployment",
          "description": "The deployment on error behavior."
        },
        "expressionEvaluationOptions": {
          "$ref": "#/definitions/ExpressionEvaluationOptions",
          "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer."
        }
      },
      "required": [
        "mode"
      ],
      "description": "Deployment properties."
    },
    "DeploymentParameter": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Input value to the parameter ."
        },
        "reference": {
          "$ref": "#/definitions/KeyVaultParameterReference",
          "description": "Azure Key Vault parameter reference."
        }
      },
      "description": "Deployment parameter for the template."
    },
    "KeyVaultParameterReference": {
      "type": "object",
      "properties": {
        "keyVault": {
          "$ref": "#/definitions/KeyVaultReference",
          "description": "Azure Key Vault reference."
        },
        "secretName": {
          "type": "string",
          "description": "Azure Key Vault secret name."
        },
        "secretVersion": {
          "type": "string",
          "description": "Azure Key Vault secret version."
        }
      },
      "required": [
        "keyVault",
        "secretName"
      ],
      "description": "Azure Key Vault parameter reference."
    },
    "KeyVaultReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure Key Vault resource id."
        }
      },
      "required": [
        "id"
      ],
      "description": "Azure Key Vault reference."
    },
    "DebugSetting": {
      "properties": {
        "detailLevel": {
          "type": "string",
          "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
        }
      },
      "description": "The debug setting."
    },
    "Deployment": {
      "properties": {
        "location": {
          "type": "string",
          "description": "The location to store the deployment data."
        },
        "properties": {
          "$ref": "#/definitions/DeploymentProperties",
          "description": "The deployment properties."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Deployment tags"
        }
      },
      "required": [
        "properties"
      ],
      "description": "Deployment operation parameters."
    },
    "ScopedDeployment": {
      "properties": {
        "location": {
          "type": "string",
          "description": "The location to store the deployment data."
        },
        "properties": {
          "$ref": "#/definitions/DeploymentProperties",
          "description": "The deployment properties."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Deployment tags"
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "description": "Deployment operation parameters."
    },
    "DeploymentExportResult": {
      "properties": {
        "template": {
          "type": "object",
          "description": "The template content."
        }
      },
      "description": "The deployment export result. "
    },
    "DeploymentWhatIf": {
      "properties": {
        "location": {
          "type": "string",
          "description": "The location to store the deployment data."
        },
        "properties": {
          "$ref": "#/definitions/DeploymentWhatIfProperties",
          "description": "The deployment properties."
        }
      },
      "required": [
        "properties"
      ],
      "description": "Deployment What-if operation parameters."
    },
    "ScopedDeploymentWhatIf": {
      "properties": {
        "location": {
          "type": "string",
          "description": "The location to store the deployment data."
        },
        "properties": {
          "$ref": "#/definitions/DeploymentWhatIfProperties",
          "description": "The deployment properties."
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "description": "Deployment What-if operation parameters."
    },
    "DeploymentWhatIfProperties": {
      "properties": {
        "whatIfSettings": {
          "$ref": "#/definitions/DeploymentWhatIfSettings",
          "description": "Optional What-If operation settings."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DeploymentProperties"
        }
      ],
      "description": "Deployment What-if properties."
    },
    "DeploymentWhatIfSettings": {
      "properties": {
        "resultFormat": {
          "type": "string",
          "description": "The format of the What-If results",
          "enum": [
            "ResourceIdOnly",
            "FullResourcePayloads"
          ],
          "x-ms-enum": {
            "name": "WhatIfResultFormat",
            "modelAsString": false
          }
        }
      },
      "description": "Deployment What-If operation settings."
    },
    "CloudError": {
      "x-ms-external": true,
      "properties": {
        "error": {
          "$ref": "../../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse"
        }
      },
      "description": "An error response for a resource management request."
    },
    "ApiProfile": {
      "properties": {
        "profileVersion": {
          "type": "string",
          "readOnly": true,
          "description": "The profile version."
        },
        "apiVersion": {
          "type": "string",
          "readOnly": true,
          "description": "The API version."
        }
      }
    },
    "AliasPathMetadata": {
      "properties": {
        "type": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "NotSpecified",
            "Any",
            "String",
            "Object",
            "Array",
            "Integer",
            "Number",
            "Boolean"
          ],
          "x-ms-enum": {
            "name": "AliasPathTokenType",
            "modelAsString": true,
            "values": [
              {
                "value": "NotSpecified",
                "description": "The token type is not specified."
              },
              {
                "value": "Any",
                "description": "The token type can be anything."
              },
              {
                "value": "String",
                "description": "The token type is string."
              },
              {
                "value": "Object",
                "description": "The token type is object."
              },
              {
                "value": "Array",
                "description": "The token type is array."
              },
              {
                "value": "Integer",
                "description": "The token type is integer."
              },
              {
                "value": "Number",
                "description": "The token type is number."
              },
              {
                "value": "Boolean",
                "description": "The token type is boolean."
              }
            ]
          },
          "description": "The type of the token that the alias path is referring to."
        },
        "attributes": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "None",
            "Modifiable"
          ],
          "x-ms-enum": {
            "name": "AliasPathAttributes",
            "modelAsString": true,
            "values": [
              {
                "value": "None",
                "description": "The token that the alias path is referring to has no attributes."
              },
              {
                "value": "Modifiable",
                "description": "The token that the alias path is referring to is modifiable by policies with 'modify' effect."
              }
            ]
          },
          "description": "The attributes of the token that the alias path is referring to."
        }
      }
    },
    "AliasPath": {
      "properties": {
        "path": {
          "type": "string",
          "description": "The path of an alias."
        },
        "apiVersions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The API versions."
        },
        "pattern": {
          "$ref": "#/definitions/AliasPattern",
          "description": "The pattern for an alias path."
        },
        "metadata": {
          "readOnly": true,
          "$ref": "#/definitions/AliasPathMetadata",
          "description": "The metadata of the alias path. If missing, fall back to the default metadata of the alias."
        }
      },
      "description": "The type of the paths for alias."
    },
    "AliasPattern": {
      "properties": {
        "phrase": {
          "type": "string",
          "description": "The alias pattern phrase."
        },
        "variable": {
          "type": "string",
          "description": "The alias pattern variable."
        },
        "type": {
          "type": "string",
          "enum": [
            "NotSpecified",
            "Extract"
          ],
          "x-ms-enum": {
            "name": "AliasPatternType",
            "modelAsString": false,
            "values": [
              {
                "value": "NotSpecified",
                "description": "NotSpecified is not allowed."
              },
              {
                "value": "Extract",
                "description": "Extract is the only allowed value."
              }
            ]
          },
          "description": "The type of alias pattern"
        }
      },
      "description": "The type of the pattern for an alias path."
    },
    "Alias": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The alias name."
        },
        "paths": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AliasPath"
          },
          "x-ms-identifiers": [],
          "description": "The paths for an alias."
        },
        "type": {
          "type": "string",
          "description": "The type of the alias.",
          "enum": [
            "NotSpecified",
            "PlainText",
            "Mask"
          ],
          "x-ms-enum": {
            "name": "AliasType",
            "modelAsString": false,
            "values": [
              {
                "value": "NotSpecified",
                "description": "Alias type is unknown (same as not providing alias type)."
              },
              {
                "value": "PlainText",
                "description": "Alias value is not secret."
              },
              {
                "value": "Mask",
                "description": "Alias value is secret."
              }
            ]
          }
        },
        "defaultPath": {
          "type": "string",
          "description": "The default path for an alias."
        },
        "defaultPattern": {
          "$ref": "#/definitions/AliasPattern",
          "description": "The default pattern for an alias."
        },
        "defaultMetadata": {
          "readOnly": true,
          "$ref": "#/definitions/AliasPathMetadata",
          "description": "The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata"
        }
      },
      "description": "The alias type. "
    },
    "ProviderExtendedLocation": {
      "properties": {
        "location": {
          "type": "string",
          "description": "The azure location."
        },
        "type": {
          "type": "string",
          "description": "The extended location type."
        },
        "extendedLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The extended locations for the azure location."
        }
      },
      "description": "The provider extended location. "
    },
    "ProviderResourceType": {
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "The resource type."
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The collection of locations where this resource type can be created."
        },
        "locationMappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProviderExtendedLocation"
          },
          "x-ms-identifiers": [
            "location",
            "type"
          ],
          "description": "The location mappings that are supported by this resource type."
        },
        "aliases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Alias"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "The aliases that are supported by this resource type."
        },
        "apiVersions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The API version."
        },
        "defaultApiVersion": {
          "type": "string",
          "readOnly": true,
          "description": "The default API version."
        },
        "zoneMappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ZoneMapping"
          },
          "x-ms-identifiers": [
            "location"
          ]
        },
        "apiProfiles": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ApiProfile"
          },
          "x-ms-identifiers": [
            "apiVersion",
            "profileVersion"
          ],
          "description": "The API profiles for the resource provider."
        },
        "capabilities": {
          "type": "string",
          "description": "The additional capabilities offered by this resource type."
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "description": "The additional properties. "
          },
          "description": "The properties."
        }
      },
      "description": "Resource type managed by the resource provider."
    },
    "Provider": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The provider ID."
        },
        "namespace": {
          "type": "string",
          "description": "The namespace of the resource provider."
        },
        "registrationState": {
          "readOnly": true,
          "type": "string",
          "description": "The registration state of the resource provider."
        },
        "registrationPolicy": {
          "readOnly": true,
          "type": "string",
          "description": "The registration policy of the resource provider."
        },
        "resourceTypes": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProviderResourceType"
          },
          "x-ms-identifiers": [
            "resourceType"
          ],
          "description": "The collection of provider resource types."
        },
        "providerAuthorizationConsentState": {
          "type": "string",
          "enum": [
            "NotSpecified",
            "Required",
            "NotRequired",
            "Consented"
          ],
          "description": "The provider authorization consent state.",
          "x-ms-enum": {
            "name": "ProviderAuthorizationConsentState",
            "modelAsString": true
          }
        }
      },
      "description": "Resource provider information."
    },
    "BasicDependency": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the dependency."
        },
        "resourceType": {
          "type": "string",
          "description": "The dependency resource type."
        },
        "resourceName": {
          "type": "string",
          "description": "The dependency resource name."
        }
      },
      "description": "Deployment dependency information."
    },
    "Dependency": {
      "properties": {
        "dependsOn": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BasicDependency"
          },
          "description": "The list of dependencies."
        },
        "id": {
          "type": "string",
          "description": "The ID of the dependency."
        },
        "resourceType": {
          "type": "string",
          "description": "The dependency resource type."
        },
        "resourceName": {
          "type": "string",
          "description": "The dependency resource name."
        }
      },
      "description": "Deployment dependency information."
    },
    "DeploymentPropertiesExtended": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Denotes the state of provisioning.",
          "enum": [
            "NotSpecified",
            "Accepted",
            "Running",
            "Ready",
            "Creating",
            "Created",
            "Deleting",
            "Deleted",
            "Canceled",
            "Failed",
            "Succeeded",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "correlationId": {
          "readOnly": true,
          "type": "string",
          "description": "The correlation ID of the deployment."
        },
        "timestamp": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of the template deployment."
        },
        "duration": {
          "readOnly": true,
          "type": "string",
          "description": "The duration of the template deployment."
        },
        "outputs": {
          "readOnly": true,
          "type": "object",
          "description": "Key/value pairs that represent deployment output."
        },
        "providers": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Provider"
          },
          "description": "The list of resource providers needed for the deployment."
        },
        "dependencies": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dependency"
          },
          "description": "The list of deployment dependencies."
        },
        "templateLink": {
          "readOnly": true,
          "$ref": "#/definitions/TemplateLink",
          "description": "The URI referencing the template."
        },
        "parameters": {
          "readOnly": true,
          "type": "object",
          "description": "Deployment parameters. "
        },
        "parametersLink": {
          "readOnly": true,
          "$ref": "#/definitions/ParametersLink",
          "description": "The URI referencing the parameters. "
        },
        "mode": {
          "readOnly": true,
          "type": "string",
          "description": "The deployment mode. Possible values are Incremental and Complete.",
          "enum": [
            "Incremental",
            "Complete"
          ],
          "x-ms-enum": {
            "name": "DeploymentMode",
            "modelAsString": false
          }
        },
        "debugSetting": {
          "readOnly": true,
          "$ref": "#/definitions/DebugSetting",
          "description": "The debug setting of the deployment."
        },
        "onErrorDeployment": {
          "readOnly": true,
          "$ref": "#/definitions/OnErrorDeploymentExtended",
          "description": "The deployment on error behavior."
        },
        "templateHash": {
          "readOnly": true,
          "type": "string",
          "description": "The hash produced for the template."
        },
        "outputResources": {
          "readOnly": true,
          "type": "array",
          "description": "Array of provisioned resources.",
          "items": {
            "$ref": "#/definitions/ResourceReference",
            "description": "Details of provisioned resources."
          }
        },
        "validatedResources": {
          "readOnly": true,
          "type": "array",
          "description": "Array of validated resources.",
          "items": {
            "$ref": "#/definitions/ResourceReference",
            "description": "Details of validated resources."
          }
        },
        "error": {
          "readOnly": true,
          "$ref": "../../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse",
          "description": "The deployment error."
        }
      },
      "description": "Deployment properties with additional details."
    },
    "ResourceReference": {
      "description": "The resource Id model.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The fully qualified resource Id."
        }
      }
    },
    "OnErrorDeployment": {
      "properties": {
        "type": {
          "type": "string",
          "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
          "enum": [
            "LastSuccessful",
            "SpecificDeployment"
          ],
          "x-ms-enum": {
            "name": "OnErrorDeploymentType",
            "modelAsString": false
          }
        },
        "deploymentName": {
          "type": "string",
          "description": "The deployment to be used on error case."
        }
      },
      "description": "Deployment on error behavior."
    },
    "OnErrorDeploymentExtended": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The state of the provisioning for the on error deployment."
        },
        "type": {
          "type": "string",
          "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
          "enum": [
            "LastSuccessful",
            "SpecificDeployment"
          ],
          "x-ms-enum": {
            "name": "OnErrorDeploymentType",
            "modelAsString": false
          }
        },
        "deploymentName": {
          "type": "string",
          "description": "The deployment to be used on error case."
        }
      },
      "description": "Deployment on error behavior with additional details."
    },
    "DeploymentValidateResult": {
      "properties": {
        "error": {
          "readOnly": true,
          "$ref": "../../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse",
          "description": "The deployment validation error."
        },
        "properties": {
          "$ref": "#/definitions/DeploymentPropertiesExtended",
          "description": "The template deployment properties."
        }
      },
      "description": "Information from validate template deployment response."
    },
    "DeploymentExtended": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The ID of the deployment."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the deployment."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the deployment."
        },
        "location": {
          "type": "string",
          "description": "the location of the deployment."
        },
        "properties": {
          "$ref": "#/definitions/DeploymentPropertiesExtended",
          "description": "Deployment properties."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Deployment tags"
        }
      },
      "x-ms-azure-resource": true,
      "description": "Deployment information."
    },
    "DeploymentListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentExtended"
          },
          "description": "An array of deployments."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "List of deployments."
    },
    "TargetResource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the resource."
        },
        "resourceName": {
          "type": "string",
          "description": "The name of the resource."
        },
        "resourceType": {
          "type": "string",
          "description": "The type of the resource."
        }
      },
      "description": "Target resource."
    },
    "HttpMessage": {
      "properties": {
        "content": {
          "type": "object",
          "description": "HTTP message content."
        }
      },
      "description": "HTTP message."
    },
    "DeploymentOperationProperties": {
      "properties": {
        "provisioningOperation": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the current provisioning operation.",
          "enum": [
            "NotSpecified",
            "Create",
            "Delete",
            "Waiting",
            "AzureAsyncOperationWaiting",
            "ResourceCacheWaiting",
            "Action",
            "Read",
            "EvaluateDeploymentOutput",
            "DeploymentCleanup"
          ],
          "x-ms-enum": {
            "name": "ProvisioningOperation",
            "modelAsString": false,
            "values": [
              {
                "value": "NotSpecified",
                "description": "The provisioning operation is not specified."
              },
              {
                "value": "Create",
                "description": "The provisioning operation is create."
              },
              {
                "value": "Delete",
                "description": "The provisioning operation is delete."
              },
              {
                "value": "Waiting",
                "description": "The provisioning operation is waiting."
              },
              {
                "value": "AzureAsyncOperationWaiting",
                "description": "The provisioning operation is waiting Azure async operation."
              },
              {
                "value": "ResourceCacheWaiting",
                "description": "The provisioning operation is waiting for resource cache."
              },
              {
                "value": "Action",
                "description": "The provisioning operation is action."
              },
              {
                "value": "Read",
                "description": "The provisioning operation is read."
              },
              {
                "value": "EvaluateDeploymentOutput",
                "description": "The provisioning operation is evaluate output."
              },
              {
                "value": "DeploymentCleanup",
                "description": "The provisioning operation is cleanup. This operation is part of the 'complete' mode deployment."
              }
            ]
          }
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The state of the provisioning."
        },
        "timestamp": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The date and time of the operation."
        },
        "duration": {
          "readOnly": true,
          "type": "string",
          "description": "The duration of the operation."
        },
        "serviceRequestId": {
          "readOnly": true,
          "type": "string",
          "description": "Deployment operation service request id."
        },
        "statusCode": {
          "readOnly": true,
          "type": "string",
          "description": "Operation status code from the resource provider. This property may not be set if a response has not yet been received."
        },
        "statusMessage": {
          "readOnly": true,
          "description": "Operation status message from the resource provider. This property is optional.  It will only be provided if an error was received from the resource provider.",
          "$ref": "#/definitions/StatusMessage"
        },
        "targetResource": {
          "readOnly": true,
          "$ref": "#/definitions/TargetResource",
          "description": "The target resource."
        },
        "request": {
          "readOnly": true,
          "$ref": "#/definitions/HttpMessage",
          "description": "The HTTP request message."
        },
        "response": {
          "readOnly": true,
          "$ref": "#/definitions/HttpMessage",
          "description": "The HTTP response message."
        }
      },
      "description": "Deployment operation properties."
    },
    "DeploymentOperation": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Full deployment operation ID."
        },
        "operationId": {
          "readOnly": true,
          "type": "string",
          "description": "Deployment operation ID."
        },
        "properties": {
          "$ref": "#/definitions/DeploymentOperationProperties",
          "description": "Deployment properties."
        }
      },
      "description": "Deployment operation information."
    },
    "DeploymentOperationsListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentOperation"
          },
          "description": "An array of deployment operations."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "List of deployment operations."
    },
    "ResourceProviderOperationDisplayProperties": {
      "properties": {
        "publisher": {
          "type": "string",
          "description": "Operation description."
        },
        "provider": {
          "type": "string",
          "description": "Operation provider."
        },
        "resource": {
          "type": "string",
          "description": "Operation resource."
        },
        "operation": {
          "type": "string",
          "description": "Resource provider operation."
        },
        "description": {
          "type": "string",
          "description": "Operation description."
        }
      },
      "description": "Resource provider operation's display properties."
    },
    "SubResource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID"
        }
      },
      "x-ms-azure-resource": true,
      "description": "Sub-resource."
    },
    "TemplateHashResult": {
      "description": "Result of the request to calculate template hash. It contains a string of minified template and its hash.",
      "properties": {
        "minifiedTemplate": {
          "type": "string",
          "description": "The minified template string."
        },
        "templateHash": {
          "type": "string",
          "description": "The template hash."
        }
      }
    },
    "WhatIfPropertyChange": {
      "required": [
        "path",
        "propertyChangeType"
      ],
      "properties": {
        "path": {
          "type": "string",
          "description": "The path of the property."
        },
        "propertyChangeType": {
          "type": "string",
          "description": "The type of property change.",
          "enum": [
            "Create",
            "Delete",
            "Modify",
            "Array",
            "NoEffect"
          ],
          "x-ms-enum": {
            "name": "PropertyChangeType",
            "modelAsString": false,
            "values": [
              {
                "value": "Create",
                "description": "The property does not exist in the current state but is present in the desired state. The property will be created when the deployment is executed."
              },
              {
                "value": "Delete",
                "description": "The property exists in the current state and is missing from the desired state. It will be deleted when the deployment is executed."
              },
              {
                "value": "Modify",
                "description": "The property exists in both current and desired state and is different. The value of the property will change when the deployment is executed."
              },
              {
                "value": "Array",
                "description": "The property is an array and contains nested changes."
              },
              {
                "value": "NoEffect",
                "description": "The property will not be set or updated."
              }
            ]
          }
        },
        "before": {
          "type": "object",
          "description": "The value of the property before the deployment is executed."
        },
        "after": {
          "type": "object",
          "description": "The value of the property after the deployment is executed."
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WhatIfPropertyChange"
          },
          "x-ms-identifiers": [
            "path"
          ],
          "description": "Nested property changes."
        }
      },
      "description": "The predicted change to the resource property."
    },
    "WhatIfChange": {
      "description": "Information about a single resource change predicted by What-If operation.",
      "required": [
        "resourceId",
        "changeType"
      ],
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "Resource ID"
        },
        "changeType": {
          "type": "string",
          "description": "Type of change that will be made to the resource when the deployment is executed.",
          "enum": [
            "Create",
            "Delete",
            "Ignore",
            "Deploy",
            "NoChange",
            "Modify",
            "Unsupported"
          ],
          "x-ms-enum": {
            "name": "ChangeType",
            "modelAsString": false,
            "values": [
              {
                "value": "Create",
                "description": "The resource does not exist in the current state but is present in the desired state. The resource will be created when the deployment is executed."
              },
              {
                "value": "Delete",
                "description": "The resource exists in the current state and is missing from the desired state. The resource will be deleted when the deployment is executed."
              },
              {
                "value": "Ignore",
                "description": "The resource exists in the current state and is missing from the desired state. The resource will not be deployed or modified when the deployment is executed."
              },
              {
                "value": "Deploy",
                "description": "The resource exists in the current state and the desired state and will be redeployed when the deployment is executed. The properties of the resource may or may not change."
              },
              {
                "value": "NoChange",
                "description": "The resource exists in the current state and the desired state and will be redeployed when the deployment is executed. The properties of the resource will not change."
              },
              {
                "value": "Modify",
                "description": "The resource exists in the current state and the desired state and will be redeployed when the deployment is executed. The properties of the resource will change."
              },
              {
                "value": "Unsupported",
                "description": "The resource is not supported by What-If."
              }
            ]
          }
        },
        "unsupportedReason": {
          "type": "string",
          "description": "The explanation about why the resource is unsupported by What-If."
        },
        "before": {
          "type": "object",
          "description": "The snapshot of the resource before the deployment is executed."
        },
        "after": {
          "type": "object",
          "description": "The predicted snapshot of the resource after the deployment is executed."
        },
        "delta": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WhatIfPropertyChange"
          },
          "x-ms-identifiers": [
            "path"
          ],
          "description": "The predicted changes to resource properties."
        }
      }
    },
    "WhatIfOperationProperties": {
      "description": "Deployment operation properties.",
      "properties": {
        "changes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WhatIfChange"
          },
          "x-ms-identifiers": [
            "resourceId",
            "changeType"
          ],
          "description": "List of resource changes predicted by What-If operation."
        }
      }
    },
    "WhatIfOperationResult": {
      "description": "Result of the What-If operation. Contains a list of predicted changes and a URL link to get to the next set of results.",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of the What-If operation."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/WhatIfOperationProperties",
          "description": "What-If operation properties."
        },
        "error": {
          "$ref": "../../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse",
          "description": "Error when What-If operation fails."
        }
      }
    },
    "StatusMessage": {
      "type": "object",
      "description": "Operation status message object.",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of the deployment operation."
        },
        "error": {
          "$ref": "../../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse",
          "description": "The error reported by the operation."
        }
      }
    },
    "ExpressionEvaluationOptions": {
      "properties": {
        "scope": {
          "type": "string",
          "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
          "enum": [
            "NotSpecified",
            "Outer",
            "Inner"
          ],
          "x-ms-enum": {
            "name": "ExpressionEvaluationOptionsScopeType",
            "modelAsString": true
          }
        }
      },
      "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template."
    },
    "ZoneMapping": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "The location of the zone mapping."
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "parameters": {
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The resource scope.",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "GroupIdParameter": {
      "name": "groupId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The management group ID.",
      "x-ms-parameter-location": "method",
      "minLength": 1,
      "maxLength": 90
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Microsoft Azure subscription ID."
    },
    "DeploymentNameParameter": {
      "name": "deploymentName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "x-ms-parameter-location": "method",
      "minLength": 1,
      "maxLength": 64,
      "description": "The name of the deployment."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to use for this operation."
    }
  }
}
