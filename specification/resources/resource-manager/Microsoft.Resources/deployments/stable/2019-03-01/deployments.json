{
  "swagger": "2.0",
  "info": {
    "title": "DeploymentsClient",
    "version": "2019-03-01",
    "description": "Provides operations for working with deployments."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}": {
      "delete": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_DeleteAtSubscriptionScope",
        "summary": "Deletes a deployment from the deployment history.",
        "description": "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deployment to delete.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 64
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-long-running-operation": true
      },
      "head": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CheckExistenceAtSubscriptionScope",
        "description": "Checks whether the deployment exists.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deployment to check.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 64
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CreateOrUpdateAtSubscriptionScope",
        "summary": "Deploys resources at subscription scope.",
        "description": "You can provide the template and parameters directly in the request or link to JSON files.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deployment.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 64
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deployment"
            },
            "description": "Additional parameters supplied to the operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          },
          "201": {
            "description": "Created - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_GetAtSubscriptionScope",
        "description": "Gets a deployment.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deployment to get.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 64
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CancelAtSubscriptionScope",
        "summary": "Cancels a currently running template deployment.",
        "description": "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deployment to cancel.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 64
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/validate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ValidateAtSubscriptionScope",
        "description": "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deployment.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 64
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deployment"
            },
            "description": "Parameters to validate."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the validation result.",
            "schema": {
              "$ref": "#/definitions/DeploymentValidateResult"
            }
          },
          "400": {
            "description": "Returns the validation result.",
            "schema": {
              "$ref": "#/definitions/DeploymentValidateResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ExportTemplateAtSubscriptionScope",
        "description": "Exports the template used for specified deployment.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deployment from which to get the template.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 64
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the template.",
            "schema": {
              "$ref": "#/definitions/DeploymentExportResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ListAtSubscriptionScope",
        "description": "Get all the deployments for a subscription.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to get. If null is passed, returns all deployments."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of deployments.",
            "schema": {
              "$ref": "#/definitions/DeploymentListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/DeploymentExtendedFilter"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}": {
      "delete": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_Delete",
        "summary": "Deletes a deployment from the deployment history.",
        "description": "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. Deleting a template deployment does not affect the state of the resource group. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group with the deployment to delete. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deployment to delete.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 64
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-long-running-operation": true
      },
      "head": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CheckExistence",
        "description": "Checks whether the deployment exists.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group with the deployment to check. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deployment to check.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 64
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CreateOrUpdate",
        "summary": "Deploys resources to a resource group.",
        "description": "You can provide the template and parameters directly in the request or link to JSON files.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group to deploy the resources to. The name is case insensitive. The resource group must already exist.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deployment.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 64
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deployment"
            },
            "description": "Additional parameters supplied to the operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          },
          "201": {
            "description": "Created - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          }
        },
        "x-ms-examples": {
          "Create a deployment that will redeploy the last successful deployment on failure": {
            "$ref": "./examples/PutDeploymentWithOnErrorDeploymentLastSuccessful.json"
          },
          "Create a deployment that will redeploy another deployment on failure": {
            "$ref": "./examples/PutDeploymentWithOnErrorDeploymentSpecificDeployment.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_Get",
        "description": "Gets a deployment.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deployment to get.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 64
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_Cancel",
        "summary": "Cancels a currently running template deployment.",
        "description": "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resource group partially deployed.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deployment to cancel.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 64
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/validate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_Validate",
        "description": "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group the template will be deployed to. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deployment.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 64
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deployment"
            },
            "description": "Parameters to validate."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the validation result.",
            "schema": {
              "$ref": "#/definitions/DeploymentValidateResult"
            }
          },
          "400": {
            "description": "Returns the validation result.",
            "schema": {
              "$ref": "#/definitions/DeploymentValidateResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ExportTemplate",
        "description": "Exports the template used for specified deployment.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deployment from which to get the template.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 64
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the template.",
            "schema": {
              "$ref": "#/definitions/DeploymentExportResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ListByResourceGroup",
        "description": "Get all the deployments for a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group with the deployments to get. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to get. If null is passed, returns all deployments."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of deployments.",
            "schema": {
              "$ref": "#/definitions/DeploymentListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/DeploymentExtendedFilter"
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_GetAtSubscriptionScope",
        "description": "Gets a deployments operation.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deployment.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 64
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the operation to get."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment operation.",
            "schema": {
              "$ref": "#/definitions/DeploymentOperation"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_ListAtSubscriptionScope",
        "description": "Gets all deployments operations for a deployment.",
        "parameters": [
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deployment with the operation to get.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 64
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to return."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Return an array of deployment operations.",
            "schema": {
              "$ref": "#/definitions/DeploymentOperationsListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations/{operationId}": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_Get",
        "description": "Gets a deployments operation.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deployment.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 64
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the operation to get."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the deployment operation.",
            "schema": {
              "$ref": "#/definitions/DeploymentOperation"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_List",
        "description": "Gets all deployments operations for a deployment.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deployment with the operation to get.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 64
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to return."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Return an array of deployment operations.",
            "schema": {
              "$ref": "#/definitions/DeploymentOperationsListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Resources/calculateTemplateHash": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CalculateTemplateHash",
        "description": "Calculate the hash of the given template.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "template",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            },
            "description": "The template provided to calculate hash."
          }
        ],
        "x-ms-examples": {
          "Calculate template hash": {
            "$ref": "./examples/CalculateTemplateHash.json"
          }
        },
        "responses": {
          "200": {
            "description": "OK - Returns the hash.",
            "schema": {
              "$ref": "#/definitions/TemplateHashResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "DeploymentExtendedFilter": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state."
        }
      },
      "description": "Deployment filter."
    },
    "TemplateLink": {
      "properties": {
        "uri": {
          "type": "string",
          "description": "The URI of the template to deploy."
        },
        "contentVersion": {
          "type": "string",
          "description": "If included, must match the ContentVersion in the template."
        }
      },
      "required": [
        "uri"
      ],
      "description": "Entity representing the reference to the template."
    },
    "ParametersLink": {
      "properties": {
        "uri": {
          "type": "string",
          "description": "The URI of the parameters file."
        },
        "contentVersion": {
          "type": "string",
          "description": "If included, must match the ContentVersion in the template."
        }
      },
      "required": [
        "uri"
      ],
      "description": "Entity representing the reference to the deployment parameters."
    },
    "DeploymentProperties": {
      "properties": {
        "template": {
          "type": "object",
          "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
        },
        "templateLink": {
          "$ref": "#/definitions/TemplateLink",
          "description": "The URI of the template. Use either the templateLink property or the template property, but not both."
        },
        "parameters": {
          "type": "object",
          "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
        },
        "parametersLink": {
          "$ref": "#/definitions/ParametersLink",
          "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both."
        },
        "mode": {
          "type": "string",
          "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
          "enum": [
            "Incremental",
            "Complete"
          ],
          "x-ms-enum": {
            "name": "DeploymentMode",
            "modelAsString": false
          }
        },
        "debugSetting": {
          "$ref": "#/definitions/DebugSetting",
          "description": "The debug setting of the deployment."
        },
        "onErrorDeployment": {
          "$ref": "#/definitions/OnErrorDeployment",
          "description": "The deployment on error behavior."
        }
      },
      "required": [
        "mode"
      ],
      "description": "Deployment properties."
    },
    "DebugSetting": {
      "properties": {
        "detailLevel": {
          "type": "string",
          "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
        }
      }
    },
    "Deployment": {
      "properties": {
        "location": {
          "type": "string",
          "description": "The location to store the deployment data."
        },
        "properties": {
          "$ref": "#/definitions/DeploymentProperties",
          "description": "The deployment properties."
        }
      },
      "required": [
        "properties"
      ],
      "description": "Deployment operation parameters."
    },
    "DeploymentExportResult": {
      "properties": {
        "template": {
          "type": "object",
          "description": "The template content."
        }
      },
      "description": "The deployment export result. "
    },
    "CloudError": {
      "x-ms-external": true,
      "properties": {
        "error": {
          "$ref": "../../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse"
        }
      },
      "description": "An error response for a resource management request."
    },
    "ResourceManagementErrorWithDetails": {
      "properties": {
        "code": {
          "readOnly": true,
          "type": "string",
          "description": "The error code returned when exporting the template."
        },
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "The error message describing the export error."
        },
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceManagementErrorWithDetails"
          },
          "description": "Validation error."
        }
      },
      "description": "The detailed error message of resource management."
    },
    "AliasPathType": {
      "properties": {
        "path": {
          "type": "string",
          "description": "The path of an alias."
        },
        "apiVersions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The API versions."
        }
      },
      "description": "The type of the paths for alias. "
    },
    "AliasType": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The alias name."
        },
        "paths": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AliasPathType"
          },
          "description": "The paths for an alias."
        }
      },
      "description": "The alias type. "
    },
    "ProviderResourceType": {
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "The resource type."
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The collection of locations where this resource type can be created."
        },
        "aliases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AliasType"
          },
          "description": "The aliases that are supported by this resource type."
        },
        "apiVersions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The API version."
        },
        "zoneMappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ZoneMapping"
          }
        },
        "capabilities": {
          "type": "string",
          "description": "The additional capabilities offered by this resource type."
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "description": "The additional properties. "
          },
          "description": "The properties."
        }
      },
      "description": "Resource type managed by the resource provider."
    },
    "Provider": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The provider ID."
        },
        "namespace": {
          "type": "string",
          "description": "The namespace of the resource provider."
        },
        "registrationState": {
          "readOnly": true,
          "type": "string",
          "description": "The registration state of the resource provider."
        },
        "registrationPolicy": {
          "readOnly": true,
          "type": "string",
          "description": "The registration policy of the resource provider."
        },
        "resourceTypes": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProviderResourceType"
          },
          "description": "The collection of provider resource types."
        }
      },
      "description": "Resource provider information."
    },
    "BasicDependency": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the dependency."
        },
        "resourceType": {
          "type": "string",
          "description": "The dependency resource type."
        },
        "resourceName": {
          "type": "string",
          "description": "The dependency resource name."
        }
      },
      "description": "Deployment dependency information."
    },
    "Dependency": {
      "properties": {
        "dependsOn": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BasicDependency"
          },
          "description": "The list of dependencies."
        },
        "id": {
          "type": "string",
          "description": "The ID of the dependency."
        },
        "resourceType": {
          "type": "string",
          "description": "The dependency resource type."
        },
        "resourceName": {
          "type": "string",
          "description": "The dependency resource name."
        }
      },
      "description": "Deployment dependency information."
    },
    "DeploymentPropertiesExtended": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The state of the provisioning."
        },
        "correlationId": {
          "readOnly": true,
          "type": "string",
          "description": "The correlation ID of the deployment."
        },
        "timestamp": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of the template deployment."
        },
        "outputs": {
          "type": "object",
          "description": "Key/value pairs that represent deployment output."
        },
        "providers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Provider"
          },
          "description": "The list of resource providers needed for the deployment."
        },
        "dependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dependency"
          },
          "description": "The list of deployment dependencies."
        },
        "template": {
          "type": "object",
          "description": "The template content. Use only one of Template or TemplateLink."
        },
        "templateLink": {
          "$ref": "#/definitions/TemplateLink",
          "description": "The URI referencing the template. Use only one of Template or TemplateLink."
        },
        "parameters": {
          "type": "object",
          "description": "Deployment parameters. Use only one of Parameters or ParametersLink."
        },
        "parametersLink": {
          "$ref": "#/definitions/ParametersLink",
          "description": "The URI referencing the parameters. Use only one of Parameters or ParametersLink."
        },
        "mode": {
          "type": "string",
          "description": "The deployment mode. Possible values are Incremental and Complete.",
          "enum": [
            "Incremental",
            "Complete"
          ],
          "x-ms-enum": {
            "name": "DeploymentMode",
            "modelAsString": false
          }
        },
        "debugSetting": {
          "$ref": "#/definitions/DebugSetting",
          "description": "The debug setting of the deployment."
        },
        "onErrorDeployment": {
          "$ref": "#/definitions/OnErrorDeploymentExtended",
          "description": "The deployment on error behavior."
        },
        "error": {
          "readOnly": true,
          "$ref": "../../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse",
          "description": "The deployment error."
        }
      },
      "description": "Deployment properties with additional details."
    },
    "OnErrorDeployment": {
      "properties": {
        "type": {
          "type": "string",
          "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
          "enum": [
            "LastSuccessful",
            "SpecificDeployment"
          ],
          "x-ms-enum": {
            "name": "OnErrorDeploymentType",
            "modelAsString": false
          }
        },
        "deploymentName": {
          "type": "string",
          "description": "The deployment to be used on error case."
        }
      },
      "description": "Deployment on error behavior."
    },
    "OnErrorDeploymentExtended": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The state of the provisioning for the on error deployment."
        },
        "type": {
          "type": "string",
          "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
          "enum": [
            "LastSuccessful",
            "SpecificDeployment"
          ],
          "x-ms-enum": {
            "name": "OnErrorDeploymentType",
            "modelAsString": false
          }
        },
        "deploymentName": {
          "type": "string",
          "description": "The deployment to be used on error case."
        }
      },
      "description": "Deployment on error behavior with additional details."
    },
    "DeploymentValidateResult": {
      "properties": {
        "error": {
          "$ref": "#/definitions/ResourceManagementErrorWithDetails",
          "description": "Validation error."
        },
        "properties": {
          "$ref": "#/definitions/DeploymentPropertiesExtended",
          "description": "The template deployment properties."
        }
      },
      "description": "Information from validate template deployment response."
    },
    "DeploymentExtended": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The ID of the deployment."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the deployment."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the deployment."
        },
        "location": {
          "type": "string",
          "description": "the location of the deployment."
        },
        "properties": {
          "$ref": "#/definitions/DeploymentPropertiesExtended",
          "description": "Deployment properties."
        }
      },
      "x-ms-azure-resource": true,
      "description": "Deployment information."
    },
    "DeploymentListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentExtended"
          },
          "description": "An array of deployments."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "List of deployments."
    },
    "TargetResource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the resource."
        },
        "resourceName": {
          "type": "string",
          "description": "The name of the resource."
        },
        "resourceType": {
          "type": "string",
          "description": "The type of the resource."
        }
      },
      "description": "Target resource."
    },
    "HttpMessage": {
      "properties": {
        "content": {
          "type": "object",
          "description": "HTTP message content."
        }
      },
      "description": "HTTP message."
    },
    "DeploymentOperationProperties": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The state of the provisioning."
        },
        "timestamp": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The date and time of the operation."
        },
        "serviceRequestId": {
          "readOnly": true,
          "type": "string",
          "description": "Deployment operation service request id."
        },
        "statusCode": {
          "readOnly": true,
          "type": "string",
          "description": "Operation status code."
        },
        "statusMessage": {
          "readOnly": true,
          "type": "object",
          "description": "Operation status message."
        },
        "targetResource": {
          "readOnly": true,
          "$ref": "#/definitions/TargetResource",
          "description": "The target resource."
        },
        "request": {
          "readOnly": true,
          "$ref": "#/definitions/HttpMessage",
          "description": "The HTTP request message."
        },
        "response": {
          "readOnly": true,
          "$ref": "#/definitions/HttpMessage",
          "description": "The HTTP response message."
        }
      },
      "description": "Deployment operation properties."
    },
    "DeploymentOperation": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Full deployment operation ID."
        },
        "operationId": {
          "readOnly": true,
          "type": "string",
          "description": "Deployment operation ID."
        },
        "properties": {
          "$ref": "#/definitions/DeploymentOperationProperties",
          "description": "Deployment properties."
        }
      },
      "description": "Deployment operation information."
    },
    "DeploymentOperationsListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentOperation"
          },
          "description": "An array of deployment operations."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "List of deployment operations."
    },
    "ResourceProviderOperationDisplayProperties": {
      "properties": {
        "publisher": {
          "type": "string",
          "description": "Operation description."
        },
        "provider": {
          "type": "string",
          "description": "Operation provider."
        },
        "resource": {
          "type": "string",
          "description": "Operation resource."
        },
        "operation": {
          "type": "string",
          "description": "Resource provider operation."
        },
        "description": {
          "type": "string",
          "description": "Operation description."
        }
      },
      "description": "Resource provider operation's display properties."
    },
    "SubResource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID"
        }
      },
      "x-ms-azure-resource": true,
      "description": "Sub-resource."
    },
    "TemplateHashResult": {
      "description": "Result of the request to calculate template hash. It contains a string of minified template and its hash.",
      "properties": {
        "minifiedTemplate": {
          "type": "string",
          "description": "The minified template string."
        },
        "templateHash": {
          "type": "string",
          "description": "The template hash."
        }
      }
    },
    "ZoneMapping": {
      "properties": {
        "location": {
          "type": "string",
          "description": "The location of the zone mapping."
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID of the target subscription."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to use for this operation."
    }
  }
}
