{
  "swagger": "2.0",
  "info": {
    "title": "DeploymentStacksClient",
    "version": "2024-03-01",
    "description": "The APIs listed in this specification can be used to manage Deployment stack resources through the Azure Resource Manager."
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Resources/deploymentStacks": {
      "get": {
        "operationId": "DeploymentStacks_ListAtManagementGroup",
        "tags": [
          "DeploymentStacks"
        ],
        "description": "Lists all the Deployment stacks within the specified Management Group.",
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of Deployment stacks.",
            "schema": {
              "$ref": "#/definitions/DeploymentStackListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        },
        "x-ms-examples": {
          "DeploymentStacksManagementGroupList": {
            "$ref": "./examples/DeploymentStackManagementGroupList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Resources/deploymentStacks/{deploymentStackName}": {
      "get": {
        "operationId": "DeploymentStacks_GetAtManagementGroup",
        "tags": [
          "DeploymentStacks"
        ],
        "description": "Gets a Deployment stack with a given name at Management Group scope.",
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the Deployment stack.",
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        },
        "x-ms-examples": {
          "DeploymentStacksManagementGroupGet": {
            "$ref": "./examples/DeploymentStackManagementGroupGet.json"
          }
        }
      },
      "put": {
        "operationId": "DeploymentStacks_CreateOrUpdateAtManagementGroup",
        "tags": [
          "DeploymentStacks"
        ],
        "description": "Creates or updates a Deployment stack at Management Group scope.",
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "deploymentStack",
            "in": "body",
            "description": "Deployment stack supplied to the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - The Deployment stack update request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            }
          },
          "201": {
            "description": "Deployment stack created.",
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        },
        "x-ms-examples": {
          "DeploymentStacksManagementGroupCreateOrUpdate": {
            "$ref": "./examples/DeploymentStackManagementGroupCreate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "DeploymentStacks_DeleteAtManagementGroup",
        "tags": [
          "DeploymentStacks"
        ],
        "description": "Deletes a Deployment stack by name at Management Group scope. When operation completes, status code 200 returned without content.",
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "#/parameters/DeleteResourceParameter"
          },
          {
            "$ref": "#/parameters/DeleteResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/DeleteManagementGroupParameter"
          },
          {
            "$ref": "#/parameters/BypassStackOutOfSyncErrorParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Deployment stack deleted."
          },
          "202": {
            "description": "Accepted - Check location header for deletion status.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Deployment stack does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        },
        "x-ms-examples": {
          "DeploymentStacksManagementGroupDelete": {
            "$ref": "./examples/DeploymentStackManagementGroupDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Resources/deploymentStacks/{deploymentStackName}/exportTemplate": {
      "post": {
        "operationId": "DeploymentStacks_ExportTemplateAtManagementGroup",
        "tags": [
          "DeploymentStacks"
        ],
        "description": "Exports the template used to create the Deployment stack at Management Group scope.",
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the Template or TemplateLink payload of the deployment stack.",
            "schema": {
              "$ref": "#/definitions/DeploymentStackTemplateDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        },
        "x-ms-examples": {
          "DeploymentStacksManagementGroupExportTemplate": {
            "$ref": "./examples/DeploymentStackManagementGroupExportTemplate.json"
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Resources/deploymentStacks/{deploymentStackName}/validate": {
      "post": {
        "operationId": "DeploymentStacks_ValidateStackAtManagementGroup",
        "tags": [
          "DeploymentStacks"
        ],
        "description": "Runs preflight validation on the Management Group scoped Deployment stack template to verify its acceptance to Azure Resource Manager.",
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "deploymentStack",
            "in": "body",
            "description": "Deployment stack to validate.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - The validation operation result.",
            "schema": {
              "$ref": "#/definitions/DeploymentStackValidateResult"
            }
          },
          "202": {
            "description": "Accepted - The validation request has been accepted for processing and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Retry-After": {
                "type": "string",
                "description": "Number of seconds to wait before polling for status."
              }
            }
          },
          "400": {
            "description": "Failed - The validation operation result.",
            "schema": {
              "$ref": "#/definitions/DeploymentStackValidateResult"
            },
            "x-ms-error-response": false
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        },
        "x-ms-examples": {
          "DeploymentStacksManagementGroupValidate": {
            "$ref": "./examples/DeploymentStackManagementGroupValidate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deploymentStacks": {
      "get": {
        "operationId": "DeploymentStacks_ListAtSubscription",
        "tags": [
          "DeploymentStacks"
        ],
        "description": "Lists all the Deployment stacks within the specified Subscription.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of Deployment stacks.",
            "schema": {
              "$ref": "#/definitions/DeploymentStackListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        },
        "x-ms-examples": {
          "DeploymentStacksSubscriptionList": {
            "$ref": "./examples/DeploymentStackSubscriptionList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deploymentStacks/{deploymentStackName}": {
      "get": {
        "operationId": "DeploymentStacks_GetAtSubscription",
        "tags": [
          "DeploymentStacks"
        ],
        "description": "Gets a Deployment stack with a given name at Subscription scope.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the Deployment stack.",
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        },
        "x-ms-examples": {
          "DeploymentStacksSubscriptionGet": {
            "$ref": "./examples/DeploymentStackSubscriptionGet.json"
          }
        }
      },
      "put": {
        "operationId": "DeploymentStacks_CreateOrUpdateAtSubscription",
        "tags": [
          "DeploymentStacks"
        ],
        "description": "Creates or updates a Deployment stack at Subscription scope.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "deploymentStack",
            "in": "body",
            "description": "Deployment stack supplied to the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - The Deployment stack update request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            }
          },
          "201": {
            "description": "Deployment stack created.",
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        },
        "x-ms-examples": {
          "DeploymentStacksSubscriptionCreateOrUpdate": {
            "$ref": "./examples/DeploymentStackSubscriptionCreate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "DeploymentStacks_DeleteAtSubscription",
        "tags": [
          "DeploymentStacks"
        ],
        "description": "Deletes a Deployment stack by name at Subscription scope. When operation completes, status code 200 returned without content.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "#/parameters/DeleteResourceParameter"
          },
          {
            "$ref": "#/parameters/DeleteResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/DeleteManagementGroupParameter"
          },
          {
            "$ref": "#/parameters/BypassStackOutOfSyncErrorParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Deployment stack deleted."
          },
          "202": {
            "description": "Accepted - Check location header for deletion status.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Deployment stack does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        },
        "x-ms-examples": {
          "DeploymentStacksSubscriptionDelete": {
            "$ref": "./examples/DeploymentStackSubscriptionDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deploymentStacks/{deploymentStackName}/exportTemplate": {
      "post": {
        "operationId": "DeploymentStacks_ExportTemplateAtSubscription",
        "tags": [
          "DeploymentStacks"
        ],
        "description": "Exports the template used to create the Deployment stack at Subscription scope.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the Template or TemplateLink payload of the deployment stack.",
            "schema": {
              "$ref": "#/definitions/DeploymentStackTemplateDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        },
        "x-ms-examples": {
          "DeploymentStacksSubscriptionExportTemplate": {
            "$ref": "./examples/DeploymentStackSubscriptionExportTemplate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deploymentStacks/{deploymentStackName}/validate": {
      "post": {
        "operationId": "DeploymentStacks_ValidateStackAtSubscription",
        "tags": [
          "DeploymentStacks"
        ],
        "description": "Runs preflight validation on the Subscription scoped Deployment stack template to verify its acceptance to Azure Resource Manager.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "deploymentStack",
            "in": "body",
            "description": "Deployment stack to validate.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - The validation operation result.",
            "schema": {
              "$ref": "#/definitions/DeploymentStackValidateResult"
            }
          },
          "202": {
            "description": "Accepted - The validation request has been accepted for processing and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Retry-After": {
                "type": "string",
                "description": "Number of seconds to wait before polling for status."
              }
            }
          },
          "400": {
            "description": "Failed - The validation operation result.",
            "schema": {
              "$ref": "#/definitions/DeploymentStackValidateResult"
            },
            "x-ms-error-response": false
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        },
        "x-ms-examples": {
          "DeploymentStacksSubscriptionValidate": {
            "$ref": "./examples/DeploymentStackSubscriptionValidate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentStacks": {
      "get": {
        "operationId": "DeploymentStacks_ListAtResourceGroup",
        "tags": [
          "DeploymentStacks"
        ],
        "description": "Lists all the Deployment stacks within the specified Resource Group.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of Deployment stacks.",
            "schema": {
              "$ref": "#/definitions/DeploymentStackListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        },
        "x-ms-examples": {
          "DeploymentStacksResourceGroupList": {
            "$ref": "./examples/DeploymentStackResourceGroupList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentStacks/{deploymentStackName}": {
      "get": {
        "operationId": "DeploymentStacks_GetAtResourceGroup",
        "tags": [
          "DeploymentStacks"
        ],
        "description": "Gets a Deployment stack with a given name at Resource Group scope.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the Deployment stack.",
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        },
        "x-ms-examples": {
          "DeploymentStacksResourceGroupGet": {
            "$ref": "./examples/DeploymentStackResourceGroupGet.json"
          }
        }
      },
      "put": {
        "operationId": "DeploymentStacks_CreateOrUpdateAtResourceGroup",
        "tags": [
          "DeploymentStacks"
        ],
        "description": "Creates or updates a Deployment stack at Resource Group scope.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "deploymentStack",
            "in": "body",
            "description": "Deployment stack supplied to the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - The Deployment stack update request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            }
          },
          "201": {
            "description": "Deployment stack created.",
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        },
        "x-ms-examples": {
          "DeploymentStacksResourceGroupCreateOrUpdate": {
            "$ref": "./examples/DeploymentStackResourceGroupCreate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "DeploymentStacks_DeleteAtResourceGroup",
        "tags": [
          "DeploymentStacks"
        ],
        "description": "Deletes a Deployment stack by name at Resource Group scope. When operation completes, status code 200 returned without content.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "#/parameters/DeleteResourceParameter"
          },
          {
            "$ref": "#/parameters/DeleteResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/DeleteManagementGroupParameter"
          },
          {
            "$ref": "#/parameters/BypassStackOutOfSyncErrorParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Deployment stack deleted."
          },
          "202": {
            "description": "Accepted - Check location header for deletion status.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Deployment stack does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        },
        "x-ms-examples": {
          "DeploymentStacksResourceGroupDelete": {
            "$ref": "./examples/DeploymentStackResourceGroupDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentStacks/{deploymentStackName}/exportTemplate": {
      "post": {
        "operationId": "DeploymentStacks_ExportTemplateAtResourceGroup",
        "tags": [
          "DeploymentStacks"
        ],
        "description": "Exports the template used to create the Deployment stack at Resource Group scope.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the Template or TemplateLink payload of the deployment stack.",
            "schema": {
              "$ref": "#/definitions/DeploymentStackTemplateDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        },
        "x-ms-examples": {
          "DeploymentStacksResourceGroupExportTemplate": {
            "$ref": "./examples/DeploymentStackExportTemplate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentStacks/{deploymentStackName}/validate": {
      "post": {
        "operationId": "DeploymentStacks_ValidateStackAtResourceGroup",
        "tags": [
          "DeploymentStacks"
        ],
        "description": "Runs preflight validation on the Resource Group scoped Deployment stack template to verify its acceptance to Azure Resource Manager.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "deploymentStack",
            "in": "body",
            "description": "Deployment stack to validate.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - The validation operation result.",
            "schema": {
              "$ref": "#/definitions/DeploymentStackValidateResult"
            }
          },
          "202": {
            "description": "Accepted - The validation request has been accepted for processing and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Retry-After": {
                "type": "string",
                "description": "Number of seconds to wait before polling for status."
              }
            }
          },
          "400": {
            "description": "Failed - The validation operation result.",
            "schema": {
              "$ref": "#/definitions/DeploymentStackValidateResult"
            },
            "x-ms-error-response": false
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        },
        "x-ms-examples": {
          "DeploymentStacksResourceGroupValidate": {
            "$ref": "./examples/DeploymentStackResourceGroupValidate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "ActionOnUnmanage": {
      "type": "object",
      "description": "Defines the behavior of resources that are no longer managed after the stack is updated or deleted.",
      "properties": {
        "resources": {
          "$ref": "#/definitions/DeploymentStacksDeleteDetachEnum"
        },
        "resourceGroups": {
          "$ref": "#/definitions/DeploymentStacksDeleteDetachEnum"
        },
        "managementGroups": {
          "$ref": "#/definitions/DeploymentStacksDeleteDetachEnum"
        }
      },
      "required": [
        "resources"
      ]
    },
    "AzureResourceBase": {
      "type": "object",
      "description": "Common properties for all Azure resources.",
      "properties": {
        "id": {
          "type": "string",
          "description": "String Id used to locate any resource on Azure.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of this resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Type of this resource.",
          "readOnly": true
        },
        "systemData": {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "DenySettings": {
      "type": "object",
      "description": "Defines how resources deployed by the Deployment stack are locked.",
      "properties": {
        "mode": {
          "type": "string",
          "description": "denySettings Mode that defines denied actions.",
          "enum": [
            "denyDelete",
            "denyWriteAndDelete",
            "none"
          ],
          "x-ms-enum": {
            "name": "DenySettingsMode",
            "modelAsString": true,
            "values": [
              {
                "value": "denyDelete",
                "description": "Authorized users are able to read and modify the resources, but cannot delete."
              },
              {
                "value": "denyWriteAndDelete",
                "description": "Authorized users can read from a resource, but cannot modify or delete it."
              },
              {
                "value": "none",
                "description": "No denyAssignments have been applied."
              }
            ]
          }
        },
        "excludedPrincipals": {
          "type": "array",
          "description": "List of AAD principal IDs excluded from the lock. Up to 5 principals are permitted.",
          "items": {
            "type": "string"
          }
        },
        "excludedActions": {
          "type": "array",
          "description": "List of role-based management operations that are excluded from the denySettings. Up to 200 actions are permitted. If the denySetting mode is set to 'denyWriteAndDelete', then the following actions are automatically appended to 'excludedActions': '*\\/read' and 'Microsoft.Authorization/locks/delete'. If the denySetting mode is set to 'denyDelete', then the following actions are automatically appended to 'excludedActions': 'Microsoft.Authorization/locks/delete'. Duplicate actions will be removed.",
          "items": {
            "type": "string"
          }
        },
        "applyToChildScopes": {
          "type": "boolean",
          "description": "DenySettings will be applied to child resource scopes of every managed resource with a deny assignment."
        }
      },
      "required": [
        "mode"
      ]
    },
    "DeploymentParameter": {
      "type": "object",
      "description": "Deployment parameter for the template.",
      "properties": {
        "value": {
          "description": "Input value to the parameter."
        },
        "type": {
          "type": "string",
          "description": "Type of the value."
        },
        "reference": {
          "$ref": "#/definitions/KeyVaultParameterReference",
          "description": "Azure Key Vault parameter reference."
        }
      }
    },
    "DeploymentStack": {
      "type": "object",
      "description": "Deployment stack object.",
      "properties": {
        "location": {
          "type": "string",
          "description": "The location of the Deployment stack. It cannot be changed after creation. It must be one of the supported Azure locations.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Deployment stack resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/DeploymentStackProperties",
          "description": "Deployment stack properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AzureResourceBase"
        }
      ]
    },
    "DeploymentStackListResult": {
      "type": "object",
      "description": "List of Deployment stacks.",
      "properties": {
        "value": {
          "type": "array",
          "description": "An array of Deployment stacks.",
          "items": {
            "$ref": "#/definitions/DeploymentStack"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results.",
          "readOnly": true
        }
      }
    },
    "DeploymentStackProperties": {
      "type": "object",
      "description": "Deployment stack properties.",
      "properties": {
        "template": {
          "type": "object",
          "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both.",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "templateLink": {
          "$ref": "#/definitions/DeploymentStacksTemplateLink",
          "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "parameters": {
          "type": "object",
          "description": "Name and value pairs that define the deployment parameters for the template. Use this element when providing the parameter values directly in the request, rather than linking to an existing parameter file. Use either the parametersLink property or the parameters property, but not both.",
          "additionalProperties": {
            "$ref": "#/definitions/DeploymentParameter"
          }
        },
        "parametersLink": {
          "$ref": "#/definitions/DeploymentStacksParametersLink",
          "description": "The URI of parameters file. Use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both."
        },
        "actionOnUnmanage": {
          "$ref": "#/definitions/ActionOnUnmanage",
          "description": "Defines the behavior of resources that are no longer managed after the Deployment stack is updated or deleted."
        },
        "debugSetting": {
          "$ref": "#/definitions/DeploymentStacksDebugSetting",
          "description": "The debug setting of the deployment."
        },
        "bypassStackOutOfSyncError": {
          "type": "boolean",
          "description": "Flag to bypass service errors that indicate the stack resource list is not correctly synchronized.",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "deploymentScope": {
          "type": "string",
          "description": "The scope at which the initial deployment should be created. If a scope is not specified, it will default to the scope of the deployment stack. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroupId}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}')."
        },
        "description": {
          "type": "string",
          "description": "Deployment stack description. Max length of 4096 characters.",
          "maxLength": 4096
        },
        "denySettings": {
          "$ref": "#/definitions/DenySettings",
          "description": "Defines how resources deployed by the stack are locked."
        },
        "provisioningState": {
          "type": "string",
          "description": "State of the deployment stack.",
          "enum": [
            "creating",
            "validating",
            "waiting",
            "deploying",
            "canceling",
            "updatingDenyAssignments",
            "deletingResources",
            "succeeded",
            "failed",
            "canceled",
            "deleting"
          ],
          "x-ms-enum": {
            "name": "DeploymentStackProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "correlationId": {
          "type": "string",
          "description": "The correlation id of the last Deployment stack upsert or delete operation. It is in GUID format and is used for tracing.",
          "readOnly": true,
          "example": "01234567-89ab-cdef-0000-000000000000"
        },
        "detachedResources": {
          "type": "array",
          "description": "An array of resources that were detached during the most recent Deployment stack update. Detached means that the resource was removed from the template, but no relevant deletion operations were specified. So, the resource still exists while no longer being associated with the stack.",
          "items": {
            "$ref": "#/definitions/ResourceReference"
          },
          "readOnly": true
        },
        "deletedResources": {
          "type": "array",
          "description": "An array of resources that were deleted during the most recent Deployment stack update. Deleted means that the resource was removed from the template and relevant deletion operations were specified.",
          "items": {
            "$ref": "#/definitions/ResourceReference"
          },
          "readOnly": true
        },
        "failedResources": {
          "type": "array",
          "description": "An array of resources that failed to reach goal state during the most recent update. Each resourceId is accompanied by an error message.",
          "items": {
            "$ref": "#/definitions/ResourceReferenceExtended"
          },
          "readOnly": true
        },
        "resources": {
          "type": "array",
          "description": "An array of resources currently managed by the deployment stack.",
          "items": {
            "$ref": "#/definitions/ManagedResourceReference"
          },
          "readOnly": true
        },
        "deploymentId": {
          "type": "string",
          "description": "The resourceId of the deployment resource created by the deployment stack.",
          "readOnly": true
        },
        "outputs": {
          "type": "object",
          "description": "The outputs of the deployment resource created by the deployment stack.",
          "readOnly": true
        },
        "duration": {
          "type": "string",
          "description": "The duration of the last successful Deployment stack update.",
          "readOnly": true
        }
      },
      "required": [
        "actionOnUnmanage",
        "denySettings"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeploymentStacksError"
        }
      ]
    },
    "DeploymentStackTemplateDefinition": {
      "type": "object",
      "description": "Export Template specific properties of the Deployment stack.",
      "properties": {
        "template": {
          "type": "object",
          "description": "The template content. Use this element to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
        },
        "templateLink": {
          "$ref": "#/definitions/DeploymentStacksTemplateLink",
          "type": "object",
          "description": "The URI of the template. Use either the templateLink property or the template property, but not both."
        }
      }
    },
    "DeploymentStackValidateProperties": {
      "type": "object",
      "description": "The Deployment stack validation result details.",
      "properties": {
        "actionOnUnmanage": {
          "$ref": "#/definitions/ActionOnUnmanage",
          "description": "Defines the behavior of resources that are no longer managed after the Deployment stack is updated or deleted."
        },
        "correlationId": {
          "type": "string",
          "description": "The correlation id of the Deployment stack validate operation. It is in GUID format and is used for tracing.",
          "example": "01234567-89ab-cdef-0000-000000000000"
        },
        "denySettings": {
          "$ref": "#/definitions/DenySettings",
          "description": "The Deployment stack deny settings."
        },
        "deploymentScope": {
          "type": "string",
          "description": "The Deployment stack deployment scope."
        },
        "description": {
          "type": "string",
          "description": "The Deployment stack validation description."
        },
        "parameters": {
          "type": "object",
          "description": "Deployment parameters.",
          "additionalProperties": {
            "$ref": "#/definitions/DeploymentParameter"
          }
        },
        "templateLink": {
          "$ref": "#/definitions/DeploymentStacksTemplateLink",
          "description": "The URI of the template."
        },
        "validatedResources": {
          "type": "array",
          "description": "The array of resources that were validated.",
          "items": {
            "$ref": "#/definitions/ResourceReference"
          }
        }
      }
    },
    "DeploymentStackValidateResult": {
      "type": "object",
      "description": "The Deployment stack validation result.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeploymentStackValidateProperties",
          "description": "The validation result details."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AzureResourceBase"
        },
        {
          "$ref": "#/definitions/DeploymentStacksError"
        }
      ]
    },
    "DeploymentStacksDebugSetting": {
      "type": "object",
      "description": "The debug setting.",
      "properties": {
        "detailLevel": {
          "type": "string",
          "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information that is being passed in during deployment. By logging information about the request or response, sensitive data that is retrieved through the deployment operations could potentially be exposed."
        }
      }
    },
    "DeploymentStacksDeleteDetachEnum": {
      "type": "string",
      "description": "Specifies an action for a newly unmanaged resource. Delete will attempt to delete the resource from Azure. Detach will leave the resource in it's current state.",
      "enum": [
        "delete",
        "detach"
      ],
      "x-ms-enum": {
        "name": "DeploymentStacksDeleteDetachEnum",
        "modelAsString": true
      }
    },
    "DeploymentStacksError": {
      "type": "object",
      "description": "Deployment Stacks error response.",
      "properties": {
        "error": {
          "$ref": "../../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorDetail"
        }
      }
    },
    "DeploymentStacksParametersLink": {
      "type": "object",
      "description": "Entity representing the reference to the deployment parameters.",
      "properties": {
        "uri": {
          "type": "string",
          "description": "The URI of the parameters file."
        },
        "contentVersion": {
          "type": "string",
          "description": "If included, must match the ContentVersion in the template."
        }
      },
      "required": [
        "uri"
      ]
    },
    "DeploymentStacksTemplateLink": {
      "type": "object",
      "description": "Entity representing the reference to the template.",
      "properties": {
        "uri": {
          "type": "string",
          "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
        },
        "id": {
          "type": "string",
          "description": "The resourceId of a Template Spec. Use either the id or uri property, but not both."
        },
        "relativePath": {
          "type": "string",
          "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs."
        },
        "queryString": {
          "type": "string",
          "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
        },
        "contentVersion": {
          "type": "string",
          "description": "If included, must match the ContentVersion in the template."
        }
      }
    },
    "KeyVaultParameterReference": {
      "type": "object",
      "description": "Azure Key Vault parameter reference.",
      "properties": {
        "keyVault": {
          "$ref": "#/definitions/KeyVaultReference",
          "description": "Azure Key Vault reference."
        },
        "secretName": {
          "type": "string",
          "description": "Azure Key Vault secret name."
        },
        "secretVersion": {
          "type": "string",
          "description": "Azure Key Vault secret version."
        }
      },
      "required": [
        "keyVault",
        "secretName"
      ]
    },
    "KeyVaultReference": {
      "type": "object",
      "description": "Azure Key Vault reference.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure Key Vault resourceId."
        }
      },
      "required": [
        "id"
      ]
    },
    "ManagedResourceReference": {
      "type": "object",
      "description": "The managed resource model.",
      "properties": {
        "status": {
          "type": "string",
          "description": "Current management state of the resource in the deployment stack.",
          "enum": [
            "managed",
            "removeDenyFailed",
            "deleteFailed"
          ],
          "x-ms-enum": {
            "name": "ResourceStatusMode",
            "modelAsString": true,
            "values": [
              {
                "value": "managed",
                "description": "This resource is managed by the deployment stack."
              },
              {
                "value": "removeDenyFailed",
                "description": "Unable to remove the deny assignment on resource."
              },
              {
                "value": "deleteFailed",
                "description": "Unable to delete the resource from Azure. The delete will be retried on the next stack deployment, or can be deleted manually."
              }
            ]
          }
        },
        "denyStatus": {
          "type": "string",
          "description": "denyAssignment settings applied to the resource.",
          "default": "none",
          "enum": [
            "denyDelete",
            "notSupported",
            "inapplicable",
            "denyWriteAndDelete",
            "removedBySystem",
            "none"
          ],
          "x-ms-enum": {
            "name": "DenyStatusMode",
            "modelAsString": true,
            "values": [
              {
                "value": "denyDelete",
                "description": "Authorized users are able to read and modify the resources, but cannot delete."
              },
              {
                "value": "notSupported",
                "description": "Resource type does not support denyAssignments."
              },
              {
                "value": "inapplicable",
                "description": "denyAssignments are not supported on resources outside the scope of the deployment stack."
              },
              {
                "value": "denyWriteAndDelete",
                "description": "Authorized users can only read from a resource, but cannot modify or delete it."
              },
              {
                "value": "removedBySystem",
                "description": "Deny assignment has been removed by Azure due to a resource management change (management group move, etc.)"
              },
              {
                "value": "none",
                "description": "No denyAssignments have been applied."
              }
            ]
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceReference"
        }
      ]
    },
    "ResourceReference": {
      "type": "object",
      "description": "The resourceId model.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resourceId of a resource managed by the deployment stack.",
          "readOnly": true
        }
      }
    },
    "ResourceReferenceExtended": {
      "type": "object",
      "description": "The resourceId extended model. This is used to document failed resources with a resourceId and a corresponding error.",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceReference"
        },
        {
          "$ref": "#/definitions/DeploymentStacksError"
        }
      ]
    }
  },
  "parameters": {
    "BypassStackOutOfSyncErrorParameter": {
      "name": "bypassStackOutOfSyncError",
      "in": "query",
      "description": "Flag to bypass service errors that indicate the stack resource list is not correctly synchronized.",
      "required": false,
      "type": "boolean",
      "x-ms-parameter-location": "method"
    },
    "DeleteManagementGroupParameter": {
      "name": "unmanageAction.ManagementGroups",
      "in": "query",
      "description": "Flag to indicate delete rather than detach for unmanaged management groups.",
      "required": false,
      "type": "string",
      "enum": [
        "delete",
        "detach"
      ],
      "x-ms-enum": {
        "name": "UnmanageActionManagementGroupMode",
        "modelAsString": true
      },
      "x-ms-parameter-location": "method"
    },
    "DeleteResourceGroupParameter": {
      "name": "unmanageAction.ResourceGroups",
      "in": "query",
      "description": "Flag to indicate delete rather than detach for unmanaged resource groups.",
      "required": false,
      "type": "string",
      "enum": [
        "delete",
        "detach"
      ],
      "x-ms-enum": {
        "name": "UnmanageActionResourceGroupMode",
        "modelAsString": true
      },
      "x-ms-parameter-location": "method"
    },
    "DeleteResourceParameter": {
      "name": "unmanageAction.Resources",
      "in": "query",
      "description": "Flag to indicate delete rather than detach for unmanaged resources.",
      "required": false,
      "type": "string",
      "enum": [
        "delete",
        "detach"
      ],
      "x-ms-enum": {
        "name": "UnmanageActionResourceMode",
        "modelAsString": true
      },
      "x-ms-parameter-location": "method"
    },
    "DeploymentStackNameParameter": {
      "name": "deploymentStackName",
      "in": "path",
      "description": "Name of the deployment stack.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupIdParameter": {
      "name": "managementGroupId",
      "in": "path",
      "description": "Management Group id.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "x-ms-parameter-location": "method"
    }
  }
}