{
  "swagger": "2.0",
  "info": {
    "title": "Desktop Virtualization API Client",
    "version": "2023-09-05",
    "description": "// FIXME: (missing-service-description) Add service description",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Workspaces"
    },
    {
      "name": "PrivateEndpointConnectionWithSystemDataOperationGroup"
    },
    {
      "name": "ScalingPlans"
    },
    {
      "name": "ScalingPlanPooledSchedules"
    },
    {
      "name": "ScalingPlanPersonalSchedules"
    },
    {
      "name": "ApplicationGroups"
    },
    {
      "name": "Applications"
    },
    {
      "name": "Desktops"
    },
    {
      "name": "HostPools"
    },
    {
      "name": "UserSessions"
    },
    {
      "name": "SessionHosts"
    },
    {
      "name": "MsixPackages"
    }
  ],
  "paths": {
    "/providers/Microsoft.DesktopVirtualization/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/applicationGroups": {
      "get": {
        "operationId": "ApplicationGroups_ListBySubscription",
        "tags": [
          "ApplicationGroups"
        ],
        "description": "List applicationGroups in subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplicationGroupListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApplicationGroup_List": {
            "$ref": "./examples/ApplicationGroups_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/hostPools": {
      "get": {
        "operationId": "HostPools_List",
        "tags": [
          "HostPools"
        ],
        "description": "List hostPools in subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HostPoolListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HostPool_List": {
            "$ref": "./examples/HostPools_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/scalingPlans": {
      "get": {
        "operationId": "ScalingPlans_ListBySubscription",
        "tags": [
          "ScalingPlans"
        ],
        "description": "List scaling plans in subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScalingPlanListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlans_ListBySubscription": {
            "$ref": "./examples/ScalingPlans_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/workspaces": {
      "get": {
        "operationId": "Workspaces_ListBySubscription",
        "tags": [
          "Workspaces"
        ],
        "description": "List workspaces in subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkspaceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workspace_ListBySubscription": {
            "$ref": "./examples/Workspaces_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups": {
      "get": {
        "operationId": "ApplicationGroups_ListByResourceGroup",
        "tags": [
          "ApplicationGroups"
        ],
        "description": "List applicationGroups.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter expression. Valid properties for filtering are applicationGroupType.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplicationGroupListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApplicationGroup_ListByResourceGroup": {
            "$ref": "./examples/ApplicationGroups_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}": {
      "get": {
        "operationId": "ApplicationGroups_Get",
        "tags": [
          "ApplicationGroups"
        ],
        "description": "Get an application group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "applicationGroupName",
            "in": "path",
            "description": "The name of the application group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplicationGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApplicationGroup_Get": {
            "$ref": "./examples/ApplicationGroups_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ApplicationGroups_CreateOrUpdate",
        "tags": [
          "ApplicationGroups"
        ],
        "description": "Create or update an applicationGroup.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "applicationGroupName",
            "in": "path",
            "description": "The name of the application group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "applicationGroup",
            "in": "body",
            "description": "Object containing ApplicationGroup definitions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationGroup"
            },
            "x-ms-client-name": "applicationGroup"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ApplicationGroup' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApplicationGroup"
            }
          },
          "201": {
            "description": "Resource 'ApplicationGroup' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApplicationGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApplicationGroup_Create": {
            "$ref": "./examples/ApplicationGroups_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "operationId": "ApplicationGroups_Update",
        "tags": [
          "ApplicationGroups"
        ],
        "description": "Update an applicationGroup.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "applicationGroupName",
            "in": "path",
            "description": "The name of the application group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "applicationGroup",
            "in": "body",
            "description": "Object containing ApplicationGroup definitions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationGroupPatch"
            },
            "x-ms-client-name": "applicationGroup"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplicationGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApplicationGroups_Update": {
            "$ref": "./examples/ApplicationGroups_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "ApplicationGroups_Delete",
        "tags": [
          "ApplicationGroups"
        ],
        "description": "Remove an applicationGroup.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "applicationGroupName",
            "in": "path",
            "description": "The name of the application group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApplicationGroup_Delete": {
            "$ref": "./examples/ApplicationGroups_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}/applications": {
      "get": {
        "operationId": "Applications_List",
        "tags": [
          "Applications"
        ],
        "description": "List applications.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "applicationGroupName",
            "in": "path",
            "description": "The name of the application group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplicationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Applications_List": {
            "$ref": "./examples/Applications_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}/applications/{applicationName}": {
      "get": {
        "operationId": "Applications_Get",
        "tags": [
          "Applications"
        ],
        "description": "Get an application.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "applicationGroupName",
            "in": "path",
            "description": "The name of the application group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application within the specified application group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Application_Get": {
            "$ref": "./examples/Applications_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Applications_CreateOrUpdate",
        "tags": [
          "Applications"
        ],
        "description": "Create or update an application.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "applicationGroupName",
            "in": "path",
            "description": "The name of the application group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application within the specified application group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "application",
            "in": "body",
            "description": "Object containing Application definitions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Application"
            },
            "x-ms-client-name": "application"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Application' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          },
          "201": {
            "description": "Resource 'Application' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Application_Create": {
            "$ref": "./examples/Applications_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "operationId": "Applications_Update",
        "tags": [
          "Applications"
        ],
        "description": "Update an application.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "applicationGroupName",
            "in": "path",
            "description": "The name of the application group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application within the specified application group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "application",
            "in": "body",
            "description": "Object containing Application definitions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationPatch"
            },
            "x-ms-client-name": "application"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Application_Update": {
            "$ref": "./examples/Applications_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "Applications_Delete",
        "tags": [
          "Applications"
        ],
        "description": "Remove an application.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "applicationGroupName",
            "in": "path",
            "description": "The name of the application group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application within the specified application group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Application_Delete": {
            "$ref": "./examples/Applications_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}/desktops": {
      "get": {
        "operationId": "Desktops_List",
        "tags": [
          "Desktops"
        ],
        "description": "List desktops.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "applicationGroupName",
            "in": "path",
            "description": "The name of the application group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DesktopListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Desktop_List": {
            "$ref": "./examples/Desktops_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}/desktops/{desktopName}": {
      "get": {
        "operationId": "Desktops_Get",
        "tags": [
          "Desktops"
        ],
        "description": "Get a desktop.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "applicationGroupName",
            "in": "path",
            "description": "The name of the application group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "desktopName",
            "in": "path",
            "description": "The name of the desktop within the specified desktop group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Desktop"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Desktop_Get": {
            "$ref": "./examples/Desktops_Get.json"
          }
        }
      },
      "patch": {
        "operationId": "Desktops_Update",
        "tags": [
          "Desktops"
        ],
        "description": "Update a desktop.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "applicationGroupName",
            "in": "path",
            "description": "The name of the application group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "desktopName",
            "in": "path",
            "description": "The name of the desktop within the specified desktop group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "desktop",
            "in": "body",
            "description": "Object containing Desktop definitions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DesktopPatch"
            },
            "x-ms-client-name": "desktop"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Desktop"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Desktop_Update": {
            "$ref": "./examples/Desktops_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}/startMenuItems/{subscriptionId}/{resourceGroupName}/{applicationGroupName}": {
      "get": {
        "operationId": "StartMenuItems_List",
        "tags": [
          "ApplicationGroups"
        ],
        "description": "List start menu items in the given application group.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "applicationGroupName",
            "in": "path",
            "description": "The name of the application group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedStartMenuItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StartMenuItem_List": {
            "$ref": "./examples/StartMenuItems_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools": {
      "get": {
        "operationId": "HostPools_ListByResourceGroup",
        "tags": [
          "HostPools"
        ],
        "description": "List hostPools.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HostPoolListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HostPool_ListByResourceGroup": {
            "$ref": "./examples/HostPools_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}": {
      "get": {
        "operationId": "HostPools_Get",
        "tags": [
          "HostPools"
        ],
        "description": "Get a host pool.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hostPoolName",
            "in": "path",
            "description": "The name of the host pool within the specified resource group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HostPool"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HostPool_Get": {
            "$ref": "./examples/HostPools_Get.json"
          }
        }
      },
      "put": {
        "operationId": "HostPools_CreateOrUpdate",
        "tags": [
          "HostPools"
        ],
        "description": "Create or update a host pool.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hostPoolName",
            "in": "path",
            "description": "The name of the host pool within the specified resource group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "hostPool",
            "in": "body",
            "description": "Object containing HostPool definitions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HostPool"
            },
            "x-ms-client-name": "hostPool"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'HostPool' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/HostPool"
            }
          },
          "201": {
            "description": "Resource 'HostPool' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/HostPool"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HostPool_Create": {
            "$ref": "./examples/HostPools_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "operationId": "HostPools_Update",
        "tags": [
          "HostPools"
        ],
        "description": "Update a host pool.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hostPoolName",
            "in": "path",
            "description": "The name of the host pool within the specified resource group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "hostPool",
            "in": "body",
            "description": "Object containing HostPool definitions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HostPoolPatch"
            },
            "x-ms-client-name": "hostPool"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HostPool"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HostPool_Update": {
            "$ref": "./examples/HostPools_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "HostPools_Delete",
        "tags": [
          "HostPools"
        ],
        "description": "Remove a host pool.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force flag to delete sessionHost.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "hostPoolName",
            "in": "path",
            "description": "The name of the host pool within the specified resource group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HostPool_Delete": {
            "$ref": "./examples/HostPools_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/expand": {
      "post": {
        "operationId": "MsixImages_Expand",
        "tags": [
          "HostPools"
        ],
        "description": "Expands and Lists MSIX packages in an Image, given the Image Path.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hostPoolName",
            "in": "path",
            "description": "The name of the host pool within the specified resource group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "msixImageURI",
            "in": "body",
            "description": "Object containing URI to MSIX Image",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MsixImageURI"
            },
            "x-ms-client-name": "msixImageURI"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PagedExpandMsixImage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MsixImage_Expand": {
            "$ref": "./examples/MsixImages_Expand.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/msixPackages": {
      "get": {
        "operationId": "MSIXPackages_List",
        "tags": [
          "MsixPackages"
        ],
        "description": "List MSIX packages in hostpool.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "hostPoolName",
            "in": "path",
            "description": "The name of the host pool within the specified resource group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MsixPackageListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MSIXPackage_List": {
            "$ref": "./examples/MSIXPackages_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/msixPackages/{msixPackageFullName}": {
      "get": {
        "operationId": "MSIXPackages_Get",
        "tags": [
          "MsixPackages"
        ],
        "description": "Get a msixpackage.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hostPoolName",
            "in": "path",
            "description": "The name of the host pool within the specified resource group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "msixPackageFullName",
            "in": "path",
            "description": "The version specific package full name of the MSIX package within specified hostpool",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 100
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MsixPackage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MSIXPackage_Get": {
            "$ref": "./examples/MSIXPackages_Get.json"
          }
        }
      },
      "put": {
        "operationId": "MSIXPackages_CreateOrUpdate",
        "tags": [
          "MsixPackages"
        ],
        "description": "Create or update a MSIX package.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hostPoolName",
            "in": "path",
            "description": "The name of the host pool within the specified resource group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "msixPackageFullName",
            "in": "path",
            "description": "The version specific package full name of the MSIX package within specified hostpool",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 100
          },
          {
            "name": "msixPackage",
            "in": "body",
            "description": "Object containing  MSIX Package definitions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MsixPackage"
            },
            "x-ms-client-name": "msixPackage"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'MsixPackage' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/MsixPackage"
            }
          },
          "201": {
            "description": "Resource 'MsixPackage' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/MsixPackage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MSIXPackage_Create": {
            "$ref": "./examples/MSIXPackages_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "operationId": "MSIXPackages_Update",
        "tags": [
          "MsixPackages"
        ],
        "description": "Update an  MSIX Package.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hostPoolName",
            "in": "path",
            "description": "The name of the host pool within the specified resource group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "msixPackageFullName",
            "in": "path",
            "description": "The version specific package full name of the MSIX package within specified hostpool",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 100
          },
          {
            "name": "msixPackage",
            "in": "body",
            "description": "Object containing MSIX Package definitions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MsixPackagePatch"
            },
            "x-ms-client-name": "msixPackage"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MsixPackage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MSIXPackage_Update": {
            "$ref": "./examples/MSIXPackages_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "MSIXPackages_Delete",
        "tags": [
          "MsixPackages"
        ],
        "description": "Remove an MSIX Package.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hostPoolName",
            "in": "path",
            "description": "The name of the host pool within the specified resource group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "msixPackageFullName",
            "in": "path",
            "description": "The version specific package full name of the MSIX package within specified hostpool",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 100
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MSIXPackage_Delete": {
            "$ref": "./examples/MSIXPackages_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/privateEndpointConnections": {
      "get": {
        "operationId": "PrivateEndpointConnectionsOperations_ListByHostPool",
        "description": "List private endpoint connections associated with hostpool.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "hostPoolName",
            "in": "path",
            "description": "The name of the host pool within the specified resource group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionWithSystemDataListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "PrivateEndpointConnectionsOperations_GetByHostPool",
        "description": "Get a private endpoint connection.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "hostPoolName",
            "in": "path",
            "description": "The name of the host pool within the specified resource group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionWithSystemData"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnectionsOperations_UpdateByHostPool",
        "description": "Approve or reject a private endpoint connection.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "hostPoolName",
            "in": "path",
            "description": "The name of the host pool within the specified resource group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "connection",
            "in": "body",
            "description": "Object containing the updated connection.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionWithSystemData"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "PrivateEndpointConnectionsOperations_DeleteByHostPool",
        "description": "Remove a connection.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "hostPoolName",
            "in": "path",
            "description": "The name of the host pool within the specified resource group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/privateLinkResources/{subscriptionId}/{resourceGroupName}/{hostPoolName}": {
      "get": {
        "operationId": "PrivateLinkResources_ListByHostPool",
        "tags": [
          "HostPools"
        ],
        "description": "List the private link resources available for this hostpool.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "hostPoolName",
            "in": "path",
            "description": "The name of the host pool within the specified resource group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedPrivateLinkResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "PrivateLinkResources_ListByHostPool": {
            "$ref": "./examples/PrivateLinkResources_ListByHostPool.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/retrieveRegistrationToken": {
      "post": {
        "operationId": "HostPools_RetrieveRegistrationToken",
        "tags": [
          "HostPools"
        ],
        "description": "Registration token of the host pool.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hostPoolName",
            "in": "path",
            "description": "The name of the host pool within the specified resource group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RegistrationInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HostPools_RetrieveRegistrationToken_Post": {
            "$ref": "./examples/HostPools_RetrieveRegistrationToken.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/scalingPlans/{subscriptionId}/{resourceGroupName}/{hostPoolName}": {
      "get": {
        "operationId": "ScalingPlans_ListByHostPool",
        "tags": [
          "HostPools"
        ],
        "description": "List scaling plan associated with hostpool.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "hostPoolName",
            "in": "path",
            "description": "The name of the host pool within the specified resource group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ScalingPlanListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlan_ListByHostPool": {
            "$ref": "./examples/ScalingPlans_ListByHostPool.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHosts": {
      "get": {
        "operationId": "SessionHosts_List",
        "tags": [
          "SessionHosts"
        ],
        "description": "List sessionHosts.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "hostPoolName",
            "in": "path",
            "description": "The name of the host pool within the specified resource group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SessionHostListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SessionHost_List": {
            "$ref": "./examples/SessionHosts_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHosts/{sessionHostName}": {
      "get": {
        "operationId": "SessionHosts_Get",
        "tags": [
          "SessionHosts"
        ],
        "description": "Get a session host.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hostPoolName",
            "in": "path",
            "description": "The name of the host pool within the specified resource group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "sessionHostName",
            "in": "path",
            "description": "The name of the session host within the specified host pool",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 48
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SessionHost"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SessionHost_Get": {
            "$ref": "./examples/SessionHosts_Get.json"
          }
        }
      },
      "patch": {
        "operationId": "SessionHosts_Update",
        "tags": [
          "SessionHosts"
        ],
        "description": "Update a session host.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force flag to update assign, unassign or reassign personal desktop.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "hostPoolName",
            "in": "path",
            "description": "The name of the host pool within the specified resource group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "sessionHostName",
            "in": "path",
            "description": "The name of the session host within the specified host pool",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 48
          },
          {
            "name": "sessionHost",
            "in": "body",
            "description": "Object containing SessionHost definitions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SessionHostPatch"
            },
            "x-ms-client-name": "sessionHost"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SessionHost"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SessionHost_Update": {
            "$ref": "./examples/SessionHosts_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "SessionHosts_Delete",
        "tags": [
          "SessionHosts"
        ],
        "description": "Remove a SessionHost.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force flag to force sessionHost deletion even when userSession exists.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "hostPoolName",
            "in": "path",
            "description": "The name of the host pool within the specified resource group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "sessionHostName",
            "in": "path",
            "description": "The name of the session host within the specified host pool",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 48
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SessionHost_Delete": {
            "$ref": "./examples/SessionHosts_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHosts/{sessionHostName}/userSessions": {
      "get": {
        "operationId": "UserSessions_List",
        "tags": [
          "UserSessions"
        ],
        "description": "List userSessions.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "hostPoolName",
            "in": "path",
            "description": "The name of the host pool within the specified resource group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "sessionHostName",
            "in": "path",
            "description": "The name of the session host within the specified host pool",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 48
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UserSessionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "UserSession_List": {
            "$ref": "./examples/UserSessions_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHosts/{sessionHostName}/userSessions/{userSessionId}": {
      "get": {
        "operationId": "UserSessions_Get",
        "tags": [
          "UserSessions"
        ],
        "description": "Get a userSession.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hostPoolName",
            "in": "path",
            "description": "The name of the host pool within the specified resource group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "sessionHostName",
            "in": "path",
            "description": "The name of the session host within the specified host pool",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 48
          },
          {
            "name": "userSessionId",
            "in": "path",
            "description": "The name of the user session within the specified session host",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UserSession"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "UserSession_Get": {
            "$ref": "./examples/UserSessions_Get.json"
          }
        }
      },
      "delete": {
        "operationId": "UserSessions_Delete",
        "tags": [
          "UserSessions"
        ],
        "description": "Remove a userSession.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force flag to login off userSession.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "hostPoolName",
            "in": "path",
            "description": "The name of the host pool within the specified resource group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "sessionHostName",
            "in": "path",
            "description": "The name of the session host within the specified host pool",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 48
          },
          {
            "name": "userSessionId",
            "in": "path",
            "description": "The name of the user session within the specified session host",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "UserSession_Delete": {
            "$ref": "./examples/UserSessions_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHosts/{sessionHostName}/userSessions/{userSessionId}/disconnect": {
      "post": {
        "operationId": "UserSessions_Disconnect",
        "tags": [
          "UserSessions"
        ],
        "description": "Disconnect a userSession.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hostPoolName",
            "in": "path",
            "description": "The name of the host pool within the specified resource group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "sessionHostName",
            "in": "path",
            "description": "The name of the session host within the specified host pool",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 48
          },
          {
            "name": "userSessionId",
            "in": "path",
            "description": "The name of the user session within the specified session host",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 24
          }
        ],
        "responses": {
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "UserSession_Disconnect_Post": {
            "$ref": "./examples/UserSessions_Disconnect.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHosts/{sessionHostName}/userSessions/{userSessionId}/sendMessage": {
      "post": {
        "operationId": "UserSessions_SendMessage",
        "tags": [
          "UserSessions"
        ],
        "description": "Send a message to a user.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "hostPoolName",
            "in": "path",
            "description": "The name of the host pool within the specified resource group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "sessionHostName",
            "in": "path",
            "description": "The name of the session host within the specified host pool",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 48
          },
          {
            "name": "userSessionId",
            "in": "path",
            "description": "The name of the user session within the specified session host",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 24
          },
          {
            "name": "sendMessage",
            "in": "body",
            "description": "Object containing message includes title and message body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendMessage"
            },
            "x-ms-client-name": "sendMessage"
          }
        ],
        "responses": {
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "UserSession_SendMessage_Post": {
            "$ref": "./examples/UserSessions_SendMessage.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/userSessions/{subscriptionId}/{resourceGroupName}/{hostPoolName}": {
      "get": {
        "operationId": "UserSessions_ListByHostPool",
        "tags": [
          "HostPools"
        ],
        "description": "List userSessions.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "hostPoolName",
            "in": "path",
            "description": "The name of the host pool within the specified resource group",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter expression. Valid properties for filtering are userprincipalname and sessionstate.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/UserSessionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "UserSession_ListByHostPool": {
            "$ref": "./examples/UserSessions_ListByHostPool.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans": {
      "get": {
        "operationId": "ScalingPlans_ListByResourceGroup",
        "tags": [
          "ScalingPlans"
        ],
        "description": "List scaling plans.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScalingPlanListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlans_ListByResourceGroup": {
            "$ref": "./examples/ScalingPlans_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}": {
      "get": {
        "operationId": "ScalingPlans_Get",
        "tags": [
          "ScalingPlans"
        ],
        "description": "Get a scaling plan.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scalingPlanName",
            "in": "path",
            "description": "The name of the scaling plan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScalingPlan"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlans_Get": {
            "$ref": "./examples/ScalingPlans_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ScalingPlans_Create",
        "tags": [
          "ScalingPlans"
        ],
        "description": "Create or update a scaling plan.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scalingPlanName",
            "in": "path",
            "description": "The name of the scaling plan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "scalingPlan",
            "in": "body",
            "description": "Object containing scaling plan definitions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScalingPlan"
            },
            "x-ms-client-name": "scalingPlan"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ScalingPlan' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ScalingPlan"
            }
          },
          "201": {
            "description": "Resource 'ScalingPlan' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ScalingPlan"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlans_Create": {
            "$ref": "./examples/ScalingPlans_Create.json"
          }
        }
      },
      "patch": {
        "operationId": "ScalingPlans_Update",
        "tags": [
          "ScalingPlans"
        ],
        "description": "Update a scaling plan.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scalingPlanName",
            "in": "path",
            "description": "The name of the scaling plan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "scalingPlan",
            "in": "body",
            "description": "Object containing scaling plan definitions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScalingPlanPatch"
            },
            "x-ms-client-name": "scalingPlan"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScalingPlan"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlans_Update": {
            "$ref": "./examples/ScalingPlans_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "ScalingPlans_Delete",
        "tags": [
          "ScalingPlans"
        ],
        "description": "Remove a scaling plan.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scalingPlanName",
            "in": "path",
            "description": "The name of the scaling plan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlans_Delete": {
            "$ref": "./examples/ScalingPlans_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}/personalSchedules": {
      "get": {
        "operationId": "ScalingPlanPersonalSchedules_List",
        "tags": [
          "ScalingPlanPersonalSchedules"
        ],
        "description": "List ScalingPlanPersonalSchedules.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "scalingPlanName",
            "in": "path",
            "description": "The name of the scaling plan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScalingPlanPersonalScheduleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlanPersonalSchedules_List": {
            "$ref": "./examples/ScalingPlanPersonalSchedules_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}/personalSchedules/{scalingPlanScheduleName}": {
      "get": {
        "operationId": "ScalingPlanPersonalSchedules_Get",
        "tags": [
          "ScalingPlanPersonalSchedules"
        ],
        "description": "Get a ScalingPlanPersonalSchedule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scalingPlanName",
            "in": "path",
            "description": "The name of the scaling plan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "scalingPlanScheduleName",
            "in": "path",
            "description": "The name of the ScalingPlanSchedule",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScalingPlanPersonalSchedule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlanPersonalSchedules_Get": {
            "$ref": "./examples/ScalingPlanPersonalSchedules_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ScalingPlanPersonalSchedules_Create",
        "tags": [
          "ScalingPlanPersonalSchedules"
        ],
        "description": "Create or update a ScalingPlanPersonalSchedule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scalingPlanName",
            "in": "path",
            "description": "The name of the scaling plan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "scalingPlanScheduleName",
            "in": "path",
            "description": "The name of the ScalingPlanSchedule",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          },
          {
            "name": "scalingPlanSchedule",
            "in": "body",
            "description": "Object containing ScalingPlanPersonalSchedule definitions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScalingPlanPersonalSchedule"
            },
            "x-ms-client-name": "scalingPlanSchedule"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ScalingPlanPersonalSchedule' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ScalingPlanPersonalSchedule"
            }
          },
          "201": {
            "description": "Resource 'ScalingPlanPersonalSchedule' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ScalingPlanPersonalSchedule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlanPersonalSchedules_Create": {
            "$ref": "./examples/ScalingPlanPersonalSchedules_Create.json"
          }
        }
      },
      "patch": {
        "operationId": "ScalingPlanPersonalSchedules_Update",
        "tags": [
          "ScalingPlanPersonalSchedules"
        ],
        "description": "Update a ScalingPlanPersonalSchedule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scalingPlanName",
            "in": "path",
            "description": "The name of the scaling plan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "scalingPlanScheduleName",
            "in": "path",
            "description": "The name of the ScalingPlanSchedule",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          },
          {
            "name": "scalingPlanSchedule",
            "in": "body",
            "description": "Object containing ScalingPlanPersonalSchedule definitions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScalingPlanPersonalSchedulePatch"
            },
            "x-ms-client-name": "scalingPlanSchedule"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScalingPlanPersonalSchedule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlanPersonalSchedules_Update": {
            "$ref": "./examples/ScalingPlanPersonalSchedules_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "ScalingPlanPersonalSchedules_Delete",
        "tags": [
          "ScalingPlanPersonalSchedules"
        ],
        "description": "Remove a ScalingPlanPersonalSchedule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scalingPlanName",
            "in": "path",
            "description": "The name of the scaling plan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "scalingPlanScheduleName",
            "in": "path",
            "description": "The name of the ScalingPlanSchedule",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlanPersonalSchedules_Delete": {
            "$ref": "./examples/ScalingPlanPersonalSchedules_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}/pooledSchedules": {
      "get": {
        "operationId": "ScalingPlanPooledSchedules_List",
        "tags": [
          "ScalingPlanPooledSchedules"
        ],
        "description": "List ScalingPlanPooledSchedules.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "scalingPlanName",
            "in": "path",
            "description": "The name of the scaling plan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScalingPlanPooledScheduleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlanPooledSchedules_List": {
            "$ref": "./examples/ScalingPlanPooledSchedules_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}/pooledSchedules/{scalingPlanScheduleName}": {
      "get": {
        "operationId": "ScalingPlanPooledSchedules_Get",
        "tags": [
          "ScalingPlanPooledSchedules"
        ],
        "description": "Get a ScalingPlanPooledSchedule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scalingPlanName",
            "in": "path",
            "description": "The name of the scaling plan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "scalingPlanScheduleName",
            "in": "path",
            "description": "The name of the ScalingPlanSchedule",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScalingPlanPooledSchedule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlanPooledSchedules_Get": {
            "$ref": "./examples/ScalingPlanPooledSchedules_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ScalingPlanPooledSchedules_Create",
        "tags": [
          "ScalingPlanPooledSchedules"
        ],
        "description": "Create or update a ScalingPlanPooledSchedule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scalingPlanName",
            "in": "path",
            "description": "The name of the scaling plan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "scalingPlanScheduleName",
            "in": "path",
            "description": "The name of the ScalingPlanSchedule",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          },
          {
            "name": "scalingPlanSchedule",
            "in": "body",
            "description": "Object containing ScalingPlanPooledSchedule definitions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScalingPlanPooledSchedule"
            },
            "x-ms-client-name": "scalingPlanSchedule"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ScalingPlanPooledSchedule' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ScalingPlanPooledSchedule"
            }
          },
          "201": {
            "description": "Resource 'ScalingPlanPooledSchedule' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ScalingPlanPooledSchedule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlanPooledSchedules_Create": {
            "$ref": "./examples/ScalingPlanPooledSchedules_Create.json"
          }
        }
      },
      "patch": {
        "operationId": "ScalingPlanPooledSchedules_Update",
        "tags": [
          "ScalingPlanPooledSchedules"
        ],
        "description": "Update a ScalingPlanPooledSchedule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scalingPlanName",
            "in": "path",
            "description": "The name of the scaling plan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "scalingPlanScheduleName",
            "in": "path",
            "description": "The name of the ScalingPlanSchedule",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          },
          {
            "name": "scalingPlanSchedule",
            "in": "body",
            "description": "Object containing ScalingPlanPooledSchedule definitions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScalingPlanPooledSchedulePatch"
            },
            "x-ms-client-name": "scalingPlanSchedule"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScalingPlanPooledSchedule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlanPooledSchedules_Update": {
            "$ref": "./examples/ScalingPlanPooledSchedules_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "ScalingPlanPooledSchedules_Delete",
        "tags": [
          "ScalingPlanPooledSchedules"
        ],
        "description": "Remove a ScalingPlanPooledSchedule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scalingPlanName",
            "in": "path",
            "description": "The name of the scaling plan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "scalingPlanScheduleName",
            "in": "path",
            "description": "The name of the ScalingPlanSchedule",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlanPooledSchedules_Delete": {
            "$ref": "./examples/ScalingPlanPooledSchedules_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces": {
      "get": {
        "operationId": "Workspaces_ListByResourceGroup",
        "tags": [
          "Workspaces"
        ],
        "description": "List workspaces.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkspaceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workspace_ListByResourceGroup": {
            "$ref": "./examples/Workspaces_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}": {
      "get": {
        "operationId": "Workspaces_Get",
        "tags": [
          "Workspaces"
        ],
        "description": "Get a workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workspace_Get": {
            "$ref": "./examples/Workspaces_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Workspaces_CreateOrUpdate",
        "tags": [
          "Workspaces"
        ],
        "description": "Create or update a workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "workspace",
            "in": "body",
            "description": "Object containing Workspace definitions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Workspace"
            },
            "x-ms-client-name": "workspace"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Workspace' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "201": {
            "description": "Resource 'Workspace' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workspace_Create": {
            "$ref": "./examples/Workspaces_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "operationId": "Workspaces_Update",
        "tags": [
          "Workspaces"
        ],
        "description": "Update a workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "workspace",
            "in": "body",
            "description": "Object containing Workspace definitions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkspacePatch"
            },
            "x-ms-client-name": "workspace"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workspace_Update": {
            "$ref": "./examples/Workspaces_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "Workspaces_Delete",
        "tags": [
          "Workspaces"
        ],
        "description": "Remove a workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workspace_Delete": {
            "$ref": "./examples/Workspaces_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}/privateEndpointConnections": {
      "get": {
        "operationId": "PrivateEndpointConnections_ListByWorkspace",
        "tags": [
          "PrivateEndpointConnectionWithSystemDataOperationGroup"
        ],
        "description": "List private endpoint connections.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionWithSystemDataListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_ListByWorkspace": {
            "$ref": "./examples/PrivateEndpointConnections_ListByWorkspace.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "PrivateEndpointConnections_GetByWorkspace",
        "tags": [
          "PrivateEndpointConnectionWithSystemDataOperationGroup"
        ],
        "description": "Get a private endpoint connection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionWithSystemData"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_GetByWorkspace": {
            "$ref": "./examples/PrivateEndpointConnections_GetByWorkspace.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnections_UpdateByWorkspace",
        "tags": [
          "PrivateEndpointConnectionWithSystemDataOperationGroup"
        ],
        "description": "Approve or reject a private endpoint connection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "connection",
            "in": "body",
            "description": "Object containing the updated connection.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionWithSystemData"
            },
            "x-ms-client-name": "connection"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateEndpointConnectionWithSystemData' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionWithSystemData"
            }
          },
          "201": {
            "description": "Resource 'PrivateEndpointConnectionWithSystemData' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionWithSystemData"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_UpdateByWorkspace": {
            "$ref": "./examples/PrivateEndpointConnections_UpdateByWorkspace.json"
          }
        }
      },
      "delete": {
        "operationId": "PrivateEndpointConnections_DeleteByWorkspace",
        "tags": [
          "PrivateEndpointConnectionWithSystemDataOperationGroup"
        ],
        "description": "Remove a connection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_DeleteByWorkspace": {
            "$ref": "./examples/PrivateEndpointConnections_DeleteByWorkspace.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}/privateLinkResources/{subscriptionId}/{resourceGroupName}/{workspaceName}": {
      "get": {
        "operationId": "PrivateLinkResources_ListByWorkspace",
        "tags": [
          "Workspaces"
        ],
        "description": "List the private link resources available for this workspace.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedPrivateLinkResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "PrivateLinkResources_ListByWorkspace": {
            "$ref": "./examples/PrivateLinkResources_ListByWorkspace.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "AgentUpdatePatchProperties": {
      "type": "object",
      "description": "The session host configuration for updating agent, monitoring agent, and stack component.",
      "properties": {
        "type": {
          "$ref": "#/definitions/SessionHostComponentUpdateType",
          "description": "The type of maintenance for session host components."
        },
        "useSessionHostLocalTime": {
          "type": "boolean",
          "description": "Whether to use localTime of the virtual machine."
        },
        "maintenanceWindowTimeZone": {
          "type": "string",
          "description": "Time zone for maintenance as defined in https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.findsystemtimezonebyid?view=net-5.0. Must be set if useLocalTime is true."
        },
        "maintenanceWindows": {
          "type": "array",
          "description": "List of maintenance windows. Maintenance windows are 2 hours long.",
          "items": {
            "$ref": "#/definitions/MaintenanceWindowPatchProperties"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "AgentUpdateProperties": {
      "type": "object",
      "description": "The session host configuration for updating agent, monitoring agent, and stack component.",
      "properties": {
        "type": {
          "$ref": "#/definitions/SessionHostComponentUpdateType",
          "description": "The type of maintenance for session host components."
        },
        "useSessionHostLocalTime": {
          "type": "boolean",
          "description": "Whether to use localTime of the virtual machine."
        },
        "maintenanceWindowTimeZone": {
          "type": "string",
          "description": "Time zone for maintenance as defined in https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.findsystemtimezonebyid?view=net-5.0. Must be set if useLocalTime is true."
        },
        "maintenanceWindows": {
          "type": "array",
          "description": "List of maintenance windows. Maintenance windows are 2 hours long.",
          "items": {
            "$ref": "#/definitions/MaintenanceWindowProperties"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Application": {
      "type": "object",
      "description": "Schema for Application properties.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApplicationProperties",
          "description": "Detailed properties for Application",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ApplicationGroup": {
      "type": "object",
      "description": "Represents a ApplicationGroup definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApplicationGroupProperties",
          "description": "Detailed properties for ApplicationGroup",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ApplicationGroupListResult": {
      "type": "object",
      "description": "The response of a ApplicationGroup list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ApplicationGroup items on this page",
          "items": {
            "$ref": "#/definitions/ApplicationGroup"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ApplicationGroupPatch": {
      "type": "object",
      "description": "ApplicationGroup properties that can be patched.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "tags to be updated",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/ApplicationGroupPatchProperties",
          "description": "ApplicationGroup properties that can be patched.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ApplicationGroupPatchProperties": {
      "type": "object",
      "description": "ApplicationGroup properties that can be patched.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of ApplicationGroup."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of ApplicationGroup."
        },
        "showInFeed": {
          "type": "boolean",
          "description": "Boolean representing whether the applicationGroup is show in the feed."
        }
      }
    },
    "ApplicationGroupProperties": {
      "type": "object",
      "description": "Schema for ApplicationGroup properties.",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "ObjectId of ApplicationGroup. (internal use)",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of ApplicationGroup."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of ApplicationGroup."
        },
        "hostPoolArmPath": {
          "type": "string",
          "description": "HostPool arm path of ApplicationGroup."
        },
        "workspaceArmPath": {
          "type": "string",
          "description": "Workspace arm path of ApplicationGroup.",
          "readOnly": true
        },
        "applicationGroupType": {
          "$ref": "#/definitions/ApplicationGroupType",
          "description": "Resource Type of ApplicationGroup."
        },
        "cloudPcResource": {
          "type": "boolean",
          "description": "Is cloud pc resource.",
          "readOnly": true
        },
        "showInFeed": {
          "type": "boolean",
          "description": "Boolean representing whether the applicationGroup is show in the feed."
        }
      },
      "required": [
        "hostPoolArmPath",
        "applicationGroupType"
      ]
    },
    "ApplicationGroupType": {
      "type": "string",
      "description": "Resource Type of ApplicationGroup.",
      "enum": [
        "RemoteApp",
        "Desktop"
      ],
      "x-ms-enum": {
        "name": "ApplicationGroupType",
        "modelAsString": true
      }
    },
    "ApplicationListResult": {
      "type": "object",
      "description": "The response of a Application list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Application items on this page",
          "items": {
            "$ref": "#/definitions/Application"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ApplicationPatch": {
      "type": "object",
      "description": "Application properties that can be patched.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "tags to be updated",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/ApplicationPatchProperties",
          "description": "Detailed properties for Application",
          "x-ms-client-flatten": true
        }
      }
    },
    "ApplicationPatchProperties": {
      "type": "object",
      "description": "Application properties that can be patched.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of Application."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of Application."
        },
        "filePath": {
          "type": "string",
          "description": "Specifies a path for the executable file for the application."
        },
        "commandLineSetting": {
          "$ref": "#/definitions/CommandLineSetting",
          "description": "Specifies whether this published application can be launched with command line arguments provided by the client, command line arguments specified at publish time, or no command line arguments at all."
        },
        "commandLineArguments": {
          "type": "string",
          "description": "Command Line Arguments for Application."
        },
        "showInPortal": {
          "type": "boolean",
          "description": "Specifies whether to show the RemoteApp program in the RD Web Access server."
        },
        "iconPath": {
          "type": "string",
          "description": "Path to icon."
        },
        "iconIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Index of the icon."
        },
        "msixPackageFamilyName": {
          "type": "string",
          "description": "Specifies the package family name for MSIX applications"
        },
        "msixPackageApplicationId": {
          "type": "string",
          "description": "Specifies the package application Id for MSIX applications"
        },
        "applicationType": {
          "$ref": "#/definitions/RemoteApplicationType",
          "description": "Resource Type of Application."
        }
      }
    },
    "ApplicationProperties": {
      "type": "object",
      "description": "Schema for Application properties.",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "ObjectId of Application. (internal use)",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of Application."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of Application."
        },
        "filePath": {
          "type": "string",
          "description": "Specifies a path for the executable file for the application."
        },
        "msixPackageFamilyName": {
          "type": "string",
          "description": "Specifies the package family name for MSIX applications",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "msixPackageApplicationId": {
          "type": "string",
          "description": "Specifies the package application Id for MSIX applications",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "applicationType": {
          "$ref": "#/definitions/RemoteApplicationType",
          "description": "Resource Type of Application.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "commandLineSetting": {
          "$ref": "#/definitions/CommandLineSetting",
          "description": "Specifies whether this published application can be launched with command line arguments provided by the client, command line arguments specified at publish time, or no command line arguments at all."
        },
        "commandLineArguments": {
          "type": "string",
          "description": "Command Line Arguments for Application."
        },
        "showInPortal": {
          "type": "boolean",
          "description": "Specifies whether to show the RemoteApp program in the RD Web Access server."
        },
        "iconPath": {
          "type": "string",
          "description": "Path to icon."
        },
        "iconIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Index of the icon."
        },
        "iconHash": {
          "type": "string",
          "description": "Hash of the icon.",
          "readOnly": true
        },
        "iconContent": {
          "type": "string",
          "description": "the icon a 64 bit string as a byte array.",
          "readOnly": true
        }
      },
      "required": [
        "commandLineSetting"
      ]
    },
    "ApplicationType": {
      "type": "string",
      "description": "Application type of application.",
      "enum": [
        "RemoteApp",
        "Desktop"
      ],
      "x-ms-enum": {
        "name": "ApplicationType",
        "modelAsString": true
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "Azure.ResourceManager.Foundations.SkuTier": {
      "type": "string",
      "description": "Available service tiers for the SKU.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": true,
        "values": [
          {
            "name": "Free",
            "value": "Free",
            "description": "The Free service tier."
          },
          {
            "name": "Basic",
            "value": "Basic",
            "description": "The Basic service tier."
          },
          {
            "name": "Standard",
            "value": "Standard",
            "description": "The Standard service tier."
          },
          {
            "name": "Premium",
            "value": "Premium",
            "description": "The Premium service tier."
          }
        ]
      }
    },
    "CloudError": {
      "type": "object",
      "description": "Cloud error object.",
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorProperties",
          "description": "Cloud error object properties."
        }
      }
    },
    "CloudErrorProperties": {
      "type": "object",
      "description": "Cloud error object properties.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code"
        },
        "message": {
          "type": "string",
          "description": "Error message indicating why the operation failed."
        }
      }
    },
    "CommandLineSetting": {
      "type": "string",
      "description": "Specifies whether this published application can be launched with command line arguments provided by the client, command line arguments specified at publish time, or no command line arguments at all.",
      "enum": [
        "DoNotAllow",
        "Allow",
        "Require"
      ],
      "x-ms-enum": {
        "name": "CommandLineSetting",
        "modelAsString": true
      }
    },
    "DayOfWeek": {
      "type": "string",
      "description": "Day of the week.",
      "enum": [
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
        "Sunday"
      ],
      "x-ms-enum": {
        "name": "DayOfWeek",
        "modelAsString": false
      }
    },
    "Desktop": {
      "type": "object",
      "description": "Schema for Desktop properties.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DesktopProperties",
          "description": "Detailed properties for Desktop",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DesktopListResult": {
      "type": "object",
      "description": "The response of a Desktop list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Desktop items on this page",
          "items": {
            "$ref": "#/definitions/Desktop"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DesktopPatch": {
      "type": "object",
      "description": "Desktop properties that can be patched.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "tags to be updated",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/DesktopPatchProperties",
          "description": "Detailed properties for Desktop",
          "x-ms-client-flatten": true
        }
      }
    },
    "DesktopPatchProperties": {
      "type": "object",
      "description": "Desktop properties that can be patched.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of Desktop."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of Desktop."
        }
      }
    },
    "DesktopProperties": {
      "type": "object",
      "description": "Schema for Desktop properties.",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "ObjectId of Desktop. (internal use)",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of Desktop."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of Desktop."
        },
        "iconHash": {
          "type": "string",
          "description": "Hash of the icon.",
          "readOnly": true
        },
        "iconContent": {
          "type": "string",
          "description": "The icon a 64 bit string as a byte array.",
          "readOnly": true
        }
      }
    },
    "ExpandMsixImage": {
      "type": "object",
      "description": "Represents the definition of contents retrieved after expanding the MSIX Image.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ExpandMsixImageProperties",
          "description": "Detailed properties for ExpandMsixImage",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ExpandMsixImageProperties": {
      "type": "object",
      "description": "Schema for Expand MSIX Image properties.",
      "properties": {
        "packageAlias": {
          "type": "string",
          "description": "Alias of MSIX Package."
        },
        "imagePath": {
          "type": "string",
          "description": "VHD/CIM image path on Network Share."
        },
        "packageName": {
          "type": "string",
          "description": "Package Name from appxmanifest.xml."
        },
        "packageFamilyName": {
          "type": "string",
          "description": "Package Family Name from appxmanifest.xml. Contains Package Name and Publisher name."
        },
        "packageFullName": {
          "type": "string",
          "description": "Package Full Name from appxmanifest.xml."
        },
        "displayName": {
          "type": "string",
          "description": "User friendly Name to be displayed in the portal."
        },
        "packageRelativePath": {
          "type": "string",
          "description": "Relative Path to the package inside the image."
        },
        "isRegularRegistration": {
          "type": "boolean",
          "description": "Specifies how to register Package in feed."
        },
        "isActive": {
          "type": "boolean",
          "description": "Make this version of the package the active one across the hostpool."
        },
        "packageDependencies": {
          "type": "array",
          "description": "List of package dependencies.",
          "items": {
            "$ref": "#/definitions/MsixPackageDependencies"
          },
          "x-ms-identifiers": []
        },
        "version": {
          "type": "string",
          "description": "Package Version found in the appxmanifest.xml."
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "description": "Date Package was last updated, found in the appxmanifest.xml."
        },
        "packageApplications": {
          "type": "array",
          "description": "List of package applications.",
          "items": {
            "$ref": "#/definitions/MsixPackageApplications"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "HealthCheckName": {
      "type": "string",
      "description": "Represents the name of the health check operation performed.",
      "enum": [
        "DomainJoinedCheck",
        "DomainTrustCheck",
        "FSLogixHealthCheck",
        "SxSStackListenerCheck",
        "UrlsAccessibleCheck",
        "MonitoringAgentCheck",
        "DomainReachable",
        "WebRTCRedirectorCheck",
        "SupportedEncryptionCheck",
        "MetaDataServiceCheck",
        "AppAttachHealthCheck"
      ],
      "x-ms-enum": {
        "name": "HealthCheckName",
        "modelAsString": true,
        "values": [
          {
            "name": "DomainJoinedCheck",
            "value": "DomainJoinedCheck",
            "description": "Verifies the SessionHost is joined to a domain. If this check fails is classified as fatal as no connection can succeed if the SessionHost is not joined to the domain. (Currently Enabled)"
          },
          {
            "name": "DomainTrustCheck",
            "value": "DomainTrustCheck",
            "description": "Verifies the SessionHost is not experiencing domain trust issues that will prevent authentication on SessionHost at connection time when session is created. If this check fails is classified as fatal as no connection can succeed if we cannot reach the domain for authentication on the SessionHost. (Currently Enabled)"
          },
          {
            "name": "FSLogixHealthCheck",
            "value": "FSLogixHealthCheck",
            "description": "Verifies the FSLogix service is up and running to make sure users' profiles are loaded in the session. If this check fails is classified as fatal as even if the connection can succeed, user experience is bad as the user profile cannot be loaded and user will get a temporary profile in the session. (Currently Disabled)"
          },
          {
            "name": "SxSStackListenerCheck",
            "value": "SxSStackListenerCheck",
            "description": "Verifies that the SxS stack is up and running so connections can succeed. If this check fails is classified as fatal as no connection can succeed if the SxS stack is not ready. (Currently Enabled)"
          },
          {
            "name": "UrlsAccessibleCheck",
            "value": "UrlsAccessibleCheck",
            "description": "Verifies that the required WVD service and Geneva URLs are reachable from the SessionHost. These URLs are: RdTokenUri, RdBrokerURI, RdDiagnosticsUri and storage blob URLs for agent monitoring (geneva). If this check fails, it is non fatal and the machine still can service connections, main issue may be that monitoring agent is unable to store warm path data (logs, operations ...). (Currently Disabled)"
          },
          {
            "name": "MonitoringAgentCheck",
            "value": "MonitoringAgentCheck",
            "description": "Verifies that the required Geneva agent is running. If this check fails, it is non fatal and the machine still can service connections, main issue may be that monitoring agent is missing or running (possibly) older version. (Currently Enabled)"
          },
          {
            "name": "DomainReachable",
            "value": "DomainReachable",
            "description": "Verifies the domain the SessionHost is joined to is still reachable. If this check fails is classified as fatal as no connection can succeed if the domain the SessionHost is joined is not reachable at the time of connection. (Currently Disabled)"
          },
          {
            "name": "WebRTCRedirectorCheck",
            "value": "WebRTCRedirectorCheck",
            "description": "Verifies whether the WebRTCRedirector component is healthy. The WebRTCRedirector component is used to optimize video and audio performance in Microsoft Teams. This checks whether the component is still running, and whether there is a higher version available. If this check fails, it is non fatal and the machine still can service connections, main issue may be the WebRTCRedirector component has to be restarted or updated. (Currently Disabled)"
          },
          {
            "name": "SupportedEncryptionCheck",
            "value": "SupportedEncryptionCheck",
            "description": "Verifies the value of SecurityLayer registration key. If the value is 0 (SecurityLayer.RDP) this check fails with Error code = NativeMethodErrorCode.E_FAIL and is fatal. If the value is 1 (SecurityLayer.Negotiate) this check fails with Error code = NativeMethodErrorCode.ERROR_SUCCESS and is non fatal. (Currently Disabled)"
          },
          {
            "name": "MetaDataServiceCheck",
            "value": "MetaDataServiceCheck",
            "description": "Verifies the metadata service is accessible and return compute properties. (Currently Enabled)"
          },
          {
            "name": "AppAttachHealthCheck",
            "value": "AppAttachHealthCheck",
            "description": "Verifies that the AppAttachService is healthy (there were no issues during package staging). The AppAttachService is used to enable the staging/registration (and eventual deregistration/destaging) of MSIX apps that have been set up by the tenant admin. This checks whether the component had any failures during package staging. Failures in staging will prevent some MSIX apps from working properly for the end user. If this check fails, it is non fatal and the machine still can service connections, main issue may be certain apps will not work for end-users. (Currently Enabled)"
          }
        ]
      }
    },
    "HealthCheckResult": {
      "type": "string",
      "description": "Represents the Health state of the health check we performed.",
      "enum": [
        "Unknown",
        "HealthCheckSucceeded",
        "HealthCheckFailed",
        "SessionHostShutdown"
      ],
      "x-ms-enum": {
        "name": "HealthCheckResult",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "Health check result is not currently known."
          },
          {
            "name": "HealthCheckSucceeded",
            "value": "HealthCheckSucceeded",
            "description": "Health check passed."
          },
          {
            "name": "HealthCheckFailed",
            "value": "HealthCheckFailed",
            "description": "Health check failed."
          },
          {
            "name": "SessionHostShutdown",
            "value": "SessionHostShutdown",
            "description": "We received a Shutdown notification."
          }
        ]
      }
    },
    "HostPool": {
      "type": "object",
      "description": "Represents a HostPool definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/HostPoolProperties",
          "description": "Detailed properties for HostPool",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "HostPoolListResult": {
      "type": "object",
      "description": "The response of a HostPool list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The HostPool items on this page",
          "items": {
            "$ref": "#/definitions/HostPool"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "HostPoolPatch": {
      "type": "object",
      "description": "HostPool properties that can be patched.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "tags to be updated",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/HostPoolPatchProperties",
          "description": "HostPool properties that can be patched.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "HostPoolPatchProperties": {
      "type": "object",
      "description": "Properties of HostPool.",
      "properties": {
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of HostPool."
        },
        "description": {
          "type": "string",
          "description": "Description of HostPool."
        },
        "customRdpProperty": {
          "type": "string",
          "description": "Custom rdp property of HostPool."
        },
        "maxSessionLimit": {
          "type": "integer",
          "format": "int32",
          "description": "The max session limit of HostPool."
        },
        "personalDesktopAssignmentType": {
          "$ref": "#/definitions/PersonalDesktopAssignmentType",
          "description": "PersonalDesktopAssignment type for HostPool."
        },
        "loadBalancerType": {
          "$ref": "#/definitions/LoadBalancerType",
          "description": "The type of the load balancer."
        },
        "ring": {
          "type": "integer",
          "format": "int32",
          "description": "The ring number of HostPool."
        },
        "validationEnvironment": {
          "type": "boolean",
          "description": "Is validation environment."
        },
        "registrationInfo": {
          "$ref": "#/definitions/RegistrationInfoPatch",
          "description": "The registration info of HostPool."
        },
        "vmTemplate": {
          "type": "string",
          "description": "VM template for sessionhosts configuration within hostpool."
        },
        "ssoadfsAuthority": {
          "type": "string",
          "description": "URL to customer ADFS server for signing WVD SSO certificates."
        },
        "ssoClientId": {
          "type": "string",
          "description": "ClientId for the registered Relying Party used to issue WVD SSO certificates."
        },
        "ssoClientSecretKeyVaultPath": {
          "type": "string",
          "description": "Path to Azure KeyVault storing the secret used for communication to ADFS."
        },
        "ssoSecretType": {
          "$ref": "#/definitions/SSOSecretType",
          "description": "The type of single sign on Secret Type."
        },
        "preferredAppGroupType": {
          "$ref": "#/definitions/PreferredAppGroupType",
          "description": "The type of preferred application group type, default to Desktop Application Group"
        },
        "startVMOnConnect": {
          "type": "boolean",
          "description": "The flag to turn on/off StartVMOnConnect feature."
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/HostpoolPublicNetworkAccess",
          "description": "Enabled to allow this resource to be access from the public network"
        },
        "agentUpdate": {
          "$ref": "#/definitions/AgentUpdatePatchProperties",
          "description": "The session host configuration for updating agent, monitoring agent, and stack component."
        }
      }
    },
    "HostPoolProperties": {
      "type": "object",
      "description": "Properties of HostPool.",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "ObjectId of HostPool. (internal use)",
          "readOnly": true
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of HostPool."
        },
        "description": {
          "type": "string",
          "description": "Description of HostPool."
        },
        "hostPoolType": {
          "$ref": "#/definitions/HostPoolType",
          "description": "HostPool type for desktop."
        },
        "personalDesktopAssignmentType": {
          "$ref": "#/definitions/PersonalDesktopAssignmentType",
          "description": "PersonalDesktopAssignment type for HostPool."
        },
        "customRdpProperty": {
          "type": "string",
          "description": "Custom rdp property of HostPool."
        },
        "maxSessionLimit": {
          "type": "integer",
          "format": "int32",
          "description": "The max session limit of HostPool."
        },
        "loadBalancerType": {
          "$ref": "#/definitions/LoadBalancerType",
          "description": "The type of the load balancer."
        },
        "ring": {
          "type": "integer",
          "format": "int32",
          "description": "The ring number of HostPool."
        },
        "validationEnvironment": {
          "type": "boolean",
          "description": "Is validation environment."
        },
        "registrationInfo": {
          "$ref": "#/definitions/RegistrationInfo",
          "description": "The registration info of HostPool."
        },
        "vmTemplate": {
          "type": "string",
          "description": "VM template for sessionhosts configuration within hostpool."
        },
        "applicationGroupReferences": {
          "type": "array",
          "description": "List of applicationGroup links.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "ssoadfsAuthority": {
          "type": "string",
          "description": "URL to customer ADFS server for signing WVD SSO certificates."
        },
        "ssoClientId": {
          "type": "string",
          "description": "ClientId for the registered Relying Party used to issue WVD SSO certificates."
        },
        "ssoClientSecretKeyVaultPath": {
          "type": "string",
          "description": "Path to Azure KeyVault storing the secret used for communication to ADFS."
        },
        "ssoSecretType": {
          "$ref": "#/definitions/SSOSecretType",
          "description": "The type of single sign on Secret Type."
        },
        "preferredAppGroupType": {
          "$ref": "#/definitions/PreferredAppGroupType",
          "description": "The type of preferred application group type, default to Desktop Application Group"
        },
        "startVMOnConnect": {
          "type": "boolean",
          "description": "The flag to turn on/off StartVMOnConnect feature."
        },
        "cloudPcResource": {
          "type": "boolean",
          "description": "Is cloud pc resource.",
          "readOnly": true
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/HostpoolPublicNetworkAccess",
          "description": "Enabled allows this resource to be accessed from both public and private networks, Disabled allows this resource to only be accessed via private endpoints"
        },
        "agentUpdate": {
          "$ref": "#/definitions/AgentUpdateProperties",
          "description": "The session host configuration for updating agent, monitoring agent, and stack component."
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "List of private endpoint connection associated with the specified resource",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "readOnly": true
        }
      },
      "required": [
        "hostPoolType",
        "loadBalancerType",
        "preferredAppGroupType"
      ]
    },
    "HostPoolType": {
      "type": "string",
      "description": "HostPool type for desktop.",
      "enum": [
        "Personal",
        "Pooled",
        "BYODesktop"
      ],
      "x-ms-enum": {
        "name": "HostPoolType",
        "modelAsString": true,
        "values": [
          {
            "name": "Personal",
            "value": "Personal",
            "description": "Users will be assigned a SessionHost either by administrators (PersonalDesktopAssignmentType = Direct) or upon connecting to the pool (PersonalDesktopAssignmentType = Automatic). They will always be redirected to their assigned SessionHost."
          },
          {
            "name": "Pooled",
            "value": "Pooled",
            "description": "Users get a new (random) SessionHost every time it connects to the HostPool."
          },
          {
            "name": "BYODesktop",
            "value": "BYODesktop",
            "description": "Users assign their own machines, load balancing logic remains the same as Personal. PersonalDesktopAssignmentType must be Direct."
          }
        ]
      }
    },
    "HostpoolPublicNetworkAccess": {
      "type": "string",
      "description": "Enabled allows this resource to be accessed from both public and private networks, Disabled allows this resource to only be accessed via private endpoints",
      "enum": [
        "Enabled",
        "Disabled",
        "EnabledForSessionHostsOnly",
        "EnabledForClientsOnly"
      ],
      "x-ms-enum": {
        "name": "HostpoolPublicNetworkAccess",
        "modelAsString": true
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal ID of resource identity.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      }
    },
    "LoadBalancerType": {
      "type": "string",
      "description": "The type of the load balancer.",
      "enum": [
        "BreadthFirst",
        "DepthFirst",
        "Persistent"
      ],
      "x-ms-enum": {
        "name": "LoadBalancerType",
        "modelAsString": true
      }
    },
    "LogSpecification": {
      "type": "object",
      "description": "Specifications of the Log for Azure Monitoring",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the log"
        },
        "displayName": {
          "type": "string",
          "description": "Localized friendly display name of the log"
        },
        "blobDuration": {
          "type": "string",
          "description": "Blob duration of the log"
        }
      }
    },
    "MaintenanceWindowPatchProperties": {
      "type": "object",
      "description": "Maintenance window starting hour and day of week.",
      "properties": {
        "hour": {
          "type": "integer",
          "format": "int32",
          "description": "The update start hour of the day. (0 - 23)"
        },
        "dayOfWeek": {
          "$ref": "#/definitions/DayOfWeek",
          "description": "Day of the week."
        }
      }
    },
    "MaintenanceWindowProperties": {
      "type": "object",
      "description": "Maintenance window starting hour and day of week.",
      "properties": {
        "hour": {
          "type": "integer",
          "format": "int32",
          "description": "The update start hour of the day. (0 - 23)"
        },
        "dayOfWeek": {
          "$ref": "#/definitions/DayOfWeek",
          "description": "Day of the week."
        }
      }
    },
    "MsixImageURI": {
      "type": "object",
      "description": "Represents URI referring to MSIX Image",
      "properties": {
        "uri": {
          "type": "string",
          "description": "URI to Image"
        }
      }
    },
    "MsixPackage": {
      "type": "object",
      "description": "Schema for MSIX Package properties.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MsixPackageProperties",
          "description": "Detailed properties for MSIX Package",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "MsixPackageApplications": {
      "type": "object",
      "description": "Schema for MSIX Package Application properties.",
      "properties": {
        "appId": {
          "type": "string",
          "description": "Package Application Id, found in appxmanifest.xml."
        },
        "description": {
          "type": "string",
          "description": "Description of Package Application."
        },
        "appUserModelID": {
          "type": "string",
          "description": "Used to activate Package Application. Consists of Package Name and ApplicationID. Found in appxmanifest.xml."
        },
        "friendlyName": {
          "type": "string",
          "description": "User friendly name."
        },
        "iconImageName": {
          "type": "string",
          "description": "User friendly name."
        },
        "rawIcon": {
          "type": "string",
          "description": "the icon a 64 bit string as a byte array."
        },
        "rawPng": {
          "type": "string",
          "description": "the icon a 64 bit string as a byte array."
        }
      }
    },
    "MsixPackageDependencies": {
      "type": "object",
      "description": "Schema for MSIX Package Dependencies properties.",
      "properties": {
        "dependencyName": {
          "type": "string",
          "description": "Name of package dependency."
        },
        "publisher": {
          "type": "string",
          "description": "Name of dependency publisher."
        },
        "minVersion": {
          "type": "string",
          "description": "Dependency version required."
        }
      }
    },
    "MsixPackageListResult": {
      "type": "object",
      "description": "The response of a MsixPackage list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The MsixPackage items on this page",
          "items": {
            "$ref": "#/definitions/MsixPackage"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "MsixPackagePatch": {
      "type": "object",
      "description": "MSIX Package properties that can be patched.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MsixPackagePatchProperties",
          "description": "Detailed properties for MSIX Package",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "MsixPackagePatchProperties": {
      "type": "object",
      "description": "MSIX Package properties that can be patched.",
      "properties": {
        "isActive": {
          "type": "boolean",
          "description": "Set a version of the package to be active across hostpool."
        },
        "isRegularRegistration": {
          "type": "boolean",
          "description": "Set Registration mode. Regular or Delayed."
        },
        "displayName": {
          "type": "string",
          "description": "Display name for MSIX Package."
        }
      }
    },
    "MsixPackageProperties": {
      "type": "object",
      "description": "Schema for MSIX Package properties.",
      "properties": {
        "imagePath": {
          "type": "string",
          "description": "VHD/CIM image path on Network Share."
        },
        "packageName": {
          "type": "string",
          "description": "Package Name from appxmanifest.xml."
        },
        "packageFamilyName": {
          "type": "string",
          "description": "Package Family Name from appxmanifest.xml. Contains Package Name and Publisher name."
        },
        "displayName": {
          "type": "string",
          "description": "User friendly Name to be displayed in the portal."
        },
        "packageRelativePath": {
          "type": "string",
          "description": "Relative Path to the package inside the image."
        },
        "isRegularRegistration": {
          "type": "boolean",
          "description": "Specifies how to register Package in feed."
        },
        "isActive": {
          "type": "boolean",
          "description": "Make this version of the package the active one across the hostpool."
        },
        "packageDependencies": {
          "type": "array",
          "description": "List of package dependencies.",
          "items": {
            "$ref": "#/definitions/MsixPackageDependencies"
          },
          "x-ms-identifiers": []
        },
        "version": {
          "type": "string",
          "description": "Package Version found in the appxmanifest.xml."
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "description": "Date Package was last updated, found in the appxmanifest.xml."
        },
        "packageApplications": {
          "type": "array",
          "description": "List of package applications.",
          "items": {
            "$ref": "#/definitions/MsixPackageApplications"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "OperationProperties": {
      "type": "object",
      "description": "Properties of the operation",
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/ServiceSpecification",
          "description": "Service specification payload"
        }
      }
    },
    "PagedExpandMsixImage": {
      "type": "object",
      "description": "List of MSIX package properties retrieved from MSIX Image expansion.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ExpandMsixImage items on this page",
          "items": {
            "$ref": "#/definitions/ExpandMsixImage"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedPrivateLinkResource": {
      "type": "object",
      "description": "A list of private link resources",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateLinkResource items on this page",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedStartMenuItem": {
      "type": "object",
      "description": "List of StartMenuItem definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The StartMenuItem items on this page",
          "items": {
            "$ref": "#/definitions/StartMenuItem"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PersonalDesktopAssignmentType": {
      "type": "string",
      "description": "PersonalDesktopAssignment type for HostPool.",
      "enum": [
        "Automatic",
        "Direct"
      ],
      "x-ms-enum": {
        "name": "PersonalDesktopAssignmentType",
        "modelAsString": true
      }
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding."
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "PreferredAppGroupType": {
      "type": "string",
      "description": "The type of preferred application group type, default to Desktop Application Group",
      "enum": [
        "None",
        "Desktop",
        "RailApplications"
      ],
      "x-ms-enum": {
        "name": "PreferredAppGroupType",
        "modelAsString": true
      }
    },
    "PrivateEndpoint": {
      "type": "object",
      "description": "The Private Endpoint resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ARM identifier for Private Endpoint",
          "readOnly": true
        }
      }
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "description": "The Private Endpoint Connection resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "description": "Properties of the PrivateEndpointConnectProperties.",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The resource of private end point."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of information about the state of the connection between service consumer and provider."
        },
        "provisioningState": {
          "$ref": "#/definitions/PrivateEndpointConnectionProvisioningState",
          "description": "The provisioning state of the private endpoint connection resource.",
          "readOnly": true
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ]
    },
    "PrivateEndpointConnectionProvisioningState": {
      "type": "string",
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Creating",
        "Deleting",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointConnectionProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "PrivateEndpointConnectionWithSystemData": {
      "type": "object",
      "description": "The Private Endpoint Connection resource.",
      "properties": {
        "properties": {
          "type": "object",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateEndpointConnectionWithSystemDataListResult": {
      "type": "object",
      "description": "The response of a PrivateEndpointConnectionWithSystemData list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateEndpointConnectionWithSystemData items on this page",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnectionWithSystemData"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateEndpointServiceConnectionStatus": {
      "type": "string",
      "description": "The private endpoint connection status.",
      "enum": [
        "Pending",
        "Approved",
        "Rejected"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointServiceConnectionStatus",
        "modelAsString": true
      }
    },
    "PrivateLinkResource": {
      "type": "object",
      "description": "A private link resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "description": "Properties of a private link resource.",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The private link resource group id.",
          "readOnly": true
        },
        "requiredMembers": {
          "type": "array",
          "description": "The private link resource required member names.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "The private link resource Private link DNS zone name.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrivateLinkServiceConnectionState": {
      "type": "object",
      "description": "A collection of information about the state of the connection between service consumer and provider.",
      "properties": {
        "status": {
          "$ref": "#/definitions/PrivateEndpointServiceConnectionStatus",
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
        },
        "description": {
          "type": "string",
          "description": "The reason for approval/rejection of the connection."
        },
        "actionsRequired": {
          "type": "string",
          "description": "A message indicating if changes on the service provider require any updates on the consumer."
        }
      }
    },
    "PublicNetworkAccess": {
      "type": "string",
      "description": "Enabled allows this resource to be accessed from both public and private networks, Disabled allows this resource to only be accessed via private endpoints",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "PublicNetworkAccess",
        "modelAsString": true
      }
    },
    "RegistrationInfo": {
      "type": "object",
      "description": "Represents a RegistrationInfo definition.",
      "properties": {
        "expirationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration time of registration token."
        },
        "token": {
          "type": "string",
          "description": "The registration token base64 encoded string."
        },
        "registrationTokenOperation": {
          "$ref": "#/definitions/RegistrationTokenOperation",
          "description": "The type of resetting the token."
        }
      }
    },
    "RegistrationInfoPatch": {
      "type": "object",
      "description": "Represents a RegistrationInfo definition.",
      "properties": {
        "expirationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration time of registration token."
        },
        "registrationTokenOperation": {
          "$ref": "#/definitions/RegistrationTokenOperation",
          "description": "The type of resetting the token."
        }
      }
    },
    "RegistrationTokenOperation": {
      "type": "string",
      "description": "The type of resetting the token.",
      "enum": [
        "Delete",
        "None",
        "Update"
      ],
      "x-ms-enum": {
        "name": "RegistrationTokenOperation",
        "modelAsString": true
      }
    },
    "RemoteApplicationType": {
      "type": "string",
      "description": "Resource Type of Application.",
      "enum": [
        "InBuilt",
        "MsixApplication"
      ],
      "x-ms-enum": {
        "name": "RemoteApplicationType",
        "modelAsString": true
      }
    },
    "Resource": {
      "type": "object",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        }
      }
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/ResourceModelWithAllowedPropertySetIdentity"
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The resource model definition representing SKU"
        },
        "plan": {
          "$ref": "#/definitions/ResourceModelWithAllowedPropertySetPlan"
        }
      }
    },
    "ResourceModelWithAllowedPropertySetIdentity": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Identity"
        }
      ]
    },
    "ResourceModelWithAllowedPropertySetPlan": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Plan"
        }
      ]
    },
    "ResourceProviderOperation": {
      "type": "object",
      "description": "Supported operation of this resource provider.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Operation name, in format of {provider}/{resource}/{operation}"
        },
        "display": {
          "$ref": "#/definitions/ResourceProviderOperationDisplay",
          "description": "Display metadata associated with the operation."
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Is a data action."
        },
        "properties": {
          "$ref": "#/definitions/OperationProperties",
          "description": "Properties of the operation"
        }
      }
    },
    "ResourceProviderOperationDisplay": {
      "type": "object",
      "description": "Display metadata associated with the operation.",
      "properties": {
        "provider": {
          "type": "string",
          "description": "Resource provider: Microsoft Desktop Virtualization."
        },
        "resource": {
          "type": "string",
          "description": "Resource on which the operation is performed."
        },
        "operation": {
          "type": "string",
          "description": "Type of operation: get, read, delete, etc."
        },
        "description": {
          "type": "string",
          "description": "Description of this operation."
        }
      }
    },
    "SSOSecretType": {
      "type": "string",
      "description": "The type of single sign on Secret Type.",
      "enum": [
        "SharedKey",
        "Certificate",
        "SharedKeyInKeyVault",
        "CertificateInKeyVault"
      ],
      "x-ms-enum": {
        "name": "SSOSecretType",
        "modelAsString": true
      }
    },
    "ScalingHostPoolReference": {
      "type": "object",
      "description": "Scaling plan reference to hostpool.",
      "properties": {
        "hostPoolArmPath": {
          "type": "string",
          "description": "Arm path of referenced hostpool."
        },
        "scalingPlanEnabled": {
          "type": "boolean",
          "description": "Is the scaling plan enabled for this hostpool."
        }
      }
    },
    "ScalingHostPoolType": {
      "type": "string",
      "description": "HostPool type for desktop.",
      "enum": [
        "Pooled"
      ],
      "x-ms-enum": {
        "name": "ScalingHostPoolType",
        "modelAsString": true,
        "values": [
          {
            "name": "Pooled",
            "value": "Pooled",
            "description": "Users get a new (random) SessionHost every time it connects to the HostPool."
          }
        ]
      }
    },
    "ScalingPlan": {
      "type": "object",
      "description": "Represents a scaling plan definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScalingPlanProperties",
          "description": "Detailed properties for scaling plan.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ScalingPlanListResult": {
      "type": "object",
      "description": "The response of a ScalingPlan list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ScalingPlan items on this page",
          "items": {
            "$ref": "#/definitions/ScalingPlan"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ScalingPlanPatch": {
      "type": "object",
      "description": "Scaling plan properties that can be patched.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "tags to be updated",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/ScalingPlanPatchProperties",
          "description": "Detailed properties for scaling plan",
          "x-ms-client-flatten": true
        }
      }
    },
    "ScalingPlanPatchProperties": {
      "type": "object",
      "description": "Scaling plan properties.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of scaling plan."
        },
        "friendlyName": {
          "type": "string",
          "description": "User friendly name of scaling plan."
        },
        "timeZone": {
          "type": "string",
          "description": "Timezone of the scaling plan."
        },
        "exclusionTag": {
          "type": "string",
          "description": "Exclusion tag for scaling plan."
        },
        "schedules": {
          "type": "array",
          "description": "List of ScalingSchedule definitions.",
          "items": {
            "$ref": "#/definitions/ScalingSchedule"
          },
          "x-ms-identifiers": []
        },
        "hostPoolReferences": {
          "type": "array",
          "description": "List of ScalingHostPoolReference definitions.",
          "items": {
            "$ref": "#/definitions/ScalingHostPoolReference"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ScalingPlanPersonalSchedule": {
      "type": "object",
      "description": "Represents a ScalingPlanPersonalSchedule definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScalingPlanPersonalScheduleProperties",
          "description": "Detailed properties for ScalingPlanPersonalSchedule",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ScalingPlanPersonalScheduleListResult": {
      "type": "object",
      "description": "The response of a ScalingPlanPersonalSchedule list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ScalingPlanPersonalSchedule items on this page",
          "items": {
            "$ref": "#/definitions/ScalingPlanPersonalSchedule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ScalingPlanPersonalSchedulePatch": {
      "type": "object",
      "description": "ScalingPlanPersonalSchedule properties that can be patched.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScalingPlanPersonalScheduleProperties",
          "description": "Detailed properties for ScalingPlanPersonalSchedule",
          "x-ms-client-flatten": true
        }
      }
    },
    "ScalingPlanPersonalScheduleProperties": {
      "type": "object",
      "description": "A ScalingPlanPersonalSchedule.",
      "properties": {
        "daysOfWeek": {
          "type": "array",
          "description": "Set of days of the week on which this schedule is active.",
          "items": {
            "$ref": "#/definitions/DayOfWeek"
          }
        },
        "rampUpStartTime": {
          "$ref": "#/definitions/Time",
          "description": "Starting time for ramp up period."
        },
        "rampUpAutoStartHosts": {
          "$ref": "#/definitions/StartupBehavior",
          "description": "The desired startup behavior during the ramp up period for personal vms in the hostpool."
        },
        "rampUpStartVMOnConnect": {
          "$ref": "#/definitions/SetStartVMOnConnect",
          "description": "The desired configuration of Start VM On Connect for the hostpool during the ramp up phase. If this is disabled, session hosts must be turned on using rampUpAutoStartHosts or by turning them on manually."
        },
        "rampUpActionOnDisconnect": {
          "$ref": "#/definitions/SessionHandlingOperation",
          "description": "Action to be taken after a user disconnect during the ramp up period."
        },
        "rampUpMinutesToWaitOnDisconnect": {
          "type": "integer",
          "format": "int32",
          "description": "The time in minutes to wait before performing the desired session handling action when a user disconnects during the ramp up period."
        },
        "rampUpActionOnLogoff": {
          "$ref": "#/definitions/SessionHandlingOperation",
          "description": "Action to be taken after a logoff during the ramp up period."
        },
        "rampUpMinutesToWaitOnLogoff": {
          "type": "integer",
          "format": "int32",
          "description": "The time in minutes to wait before performing the desired session handling action when a user logs off during the ramp up period."
        },
        "peakStartTime": {
          "$ref": "#/definitions/Time",
          "description": "Starting time for peak period."
        },
        "peakStartVMOnConnect": {
          "$ref": "#/definitions/SetStartVMOnConnect",
          "description": "The desired configuration of Start VM On Connect for the hostpool during the peak phase."
        },
        "peakActionOnDisconnect": {
          "$ref": "#/definitions/SessionHandlingOperation",
          "description": "Action to be taken after a user disconnect during the peak period."
        },
        "peakMinutesToWaitOnDisconnect": {
          "type": "integer",
          "format": "int32",
          "description": "The time in minutes to wait before performing the desired session handling action when a user disconnects during the peak period."
        },
        "peakActionOnLogoff": {
          "$ref": "#/definitions/SessionHandlingOperation",
          "description": "Action to be taken after a logoff during the peak period."
        },
        "peakMinutesToWaitOnLogoff": {
          "type": "integer",
          "format": "int32",
          "description": "The time in minutes to wait before performing the desired session handling action when a user logs off during the peak period."
        },
        "rampDownStartTime": {
          "$ref": "#/definitions/Time",
          "description": "Starting time for ramp down period."
        },
        "rampDownStartVMOnConnect": {
          "$ref": "#/definitions/SetStartVMOnConnect",
          "description": "The desired configuration of Start VM On Connect for the hostpool during the ramp down phase."
        },
        "rampDownActionOnDisconnect": {
          "$ref": "#/definitions/SessionHandlingOperation",
          "description": "Action to be taken after a user disconnect during the ramp down period."
        },
        "rampDownMinutesToWaitOnDisconnect": {
          "type": "integer",
          "format": "int32",
          "description": "The time in minutes to wait before performing the desired session handling action when a user disconnects during the ramp down period."
        },
        "rampDownActionOnLogoff": {
          "$ref": "#/definitions/SessionHandlingOperation",
          "description": "Action to be taken after a logoff during the ramp down period."
        },
        "rampDownMinutesToWaitOnLogoff": {
          "type": "integer",
          "format": "int32",
          "description": "The time in minutes to wait before performing the desired session handling action when a user logs off during the ramp down period."
        },
        "offPeakStartTime": {
          "$ref": "#/definitions/Time",
          "description": "Starting time for off-peak period."
        },
        "offPeakStartVMOnConnect": {
          "$ref": "#/definitions/SetStartVMOnConnect",
          "description": "The desired configuration of Start VM On Connect for the hostpool during the off-peak phase."
        },
        "offPeakActionOnDisconnect": {
          "$ref": "#/definitions/SessionHandlingOperation",
          "description": "Action to be taken after a user disconnect during the off-peak period."
        },
        "offPeakMinutesToWaitOnDisconnect": {
          "type": "integer",
          "format": "int32",
          "description": "The time in minutes to wait before performing the desired session handling action when a user disconnects during the off-peak period."
        },
        "offPeakActionOnLogoff": {
          "$ref": "#/definitions/SessionHandlingOperation",
          "description": "Action to be taken after a logoff during the off-peak period."
        },
        "offPeakMinutesToWaitOnLogoff": {
          "type": "integer",
          "format": "int32",
          "description": "The time in minutes to wait before performing the desired session handling action when a user logs off during the off-peak period."
        }
      }
    },
    "ScalingPlanPooledSchedule": {
      "type": "object",
      "description": "Represents a ScalingPlanPooledSchedule definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScalingPlanPooledScheduleProperties",
          "description": "Detailed properties for ScalingPlanPooledSchedule",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ScalingPlanPooledScheduleListResult": {
      "type": "object",
      "description": "The response of a ScalingPlanPooledSchedule list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ScalingPlanPooledSchedule items on this page",
          "items": {
            "$ref": "#/definitions/ScalingPlanPooledSchedule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ScalingPlanPooledSchedulePatch": {
      "type": "object",
      "description": "ScalingPlanPooledSchedule properties that can be patched.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScalingPlanPooledScheduleProperties",
          "description": "Detailed properties for ScalingPlanPooledSchedule",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ScalingPlanPooledScheduleProperties": {
      "type": "object",
      "description": "A ScalingPlanPooledSchedule.",
      "properties": {
        "daysOfWeek": {
          "type": "array",
          "description": "Set of days of the week on which this schedule is active.",
          "items": {
            "$ref": "#/definitions/DayOfWeek"
          }
        },
        "rampUpStartTime": {
          "$ref": "#/definitions/Time",
          "description": "Starting time for ramp up period."
        },
        "rampUpLoadBalancingAlgorithm": {
          "$ref": "#/definitions/SessionHostLoadBalancingAlgorithm",
          "description": "Load balancing algorithm for ramp up period."
        },
        "rampUpMinimumHostsPct": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum host percentage for ramp up period.",
          "maximum": 100
        },
        "rampUpCapacityThresholdPct": {
          "type": "integer",
          "format": "int32",
          "description": "Capacity threshold for ramp up period.",
          "minimum": 1,
          "maximum": 100
        },
        "peakStartTime": {
          "$ref": "#/definitions/Time",
          "description": "Starting time for peak period."
        },
        "peakLoadBalancingAlgorithm": {
          "$ref": "#/definitions/SessionHostLoadBalancingAlgorithm",
          "description": "Load balancing algorithm for peak period."
        },
        "rampDownStartTime": {
          "$ref": "#/definitions/Time",
          "description": "Starting time for ramp down period."
        },
        "rampDownLoadBalancingAlgorithm": {
          "$ref": "#/definitions/SessionHostLoadBalancingAlgorithm",
          "description": "Load balancing algorithm for ramp down period."
        },
        "rampDownMinimumHostsPct": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum host percentage for ramp down period.",
          "maximum": 100
        },
        "rampDownCapacityThresholdPct": {
          "type": "integer",
          "format": "int32",
          "description": "Capacity threshold for ramp down period.",
          "minimum": 1,
          "maximum": 100
        },
        "rampDownForceLogoffUsers": {
          "type": "boolean",
          "description": "Should users be logged off forcefully from hosts."
        },
        "rampDownStopHostsWhen": {
          "$ref": "#/definitions/StopHostsWhen",
          "description": "Specifies when to stop hosts during ramp down period."
        },
        "rampDownWaitTimeMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Number of minutes to wait to stop hosts during ramp down period."
        },
        "rampDownNotificationMessage": {
          "type": "string",
          "description": "Notification message for users during ramp down period."
        },
        "offPeakStartTime": {
          "$ref": "#/definitions/Time",
          "description": "Starting time for off-peak period."
        },
        "offPeakLoadBalancingAlgorithm": {
          "$ref": "#/definitions/SessionHostLoadBalancingAlgorithm",
          "description": "Load balancing algorithm for off-peak period."
        }
      }
    },
    "ScalingPlanProperties": {
      "type": "object",
      "description": "Scaling plan properties.",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "ObjectId of scaling plan. (internal use)",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of scaling plan."
        },
        "friendlyName": {
          "type": "string",
          "description": "User friendly name of scaling plan."
        },
        "timeZone": {
          "type": "string",
          "description": "Timezone of the scaling plan."
        },
        "hostPoolType": {
          "$ref": "#/definitions/ScalingHostPoolType",
          "description": "HostPool type for desktop.",
          "default": "Pooled"
        },
        "exclusionTag": {
          "type": "string",
          "description": "Exclusion tag for scaling plan."
        },
        "schedules": {
          "type": "array",
          "description": "List of ScalingPlanPooledSchedule definitions.",
          "items": {
            "$ref": "#/definitions/ScalingSchedule"
          },
          "x-ms-identifiers": []
        },
        "hostPoolReferences": {
          "type": "array",
          "description": "List of ScalingHostPoolReference definitions.",
          "items": {
            "$ref": "#/definitions/ScalingHostPoolReference"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "timeZone"
      ]
    },
    "ScalingSchedule": {
      "type": "object",
      "description": "A ScalingPlanPooledSchedule.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the ScalingPlanPooledSchedule."
        },
        "daysOfWeek": {
          "type": "array",
          "description": "Set of days of the week on which this schedule is active.",
          "items": {
            "$ref": "#/definitions/ScalingScheduleDaysOfWeekItem"
          }
        },
        "rampUpStartTime": {
          "$ref": "#/definitions/Time",
          "description": "Starting time for ramp up period."
        },
        "rampUpLoadBalancingAlgorithm": {
          "$ref": "#/definitions/SessionHostLoadBalancingAlgorithm",
          "description": "Load balancing algorithm for ramp up period."
        },
        "rampUpMinimumHostsPct": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum host percentage for ramp up period.",
          "maximum": 100
        },
        "rampUpCapacityThresholdPct": {
          "type": "integer",
          "format": "int32",
          "description": "Capacity threshold for ramp up period.",
          "minimum": 1,
          "maximum": 100
        },
        "peakStartTime": {
          "$ref": "#/definitions/Time",
          "description": "Starting time for peak period."
        },
        "peakLoadBalancingAlgorithm": {
          "$ref": "#/definitions/SessionHostLoadBalancingAlgorithm",
          "description": "Load balancing algorithm for peak period."
        },
        "rampDownStartTime": {
          "$ref": "#/definitions/Time",
          "description": "Starting time for ramp down period."
        },
        "rampDownLoadBalancingAlgorithm": {
          "$ref": "#/definitions/SessionHostLoadBalancingAlgorithm",
          "description": "Load balancing algorithm for ramp down period."
        },
        "rampDownMinimumHostsPct": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum host percentage for ramp down period.",
          "maximum": 100
        },
        "rampDownCapacityThresholdPct": {
          "type": "integer",
          "format": "int32",
          "description": "Capacity threshold for ramp down period.",
          "minimum": 1,
          "maximum": 100
        },
        "rampDownForceLogoffUsers": {
          "type": "boolean",
          "description": "Should users be logged off forcefully from hosts."
        },
        "rampDownStopHostsWhen": {
          "$ref": "#/definitions/StopHostsWhen",
          "description": "Specifies when to stop hosts during ramp down period."
        },
        "rampDownWaitTimeMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Number of minutes to wait to stop hosts during ramp down period."
        },
        "rampDownNotificationMessage": {
          "type": "string",
          "description": "Notification message for users during ramp down period."
        },
        "offPeakStartTime": {
          "$ref": "#/definitions/Time",
          "description": "Starting time for off-peak period."
        },
        "offPeakLoadBalancingAlgorithm": {
          "$ref": "#/definitions/SessionHostLoadBalancingAlgorithm",
          "description": "Load balancing algorithm for off-peak period."
        }
      }
    },
    "ScalingScheduleDaysOfWeekItem": {
      "type": "string",
      "enum": [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      "x-ms-enum": {
        "name": "ScalingScheduleDaysOfWeekItem",
        "modelAsString": true
      }
    },
    "SendMessage": {
      "type": "object",
      "description": "Represents message sent to a UserSession.",
      "properties": {
        "messageTitle": {
          "type": "string",
          "description": "Title of message."
        },
        "messageBody": {
          "type": "string",
          "description": "Body of message."
        }
      }
    },
    "ServiceSpecification": {
      "type": "object",
      "description": "Service specification payload",
      "properties": {
        "logSpecifications": {
          "type": "array",
          "description": "Specifications of the Log for Azure Monitoring",
          "items": {
            "$ref": "#/definitions/LogSpecification"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "SessionHandlingOperation": {
      "type": "string",
      "description": "Action to be taken after a user disconnect during the ramp up period.",
      "enum": [
        "None",
        "Deallocate",
        "Hibernate"
      ],
      "x-ms-enum": {
        "name": "SessionHandlingOperation",
        "modelAsString": true
      }
    },
    "SessionHost": {
      "type": "object",
      "description": "Represents a SessionHost definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SessionHostProperties",
          "description": "Detailed properties for SessionHost",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SessionHostComponentUpdateType": {
      "type": "string",
      "description": "The type of maintenance for session host components.",
      "enum": [
        "Default",
        "Scheduled"
      ],
      "x-ms-enum": {
        "name": "SessionHostComponentUpdateType",
        "modelAsString": true,
        "values": [
          {
            "name": "Default",
            "value": "Default",
            "description": "Agent and other agent side components are delivery schedule is controlled by WVD Infra."
          },
          {
            "name": "Scheduled",
            "value": "Scheduled",
            "description": "TenantAdmin have opted in for Scheduled Component Update feature."
          }
        ]
      }
    },
    "SessionHostHealthCheckFailureDetails": {
      "type": "object",
      "description": "Contains details on the failure.",
      "properties": {
        "message": {
          "type": "string",
          "description": "Failure message: hints on what is wrong and how to recover.",
          "readOnly": true
        },
        "errorCode": {
          "type": "integer",
          "format": "int32",
          "description": "Error code corresponding for the failure.",
          "readOnly": true
        },
        "lastHealthCheckDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of the last update.",
          "readOnly": true
        }
      }
    },
    "SessionHostHealthCheckReport": {
      "type": "object",
      "description": "The report for session host information.",
      "properties": {
        "healthCheckName": {
          "$ref": "#/definitions/HealthCheckName",
          "description": "Represents the name of the health check operation performed.",
          "readOnly": true
        },
        "healthCheckResult": {
          "$ref": "#/definitions/HealthCheckResult",
          "description": "Represents the Health state of the health check we performed.",
          "readOnly": true
        },
        "additionalFailureDetails": {
          "$ref": "#/definitions/SessionHostHealthCheckFailureDetails",
          "description": "Additional detailed information on the failure.",
          "readOnly": true
        }
      }
    },
    "SessionHostListResult": {
      "type": "object",
      "description": "The response of a SessionHost list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SessionHost items on this page",
          "items": {
            "$ref": "#/definitions/SessionHost"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SessionHostLoadBalancingAlgorithm": {
      "type": "string",
      "description": "Load balancing algorithm for ramp up period.",
      "enum": [
        "BreadthFirst",
        "DepthFirst"
      ],
      "x-ms-enum": {
        "name": "SessionHostLoadBalancingAlgorithm",
        "modelAsString": true
      }
    },
    "SessionHostPatch": {
      "type": "object",
      "description": "SessionHost properties that can be patched.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SessionHostPatchProperties",
          "description": "Detailed properties for SessionHost",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "SessionHostPatchProperties": {
      "type": "object",
      "description": "SessionHost properties that can be patched.",
      "properties": {
        "allowNewSession": {
          "type": "boolean",
          "description": "Allow a new session."
        },
        "assignedUser": {
          "type": "string",
          "description": "User assigned to SessionHost."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of SessionHost"
        }
      }
    },
    "SessionHostProperties": {
      "type": "object",
      "description": "Schema for SessionHost properties.",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "ObjectId of SessionHost. (internal use)",
          "readOnly": true
        },
        "lastHeartBeat": {
          "type": "string",
          "format": "date-time",
          "description": "Last heart beat from SessionHost."
        },
        "sessions": {
          "type": "integer",
          "format": "int32",
          "description": "Number of sessions on SessionHost."
        },
        "agentVersion": {
          "type": "string",
          "description": "Version of agent on SessionHost."
        },
        "allowNewSession": {
          "type": "boolean",
          "description": "Allow a new session."
        },
        "virtualMachineId": {
          "type": "string",
          "description": "Virtual Machine Id of SessionHost's underlying virtual machine.",
          "readOnly": true
        },
        "resourceId": {
          "type": "string",
          "description": "Resource Id of SessionHost's underlying virtual machine.",
          "readOnly": true
        },
        "assignedUser": {
          "type": "string",
          "description": "User assigned to SessionHost."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of SessionHost"
        },
        "status": {
          "$ref": "#/definitions/Status",
          "description": "Status for a SessionHost."
        },
        "statusTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of the status.",
          "readOnly": true
        },
        "osVersion": {
          "type": "string",
          "description": "The version of the OS on the session host."
        },
        "sxSStackVersion": {
          "type": "string",
          "description": "The version of the side by side stack on the session host."
        },
        "updateState": {
          "$ref": "#/definitions/UpdateState",
          "description": "Update state of a SessionHost."
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of the last update.",
          "readOnly": true
        },
        "updateErrorMessage": {
          "type": "string",
          "description": "The error message."
        },
        "sessionHostHealthCheckResults": {
          "type": "array",
          "description": "List of SessionHostHealthCheckReports",
          "items": {
            "$ref": "#/definitions/SessionHostHealthCheckReport"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "SessionState": {
      "type": "string",
      "description": "State of user session.",
      "enum": [
        "Unknown",
        "Active",
        "Disconnected",
        "Pending",
        "LogOff",
        "UserProfileDiskMounted"
      ],
      "x-ms-enum": {
        "name": "SessionState",
        "modelAsString": true
      }
    },
    "SetStartVMOnConnect": {
      "type": "string",
      "description": "The desired configuration of Start VM On Connect for the hostpool during the ramp up phase. If this is disabled, session hosts must be turned on using rampUpAutoStartHosts or by turning them on manually.",
      "enum": [
        "Enable",
        "Disable"
      ],
      "x-ms-enum": {
        "name": "SetStartVMOnConnect",
        "modelAsString": true
      }
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.SkuTier",
          "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code."
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "StartMenuItem": {
      "type": "object",
      "description": "Represents a StartMenuItem definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StartMenuItemProperties",
          "description": "Detailed properties for StartMenuItem",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "StartMenuItemProperties": {
      "type": "object",
      "description": "Schema for StartMenuItem properties.",
      "properties": {
        "appAlias": {
          "type": "string",
          "description": "Alias of StartMenuItem."
        },
        "filePath": {
          "type": "string",
          "description": "Path to the file of StartMenuItem."
        },
        "commandLineArguments": {
          "type": "string",
          "description": "Command line arguments for StartMenuItem."
        },
        "iconPath": {
          "type": "string",
          "description": "Path to the icon."
        },
        "iconIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Index of the icon."
        }
      }
    },
    "StartupBehavior": {
      "type": "string",
      "description": "The desired startup behavior during the ramp up period for personal vms in the hostpool.",
      "enum": [
        "None",
        "WithAssignedUser",
        "All"
      ],
      "x-ms-enum": {
        "name": "StartupBehavior",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "Session hosts will not be started by the service. This setting depends on Start VM on Connect to be enabled to start the session hosts."
          },
          {
            "name": "WithAssignedUser",
            "value": "WithAssignedUser",
            "description": "Session hosts with an assigned user will be started during Ramp Up"
          },
          {
            "name": "All",
            "value": "All",
            "description": "All personal session hosts in the hostpool will be started during ramp up."
          }
        ]
      }
    },
    "Status": {
      "type": "string",
      "description": "Status for a SessionHost.",
      "enum": [
        "Available",
        "Unavailable",
        "Shutdown",
        "Disconnected",
        "Upgrading",
        "UpgradeFailed",
        "NoHeartbeat",
        "NotJoinedToDomain",
        "DomainTrustRelationshipLost",
        "SxSStackListenerNotReady",
        "FSLogixNotHealthy",
        "NeedsAssistance"
      ],
      "x-ms-enum": {
        "name": "Status",
        "modelAsString": true,
        "values": [
          {
            "name": "Available",
            "value": "Available",
            "description": "Session Host has passed all the health checks and is available to handle connections."
          },
          {
            "name": "Unavailable",
            "value": "Unavailable",
            "description": "Session Host is either turned off or has failed critical health checks which is causing service not to be able to route connections to this session host. Note this replaces previous 'NoHeartBeat' status."
          },
          {
            "name": "Shutdown",
            "value": "Shutdown",
            "description": "Session Host is shutdown - RD Agent reported session host to be stopped or deallocated."
          },
          {
            "name": "Disconnected",
            "value": "Disconnected",
            "description": "The Session Host is unavailable because it is currently disconnected."
          },
          {
            "name": "Upgrading",
            "value": "Upgrading",
            "description": "Session Host is unavailable because currently an upgrade of RDAgent/side-by-side stack is in progress. Note: this state will be removed once the upgrade completes and the host is able to accept connections."
          },
          {
            "name": "UpgradeFailed",
            "value": "UpgradeFailed",
            "description": "Session Host is unavailable because the critical component upgrade (agent, side-by-side stack, etc.) failed."
          },
          {
            "name": "NoHeartbeat",
            "value": "NoHeartbeat",
            "description": "The Session Host is not heart beating."
          },
          {
            "name": "NotJoinedToDomain",
            "value": "NotJoinedToDomain",
            "description": "SessionHost is not joined to domain."
          },
          {
            "name": "DomainTrustRelationshipLost",
            "value": "DomainTrustRelationshipLost",
            "description": "SessionHost's domain trust relationship lost"
          },
          {
            "name": "SxSStackListenerNotReady",
            "value": "SxSStackListenerNotReady",
            "description": "SxS stack installed on the SessionHost is not ready to receive connections."
          },
          {
            "name": "FSLogixNotHealthy",
            "value": "FSLogixNotHealthy",
            "description": "FSLogix is in an unhealthy state on the session host."
          },
          {
            "name": "NeedsAssistance",
            "value": "NeedsAssistance",
            "description": "New status to inform admins that the health on their endpoint needs to be fixed. The connections might not fail, as these issues are not fatal."
          }
        ]
      }
    },
    "StopHostsWhen": {
      "type": "string",
      "description": "Specifies when to stop hosts during ramp down period.",
      "enum": [
        "ZeroSessions",
        "ZeroActiveSessions"
      ],
      "x-ms-enum": {
        "name": "StopHostsWhen",
        "modelAsString": true
      }
    },
    "Time": {
      "type": "object",
      "description": "The time for a scaling action to occur.",
      "properties": {
        "hour": {
          "type": "integer",
          "format": "int32",
          "description": "The hour.",
          "maximum": 23
        },
        "minute": {
          "type": "integer",
          "format": "int32",
          "description": "The minute.",
          "maximum": 59
        }
      },
      "required": [
        "hour",
        "minute"
      ]
    },
    "UpdateState": {
      "type": "string",
      "description": "Update state of a SessionHost.",
      "enum": [
        "Initial",
        "Pending",
        "Started",
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "UpdateState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "UserSession": {
      "type": "object",
      "description": "Represents a UserSession definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UserSessionProperties",
          "description": "Detailed properties for UserSession",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "UserSessionListResult": {
      "type": "object",
      "description": "The response of a UserSession list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The UserSession items on this page",
          "items": {
            "$ref": "#/definitions/UserSession"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "UserSessionProperties": {
      "type": "object",
      "description": "Schema for UserSession properties.",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "ObjectId of user session. (internal use)",
          "readOnly": true
        },
        "userPrincipalName": {
          "type": "string",
          "description": "The user principal name."
        },
        "applicationType": {
          "$ref": "#/definitions/ApplicationType",
          "description": "Application type of application."
        },
        "sessionState": {
          "$ref": "#/definitions/SessionState",
          "description": "State of user session."
        },
        "activeDirectoryUserName": {
          "type": "string",
          "description": "The active directory user name."
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of the user session create."
        }
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2023-09-05"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2023_09_05",
            "value": "2023-09-05",
            "description": "The 2023-09-05 API version."
          }
        ]
      }
    },
    "Workspace": {
      "type": "object",
      "description": "Represents a Workspace definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkspaceProperties",
          "description": "Detailed properties for Workspace",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "WorkspaceListResult": {
      "type": "object",
      "description": "The response of a Workspace list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Workspace items on this page",
          "items": {
            "$ref": "#/definitions/Workspace"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkspacePatch": {
      "type": "object",
      "description": "Workspace properties that can be patched.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "tags to be updated",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/WorkspacePatchProperties",
          "description": "Detailed properties for Workspace",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkspacePatchProperties": {
      "type": "object",
      "description": "Workspace properties that can be patched.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of Workspace."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of Workspace."
        },
        "applicationGroupReferences": {
          "type": "array",
          "description": "List of applicationGroup links.",
          "items": {
            "type": "string"
          }
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Enabled to allow this resource to be access from the public network"
        }
      }
    },
    "WorkspaceProperties": {
      "type": "object",
      "description": "Schema for Workspace properties.",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "ObjectId of Workspace. (internal use)",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of Workspace."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of Workspace."
        },
        "applicationGroupReferences": {
          "type": "array",
          "description": "List of applicationGroup resource Ids.",
          "items": {
            "type": "string"
          }
        },
        "cloudPcResource": {
          "type": "boolean",
          "description": "Is cloud pc resource.",
          "readOnly": true
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Enabled allows this resource to be accessed from both public and private networks, Disabled allows this resource to only be accessed via private endpoints"
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "List of private endpoint connection associated with the specified resource",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "readOnly": true
        }
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
