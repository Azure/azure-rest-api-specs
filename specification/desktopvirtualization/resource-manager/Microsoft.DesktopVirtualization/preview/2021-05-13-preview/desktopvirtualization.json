{
  "swagger": "2.0",
  "info": {
    "version": "2021-05-13-preview",
    "title": "Desktop Virtualization API Client"
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "host": "management.azure.com",
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.DesktopVirtualization/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "List all of the available operations the Desktop Virtualization resource provider supports.",
        "x-ms-examples": {
          "OperationDescription_List": {
            "$ref": "./examples/OperationDescription_List.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved operations.",
            "schema": {
              "$ref": "#/definitions/ResourceProviderOperationList"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}": {
      "get": {
        "tags": [
          "Workspace"
        ],
        "operationId": "Workspaces_Get",
        "description": "Get a workspace.",
        "x-ms-examples": {
          "Workspace_Get": {
            "$ref": "./examples/Workspace_Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved workspace.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Workspace"
        ],
        "operationId": "Workspaces_CreateOrUpdate",
        "description": "Create or update a workspace.",
        "x-ms-examples": {
          "Workspace_Create": {
            "$ref": "./examples/Workspace_Create.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "workspace",
            "description": "Object containing Workspace definitions.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated workspace.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "201": {
            "description": "Successfully created workspace.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Workspace"
        ],
        "operationId": "Workspaces_Delete",
        "description": "Remove a workspace.",
        "x-ms-examples": {
          "Workspace_Delete": {
            "$ref": "./examples/Workspace_Delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted workspace."
          },
          "204": {
            "description": "Workspace does not exist."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Workspace"
        ],
        "operationId": "Workspaces_Update",
        "description": "Update a workspace.",
        "x-ms-examples": {
          "Workspace_Update": {
            "$ref": "./examples/Workspace_Update.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "workspace",
            "description": "Object containing Workspace definitions.",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WorkspacePatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated workspace.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces": {
      "get": {
        "tags": [
          "Workspace"
        ],
        "operationId": "Workspaces_ListByResourceGroup",
        "description": "List workspaces.",
        "x-ms-examples": {
          "Workspace_ListByResourceGroup": {
            "$ref": "./examples/Workspace_ListByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved workspaces in resource group.",
            "schema": {
              "$ref": "#/definitions/WorkspaceList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/workspaces": {
      "get": {
        "tags": [
          "Workspace"
        ],
        "operationId": "Workspaces_ListBySubscription",
        "description": "List workspaces in subscription.",
        "x-ms-examples": {
          "Workspace_ListBySubscription": {
            "$ref": "./examples/Workspace_ListBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved workspaces in subscription.",
            "schema": {
              "$ref": "#/definitions/WorkspaceList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}": {
      "get": {
        "tags": [
          "ScalingPlan"
        ],
        "operationId": "ScalingPlans_Get",
        "description": "Get a scaling plan.",
        "x-ms-examples": {
          "ScalingPlans_Get": {
            "$ref": "./examples/ScalingPlan_Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ScalingPlanNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved scaling plan.",
            "schema": {
              "$ref": "#/definitions/ScalingPlan"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ScalingPlan"
        ],
        "operationId": "ScalingPlans_Create",
        "description": "Create or update a scaling plan.",
        "x-ms-examples": {
          "ScalingPlans_Create": {
            "$ref": "./examples/ScalingPlan_Create.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ScalingPlanNameParameter"
          },
          {
            "name": "scalingPlan",
            "description": "Object containing scaling plan definitions.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScalingPlan"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated scaling plan.",
            "schema": {
              "$ref": "#/definitions/ScalingPlan"
            }
          },
          "201": {
            "description": "Successfully created scaling plan.",
            "schema": {
              "$ref": "#/definitions/ScalingPlan"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ScalingPlan"
        ],
        "operationId": "ScalingPlans_Delete",
        "description": "Remove a scaling plan.",
        "x-ms-examples": {
          "ScalingPlans_Delete": {
            "$ref": "./examples/ScalingPlan_Delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ScalingPlanNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted scaling plan."
          },
          "204": {
            "description": "Scaling plan does not exist."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ScalingPlan"
        ],
        "operationId": "ScalingPlans_Update",
        "description": "Update a scaling plan.",
        "x-ms-examples": {
          "ScalingPlans_Update": {
            "$ref": "./examples/ScalingPlan_Update.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ScalingPlanNameParameter"
          },
          {
            "name": "scalingPlan",
            "description": "Object containing scaling plan definitions.",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ScalingPlanPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated scaling plan.",
            "schema": {
              "$ref": "#/definitions/ScalingPlan"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans": {
      "get": {
        "tags": [
          "ScalingPlan"
        ],
        "operationId": "ScalingPlans_ListByResourceGroup",
        "description": "List scaling plans.",
        "x-ms-examples": {
          "ScalingPlans_ListByResourceGroup": {
            "$ref": "./examples/ScalingPlan_ListByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved scaling plans in resource group.",
            "schema": {
              "$ref": "#/definitions/ScalingPlanList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/scalingPlans": {
      "get": {
        "tags": [
          "ScalingPlan"
        ],
        "operationId": "ScalingPlans_ListBySubscription",
        "description": "List scaling plans in subscription.",
        "x-ms-examples": {
          "ScalingPlans_ListBySubscription": {
            "$ref": "./examples/ScalingPlan_ListBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved scaling plans in subscription.",
            "schema": {
              "$ref": "#/definitions/ScalingPlanList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}": {
      "get": {
        "tags": [
          "ApplicationGroup"
        ],
        "operationId": "ApplicationGroups_Get",
        "description": "Get an application group.",
        "x-ms-examples": {
          "ApplicationGroup_Get": {
            "$ref": "./examples/ApplicationGroup_Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved application group.",
            "schema": {
              "$ref": "#/definitions/ApplicationGroup"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationGroup"
        ],
        "operationId": "ApplicationGroups_CreateOrUpdate",
        "description": "Create or update an applicationGroup.",
        "x-ms-examples": {
          "ApplicationGroup_Create": {
            "$ref": "./examples/ApplicationGroup_Create.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationGroupNameParameter"
          },
          {
            "name": "applicationGroup",
            "description": "Object containing ApplicationGroup definitions.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated application group.",
            "schema": {
              "$ref": "#/definitions/ApplicationGroup"
            }
          },
          "201": {
            "description": "Successfully created application group.",
            "schema": {
              "$ref": "#/definitions/ApplicationGroup"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationGroup"
        ],
        "operationId": "ApplicationGroups_Delete",
        "description": "Remove an applicationGroup.",
        "x-ms-examples": {
          "ApplicationGroup_Delete": {
            "$ref": "./examples/ApplicationGroup_Delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed application group."
          },
          "204": {
            "description": "Application group does not exist."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ApplicationGroup"
        ],
        "operationId": "ApplicationGroups_Update",
        "description": "Update an applicationGroup.",
        "x-ms-examples": {
          "ApplicationGroups_Update": {
            "$ref": "./examples/ApplicationGroup_Update.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationGroupNameParameter"
          },
          {
            "name": "applicationGroup",
            "description": "Object containing ApplicationGroup definitions.",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ApplicationGroupPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated application group.",
            "schema": {
              "$ref": "#/definitions/ApplicationGroup"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups": {
      "get": {
        "tags": [
          "ApplicationGroup"
        ],
        "operationId": "ApplicationGroups_ListByResourceGroup",
        "description": "List applicationGroups.",
        "x-ms-examples": {
          "ApplicationGroup_ListByResourceGroup": {
            "$ref": "./examples/ApplicationGroup_ListByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression. Valid properties for filtering are applicationGroupType."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved application groups in resource group.",
            "schema": {
              "$ref": "#/definitions/ApplicationGroupList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/applicationGroups": {
      "get": {
        "tags": [
          "ApplicationGroup"
        ],
        "operationId": "ApplicationGroups_ListBySubscription",
        "description": "List applicationGroups in subscription.",
        "x-ms-examples": {
          "ApplicationGroup_List": {
            "$ref": "./examples/ApplicationGroup_ListBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression. Valid properties for filtering are applicationGroupType."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved application groups in subscription.",
            "schema": {
              "$ref": "#/definitions/ApplicationGroupList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}/startMenuItems": {
      "get": {
        "tags": [
          "StartMenuItem"
        ],
        "operationId": "StartMenuItems_List",
        "description": "List start menu items in the given application group.",
        "x-ms-examples": {
          "StartMenuItem_List": {
            "$ref": "./examples/StartMenuItem_List.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved start menu items in application group.",
            "schema": {
              "$ref": "#/definitions/StartMenuItemList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}/applications/{applicationName}": {
      "get": {
        "tags": [
          "Application"
        ],
        "operationId": "Applications_Get",
        "description": "Get an application.",
        "x-ms-examples": {
          "Application_Get": {
            "$ref": "./examples/Application_Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved application.",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Application"
        ],
        "operationId": "Applications_CreateOrUpdate",
        "description": "Create or update an application.",
        "x-ms-examples": {
          "Application_Create": {
            "$ref": "./examples/Application_Create.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "name": "application",
            "description": "Object containing Application definitions.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Application"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated application.",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          },
          "201": {
            "description": "Successfully created application.",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Application"
        ],
        "operationId": "Applications_Delete",
        "description": "Remove an application.",
        "x-ms-examples": {
          "Application_Delete": {
            "$ref": "./examples/Application_Delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed application."
          },
          "204": {
            "description": "Application does not exist."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Application"
        ],
        "operationId": "Applications_Update",
        "description": "Update an application.",
        "x-ms-examples": {
          "Application_Update": {
            "$ref": "./examples/Application_Update.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "name": "application",
            "description": "Object containing Application definitions.",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ApplicationPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated application.",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}/applications": {
      "get": {
        "tags": [
          "Application"
        ],
        "operationId": "Applications_List",
        "description": "List applications.",
        "x-ms-examples": {
          "Applications_List": {
            "$ref": "./examples/Application_List.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved applications in application group.",
            "schema": {
              "$ref": "#/definitions/ApplicationList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}/desktops/{desktopName}": {
      "get": {
        "tags": [
          "Desktop"
        ],
        "operationId": "Desktops_Get",
        "description": "Get a desktop.",
        "x-ms-examples": {
          "Desktop_Get": {
            "$ref": "./examples/Desktop_Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DesktopNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved desktop.",
            "schema": {
              "$ref": "#/definitions/Desktop"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Desktop"
        ],
        "operationId": "Desktops_Update",
        "description": "Update a desktop.",
        "x-ms-examples": {
          "Desktop_Update": {
            "$ref": "./examples/Desktop_Update.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DesktopNameParameter"
          },
          {
            "name": "desktop",
            "description": "Object containing Desktop definitions.",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DesktopPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated desktop.",
            "schema": {
              "$ref": "#/definitions/Desktop"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}/desktops": {
      "get": {
        "tags": [
          "Desktop"
        ],
        "operationId": "Desktops_List",
        "description": "List desktops.",
        "x-ms-examples": {
          "Desktop_List": {
            "$ref": "./examples/Desktop_List.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved desktops in application group.",
            "schema": {
              "$ref": "#/definitions/DesktopList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}": {
      "get": {
        "tags": [
          "HostPool"
        ],
        "operationId": "HostPools_Get",
        "description": "Get a host pool.",
        "x-ms-examples": {
          "HostPool_Get": {
            "$ref": "./examples/HostPool_Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved host pool.",
            "schema": {
              "$ref": "#/definitions/HostPool"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "HostPool"
        ],
        "operationId": "HostPools_CreateOrUpdate",
        "description": "Create or update a host pool.",
        "x-ms-examples": {
          "HostPool_Create": {
            "$ref": "./examples/HostPool_Create.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "name": "hostPool",
            "description": "Object containing HostPool definitions.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HostPool"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated host pool.",
            "schema": {
              "$ref": "#/definitions/HostPool"
            }
          },
          "201": {
            "description": "Successfully created host pool.",
            "schema": {
              "$ref": "#/definitions/HostPool"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "HostPool"
        ],
        "operationId": "HostPools_Delete",
        "description": "Remove a host pool.",
        "x-ms-examples": {
          "HostPool_Delete": {
            "$ref": "./examples/HostPool_Delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Force flag to delete sessionHost."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed host pool."
          },
          "204": {
            "description": "Host pool does not exist."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "HostPool"
        ],
        "operationId": "HostPools_Update",
        "description": "Update a host pool.",
        "x-ms-examples": {
          "HostPool_Update": {
            "$ref": "./examples/HostPool_Update.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "name": "hostPool",
            "description": "Object containing HostPool definitions.",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/HostPoolPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated host pool.",
            "schema": {
              "$ref": "#/definitions/HostPool"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools": {
      "get": {
        "tags": [
          "HostPool"
        ],
        "operationId": "HostPools_ListByResourceGroup",
        "description": "List hostPools.",
        "x-ms-examples": {
          "HostPool_ListByResourceGroup": {
            "$ref": "./examples/HostPool_ListByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved host pool in resource group.",
            "schema": {
              "$ref": "#/definitions/HostPoolList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/hostPools": {
      "get": {
        "tags": [
          "HostPool"
        ],
        "operationId": "HostPools_List",
        "description": "List hostPools in subscription.",
        "x-ms-examples": {
          "HostPool_List": {
            "$ref": "./examples/HostPool_List.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved host pool in subscription.",
            "schema": {
              "$ref": "#/definitions/HostPoolList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHostConfigurations/default": {
      "get": {
        "tags": [
          "SessionHostConfiguration"
        ],
        "operationId": "SessionHostConfigurations_Get",
        "description": "Get a SessionHostConfiguration.",
        "x-ms-examples": {
          "SessionHostConfigurations_Get": {
            "$ref": "./examples/SessionHostConfigurations_Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved host pool.",
            "schema": {
              "$ref": "#/definitions/SessionHostConfiguration"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "SessionHostConfiguration"
        ],
        "operationId": "SessionHostConfigurations_CreateOrUpdate",
        "description": "Create or update a SessionHostConfiguration.",
        "x-ms-examples": {
          "SessionHostConfigurations_Create": {
            "$ref": "./examples/SessionHostConfigurations_Create.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "name": "sessionHostConfiguration",
            "description": "Object containing HostPool definitions.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SessionHostConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated SessionHostConfiguration.",
            "schema": {
              "$ref": "#/definitions/SessionHostConfiguration"
            }
          },
          "201": {
            "description": "Successfully created SessionHostConfiguration.",
            "schema": {
              "$ref": "#/definitions/SessionHostConfiguration"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SessionHostConfiguration"
        ],
        "operationId": "SessionHostConfigurations_Delete",
        "description": "Remove a SessionHostConfiguration.",
        "x-ms-examples": {
          "SessionHostConfigurations_Delete": {
            "$ref": "./examples/SessionHostConfigurations_Delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed host pool.",
            "schema": {
              "$ref": "#/definitions/SessionHostConfiguration"
            }
          },
          "204": {
            "description": "Host pool does not exist."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SessionHostConfiguration"
        ],
        "operationId": "SessionHostConfigurations_Update",
        "description": "Update a SessionHostConfiguration.",
        "x-ms-examples": {
          "SessionHostConfigurations_Update": {
            "$ref": "./examples/SessionHostConfigurations_Update.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "name": "hostPool",
            "description": "Object containing HostPool definitions.",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/HostPoolPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated SessionHostConfiguration.",
            "schema": {
              "$ref": "#/definitions/SessionHostConfiguration"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHostConfigurations": {
      "get": {
        "tags": [
          "SessionHostConfiguration"
        ],
        "operationId": "SessionHostConfigurations_ListByHostPool",
        "description": "List sessionHostConfigurations.",
        "x-ms-examples": {
          "SessionHostConfigurations_ListByHostPool": {
            "$ref": "./examples/SessionHostConfigurations_ListByHostPool.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved host pool in resource group.",
            "schema": {
              "$ref": "#/definitions/SessionHostConfigurationList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/update": {
      "post": {
        "tags": [
          "HostPoolUpdate"
        ],
        "operationId": "HostPoolPost_Update",
        "description": "Initiate update of a hostpool.",
        "x-ms-examples": {
          "HostPools_Update_Post": {
            "$ref": "./examples/HostPools_Update_Post.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "name": "hostPoolUpdate",
            "description": "Object containing HostPool update definitions.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HostPoolUpdate"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Successfully initiated hostpool update."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/controlUpdate": {
      "post": {
        "tags": [
          "HostPoolUpdate"
        ],
        "operationId": "HostPools_ControlUpdate",
        "description": "Control update of a hostpool.",
        "x-ms-examples": {
          "HostPools_ControlUpdate_Post": {
            "$ref": "./examples/HostPools_ControlUpdate_Post.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "name": "hostPoolControlParameter",
            "description": "Object containing control action for hostpool update.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HostPoolControlParameter"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully controlled hostpool update."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/updateDetails": {
      "get": {
        "tags": [
          "HostPoolUpdate"
        ],
        "operationId": "UpdateDetails_List",
        "description": "Operation status of a validate hostpool update.",
        "x-ms-examples": {
          "UpdateDetails_List": {
            "$ref": "./examples/UpdateDetails_List.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Hostpool update full properties including session host config, hostpool update parameters, and migration progress.",
            "schema": {
              "$ref": "#/definitions/UpdateStatusList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/updateDetails/default": {
      "get": {
        "tags": [
          "HostPoolUpdate"
        ],
        "operationId": "UpdateDetails_Get",
        "description": "Operation status of a validate hostpool update.",
        "x-ms-examples": {
          "UpdateDetails_Get": {
            "$ref": "./examples/UpdateDetails_Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Hostpool update full properties including session host config, hostpool update parameters, and migration progress.",
            "schema": {
              "$ref": "#/definitions/UpdateStatus"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/updateValidationOperationResults/default": {
      "get": {
        "tags": [
          "HostPoolUpdate"
        ],
        "operationId": "UpdateValidationOperationResults_Get",
        "description": "Operation status of a validate hostpool update.",
        "x-ms-examples": {
          "UpdateValidationOperationResults_Get": {
            "$ref": "./examples/UpdateValidationOperationResults_Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Errors and warnings returned by hostpool update validation.",
            "schema": {
              "$ref": "#/definitions/HostPoolUpdateValidationResponse"
            }
          },
          "202": {
            "description": "Async operation in progress."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/updateOperationResults/default": {
      "get": {
        "tags": [
          "HostPoolUpdate"
        ],
        "operationId": "UpdateOperationResults_Get",
        "description": "Operation status of a validate hostpool update.",
        "x-ms-examples": {
          "UpdateOperationResults_Get": {
            "$ref": "./examples/UpdateOperationResults_Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Hostpool update full properties including session host config, hostpool update parameters, and migration progress.",
            "schema": {
              "$ref": "#/definitions/HostPoolUpdateFullProperties"
            }
          },
          "202": {
            "description": "Async operation in progress."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/retrieveRegistrationToken": {
      "post": {
        "tags": [
          "HostPool"
        ],
        "operationId": "HostPools_RetrieveRegistrationToken",
        "description": "Registration token of the host pool.",
        "x-ms-examples": {
          "HostPools_RetrieveRegistrationToken_Post": {
            "$ref": "./examples/HostPools_RetrieveRegistrationToken_Post.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved host pool in resource group.",
            "schema": {
              "$ref": "#/definitions/RegistrationInfo"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/userSessions": {
      "get": {
        "tags": [
          "UserSession"
        ],
        "operationId": "UserSessions_ListByHostPool",
        "description": "List userSessions.",
        "x-ms-examples": {
          "UserSession_ListByHostPool": {
            "$ref": "./examples/UserSession_ListByHostPool.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter expression. Valid properties for filtering are userprincipalname and sessionstate."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user sessions in host pool.",
            "schema": {
              "$ref": "#/definitions/UserSessionList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHosts/{sessionHostName}": {
      "get": {
        "tags": [
          "SessionHost"
        ],
        "operationId": "SessionHosts_Get",
        "description": "Get a session host.",
        "x-ms-examples": {
          "SessionHost_Get": {
            "$ref": "./examples/SessionHost_Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "#/parameters/SessionHostNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved session host.",
            "schema": {
              "$ref": "#/definitions/SessionHost"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SessionHost"
        ],
        "operationId": "SessionHosts_Delete",
        "description": "Remove a SessionHost.",
        "x-ms-examples": {
          "SessionHost_Delete": {
            "$ref": "./examples/SessionHost_Delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "#/parameters/SessionHostNameParameter"
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Force flag to force sessionHost deletion even when userSession exists."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed session host."
          },
          "204": {
            "description": "Session host does not exist."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SessionHost"
        ],
        "operationId": "SessionHosts_Update",
        "description": "Update a session host.",
        "x-ms-examples": {
          "SessionHost_Update": {
            "$ref": "./examples/SessionHost_Update.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "#/parameters/SessionHostNameParameter"
          },
          {
            "name": "sessionHost",
            "description": "Object containing SessionHost definitions.",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SessionHostPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated session host.",
            "schema": {
              "$ref": "#/definitions/SessionHost"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHosts": {
      "get": {
        "tags": [
          "SessionHost"
        ],
        "operationId": "SessionHosts_List",
        "description": "List sessionHosts.",
        "x-ms-examples": {
          "SessionHost_List": {
            "$ref": "./examples/SessionHost_List.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved session hosts in host pool.",
            "schema": {
              "$ref": "#/definitions/SessionHostList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/msixPackages/{msixPackageFullName}": {
      "get": {
        "tags": [
          "MSIXPackage"
        ],
        "operationId": "MSIXPackages_Get",
        "description": "Get a msixpackage.",
        "x-ms-examples": {
          "MSIXPackage_Get": {
            "$ref": "./examples/MsixPackage_Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "#/parameters/MSIXPackageFullNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved MSIX Package.",
            "schema": {
              "$ref": "#/definitions/MSIXPackage"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "MSIXPackage"
        ],
        "operationId": "MSIXPackages_CreateOrUpdate",
        "description": "Create or update a MSIX package.",
        "x-ms-examples": {
          "MSIXPackage_Create": {
            "$ref": "./examples/MsixPackage_Create.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "#/parameters/MSIXPackageFullNameParameter"
          },
          {
            "name": "msixPackage",
            "description": "Object containing  MSIX Package definitions.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MSIXPackage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated  MSIX Package.",
            "schema": {
              "$ref": "#/definitions/MSIXPackage"
            }
          },
          "201": {
            "description": "Successfully created  MSIX Package.",
            "schema": {
              "$ref": "#/definitions/MSIXPackage"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MSIXPackage"
        ],
        "operationId": "MSIXPackages_Delete",
        "description": "Remove an MSIX Package.",
        "x-ms-examples": {
          "MSIXPackage_Delete": {
            "$ref": "./examples/MsixPackage_Delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "#/parameters/MSIXPackageFullNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed MSIX Package."
          },
          "204": {
            "description": "MSIX Package does not exist."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "MSIXPackage"
        ],
        "operationId": "MSIXPackages_Update",
        "description": "Update an  MSIX Package.",
        "x-ms-examples": {
          "MSIXPackage_Update": {
            "$ref": "./examples/MsixPackage_Update.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "#/parameters/MSIXPackageFullNameParameter"
          },
          {
            "name": "msixPackage",
            "description": "Object containing MSIX Package definitions.",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MSIXPackagePatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated MSIX Package.",
            "schema": {
              "$ref": "#/definitions/MSIXPackage"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/msixPackages": {
      "get": {
        "tags": [
          "MSIXPackage"
        ],
        "operationId": "MSIXPackages_List",
        "description": "List MSIX packages in hostpool.",
        "x-ms-examples": {
          "MSIXPackage_List": {
            "$ref": "./examples/MsixPackage_List.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved MSIX Packages in hostpool.",
            "schema": {
              "$ref": "#/definitions/MSIXPackageList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/expandMsixImage": {
      "post": {
        "tags": [
          "MsixImage"
        ],
        "operationId": "MsixImages_Expand",
        "description": "Expands and Lists MSIX packages in an Image, given the Image Path.",
        "x-ms-examples": {
          "MsixImage_Expand": {
            "$ref": "./examples/MsixImage_Expand_Post.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "name": "msixImageURI",
            "description": "Object containing URI to MSIX Image",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MSIXImageURI"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved MSIX packages in specified Image Path.",
            "schema": {
              "$ref": "#/definitions/ExpandMsixImageList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHosts/{sessionHostName}/userSessions/{userSessionId}": {
      "get": {
        "tags": [
          "UserSession"
        ],
        "operationId": "UserSessions_Get",
        "description": "Get a userSession.",
        "x-ms-examples": {
          "UserSession_Get": {
            "$ref": "./examples/UserSession_Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "#/parameters/SessionHostNameParameter"
          },
          {
            "$ref": "#/parameters/UserSessionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user session.",
            "schema": {
              "$ref": "#/definitions/UserSession"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UserSession"
        ],
        "operationId": "UserSessions_Delete",
        "description": "Remove a userSession.",
        "x-ms-examples": {
          "UserSession_Delete": {
            "$ref": "./examples/UserSession_Delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "#/parameters/SessionHostNameParameter"
          },
          {
            "$ref": "#/parameters/UserSessionIdParameter"
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Force flag to login off userSession."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed user session."
          },
          "204": {
            "description": "User session does not exist."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHosts/{sessionHostName}/userSessions": {
      "get": {
        "tags": [
          "UserSession"
        ],
        "operationId": "UserSessions_List",
        "description": "List userSessions.",
        "x-ms-examples": {
          "UserSession_List": {
            "$ref": "./examples/UserSession_List.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "#/parameters/SessionHostNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user sessions in session host.",
            "schema": {
              "$ref": "#/definitions/UserSessionList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHosts/{sessionHostName}/userSessions/{userSessionId}/disconnect": {
      "post": {
        "tags": [
          "UserSession"
        ],
        "operationId": "UserSessions_Disconnect",
        "description": "Disconnect a userSession.",
        "x-ms-examples": {
          "UserSession_Disconnect_Post": {
            "$ref": "./examples/UserSession_Disconnect_Post.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "#/parameters/SessionHostNameParameter"
          },
          {
            "$ref": "#/parameters/UserSessionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully disconnected user session."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHosts/{sessionHostName}/userSessions/{userSessionId}/sendMessage": {
      "post": {
        "tags": [
          "UserSession"
        ],
        "operationId": "UserSessions_SendMessage",
        "description": "Send a message to a user.",
        "x-ms-examples": {
          "UserSession_SendMessage_Post": {
            "$ref": "./examples/UserSession_SendMessage_Post.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "#/parameters/SessionHostNameParameter"
          },
          {
            "$ref": "#/parameters/UserSessionIdParameter"
          },
          {
            "name": "sendMessage",
            "description": "Object containing message includes title and message body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SendMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully sent message to user session."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/scalingPlans": {
      "get": {
        "tags": [
          "ScalingPlan"
        ],
        "operationId": "ScalingPlans_ListByHostPool",
        "description": "List scaling plan associated with hostpool.",
        "x-ms-examples": {
          "ScalingPlan_ListByHostPool": {
            "$ref": "./examples/ScalingPlan_ListByHostPool.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved scaling plan associated with hostpool.",
            "schema": {
              "$ref": "#/definitions/ScalingPlanList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateLink"
        ],
        "operationId": "PrivateEndpointConnections_ListByHostPool",
        "description": "List private endpoint connections associated with hostpool.",
        "x-ms-examples": {
          "PrivateEndpointConnection_ListByHostPool": {
            "$ref": "./examples/PrivateEndpointConnection_ListByHostPool.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved connection list.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResultWithSystemData"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "x-ms-error-response": true,
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "PrivateLink"
        ],
        "operationId": "PrivateEndpointConnections_GetByHostPool",
        "description": "Get a private endpoint connection.",
        "x-ms-examples": {
          "PrivateEndpointConnection_GetByHostPool": {
            "$ref": "./examples/PrivateEndpointConnection_GetByHostPool.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/privatelinks.json#/parameters/PrivateEndpointConnectionName"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the connection.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionWithSystemData"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "x-ms-error-response": true,
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PrivateLink"
        ],
        "operationId": "PrivateEndpointConnections_DeleteByHostPool",
        "description": "Remove a connection.",
        "x-ms-examples": {
          "PrivateEndpointConnection_DeleteByHostPool": {
            "$ref": "./examples/PrivateEndpointConnection_DeleteByHostPool.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/privatelinks.json#/parameters/PrivateEndpointConnectionName"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed."
          },
          "204": {
            "description": "Connection does not exist."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "x-ms-error-response": true,
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PrivateLink"
        ],
        "operationId": "PrivateEndpointConnections_UpdateByHostPool",
        "description": "Approve or reject a private endpoint connection.",
        "x-ms-examples": {
          "PrivateEndpointConnection_UpdateByHostPool": {
            "$ref": "./examples/PrivateEndpointConnection_UpdateByHostPool.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/privatelinks.json#/parameters/PrivateEndpointConnectionName"
          },
          {
            "name": "connection",
            "description": "Object containing the updated connection.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v1/privatelinks.json#/definitions/PrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionWithSystemData"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "x-ms-error-response": true,
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/privateLinkResources": {
      "get": {
        "tags": [
          "PrivateLink"
        ],
        "operationId": "PrivateLinkResources_ListByHostPool",
        "description": "List the private link resources available for this hostpool.",
        "x-ms-examples": {
          "PrivateLinkResources_ListByHostPool": {
            "$ref": "./examples/PrivateLinkResources_ListByHostPool.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of resources.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "x-ms-error-response": true,
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateLink"
        ],
        "operationId": "PrivateEndpointConnections_ListByWorkspace",
        "description": "List private endpoint connections.",
        "x-ms-examples": {
          "PrivateEndpointConnection_ListByWorkspace": {
            "$ref": "./examples/PrivateEndpointConnection_ListByWorkspace.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved connection list.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResultWithSystemData"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "x-ms-error-response": true,
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "PrivateLink"
        ],
        "operationId": "PrivateEndpointConnections_GetByWorkspace",
        "description": "Get a private endpoint connection.",
        "x-ms-examples": {
          "PrivateEndpointConnection_GetByWorkspace": {
            "$ref": "./examples/PrivateEndpointConnection_GetByWorkspace.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/privatelinks.json#/parameters/PrivateEndpointConnectionName"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the connection.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionWithSystemData"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "x-ms-error-response": true,
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PrivateLink"
        ],
        "operationId": "PrivateEndpointConnections_DeleteByWorkspace",
        "description": "Remove a connection.",
        "x-ms-examples": {
          "PrivateEndpointConnection_DeleteByWorkspace": {
            "$ref": "./examples/PrivateEndpointConnection_DeleteByWorkspace.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/privatelinks.json#/parameters/PrivateEndpointConnectionName"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed."
          },
          "204": {
            "description": "Connection does not exist."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "x-ms-error-response": true,
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PrivateLink"
        ],
        "operationId": "PrivateEndpointConnections_UpdateByWorkspace",
        "description": "Approve or reject a private endpoint connection.",
        "x-ms-examples": {
          "PrivateEndpointConnection_UpdateByWorkspace": {
            "$ref": "./examples/PrivateEndpointConnection_UpdateByWorkspace.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/privatelinks.json#/parameters/PrivateEndpointConnectionName"
          },
          {
            "name": "connection",
            "description": "Object containing the updated connection.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v1/privatelinks.json#/definitions/PrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionWithSystemData"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "x-ms-error-response": true,
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}/privateLinkResources": {
      "get": {
        "tags": [
          "PrivateLink"
        ],
        "operationId": "PrivateLinkResources_ListByWorkspace",
        "description": "List the private link resources available for this workspace.",
        "x-ms-examples": {
          "PrivateLinkResources_ListByWorkspace": {
            "$ref": "./examples/PrivateLinkResources_ListByWorkspace.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of resources.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "x-ms-error-response": true,
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "CloudError": {
      "x-ms-external": true,
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorProperties"
        }
      }
    },
    "CloudErrorProperties": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code",
          "type": "string"
        },
        "message": {
          "description": "Error message indicating why the operation failed.",
          "type": "string"
        }
      }
    },
    "ResourceProviderOperationList": {
      "description": "Result of the request to list operations.",
      "readOnly": true,
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceProviderOperation"
          },
          "description": "List of operations supported by this resource provider."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "Link to the next page of results."
        }
      }
    },
    "ResourceProviderOperation": {
      "description": "Supported operation of this resource provider.",
      "readOnly": true,
      "properties": {
        "name": {
          "description": "Operation name, in format of {provider}/{resource}/{operation}",
          "type": "string"
        },
        "display": {
          "description": "Display metadata associated with the operation.",
          "properties": {
            "provider": {
              "description": "Resource provider: Microsoft Desktop Virtualization.",
              "type": "string"
            },
            "resource": {
              "description": "Resource on which the operation is performed.",
              "type": "string"
            },
            "operation": {
              "description": "Type of operation: get, read, delete, etc.",
              "type": "string"
            },
            "description": {
              "description": "Description of this operation.",
              "type": "string"
            }
          }
        },
        "isDataAction": {
          "description": "Is a data action.",
          "type": "boolean"
        },
        "properties": {
          "$ref": "#/definitions/OperationProperties"
        }
      }
    },
    "OperationProperties": {
      "description": "Properties of the operation",
      "type": "object",
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/ServiceSpecification"
        }
      }
    },
    "ServiceSpecification": {
      "description": "Service specification payload",
      "type": "object",
      "properties": {
        "logSpecifications": {
          "description": "Specifications of the Log for Azure Monitoring",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogSpecification"
          }
        }
      }
    },
    "LogSpecification": {
      "description": "Specifications of the Log for Azure Monitoring",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the log",
          "type": "string"
        },
        "displayName": {
          "description": "Localized friendly display name of the log",
          "type": "string"
        },
        "blobDuration": {
          "description": "Blob duration of the log",
          "type": "string"
        }
      }
    },
    "Workspace": {
      "type": "object",
      "description": "Represents a Workspace definition.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ResourceModelWithAllowedPropertySet"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "properties": {
          "description": "Detailed properties for Workspace",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/WorkspaceProperties"
        }
      }
    },
    "WorkspaceProperties": {
      "description": "Schema for Workspace properties.",
      "type": "object",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "ObjectId of Workspace. (internal use)",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of Workspace."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of Workspace."
        },
        "applicationGroupReferences": {
          "type": "array",
          "description": "List of applicationGroup resource Ids.",
          "items": {
            "type": "string"
          }
        },
        "cloudPcResource": {
          "type": "boolean",
          "description": "Is cloud pc resource.",
          "readOnly": true
        },
        "publicNetworkAccess": {
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          },
          "type": "string",
          "description": "Enabled allows this resource to be accessed from both public and private networks, Disabled allows this resource to only be accessed via private endpoints",
          "x-nullable": false
        }
      }
    },
    "WorkspaceList": {
      "type": "object",
      "title": "WorkspaceList",
      "description": "List of Workspace definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Workspace definitions.",
          "items": {
            "$ref": "#/definitions/Workspace"
          }
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "Link to the next page of results."
        }
      }
    },
    "WorkspacePatch": {
      "type": "object",
      "description": "Workspace properties that can be patched.",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "tags to be updated"
        },
        "properties": {
          "description": "Detailed properties for Workspace",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/WorkspacePatchProperties"
        }
      }
    },
    "WorkspacePatchProperties": {
      "description": "Workspace properties that can be patched.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of Workspace."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of Workspace."
        },
        "applicationGroupReferences": {
          "type": "array",
          "description": "List of applicationGroup links.",
          "items": {
            "type": "string"
          }
        },
        "publicNetworkAccess": {
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          },
          "type": "string",
          "description": "Enabled to allow this resource to be access from the public network"
        }
      }
    },
    "ApplicationGroup": {
      "type": "object",
      "description": "Represents a ApplicationGroup definition.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ResourceModelWithAllowedPropertySet"
        }
      ],
      "required": [
        "properties"
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "properties": {
          "description": "Detailed properties for ApplicationGroup",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGroupProperties",
          "x-nullable": false
        }
      }
    },
    "ApplicationGroupProperties": {
      "description": "Schema for ApplicationGroup properties.",
      "type": "object",
      "required": [
        "hostPoolArmPath",
        "applicationGroupType"
      ],
      "properties": {
        "objectId": {
          "type": "string",
          "description": "ObjectId of ApplicationGroup. (internal use)",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of ApplicationGroup."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of ApplicationGroup."
        },
        "hostPoolArmPath": {
          "type": "string",
          "description": "HostPool arm path of ApplicationGroup.",
          "x-nullable": false
        },
        "workspaceArmPath": {
          "type": "string",
          "description": "Workspace arm path of ApplicationGroup.",
          "readOnly": true
        },
        "applicationGroupType": {
          "enum": [
            "RemoteApp",
            "Desktop"
          ],
          "x-ms-enum": {
            "name": "ApplicationGroupType",
            "modelAsString": true
          },
          "type": "string",
          "description": "Resource Type of ApplicationGroup.",
          "x-nullable": false
        },
        "migrationRequest": {
          "$ref": "#/definitions/MigrationRequestProperties",
          "description": "The registration info of HostPool."
        },
        "cloudPcResource": {
          "type": "boolean",
          "description": "Is cloud pc resource.",
          "readOnly": true
        }
      }
    },
    "ApplicationGroupPatch": {
      "type": "object",
      "description": "ApplicationGroup properties that can be patched.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "tags to be updated"
        },
        "properties": {
          "description": "ApplicationGroup properties that can be patched.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGroupPatchProperties"
        }
      }
    },
    "ApplicationGroupPatchProperties": {
      "description": "ApplicationGroup properties that can be patched.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of ApplicationGroup."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of ApplicationGroup."
        }
      }
    },
    "ApplicationGroupList": {
      "type": "object",
      "title": "ApplicationGroupList",
      "description": "List of ApplicationGroup definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of ApplicationGroup definitions.",
          "items": {
            "$ref": "#/definitions/ApplicationGroup"
          }
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "Link to the next page of results."
        }
      }
    },
    "HostPool": {
      "type": "object",
      "description": "Represents a HostPool definition.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ResourceModelWithAllowedPropertySet"
        }
      ],
      "required": [
        "properties"
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "properties": {
          "description": "Detailed properties for HostPool",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/HostPoolProperties",
          "x-nullable": false
        }
      }
    },
    "HostPoolProperties": {
      "description": "Properties of HostPool.",
      "type": "object",
      "required": [
        "hostPoolType",
        "loadBalancerType",
        "preferredAppGroupType"
      ],
      "properties": {
        "objectId": {
          "type": "string",
          "description": "ObjectId of HostPool. (internal use)",
          "readOnly": true
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of HostPool."
        },
        "description": {
          "type": "string",
          "description": "Description of HostPool."
        },
        "hostPoolType": {
          "enum": [
            "Personal",
            "Pooled",
            "BYODesktop"
          ],
          "x-ms-enum": {
            "name": "HostPoolType",
            "modelAsString": true,
            "values": [
              {
                "value": "Personal",
                "description": "Users will be assigned a SessionHost either by administrators (PersonalDesktopAssignmentType = Direct) or upon connecting to the pool (PersonalDesktopAssignmentType = Automatic). They will always be redirected to their assigned SessionHost."
              },
              {
                "value": "Pooled",
                "description": "Users get a new (random) SessionHost every time it connects to the HostPool."
              },
              {
                "value": "BYODesktop",
                "description": "Users assign their own machines, load balancing logic remains the same as Personal. PersonalDesktopAssignmentType must be Direct."
              }
            ]
          },
          "type": "string",
          "description": "HostPool type for desktop.",
          "x-nullable": false
        },
        "personalDesktopAssignmentType": {
          "enum": [
            "Automatic",
            "Direct"
          ],
          "x-ms-enum": {
            "name": "PersonalDesktopAssignmentType",
            "modelAsString": true
          },
          "type": "string",
          "description": "PersonalDesktopAssignment type for HostPool."
        },
        "customRdpProperty": {
          "type": "string",
          "description": "Custom rdp property of HostPool."
        },
        "maxSessionLimit": {
          "type": "integer",
          "description": "The max session limit of HostPool."
        },
        "loadBalancerType": {
          "enum": [
            "BreadthFirst",
            "DepthFirst",
            "Persistent"
          ],
          "x-ms-enum": {
            "name": "LoadBalancerType",
            "modelAsString": true
          },
          "type": "string",
          "description": "The type of the load balancer.",
          "x-nullable": false
        },
        "ring": {
          "type": "integer",
          "description": "The ring number of HostPool."
        },
        "validationEnvironment": {
          "type": "boolean",
          "description": "Is validation environment."
        },
        "registrationInfo": {
          "$ref": "#/definitions/RegistrationInfo",
          "description": "The registration info of HostPool."
        },
        "vmTemplate": {
          "type": "string",
          "description": "VM template for sessionhosts configuration within hostpool."
        },
        "applicationGroupReferences": {
          "readOnly": true,
          "type": "array",
          "description": "List of applicationGroup links.",
          "items": {
            "type": "string"
          }
        },
        "ssoadfsAuthority": {
          "type": "string",
          "description": "URL to customer ADFS server for signing WVD SSO certificates."
        },
        "ssoClientId": {
          "type": "string",
          "description": "ClientId for the registered Relying Party used to issue WVD SSO certificates."
        },
        "ssoClientSecretKeyVaultPath": {
          "type": "string",
          "description": "Path to Azure KeyVault storing the secret used for communication to ADFS."
        },
        "ssoSecretType": {
          "enum": [
            "SharedKey",
            "Certificate",
            "SharedKeyInKeyVault",
            "CertificateInKeyVault"
          ],
          "x-ms-enum": {
            "name": "SSOSecretType",
            "modelAsString": true
          },
          "type": "string",
          "description": "The type of single sign on Secret Type."
        },
        "preferredAppGroupType": {
          "enum": [
            "None",
            "Desktop",
            "RailApplications"
          ],
          "x-ms-enum": {
            "name": "PreferredAppGroupType",
            "modelAsString": true
          },
          "type": "string",
          "description": "The type of preferred application group type, default to Desktop Application Group",
          "x-nullable": false
        },
        "startVMOnConnect": {
          "type": "boolean",
          "description": "The flag to turn on/off StartVMOnConnect feature."
        },
        "migrationRequest": {
          "$ref": "#/definitions/MigrationRequestProperties",
          "description": "The registration info of HostPool."
        },
        "cloudPcResource": {
          "type": "boolean",
          "description": "Is cloud pc resource.",
          "readOnly": true
        },
        "publicNetworkAccess": {
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          },
          "type": "string",
          "description": "Enabled allows this resource to be accessed from both public and private networks, Disabled allows this resource to only be accessed via private endpoints",
          "x-nullable": false
        },
        "sessionHostComponentUpdateConfiguration": {
          "$ref": "#/definitions/SessionHostComponentUpdateConfigurationProperties",
          "description": "The session host configuration for updating agent, monitoring agent, and stack component."
        }
      }
    },
    "HostPoolPatch": {
      "type": "object",
      "description": "HostPool properties that can be patched.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "tags to be updated"
        },
        "properties": {
          "description": "HostPool properties that can be patched.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/HostPoolPatchProperties"
        }
      }
    },
    "HostPoolPatchProperties": {
      "description": "Properties of HostPool.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of HostPool."
        },
        "description": {
          "type": "string",
          "description": "Description of HostPool."
        },
        "customRdpProperty": {
          "type": "string",
          "description": "Custom rdp property of HostPool."
        },
        "maxSessionLimit": {
          "type": "integer",
          "description": "The max session limit of HostPool."
        },
        "personalDesktopAssignmentType": {
          "enum": [
            "Automatic",
            "Direct"
          ],
          "x-ms-enum": {
            "name": "PersonalDesktopAssignmentType",
            "modelAsString": true
          },
          "type": "string",
          "description": "PersonalDesktopAssignment type for HostPool."
        },
        "loadBalancerType": {
          "enum": [
            "BreadthFirst",
            "DepthFirst",
            "Persistent"
          ],
          "x-ms-enum": {
            "name": "LoadBalancerType",
            "modelAsString": true
          },
          "type": "string",
          "description": "The type of the load balancer."
        },
        "ring": {
          "type": "integer",
          "description": "The ring number of HostPool."
        },
        "validationEnvironment": {
          "type": "boolean",
          "description": "Is validation environment."
        },
        "registrationInfo": {
          "$ref": "#/definitions/RegistrationInfoPatch",
          "description": "The registration info of HostPool."
        },
        "vmTemplate": {
          "type": "string",
          "description": "VM template for sessionhosts configuration within hostpool."
        },
        "ssoadfsAuthority": {
          "type": "string",
          "description": "URL to customer ADFS server for signing WVD SSO certificates."
        },
        "ssoClientId": {
          "type": "string",
          "description": "ClientId for the registered Relying Party used to issue WVD SSO certificates."
        },
        "ssoClientSecretKeyVaultPath": {
          "type": "string",
          "description": "Path to Azure KeyVault storing the secret used for communication to ADFS."
        },
        "ssoSecretType": {
          "enum": [
            "SharedKey",
            "Certificate",
            "SharedKeyInKeyVault",
            "CertificateInKeyVault"
          ],
          "x-ms-enum": {
            "name": "SSOSecretType",
            "modelAsString": true
          },
          "type": "string",
          "description": "The type of single sign on Secret Type."
        },
        "preferredAppGroupType": {
          "enum": [
            "None",
            "Desktop",
            "RailApplications"
          ],
          "x-ms-enum": {
            "name": "PreferredAppGroupType",
            "modelAsString": true
          },
          "type": "string",
          "description": "The type of preferred application group type, default to Desktop Application Group"
        },
        "startVMOnConnect": {
          "type": "boolean",
          "description": "The flag to turn on/off StartVMOnConnect feature."
        },
        "publicNetworkAccess": {
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          },
          "type": "string",
          "description": "Enabled to allow this resource to be access from the public network"
        },
        "sessionHostComponentUpdateConfiguration": {
          "$ref": "#/definitions/SessionHostComponentUpdateConfigurationProperties",
          "description": "The session host configuration for updating agent, monitoring agent, and stack component."
        }
      }
    },
    "SessionHostConfigurationList": {
      "type": "object",
      "title": "SessionHostConfigurationList",
      "description": "List of SessionHostConfiguration definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of SessionHostConfiguration definitions.",
          "items": {
            "$ref": "#/definitions/SessionHostConfiguration"
          }
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "Link to the next page of results."
        }
      }
    },
    "SessionHostConfiguration": {
      "type": "object",
      "description": "Represents a SessionHostConfiguration definition.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "properties": {
          "description": "Detailed properties for SessionHostConfiguration",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SessionHostConfigurationProperties"
        }
      }
    },
    "SessionHostConfigurationProperties": {
      "description": "Session host configurations of HostPool.",
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "date-time",
          "description": "The time when session host configuration was last modified and something was changed.",
          "readOnly": true
        },
        "vMSizeId": {
          "type": "string",
          "description": "The id of the size of a virtual machine connected to a hostpool."
        },
        "diskType": {
          "type": "string",
          "enum": [
            "Standard_LRS",
            "Premium_LRS",
            "StandardSSD_LRS",
            "UltraSSD_LRS"
          ],
          "x-ms-enum": {
            "name": "VirtualMachineDiskType",
            "modelAsString": true,
            "values": [
              {
                "value": "Standard_LRS",
                "description": "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access."
              },
              {
                "value": "Premium_LRS",
                "description": "Premium SSD locally redundant storage. Best for production and performance sensitive workloads."
              },
              {
                "value": "StandardSSD_LRS",
                "description": "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test."
              },
              {
                "value": "UltraSSD_LRS",
                "description": "Ultra SSD locally redundant storage. Best for IO-intensive workloads such as SAP HANA, top tier databases (for example, SQL, Oracle), and other transaction-heavy workloads."
              }
            ]
          },
          "description": "The disk type used by virtual machine in hostpool session host."
        },
        "vmCustomConfigurationUri": {
          "type": "string",
          "description": "The uri to the storage blob containing scripts to be run on the virtual machine after provisioning."
        },
        "imageInfo": {
          "$ref": "#/definitions/ImageInfoProperties",
          "description": "Image configurations of HostPool."
        },
        "domainInfo": {
          "$ref": "#/definitions/DomainInfoProperties",
          "description": "Domain configurations of session hosts."
        }
      }
    },
    "ImageInfoProperties": {
      "description": "Image configurations of session host in a HostPool.",
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "Gallery",
            "StorageBlob",
            "CustomImage"
          ],
          "x-ms-enum": {
            "name": "ImageType",
            "modelAsString": true,
            "values": [
              {
                "value": "Gallery",
                "description": "Using default gallery images offered by Azure Marketplace."
              },
              {
                "value": "StorageBlob",
                "description": "Using a VHD stored in a storage blob."
              },
              {
                "value": "CustomImage",
                "description": "Using custom image or custom shared image."
              }
            ]
          },
          "type": "string",
          "description": "The type of image session hosts use in the hostpool.",
          "x-nullable": false
        },
        "marketPlaceInfo": {
          "$ref": "#/definitions/MarketPlaceInfoProperties",
          "description": "The values to uniquely identify a gallery image."
        },
        "storageBlobUri": {
          "type": "string",
          "description": "The uri to the storage blob which contains the VHD. Image type must be StorageBlob."
        },
        "customId": {
          "type": "string",
          "description": "The resource id of the custom image or shared image. Image type must be CustomImage."
        }
      }
    },
    "MarketPlaceInfoProperties": {
      "description": "Image configurations of HostPool.",
      "type": "object",
      "properties": {
        "offer": {
          "type": "string",
          "description": "The offer of the image."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the image."
        },
        "sku": {
          "type": "string",
          "description": "The sku of the image."
        },
        "exactVersion": {
          "type": "string",
          "description": "The exact version of the image."
        }
      }
    },
    "DomainInfoProperties": {
      "description": "Domain configurations of session hosts.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The domain a virtual machine connected to a hostpool will join."
        },
        "joinType": {
          "enum": [
            "ActiveDirectory",
            "AzureActiveDirectory"
          ],
          "x-ms-enum": {
            "name": "DomainJoinType",
            "modelAsString": true,
            "values": [
              {
                "value": "ActiveDirectory",
                "description": "Using microsoft active directory."
              },
              {
                "value": "AzureActiveDirectory",
                "description": "Using microsoft azure active directory."
              }
            ]
          },
          "type": "string",
          "description": "The type of domain join done by the virtual machine.",
          "x-nullable": false
        },
        "mdmProviderGuid": {
          "type": "string",
          "description": "The MDM Provider GUID used during MDM enrollment for Azure AD joined virtual machines."
        },
        "credentials": {
          "$ref": "#/definitions/CredentialsProperties",
          "description": "Credentials needed to create the virtual machine."
        }
      }
    },
    "CredentialsProperties": {
      "description": "Credentials needed to create the virtual machine.",
      "type": "object",
      "properties": {
        "localAdmin": {
          "$ref": "#/definitions/KeyVaultCredentialProperties",
          "description": "The local admin credentials."
        },
        "domainAdmin": {
          "$ref": "#/definitions/KeyVaultCredentialProperties",
          "description": "The domain admin credentials."
        }
      }
    },
    "KeyVaultCredentialProperties": {
      "description": "Credentials kept in the keyvault.",
      "type": "object",
      "properties": {
        "userName": {
          "type": "string",
          "description": "The user name to the account."
        },
        "passwordKeyVaultResourceId": {
          "type": "string",
          "description": "The keyvault resource id to the keyvault secrets."
        },
        "passwordSecretName": {
          "type": "string",
          "description": "The keyvault secret name the password is stored in."
        }
      }
    },
    "HostPoolUpdate": {
      "description": "Properties for a hostpool update.",
      "type": "object",
      "properties": {
        "validateOnly": {
          "type": "boolean",
          "description": "When validateOnly is true this will run validations and return warnings and errors if any, hostpool will not be updated."
        },
        "parameters": {
          "$ref": "#/definitions/HostPoolUpdateConfigurationProperties",
          "description": "Parameters for a hostpool update."
        }
      }
    },
    "HostPoolUpdateConfigurationProperties": {
      "description": "The configurations of a hostpool update.",
      "type": "object",
      "properties": {
        "saveOriginalDisk": {
          "type": "boolean",
          "description": "Whether to save original disk. False by default."
        },
        "maxVMsRemovedDuringUpdate": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum virtual machines to be removed during hostpool update."
        },
        "maintenanceAlerts": {
          "type": "array",
          "description": "The alerts given to customers for hostpool update.",
          "items": {
            "$ref": "#/definitions/MaintenanceAlertsProperties"
          }
        },
        "logOffDelaySeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Grace period before logging off users in seconds."
        },
        "logOffMessage": {
          "type": "string",
          "description": "Log off message sent to user for logoff."
        },
        "scheduledTime": {
          "$ref": "#/definitions/ScheduledTimeProperties",
          "description": "When set schedules the hostpool update at specific time."
        }
      }
    },
    "MaintenanceAlertsProperties": {
      "type": "object",
      "description": "Properties for host pool update maintenance alerts.",
      "properties": {
        "message": {
          "type": "string",
          "description": "The path to the legacy object to migrate."
        },
        "duration": {
          "type": "integer",
          "format": "int32",
          "description": "The time maintenance notification will be sent relative to before/after the update kickoff in minutes."
        },
        "beforeKickOff": {
          "type": "boolean",
          "description": "Whether to send maintenance alert after or before hostpool update. False by default."
        }
      }
    },
    "ScheduledTimeProperties": {
      "type": "object",
      "description": "When set schedules the hostpool update at specific time.",
      "properties": {
        "dateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time the hostpool update is schedule for."
        },
        "timeZone": {
          "type": "string",
          "description": "Time zone for maintenance as defined in https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.findsystemtimezonebyid?view=net-5.0. Must be set if useLocalTime is true."
        }
      }
    },
    "UpdateStatusList": {
      "type": "object",
      "title": "UpdateStatusList",
      "description": "List of UpdateStatus definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of UpdateStatus definitions.",
          "items": {
            "$ref": "#/definitions/UpdateStatus"
          }
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "Link to the next page of results."
        }
      }
    },
    "UpdateStatus": {
      "type": "object",
      "description": "Represents a Update Status definition.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "properties": {
          "description": "Detailed properties for Update Status",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/HostPoolUpdateFullProperties"
        }
      }
    },
    "HostPoolControlParameter": {
      "description": "Represents properties for a hostpool update.",
      "type": "object",
      "properties": {
        "action": {
          "enum": [
            "Start",
            "Pause",
            "Cancel",
            "Retry",
            "Resume"
          ],
          "x-ms-enum": {
            "name": "HostPoolUpdateAction",
            "modelAsString": true,
            "values": [
              {
                "value": "Start",
                "description": "Start the hostpool update."
              },
              {
                "value": "Pause",
                "description": "Pause the hostpool update."
              },
              {
                "value": "Cancel",
                "description": "Cancel the hostpool update."
              },
              {
                "value": "Retry",
                "description": "Retry the hostpool update."
              },
              {
                "value": "Resume",
                "description": "Resume the hostpool update."
              }
            ]
          },
          "type": "string",
          "description": "Action types for controlling hostpool update.",
          "x-nullable": false
        },
        "message": {
          "type": "string",
          "description": "The cancel message sent to the user on the session host."
        }
      }
    },
    "HostPoolUpdateProgress": {
      "description": "Properties of host pool update progress.",
      "type": "object",
      "readOnly": true,
      "properties": {
        "timeCreated": {
          "format": "date-time",
          "type": "string",
          "description": "The hostpool update create time."
        },
        "timeStarted": {
          "format": "date-time",
          "type": "string",
          "description": "The hostpool update start time."
        },
        "timeFailed": {
          "format": "date-time",
          "type": "string",
          "description": "The hostpool update fail time."
        },
        "timeEnded": {
          "format": "date-time",
          "type": "string",
          "description": "The hostpool update end time."
        },
        "errors": {
          "type": "array",
          "description": "The alerts given to customers for hostpool update.",
          "items": {
            "$ref": "#/definitions/HostPoolUpdateFault"
          }
        },
        "progressPercentage": {
          "type": "number",
          "format": "float",
          "description": "The progress percentage."
        },
        "sessionHostsToUpdate": {
          "type": "integer",
          "format": "int32",
          "description": "The number of session hosts to update by hostpool update."
        },
        "sessionHostsUpdating": {
          "type": "integer",
          "format": "int32",
          "description": "The number of session hosts updating by hostpool update."
        },
        "sessionHostsUpdated": {
          "type": "integer",
          "format": "int32",
          "description": "The number of session hosts updated by hostpool update."
        },
        "sessionHostsRollbackFailed": {
          "type": "integer",
          "format": "int32",
          "description": "The number of session hosts that failed to rollback."
        }
      }
    },
    "HostPoolUpdateFullPropertiesList": {
      "type": "object",
      "title": "HostPoolUpdateFullPropertiesList",
      "description": "List of HostPoolUpdateFullPropertiesList definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of HostPoolUpdateFullPropertiesList definitions.",
          "items": {
            "$ref": "#/definitions/HostPoolUpdateFullProperties"
          }
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "Link to the next page of results."
        }
      }
    },
    "HostPoolUpdateFullProperties": {
      "description": "Hostpool update full properties including session host config, hostpool update parameters, and update progress.",
      "type": "object",
      "readOnly": true,
      "properties": {
        "updateStatus": {
          "enum": [
            "Scheduled",
            "InProgress",
            "Pausing",
            "Paused",
            "StartFailed",
            "UpdateFailed",
            "Cancelling",
            "Canceled",
            "Completed"
          ],
          "x-ms-enum": {
            "name": "HostPoolUpdateStatus",
            "modelAsString": true,
            "values": [
              {
                "value": "Scheduled",
                "description": "Hostpool update scheduled."
              },
              {
                "value": "InProgress",
                "description": "Hostpool update in progress."
              },
              {
                "value": "Pausing",
                "description": "Hostpool update pausing."
              },
              {
                "value": "Paused",
                "description": "Hostpool update paused."
              },
              {
                "value": "StartFailed",
                "description": "Hostpool update start failed."
              },
              {
                "value": "UpdateFailed",
                "description": "Hostpool update update failed."
              },
              {
                "value": "Cancelling",
                "description": "Hostpool update cancelling."
              },
              {
                "value": "Canceled",
                "description": "Hostpool update canceled."
              },
              {
                "value": "Completed",
                "description": "Hostpool update completed."
              }
            ]
          },
          "type": "string",
          "description": "State of hostpool update.",
          "x-nullable": false
        },
        "version": {
          "type": "string",
          "description": "The version of hostpool update."
        },
        "hostPoolResourceId": {
          "type": "string",
          "description": "The resourceId of hostpool."
        },
        "correlationId": {
          "type": "string",
          "description": "The correlationId of the hostpool update."
        },
        "updateProgress": {
          "$ref": "#/definitions/HostPoolUpdateProgress",
          "description": "Properties of host pool update progress."
        },
        "hostPoolUpdateConfiguration": {
          "$ref": "#/definitions/HostPoolUpdateConfigurationProperties",
          "description": "The configurations of a hostpool update."
        },
        "sessionHostConfiguration": {
          "$ref": "#/definitions/SessionHostConfigurationProperties",
          "description": "The session host configurations of a host pool."
        }
      }
    },
    "HostPoolUpdateValidationResponse": {
      "description": "Errors and warnings returned by hostpool update validation.",
      "type": "object",
      "readOnly": true,
      "properties": {
        "warnings": {
          "type": "array",
          "description": "Warnings from the hostpool update validation.",
          "items": {
            "$ref": "#/definitions/HostPoolUpdateFault"
          }
        },
        "errors": {
          "type": "array",
          "description": "Errors from the hostpool update validation.",
          "items": {
            "$ref": "#/definitions/HostPoolUpdateFault"
          }
        }
      }
    },
    "HostPoolUpdateFault": {
      "description": "Hostpool update fault information.",
      "type": "object",
      "properties": {
        "faultType": {
          "type": "string",
          "description": "Hostpool update fault type. Either ServiceError or UserError."
        },
        "faultCode": {
          "type": "string",
          "description": "Hostpool update fault code."
        },
        "faultText": {
          "type": "string",
          "description": "Hostpool update fault text."
        },
        "faultContext": {
          "type": "string",
          "description": "Hostpool update fault context."
        }
      }
    },
    "SessionHostComponentUpdateConfigurationProperties": {
      "description": "The session host configuration for updating agent, monitoring agent, and stack component.",
      "type": "object",
      "properties": {
        "maintenanceType": {
          "type": "string",
          "description": "The type of maintenance for session host components.",
          "enum": [
            "Default",
            "TenantAdminControlled"
          ],
          "x-ms-enum": {
            "name": "SessionHostComponentUpdateType",
            "modelAsString": true,
            "values": [
              {
                "value": "Default",
                "description": "Agent and other agent side components are delivery schedule is controlled by WVD Infra."
              },
              {
                "value": "TenantAdminControlled",
                "description": "TenantAdmin have opted in for Scheduled Component Update feature."
              }
            ]
          }
        },
        "useSessionHostLocalTime": {
          "type": "boolean",
          "description": "Whether to use localTime of the virtual machine."
        },
        "maintenanceWindowTimeZone": {
          "type": "string",
          "description": "Time zone for maintenance as defined in https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.findsystemtimezonebyid?view=net-5.0. Must be set if useLocalTime is true."
        },
        "primaryWindow": {
          "$ref": "#/definitions/MaintenanceWindowProperties",
          "description": "Primary Window of the maintenance. Maintenance windows are 2 hours long. We try to push component update in this window first."
        },
        "secondaryWindow": {
          "$ref": "#/definitions/SecondaryWindowProperties",
          "description": "Secondary maintenance windows. Maintenance windows are 2 hours long. We try to exercise this only when the primary window update fails."
        }
      }
    },
    "MaintenanceWindowProperties": {
      "description": "Maintenance window starting hour and day of week.",
      "type": "object",
      "properties": {
        "hour": {
          "format": "int32",
          "type": "integer",
          "description": "The update start hour of the day. (0 - 23)"
        },
        "dayOfWeek": {
          "type": "string",
          "description": "Day of the week.",
          "enum": [
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
          ],
          "x-ms-enum": {
            "name": "DayOfWeek",
            "modelAsString": false
          }
        }
      }
    },
    "SecondaryWindowProperties": {
      "description": "Secondary maintenance windows is a list of days at one specific hour. Maintenance windows are 2 hours long. We try to exercise this only when the primary window update fails.",
      "type": "object",
      "properties": {
        "hour": {
          "format": "int32",
          "type": "integer",
          "description": "The update start hour of the day. (0 - 23)"
        },
        "daysOfWeek": {
          "type": "array",
          "description": "Set of days of the week on which this schedule is active.",
          "items": {
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "type": "string"
          }
        }
      }
    },
    "RegistrationInfo": {
      "description": "Represents a RegistrationInfo definition.",
      "type": "object",
      "properties": {
        "expirationTime": {
          "format": "date-time",
          "type": "string",
          "description": "Expiration time of registration token."
        },
        "token": {
          "type": "string",
          "description": "The registration token base64 encoded string."
        },
        "registrationTokenOperation": {
          "enum": [
            "Delete",
            "None",
            "Update"
          ],
          "x-ms-enum": {
            "name": "RegistrationTokenOperation",
            "modelAsString": true
          },
          "type": "string",
          "description": "The type of resetting the token.",
          "x-nullable": false
        }
      }
    },
    "RegistrationInfoPatch": {
      "description": "Represents a RegistrationInfo definition.",
      "type": "object",
      "properties": {
        "expirationTime": {
          "format": "date-time",
          "type": "string",
          "description": "Expiration time of registration token."
        },
        "registrationTokenOperation": {
          "enum": [
            "Delete",
            "None",
            "Update"
          ],
          "x-ms-enum": {
            "name": "RegistrationTokenOperation",
            "modelAsString": true
          },
          "type": "string",
          "description": "The type of resetting the token."
        }
      }
    },
    "SendMessage": {
      "description": "Represents message sent to a UserSession.",
      "type": "object",
      "properties": {
        "messageTitle": {
          "type": "string",
          "description": "Title of message."
        },
        "messageBody": {
          "type": "string",
          "description": "Body of message."
        }
      }
    },
    "HostPoolList": {
      "type": "object",
      "title": "HostPoolList",
      "description": "List of HostPool definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of HostPool definitions.",
          "items": {
            "$ref": "#/definitions/HostPool"
          }
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "Link to the next page of results."
        }
      }
    },
    "MSIXPackage": {
      "description": "Schema for MSIX Package properties.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/Resource"
        }
      ],
      "required": [
        "properties"
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "properties": {
          "description": "Detailed properties for MSIX Package",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MSIXPackageProperties",
          "x-nullable": false
        }
      }
    },
    "MSIXPackageProperties": {
      "description": "Schema for MSIX Package properties.",
      "type": "object",
      "properties": {
        "imagePath": {
          "type": "string",
          "description": "VHD/CIM image path on Network Share.",
          "x-nullable": false
        },
        "packageName": {
          "type": "string",
          "description": "Package Name from appxmanifest.xml. ",
          "x-nullable": false
        },
        "packageFamilyName": {
          "type": "string",
          "description": "Package Family Name from appxmanifest.xml. Contains Package Name and Publisher name. ",
          "x-nullable": false
        },
        "displayName": {
          "type": "string",
          "description": "User friendly Name to be displayed in the portal. ",
          "x-nullable": true
        },
        "packageRelativePath": {
          "type": "string",
          "description": "Relative Path to the package inside the image. ",
          "x-nullable": false
        },
        "isRegularRegistration": {
          "type": "boolean",
          "description": "Specifies how to register Package in feed.",
          "x-nullable": false
        },
        "isActive": {
          "type": "boolean",
          "description": "Make this version of the package the active one across the hostpool. ",
          "x-nullable": false
        },
        "packageDependencies": {
          "type": "array",
          "description": "List of package dependencies. ",
          "items": {
            "$ref": "#/definitions/MsixPackageDependencies"
          }
        },
        "version": {
          "type": "string",
          "description": "Package Version found in the appxmanifest.xml. ",
          "x-nullable": false
        },
        "lastUpdated": {
          "format": "date-time",
          "type": "string",
          "description": "Date Package was last updated, found in the appxmanifest.xml. ",
          "x-nullable": false
        },
        "packageApplications": {
          "type": "array",
          "description": "List of package applications. ",
          "items": {
            "$ref": "#/definitions/MsixPackageApplications"
          },
          "x-nullable": false
        }
      }
    },
    "MSIXPackagePatch": {
      "type": "object",
      "description": "MSIX Package properties that can be patched.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Detailed properties for MSIX Package",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MSIXPackagePatchProperties"
        }
      }
    },
    "MSIXPackagePatchProperties": {
      "description": "MSIX Package properties that can be patched.",
      "type": "object",
      "properties": {
        "isActive": {
          "type": "boolean",
          "description": "Set a version of the package to be active across hostpool. "
        },
        "isRegularRegistration": {
          "type": "boolean",
          "description": "Set Registration mode. Regular or Delayed."
        },
        "displayName": {
          "type": "string",
          "description": "Display name for MSIX Package."
        }
      }
    },
    "MsixPackageApplications": {
      "description": "Schema for MSIX Package Application properties.",
      "type": "object",
      "properties": {
        "appId": {
          "type": "string",
          "description": "Package Application Id, found in appxmanifest.xml.",
          "x-nullable": false
        },
        "description": {
          "type": "string",
          "description": "Description of Package Application.",
          "x-nullable": false
        },
        "appUserModelID": {
          "type": "string",
          "description": "Used to activate Package Application. Consists of Package Name and ApplicationID. Found in appxmanifest.xml.",
          "x-nullable": false
        },
        "friendlyName": {
          "type": "string",
          "description": "User friendly name.",
          "x-nullable": false
        },
        "iconImageName": {
          "type": "string",
          "description": "User friendly name.",
          "x-nullable": false
        },
        "rawIcon": {
          "type": "string",
          "format": "byte",
          "description": "the icon a 64 bit string as a byte array."
        },
        "rawPng": {
          "type": "string",
          "format": "byte",
          "description": "the icon a 64 bit string as a byte array."
        }
      }
    },
    "MsixPackageDependencies": {
      "description": "Schema for MSIX Package Dependencies properties.",
      "type": "object",
      "properties": {
        "dependencyName": {
          "type": "string",
          "description": "Name of package dependency.",
          "x-nullable": false
        },
        "publisher": {
          "type": "string",
          "description": "Name of dependency publisher.",
          "x-nullable": false
        },
        "minVersion": {
          "type": "string",
          "description": "Dependency version required.",
          "x-nullable": false
        }
      }
    },
    "MSIXPackageList": {
      "type": "object",
      "title": "MsixPackageList",
      "description": "List of MSIX Package definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of MSIX Package definitions.",
          "items": {
            "$ref": "#/definitions/MSIXPackage"
          }
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "Link to the next page of results."
        }
      }
    },
    "Application": {
      "description": "Schema for Application properties.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/Resource"
        }
      ],
      "required": [
        "properties"
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "properties": {
          "description": "Detailed properties for Application",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationProperties",
          "x-nullable": false
        }
      }
    },
    "ApplicationProperties": {
      "description": "Schema for Application properties.",
      "type": "object",
      "required": [
        "commandLineSetting"
      ],
      "properties": {
        "objectId": {
          "type": "string",
          "description": "ObjectId of Application. (internal use)",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of Application."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of Application."
        },
        "filePath": {
          "type": "string",
          "description": "Specifies a path for the executable file for the application."
        },
        "msixPackageFamilyName": {
          "type": "string",
          "description": "Specifies the package family name for MSIX applications",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "msixPackageApplicationId": {
          "type": "string",
          "description": "Specifies the package application Id for MSIX applications",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "applicationType": {
          "enum": [
            "InBuilt",
            "MsixApplication"
          ],
          "x-ms-enum": {
            "name": "RemoteApplicationType",
            "modelAsString": true
          },
          "type": "string",
          "description": "Resource Type of Application.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "commandLineSetting": {
          "enum": [
            "DoNotAllow",
            "Allow",
            "Require"
          ],
          "x-ms-enum": {
            "name": "CommandLineSetting",
            "modelAsString": true
          },
          "type": "string",
          "description": "Specifies whether this published application can be launched with command line arguments provided by the client, command line arguments specified at publish time, or no command line arguments at all.",
          "x-nullable": false
        },
        "commandLineArguments": {
          "type": "string",
          "description": "Command Line Arguments for Application."
        },
        "showInPortal": {
          "type": "boolean",
          "description": "Specifies whether to show the RemoteApp program in the RD Web Access server."
        },
        "iconPath": {
          "type": "string",
          "description": "Path to icon."
        },
        "iconIndex": {
          "type": "integer",
          "description": "Index of the icon."
        },
        "iconHash": {
          "readOnly": true,
          "type": "string",
          "description": "Hash of the icon."
        },
        "iconContent": {
          "readOnly": true,
          "type": "string",
          "format": "byte",
          "description": "the icon a 64 bit string as a byte array."
        }
      }
    },
    "ApplicationList": {
      "type": "object",
      "title": "ApplicationList",
      "description": "List of Application definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Application definitions.",
          "items": {
            "$ref": "#/definitions/Application"
          }
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "Link to the next page of results."
        }
      }
    },
    "ApplicationPatch": {
      "type": "object",
      "description": "Application properties that can be patched.",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "tags to be updated"
        },
        "properties": {
          "description": "Detailed properties for Application",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationPatchProperties"
        }
      }
    },
    "ApplicationPatchProperties": {
      "description": "Application properties that can be patched.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of Application."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of Application."
        },
        "filePath": {
          "type": "string",
          "description": "Specifies a path for the executable file for the application."
        },
        "commandLineSetting": {
          "enum": [
            "DoNotAllow",
            "Allow",
            "Require"
          ],
          "x-ms-enum": {
            "name": "CommandLineSetting",
            "modelAsString": true
          },
          "type": "string",
          "description": "Specifies whether this published application can be launched with command line arguments provided by the client, command line arguments specified at publish time, or no command line arguments at all."
        },
        "commandLineArguments": {
          "type": "string",
          "description": "Command Line Arguments for Application."
        },
        "showInPortal": {
          "type": "boolean",
          "description": "Specifies whether to show the RemoteApp program in the RD Web Access server."
        },
        "iconPath": {
          "type": "string",
          "description": "Path to icon."
        },
        "iconIndex": {
          "type": "integer",
          "description": "Index of the icon."
        },
        "msixPackageFamilyName": {
          "type": "string",
          "description": "Specifies the package family name for MSIX applications",
          "x-nullable": true
        },
        "msixPackageApplicationId": {
          "type": "string",
          "description": "Specifies the package application Id for MSIX applications",
          "x-nullable": true
        },
        "applicationType": {
          "enum": [
            "InBuilt",
            "MsixApplication"
          ],
          "x-ms-enum": {
            "name": "RemoteApplicationType",
            "modelAsString": true
          },
          "type": "string",
          "description": "Resource Type of Application."
        }
      }
    },
    "Desktop": {
      "description": "Schema for Desktop properties.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "properties": {
          "description": "Detailed properties for Desktop",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DesktopProperties"
        }
      }
    },
    "DesktopProperties": {
      "description": "Schema for Desktop properties.",
      "type": "object",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "ObjectId of Desktop. (internal use)",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of Desktop."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of Desktop."
        },
        "iconHash": {
          "readOnly": true,
          "type": "string",
          "description": "Hash of the icon."
        },
        "iconContent": {
          "readOnly": true,
          "type": "string",
          "format": "byte",
          "description": "The icon a 64 bit string as a byte array."
        }
      }
    },
    "DesktopList": {
      "type": "object",
      "title": "DesktopList",
      "description": "List of Desktop definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Desktop definitions.",
          "items": {
            "$ref": "#/definitions/Desktop"
          }
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "Link to the next page of results."
        }
      }
    },
    "DesktopPatch": {
      "type": "object",
      "description": "Desktop properties that can be patched.",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "tags to be updated"
        },
        "properties": {
          "description": "Detailed properties for Desktop",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DesktopPatchProperties"
        }
      }
    },
    "DesktopPatchProperties": {
      "description": "Desktop properties that can be patched.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of Desktop."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of Desktop."
        }
      }
    },
    "StartMenuItemProperties": {
      "description": "Schema for StartMenuItem properties.",
      "type": "object",
      "properties": {
        "appAlias": {
          "type": "string",
          "description": "Alias of StartMenuItem."
        },
        "filePath": {
          "type": "string",
          "description": "Path to the file of StartMenuItem."
        },
        "commandLineArguments": {
          "type": "string",
          "description": "Command line arguments for StartMenuItem."
        },
        "iconPath": {
          "type": "string",
          "description": "Path to the icon."
        },
        "iconIndex": {
          "type": "integer",
          "description": "Index of the icon."
        }
      }
    },
    "StartMenuItem": {
      "type": "object",
      "description": "Represents a StartMenuItem definition.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Detailed properties for StartMenuItem",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/StartMenuItemProperties"
        }
      }
    },
    "StartMenuItemList": {
      "type": "object",
      "title": "StartMenuItemList",
      "description": "List of StartMenuItem definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of StartMenuItem definitions.",
          "items": {
            "$ref": "#/definitions/StartMenuItem"
          }
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "Link to the next page of results."
        }
      }
    },
    "ExpandMsixImageProperties": {
      "description": "Schema for Expand MSIX Image properties.",
      "type": "object",
      "properties": {
        "packageAlias": {
          "type": "string",
          "description": "Alias of MSIX Package."
        },
        "imagePath": {
          "type": "string",
          "description": "VHD/CIM image path on Network Share.",
          "x-nullable": false
        },
        "packageName": {
          "type": "string",
          "description": "Package Name from appxmanifest.xml. ",
          "x-nullable": false
        },
        "packageFamilyName": {
          "type": "string",
          "description": "Package Family Name from appxmanifest.xml. Contains Package Name and Publisher name. ",
          "x-nullable": false
        },
        "packageFullName": {
          "type": "string",
          "description": "Package Full Name from appxmanifest.xml. ",
          "x-nullable": false
        },
        "displayName": {
          "type": "string",
          "description": "User friendly Name to be displayed in the portal. ",
          "x-nullable": true
        },
        "packageRelativePath": {
          "type": "string",
          "description": "Relative Path to the package inside the image. ",
          "x-nullable": false
        },
        "isRegularRegistration": {
          "type": "boolean",
          "description": "Specifies how to register Package in feed.",
          "x-nullable": false
        },
        "isActive": {
          "type": "boolean",
          "description": "Make this version of the package the active one across the hostpool. ",
          "x-nullable": false
        },
        "packageDependencies": {
          "type": "array",
          "description": "List of package dependencies. ",
          "items": {
            "$ref": "#/definitions/MsixPackageDependencies"
          },
          "x-nullable": true
        },
        "version": {
          "type": "string",
          "description": "Package Version found in the appxmanifest.xml. ",
          "x-nullable": false
        },
        "lastUpdated": {
          "format": "date-time",
          "type": "string",
          "description": "Date Package was last updated, found in the appxmanifest.xml. ",
          "x-nullable": false
        },
        "packageApplications": {
          "type": "array",
          "description": "List of package applications. ",
          "items": {
            "$ref": "#/definitions/MsixPackageApplications"
          },
          "x-nullable": false
        }
      }
    },
    "ExpandMsixImage": {
      "type": "object",
      "description": "Represents the definition of contents retrieved after expanding the MSIX Image. ",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Detailed properties for ExpandMsixImage",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExpandMsixImageProperties"
        }
      }
    },
    "ExpandMsixImageList": {
      "type": "object",
      "title": "ExpandMsixImageList",
      "description": "List of MSIX package properties retrieved from MSIX Image expansion.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of MSIX package properties from give MSIX Image.",
          "items": {
            "$ref": "#/definitions/ExpandMsixImage"
          }
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "Link to the next page of results."
        }
      }
    },
    "MSIXImageURI": {
      "description": "Represents URI referring to MSIX Image",
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "URI to Image"
        }
      }
    },
    "SessionHost": {
      "type": "object",
      "description": "Represents a SessionHost definition.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "properties": {
          "description": "Detailed properties for SessionHost",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SessionHostProperties"
        }
      }
    },
    "SessionHostProperties": {
      "description": "Schema for SessionHost properties.",
      "type": "object",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "ObjectId of SessionHost. (internal use)",
          "readOnly": true
        },
        "lastHeartBeat": {
          "format": "date-time",
          "type": "string",
          "description": "Last heart beat from SessionHost."
        },
        "sessions": {
          "type": "integer",
          "description": "Number of sessions on SessionHost."
        },
        "agentVersion": {
          "type": "string",
          "description": "Version of agent on SessionHost."
        },
        "allowNewSession": {
          "type": "boolean",
          "description": "Allow a new session."
        },
        "virtualMachineId": {
          "type": "string",
          "description": "Virtual Machine Id of SessionHost's underlying virtual machine.",
          "readOnly": true
        },
        "resourceId": {
          "type": "string",
          "description": "Resource Id of SessionHost's underlying virtual machine.",
          "readOnly": true
        },
        "assignedUser": {
          "type": "string",
          "description": "User assigned to SessionHost."
        },
        "status": {
          "enum": [
            "Available",
            "Unavailable",
            "Shutdown",
            "Disconnected",
            "Upgrading",
            "UpgradeFailed",
            "NoHeartbeat",
            "NotJoinedToDomain",
            "DomainTrustRelationshipLost",
            "SxSStackListenerNotReady",
            "FSLogixNotHealthy",
            "NeedsAssistance"
          ],
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": true,
            "values": [
              {
                "value": "Available",
                "description": "Session Host has passed all the health checks and is available to handle connections."
              },
              {
                "value": "Unavailable",
                "description": "Session Host is either turned off or has failed critical health checks which is causing service not to be able to route connections to this session host. Note this replaces previous 'NoHeartBeat' status."
              },
              {
                "value": "Shutdown",
                "description": "Session Host is shutdown - RD Agent reported session host to be stopped or deallocated."
              },
              {
                "value": "Disconnected",
                "description": "The Session Host is unavailable because it is currently disconnected."
              },
              {
                "value": "Upgrading",
                "description": "Session Host is unavailable because currently an upgrade of RDAgent/side-by-side stack is in progress. Note: this state will be removed once the upgrade completes and the host is able to accept connections."
              },
              {
                "value": "UpgradeFailed",
                "description": "Session Host is unavailable because the critical component upgrade (agent, side-by-side stack, etc.) failed."
              },
              {
                "value": "NoHeartbeat",
                "description": "The Session Host is not heart beating."
              },
              {
                "value": "NotJoinedToDomain",
                "description": "SessionHost is not joined to domain."
              },
              {
                "value": "DomainTrustRelationshipLost",
                "description": "SessionHost's domain trust relationship lost"
              },
              {
                "value": "SxSStackListenerNotReady",
                "description": "SxS stack installed on the SessionHost is not ready to receive connections."
              },
              {
                "value": "FSLogixNotHealthy",
                "description": "FSLogix is in an unhealthy state on the session host."
              },
              {
                "value": "NeedsAssistance",
                "description": "New status to inform admins that the health on their endpoint needs to be fixed. The connections might not fail, as these issues are not fatal."
              }
            ]
          },
          "type": "string",
          "description": "Status for a SessionHost."
        },
        "statusTimestamp": {
          "format": "date-time",
          "type": "string",
          "description": "The timestamp of the status.",
          "readOnly": true
        },
        "osVersion": {
          "type": "string",
          "description": "The version of the OS on the session host."
        },
        "sxSStackVersion": {
          "type": "string",
          "description": "The version of the side by side stack on the session host."
        },
        "updateState": {
          "enum": [
            "Initial",
            "Pending",
            "Started",
            "Succeeded",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "UpdateState",
            "modelAsString": true
          },
          "type": "string",
          "description": "Update state of a SessionHost."
        },
        "lastUpdateTime": {
          "format": "date-time",
          "type": "string",
          "description": "The timestamp of the last update.",
          "readOnly": true
        },
        "updateErrorMessage": {
          "type": "string",
          "description": "The error message."
        },
        "sessionHostHealthCheckResults": {
          "type": "array",
          "readOnly": true,
          "description": "List of SessionHostHealthCheckReports",
          "items": {
            "$ref": "#/definitions/SessionHostHealthCheckReport"
          }
        },
        "lastSessionHostUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last time update was completed.",
          "readOnly": true
        },
        "sessionHostConfigurationLastUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "This time will match the time in the session host configuration for when the update was initiated.",
          "readOnly": true
        },
        "imageResourceId": {
          "type": "string",
          "description": "The resourceId of the image of session host.",
          "readOnly": true
        },
        "imageType": {
          "enum": [
            "Gallery",
            "StorageBlob",
            "CustomImage"
          ],
          "x-ms-enum": {
            "name": "ImageType",
            "modelAsString": true,
            "values": [
              {
                "value": "Gallery",
                "description": "Using default gallery images offered by azure market place."
              },
              {
                "value": "StorageBlob",
                "description": "Using a VHD stored in a storage blob."
              },
              {
                "value": "CustomImage",
                "description": "Using custom image or custom shared image."
              }
            ]
          },
          "type": "string",
          "description": "The type of image session hosts use in the hostpool.",
          "x-nullable": false,
          "readOnly": true
        },
        "updateStatus": {
          "enum": [
            "InProgress",
            "NotInProgress"
          ],
          "x-ms-enum": {
            "name": "SessionHostUpdateStatus",
            "modelAsString": true,
            "values": [
              {
                "value": "InProgress",
                "description": "Session host update in progress."
              },
              {
                "value": "NotInProgress",
                "description": "Session host update not in progress."
              }
            ]
          },
          "type": "string",
          "description": "Updating state of the session host.",
          "x-nullable": false,
          "readOnly": true
        }
      }
    },
    "SessionHostHealthCheckReport": {
      "type": "object",
      "description": "The report for session host information.",
      "properties": {
        "healthCheckName": {
          "enum": [
            "DomainJoinedCheck",
            "DomainTrustCheck",
            "FSLogixHealthCheck",
            "SxSStackListenerCheck",
            "UrlsAccessibleCheck",
            "MonitoringAgentCheck",
            "DomainReachable",
            "WebRTCRedirectorCheck",
            "SupportedEncryptionCheck",
            "MetaDataServiceCheck",
            "AppAttachHealthCheck"
          ],
          "x-ms-enum": {
            "name": "HealthCheckName",
            "modelAsString": true,
            "values": [
              {
                "value": "DomainJoinedCheck",
                "description": "Verifies the SessionHost is joined to a domain. If this check fails is classified as fatal as no connection can succeed if the SessionHost is not joined to the domain."
              },
              {
                "value": "DomainTrustCheck",
                "description": "Verifies the SessionHost is not experiencing domain trust issues that will prevent authentication on SessionHost at connection time when session is created. If this check fails is classified as fatal as no connection can succeed if we cannot reach the domain for authentication on the SessionHost."
              },
              {
                "value": "FSLogixHealthCheck",
                "description": "Verifies the FSLogix service is up and running to make sure users' profiles are loaded in the session. If this check fails is classified as fatal as even if the connection can succeed, user experience is bad as the user profile cannot be loaded and user will get a temporary profile in the session."
              },
              {
                "value": "SxSStackListenerCheck",
                "description": "Verifies that the SxS stack is up and running so connections can succeed. If this check fails is classified as fatal as no connection can succeed if the SxS stack is not ready."
              },
              {
                "value": "UrlsAccessibleCheck",
                "description": "Verifies that the required WVD service and Geneva URLs are reachable from the SessionHost. These URLs are: RdTokenUri, RdBrokerURI, RdDiagnosticsUri and storage blob URLs for agent monitoring (geneva). If this check fails, it is non fatal and the machine still can service connections, main issue may be that monitoring agent is unable to store warm path data (logs, operations ...)."
              },
              {
                "value": "MonitoringAgentCheck",
                "description": "Verifies that the required Geneva agent is running. If this check fails, it is non fatal and the machine still can service connections, main issue may be that monitoring agent is missing or running (possibly) older version."
              },
              {
                "value": "DomainReachable",
                "description": "Verifies the domain the SessionHost is joined to is still reachable. If this check fails is classified as fatal as no connection can succeed if the domain the SessionHost is joined is not reachable at the time of connection."
              },
              {
                "value": "WebRTCRedirectorCheck",
                "description": "Verifies whether the WebRTCRedirector component is healthy. The WebRTCRedirector component is used to optimize video and audio performance in Microsoft Teams. This checks whether the component is still running, and whether there is a higher version available. If this check fails, it is non fatal and the machine still can service connections, main issue may be the WebRTCRedirector component has to be restarted or updated."
              },
              {
                "value": "SupportedEncryptionCheck",
                "description": "Verifies the value of SecurityLayer registration key. If the value is 0 (SecurityLayer.RDP) this check fails with Error code = NativeMethodErrorCode.E_FAIL and is fatal. If the value is 1 (SecurityLayer.Negotiate) this check fails with Error code = NativeMethodErrorCode.ERROR_SUCCESS and is non fatal."
              },
              {
                "value": "MetaDataServiceCheck",
                "description": "Verifies the metadata service is accessible and return compute properties."
              },
              {
                "value": "AppAttachHealthCheck",
                "description": "Verifies that the AppAttachService is healthy (there were no issues during package staging). The AppAttachService is used to enable the staging/registration (and eventual deregistration/destaging) of MSIX apps that have been set up by the tenant admin. This checks whether the component had any failures during package staging. Failures in staging will prevent some MSIX apps from working properly for the end user. If this check fails, it is non fatal and the machine still can service connections, main issue may be certain apps will not work for end-users."
              }
            ]
          },
          "type": "string",
          "description": "Represents the name of the health check operation performed.",
          "readOnly": true
        },
        "healthCheckResult": {
          "enum": [
            "Unknown",
            "HealthCheckSucceeded",
            "HealthCheckFailed",
            "SessionHostShutdown"
          ],
          "x-ms-enum": {
            "name": "HealthCheckResult",
            "modelAsString": true,
            "values": [
              {
                "value": "Unknown",
                "description": "Health check result is not currently known."
              },
              {
                "value": "HealthCheckSucceeded",
                "description": "Health check passed."
              },
              {
                "value": "HealthCheckFailed",
                "description": "Health check failed."
              },
              {
                "value": "SessionHostShutdown",
                "description": "We received a Shutdown notification."
              }
            ]
          },
          "type": "string",
          "description": "Represents the Health state of the health check we performed.",
          "readOnly": true
        },
        "additionalFailureDetails": {
          "$ref": "#/definitions/SessionHostHealthCheckFailureDetails",
          "description": "Additional detailed information on the failure.",
          "readOnly": true
        }
      }
    },
    "SessionHostHealthCheckFailureDetails": {
      "type": "object",
      "description": "Contains details on the failure.",
      "properties": {
        "message": {
          "type": "string",
          "description": "Failure message: hints on what is wrong and how to recover.",
          "readOnly": true
        },
        "errorCode": {
          "type": "integer",
          "format": "int32",
          "description": "Error code corresponding for the failure.",
          "readOnly": true
        },
        "lastHealthCheckDateTime": {
          "format": "date-time",
          "type": "string",
          "description": "The timestamp of the last update.",
          "readOnly": true
        }
      }
    },
    "SessionHostPatch": {
      "type": "object",
      "description": "SessionHost properties that can be patched.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Detailed properties for SessionHost",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SessionHostPatchProperties"
        }
      }
    },
    "SessionHostPatchProperties": {
      "description": "SessionHost properties that can be patched.",
      "type": "object",
      "properties": {
        "allowNewSession": {
          "type": "boolean",
          "description": "Allow a new session."
        },
        "assignedUser": {
          "type": "string",
          "description": "User assigned to SessionHost."
        }
      }
    },
    "SessionHostList": {
      "type": "object",
      "title": "SessionHostList",
      "description": "List of SessionHost definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of SessionHost definitions.",
          "items": {
            "$ref": "#/definitions/SessionHost"
          }
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "Link to the next page of results."
        }
      }
    },
    "UserSession": {
      "type": "object",
      "description": "Represents a UserSession definition.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "properties": {
          "description": "Detailed properties for UserSession",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UserSessionProperties"
        }
      }
    },
    "UserSessionProperties": {
      "description": "Schema for UserSession properties.",
      "type": "object",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "ObjectId of user session. (internal use)",
          "readOnly": true
        },
        "userPrincipalName": {
          "type": "string",
          "description": "The user principal name."
        },
        "applicationType": {
          "enum": [
            "RemoteApp",
            "Desktop"
          ],
          "x-ms-enum": {
            "name": "ApplicationType",
            "modelAsString": true
          },
          "type": "string",
          "description": "Application type of application."
        },
        "sessionState": {
          "enum": [
            "Unknown",
            "Active",
            "Disconnected",
            "Pending",
            "LogOff",
            "UserProfileDiskMounted"
          ],
          "x-ms-enum": {
            "name": "SessionState",
            "modelAsString": true
          },
          "type": "string",
          "description": "State of user session."
        },
        "activeDirectoryUserName": {
          "type": "string",
          "description": "The active directory user name."
        },
        "createTime": {
          "format": "date-time",
          "type": "string",
          "description": "The timestamp of the user session create."
        }
      }
    },
    "UserSessionList": {
      "type": "object",
      "title": "UserSessionList",
      "description": "List of UserSession definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of UserSession definitions.",
          "items": {
            "$ref": "#/definitions/UserSession"
          }
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "Link to the next page of results."
        }
      }
    },
    "ScalingPlan": {
      "type": "object",
      "title": "ScalingPlan",
      "description": "Represents a scaling plan definition.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ResourceModelWithAllowedPropertySet"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "properties": {
          "description": "Detailed properties for scaling plan.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ScalingPlanProperties"
        }
      }
    },
    "ScalingPlanProperties": {
      "type": "object",
      "description": "Scaling plan properties.",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "ObjectId of scaling plan. (internal use)",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of scaling plan."
        },
        "friendlyName": {
          "type": "string",
          "description": "User friendly name of scaling plan."
        },
        "timeZone": {
          "type": "string",
          "description": "Timezone of the scaling plan."
        },
        "hostPoolType": {
          "enum": [
            "Personal",
            "Pooled",
            "BYODesktop"
          ],
          "x-ms-enum": {
            "name": "HostPoolType",
            "modelAsString": true,
            "values": [
              {
                "value": "Personal",
                "description": "Users will be assigned a SessionHost either by administrators (PersonalDesktopAssignmentType = Direct) or upon connecting to the pool (PersonalDesktopAssignmentType = Automatic). They will always be redirected to their assigned SessionHost."
              },
              {
                "value": "Pooled",
                "description": "Users get a new (random) SessionHost every time it connects to the HostPool."
              },
              {
                "value": "BYODesktop",
                "description": "Users assign their own machines, load balancing logic remains the same as Personal. PersonalDesktopAssignmentType must be Direct."
              }
            ]
          },
          "type": "string",
          "description": "HostPool type for desktop.",
          "x-nullable": false
        },
        "exclusionTag": {
          "type": "string",
          "description": "Exclusion tag for scaling plan."
        },
        "schedules": {
          "type": "array",
          "description": "List of ScalingSchedule definitions.",
          "items": {
            "$ref": "#/definitions/ScalingSchedule"
          }
        },
        "hostPoolReferences": {
          "type": "array",
          "description": "List of ScalingHostPoolReference definitions.",
          "items": {
            "$ref": "#/definitions/ScalingHostPoolReference"
          }
        }
      }
    },
    "ScalingSchedule": {
      "description": "Scaling plan schedule.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the scaling schedule."
        },
        "daysOfWeek": {
          "type": "array",
          "description": "Set of days of the week on which this schedule is active.",
          "items": {
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "type": "string"
          }
        },
        "rampUpStartTime": {
          "format": "date-time",
          "type": "string",
          "description": "Starting time for ramp up period."
        },
        "rampUpLoadBalancingAlgorithm": {
          "enum": [
            "BreadthFirst",
            "DepthFirst"
          ],
          "x-ms-enum": {
            "name": "SessionHostLoadBalancingAlgorithm",
            "modelAsString": true
          },
          "type": "string",
          "description": "Load balancing algorithm for ramp up period."
        },
        "rampUpMinimumHostsPct": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 100,
          "description": "Minimum host percentage for ramp up period."
        },
        "rampUpCapacityThresholdPct": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 100,
          "description": "Capacity threshold for ramp up period."
        },
        "peakStartTime": {
          "format": "date-time",
          "type": "string",
          "description": "Starting time for peak period."
        },
        "peakLoadBalancingAlgorithm": {
          "enum": [
            "BreadthFirst",
            "DepthFirst"
          ],
          "x-ms-enum": {
            "name": "SessionHostLoadBalancingAlgorithm",
            "modelAsString": true
          },
          "type": "string",
          "description": "Load balancing algorithm for peak period."
        },
        "rampDownStartTime": {
          "format": "date-time",
          "type": "string",
          "description": "Starting time for ramp down period."
        },
        "rampDownLoadBalancingAlgorithm": {
          "enum": [
            "BreadthFirst",
            "DepthFirst"
          ],
          "x-ms-enum": {
            "name": "SessionHostLoadBalancingAlgorithm",
            "modelAsString": true
          },
          "type": "string",
          "description": "Load balancing algorithm for ramp down period."
        },
        "rampDownMinimumHostsPct": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 100,
          "description": "Minimum host percentage for ramp down period."
        },
        "rampDownCapacityThresholdPct": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 100,
          "description": "Capacity threshold for ramp down period."
        },
        "rampDownForceLogoffUsers": {
          "type": "boolean",
          "description": "Should users be logged off forcefully from hosts."
        },
        "rampDownStopHostsWhen": {
          "enum": [
            "ZeroSessions",
            "ZeroActiveSessions"
          ],
          "x-ms-enum": {
            "name": "StopHostsWhen",
            "modelAsString": true
          },
          "type": "string",
          "description": "Specifies when to stop hosts during ramp down period."
        },
        "rampDownWaitTimeMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Number of minutes to wait to stop hosts during ramp down period."
        },
        "rampDownNotificationMessage": {
          "type": "string",
          "description": "Notification message for users during ramp down period."
        },
        "offPeakStartTime": {
          "format": "date-time",
          "type": "string",
          "description": "Starting time for off-peak period."
        },
        "offPeakLoadBalancingAlgorithm": {
          "enum": [
            "BreadthFirst",
            "DepthFirst"
          ],
          "x-ms-enum": {
            "name": "SessionHostLoadBalancingAlgorithm",
            "modelAsString": true
          },
          "type": "string",
          "description": "Load balancing algorithm for off-peak period."
        }
      }
    },
    "ScalingHostPoolReference": {
      "description": "Scaling plan reference to hostpool.",
      "type": "object",
      "properties": {
        "hostPoolArmPath": {
          "type": "string",
          "description": "Arm path of referenced hostpool."
        },
        "scalingPlanEnabled": {
          "type": "boolean",
          "description": "Is the scaling plan enabled for this hostpool."
        }
      }
    },
    "ScalingPlanList": {
      "type": "object",
      "title": "ScalingPlanList",
      "description": "List of scaling plan definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of scaling plan definitions.",
          "items": {
            "$ref": "#/definitions/ScalingPlan"
          }
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "Link to the next page of results."
        }
      }
    },
    "ScalingPlanPatch": {
      "type": "object",
      "description": "Scaling plan properties that can be patched.",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "tags to be updated"
        },
        "properties": {
          "description": "Detailed properties for scaling plan",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ScalingPlanPatchProperties"
        }
      }
    },
    "ScalingPlanPatchProperties": {
      "type": "object",
      "description": "Scaling plan properties.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of scaling plan."
        },
        "friendlyName": {
          "type": "string",
          "description": "User friendly name of scaling plan."
        },
        "timeZone": {
          "type": "string",
          "description": "Timezone of the scaling plan."
        },
        "hostPoolType": {
          "enum": [
            "Personal",
            "Pooled",
            "BYODesktop"
          ],
          "x-ms-enum": {
            "name": "HostPoolType",
            "modelAsString": true,
            "values": [
              {
                "value": "Personal",
                "description": "Users will be assigned a SessionHost either by administrators (PersonalDesktopAssignmentType = Direct) or upon connecting to the pool (PersonalDesktopAssignmentType = Automatic). They will always be redirected to their assigned SessionHost."
              },
              {
                "value": "Pooled",
                "description": "Users get a new (random) SessionHost every time it connects to the HostPool."
              },
              {
                "value": "BYODesktop",
                "description": "Users assign their own machines, load balancing logic remains the same as Personal. PersonalDesktopAssignmentType must be Direct."
              }
            ]
          },
          "type": "string",
          "description": "HostPool type for desktop.",
          "x-nullable": false
        },
        "exclusionTag": {
          "type": "string",
          "description": "Exclusion tag for scaling plan."
        },
        "schedules": {
          "type": "array",
          "description": "List of ScalingSchedule definitions.",
          "items": {
            "$ref": "#/definitions/ScalingSchedule"
          }
        },
        "hostPoolReferences": {
          "type": "array",
          "description": "List of ScalingHostPoolReference definitions.",
          "items": {
            "$ref": "#/definitions/ScalingHostPoolReference"
          }
        }
      }
    },
    "MigrationRequestProperties": {
      "type": "object",
      "description": "Properties for arm migration.",
      "properties": {
        "operation": {
          "enum": [
            "Start",
            "Revoke",
            "Complete",
            "Hide",
            "Unhide"
          ],
          "x-ms-enum": {
            "name": "Operation",
            "modelAsString": true,
            "values": [
              {
                "value": "Start",
                "description": "Start the migration."
              },
              {
                "value": "Revoke",
                "description": "Revoke the migration."
              },
              {
                "value": "Complete",
                "description": "Complete the migration."
              },
              {
                "value": "Hide",
                "description": "Hide the hostpool."
              },
              {
                "value": "Unhide",
                "description": "Unhide the hostpool."
              }
            ]
          },
          "type": "string",
          "description": "The type of operation for migration."
        },
        "migrationPath": {
          "type": "string",
          "description": "The path to the legacy object to migrate."
        }
      }
    },
    "PrivateEndpointConnectionWithSystemData": {
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/privatelinks.json#/definitions/PrivateEndpointConnection"
        }
      ],
      "description": "The Private Endpoint Connection resource."
    },
    "PrivateLinkResourceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private link resources",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "Link to the next page of results."
        }
      },
      "description": "A list of private link resources"
    },
    "PrivateLinkResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/Resource"
        }
      ],
      "description": "A private link resource"
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "properties": {
        "groupId": {
          "description": "The private link resource group id.",
          "type": "string",
          "readOnly": true
        },
        "requiredMembers": {
          "description": "The private link resource required member names.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The private link resource Private link DNS zone name."
        }
      },
      "description": "Properties of a private link resource."
    },
    "PrivateEndpointConnectionListResultWithSystemData": {
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private endpoint connections",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnectionWithSystemData"
          }
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "Link to the next page of results."
        }
      },
      "description": "List of private endpoint connection associated with the specified storage account"
    }
  },
  "parameters": {
    "HostPoolNameParameter": {
      "name": "hostPoolName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the host pool within the specified resource group",
      "maxLength": 64,
      "minLength": 3,
      "x-ms-parameter-location": "method"
    },
    "MSIXPackageFullNameParameter": {
      "name": "msixPackageFullName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The version specific package full name of the MSIX package within specified hostpool",
      "maxLength": 100,
      "minLength": 3,
      "x-ms-parameter-location": "method"
    },
    "ApplicationGroupNameParameter": {
      "name": "applicationGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the application group",
      "maxLength": 64,
      "minLength": 3,
      "x-ms-parameter-location": "method"
    },
    "ApplicationNameParameter": {
      "name": "applicationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the application within the specified application group",
      "maxLength": 24,
      "minLength": 3,
      "x-ms-parameter-location": "method"
    },
    "DesktopNameParameter": {
      "name": "desktopName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the desktop within the specified desktop group",
      "maxLength": 24,
      "minLength": 3,
      "x-ms-parameter-location": "method"
    },
    "WorkspaceNameParameter": {
      "name": "workspaceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the workspace",
      "maxLength": 64,
      "minLength": 3,
      "x-ms-parameter-location": "method"
    },
    "SessionHostNameParameter": {
      "name": "sessionHostName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the session host within the specified host pool",
      "maxLength": 48,
      "minLength": 3,
      "x-ms-parameter-location": "method"
    },
    "UserSessionIdParameter": {
      "name": "userSessionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the user session within the specified session host",
      "maxLength": 24,
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "StartMenuItemNameParameter": {
      "name": "startMenuItemName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the start menu item within the specified host pool",
      "maxLength": 24,
      "minLength": 3,
      "x-ms-parameter-location": "method"
    },
    "MSIXImageURIParameter": {
      "name": "msixImageURI",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "URI to the MSIX Image (VHD/CIM).",
      "maxLength": 100,
      "minLength": 3,
      "x-ms-parameter-location": "method"
    },
    "ScalingPlanNameParameter": {
      "name": "scalingPlanName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the scaling plan.",
      "maxLength": 24,
      "minLength": 3,
      "x-ms-parameter-location": "method"
    }
  }
}
