{
  "swagger": "2.0",
  "info": {
    "title": "Azure API Center",
    "version": "2024-03-01",
    "description": "Azure API Center Resource Provider.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Services"
    },
    {
      "name": "MetadataSchemas"
    },
    {
      "name": "Workspaces"
    },
    {
      "name": "Apis"
    },
    {
      "name": "ApiVersions"
    },
    {
      "name": "ApiDefinitions"
    },
    {
      "name": "Deployments"
    },
    {
      "name": "Environments"
    }
  ],
  "paths": {
    "/providers/Microsoft.ApiCenter/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ApiCenter/services": {
      "get": {
        "operationId": "Services_ListBySubscription",
        "tags": [
          "Services"
        ],
        "description": "Lists services within an Azure subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services": {
      "get": {
        "operationId": "Services_ListByResourceGroup",
        "tags": [
          "Services"
        ],
        "description": "Returns a collection of services within the resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}": {
      "get": {
        "operationId": "Services_Get",
        "tags": [
          "Services"
        ],
        "description": "Returns details of the service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Services_CreateOrUpdate",
        "tags": [
          "Services"
        ],
        "description": "Creates new or updates existing API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Service"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Service' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "201": {
            "description": "Resource 'Service' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "operationId": "Services_Update",
        "tags": [
          "Services"
        ],
        "description": "Updates existing service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "Services_Delete",
        "tags": [
          "Services"
        ],
        "description": "Deletes specified service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/exportMetadataSchema": {
      "post": {
        "operationId": "Services_ExportMetadataSchema",
        "tags": [
          "Services"
        ],
        "description": "Exports the effective metadata schema.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MetadataSchemaExportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MetadataSchemaExportResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/metadataSchemas": {
      "get": {
        "operationId": "MetadataSchemas_ListByService",
        "tags": [
          "MetadataSchemas"
        ],
        "description": "Returns a collection of metadata schemas.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter parameter.",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MetadataSchemaListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/metadataSchemas/{metadataSchemaName}": {
      "get": {
        "operationId": "MetadataSchemas_Get",
        "tags": [
          "MetadataSchemas"
        ],
        "description": "Returns details of the metadata schema.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "metadataSchemaName",
            "in": "path",
            "description": "The name of the metadata schema.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MetadataSchema"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "MetadataSchemas_CreateOrUpdate",
        "tags": [
          "MetadataSchemas"
        ],
        "description": "Creates new or updates existing metadata schema.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "metadataSchemaName",
            "in": "path",
            "description": "The name of the metadata schema.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MetadataSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'MetadataSchema' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/MetadataSchema"
            }
          },
          "201": {
            "description": "Resource 'MetadataSchema' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/MetadataSchema"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "MetadataSchemas_Delete",
        "tags": [
          "MetadataSchemas"
        ],
        "description": "Deletes specified metadata schema.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "metadataSchemaName",
            "in": "path",
            "description": "The name of the metadata schema.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "head": {
        "operationId": "MetadataSchemas_Head",
        "tags": [
          "MetadataSchemas"
        ],
        "description": "Checks if specified metadata schema exists.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "metadataSchemaName",
            "in": "path",
            "description": "The name of the metadata schema.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces": {
      "get": {
        "operationId": "Workspaces_ListByService",
        "tags": [
          "Workspaces"
        ],
        "description": "Returns a collection of workspaces.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter parameter.",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkspaceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}": {
      "get": {
        "operationId": "Workspaces_Get",
        "tags": [
          "Workspaces"
        ],
        "description": "Returns details of the workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Workspaces_CreateOrUpdate",
        "tags": [
          "Workspaces"
        ],
        "description": "Creates new or updates existing workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Workspace' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "201": {
            "description": "Resource 'Workspace' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "Workspaces_Delete",
        "tags": [
          "Workspaces"
        ],
        "description": "Deletes specified workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "head": {
        "operationId": "Workspaces_Head",
        "tags": [
          "Workspaces"
        ],
        "description": "Checks if specified workspace exists.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis": {
      "get": {
        "operationId": "Apis_ListByWorkspace",
        "tags": [
          "Apis"
        ],
        "description": "Returns a collection of APIs.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter parameter.",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}": {
      "get": {
        "operationId": "Apis_Get",
        "tags": [
          "Apis"
        ],
        "description": "Returns details of the API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Api"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Apis_CreateOrUpdate",
        "tags": [
          "Apis"
        ],
        "description": "Creates new or updates existing API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Api"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Api' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Api"
            }
          },
          "201": {
            "description": "Resource 'Api' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Api"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "Apis_Delete",
        "tags": [
          "Apis"
        ],
        "description": "Deletes specified API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "head": {
        "operationId": "Apis_Head",
        "tags": [
          "Apis"
        ],
        "description": "Checks if specified API exists.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/deployments": {
      "get": {
        "operationId": "Deployments_ListByApi",
        "tags": [
          "Deployments"
        ],
        "description": "Returns a collection of API deployments.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter parameter.",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeploymentListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/deployments/{deploymentName}": {
      "get": {
        "operationId": "Deployments_Get",
        "tags": [
          "Deployments"
        ],
        "description": "Returns details of the API deployment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the API deployment.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Deployments_CreateOrUpdate",
        "tags": [
          "Deployments"
        ],
        "description": "Creates new or updates existing API deployment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the API deployment.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Deployment' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          "201": {
            "description": "Resource 'Deployment' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "Deployments_Delete",
        "tags": [
          "Deployments"
        ],
        "description": "Deletes API deployment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the API deployment.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "head": {
        "operationId": "Deployments_Head",
        "tags": [
          "Deployments"
        ],
        "description": "Checks if specified API deployment exists.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the API deployment.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/versions": {
      "get": {
        "operationId": "ApiVersions_ListByApi",
        "tags": [
          "ApiVersions"
        ],
        "description": "Returns a collection of API versions.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter parameter.",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiVersionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/versions/{versionName}": {
      "get": {
        "operationId": "ApiVersions_Get",
        "tags": [
          "ApiVersions"
        ],
        "description": "Returns details of the API version.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the API version.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "ApiVersions_CreateOrUpdate",
        "tags": [
          "ApiVersions"
        ],
        "description": "Creates new or updates existing API version.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the API version.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ApiVersion' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApiVersion"
            }
          },
          "201": {
            "description": "Resource 'ApiVersion' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApiVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "ApiVersions_Delete",
        "tags": [
          "ApiVersions"
        ],
        "description": "Deletes specified API version",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the API version.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "head": {
        "operationId": "ApiVersions_Head",
        "tags": [
          "ApiVersions"
        ],
        "description": "Checks if specified API version exists.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the API version.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/versions/{versionName}/definitions": {
      "get": {
        "operationId": "ApiDefinitions_ListByApiVersion",
        "tags": [
          "ApiDefinitions"
        ],
        "description": "Returns a collection of API definitions.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter parameter.",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the API version.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiDefinitionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/versions/{versionName}/definitions/{definitionName}": {
      "get": {
        "operationId": "ApiDefinitions_Get",
        "tags": [
          "ApiDefinitions"
        ],
        "description": "Returns details of the API definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the API version.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "definitionName",
            "in": "path",
            "description": "The name of the API definition.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "ApiDefinitions_CreateOrUpdate",
        "tags": [
          "ApiDefinitions"
        ],
        "description": "Creates new or updates existing API definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the API version.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "definitionName",
            "in": "path",
            "description": "The name of the API definition.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ApiDefinition' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApiDefinition"
            }
          },
          "201": {
            "description": "Resource 'ApiDefinition' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApiDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "ApiDefinitions_Delete",
        "tags": [
          "ApiDefinitions"
        ],
        "description": "Deletes specified API definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the API version.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "definitionName",
            "in": "path",
            "description": "The name of the API definition.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "head": {
        "operationId": "ApiDefinitions_Head",
        "tags": [
          "ApiDefinitions"
        ],
        "description": "Checks if specified API definition exists.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the API version.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "definitionName",
            "in": "path",
            "description": "The name of the API definition.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/versions/{versionName}/definitions/{definitionName}/exportSpecification": {
      "post": {
        "operationId": "ApiDefinitions_ExportSpecification",
        "tags": [
          "ApiDefinitions"
        ],
        "description": "Exports the API specification.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the API version.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "definitionName",
            "in": "path",
            "description": "The name of the API definition.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiSpecExportResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/versions/{versionName}/definitions/{definitionName}/importSpecification": {
      "post": {
        "operationId": "ApiDefinitions_ImportSpecification",
        "tags": [
          "ApiDefinitions"
        ],
        "description": "Imports the API specification.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the API version.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "definitionName",
            "in": "path",
            "description": "The name of the API definition.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiSpecImportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/environments": {
      "get": {
        "operationId": "Environments_ListByWorkspace",
        "tags": [
          "Environments"
        ],
        "description": "Returns a collection of environments.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter parameter.",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnvironmentListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/environments/{environmentName}": {
      "get": {
        "operationId": "Environments_Get",
        "tags": [
          "Environments"
        ],
        "description": "Returns details of the environment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The name of the environment.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Environments_CreateOrUpdate",
        "tags": [
          "Environments"
        ],
        "description": "Creates new or updates existing environment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The name of the environment.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Environment' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          },
          "201": {
            "description": "Resource 'Environment' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "Environments_Delete",
        "tags": [
          "Environments"
        ],
        "description": "Deletes the environment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The name of the environment.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "head": {
        "operationId": "Environments_Head",
        "tags": [
          "Environments"
        ],
        "description": "Checks if specified environment exists.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The name of the environment.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ActionType": {
      "type": "string",
      "enum": [
        "Internal"
      ],
      "x-ms-enum": {
        "name": "ActionType",
        "modelAsString": true
      }
    },
    "Api": {
      "type": "object",
      "description": "API entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApiProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ApiDefinition": {
      "type": "object",
      "description": "API definition entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApiDefinitionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ApiDefinitionListResult": {
      "type": "object",
      "description": "The response of a ApiDefinition list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ApiDefinition items on this page",
          "items": {
            "$ref": "#/definitions/ApiDefinition"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ApiDefinitionProperties": {
      "type": "object",
      "description": "API definition properties entity.",
      "properties": {
        "title": {
          "type": "string",
          "description": "API definition title.",
          "minLength": 1,
          "maxLength": 50
        },
        "description": {
          "type": "string",
          "description": "API definition description."
        },
        "specification": {
          "$ref": "#/definitions/ApiDefinitionPropertiesSpecification",
          "description": "API specification details.",
          "readOnly": true
        }
      },
      "required": [
        "title"
      ]
    },
    "ApiDefinitionPropertiesSpecification": {
      "type": "object",
      "description": "API specification details.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Specification name."
        },
        "version": {
          "type": "string",
          "description": "Specification version."
        }
      }
    },
    "ApiKind": {
      "type": "string",
      "enum": [
        "rest",
        "graphql",
        "grpc",
        "soap",
        "webhook",
        "websocket"
      ],
      "x-ms-enum": {
        "name": "ApiKind",
        "modelAsString": true
      }
    },
    "ApiListResult": {
      "type": "object",
      "description": "The response of a Api list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Api items on this page",
          "items": {
            "$ref": "#/definitions/Api"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ApiProperties": {
      "type": "object",
      "description": "API properties.",
      "properties": {
        "title": {
          "type": "string",
          "description": "API title.",
          "minLength": 1,
          "maxLength": 50
        },
        "kind": {
          "$ref": "#/definitions/ApiKind",
          "description": "Kind of API. For example, REST or GraphQL."
        },
        "description": {
          "type": "string",
          "description": "Description of the API.",
          "maxLength": 1000
        },
        "summary": {
          "type": "string",
          "description": "Short description of the API.",
          "maxLength": 200
        },
        "lifecycleStage": {
          "$ref": "#/definitions/LifecycleStage",
          "description": "Current lifecycle stage of the API.",
          "readOnly": true
        },
        "termsOfService": {
          "$ref": "#/definitions/TermsOfService",
          "description": "Terms of service for the API."
        },
        "externalDocumentation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalDocumentation"
          },
          "x-ms-identifiers": []
        },
        "contacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Contact"
          },
          "x-ms-identifiers": []
        },
        "license": {
          "$ref": "#/definitions/License",
          "description": "The license information for the API."
        },
        "customProperties": {
          "type": "object",
          "description": "The custom metadata defined for API catalog entities.",
          "additionalProperties": {}
        }
      },
      "required": [
        "title",
        "kind"
      ]
    },
    "ApiSpecExportResult": {
      "type": "object",
      "description": "The API specification export result.",
      "properties": {
        "format": {
          "$ref": "#/definitions/ApiSpecExportResultFormat"
        },
        "value": {
          "type": "string",
          "description": "The result of the export operation."
        }
      }
    },
    "ApiSpecExportResultFormat": {
      "type": "string",
      "enum": [
        "inline",
        "link"
      ],
      "x-ms-enum": {
        "name": "ApiSpecExportResultFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "inline",
            "value": "inline",
            "description": "The inlined content of a specification document."
          },
          {
            "name": "link",
            "value": "link",
            "description": "The link to the result of the export operation. The URL is valid for 5 minutes."
          }
        ]
      }
    },
    "ApiSpecImportRequest": {
      "type": "object",
      "description": "The API specification source entity properties.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Value of the API specification source."
        },
        "format": {
          "$ref": "#/definitions/ApiSpecImportSourceFormat",
          "description": "Format of the API specification source."
        },
        "specification": {
          "$ref": "#/definitions/ApiSpecImportRequestSpecification",
          "description": "API specification details."
        }
      }
    },
    "ApiSpecImportRequestSpecification": {
      "type": "object",
      "description": "API specification details.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Specification name."
        },
        "version": {
          "type": "string",
          "description": "Specification version."
        }
      }
    },
    "ApiSpecImportSourceFormat": {
      "type": "string",
      "enum": [
        "inline",
        "link"
      ],
      "x-ms-enum": {
        "name": "ApiSpecImportSourceFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "inline",
            "value": "inline",
            "description": "The inlined content of a specification document."
          },
          {
            "name": "link",
            "value": "link",
            "description": "The link to a specification document hosted on a publicly accessible internet address."
          }
        ]
      }
    },
    "ApiVersion": {
      "type": "object",
      "description": "API version entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApiVersionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ApiVersionListResult": {
      "type": "object",
      "description": "The response of a ApiVersion list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ApiVersion items on this page",
          "items": {
            "$ref": "#/definitions/ApiVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ApiVersionProperties": {
      "type": "object",
      "description": "API version properties entity.",
      "properties": {
        "title": {
          "type": "string",
          "description": "API version title.",
          "minLength": 1,
          "maxLength": 50
        },
        "lifecycleStage": {
          "$ref": "#/definitions/LifecycleStage",
          "description": "Current lifecycle stage of the API."
        }
      },
      "required": [
        "title",
        "lifecycleStage"
      ]
    },
    "Contact": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the contact.",
          "maxLength": 100
        },
        "url": {
          "type": "string",
          "description": "URL for the contact."
        },
        "email": {
          "type": "string",
          "description": "Email address of the contact.",
          "maxLength": 100
        }
      }
    },
    "CreatedByType": {
      "type": "string",
      "enum": [
        "User",
        "Application",
        "ManagedIdentity",
        "Key"
      ],
      "x-ms-enum": {
        "name": "CreatedByType",
        "modelAsString": true
      }
    },
    "Deployment": {
      "type": "object",
      "description": "API deployment entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeploymentProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DeploymentListResult": {
      "type": "object",
      "description": "The response of a Deployment list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Deployment items on this page",
          "items": {
            "$ref": "#/definitions/Deployment"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DeploymentProperties": {
      "type": "object",
      "description": "API deployment entity properties.",
      "properties": {
        "title": {
          "type": "string",
          "description": "API deployment title",
          "minLength": 1,
          "maxLength": 50
        },
        "description": {
          "type": "string",
          "description": "Description of the deployment.",
          "maxLength": 500
        },
        "environmentId": {
          "type": "string",
          "description": "API center-scoped environment resource ID."
        },
        "definitionId": {
          "type": "string",
          "description": "API center-scoped definition resource ID."
        },
        "state": {
          "$ref": "#/definitions/DeploymentState",
          "description": "State of API deployment."
        },
        "server": {
          "$ref": "#/definitions/DeploymentServer",
          "description": "Server"
        },
        "customProperties": {
          "type": "object",
          "description": "The custom metadata defined for API catalog entities.",
          "additionalProperties": {}
        }
      }
    },
    "DeploymentServer": {
      "type": "object",
      "description": "Server",
      "properties": {
        "runtimeUri": {
          "type": "array",
          "description": "Base runtime URLs for this deployment.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DeploymentState": {
      "type": "string",
      "enum": [
        "active",
        "inactive"
      ],
      "x-ms-enum": {
        "name": "DeploymentState",
        "modelAsString": true
      }
    },
    "Environment": {
      "type": "object",
      "description": "Environment entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EnvironmentProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "EnvironmentKind": {
      "type": "string",
      "enum": [
        "development",
        "testing",
        "staging",
        "production"
      ],
      "x-ms-enum": {
        "name": "EnvironmentKind",
        "modelAsString": true
      }
    },
    "EnvironmentListResult": {
      "type": "object",
      "description": "The response of a Environment list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Environment items on this page",
          "items": {
            "$ref": "#/definitions/Environment"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EnvironmentProperties": {
      "type": "object",
      "description": "Environment properties entity.",
      "properties": {
        "title": {
          "type": "string",
          "description": "Environment title.",
          "minLength": 1,
          "maxLength": 50
        },
        "description": {
          "type": "string",
          "description": "Description."
        },
        "kind": {
          "$ref": "#/definitions/EnvironmentKind",
          "description": "Environment kind."
        },
        "server": {
          "$ref": "#/definitions/EnvironmentServer",
          "description": "Server information of the environment."
        },
        "onboarding": {
          "$ref": "#/definitions/Onboarding"
        },
        "customProperties": {
          "type": "object",
          "description": "The custom metadata defined for API catalog entities.",
          "additionalProperties": {}
        }
      },
      "required": [
        "title",
        "kind"
      ]
    },
    "EnvironmentServer": {
      "type": "object",
      "description": "Server information of the environment.",
      "properties": {
        "type": {
          "$ref": "#/definitions/EnvironmentServerType",
          "description": "Type of the server that represents the environment."
        },
        "managementPortalUri": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "EnvironmentServerType": {
      "type": "string",
      "enum": [
        "Azure API Management",
        "Azure compute service",
        "Apigee API Management",
        "AWS API Gateway",
        "Kong API Gateway",
        "Kubernetes",
        "MuleSoft API Management"
      ],
      "x-ms-enum": {
        "name": "EnvironmentServerType",
        "modelAsString": true
      }
    },
    "ExternalDocumentation": {
      "type": "object",
      "description": "Additional, external documentation for the API.",
      "properties": {
        "title": {
          "type": "string",
          "description": "Title of the documentation.",
          "maxLength": 50
        },
        "description": {
          "type": "string",
          "description": "Description of the documentation.",
          "maxLength": 500
        },
        "url": {
          "type": "string",
          "description": "URL pointing to the documentation."
        }
      },
      "required": [
        "url"
      ]
    },
    "License": {
      "type": "object",
      "description": "The license information for the API.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the license.",
          "maxLength": 100
        },
        "url": {
          "type": "string",
          "description": "URL pointing to the license details. The URL field is mutually exclusive of the identifier field."
        },
        "identifier": {
          "type": "string",
          "description": "SPDX license information for the API. The identifier field is mutually exclusive of the URL field."
        }
      }
    },
    "LifecycleStage": {
      "type": "string",
      "enum": [
        "design",
        "development",
        "testing",
        "preview",
        "production",
        "deprecated",
        "retired"
      ],
      "x-ms-enum": {
        "name": "LifecycleStage",
        "modelAsString": true
      }
    },
    "ManagedServiceIdentityType": {
      "type": "string",
      "enum": [
        "None",
        "SystemAssigned",
        "UserAssigned",
        "SystemAssigned,UserAssigned"
      ],
      "x-ms-enum": {
        "name": "ManagedServiceIdentityType",
        "modelAsString": true
      }
    },
    "MetadataAssignment": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/MetadataAssignmentEntity",
          "description": "The entities this metadata schema component gets applied to."
        },
        "required": {
          "type": "boolean"
        },
        "deprecated": {
          "type": "boolean"
        }
      }
    },
    "MetadataAssignmentEntity": {
      "type": "string",
      "enum": [
        "api",
        "environment",
        "deployment"
      ],
      "x-ms-enum": {
        "name": "MetadataAssignmentEntity",
        "modelAsString": true
      }
    },
    "MetadataSchema": {
      "type": "object",
      "description": "Metadata schema entity. Used to define metadata for the entities in API catalog.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MetadataSchemaProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "MetadataSchemaExportFormat": {
      "type": "string",
      "enum": [
        "inline",
        "link"
      ],
      "x-ms-enum": {
        "name": "MetadataSchemaExportFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "inline",
            "value": "inline",
            "description": "The inlined content of a schema document."
          },
          {
            "name": "link",
            "value": "link",
            "description": "The link to a schema document. The URL is valid for 5 minutes."
          }
        ]
      }
    },
    "MetadataSchemaExportRequest": {
      "type": "object",
      "description": "The metadata schema export request.",
      "properties": {
        "assignedTo": {
          "$ref": "#/definitions/MetadataAssignmentEntity",
          "description": "An entity the metadata schema is requested for."
        }
      }
    },
    "MetadataSchemaExportResult": {
      "type": "object",
      "description": "The metadata schema export result.",
      "properties": {
        "format": {
          "$ref": "#/definitions/MetadataSchemaExportFormat"
        },
        "value": {
          "type": "string",
          "description": "The result of the export operation."
        }
      }
    },
    "MetadataSchemaListResult": {
      "type": "object",
      "description": "The response of a MetadataSchema list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The MetadataSchema items on this page",
          "items": {
            "$ref": "#/definitions/MetadataSchema"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "MetadataSchemaProperties": {
      "type": "object",
      "description": "Metadata schema properties.",
      "properties": {
        "schema": {
          "type": "string",
          "description": "The schema defining the type."
        },
        "assignedTo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetadataAssignment"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "schema"
      ]
    },
    "Onboarding": {
      "type": "object",
      "properties": {
        "instructions": {
          "type": "string",
          "description": "Onboarding guide."
        },
        "developerPortalUri": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Origin": {
      "type": "string",
      "enum": [
        "user",
        "system",
        "user,system"
      ],
      "x-ms-enum": {
        "name": "Origin",
        "modelAsString": true
      }
    },
    "ProvisioningState": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "Service": {
      "type": "object",
      "description": "The service entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServiceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ServiceListResult": {
      "type": "object",
      "description": "The response of a Service list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Service items on this page",
          "items": {
            "$ref": "#/definitions/Service"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ServiceProperties": {
      "type": "object",
      "description": "The properties of the service.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the service.",
          "readOnly": true
        }
      }
    },
    "ServiceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Service.",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "TermsOfService": {
      "type": "object",
      "description": "Terms of service for the API.",
      "properties": {
        "url": {
          "type": "string",
          "description": "URL pointing to the terms of service."
        }
      },
      "required": [
        "url"
      ]
    },
    "UserAssignedIdentity": {
      "type": "object",
      "description": "User assigned identity properties",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal ID of the assigned identity.",
          "readOnly": true
        },
        "clientId": {
          "type": "string",
          "description": "The client ID of the assigned identity.",
          "readOnly": true
        }
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2024-03-01"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2024_03_01",
            "value": "2024-03-01"
          }
        ]
      }
    },
    "Workspace": {
      "type": "object",
      "description": "Workspace entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkspaceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkspaceListResult": {
      "type": "object",
      "description": "The response of a Workspace list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Workspace items on this page",
          "items": {
            "$ref": "#/definitions/Workspace"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkspaceProperties": {
      "type": "object",
      "description": "Workspace properties.",
      "properties": {
        "title": {
          "type": "string",
          "description": "Workspace title.",
          "minLength": 1,
          "maxLength": 50
        },
        "description": {
          "type": "string",
          "description": "Workspace description."
        }
      },
      "required": [
        "title"
      ]
    }
  },
  "parameters": {}
}
