{
  "swagger": "2.0",
  "info": {
    "title": "Data API",
    "version": "2024-03-01",
    "description": "Data API introduces endpoints to manage your API Center resources.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "https://{serviceName}.data.azure-apicenter.net",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "serviceName",
        "in": "path",
        "description": "Region-unique API Center service name",
        "required": true,
        "type": "string"
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "tags": [],
  "paths": {
    "/apis": {
      "get": {
        "operationId": "Apis_ListApis",
        "description": "List a collection of APIs.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SelectQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedApiResource"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Apis_ListApis_MaximumSet_Gen": {
            "$ref": "./examples/Apis_ListApis_MaximumSet_Gen.json"
          },
          "Apis_ListApis_MinimumSet_Gen": {
            "$ref": "./examples/Apis_ListApis_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/apis/{apiId}": {
      "get": {
        "operationId": "Apis_GetApi",
        "description": "Get an API.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifMatch"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifNoneMatch"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifUnmodifiedSince"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifModifiedSince"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Models.Api"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              },
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Apis_GetApi_MaximumSet_Gen": {
            "$ref": "./examples/Apis_GetApi_MaximumSet_Gen.json"
          },
          "Apis_GetApi_MinimumSet_Gen": {
            "$ref": "./examples/Apis_GetApi_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/apis/{apiId}/deployments": {
      "get": {
        "operationId": "ApiDeployments_ListDeployments",
        "description": "List a collection of API versions.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SelectQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedApiDeploymentResource"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ApiDeployments_ListDeployments_MaximumSet_Gen": {
            "$ref": "./examples/ApiDeployments_ListDeployments_MaximumSet_Gen.json"
          },
          "ApiDeployments_ListDeployments_MinimumSet_Gen": {
            "$ref": "./examples/ApiDeployments_ListDeployments_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/apis/{apiId}/deployments/{deploymentId}": {
      "get": {
        "operationId": "ApiDeployments_GetDeployment",
        "description": "Get an API version.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentId",
            "in": "path",
            "description": "Deployment identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifMatch"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifNoneMatch"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifUnmodifiedSince"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifModifiedSince"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Models.ApiDeployment"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              },
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "ApiDeployments_GetDeployment_MaximumSet_Gen": {
            "$ref": "./examples/ApiDeployments_GetDeployment_MaximumSet_Gen.json"
          },
          "ApiDeployments_GetDeployment_MinimumSet_Gen": {
            "$ref": "./examples/ApiDeployments_GetDeployment_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/apis/{apiId}/versions": {
      "get": {
        "operationId": "ApiVersions_ListVersions",
        "description": "List a collection of API versions.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SelectQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedApiVersionResource"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ApiVersions_ListVersions_MaximumSet_Gen": {
            "$ref": "./examples/ApiVersions_ListVersions_MaximumSet_Gen.json"
          },
          "ApiVersions_ListVersions_MinimumSet_Gen": {
            "$ref": "./examples/ApiVersions_ListVersions_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/apis/{apiId}/versions/{versionId}": {
      "get": {
        "operationId": "ApiVersions_GetVersion",
        "description": "Get an API version.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifMatch"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifNoneMatch"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifUnmodifiedSince"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifModifiedSince"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Models.ApiVersion"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              },
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "ApiVersions_GetVersion_MaximumSet_Gen": {
            "$ref": "./examples/ApiVersions_GetVersion_MaximumSet_Gen.json"
          },
          "ApiVersions_GetVersion_MinimumSet_Gen": {
            "$ref": "./examples/ApiVersions_GetVersion_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/apis/{apiId}/versions/{versionId}/definitions": {
      "get": {
        "operationId": "ApiDefinitions_ListDefinitions",
        "description": "List a collection of API definitions.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SelectQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedApiDefinitionResource"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ApiDefinitions_ListDefinitions_MaximumSet_Gen": {
            "$ref": "./examples/ApiDefinitions_ListDefinitions_MaximumSet_Gen.json"
          },
          "ApiDefinitions_ListDefinitions_MinimumSet_Gen": {
            "$ref": "./examples/ApiDefinitions_ListDefinitions_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/apis/{apiId}/versions/{versionId}/definitions/{apiDefinitionId}": {
      "get": {
        "operationId": "ApiDefinitions_GetDefinition",
        "description": "Get an API definition.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "apiDefinitionId",
            "in": "path",
            "description": "Definition identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifMatch"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifNoneMatch"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifUnmodifiedSince"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifModifiedSince"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Models.ApiDefinition"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              },
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "ApiDefinitions_GetDefinition_MaximumSet_Gen": {
            "$ref": "./examples/ApiDefinitions_GetDefinition_MaximumSet_Gen.json"
          },
          "ApiDefinitions_GetDefinition_MinimumSet_Gen": {
            "$ref": "./examples/ApiDefinitions_GetDefinition_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/apis/{apiId}/versions/{versionId}/definitions/{apiDefinitionId}:exportSpecification": {
      "post": {
        "operationId": "ApiDefinitions_ExportSpecification",
        "description": "Export an API specification.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "apiDefinitionId",
            "in": "path",
            "description": "Definition identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.RepeatabilityRequestHeaders.repeatabilityRequestId"
          },
          {
            "$ref": "#/parameters/Azure.Core.RepeatabilityRequestHeaders.repeatabilityFirstSent"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Repeatability-Result": {
                "type": "string",
                "description": "Indicates whether the repeatable request was accepted or rejected.",
                "enum": [
                  "accepted",
                  "rejected"
                ]
              },
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "ApiDefinitions_ExportSpecification_MaximumSet_Gen": {
            "$ref": "./examples/ApiDefinitions_ExportSpecification_MaximumSet_Gen.json"
          },
          "ApiDefinitions_ExportSpecification_MinimumSet_Gen": {
            "$ref": "./examples/ApiDefinitions_ExportSpecification_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/environments": {
      "get": {
        "operationId": "Environments_ListEnvironments",
        "description": "List a collection of environments.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SelectQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEnvironmentResource"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Environments_ListEnvironments_MaximumSet_Gen": {
            "$ref": "./examples/Environments_ListEnvironments_MaximumSet_Gen.json"
          },
          "Environments_ListEnvironments_MinimumSet_Gen": {
            "$ref": "./examples/Environments_ListEnvironments_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/environments/{environmentId}": {
      "get": {
        "operationId": "Environments_GetEnvironment",
        "description": "Get an environment.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "Environment identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifMatch"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifNoneMatch"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifUnmodifiedSince"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifModifiedSince"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Models.Environment"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              },
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Environments_GetEnvironment_MaximumSet_Gen": {
            "$ref": "./examples/Environments_GetEnvironment_MaximumSet_Gen.json"
          },
          "Environments_GetEnvironment_MinimumSet_Gen": {
            "$ref": "./examples/Environments_GetEnvironment_MinimumSet_Gen.json"
          }
        }
      }
    }
  },
  "definitions": {
    "ApiDefinitionResource": {
      "type": "object",
      "description": "API Definition resource model.",
      "allOf": [
        {
          "$ref": "#/definitions/Models.ApiDefinition"
        }
      ]
    },
    "ApiDeploymentResource": {
      "type": "object",
      "description": "API Deployment resource model.",
      "allOf": [
        {
          "$ref": "#/definitions/Models.ApiDeployment"
        }
      ]
    },
    "ApiResource": {
      "type": "object",
      "description": "API resource model.",
      "allOf": [
        {
          "$ref": "#/definitions/Models.Api"
        }
      ]
    },
    "ApiVersionResource": {
      "type": "object",
      "description": "API Version resource model.",
      "allOf": [
        {
          "$ref": "#/definitions/Models.ApiVersion"
        }
      ]
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "EnvironmentResource": {
      "type": "object",
      "description": "Environment resource model.",
      "allOf": [
        {
          "$ref": "#/definitions/Models.Environment"
        }
      ]
    },
    "Models.Api": {
      "type": "object",
      "description": "API contract",
      "properties": {
        "title": {
          "type": "string",
          "description": "The name of the API.",
          "maxLength": 50
        },
        "description": {
          "type": "string",
          "description": "The description of the API",
          "maxLength": 1000
        },
        "type": {
          "type": "string",
          "description": "Kind of API. For example, REST or GraphQL."
        },
        "lifeCycleStage": {
          "$ref": "#/definitions/Models.ApiLifecycleStage",
          "description": "Current lifecycle stage of the API."
        },
        "termsOfServiceUrl": {
          "type": "string",
          "description": "URL pointing to the terms of service."
        },
        "licenseUrl": {
          "type": "string",
          "description": "URL pointing to the license details."
        },
        "externalDocumentation": {
          "type": "array",
          "description": "External documentation",
          "items": {
            "$ref": "#/definitions/Models.ApiExternalDocumentation"
          },
          "x-ms-identifiers": []
        },
        "contact": {
          "type": "array",
          "description": "Points of contact for the API.",
          "items": {
            "$ref": "#/definitions/Models.ApiContact"
          },
          "x-ms-identifiers": []
        },
        "customProperties": {
          "type": "object",
          "description": "The custom metadata defined for API entries.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createdBy": {
          "type": "string",
          "description": "Created by."
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "description": "Last updated date and time."
        }
      },
      "required": [
        "title",
        "description",
        "type",
        "termsOfServiceUrl",
        "licenseUrl",
        "customProperties",
        "createdBy",
        "lastUpdated"
      ]
    },
    "Models.ApiContact": {
      "type": "object",
      "description": "API contact information",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the contact.",
          "maxLength": 100
        },
        "url": {
          "type": "string",
          "description": "URL for the contact.",
          "maxLength": 200
        },
        "email": {
          "type": "string",
          "description": "Email address for the contact.",
          "maxLength": 100
        }
      },
      "required": [
        "name",
        "url",
        "email"
      ]
    },
    "Models.ApiDefinition": {
      "type": "object",
      "description": "API definition",
      "properties": {
        "title": {
          "type": "string",
          "description": "The name of the API definition.",
          "maxLength": 50
        },
        "description": {
          "type": "string",
          "description": "The description of the API definition.",
          "maxLength": 1000
        },
        "specification": {
          "$ref": "#/definitions/Models.ApiSpecification",
          "description": "The API specification details."
        }
      },
      "required": [
        "title",
        "description"
      ]
    },
    "Models.ApiDeployment": {
      "type": "object",
      "description": "API deployment",
      "properties": {
        "title": {
          "type": "string",
          "description": "The name of the deployment.",
          "maxLength": 50
        },
        "description": {
          "type": "string",
          "description": "The description of the deployment.",
          "maxLength": 1000
        },
        "environment": {
          "type": "string",
          "description": "The name of the deployment environment."
        },
        "deploymentRuntimeUrl": {
          "type": "string",
          "description": "Base runtime URIs for this deployment.",
          "maxLength": 200
        }
      },
      "required": [
        "title",
        "description",
        "environment",
        "deploymentRuntimeUrl"
      ]
    },
    "Models.ApiExternalDocumentation": {
      "type": "object",
      "description": "Api External Documentation Model",
      "properties": {
        "title": {
          "type": "string",
          "description": "Title of the documentation.",
          "maxLength": 50
        },
        "url": {
          "type": "string",
          "description": "URL pointing to the documentation.",
          "maxLength": 200
        }
      },
      "required": [
        "title",
        "url"
      ]
    },
    "Models.ApiLifecycleStage": {
      "type": "string",
      "description": "API Lifecycle Stage",
      "enum": [
        "design",
        "development",
        "testing",
        "preview",
        "production",
        "deprecated",
        "retired"
      ],
      "x-ms-enum": {
        "name": "ApiLifecycleStage",
        "modelAsString": true,
        "values": [
          {
            "name": "Design",
            "value": "design",
            "description": "API is in the design stage"
          },
          {
            "name": "Development",
            "value": "development",
            "description": "API is in the development stage"
          },
          {
            "name": "Testing",
            "value": "testing",
            "description": "API is in the testing stage"
          },
          {
            "name": "Preview",
            "value": "preview",
            "description": "API is in the preview stage"
          },
          {
            "name": "Production",
            "value": "production",
            "description": "API is in the production stage"
          },
          {
            "name": "Deprecated",
            "value": "deprecated",
            "description": "API is in the deprecated stage"
          },
          {
            "name": "Retired",
            "value": "retired",
            "description": "API is in the retired stage"
          }
        ]
      }
    },
    "Models.ApiSpecification": {
      "type": "object",
      "description": "API specification",
      "properties": {
        "name": {
          "type": "string",
          "description": "API specification name, e.g. 'swagger' or 'openapi'."
        },
        "version": {
          "type": "string",
          "description": "API specification version, e.g. '3.0.1'."
        }
      },
      "required": [
        "name",
        "version"
      ]
    },
    "Models.ApiVersion": {
      "type": "object",
      "description": "API version",
      "properties": {
        "title": {
          "type": "string",
          "description": "Version title."
        },
        "lifeCycleStage": {
          "$ref": "#/definitions/Models.ApiLifecycleStage",
          "description": "Current lifecycle stage of the API version."
        }
      },
      "required": [
        "title"
      ]
    },
    "Models.Environment": {
      "type": "object",
      "description": "Environment",
      "properties": {
        "title": {
          "type": "string",
          "description": "The name of the environment.",
          "maxLength": 50
        },
        "type": {
          "type": "string",
          "description": "Kind of deployment environment."
        },
        "description": {
          "type": "string",
          "description": "Description of the environment.",
          "maxLength": 1000
        },
        "server": {
          "$ref": "#/definitions/Models.EnvironmentServer",
          "description": "Server information of the environment."
        },
        "onboarding": {
          "$ref": "#/definitions/Models.EnvironmentOnboardingModel",
          "description": "Onboarding information for this environment."
        },
        "customProperties": {
          "type": "object",
          "description": "The custom metadata defined for Environment entries.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "title",
        "type",
        "description"
      ]
    },
    "Models.EnvironmentOnboardingModel": {
      "type": "object",
      "description": "Environment Onboarding Model",
      "properties": {
        "instructions": {
          "type": "string",
          "description": "Instructions how to onboard to the environment.",
          "maxLength": 1000
        },
        "developerPortalUri": {
          "type": "string",
          "description": "Developer portal URI of the environment.",
          "maxLength": 200
        }
      },
      "required": [
        "instructions",
        "developerPortalUri"
      ]
    },
    "Models.EnvironmentServer": {
      "type": "object",
      "description": "Environment Server",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the server that represents the environment."
        },
        "managementPortalUri": {
          "type": "string",
          "description": "URI of the server's management portal.",
          "maxLength": 200
        }
      },
      "required": [
        "type",
        "managementPortalUri"
      ]
    },
    "PagedApiDefinitionResource": {
      "type": "object",
      "description": "Paged collection of ApiDefinitionResource items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ApiDefinitionResource items on this page",
          "items": {
            "$ref": "#/definitions/ApiDefinitionResource"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedApiDeploymentResource": {
      "type": "object",
      "description": "Paged collection of ApiDeploymentResource items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ApiDeploymentResource items on this page",
          "items": {
            "$ref": "#/definitions/ApiDeploymentResource"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedApiResource": {
      "type": "object",
      "description": "Paged collection of ApiResource items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ApiResource items on this page",
          "items": {
            "$ref": "#/definitions/ApiResource"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedApiVersionResource": {
      "type": "object",
      "description": "Paged collection of ApiVersionResource items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ApiVersionResource items on this page",
          "items": {
            "$ref": "#/definitions/ApiVersionResource"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedEnvironmentResource": {
      "type": "object",
      "description": "Paged collection of EnvironmentResource items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EnvironmentResource items on this page",
          "items": {
            "$ref": "#/definitions/EnvironmentResource"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "Versions": {
      "type": "string",
      "description": "API versions",
      "enum": [
        "2024-03-01"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2024_03_01",
            "value": "2024-03-01",
            "description": "GA release version 2024-03-01"
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.Core.ClientRequestIdHeader": {
      "name": "x-ms-client-request-id",
      "in": "header",
      "description": "An opaque, globally-unique, client-generated string identifier for the request.",
      "required": false,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "clientRequestId"
    },
    "Azure.Core.ConditionalRequestHeaders.ifMatch": {
      "name": "If-Match",
      "in": "header",
      "description": "The request should only proceed if an entity matches this string.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "ifMatch"
    },
    "Azure.Core.ConditionalRequestHeaders.ifModifiedSince": {
      "name": "If-Modified-Since",
      "in": "header",
      "description": "The request should only proceed if the entity was modified after this time.",
      "required": false,
      "type": "string",
      "format": "date-time",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "ifModifiedSince"
    },
    "Azure.Core.ConditionalRequestHeaders.ifNoneMatch": {
      "name": "If-None-Match",
      "in": "header",
      "description": "The request should only proceed if no entity matches this string.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "ifNoneMatch"
    },
    "Azure.Core.ConditionalRequestHeaders.ifUnmodifiedSince": {
      "name": "If-Unmodified-Since",
      "in": "header",
      "description": "The request should only proceed if the entity was not modified after this time.",
      "required": false,
      "type": "string",
      "format": "date-time",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "ifUnmodifiedSince"
    },
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    },
    "Azure.Core.MaxPageSizeQueryParameter": {
      "name": "maxpagesize",
      "in": "query",
      "description": "The maximum number of result items per page.",
      "required": false,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "Azure.Core.RepeatabilityRequestHeaders.repeatabilityFirstSent": {
      "name": "Repeatability-First-Sent",
      "in": "header",
      "description": "Specifies the date and time at which the request was first created.",
      "required": false,
      "type": "string",
      "format": "date-time",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "repeatabilityFirstSent"
    },
    "Azure.Core.RepeatabilityRequestHeaders.repeatabilityRequestId": {
      "name": "Repeatability-Request-ID",
      "in": "header",
      "description": "An opaque, globally-unique, client-generated string identifier for the request.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "repeatabilityRequestId"
    },
    "Azure.Core.SelectQueryParameter": {
      "name": "select",
      "in": "query",
      "description": "Select the specified fields to be included in the response.",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "x-ms-parameter-location": "method"
    },
    "Azure.Core.SkipQueryParameter": {
      "name": "skip",
      "in": "query",
      "description": "The number of result items to skip.",
      "required": false,
      "type": "integer",
      "format": "int32",
      "default": 0,
      "x-ms-parameter-location": "method"
    },
    "Azure.Core.TopQueryParameter": {
      "name": "top",
      "in": "query",
      "description": "The number of result items to return.",
      "required": false,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    }
  }
}