{
  "swagger": "2.0",
  "info": {
    "title": "Dynatrace.Observability",
    "version": "2024-04-24",
    "description": "// FIXME: (missing-service-description) Add service description",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "MonitorResources"
    },
    {
      "name": "MonitoredSubscriptions"
    },
    {
      "name": "TagRules"
    },
    {
      "name": "DynatraceSingleSignOnResources"
    }
  ],
  "paths": {
    "/providers/Dynatrace.Observability/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List_MaximumSet_Gen": {
            "$ref": "./examples/Operations_List_MaximumSet_Gen.json"
          },
          "Operations_List_MinimumSet_Gen": {
            "$ref": "./examples/Operations_List_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Dynatrace.Observability/getAllConnectedResourcesCount": {
      "post": {
        "operationId": "Monitors_GetAllConnectedResourcesCount",
        "description": "Get the total number of connected resources for the given marketplace subscription Id",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MarketplaceSubscriptionIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ConnectedResourcesCountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_GetAllConnectedResourcesCount_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_GetAllConnectedResourcesCount_MaximumSet_Gen.json"
          },
          "Monitors_GetAllConnectedResourcesCount_MinimumSet_Gen": {
            "$ref": "./examples/Monitors_GetAllConnectedResourcesCount_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Dynatrace.Observability/getMarketplaceSaaSResourceDetails": {
      "post": {
        "operationId": "Monitors_GetMarketplaceSaaSResourceDetails",
        "description": "Get Marketplace SaaS resource details",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MarketplaceSaaSResourceDetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/MarketplaceSaaSResourceDetailsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_GetMarketplaceSaaSResourceDetails_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_GetMarketplaceSaaSResourceDetails_MaximumSet_Gen.json"
          },
          "Monitors_GetMarketplaceSaaSResourceDetails_MinimumSet_Gen": {
            "$ref": "./examples/Monitors_GetMarketplaceSaaSResourceDetails_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Dynatrace.Observability/monitors": {
      "get": {
        "operationId": "Monitors_ListBySubscriptionId",
        "tags": [
          "MonitorResources"
        ],
        "description": "List all MonitorResource by subscriptionId",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MonitorResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_ListBySubscriptionId_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_ListBySubscriptionId_MaximumSet_Gen.json"
          },
          "Monitors_ListBySubscriptionId_MinimumSet_Gen": {
            "$ref": "./examples/Monitors_ListBySubscriptionId_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Dynatrace.Observability/subscriptionStatuses/{dynatraceEnvironmentId}": {
      "get": {
        "operationId": "CreationSupported_List",
        "summary": "Informs if the current subscription is being already monitored for selected Dynatrace environment.",
        "description": "Informs if the current subscription is being already monitored for selected Dynatrace environment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "dynatraceEnvironmentId",
            "in": "path",
            "description": "Dynatrace Environment Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CreateResourceSupportedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Dynatrace.Observability/subscriptionStatuses/{dynatraceEnvironmentId}/default": {
      "get": {
        "operationId": "CreationSupported_Get",
        "summary": "Informs if the current subscription is being already monitored for selected Dynatrace environment.",
        "description": "Informs if the current subscription is being already monitored for selected Dynatrace environment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "dynatraceEnvironmentId",
            "in": "path",
            "description": "Dynatrace Environment Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CreateResourceSupportedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreationSupported_Get": {
            "$ref": "./examples/CreationSupported_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors": {
      "get": {
        "operationId": "Monitors_ListByResourceGroup",
        "tags": [
          "MonitorResources"
        ],
        "description": "List MonitorResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MonitorResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_ListByResourceGroup_MaximumSet_Gen.json"
          },
          "Monitors_ListByResourceGroup_MinimumSet_Gen": {
            "$ref": "./examples/Monitors_ListByResourceGroup_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}": {
      "get": {
        "operationId": "Monitors_Get",
        "tags": [
          "MonitorResources"
        ],
        "description": "Get a MonitorResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MonitorResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_Get_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_Get_MaximumSet_Gen.json"
          },
          "Monitors_Get_MinimumSet_Gen": {
            "$ref": "./examples/Monitors_Get_MinimumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Monitors_CreateOrUpdate",
        "tags": [
          "MonitorResources"
        ],
        "description": "Create a MonitorResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MonitorResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'MonitorResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/MonitorResource"
            }
          },
          "201": {
            "description": "Resource 'MonitorResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/MonitorResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_CreateOrUpdate_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_CreateOrUpdate_MaximumSet_Gen.json"
          },
          "Monitors_CreateOrUpdate_MinimumSet_Gen": {
            "$ref": "./examples/Monitors_CreateOrUpdate_MinimumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Monitors_Update",
        "tags": [
          "MonitorResources"
        ],
        "description": "Update a MonitorResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MonitorResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MonitorResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_Update_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_Update_MaximumSet_Gen.json"
          },
          "Monitors_Update_MinimumSet_Gen": {
            "$ref": "./examples/Monitors_Update_MinimumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "Monitors_Delete",
        "tags": [
          "MonitorResources"
        ],
        "description": "Delete a MonitorResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_Delete_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_Delete_MaximumSet_Gen.json"
          },
          "Monitors_Delete_MinimumSet_Gen": {
            "$ref": "./examples/Monitors_Delete_MinimumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/getMetricStatus": {
      "post": {
        "operationId": "Monitors_GetMetricStatus",
        "tags": [
          "MonitorResources"
        ],
        "description": "Get metric status",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]*$"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The details of the metric status request.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MetricStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MetricsStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_GetMetricStatus_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_GetMetricStatus_MaximumSet_Gen.json"
          },
          "Monitors_GetMetricStatus_MinimumSet_Gen": {
            "$ref": "./examples/Monitors_GetMetricStatus_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/getSSODetails": {
      "post": {
        "operationId": "Monitors_GetSSODetails",
        "tags": [
          "MonitorResources"
        ],
        "description": "Gets the SSO configuration details from the partner.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]*$"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The details of the get sso details request.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SSODetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SSODetailsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_GetSSODetails_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_GetSSODetails_MaximumSet_Gen.json"
          },
          "Monitors_GetSSODetails_MinimumSet_Gen": {
            "$ref": "./examples/Monitors_GetSSODetails_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/getVMHostPayload": {
      "post": {
        "operationId": "Monitors_GetVMHostPayload",
        "tags": [
          "MonitorResources"
        ],
        "description": "Returns the payload that needs to be passed in the request body for installing Dynatrace agent on a VM.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VMExtensionPayload"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_GetVMHostPayload_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_GetVMHostPayload_MaximumSet_Gen.json"
          },
          "Monitors_GetVMHostPayload_MinimumSet_Gen": {
            "$ref": "./examples/Monitors_GetVMHostPayload_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/listAppServices": {
      "post": {
        "operationId": "Monitors_ListAppServices",
        "tags": [
          "MonitorResources"
        ],
        "description": "Gets list of App Services with Dynatrace PaaS OneAgent enabled",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AppServiceListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_ListAppServices_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_ListAppServices_MaximumSet_Gen.json"
          },
          "Monitors_ListAppServices_MinimumSet_Gen": {
            "$ref": "./examples/Monitors_ListAppServices_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/listHosts": {
      "post": {
        "operationId": "Monitors_ListHosts",
        "tags": [
          "MonitorResources"
        ],
        "description": "List the VM/VMSS resources currently being monitored by the Dynatrace resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VMHostsListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_ListHosts_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_ListHosts_MaximumSet_Gen.json"
          },
          "Monitors_ListHosts_MinimumSet_Gen": {
            "$ref": "./examples/Monitors_ListHosts_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/listLinkableEnvironments": {
      "post": {
        "operationId": "Monitors_ListLinkableEnvironments",
        "tags": [
          "MonitorResources"
        ],
        "description": "Gets all the Dynatrace environments that a user can link a azure resource to",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]*$"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The details of the linkable environment request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LinkableEnvironmentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LinkableEnvironmentListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_ListLinkableEnvironments_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_ListLinkableEnvironments_MaximumSet_Gen.json"
          },
          "Monitors_ListLinkableEnvironments_MinimumSet_Gen": {
            "$ref": "./examples/Monitors_ListLinkableEnvironments_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/listMonitoredResources": {
      "post": {
        "operationId": "Monitors_ListMonitoredResources",
        "tags": [
          "MonitorResources"
        ],
        "description": "List the resources currently being monitored by the Dynatrace monitor resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]*$"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The details of the log status request.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LogStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MonitoredResourceListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_ListMonitoredResources_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_ListMonitoredResources_MaximumSet_Gen.json"
          },
          "Monitors_ListMonitoredResources_MinimumSet_Gen": {
            "$ref": "./examples/Monitors_ListMonitoredResources_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/manageAgentInstallation": {
      "post": {
        "operationId": "Monitors_ManageAgentInstallation",
        "tags": [
          "MonitorResources"
        ],
        "description": "Performs Dynatrace agent install/uninstall action through the Azure Dynatrace resource on the provided list of resources.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]*$"
          },
          {
            "name": "request",
            "in": "body",
            "description": "List of resources and action",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManageAgentInstallationRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_ManageAgentInstallation_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_ManageAgentInstallation_MaximumSet_Gen.json"
          },
          "Monitors_ManageAgentInstallation_MinimumSet_Gen": {
            "$ref": "./examples/Monitors_ManageAgentInstallation_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/monitoredSubscriptions": {
      "get": {
        "operationId": "MonitoredSubscriptions_List",
        "tags": [
          "MonitoredSubscriptions"
        ],
        "description": "List the subscriptions currently being monitored by the Dynatrace monitor resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MonitoredSubscriptionPropertiesList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_GetMonitoredSubscriptions": {
            "$ref": "./examples/MonitoredSubscriptions_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/monitoredSubscriptions/default": {
      "get": {
        "operationId": "MonitoredSubscriptions_Get",
        "tags": [
          "MonitoredSubscriptions"
        ],
        "description": "List the subscriptions currently being monitored by the Dynatrace monitor resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MonitoredSubscriptionProperties"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_GetMonitoredSubscriptions": {
            "$ref": "./examples/MonitoredSubscriptions_Get.json"
          }
        }
      },
      "put": {
        "operationId": "MonitoredSubscriptions_CreateOrUpdate",
        "tags": [
          "MonitoredSubscriptions"
        ],
        "description": "Add the subscriptions that should be monitored by the Dynatrace monitor resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MonitoredSubscriptionProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'MonitoredSubscriptionProperties' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/MonitoredSubscriptionProperties"
            }
          },
          "201": {
            "description": "Resource 'MonitoredSubscriptionProperties' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/MonitoredSubscriptionProperties"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_AddMonitoredSubscriptions": {
            "$ref": "./examples/MonitoredSubscriptions_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "MonitoredSubscriptions_Update",
        "tags": [
          "MonitoredSubscriptions"
        ],
        "description": "Updates the subscriptions that are being monitored by the Dynatrace monitor resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MonitoredSubscriptionProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MonitoredSubscriptionProperties"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_UpdateMonitoredSubscriptions": {
            "$ref": "./examples/MonitoredSubscriptions_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "MonitoredSubscriptions_Delete",
        "tags": [
          "MonitoredSubscriptions"
        ],
        "description": "Updates the subscriptions that are being monitored by the Dynatrace monitor resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_DeleteMonitoredSubscriptions": {
            "$ref": "./examples/MonitoredSubscriptions_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/singleSignOnConfigurations": {
      "get": {
        "operationId": "SingleSignOn_List",
        "tags": [
          "DynatraceSingleSignOnResources"
        ],
        "description": "List all DynatraceSingleSignOnResource by monitorName",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DynatraceSingleSignOnResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SingleSignOn_List_MaximumSet_Gen": {
            "$ref": "./examples/SingleSignOn_List_MaximumSet_Gen.json"
          },
          "SingleSignOn_List_MinimumSet_Gen": {
            "$ref": "./examples/SingleSignOn_List_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/singleSignOnConfigurations/{configurationName}": {
      "get": {
        "operationId": "SingleSignOn_Get",
        "tags": [
          "DynatraceSingleSignOnResources"
        ],
        "description": "Get a DynatraceSingleSignOnResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]*$"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "Single Sign On Configuration Name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DynatraceSingleSignOnResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SingleSignOn_Get_MaximumSet_Gen": {
            "$ref": "./examples/SingleSignOn_Get_MaximumSet_Gen.json"
          },
          "SingleSignOn_Get_MinimumSet_Gen": {
            "$ref": "./examples/SingleSignOn_Get_MinimumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "SingleSignOn_CreateOrUpdate",
        "tags": [
          "DynatraceSingleSignOnResources"
        ],
        "description": "Create a DynatraceSingleSignOnResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]*$"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "Single Sign On Configuration Name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DynatraceSingleSignOnResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DynatraceSingleSignOnResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DynatraceSingleSignOnResource"
            }
          },
          "201": {
            "description": "Resource 'DynatraceSingleSignOnResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DynatraceSingleSignOnResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SingleSignOn_CreateOrUpdate_MaximumSet_Gen": {
            "$ref": "./examples/SingleSignOn_CreateOrUpdate_MaximumSet_Gen.json"
          },
          "SingleSignOn_CreateOrUpdate_MinimumSet_Gen": {
            "$ref": "./examples/SingleSignOn_CreateOrUpdate_MinimumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/tagRules": {
      "get": {
        "operationId": "TagRules_List",
        "tags": [
          "TagRules"
        ],
        "description": "List all TagRule by monitorName",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TagRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TagRules_List_MaximumSet_Gen": {
            "$ref": "./examples/TagRules_List_MaximumSet_Gen.json"
          },
          "TagRules_List_MinimumSet_Gen": {
            "$ref": "./examples/TagRules_List_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/tagRules/{ruleSetName}": {
      "get": {
        "operationId": "TagRules_Get",
        "tags": [
          "TagRules"
        ],
        "description": "Get a TagRule",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]*$"
          },
          {
            "name": "ruleSetName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TagRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TagRules_Get_MaximumSet_Gen": {
            "$ref": "./examples/TagRules_Get_MaximumSet_Gen.json"
          },
          "TagRules_Get_MinimumSet_Gen": {
            "$ref": "./examples/TagRules_Get_MinimumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "TagRules_CreateOrUpdate",
        "tags": [
          "TagRules"
        ],
        "description": "Create a TagRule",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]*$"
          },
          {
            "name": "ruleSetName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'TagRule' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/TagRule"
            }
          },
          "201": {
            "description": "Resource 'TagRule' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/TagRule"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TagRules_CreateOrUpdate_MaximumSet_Gen": {
            "$ref": "./examples/TagRules_CreateOrUpdate_MaximumSet_Gen.json"
          },
          "TagRules_CreateOrUpdate_MinimumSet_Gen": {
            "$ref": "./examples/TagRules_CreateOrUpdate_MinimumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "TagRules_Delete",
        "tags": [
          "TagRules"
        ],
        "description": "Delete a TagRule",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]*$"
          },
          {
            "name": "ruleSetName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TagRules_Delete_MaximumSet_Gen": {
            "$ref": "./examples/TagRules_Delete_MaximumSet_Gen.json"
          },
          "TagRules_Delete_MinimumSet_Gen": {
            "$ref": "./examples/TagRules_Delete_MinimumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/upgradePlan": {
      "post": {
        "operationId": "Monitors_UpgradePlan",
        "tags": [
          "MonitorResources"
        ],
        "description": "Upgrades the billing Plan for Dynatrace monitor resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]*$"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The details of the upgrade plan request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpgradePlanRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_UpgradePlan_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_UpgradePlan_MaximumSet_Gen.json"
          },
          "Monitors_UpgradePlan_MinimumSet_Gen": {
            "$ref": "./examples/Monitors_UpgradePlan_MinimumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AccountInfo": {
      "type": "object",
      "description": "Dynatrace Account Information",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "Account Id of the account this environment is linked to"
        },
        "regionId": {
          "type": "string",
          "description": "Region in which the account is created"
        },
        "companyName": {
          "type": "string",
          "description": "Name of the customer account / company"
        }
      }
    },
    "Action": {
      "type": "string",
      "description": "Install/Uninstall action.",
      "enum": [
        "Install",
        "Uninstall"
      ],
      "x-ms-enum": {
        "name": "Action",
        "modelAsString": true,
        "values": [
          {
            "name": "Install",
            "value": "Install"
          },
          {
            "name": "Uninstall",
            "value": "Uninstall"
          }
        ]
      }
    },
    "AppServiceInfo": {
      "type": "object",
      "description": "Details of App Services having Dynatrace OneAgent installed",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "App service resource ID"
        },
        "version": {
          "type": "string",
          "description": "Version of the Dynatrace agent installed on the App Service."
        },
        "monitoringType": {
          "$ref": "#/definitions/MonitoringType",
          "description": "The monitoring mode of OneAgent"
        },
        "autoUpdateSetting": {
          "$ref": "#/definitions/AutoUpdateSetting",
          "description": "Update settings of OneAgent."
        },
        "updateStatus": {
          "$ref": "#/definitions/UpdateStatus",
          "description": "The current update status of OneAgent."
        },
        "availabilityState": {
          "$ref": "#/definitions/AvailabilityState",
          "description": "The availability state of OneAgent."
        },
        "logModule": {
          "$ref": "#/definitions/LogModule",
          "description": "Tells whether log modules are enabled or not"
        },
        "hostGroup": {
          "type": "string",
          "description": "The name of the host group"
        },
        "hostName": {
          "type": "string",
          "description": "The name of the host"
        }
      }
    },
    "AppServiceListResponse": {
      "type": "object",
      "description": "Response of a list App Services Operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AppServiceInfo items on this page",
          "items": {
            "$ref": "#/definitions/AppServiceInfo"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AutoUpdateSetting": {
      "type": "string",
      "description": "Update settings of OneAgent.",
      "enum": [
        "ENABLED",
        "DISABLED"
      ],
      "x-ms-enum": {
        "name": "AutoUpdateSetting",
        "modelAsString": true,
        "values": [
          {
            "name": "ENABLED",
            "value": "ENABLED"
          },
          {
            "name": "DISABLED",
            "value": "DISABLED"
          }
        ]
      }
    },
    "AvailabilityState": {
      "type": "string",
      "description": "The availability state of OneAgent.",
      "enum": [
        "CRASHED",
        "LOST",
        "MONITORED",
        "PRE_MONITORED",
        "SHUTDOWN",
        "UNEXPECTED_SHUTDOWN",
        "UNKNOWN",
        "UNMONITORED"
      ],
      "x-ms-enum": {
        "name": "AvailabilityState",
        "modelAsString": true,
        "values": [
          {
            "name": "CRASHED",
            "value": "CRASHED"
          },
          {
            "name": "LOST",
            "value": "LOST"
          },
          {
            "name": "MONITORED",
            "value": "MONITORED"
          },
          {
            "name": "PRE_MONITORED",
            "value": "PRE_MONITORED"
          },
          {
            "name": "SHUTDOWN",
            "value": "SHUTDOWN"
          },
          {
            "name": "UNEXPECTED_SHUTDOWN",
            "value": "UNEXPECTED_SHUTDOWN"
          },
          {
            "name": "UNKNOWN",
            "value": "UNKNOWN"
          },
          {
            "name": "UNMONITORED",
            "value": "UNMONITORED"
          }
        ]
      }
    },
    "ConnectedResourcesCountResponse": {
      "type": "object",
      "description": "Response for getting Connected resources for a MP SaaS Resource",
      "properties": {
        "connectedResourcesCount": {
          "type": "integer",
          "format": "int64",
          "description": "Count of the connected resources"
        }
      }
    },
    "CreateResourceSupportedProperties": {
      "type": "object",
      "description": "Properties related to the support for creating Dynatrace resources.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The ARM id of the subscription.",
          "readOnly": true
        },
        "creationSupported": {
          "type": "boolean",
          "description": "Indicates if selected subscription supports Dynatrace resource creation, if not it is already being monitored for the selected organization via multi subscription feature.",
          "readOnly": true
        }
      }
    },
    "CreateResourceSupportedResponse": {
      "type": "object",
      "description": "Dynatrace resource can be created or not.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Represents the properties of the resource.",
          "items": {
            "$ref": "#/definitions/CreateResourceSupportedProperties"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items"
        }
      }
    },
    "DynatraceEnvironmentProperties": {
      "type": "object",
      "description": "Properties of the Dynatrace environment.",
      "properties": {
        "userId": {
          "type": "string",
          "description": "User id"
        },
        "accountInfo": {
          "$ref": "#/definitions/AccountInfo",
          "description": "Dynatrace Account Information"
        },
        "environmentInfo": {
          "$ref": "#/definitions/EnvironmentInfo",
          "description": "Dynatrace Environment Information"
        },
        "singleSignOnProperties": {
          "$ref": "#/definitions/DynatraceSingleSignOnProperties",
          "description": "The details of a Dynatrace single sign-on."
        }
      }
    },
    "DynatraceSingleSignOnProperties": {
      "type": "object",
      "description": "The details of a Dynatrace single sign-on.",
      "properties": {
        "singleSignOnState": {
          "$ref": "#/definitions/SingleSignOnStates",
          "description": "State of Single Sign On"
        },
        "enterpriseAppId": {
          "type": "string",
          "description": "Version of the Dynatrace agent installed on the VM."
        },
        "singleSignOnUrl": {
          "type": "string",
          "description": "The login URL specific to this Dynatrace Environment"
        },
        "aadDomains": {
          "type": "array",
          "description": "array of Aad(azure active directory) domains",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      }
    },
    "DynatraceSingleSignOnResource": {
      "type": "object",
      "description": "Single sign-on configurations for a given monitor resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DynatraceSingleSignOnProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DynatraceSingleSignOnResourceListResult": {
      "type": "object",
      "description": "The response of a DynatraceSingleSignOnResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DynatraceSingleSignOnResource items on this page",
          "items": {
            "$ref": "#/definitions/DynatraceSingleSignOnResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EnvironmentInfo": {
      "type": "object",
      "description": "Dynatrace Environment Information",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "Id of the environment created"
        },
        "ingestionKey": {
          "type": "string",
          "description": "Ingestion key of the environment"
        },
        "logsIngestionEndpoint": {
          "type": "string",
          "description": "Ingestion endpoint used for sending logs"
        },
        "landingURL": {
          "type": "string",
          "description": "Landing URL for Dynatrace environment"
        }
      }
    },
    "FilteringTag": {
      "type": "object",
      "description": "The definition of a filtering tag. Filtering tags are used for capturing resources and include/exclude them from being monitored.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name (also known as the key) of the tag."
        },
        "value": {
          "type": "string",
          "description": "The value of the tag."
        },
        "action": {
          "$ref": "#/definitions/TagAction",
          "description": "Valid actions for a filtering tag. Exclusion takes priority over inclusion."
        }
      }
    },
    "IdentityProperties": {
      "type": "object",
      "description": "The properties of the managed service identities assigned to this resource.",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The Active Directory tenant id of the principal.",
          "readOnly": true
        },
        "principalId": {
          "type": "string",
          "description": "The active directory identifier of this principal.",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/ManagedIdentityType",
          "description": "The type of managed identity assigned to this resource."
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "The identities assigned to this resource by the user.",
          "additionalProperties": {
            "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/UserAssignedIdentity"
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "LiftrResourceCategories": {
      "type": "string",
      "description": "Liftr resource category",
      "enum": [
        "Unknown",
        "MonitorLogs"
      ],
      "x-ms-enum": {
        "name": "LiftrResourceCategories",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown"
          },
          {
            "name": "MonitorLogs",
            "value": "MonitorLogs"
          }
        ]
      }
    },
    "LinkableEnvironmentListResponse": {
      "type": "object",
      "description": "Response for getting all the linkable environments",
      "properties": {
        "value": {
          "type": "array",
          "description": "The LinkableEnvironmentResponse items on this page",
          "items": {
            "$ref": "#/definitions/LinkableEnvironmentResponse"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "LinkableEnvironmentRequest": {
      "type": "object",
      "description": "Request for getting all the linkable environments for a user",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Tenant Id of the user in which they want to link the environment"
        },
        "userPrincipal": {
          "type": "string",
          "description": "user principal id of the user"
        },
        "region": {
          "type": "string",
          "description": "Azure region in which we want to link the environment"
        }
      },
      "required": [
        "tenantId",
        "userPrincipal",
        "region"
      ]
    },
    "LinkableEnvironmentResponse": {
      "type": "object",
      "description": "Response for getting all the linkable environments",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "environment id for which user is an admin"
        },
        "environmentName": {
          "type": "string",
          "description": "Name of the environment"
        },
        "planData": {
          "$ref": "#/definitions/PlanData",
          "description": "Billing plan information."
        }
      }
    },
    "LogModule": {
      "type": "string",
      "description": "Tells whether log modules are enabled or not",
      "enum": [
        "ENABLED",
        "DISABLED"
      ],
      "x-ms-enum": {
        "name": "LogModule",
        "modelAsString": true,
        "values": [
          {
            "name": "ENABLED",
            "value": "ENABLED"
          },
          {
            "name": "DISABLED",
            "value": "DISABLED"
          }
        ]
      }
    },
    "LogRules": {
      "type": "object",
      "description": "Set of rules for sending logs for the Monitor resource.",
      "properties": {
        "sendAadLogs": {
          "$ref": "#/definitions/SendAadLogsStatus",
          "description": "Flag specifying if AAD logs should be sent for the Monitor resource."
        },
        "sendSubscriptionLogs": {
          "$ref": "#/definitions/SendSubscriptionLogsStatus",
          "description": "Flag specifying if subscription logs should be sent for the Monitor resource."
        },
        "sendActivityLogs": {
          "$ref": "#/definitions/SendActivityLogsStatus",
          "description": "Flag specifying if activity logs from Azure resources should be sent for the Monitor resource."
        },
        "filteringTags": {
          "type": "array",
          "description": "List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty, all resources will be captured.\nIf only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags.",
          "items": {
            "$ref": "#/definitions/FilteringTag"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "LogStatusRequest": {
      "type": "object",
      "description": "Request for getting log status for given monitored resource Ids",
      "properties": {
        "monitoredResourceIds": {
          "type": "array",
          "description": "List of azure resource Id of monitored resources for which we get the log status",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ManageAgentInstallationRequest": {
      "type": "object",
      "description": "Request for performing Dynatrace agent install/uninstall action through the Azure Dynatrace resource on the provided list of agent resources.",
      "properties": {
        "manageAgentInstallationList": {
          "type": "array",
          "description": "The list of resources.",
          "items": {
            "$ref": "#/definitions/ManageAgentList"
          }
        },
        "action": {
          "$ref": "#/definitions/Action",
          "description": "Install/Uninstall action."
        }
      },
      "required": [
        "manageAgentInstallationList",
        "action"
      ]
    },
    "ManageAgentList": {
      "type": "object",
      "description": "Details of resource that has Dynatrace agent installed through the Azure Dynatrace resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ARM id of the resource to install/uninstall agent."
        }
      }
    },
    "ManagedIdentityType": {
      "type": "string",
      "description": "The kind of managed identity assigned to this resource.",
      "enum": [
        "SystemAssigned",
        "UserAssigned",
        "SystemAndUserAssigned"
      ],
      "x-ms-enum": {
        "name": "ManagedIdentityType",
        "modelAsString": true,
        "values": [
          {
            "name": "SystemAssigned",
            "value": "SystemAssigned"
          },
          {
            "name": "UserAssigned",
            "value": "UserAssigned"
          },
          {
            "name": "SystemAndUserAssigned",
            "value": "SystemAndUserAssigned"
          }
        ]
      }
    },
    "MarketplaceSaaSResourceDetailsRequest": {
      "type": "object",
      "description": "Request for getting Marketplace SaaS resource details for a tenant Id",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Tenant Id"
        }
      },
      "required": [
        "tenantId"
      ]
    },
    "MarketplaceSaaSResourceDetailsResponse": {
      "type": "object",
      "description": "Marketplace SaaS resource details linked to the given tenant Id",
      "properties": {
        "marketplaceSaaSResourceId": {
          "type": "string",
          "description": "Id of the Marketplace SaaS Resource"
        },
        "planId": {
          "type": "string",
          "description": "Id of the plan"
        },
        "marketplaceSubscriptionStatus": {
          "$ref": "#/definitions/MarketplaceSubscriptionStatus",
          "description": "Marketplace subscription status"
        },
        "marketplaceSaaSResourceName": {
          "type": "string",
          "description": "Name of the Marketplace SaaS Resource"
        }
      }
    },
    "MarketplaceSaasAutoRenew": {
      "type": "string",
      "description": "Marketplace resource autorenew flag",
      "enum": [
        "On",
        "Off"
      ],
      "x-ms-enum": {
        "name": "MarketplaceSaasAutoRenew",
        "modelAsString": true,
        "values": [
          {
            "name": "On",
            "value": "On"
          },
          {
            "name": "Off",
            "value": "Off"
          }
        ]
      }
    },
    "MarketplaceSubscriptionIdRequest": {
      "type": "object",
      "description": "Request for getting connected resources count for a Marketplace Subscription Id",
      "properties": {
        "marketplaceSubscriptionId": {
          "type": "string",
          "description": "Marketplace Subscription Id"
        }
      },
      "required": [
        "marketplaceSubscriptionId"
      ]
    },
    "MarketplaceSubscriptionStatus": {
      "type": "string",
      "description": "Flag specifying the Marketplace Subscription Status of the resource. If payment is not made in time, the resource will go in Suspended state.",
      "enum": [
        "Active",
        "Suspended",
        "Unsubscribed"
      ],
      "x-ms-enum": {
        "name": "MarketplaceSubscriptionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Active",
            "value": "Active"
          },
          {
            "name": "Suspended",
            "value": "Suspended"
          },
          {
            "name": "Unsubscribed",
            "value": "Unsubscribed"
          }
        ]
      }
    },
    "MetricRules": {
      "type": "object",
      "description": "Set of rules for sending metrics for the Monitor resource.",
      "properties": {
        "sendingMetrics": {
          "$ref": "#/definitions/SendingMetricsStatus",
          "description": "Flag specifying if metrics from Azure resources should be sent for the Monitor resource."
        },
        "filteringTags": {
          "type": "array",
          "description": "List of filtering tags to be used for capturing metrics. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags.",
          "items": {
            "$ref": "#/definitions/FilteringTag"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "MetricStatusRequest": {
      "type": "object",
      "description": "Request for getting metric status for given monitored resource Ids",
      "properties": {
        "monitoredResourceIds": {
          "type": "array",
          "description": "List of azure resource Id of monitored resources for which we get the metric status",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MetricsStatusResponse": {
      "type": "object",
      "description": "Response of get metrics status operation",
      "properties": {
        "azureResourceIds": {
          "type": "array",
          "description": "Azure resource IDs",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MonitorProperties": {
      "type": "object",
      "description": "Properties specific to the monitor resource.",
      "properties": {
        "monitoringStatus": {
          "$ref": "#/definitions/MonitoringStatus",
          "description": "Status of the monitor."
        },
        "marketplaceSubscriptionStatus": {
          "$ref": "#/definitions/MarketplaceSubscriptionStatus",
          "description": "Marketplace subscription status."
        },
        "marketplaceSaasAutoRenew": {
          "$ref": "#/definitions/MarketplaceSaasAutoRenew",
          "description": "Marketplace resource autorenew flag"
        },
        "dynatraceEnvironmentProperties": {
          "$ref": "#/definitions/DynatraceEnvironmentProperties",
          "description": "Properties of the Dynatrace environment."
        },
        "userInfo": {
          "$ref": "#/definitions/UserInfo",
          "description": "User info."
        },
        "planData": {
          "$ref": "#/definitions/PlanData",
          "description": "Billing plan information."
        },
        "liftrResourceCategory": {
          "$ref": "#/definitions/LiftrResourceCategories",
          "description": "Liftr Resource category.",
          "readOnly": true
        },
        "liftrResourcePreference": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the resource.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      }
    },
    "MonitorResource": {
      "type": "object",
      "description": "Dynatrace Monitor Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MonitorProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "#/definitions/IdentityProperties",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "MonitorResourceListResult": {
      "type": "object",
      "description": "The response of a MonitorResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The MonitorResource items on this page",
          "items": {
            "$ref": "#/definitions/MonitorResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "MonitorResourceUpdate": {
      "type": "object",
      "description": "The updatable properties of the MonitorResource.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "properties": {
          "$ref": "#/definitions/MonitorUpdateProperties",
          "description": "The set of properties that can be updated in a PATCH request to a monitor resource."
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      }
    },
    "MonitorUpdateProperties": {
      "type": "object",
      "description": "The set of properties that can be updated in a PATCH request to a monitor resource.",
      "properties": {
        "planData": {
          "$ref": "#/definitions/PlanData",
          "description": "The new Billing plan information."
        }
      }
    },
    "MonitoredResource": {
      "type": "object",
      "description": "Details of resource being monitored by Dynatrace monitor resource",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ARM id of the resource."
        },
        "sendingMetrics": {
          "$ref": "#/definitions/SendingMetricsStatus",
          "description": "Flag indicating if resource is sending metrics to Dynatrace."
        },
        "reasonForMetricsStatus": {
          "type": "string",
          "description": "Reason for why the resource is sending metrics (or why it is not sending)."
        },
        "sendingLogs": {
          "$ref": "#/definitions/SendingLogsStatus",
          "description": "Flag indicating if resource is sending logs to Dynatrace."
        },
        "reasonForLogsStatus": {
          "type": "string",
          "description": "Reason for why the resource is sending logs (or why it is not sending)."
        }
      }
    },
    "MonitoredResourceListResponse": {
      "type": "object",
      "description": "List of all the resources being monitored by Dynatrace monitor resource",
      "properties": {
        "value": {
          "type": "array",
          "description": "The MonitoredResource items on this page",
          "items": {
            "$ref": "#/definitions/MonitoredResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "MonitoredSubscription": {
      "type": "object",
      "description": "The list of subscriptions and it's monitoring status by current Dynatrace monitor.",
      "properties": {
        "subscriptionId": {
          "type": "string",
          "description": "The subscriptionId to be monitored."
        },
        "status": {
          "$ref": "#/definitions/Status",
          "description": "The state of monitoring."
        },
        "error": {
          "type": "string",
          "description": "The reason of not monitoring the subscription."
        },
        "tagRules": {
          "$ref": "#/definitions/MonitoringTagRulesProperties",
          "description": "Properties for the Tag rules resource of a Monitor account."
        }
      },
      "required": [
        "subscriptionId"
      ]
    },
    "MonitoredSubscriptionProperties": {
      "type": "object",
      "description": "The request to update subscriptions needed to be monitored by the Dynatrace monitor resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SubscriptionList",
          "description": "The request to update subscriptions needed to be monitored by the Dynatrace monitor resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "MonitoredSubscriptionPropertiesList": {
      "type": "object",
      "description": "Paged collection of MonitoredSubscriptionProperties items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The MonitoredSubscriptionProperties items on this page",
          "items": {
            "$ref": "#/definitions/MonitoredSubscriptionProperties"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "MonitoringStatus": {
      "type": "string",
      "description": "Flag specifying if the resource monitoring is enabled or disabled.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "MonitoringStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "MonitoringTagRulesProperties": {
      "type": "object",
      "description": "Properties for the Tag rules resource of a Monitor account.",
      "properties": {
        "logRules": {
          "$ref": "#/definitions/LogRules",
          "description": "Set of rules for sending logs for the Monitor resource."
        },
        "metricRules": {
          "$ref": "#/definitions/MetricRules",
          "description": "Set of rules for sending metrics for the Monitor resource."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      }
    },
    "MonitoringType": {
      "type": "string",
      "description": "The monitoring mode of OneAgent",
      "enum": [
        "CLOUD_INFRASTRUCTURE",
        "FULL_STACK",
        "DISCOVERY"
      ],
      "x-ms-enum": {
        "name": "MonitoringType",
        "modelAsString": true,
        "values": [
          {
            "name": "CLOUD_INFRASTRUCTURE",
            "value": "CLOUD_INFRASTRUCTURE"
          },
          {
            "name": "FULL_STACK",
            "value": "FULL_STACK"
          },
          {
            "name": "DISCOVERY",
            "value": "DISCOVERY"
          }
        ]
      }
    },
    "PlanData": {
      "type": "object",
      "description": "Billing plan information.",
      "properties": {
        "usageType": {
          "type": "string",
          "description": "different usage type like PAYG/COMMITTED. this could be enum"
        },
        "billingCycle": {
          "type": "string",
          "description": "different billing cycles like MONTHLY/WEEKLY. this could be enum"
        },
        "planDetails": {
          "type": "string",
          "description": "plan id as published by Dynatrace"
        },
        "effectiveDate": {
          "type": "string",
          "format": "date-time",
          "description": "date when plan was applied"
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the monitoring resource",
      "enum": [
        "Accepted",
        "Creating",
        "Updating",
        "Deleting",
        "Succeeded",
        "Failed",
        "Canceled",
        "Deleted",
        "NotSpecified"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Accepted",
            "value": "Accepted"
          },
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Updating",
            "value": "Updating"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "Canceled",
            "value": "Canceled"
          },
          {
            "name": "Deleted",
            "value": "Deleted"
          },
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          }
        ]
      }
    },
    "SSODetailsRequest": {
      "type": "object",
      "description": "Request for getting sso details for a user",
      "properties": {
        "userPrincipal": {
          "type": "string",
          "description": "user principal id of the user"
        }
      },
      "required": [
        "userPrincipal"
      ]
    },
    "SSODetailsResponse": {
      "type": "object",
      "description": "SSO details from the Dynatrace partner",
      "properties": {
        "isSsoEnabled": {
          "$ref": "#/definitions/SSOStatus",
          "description": "Whether the SSO is enabled for this resource or not."
        },
        "metadataUrl": {
          "type": "string",
          "description": "URL for Azure AD metadata"
        },
        "singleSignOnUrl": {
          "type": "string",
          "description": "The login URL specific to this Dynatrace Environment"
        },
        "aadDomains": {
          "type": "array",
          "description": "array of Aad(azure active directory) domains",
          "items": {
            "type": "string"
          }
        },
        "adminUsers": {
          "type": "array",
          "description": "Array of admin user emails.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SSOStatus": {
      "type": "string",
      "description": "Indicates whether SSO is enabled or not",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "SSOStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "SendAadLogsStatus": {
      "type": "string",
      "description": "Indicates whether AAD logs are being sent.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "SendAadLogsStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "SendActivityLogsStatus": {
      "type": "string",
      "description": "Indicates whether activity logs are being sent.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "SendActivityLogsStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "SendSubscriptionLogsStatus": {
      "type": "string",
      "description": "Indicates whether subscription logs are being sent.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "SendSubscriptionLogsStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "SendingLogsStatus": {
      "type": "string",
      "description": "Indicates whether logs are being sent.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "SendingLogsStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "SendingMetricsStatus": {
      "type": "string",
      "description": "Indicates whether metrics are being sent.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "SendingMetricsStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "SingleSignOnStates": {
      "type": "string",
      "description": "Various states of the SSO resource",
      "enum": [
        "Initial",
        "Enable",
        "Disable",
        "Existing"
      ],
      "x-ms-enum": {
        "name": "SingleSignOnStates",
        "modelAsString": true,
        "values": [
          {
            "name": "Initial",
            "value": "Initial"
          },
          {
            "name": "Enable",
            "value": "Enable"
          },
          {
            "name": "Disable",
            "value": "Disable"
          },
          {
            "name": "Existing",
            "value": "Existing"
          }
        ]
      }
    },
    "Status": {
      "type": "string",
      "description": "The state of monitoring.",
      "enum": [
        "InProgress",
        "Active",
        "Failed",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "Status",
        "modelAsString": true,
        "values": [
          {
            "name": "InProgress",
            "value": "InProgress"
          },
          {
            "name": "Active",
            "value": "Active"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          }
        ]
      }
    },
    "SubscriptionList": {
      "type": "object",
      "description": "The request to update subscriptions needed to be monitored by the Dynatrace monitor resource.",
      "properties": {
        "operation": {
          "$ref": "#/definitions/SubscriptionListOperation",
          "description": "The operation for the patch on the resource.",
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "monitoredSubscriptionList": {
          "type": "array",
          "description": "List of subscriptions and the state of the monitoring.",
          "items": {
            "$ref": "#/definitions/MonitoredSubscription"
          },
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning State of the resource",
          "readOnly": true
        }
      }
    },
    "SubscriptionListOperation": {
      "type": "string",
      "description": "The operation for the patch on the resource.",
      "enum": [
        "AddBegin",
        "AddComplete",
        "DeleteBegin",
        "DeleteComplete",
        "Active"
      ],
      "x-ms-enum": {
        "name": "SubscriptionListOperation",
        "modelAsString": true,
        "values": [
          {
            "name": "AddBegin",
            "value": "AddBegin"
          },
          {
            "name": "AddComplete",
            "value": "AddComplete"
          },
          {
            "name": "DeleteBegin",
            "value": "DeleteBegin"
          },
          {
            "name": "DeleteComplete",
            "value": "DeleteComplete"
          },
          {
            "name": "Active",
            "value": "Active"
          }
        ]
      }
    },
    "TagAction": {
      "type": "string",
      "description": "Valid actions for a filtering tag. Exclusion takes priority over inclusion.",
      "enum": [
        "Include",
        "Exclude"
      ],
      "x-ms-enum": {
        "name": "TagAction",
        "modelAsString": true,
        "values": [
          {
            "name": "Include",
            "value": "Include"
          },
          {
            "name": "Exclude",
            "value": "Exclude"
          }
        ]
      }
    },
    "TagRule": {
      "type": "object",
      "description": "Tag rules for a monitor resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MonitoringTagRulesProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TagRuleListResult": {
      "type": "object",
      "description": "The response of a TagRule list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The TagRule items on this page",
          "items": {
            "$ref": "#/definitions/TagRule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "UpdateStatus": {
      "type": "string",
      "description": "The current update status of OneAgent.",
      "enum": [
        "INCOMPATIBLE",
        "OUTDATED",
        "SCHEDULED",
        "SUPPRESSED",
        "UNKNOWN",
        "UP2DATE",
        "UPDATE_IN_PROGRESS",
        "UPDATE_PENDING",
        "UPDATE_PROBLEM"
      ],
      "x-ms-enum": {
        "name": "UpdateStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "INCOMPATIBLE",
            "value": "INCOMPATIBLE"
          },
          {
            "name": "OUTDATED",
            "value": "OUTDATED"
          },
          {
            "name": "SCHEDULED",
            "value": "SCHEDULED"
          },
          {
            "name": "SUPPRESSED",
            "value": "SUPPRESSED"
          },
          {
            "name": "UNKNOWN",
            "value": "UNKNOWN"
          },
          {
            "name": "UP2DATE",
            "value": "UP2DATE"
          },
          {
            "name": "UPDATE_IN_PROGRESS",
            "value": "UPDATE_IN_PROGRESS"
          },
          {
            "name": "UPDATE_PENDING",
            "value": "UPDATE_PENDING"
          },
          {
            "name": "UPDATE_PROBLEM",
            "value": "UPDATE_PROBLEM"
          }
        ]
      }
    },
    "UpgradePlanRequest": {
      "type": "object",
      "description": "The billing plan properties for the upgrade plan call.",
      "properties": {
        "planData": {
          "$ref": "#/definitions/PlanData",
          "description": "The new Billing plan information."
        }
      }
    },
    "UserInfo": {
      "type": "object",
      "description": "User info.",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "First Name of the user"
        },
        "lastName": {
          "type": "string",
          "description": "Last Name of the user"
        },
        "emailAddress": {
          "type": "string",
          "description": "Email of the user used by Dynatrace for contacting them if needed",
          "pattern": "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Phone number of the user used by Dynatrace for contacting them if needed",
          "maxLength": 40
        },
        "country": {
          "type": "string",
          "description": "Country of the user"
        }
      }
    },
    "VMExtensionPayload": {
      "type": "object",
      "description": "Response of payload to be passed while installing VM agent.",
      "properties": {
        "ingestionKey": {
          "type": "string",
          "description": "Ingestion key of the environment"
        },
        "environmentId": {
          "type": "string",
          "description": "Id of the environment created"
        }
      }
    },
    "VMHostsListResponse": {
      "type": "object",
      "description": "Response of a list VM Host Operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The VMInfo items on this page",
          "items": {
            "$ref": "#/definitions/VMInfo"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "VMInfo": {
      "type": "object",
      "description": "Details of VM Resource having Dynatrace OneAgent installed",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "Azure VM resource ID"
        },
        "version": {
          "type": "string",
          "description": "Version of the Dynatrace agent installed on the VM."
        },
        "monitoringType": {
          "$ref": "#/definitions/MonitoringType",
          "description": "The monitoring mode of OneAgent"
        },
        "autoUpdateSetting": {
          "$ref": "#/definitions/AutoUpdateSetting",
          "description": "Update settings of OneAgent."
        },
        "updateStatus": {
          "$ref": "#/definitions/UpdateStatus",
          "description": "The current update status of OneAgent."
        },
        "availabilityState": {
          "$ref": "#/definitions/AvailabilityState",
          "description": "The availability state of OneAgent."
        },
        "logModule": {
          "$ref": "#/definitions/LogModule",
          "description": "Tells whether log modules are enabled or not"
        },
        "hostGroup": {
          "type": "string",
          "description": "The name of the host group"
        },
        "hostName": {
          "type": "string",
          "description": "The name of the host"
        }
      }
    }
  },
  "parameters": {}
}
