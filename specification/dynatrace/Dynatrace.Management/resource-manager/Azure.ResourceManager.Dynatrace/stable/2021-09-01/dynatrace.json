{
  "swagger": "2.0",
  "info": {
    "title": "Dynatrace.Observability",
    "version": "2021-09-01",
    "description": "// FIXME: (miissing-service-description) Add service description",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "DynatraceMonitors"
    },
    {
      "name": "DynatraceTagRules"
    },
    {
      "name": "DynatraceSingleSignOns"
    }
  ],
  "paths": {
    "/providers/Azure.ResourceManager.Dynatrace/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Azure.ResourceManager.Dynatrace/monitors": {
      "get": {
        "operationId": "DynatraceMonitors_ListBySubscriptionId",
        "tags": [
          "DynatraceMonitors"
        ],
        "description": "List all MonitorResource by subscriptionId",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DynatraceMonitorListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.Dynatrace/monitors": {
      "get": {
        "operationId": "DynatraceMonitors_ListByResourceGroup",
        "tags": [
          "DynatraceMonitors"
        ],
        "description": "List MonitorResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DynatraceMonitorListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.Dynatrace/monitors/{monitorName}": {
      "get": {
        "operationId": "DynatraceMonitors_Get",
        "tags": [
          "DynatraceMonitors"
        ],
        "description": "Get a MonitorResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DynatraceMonitor"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "DynatraceMonitors_CreateOrUpdate",
        "tags": [
          "DynatraceMonitors"
        ],
        "description": "Create a MonitorResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DynatraceMonitor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DynatraceMonitor' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DynatraceMonitor"
            }
          },
          "201": {
            "description": "Resource 'DynatraceMonitor' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DynatraceMonitor"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "DynatraceMonitors_Update",
        "tags": [
          "DynatraceMonitors"
        ],
        "description": "Update a MonitorResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DynatraceMonitorTagsUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DynatraceMonitor"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "DynatraceMonitors_Delete",
        "tags": [
          "DynatraceMonitors"
        ],
        "description": "Delete a MonitorResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.Dynatrace/monitors/{monitorName}/getAccountCredentials": {
      "post": {
        "operationId": "DynatraceMonitors_GetAccountCredentials",
        "tags": [
          "DynatraceMonitors"
        ],
        "description": "Gets the user account credentials for a Monitor",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AccountInfoSecure"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.Dynatrace/monitors/{monitorName}/getSSODetails": {
      "post": {
        "operationId": "DynatraceMonitors_GetSsoDetails",
        "tags": [
          "DynatraceMonitors"
        ],
        "description": "Gets the SSO configuration details from the partner.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SSODetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SSODetailsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.Dynatrace/monitors/{monitorName}/getVMHostPayload": {
      "post": {
        "operationId": "DynatraceMonitors_GetVmHostPayload",
        "tags": [
          "DynatraceMonitors"
        ],
        "description": "Returns the payload that needs to be passed in the request body for installing Dynatrace agent on a VM.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VMExtensionPayload"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.Dynatrace/monitors/{monitorName}/listAppServices": {
      "post": {
        "operationId": "DynatraceMonitors_ListAppServices",
        "tags": [
          "DynatraceMonitors"
        ],
        "description": "Gets list of App Services with Dynatrace PaaS OneAgent enabled",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PagedAppServiceInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.Dynatrace/monitors/{monitorName}/listHosts": {
      "post": {
        "operationId": "DynatraceMonitors_ListHosts",
        "tags": [
          "DynatraceMonitors"
        ],
        "description": "List the compute resources currently being monitored by the Dynatrace resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PagedVMInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.Dynatrace/monitors/{monitorName}/listLinkableEnvironments": {
      "post": {
        "operationId": "DynatraceMonitors_ListLinkableEnvironments",
        "tags": [
          "DynatraceMonitors"
        ],
        "description": "Gets all the Dynatrace environments that a user can link a azure resource to",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LinkableEnvironmentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PagedLinkableEnvironmentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.Dynatrace/monitors/{monitorName}/listMonitoredResources": {
      "post": {
        "operationId": "DynatraceMonitors_ListMonitoredResources",
        "tags": [
          "DynatraceMonitors"
        ],
        "description": "List the resources currently being monitored by the Dynatrace monitor resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PagedMonitoredResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.Dynatrace/monitors/{monitorName}/singleSignOnConfigurations": {
      "get": {
        "operationId": "DynatraceSingleSignOns_ListByDynatraceMonitor",
        "tags": [
          "DynatraceSingleSignOns"
        ],
        "description": "List all DynatraceSingleSignOnResource by monitorName",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DynatraceSingleSignOnListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.Dynatrace/monitors/{monitorName}/singleSignOnConfigurations/{configurationName}": {
      "get": {
        "operationId": "DynatraceSingleSignOns_Get",
        "tags": [
          "DynatraceSingleSignOns"
        ],
        "description": "Get a DynatraceSingleSignOnResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "Single Sign On Configuration Name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DynatraceSingleSignOn"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "DynatraceSingleSignOns_CreateOrUpdate",
        "tags": [
          "DynatraceSingleSignOns"
        ],
        "description": "Create a DynatraceSingleSignOnResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "Single Sign On Configuration Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DynatraceSingleSignOn"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DynatraceSingleSignOn' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DynatraceSingleSignOn"
            }
          },
          "201": {
            "description": "Resource 'DynatraceSingleSignOn' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DynatraceSingleSignOn"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.Dynatrace/monitors/{monitorName}/tagRules": {
      "get": {
        "operationId": "DynatraceTagRules_ListByDynatraceMonitor",
        "tags": [
          "DynatraceTagRules"
        ],
        "description": "List all TagRule by monitorName",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DynatraceTagRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.Dynatrace/monitors/{monitorName}/tagRules/{ruleSetName}": {
      "get": {
        "operationId": "DynatraceTagRules_Get",
        "tags": [
          "DynatraceTagRules"
        ],
        "description": "Get a TagRule",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleSetName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DynatraceTagRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "DynatraceTagRules_CreateOrUpdate",
        "tags": [
          "DynatraceTagRules"
        ],
        "description": "Create a TagRule",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleSetName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DynatraceTagRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DynatraceTagRule' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DynatraceTagRule"
            }
          },
          "201": {
            "description": "Resource 'DynatraceTagRule' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DynatraceTagRule"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "DynatraceTagRules_Update",
        "tags": [
          "DynatraceTagRules"
        ],
        "description": "Update a TagRule",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleSetName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagRuleUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DynatraceTagRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "DynatraceTagRules_Delete",
        "tags": [
          "DynatraceTagRules"
        ],
        "description": "Delete a TagRule",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleSetName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AccountInfo": {
      "type": "object",
      "description": "Dynatrace Account Information",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "Account Id of the account this environment is linked to"
        },
        "regionId": {
          "type": "string",
          "description": "Region in which the account is created"
        }
      }
    },
    "AccountInfoSecure": {
      "type": "object",
      "description": "Dynatrace account API Key",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "Account Id of the account this environment is linked to",
          "readOnly": true
        },
        "apiKey": {
          "type": "string",
          "format": "password",
          "description": "API Key of the user account",
          "readOnly": true,
          "x-ms-secret": true
        },
        "regionId": {
          "type": "string",
          "description": "Region in which the account is created",
          "readOnly": true
        }
      }
    },
    "ActionType": {
      "type": "string",
      "enum": [
        "Internal"
      ],
      "x-ms-enum": {
        "name": "ActionType",
        "modelAsString": true
      }
    },
    "AppServiceInfo": {
      "type": "object",
      "description": "Details of App Services having Dynatrace OneAgent installed",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "App service resource ID"
        },
        "version": {
          "type": "string",
          "description": "Version of the Dynatrace agent installed on the App Service."
        },
        "monitoringType": {
          "$ref": "#/definitions/MonitoringType",
          "description": "The monitoring mode of OneAgent"
        },
        "autoUpdateSetting": {
          "$ref": "#/definitions/AutoUpdateSetting",
          "description": "Update settings of OneAgent."
        },
        "updateStatus": {
          "$ref": "#/definitions/UpdateStatus",
          "description": "The current update status of OneAgent."
        },
        "availabilityState": {
          "$ref": "#/definitions/AvailabilityState",
          "description": "The availability state of OneAgent."
        },
        "logModule": {
          "$ref": "#/definitions/LogModule",
          "description": "Tells whether log modules are enabled or not"
        },
        "hostGroup": {
          "type": "string",
          "description": "The name of the host group"
        },
        "hostName": {
          "type": "string",
          "description": "The name of the host"
        }
      }
    },
    "AutoUpdateSetting": {
      "type": "string",
      "enum": [
        "ENABLED",
        "DISABLED"
      ],
      "x-ms-enum": {
        "name": "AutoUpdateSetting",
        "modelAsString": true
      }
    },
    "AvailabilityState": {
      "type": "string",
      "enum": [
        "CRASHED",
        "LOST",
        "MONITORED",
        "PRE_MONITORED",
        "SHUTDOWN",
        "UNEXPECTED_SHUTDOWN",
        "UNKNOWN",
        "UNMONITORED"
      ],
      "x-ms-enum": {
        "name": "AvailabilityState",
        "modelAsString": true
      }
    },
    "CreatedByType": {
      "type": "string",
      "enum": [
        "User",
        "Application",
        "ManagedIdentity",
        "Key"
      ],
      "x-ms-enum": {
        "name": "CreatedByType",
        "modelAsString": true
      }
    },
    "DynatraceEnvironmentProperties": {
      "type": "object",
      "description": "Properties of the Dynatrace environment.",
      "properties": {
        "userId": {
          "type": "string",
          "description": "User id"
        },
        "accountInfo": {
          "$ref": "#/definitions/AccountInfo",
          "description": "Dynatrace Account Information"
        },
        "environmentInfo": {
          "$ref": "#/definitions/EnvironmentInfo",
          "description": "Dynatrace Environment Information"
        },
        "singleSignOnProperties": {
          "$ref": "#/definitions/DynatraceSingleSignOnProperties",
          "description": "The details of a Dynatrace single sign-on."
        }
      }
    },
    "DynatraceMonitor": {
      "type": "object",
      "description": "Dynatrace Monitor Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MonitorProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DynatraceMonitorListResult": {
      "type": "object",
      "description": "The response of a DynatraceMonitor list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DynatraceMonitor items on this page",
          "items": {
            "$ref": "#/definitions/DynatraceMonitor"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DynatraceMonitorTagsUpdate": {
      "type": "object",
      "description": "The type used for updating tags in DynatraceMonitor resources.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "DynatraceSingleSignOn": {
      "type": "object",
      "description": "Single sign-on configurations for a given monitor resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DynatraceSingleSignOnProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DynatraceSingleSignOnListResult": {
      "type": "object",
      "description": "The response of a DynatraceSingleSignOn list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DynatraceSingleSignOn items on this page",
          "items": {
            "$ref": "#/definitions/DynatraceSingleSignOn"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DynatraceSingleSignOnProperties": {
      "type": "object",
      "description": "The details of a Dynatrace single sign-on.",
      "properties": {
        "singleSignOnState": {
          "$ref": "#/definitions/SingleSignOnStates",
          "description": "State of Single Sign On"
        },
        "enterpriseAppId": {
          "type": "string",
          "description": "Version of the Dynatrace agent installed on the VM."
        },
        "singleSignOnUrl": {
          "type": "string",
          "description": "The login URL specific to this Dynatrace Environment"
        },
        "aadDomains": {
          "type": "array",
          "description": "array of Aad(azure active directory) domains",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      }
    },
    "DynatraceTagRule": {
      "type": "object",
      "description": "Tag rules for a monitor resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MonitoringTagRulesProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DynatraceTagRuleListResult": {
      "type": "object",
      "description": "The response of a DynatraceTagRule list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DynatraceTagRule items on this page",
          "items": {
            "$ref": "#/definitions/DynatraceTagRule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EnvironmentInfo": {
      "type": "object",
      "description": "Dynatrace Environment Information",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "Id of the environment created"
        },
        "ingestionKey": {
          "type": "string",
          "description": "Ingestion key of the environment"
        },
        "logsIngestionEndpoint": {
          "type": "string",
          "description": "Ingestion endpoint used for sending logs"
        },
        "landingURL": {
          "type": "string",
          "description": "Landing URL for Dynatrace environment"
        }
      }
    },
    "FilteringTag": {
      "type": "object",
      "description": "The definition of a filtering tag. Filtering tags are used for capturing resources and include/exclude them from being monitored.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name (also known as the key) of the tag."
        },
        "value": {
          "type": "string",
          "description": "The value of the tag."
        },
        "action": {
          "$ref": "#/definitions/TagAction",
          "description": "Valid actions for a filtering tag. Exclusion takes priority over inclusion."
        }
      }
    },
    "IdentityProperties": {
      "type": "object",
      "description": "The properties of the managed service identities assigned to this resource.",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The Active Directory tenant id of the principal.",
          "readOnly": true
        },
        "principalId": {
          "type": "string",
          "description": "The active directory identifier of this principal.",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/ManagedIdentityType",
          "description": "The type of managed identity assigned to this resource."
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "The identities assigned to this resource by the user.",
          "additionalProperties": {
            "$ref": "#/definitions/UserAssignedIdentity"
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "LiftrResourceCategories": {
      "type": "string",
      "enum": [
        "Unknown",
        "MonitorLogs"
      ],
      "x-ms-enum": {
        "name": "LiftrResourceCategories",
        "modelAsString": true
      }
    },
    "LinkableEnvironmentRequest": {
      "type": "object",
      "description": "Request for getting all the linkable environments for a user",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Tenant Id of the user in which they want to link the environment"
        },
        "userPrincipal": {
          "type": "string",
          "description": "user principal id of the user"
        },
        "region": {
          "type": "string",
          "description": "Azure region in which we want to link the environment"
        }
      }
    },
    "LinkableEnvironmentResponse": {
      "type": "object",
      "description": "Response for getting all the linkable environments",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "environment id for which user is an admin"
        },
        "environmentName": {
          "type": "string",
          "description": "Name of the environment"
        },
        "planData": {
          "$ref": "#/definitions/PlanData",
          "description": "Billing plan information."
        }
      }
    },
    "LogModule": {
      "type": "string",
      "enum": [
        "ENABLED",
        "DISABLED"
      ],
      "x-ms-enum": {
        "name": "LogModule",
        "modelAsString": true
      }
    },
    "LogRules": {
      "type": "object",
      "description": "Set of rules for sending logs for the Monitor resource.",
      "properties": {
        "sendAadLogs": {
          "$ref": "#/definitions/SendAadLogsStatus",
          "description": "Flag specifying if AAD logs should be sent for the Monitor resource."
        },
        "sendSubscriptionLogs": {
          "$ref": "#/definitions/SendSubscriptionLogsStatus",
          "description": "Flag specifying if subscription logs should be sent for the Monitor resource."
        },
        "sendActivityLogs": {
          "$ref": "#/definitions/SendActivityLogsStatus",
          "description": "Flag specifying if activity logs from Azure resources should be sent for the Monitor resource."
        },
        "filteringTags": {
          "type": "array",
          "description": "List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty, all resources will be captured.\nIf only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags.",
          "items": {
            "$ref": "#/definitions/FilteringTag"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ManagedIdentityType": {
      "type": "string",
      "enum": [
        "SystemAssigned",
        "UserAssigned",
        "SystemAndUserAssigned"
      ],
      "x-ms-enum": {
        "name": "ManagedIdentityType",
        "modelAsString": true
      }
    },
    "MarketplaceSubscriptionStatus": {
      "type": "string",
      "enum": [
        "Active",
        "Suspended"
      ],
      "x-ms-enum": {
        "name": "MarketplaceSubscriptionStatus",
        "modelAsString": true
      }
    },
    "MetricRules": {
      "type": "object",
      "description": "Set of rules for sending metrics for the Monitor resource.",
      "properties": {
        "filteringTags": {
          "type": "array",
          "description": "List of filtering tags to be used for capturing metrics. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags.",
          "items": {
            "$ref": "#/definitions/FilteringTag"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "MonitorProperties": {
      "type": "object",
      "description": "Properties specific to the monitor resource.",
      "properties": {
        "monitoringStatus": {
          "$ref": "#/definitions/MonitoringStatus",
          "description": "Status of the monitor."
        },
        "marketplaceSubscriptionStatus": {
          "$ref": "#/definitions/MarketplaceSubscriptionStatus",
          "description": "Marketplace subscription status."
        },
        "dynatraceEnvironmentProperties": {
          "$ref": "#/definitions/DynatraceEnvironmentProperties",
          "description": "Properties of the Dynatrace environment."
        },
        "userInfo": {
          "$ref": "#/definitions/UserInfo",
          "description": "User info."
        },
        "planData": {
          "$ref": "#/definitions/PlanData",
          "description": "Billing plan information."
        },
        "liftrResourceCategory": {
          "$ref": "#/definitions/LiftrResourceCategories",
          "description": "Liftr Resource category.",
          "readOnly": true
        },
        "liftrResourcePreference": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the resource.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      }
    },
    "MonitoredResource": {
      "type": "object",
      "description": "Details of resource being monitored by Dynatrace monitor resource",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ARM id of the resource."
        },
        "sendingMetrics": {
          "$ref": "#/definitions/SendingMetricsStatus",
          "description": "Flag indicating if resource is sending metrics to Dynatrace."
        },
        "reasonForMetricsStatus": {
          "type": "string",
          "description": "Reason for why the resource is sending metrics (or why it is not sending)."
        },
        "sendingLogs": {
          "$ref": "#/definitions/SendingLogsStatus",
          "description": "Flag indicating if resource is sending logs to Dynatrace."
        },
        "reasonForLogsStatus": {
          "type": "string",
          "description": "Reason for why the resource is sending logs (or why it is not sending)."
        }
      }
    },
    "MonitoringStatus": {
      "type": "string",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "MonitoringStatus",
        "modelAsString": true
      }
    },
    "MonitoringTagRulesProperties": {
      "type": "object",
      "description": "Properties for the Tag rules resource of a Monitor account.",
      "properties": {
        "logRules": {
          "$ref": "#/definitions/LogRules",
          "description": "Set of rules for sending logs for the Monitor resource."
        },
        "metricRules": {
          "$ref": "#/definitions/MetricRules",
          "description": "Set of rules for sending metrics for the Monitor resource."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      }
    },
    "MonitoringType": {
      "type": "string",
      "enum": [
        "CLOUD_INFRASTRUCTURE",
        "FULL_STACK"
      ],
      "x-ms-enum": {
        "name": "MonitoringType",
        "modelAsString": true
      }
    },
    "Origin": {
      "type": "string",
      "enum": [
        "user",
        "system",
        "user,system"
      ],
      "x-ms-enum": {
        "name": "Origin",
        "modelAsString": true
      }
    },
    "PagedAppServiceInfo": {
      "type": "object",
      "description": "Response of a list App Services Operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AppServiceInfo items on this page",
          "items": {
            "$ref": "#/definitions/AppServiceInfo"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedLinkableEnvironmentResponse": {
      "type": "object",
      "description": "Response for getting all the linkable environments",
      "properties": {
        "value": {
          "type": "array",
          "description": "The LinkableEnvironmentResponse items on this page",
          "items": {
            "$ref": "#/definitions/LinkableEnvironmentResponse"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedMonitoredResource": {
      "type": "object",
      "description": "List of all the resources being monitored by Dynatrace monitor resource",
      "properties": {
        "value": {
          "type": "array",
          "description": "The MonitoredResource items on this page",
          "items": {
            "$ref": "#/definitions/MonitoredResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedVMInfo": {
      "type": "object",
      "description": "Response of a list VM Host Operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The VMInfo items on this page",
          "items": {
            "$ref": "#/definitions/VMInfo"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PlanData": {
      "type": "object",
      "description": "Billing plan information.",
      "properties": {
        "usageType": {
          "type": "string",
          "description": "different usage type like PAYG/COMMITTED. this could be enum"
        },
        "billingCycle": {
          "type": "string",
          "description": "different billing cycles like MONTHLY/WEEKLY. this could be enum"
        },
        "planDetails": {
          "type": "string",
          "description": "plan id as published by Dynatrace"
        },
        "effectiveDate": {
          "type": "string",
          "format": "date-time",
          "description": "date when plan was applied"
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "enum": [
        "Accepted",
        "Creating",
        "Updating",
        "Deleting",
        "Succeeded",
        "Failed",
        "Canceled",
        "Deleted",
        "NotSpecified"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "SSODetailsRequest": {
      "type": "object",
      "description": "Request for getting sso details for a user",
      "properties": {
        "userPrincipal": {
          "type": "string",
          "description": "user principal id of the user"
        }
      }
    },
    "SSODetailsResponse": {
      "type": "object",
      "description": "SSO details from the Dynatrace partner",
      "properties": {
        "isSsoEnabled": {
          "$ref": "#/definitions/SSOStatus",
          "description": "Whether the SSO is enabled for this resource or not."
        },
        "metadataUrl": {
          "type": "string",
          "description": "URL for Azure AD metadata"
        },
        "singleSignOnUrl": {
          "type": "string",
          "description": "The login URL specific to this Dynatrace Environment"
        },
        "aadDomains": {
          "type": "array",
          "description": "array of Aad(azure active directory) domains",
          "items": {
            "type": "string"
          }
        },
        "adminUsers": {
          "type": "array",
          "description": "Array of admin user emails.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SSOStatus": {
      "type": "string",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "SSOStatus",
        "modelAsString": true
      }
    },
    "SendAadLogsStatus": {
      "type": "string",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "SendAadLogsStatus",
        "modelAsString": true
      }
    },
    "SendActivityLogsStatus": {
      "type": "string",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "SendActivityLogsStatus",
        "modelAsString": true
      }
    },
    "SendSubscriptionLogsStatus": {
      "type": "string",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "SendSubscriptionLogsStatus",
        "modelAsString": true
      }
    },
    "SendingLogsStatus": {
      "type": "string",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "SendingLogsStatus",
        "modelAsString": true
      }
    },
    "SendingMetricsStatus": {
      "type": "string",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "SendingMetricsStatus",
        "modelAsString": true
      }
    },
    "SingleSignOnStates": {
      "type": "string",
      "enum": [
        "Initial",
        "Enable",
        "Disable",
        "Existing"
      ],
      "x-ms-enum": {
        "name": "SingleSignOnStates",
        "modelAsString": true
      }
    },
    "TagAction": {
      "type": "string",
      "enum": [
        "Include",
        "Exclude"
      ],
      "x-ms-enum": {
        "name": "TagAction",
        "modelAsString": true
      }
    },
    "TagRuleUpdate": {
      "type": "object",
      "description": "The updatable properties of the TagRule.",
      "properties": {
        "logRules": {
          "$ref": "#/definitions/LogRules",
          "description": "Set of rules for sending logs for the Monitor resource."
        },
        "metricRules": {
          "$ref": "#/definitions/MetricRules",
          "description": "Set of rules for sending metrics for the Monitor resource."
        }
      }
    },
    "UpdateStatus": {
      "type": "string",
      "enum": [
        "INCOMPATIBLE",
        "OUTDATED",
        "SCHEDULED",
        "SUPPRESSED",
        "UNKNOWN",
        "UP2DATE",
        "UPDATE_IN_PROGRESS",
        "UPDATE_PENDING",
        "UPDATE_PROBLEM"
      ],
      "x-ms-enum": {
        "name": "UpdateStatus",
        "modelAsString": true
      }
    },
    "UserAssignedIdentity": {
      "type": "object",
      "description": "A managed identity assigned by the user.",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The active directory client identifier for this principal."
        },
        "principalId": {
          "type": "string",
          "description": "The active directory identifier for this principal."
        }
      },
      "required": [
        "clientId",
        "principalId"
      ]
    },
    "UserInfo": {
      "type": "object",
      "description": "User info.",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "First Name of the user"
        },
        "lastName": {
          "type": "string",
          "description": "Last Name of the user"
        },
        "emailAddress": {
          "type": "string",
          "description": "Email of the user used by Dynatrace for contacting them if needed",
          "pattern": "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Phone number of the user used by Dynatrace for contacting them if needed",
          "maxLength": 40
        },
        "country": {
          "type": "string",
          "description": "Country of the user"
        }
      }
    },
    "VMExtensionPayload": {
      "type": "object",
      "description": "Response of payload to be passed while installing VM agent.",
      "properties": {
        "ingestionKey": {
          "type": "string",
          "description": "Ingestion key of the environment"
        },
        "environmentId": {
          "type": "string",
          "description": "Id of the environment created"
        }
      }
    },
    "VMInfo": {
      "type": "object",
      "description": "Details of VM Resource having Dynatrace OneAgent installed",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "Azure VM resource ID"
        },
        "version": {
          "type": "string",
          "description": "Version of the Dynatrace agent installed on the VM."
        },
        "monitoringType": {
          "$ref": "#/definitions/MonitoringType",
          "description": "The monitoring mode of OneAgent"
        },
        "autoUpdateSetting": {
          "$ref": "#/definitions/AutoUpdateSetting",
          "description": "Update settings of OneAgent."
        },
        "updateStatus": {
          "$ref": "#/definitions/UpdateStatus",
          "description": "The current update status of OneAgent."
        },
        "availabilityState": {
          "$ref": "#/definitions/AvailabilityState",
          "description": "The availability state of OneAgent."
        },
        "logModule": {
          "$ref": "#/definitions/LogModule",
          "description": "Tells whether log modules are enabled or not"
        },
        "hostGroup": {
          "type": "string",
          "description": "The name of the host group"
        },
        "hostName": {
          "type": "string",
          "description": "The name of the host"
        }
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2021-09-01"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2021_09_01",
            "value": "2021-09-01"
          }
        ]
      }
    }
  },
  "parameters": {}
}
