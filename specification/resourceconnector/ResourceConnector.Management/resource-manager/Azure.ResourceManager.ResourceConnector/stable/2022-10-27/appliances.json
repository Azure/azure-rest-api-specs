{
  "swagger": "2.0",
  "info": {
    "title": "appliances",
    "version": "2022-10-27",
    "description": "The appliances Rest API spec.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "ResourceConnectorAppliances"
    }
  ],
  "paths": {
    "/providers/Azure.ResourceManager.ResourceConnector/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Azure.ResourceManager.ResourceConnector/appliances": {
      "get": {
        "operationId": "ResourceConnectorAppliances_ListBySubscription",
        "tags": [
          "ResourceConnectorAppliances"
        ],
        "description": "Gets a list of Appliances in the specified subscription. The operation returns properties of each Appliance",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceConnectorApplianceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.ResourceConnector/appliances": {
      "get": {
        "operationId": "ResourceConnectorAppliances_ListByResourceGroup",
        "tags": [
          "ResourceConnectorAppliances"
        ],
        "description": "Gets a list of Appliances in the specified subscription and resource group. The operation returns properties of each Appliance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceConnectorApplianceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.ResourceConnector/appliances/{resourceName}": {
      "get": {
        "operationId": "ResourceConnectorAppliances_Get",
        "tags": [
          "ResourceConnectorAppliances"
        ],
        "description": "Gets the details of an Appliance with a specified resource group and name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Appliances name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceConnectorAppliance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "ResourceConnectorAppliances_CreateOrUpdate",
        "tags": [
          "ResourceConnectorAppliances"
        ],
        "description": "Creates or updates an Appliance in the specified Subscription and Resource Group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Appliances name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceConnectorAppliance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ResourceConnectorAppliance' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ResourceConnectorAppliance"
            }
          },
          "201": {
            "description": "Resource 'ResourceConnectorAppliance' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ResourceConnectorAppliance"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ResourceConnectorAppliances_Update",
        "tags": [
          "ResourceConnectorAppliances"
        ],
        "description": "Updates an Appliance with the specified Resource Name in the specified Resource Group and Subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Appliances name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceConnectorApplianceTagsUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceConnectorAppliance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "ResourceConnectorAppliances_Delete",
        "tags": [
          "ResourceConnectorAppliances"
        ],
        "description": "Deletes an Appliance with the specified Resource Name, Resource Group, and Subscription Id.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Appliances name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.ResourceConnector/appliances/{resourceName}/listClusterUserCredential": {
      "post": {
        "operationId": "ResourceConnectorAppliances_ListClusterUserCredential",
        "tags": [
          "ResourceConnectorAppliances"
        ],
        "description": "Returns the cluster user credentials for the dedicated appliance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Appliances name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplianceListCredentialResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.ResourceConnector/appliances/{resourceName}/listKeys": {
      "post": {
        "operationId": "ResourceConnectorAppliances_ListKeys",
        "tags": [
          "ResourceConnectorAppliances"
        ],
        "description": "Returns the cluster customer credentials for the dedicated appliance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "artifactType",
            "in": "query",
            "description": "This sets the type of artifact being returned, when empty no artifact endpoint is returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Appliances name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplianceListKeysResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ResourceConnector/appliances/{resourceName}/upgradeGraphs/{upgradeGraph}/{subscriptionId}/{resourceGroupName}/{resourceName}/{upgradeGraph}": {
      "get": {
        "operationId": "ResourceConnectorAppliances_GetUpgradeGraph",
        "tags": [
          "ResourceConnectorAppliances"
        ],
        "summary": "Gets an Appliance upgrade graph.",
        "description": "Gets the upgrade graph of an Appliance with a specified resource group and name and specific release train.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Appliances name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$"
          },
          {
            "name": "upgradeGraph",
            "in": "path",
            "description": "Upgrade graph version, ex - stable",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/UpgradeGraph"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccessProfileType": {
      "type": "string",
      "enum": [
        "clusterUser",
        "clusterCustomerUser"
      ],
      "x-ms-enum": {
        "name": "AccessProfileType",
        "modelAsString": true
      }
    },
    "ApplianceCredentialKubeconfig": {
      "type": "object",
      "description": "Cluster User Credential appliance.",
      "properties": {
        "name": {
          "$ref": "#/definitions/AccessProfileType",
          "description": "Name which contains the role of the kubeconfig.",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "description": "Contains the kubeconfig value.",
          "readOnly": true
        }
      }
    },
    "ApplianceGetTelemetryConfigResult": {
      "type": "object",
      "description": "The Get Telemetry Config Result appliance.",
      "properties": {
        "telemetryInstrumentationKey": {
          "type": "string",
          "description": "Telemetry instrumentation key.",
          "readOnly": true
        }
      }
    },
    "ApplianceListCredentialResults": {
      "type": "object",
      "description": "The List Cluster User Credential appliance.",
      "properties": {
        "hybridConnectionConfig": {
          "$ref": "#/definitions/HybridConnectionConfig",
          "description": "Contains the REP (rendezvous endpoint) and “Listener” access token from notification service (NS).",
          "readOnly": true
        },
        "kubeconfigs": {
          "type": "array",
          "description": "The list of appliance kubeconfigs.",
          "items": {
            "$ref": "#/definitions/ApplianceCredentialKubeconfig"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ApplianceListKeysResults": {
      "type": "object",
      "description": "The List Cluster Keys Results appliance.",
      "properties": {
        "artifactProfiles": {
          "type": "object",
          "description": "Map of artifacts that contains a list of ArtifactProfile used to upload artifacts such as logs.",
          "additionalProperties": {
            "$ref": "#/definitions/ArtifactProfile"
          },
          "readOnly": true
        },
        "kubeconfigs": {
          "type": "array",
          "description": "The list of appliance kubeconfigs.",
          "items": {
            "$ref": "#/definitions/ApplianceCredentialKubeconfig"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "sshKeys": {
          "type": "object",
          "description": "Map of Customer User Public, Private SSH Keys and Certificate when available.",
          "additionalProperties": {
            "$ref": "#/definitions/SSHKey"
          },
          "readOnly": true
        }
      }
    },
    "ApplianceOperation": {
      "type": "object",
      "description": "Appliances operation.",
      "properties": {
        "display": {
          "$ref": "#/definitions/ApplianceOperationValueDisplay",
          "description": "Describes the properties of an Appliances Operation Value Display."
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Is this Operation a data plane operation",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the compute operation.",
          "readOnly": true
        },
        "origin": {
          "type": "string",
          "description": "The origin of the compute operation.",
          "readOnly": true
        }
      }
    },
    "ApplianceOperationValueDisplay": {
      "type": "object",
      "description": "Describes the properties of an Appliances Operation Value Display.",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the operation.",
          "readOnly": true
        },
        "operation": {
          "type": "string",
          "description": "The display name of the compute operation.",
          "readOnly": true
        },
        "provider": {
          "type": "string",
          "description": "The resource provider for the operation.",
          "readOnly": true
        },
        "resource": {
          "type": "string",
          "description": "The display name of the resource the operation applies to.",
          "readOnly": true
        }
      }
    },
    "ApplianceOperationsList": {
      "type": "object",
      "description": "Lists of Appliances operations.",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "Next page of operations."
        },
        "value": {
          "type": "array",
          "description": "Array of applianceOperation",
          "items": {
            "$ref": "#/definitions/ApplianceOperation"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "value"
      ]
    },
    "ApplianceProperties": {
      "type": "object",
      "description": "Properties for an appliance.",
      "properties": {
        "distro": {
          "$ref": "#/definitions/Distro",
          "description": "Represents a supported Fabric/Infra. (AKSEdge etc...)."
        },
        "infrastructureConfig": {
          "$ref": "#/definitions/AppliancePropertiesInfrastructureConfig",
          "description": "Contains infrastructure information about the Appliance"
        },
        "provisioningState": {
          "type": "string",
          "description": "The current deployment or provisioning state, which only appears in the response.",
          "readOnly": true
        },
        "publicKey": {
          "type": "string",
          "description": "Certificates pair used to download MSI certificate from HIS. Can only be set once."
        },
        "status": {
          "$ref": "#/definitions/Status",
          "description": "Appliance’s health and state of connection to on-prem",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Version of the Appliance"
        }
      }
    },
    "AppliancePropertiesInfrastructureConfig": {
      "type": "object",
      "description": "Contains infrastructure information about the Appliance",
      "properties": {
        "provider": {
          "$ref": "#/definitions/Provider",
          "description": "Information about the connected appliance."
        }
      }
    },
    "ArtifactProfile": {
      "type": "object",
      "description": "Appliance ArtifactProfile definition.",
      "properties": {
        "endpoint": {
          "type": "string",
          "description": "Endpoint is the URL to upload artifacts to.",
          "readOnly": true
        }
      }
    },
    "ArtifactType": {
      "type": "string",
      "enum": [
        "LogsArtifactType"
      ],
      "x-ms-enum": {
        "name": "ArtifactType",
        "modelAsString": true
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "CreatedByType": {
      "type": "string",
      "enum": [
        "User",
        "Application",
        "ManagedIdentity",
        "Key"
      ],
      "x-ms-enum": {
        "name": "CreatedByType",
        "modelAsString": true
      }
    },
    "Distro": {
      "type": "string",
      "enum": [
        "AKSEdge"
      ],
      "x-ms-enum": {
        "name": "Distro",
        "modelAsString": true
      }
    },
    "HybridConnectionConfig": {
      "type": "object",
      "description": "Contains the REP (rendezvous endpoint) and “Listener” access token from notification service (NS).",
      "properties": {
        "expirationTime": {
          "type": "integer",
          "format": "int32",
          "description": "Timestamp when this token will be expired.",
          "readOnly": true
        },
        "hybridConnectionName": {
          "type": "string",
          "description": "Name of the connection",
          "readOnly": true
        },
        "relay": {
          "type": "string",
          "description": "Name of the notification service.",
          "readOnly": true
        },
        "token": {
          "type": "string",
          "description": "Listener access token",
          "readOnly": true
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal ID of resource identity.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of resource.",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/ResourceIdentityType",
          "description": "The identity type."
        }
      }
    },
    "Provider": {
      "type": "string",
      "enum": [
        "VMWare",
        "HCI",
        "SCVMM"
      ],
      "x-ms-enum": {
        "name": "Provider",
        "modelAsString": true
      }
    },
    "ResourceConnectorAppliance": {
      "type": "object",
      "description": "Appliances definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApplianceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ResourceConnectorApplianceListResult": {
      "type": "object",
      "description": "The response of a ResourceConnectorAppliance list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ResourceConnectorAppliance items on this page",
          "items": {
            "$ref": "#/definitions/ResourceConnectorAppliance"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ResourceConnectorApplianceTagsUpdate": {
      "type": "object",
      "description": "The type used for updating tags in ResourceConnectorAppliance resources.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ResourceIdentityType": {
      "type": "string",
      "enum": [
        "SystemAssigned",
        "None"
      ],
      "x-ms-enum": {
        "name": "ResourceIdentityType",
        "modelAsString": true
      }
    },
    "SSHKey": {
      "type": "object",
      "description": "Appliance SSHKey definition.",
      "properties": {
        "certificate": {
          "type": "string",
          "description": "Certificate associated with the public key if the key is signed.",
          "readOnly": true
        },
        "creationTimeStamp": {
          "type": "integer",
          "format": "int32",
          "description": "Certificate creation timestamp (Unix).",
          "readOnly": true
        },
        "expirationTimeStamp": {
          "type": "integer",
          "format": "int32",
          "description": "Certificate expiration timestamp (Unix).",
          "readOnly": true
        },
        "privateKey": {
          "type": "string",
          "description": "Private Key.",
          "readOnly": true
        },
        "publicKey": {
          "type": "string",
          "description": "Public Key.",
          "readOnly": true
        }
      }
    },
    "SSHKeyType": {
      "type": "string",
      "enum": [
        "SSHCustomerUser",
        "ManagementCAKey",
        "LogsKey",
        "ScopedAccessKey"
      ],
      "x-ms-enum": {
        "name": "SSHKeyType",
        "modelAsString": true
      }
    },
    "Status": {
      "type": "string",
      "enum": [
        "WaitingForHeartbeat",
        "Validating",
        "Connecting",
        "Connected",
        "Running",
        "PreparingForUpgrade",
        "ETCDSnapshotFailed",
        "UpgradePrerequisitesCompleted",
        "ValidatingSFSConnectivity",
        "ValidatingImageDownload",
        "ValidatingImageUpload",
        "ValidatingETCDHealth",
        "PreUpgrade",
        "UpgradingKVAIO",
        "WaitingForKVAIO",
        "ImagePending",
        "ImageProvisioning",
        "ImageProvisioned",
        "ImageDownloading",
        "ImageDownloaded",
        "ImageDeprovisioning",
        "ImageUnknown",
        "UpdatingCloudOperator",
        "WaitingForCloudOperator",
        "UpdatingCAPI",
        "UpdatingCluster",
        "PostUpgrade",
        "UpgradeComplete",
        "UpgradeClusterExtensionFailedToDelete",
        "UpgradeFailed",
        "Offline",
        "None"
      ],
      "x-ms-enum": {
        "name": "Status",
        "modelAsString": true
      }
    },
    "SupportedVersion": {
      "type": "object",
      "description": "The SupportedVersion object for appliance.",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/SupportedVersionMetadata",
          "description": "This is the metadata of the supported newer version.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "The newer version available for upgrade.",
          "readOnly": true
        }
      }
    },
    "SupportedVersionCatalogVersion": {
      "type": "object",
      "description": "The SupportedVersionCatalogVersion object for appliance.",
      "properties": {
        "data": {
          "$ref": "#/definitions/SupportedVersionCatalogVersionData",
          "description": "The newer supported version catalog version data.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The catalog version name for the version available for upgrade.",
          "readOnly": true
        },
        "namespace": {
          "type": "string",
          "description": "The catalog version namespace for the version available for upgrade.",
          "readOnly": true
        }
      }
    },
    "SupportedVersionCatalogVersionData": {
      "type": "object",
      "description": "The SupportedVersionCatalogVersionData object for appliance.",
      "properties": {
        "audience": {
          "type": "string",
          "description": "The image audience name for the version available for upgrade.",
          "readOnly": true
        },
        "catalog": {
          "type": "string",
          "description": "The image catalog name for the version available for upgrade.",
          "readOnly": true
        },
        "offer": {
          "type": "string",
          "description": "The image offer name for the version available for upgrade.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "The image version for the version available for upgrade.",
          "readOnly": true
        }
      }
    },
    "SupportedVersionMetadata": {
      "type": "object",
      "description": "The SupportedVersionMetadata object for appliance.",
      "properties": {
        "catalogVersion": {
          "$ref": "#/definitions/SupportedVersionCatalogVersion",
          "description": "The newer supported version catalog version.",
          "readOnly": true
        }
      }
    },
    "UpgradeGraph": {
      "type": "object",
      "description": "The Upgrade Graph for appliance.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The appliance resource path",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The release train name.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/UpgradeGraphProperties",
          "description": "The properties of supported version"
        }
      }
    },
    "UpgradeGraphProperties": {
      "type": "object",
      "description": "The Upgrade Graph Properties for appliance.",
      "properties": {
        "applianceVersion": {
          "type": "string",
          "description": "The current appliance version",
          "readOnly": true
        },
        "supportedVersions": {
          "type": "array",
          "description": "This contains the current version and supported upgrade versions.",
          "items": {
            "$ref": "#/definitions/SupportedVersion"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2022-10-27"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2022_10_27",
            "value": "2022-10-27"
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
