{
  "swagger": "2.0",
  "info": {
    "title": "SeaBreezeManagementClient",
    "description": "APIs to deploy and manage resources to SeaBreeze.",
    "version": "2018-07-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "type": "oauth2"
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationName}": {
      "put": {
        "operationId": "Application_Create",
        "x-ms-examples": {
          "ApplicationCreateOrUpdate": {
            "$ref": "./examples/ApplicationCreateOrUpdate.json"
          }
        },
        "summary": "Creates or updates an application resource.",
        "description": "Creates an application resource with the specified name and description. If an application with the same name already exists, then its description is updated to the one indicated in this request.\n\nUse network resources to provide public connectivity to the services of an application.\n",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/parameters/ApplicationNameRequiredPathParam"
          },
          {
            "$ref": "#/parameters/ApplicationResourceDescriptionRequiredBodyParam"
          }
        ],
        "tags": [
          "Applications"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ApplicationResourceDescription"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApplicationResourceDescription"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "get": {
        "operationId": "Application_Get",
        "x-ms-examples": {
          "ApplicationGet": {
            "$ref": "./examples/ApplicationGet.json"
          }
        },
        "summary": "Gets the application resource.",
        "description": "Gets the information about the application resource with a given name. The information includes the information about the application's services and other runtime properties.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/parameters/ApplicationNameRequiredPathParam"
          }
        ],
        "tags": [
          "Applications"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApplicationResourceDescription"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "delete": {
        "operationId": "Application_Delete",
        "x-ms-examples": {
          "ApplicationDelete": {
            "$ref": "./examples/ApplicationDelete.json"
          }
        },
        "summary": "Deletes the application resource.",
        "description": "Deletes the application resource identified by the name.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/parameters/ApplicationNameRequiredPathParam"
          }
        ],
        "tags": [
          "Applications"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content - the specified application was not found."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationName}/services": {
      "get": {
        "operationId": "Service_ListByApplicationName",
        "x-ms-examples": {
          "ServiceGetAll": {
            "$ref": "./examples/ServiceList.json"
          }
        },
        "summary": "Gets services of a given application.",
        "description": "Gets the information about all services of a given service of an application. The information includes the runtime properties of the service instance.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/parameters/ApplicationNameRequiredPathParam"
          }
        ],
        "tags": [
          "Services"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceList"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationName}/services/{serviceName}": {
      "get": {
        "operationId": "Service_Get",
        "x-ms-examples": {
          "ServiceGet": {
            "$ref": "./examples/ServiceGet.json"
          }
        },
        "summary": "Gets the properties of the service.",
        "description": "The operation returns the properties of the service.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/parameters/ApplicationNameRequiredPathParam"
          },
          {
            "$ref": "#/parameters/ServiceNameRequiredPathParam"
          }
        ],
        "tags": [
          "Services"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceResourceDescription"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationName}/services/{serviceName}/replicas": {
      "get": {
        "operationId": "Replica_ListByServiceName",
        "x-ms-examples": {
          "ReplicasGetAll": {
            "$ref": "./examples/ReplicasGetAll.json"
          }
        },
        "summary": "Gets replicas of a given service.",
        "description": "Gets the information about all replicas of a given service of an application. The information includes the runtime properties of the replica instance.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/parameters/ApplicationNameRequiredPathParam"
          },
          {
            "$ref": "#/parameters/ServiceNameRequiredPathParam"
          }
        ],
        "tags": [
          "Replicas"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceReplicaList"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationName}/services/{serviceName}/replicas/{replicaName}": {
      "get": {
        "operationId": "Replica_Get",
        "x-ms-examples": {
          "ReplicaGet": {
            "$ref": "./examples/ReplicaGet.json"
          }
        },
        "summary": "Gets a specific replica of a given service.",
        "description": "Gets the information about the specified replica of a given service of an application. The information includes the runtime properties of the replica instance.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/parameters/ApplicationNameRequiredPathParam"
          },
          {
            "$ref": "#/parameters/ServiceNameRequiredPathParam"
          },
          {
            "$ref": "#/parameters/ReplicaNameRequiredPathParam"
          }
        ],
        "tags": [
          "Replicas"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceReplicaDescription"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications": {
      "get": {
        "operationId": "Application_ListByResourceGroup",
        "x-ms-examples": {
          "ApplicationList": {
            "$ref": "./examples/ApplicationsByResourceGroup.json"
          }
        },
        "summary": "Gets all the application resources in a given resource group.",
        "description": "Gets the information about all application resources in a given resource group. The information includes the information about the application's services and other runtime properties.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameRequiredPathParam"
          }
        ],
        "tags": [
          "Applications"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApplicationResourceDescriptionList"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/applications": {
      "get": {
        "operationId": "Application_ListBySubscription",
        "x-ms-examples": {
          "ApplicationList": {
            "$ref": "./examples/ApplicationsBySubscriptionId.json"
          }
        },
        "summary": "Gets all the application resources in a given subscription.",
        "description": "Gets the information about all application resources in a given subscription. The information includes the information about the application's services and other runtime properties.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/parameters/api-versionRequiredQueryParam"
          }
        ],
        "tags": [
          "Applications"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApplicationResourceDescriptionList"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationName}/services/{serviceName}/replicas/{replicaName}/codePackages/{codePackageName}/logs": {
      "get": {
        "operationId": "CodePackage_GetContainerLog",
        "x-ms-examples": {
          "ContainerLogsList": {
            "$ref": "./examples/ContainerLogsList.json"
          }
        },
        "summary": "Gets the logs for the container.",
        "description": "Get the logs for the container of a given code package of an application.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/parameters/ApplicationNameRequiredPathParam"
          },
          {
            "$ref": "#/parameters/ServiceNameRequiredPathParam"
          },
          {
            "$ref": "#/parameters/ReplicaNameRequiredPathParam"
          },
          {
            "$ref": "#/parameters/CodePackageNameRequiredPathParam"
          },
          {
            "$ref": "#/parameters/TailOptionalQueryParam"
          }
        ],
        "tags": [
          "ContainerLogs"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ContainerLogs"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/providers/Microsoft.ServiceFabricMesh/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "Lists all of the available operations.",
        "description": "Lists all the available operations provided by Service Fabric SeaBreeze resource provider.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "#/parameters/api-versionRequiredQueryParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/networks/{networkName}": {
      "put": {
        "operationId": "Network_Create",
        "x-ms-examples": {
          "Network_Create": {
            "$ref": "./examples/NetworkCreateOrUpdate.json"
          }
        },
        "summary": "Creates or updates a network resource.",
        "description": "Creates a network resource with the specified name and description. If a network with the same name already exists, then its description is updated to the one indicated in this request.\n\nUse network resources to create private network and configure public connectivity for services within your application. \n",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/parameters/NetworkNameRequiredPathParam"
          },
          {
            "$ref": "#/parameters/NetworkResourceDescriptionRequiredBodyParam"
          }
        ],
        "tags": [
          "Networks"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/NetworkResourceDescription"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NetworkResourceDescription"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "get": {
        "operationId": "Network_Get",
        "x-ms-examples": {
          "NetworkGet": {
            "$ref": "./examples/NetworkGet.json"
          }
        },
        "summary": "Gets the network resource.",
        "description": "Gets the information about the network resource with a given name. This information includes the network description and other runtime information.\n",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/parameters/NetworkNameRequiredPathParam"
          }
        ],
        "tags": [
          "Networks"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NetworkResourceDescription"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "delete": {
        "operationId": "Network_Delete",
        "x-ms-examples": {
          "NetworkDelete": {
            "$ref": "./examples/NetworkDelete.json"
          }
        },
        "summary": "Deletes the network resource.",
        "description": "Deletes the network resource identified by the name.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/parameters/NetworkNameRequiredPathParam"
          }
        ],
        "tags": [
          "Networks"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content - the specified network was not found."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/networks": {
      "get": {
        "operationId": "Network_ListByResourceGroup",
        "x-ms-examples": {
          "NetworksList": {
            "$ref": "./examples/NetworksByResourceGroup.json"
          }
        },
        "summary": "Gets all the network resources in a given resource group.",
        "description": "Gets the information about all network resources in a given resource group. The information includes the network description and other runtime properties.\n",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameRequiredPathParam"
          }
        ],
        "tags": [
          "Networks"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NetworkResourceDescriptionList"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/networks": {
      "get": {
        "operationId": "Network_ListBySubscription",
        "x-ms-examples": {
          "NetworksList": {
            "$ref": "./examples/NetworksBySubscriptionId.json"
          }
        },
        "summary": "Gets all the network resources in a given subscription.",
        "description": "Gets the information about all network resources in a given subscription. The information includes the network description and other runtime properties.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/parameters/api-versionRequiredQueryParam"
          }
        ],
        "tags": [
          "Networks"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NetworkResourceDescriptionList"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/volumes/{volumeName}": {
      "put": {
        "operationId": "Volume_Create",
        "x-ms-examples": {
          "VolumeCreate": {
            "$ref": "./examples/VolumeCreate.json"
          }
        },
        "summary": "Creates or updates a volume resource.",
        "description": "Creates a volume resource with the specified name and description. If a volume with the same name already exists, then its description is updated to the one indicated in this request.\n",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/parameters/VolumeNameRequiredPathParam"
          },
          {
            "$ref": "#/parameters/VolumeResourceDescriptionRequiredBodyParam"
          }
        ],
        "tags": [
          "Volumes"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/VolumeResourceDescription"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/VolumeResourceDescription"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "get": {
        "operationId": "Volume_Get",
        "x-ms-examples": {
          "VolumeGet": {
            "$ref": "./examples/VolumeGet.json"
          }
        },
        "summary": "Gets the volume resource.",
        "description": "Gets the information about the volume resource with a given name. This information includes the volume description and other runtime information.\n",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/parameters/VolumeNameRequiredPathParam"
          }
        ],
        "tags": [
          "Volumes"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VolumeResourceDescription"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "delete": {
        "operationId": "Volume_Delete",
        "x-ms-examples": {
          "VolumeDelete": {
            "$ref": "./examples/VolumeDelete.json"
          }
        },
        "summary": "Deletes the volume resource.",
        "description": "Deletes the volume identified by the name.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/parameters/VolumeNameRequiredPathParam"
          }
        ],
        "tags": [
          "Volumes"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content - the specified volume was not found."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/volumes": {
      "get": {
        "operationId": "Volume_ListByResourceGroup",
        "x-ms-examples": {
          "VolumesList": {
            "$ref": "./examples/VolumesByResourceGroup.json"
          }
        },
        "summary": "Gets all the volume resources in a given resource group.",
        "description": "Gets the information about all volume resources in a given resource group. The information includes the volume description and other runtime information.\n",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameRequiredPathParam"
          }
        ],
        "tags": [
          "Volumes"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VolumeResourceDescriptionList"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/volumes": {
      "get": {
        "operationId": "Volume_ListBySubscription",
        "x-ms-examples": {
          "VolumesList": {
            "$ref": "./examples/VolumesBySubscriptionId.json"
          }
        },
        "summary": "Gets all the volume resources in a given subscription.",
        "description": "Gets the information about all volume resources in a given subscription. The information includes the volume description and other runtime information.\n",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/parameters/api-versionRequiredQueryParam"
          }
        ],
        "tags": [
          "Volumes"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VolumeResourceDescriptionList"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "Resource": {
      "description": "The resource model definition for Azure Resource Manager resource.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified identifier for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "x-ms-mutability": [
            "read"
          ]
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource",
          "x-ms-mutability": [
            "read"
          ]
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.",
          "x-ms-mutability": [
            "read"
          ]
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        }
      },
      "x-ms-azure-resource": true
    },
    "ProxyResource": {
      "description": "The resource model definition for Azure Resource Manager proxy resource. It will have everything other than required location and tags.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ManagedProxyResource": {
      "description": "The resource model definition for Azure Resource Manager proxy resource. It will have everything other than required location and tags. This proxy resource is explicitly created or updated by including it in the parent resource.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified identifier for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "x-ms-mutability": [
            "read"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.",
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-azure-resource": true
    },
    "TrackedResource": {
      "description": "The resource model definition for Azure Resource Manager tracked top-level resource.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        }
      },
      "required": [
        "location"
      ]
    },
    "ProvisionedResourceProperties": {
      "description": "Describes common properties of a provisioned resource.",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "State of the resource.",
          "readOnly": true
        }
      }
    },
    "NetworkResourceDescriptionList": {
      "description": "A pageable list of network resources.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkResourceDescription"
          },
          "description": "One page of the list."
        },
        "nextLink": {
          "type": "string",
          "description": "URI to fetch the next page of the list."
        }
      }
    },
    "NetworkResourceDescription": {
      "description": "This type describes a network resource.",
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkResourceProperties",
          "description": "Describes properties of a network resource."
        }
      },
      "required": [
        "properties"
      ]
    },
    "NetworkResourceProperties": {
      "description": "Describes properties of a network resource.",
      "allOf": [
        {
          "$ref": "#/definitions/ProvisionedResourceProperties"
        },
        {
          "$ref": "#/definitions/NetworkProperties"
        }
      ]
    },
    "NetworkProperties": {
      "description": "Describes a network.",
      "type": "object",
      "properties": {
        "description": {
          "description": "User readable description of the network.",
          "type": "string"
        },
        "addressPrefix": {
          "description": "the address prefix for this network.",
          "type": "string"
        },
        "ingressConfig": {
          "$ref": "#/definitions/IngressConfig",
          "description": "Configuration for public connectivity for this network."
        }
      },
      "required": [
        "addressPrefix"
      ]
    },
    "VolumeResourceDescriptionList": {
      "description": "A pageable list of volume resources.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeResourceDescription"
          },
          "description": "One page of the list."
        },
        "nextLink": {
          "type": "string",
          "description": "URI to fetch the next page of the list."
        }
      }
    },
    "VolumeResourceDescription": {
      "description": "This type describes a volume resource.",
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VolumeResourceProperties",
          "description": "Describes properties of a volume resource."
        }
      },
      "required": [
        "properties"
      ]
    },
    "VolumeResourceProperties": {
      "description": "Describes properties of a volume resource.",
      "allOf": [
        {
          "$ref": "#/definitions/ProvisionedResourceProperties"
        },
        {
          "$ref": "#/definitions/VolumeProperties"
        }
      ]
    },
    "VolumeProperties": {
      "description": "This type describes properties of a volume resource.",
      "type": "object",
      "properties": {
        "description": {
          "description": "User readable description of the volume.",
          "type": "string"
        },
        "provider": {
          "description": "Provider of the volume.",
          "type": "string",
          "enum": [
            "SFAzureFile"
          ],
          "x-ms-enum": {
            "name": "VolumeProvider",
            "modelAsString": true
          }
        },
        "azureFileParameters": {
          "$ref": "#/definitions/VolumeProviderParametersAzureFile",
          "description": "This type describes a volume provided by an Azure Files file share."
        }
      },
      "required": [
        "provider"
      ]
    },
    "VolumeProviderParametersAzureFile": {
      "description": "This type describes a volume provided by an Azure Files file share.",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Name of the Azure storage account for the File Share.",
          "type": "string"
        },
        "accountKey": {
          "description": "Access key of the Azure storage account for the File Share.",
          "type": "string"
        },
        "shareName": {
          "description": "Name of the Azure Files file share that provides storage for the volume.",
          "type": "string"
        }
      },
      "required": [
        "accountName",
        "shareName"
      ]
    },
    "ApplicationResourceDescriptionList": {
      "description": "A pageable list of application resources.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationResourceDescription"
          },
          "description": "One page of the list."
        },
        "nextLink": {
          "type": "string",
          "description": "URI to fetch the next page of the list."
        }
      }
    },
    "ApplicationResourceDescription": {
      "description": "This type describes an application resource.",
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationResourceProperties",
          "description": "This type describes properties of an application resource."
        }
      },
      "required": [
        "properties"
      ]
    },
    "ApplicationResourceProperties": {
      "description": "This type describes properties of an application resource.",
      "allOf": [
        {
          "$ref": "#/definitions/ProvisionedResourceProperties"
        },
        {
          "$ref": "#/definitions/ApplicationProperties"
        }
      ]
    },
    "ApplicationProperties": {
      "description": "This type describes properties of an application resource.",
      "type": "object",
      "properties": {
        "description": {
          "description": "User readable description of the application.",
          "type": "string"
        },
        "debugParams": {
          "description": "Internal use.",
          "type": "string"
        },
        "services": {
          "type": "array",
          "description": "describes the services in the application.",
          "items": {
            "$ref": "#/definitions/ServiceResourceDescription"
          }
        },
        "healthState": {
          "readOnly": true,
          "$ref": "#/definitions/HealthState",
          "description": "Describes the health state of an application resource."
        },
        "unhealthyEvaluation": {
          "readOnly": true,
          "type": "string",
          "description": "When the application's health state is not 'Ok', this additional details from service fabric Health Manager for the user to know why the application is marked unhealthy."
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "description": "Status of the application resource.",
          "enum": [
            "Invalid",
            "Ready",
            "Upgrading",
            "Creating",
            "Deleting",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ApplicationResourceStatus",
            "modelAsString": true
          }
        },
        "statusDetails": {
          "readOnly": true,
          "type": "string",
          "description": "Gives additional information about the current status of the application deployment."
        },
        "serviceNames": {
          "readOnly": true,
          "description": "Names of the services in the application.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "diagnostics": {
          "$ref": "#/definitions/DiagnosticsDescription",
          "description": "Describes the diagnostics definition and usage for an application resource."
        }
      }
    },
    "ServiceList": {
      "description": "A pageable list of all services in an application.\n",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceResourceDescription"
          },
          "description": "One page of the list."
        },
        "nextLink": {
          "type": "string",
          "description": "URI to fetch the next page of the list."
        }
      }
    },
    "ServiceResourceDescription": {
      "description": "This type describes a service resource.",
      "allOf": [
        {
          "$ref": "#/definitions/ManagedProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ServiceResourceProperties",
          "description": "This type describes properties of a service resource."
        }
      },
      "required": [
        "properties"
      ]
    },
    "ServiceResourceProperties": {
      "description": "This type describes properties of a service resource.",
      "allOf": [
        {
          "$ref": "#/definitions/ServiceReplicaProperties"
        },
        {
          "type": "object",
          "properties": {
            "description": {
              "description": "User readable description of the service.",
              "type": "string"
            },
            "replicaCount": {
              "type": "integer",
              "description": "The number of replicas of the service to create. Defaults to 1 if not specified."
            },
            "healthState": {
              "$ref": "#/definitions/HealthState",
              "description": "The health state of a resource such as Application, Service, or Network."
            },
            "status": {
              "readOnly": true,
              "type": "string",
              "description": "Represents the status of the service.",
              "enum": [
                "Unknown",
                "Active",
                "Upgrading",
                "Deleting",
                "Creating",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "ServiceResourceStatus",
                "modelAsString": true
              }
            }
          }
        }
      ]
    },
    "ContainerInstanceView": {
      "description": "Runtime information of a container instance.",
      "type": "object",
      "properties": {
        "restartCount": {
          "type": "integer",
          "description": "The number of times the container has been restarted."
        },
        "currentState": {
          "$ref": "#/definitions/ContainerState",
          "description": "Current container instance state."
        },
        "previousState": {
          "$ref": "#/definitions/ContainerState",
          "description": "Previous container instance state."
        },
        "events": {
          "description": "The events of this container instance.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerEvent"
          }
        }
      }
    },
    "ContainerEvent": {
      "description": "A container event.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the container event."
        },
        "count": {
          "type": "integer",
          "description": "The count of the event."
        },
        "firstTimestamp": {
          "type": "string",
          "description": "Date/time of the first event."
        },
        "lastTimestamp": {
          "type": "string",
          "description": "Date/time of the last event."
        },
        "message": {
          "type": "string",
          "description": "The event message"
        },
        "type": {
          "type": "string",
          "description": "The event type."
        }
      }
    },
    "ContainerLabel": {
      "description": "Describes a container label.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the container label.",
          "type": "string"
        },
        "value": {
          "description": "The value of the container label.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "value"
      ]
    },
    "ContainerLogs": {
      "description": "The logs of the container.",
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "description": "content of the log."
        }
      }
    },
    "ContainerState": {
      "description": "The container state.",
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "description": "The state of this container"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Date/time when the container state started."
        },
        "exitCode": {
          "type": "string",
          "description": "The container exit code."
        },
        "finishTime": {
          "type": "string",
          "format": "date-time",
          "description": "Date/time when the container state finished."
        },
        "detailStatus": {
          "description": "Human-readable status of this state.",
          "type": "string"
        }
      }
    },
    "ImageRegistryCredential": {
      "description": "Image registry credential.",
      "type": "object",
      "properties": {
        "server": {
          "type": "string",
          "description": "Docker image registry server, without protocol such as `http` and `https`."
        },
        "username": {
          "type": "string",
          "description": "The username for the private registry."
        },
        "password": {
          "type": "string",
          "description": "The password for the private registry."
        }
      },
      "required": [
        "server",
        "username"
      ]
    },
    "ResourceLimits": {
      "description": "This type describes the resource limits for a given container. It describes the most amount of resources a container is allowed to use before being restarted.",
      "type": "object",
      "properties": {
        "memoryInGB": {
          "description": "The memory limit in GB.",
          "type": "number",
          "format": "double"
        },
        "cpu": {
          "description": "CPU limits in cores. At present, only full cores are supported.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ResourceRequests": {
      "description": "This type describes the requested resources for a given container. It describes the least amount of resources required for the container. A container can consume more than requested resources up to the specified limits before being restarted. Currently, the requested resources are treated as limits.\n",
      "type": "object",
      "properties": {
        "memoryInGB": {
          "description": "The memory request in GB for this container.",
          "type": "number",
          "format": "double"
        },
        "cpu": {
          "description": "Requested number of CPU cores. At present, only full cores are supported.",
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "memoryInGB",
        "cpu"
      ]
    },
    "ResourceRequirements": {
      "description": "This type describes the resource requirements for a container or a service.",
      "type": "object",
      "properties": {
        "requests": {
          "$ref": "#/definitions/ResourceRequests",
          "description": "Describes the requested resources for a given container."
        },
        "limits": {
          "$ref": "#/definitions/ResourceLimits",
          "description": "Describes the maximum limits on the resources for a given container."
        }
      },
      "required": [
        "requests"
      ]
    },
    "OperationListResult": {
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Service Fabric operations supported by the Microsoft.ServiceFabric resource provider.",
          "items": {
            "$ref": "#/definitions/OperationResult"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any.",
          "readOnly": true
        }
      },
      "description": "Describes the result of the request to list Service Fabric operations."
    },
    "OperationResult": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation."
        },
        "display": {
          "$ref": "#/definitions/AvailableOperationDisplay",
          "description": "The object that represents the operation."
        },
        "origin": {
          "type": "string",
          "description": "Origin result"
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "List of operations available at the listed Azure resource provider."
    },
    "AvailableOperationDisplay": {
      "properties": {
        "provider": {
          "type": "string",
          "description": "Name of the operation provider."
        },
        "resource": {
          "type": "string",
          "description": "Name of the resource on which the operation is available."
        },
        "operation": {
          "type": "string",
          "description": "Name of the available operation."
        },
        "description": {
          "type": "string",
          "description": "Description of the available operation."
        }
      },
      "description": "An operation available at the listed Azure resource provider."
    },
    "ErrorModel": {
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code."
        },
        "message": {
          "type": "string",
          "description": "The error message."
        }
      },
      "description": "The error details."
    },
    "ContainerCodePackageProperties": {
      "description": "Describes a container and its runtime properties.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the code package.",
          "type": "string"
        },
        "image": {
          "description": "The Container image to use.",
          "type": "string"
        },
        "imageRegistryCredential": {
          "$ref": "#/definitions/ImageRegistryCredential",
          "description": "Image registry credential."
        },
        "entrypoint": {
          "description": "Override for the default entry point in the container.",
          "type": "string"
        },
        "commands": {
          "description": "Command array to execute within the container in exec form.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "environmentVariables": {
          "description": "The environment variables to set in this container",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentVariable"
          }
        },
        "settings": {
          "description": "The settings to set in this container. The setting file path can be fetched from environment variable \"Fabric_SettingPath\". The path for Windows container is \"C:\\\\secrets\". The path for Linux container is \"/var/secrets\".",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Setting"
          }
        },
        "labels": {
          "description": "The labels to set in this container.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerLabel"
          }
        },
        "endpoints": {
          "description": "The endpoints exposed by this container.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndpointProperties"
          }
        },
        "resources": {
          "$ref": "#/definitions/ResourceRequirements",
          "description": "This type describes the resource requirements for a container or a service."
        },
        "volumeRefs": {
          "description": "The volumes to be attached to the container.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerVolume"
          }
        },
        "instanceView": {
          "readOnly": true,
          "$ref": "#/definitions/ContainerInstanceView",
          "description": "Runtime information of a container instance."
        },
        "diagnostics": {
          "$ref": "#/definitions/DiagnosticsRef",
          "description": "Reference to sinks in DiagnosticsDescription."
        }
      },
      "required": [
        "name",
        "image",
        "resources"
      ]
    },
    "ContainerVolume": {
      "description": "Describes how a volume is attached to a container.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the volume.",
          "type": "string"
        },
        "readOnly": {
          "description": "The flag indicating whether the volume is read only. Default is 'false'.",
          "type": "boolean"
        },
        "destinationPath": {
          "description": "The path within the container at which the volume should be mounted. Only valid path characters are allowed.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "destinationPath"
      ]
    },
    "EndpointProperties": {
      "description": "Describes a container endpoint.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the endpoint.",
          "type": "string"
        },
        "port": {
          "description": "Port used by the container.",
          "type": "integer"
        }
      },
      "required": [
        "name"
      ]
    },
    "ServiceReplicaList": {
      "description": "A pageable list of replicas of a service resource.\n",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceReplicaDescription"
          },
          "description": "One page of the list."
        },
        "nextLink": {
          "type": "string",
          "description": "URI to fetch the next page of the list."
        }
      }
    },
    "ServiceReplicaDescription": {
      "type": "object",
      "description": "This type describes a replica of a service resource.",
      "allOf": [
        {
          "$ref": "#/definitions/ServiceReplicaProperties"
        },
        {
          "type": "object",
          "properties": {
            "replicaName": {
              "type": "string",
              "description": "Name of the replica."
            }
          }
        }
      ]
    },
    "ServiceReplicaProperties": {
      "description": "Describes the properties of a service replica.",
      "type": "object",
      "properties": {
        "osType": {
          "type": "string",
          "description": "The Operating system type required by the code in service.\n",
          "enum": [
            "Linux",
            "Windows"
          ],
          "x-ms-enum": {
            "name": "OperatingSystemTypes",
            "modelAsString": true
          }
        },
        "codePackages": {
          "description": "Describes the set of code packages that forms the service. A code package describes the container and the properties for running it. All the code packages are started together on the same host and share the same context (network, process etc.).\n",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerCodePackageProperties"
          }
        },
        "networkRefs": {
          "type": "array",
          "description": "The names of the private networks that this service needs to be part of.",
          "items": {
            "$ref": "#/definitions/NetworkRef"
          }
        },
        "diagnostics": {
          "$ref": "#/definitions/DiagnosticsRef",
          "description": "Reference to sinks in DiagnosticsDescription."
        }
      },
      "required": [
        "osType",
        "codePackages"
      ]
    },
    "IngressConfig": {
      "description": "Describes public connectivity configuration for the network.",
      "type": "object",
      "properties": {
        "qosLevel": {
          "type": "string",
          "description": "The QoS tier for ingress.",
          "enum": [
            "Bronze"
          ],
          "x-ms-enum": {
            "name": "IngressQoSLevel",
            "modelAsString": true
          }
        },
        "layer4": {
          "description": "Configuration for layer4 public connectivity for this network.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Layer4IngressConfig"
          }
        },
        "publicIPAddress": {
          "type": "string",
          "readOnly": true,
          "description": "The public IP address for reaching this network."
        }
      }
    },
    "Layer4IngressConfig": {
      "description": "Describes the layer4 configuration for public connectivity for this network.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Layer4 ingress config name."
        },
        "publicPort": {
          "type": "integer",
          "description": "Specifies the public port at which the service endpoint below needs to be exposed."
        },
        "applicationName": {
          "type": "string",
          "description": "The application name which contains the service to be exposed."
        },
        "serviceName": {
          "type": "string",
          "description": "The service whose endpoint needs to be exposed at the public port."
        },
        "endpointName": {
          "type": "string",
          "description": "The service endpoint that needs to be exposed."
        }
      }
    },
    "EnvironmentVariable": {
      "description": "Describes an environment variable for the container.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the environment variable.",
          "type": "string"
        },
        "value": {
          "description": "The value of the environment variable.",
          "type": "string"
        }
      }
    },
    "Setting": {
      "description": "Describes a setting for the container.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the setting.",
          "type": "string"
        },
        "value": {
          "description": "The value of the setting.",
          "type": "string"
        }
      }
    },
    "NetworkRef": {
      "description": "Describes a network reference in a service.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the network."
        }
      }
    },
    "HealthState": {
      "type": "string",
      "description": "The health state of a resource such as Application, Service, or Network.",
      "enum": [
        "Invalid",
        "Ok",
        "Warning",
        "Error",
        "Unknown"
      ],
      "x-ms-enum": {
        "name": "HealthState",
        "modelAsString": true,
        "values": [
          {
            "value": "Invalid",
            "description": "Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero."
          },
          {
            "value": "Ok",
            "description": "Indicates the health state is okay. The value is 1."
          },
          {
            "value": "Warning",
            "description": "Indicates the health state is at a warning level. The value is 2."
          },
          {
            "value": "Error",
            "description": "Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3."
          },
          {
            "value": "Unknown",
            "description": "Indicates an unknown health status. The value is 65535."
          }
        ]
      }
    },
    "DiagnosticsDescription": {
      "description": "Describes the diagnostics options available",
      "type": "object",
      "properties": {
        "sinks": {
          "description": "List of supported sinks that can be referenced.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiagnosticsSinkProperties"
          }
        },
        "enabled": {
          "description": "Status of whether or not sinks are enabled.",
          "type": "boolean"
        },
        "defaultSinkRefs": {
          "description": "The sinks to be used if diagnostics is enabled. Sink choices can be overridden at the service and code package level.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DiagnosticsRef": {
      "description": "Reference to sinks in DiagnosticsDescription.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Status of whether or not sinks are enabled.",
          "type": "boolean"
        },
        "sinkRefs": {
          "description": "List of sinks to be used if enabled. References the list of sinks in DiagnosticsDescription.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DiagnosticsSinkProperties": {
      "description": "Properties of a DiagnosticsSink.",
      "type": "object",
      "discriminator": "kind",
      "properties": {
        "kind": {
          "$ref": "#/definitions/DiagnosticsSinkKind",
          "description": "The kind of DiagnosticsSink."
        },
        "name": {
          "description": "Name of the sink. This value is referenced by DiagnosticsReferenceDescription",
          "type": "string"
        },
        "description": {
          "description": "A description of the sink.",
          "type": "string"
        }
      },
      "required": [
        "kind"
      ]
    },
    "DiagnosticsSinkKind": {
      "type": "string",
      "description": "The kind of DiagnosticsSink.",
      "enum": [
        "Invalid",
        "AzureInternalMonitoringPipeline"
      ],
      "x-ms-enum": {
        "name": "DiagnosticsSinkKind",
        "modelAsString": true,
        "values": [
          {
            "value": "Invalid",
            "description": "Indicates an invalid sink kind. All Service Fabric enumerations have the invalid type."
          },
          {
            "value": "AzureInternalMonitoringPipeline",
            "description": "Diagnostics settings for Geneva."
          }
        ]
      }
    },
    "AzureInternalMonitoringPipelineSinkDescription": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DiagnosticsSinkProperties"
        }
      ],
      "x-ms-discriminator-value": "AzureInternalMonitoringPipeline",
      "description": "Diagnostics settings for Geneva.",
      "properties": {
        "accountName": {
          "description": "Azure Internal monitoring pipeline account.",
          "type": "string"
        },
        "namespace": {
          "description": "Azure Internal monitoring pipeline account namespace.",
          "type": "string"
        },
        "maConfigUrl": {
          "description": "Azure Internal monitoring agent configuration.",
          "type": "string"
        },
        "fluentdConfigUrl": {
          "description": "Azure Internal monitoring agent fluentd configuration."
        },
        "autoKeyConfigUrl": {
          "description": "Azure Internal monitoring pipeline autokey associated with the certificate.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "api-versionRequiredQueryParam": {
      "name": "api-version",
      "in": "query",
      "type": "string",
      "enum": [
        "2018-07-01-preview"
      ],
      "default": "2018-07-01-preview",
      "description": "The version of the API. This parameter is required and its value must be `2018-07-01-preview`.",
      "required": true,
      "x-ms-enum": {
        "name": "2018-07-01-preview",
        "modelAsString": true,
        "values": [
          {
            "value": "2018-07-01-preview",
            "description": "The `2018-07-01-preview` version of the API."
          }
        ]
      }
    },
    "subscriptionIdRequiredPathParam": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The customer subscription identifier",
      "required": true,
      "type": "string"
    },
    "ResourceGroupNameRequiredPathParam": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "Azure resource group name",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ApplicationNameRequiredPathParam": {
      "name": "applicationName",
      "in": "path",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true,
      "type": "string",
      "required": true,
      "description": "The identity of the application."
    },
    "ApplicationResourceDescriptionRequiredBodyParam": {
      "name": "applicationResourceDescription",
      "in": "body",
      "description": "Description for creating an application resource.",
      "required": true,
      "x-ms-parameter-location": "method",
      "schema": {
        "$ref": "#/definitions/ApplicationResourceDescription"
      }
    },
    "ServiceNameRequiredPathParam": {
      "name": "serviceName",
      "in": "path",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true,
      "type": "string",
      "required": true,
      "description": "The identity of the service."
    },
    "ReplicaNameRequiredPathParam": {
      "name": "replicaName",
      "in": "path",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true,
      "type": "string",
      "required": true,
      "description": "The identity of the service replica."
    },
    "NetworkNameRequiredPathParam": {
      "name": "networkName",
      "in": "path",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true,
      "type": "string",
      "required": true,
      "description": "The identity of the network."
    },
    "NetworkResourceDescriptionRequiredBodyParam": {
      "name": "networkResourceDescription",
      "in": "body",
      "description": "Description for creating a network resource.",
      "required": true,
      "x-ms-parameter-location": "method",
      "schema": {
        "$ref": "#/definitions/NetworkResourceDescription"
      }
    },
    "VolumeNameRequiredPathParam": {
      "name": "volumeName",
      "in": "path",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true,
      "type": "string",
      "required": true,
      "description": "The identity of the volume."
    },
    "VolumeResourceDescriptionRequiredBodyParam": {
      "name": "volumeResourceDescription",
      "in": "body",
      "description": "Description for creating a volume resource.",
      "required": true,
      "x-ms-parameter-location": "method",
      "schema": {
        "$ref": "#/definitions/VolumeResourceDescription"
      }
    },
    "CodePackageNameRequiredPathParam": {
      "name": "codePackageName",
      "in": "path",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true,
      "type": "string",
      "required": true,
      "description": "The name of the code package."
    },
    "TailOptionalQueryParam": {
      "name": "tail",
      "in": "query",
      "x-ms-parameter-location": "method",
      "type": "integer",
      "required": false,
      "description": "Number of lines to show from the end of the logs. Default is 100."
    }
  }
}