{
  "swagger": "2.0",
  "info": {
    "title": "DevCenter",
    "version": "2023-04-01",
    "description": "DevCenter Management API",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "AadOauth2Auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "AadOauth2Auth": {
      "type": "oauth2",
      "description": "The Azure Active Directory OAuth2 Flow",
      "flow": "accessCode",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": ""
      },
      "tokenUrl": "https://login.microsoftonline.com/common/oauth2/token"
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "DevCenters"
    },
    {
      "name": "Projects"
    },
    {
      "name": "AttachedNetworkConnections"
    },
    {
      "name": "Galleries"
    },
    {
      "name": "Images"
    },
    {
      "name": "ImageVersions"
    },
    {
      "name": "Catalogs"
    },
    {
      "name": "EnvironmentTypes"
    },
    {
      "name": "AllowedEnvironmentTypes"
    },
    {
      "name": "ProjectEnvironmentTypes"
    },
    {
      "name": "DevBoxDefinitions"
    },
    {
      "name": "Pools"
    },
    {
      "name": "Schedules"
    },
    {
      "name": "NetworkConnections"
    },
    {
      "name": "HealthCheckStatusDetailsOperationGroup"
    }
  ],
  "paths": {
    "/providers/Microsoft.DevCenter/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/checkNameAvailability": {
      "post": {
        "operationId": "CheckNameAvailabilityOperations_Execute",
        "description": "Check the availability of name for resource",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "nameAvailabilityRequest",
            "in": "body",
            "description": "The required parameters for checking if resource name is available.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/devcenters": {
      "get": {
        "operationId": "DevCenters_ListBySubscription",
        "tags": [
          "DevCenters"
        ],
        "description": "Lists all devcenters in a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DevCenterListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DevCenters_ListBySubscription": {
            "$ref": "./examples/DevCenters_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/locations/{location}/operationStatuses/{operationId}": {
      "get": {
        "operationId": "OperationStatusesOperations_Get",
        "summary": "Get Operation Status",
        "description": "Gets the current status of an async operation.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "The Azure region",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The ID of an ongoing async operation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/locations/{location}/usages": {
      "get": {
        "operationId": "UsagesOperations_ListByLocation",
        "description": "Lists the current usages and limits in this location for the provided subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "The Azure region",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedUsage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/networkConnections": {
      "get": {
        "operationId": "NetworkConnections_ListBySubscription",
        "tags": [
          "NetworkConnections"
        ],
        "description": "Lists network connections in a subscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkConnectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkConnections_ListBySubscription": {
            "$ref": "./examples/NetworkConnections_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/projects": {
      "get": {
        "operationId": "Projects_ListBySubscription",
        "tags": [
          "Projects"
        ],
        "description": "Lists all projects in the subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProjectListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Projects_ListBySubscription": {
            "$ref": "./examples/Projects_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/skus": {
      "get": {
        "operationId": "SkusOperations_ListBySubscription",
        "description": "Lists the Microsoft.DevCenter SKUs available in a subscription",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedDevCenterSku"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters": {
      "get": {
        "operationId": "DevCenters_ListByResourceGroup",
        "tags": [
          "DevCenters"
        ],
        "description": "Lists all devcenters in a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DevCenterListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DevCenters_ListByResourceGroup": {
            "$ref": "./examples/DevCenters_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}": {
      "get": {
        "operationId": "DevCenters_Get",
        "tags": [
          "DevCenters"
        ],
        "description": "Gets a devcenter.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DevCenter"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DevCenters_Get": {
            "$ref": "./examples/DevCenters_Get.json"
          }
        }
      },
      "put": {
        "operationId": "DevCenters_CreateOrUpdate",
        "tags": [
          "DevCenters"
        ],
        "description": "Creates or updates a devcenter resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents a devcenter.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevCenter"
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DevCenter' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DevCenter"
            }
          },
          "201": {
            "description": "Resource 'DevCenter' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DevCenter"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DevCenters_Create": {
            "$ref": "./examples/DevCenters_CreateOrUpdate_Dev_Centers_Create.json"
          },
          "DevCenters_CreateWithUserIdentity": {
            "$ref": "./examples/DevCenters_CreateOrUpdate_Dev_Centers_Create_With_User_Identity.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "DevCenters_Update",
        "tags": [
          "DevCenters"
        ],
        "description": "Partially updates a devcenter.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updatable devcenter properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevCenterUpdate"
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DevCenter"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DevCenters_Update": {
            "$ref": "./examples/DevCenters_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "DevCenters_Delete",
        "tags": [
          "DevCenters"
        ],
        "description": "Deletes a devcenter",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DevCenters_Delete": {
            "$ref": "./examples/DevCenters_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/attachednetworks": {
      "get": {
        "operationId": "AttachedNetworksOperations_ListByDevCenter",
        "description": "Lists the attached NetworkConnections for a DevCenter.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AttachedNetworkConnectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/attachednetworks/{attachedNetworkConnectionName}": {
      "get": {
        "operationId": "AttachedNetworksOperations_GetByDevCenter",
        "description": "Gets an attached NetworkConnection.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "attachedNetworkConnectionName",
            "in": "path",
            "description": "The name of the attached NetworkConnection.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AttachedNetworkConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "put": {
        "operationId": "AttachedNetworksOperations_CreateOrUpdate",
        "description": "Creates or updates an attached NetworkConnection.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "attachedNetworkConnectionName",
            "in": "path",
            "description": "The name of the attached NetworkConnection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents an attached NetworkConnection.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AttachedNetworkConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AttachedNetworkConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "AttachedNetworksOperations_Delete",
        "description": "Un-attach a NetworkConnection.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "attachedNetworkConnectionName",
            "in": "path",
            "description": "The name of the attached NetworkConnection.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs": {
      "get": {
        "operationId": "Catalogs_ListByDevCenter",
        "tags": [
          "Catalogs"
        ],
        "description": "Lists catalogs for a devcenter.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CatalogListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Catalogs_ListByDevCenter": {
            "$ref": "./examples/Catalogs_ListByDevCenter.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}": {
      "get": {
        "operationId": "Catalogs_Get",
        "tags": [
          "Catalogs"
        ],
        "description": "Gets a catalog",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "catalogName",
            "in": "path",
            "description": "The name of the Catalog.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Catalogs_Get": {
            "$ref": "./examples/Catalogs_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Catalogs_CreateOrUpdate",
        "tags": [
          "Catalogs"
        ],
        "description": "Creates or updates a catalog.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "catalogName",
            "in": "path",
            "description": "The name of the Catalog.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents a catalog.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Catalog"
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Catalog' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "201": {
            "description": "Resource 'Catalog' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Catalog"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Catalogs_CreateOrUpdateAdo": {
            "$ref": "./examples/Catalogs_CreateOrUpdateAdo.json"
          },
          "Catalogs_CreateOrUpdateGitHub": {
            "$ref": "./examples/Catalogs_CreateOrUpdateGitHub.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Catalogs_Update",
        "tags": [
          "Catalogs"
        ],
        "description": "Partially updates a catalog.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "catalogName",
            "in": "path",
            "description": "The name of the Catalog.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updatable catalog properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CatalogUpdate"
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Catalogs_Update": {
            "$ref": "./examples/Catalogs_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Catalogs_Delete",
        "tags": [
          "Catalogs"
        ],
        "description": "Deletes a catalog resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "catalogName",
            "in": "path",
            "description": "The name of the Catalog.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Catalogs_Delete": {
            "$ref": "./examples/Catalogs_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}/sync": {
      "post": {
        "operationId": "Catalogs_Sync",
        "tags": [
          "Catalogs"
        ],
        "description": "Syncs templates for a template source.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "catalogName",
            "in": "path",
            "description": "The name of the Catalog.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Catalogs_Sync": {
            "$ref": "./examples/Catalogs_Sync.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/devboxdefinitions": {
      "get": {
        "operationId": "DevBoxDefinitions_ListByDevCenter",
        "tags": [
          "DevBoxDefinitions"
        ],
        "description": "List Dev Box definitions for a devcenter.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DevBoxDefinitionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DevBoxDefinitions_ListByDevCenter": {
            "$ref": "./examples/DevBoxDefinitions_ListByDevCenter.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/devboxdefinitions/{devBoxDefinitionName}": {
      "get": {
        "operationId": "DevBoxDefinitions_Get",
        "tags": [
          "DevBoxDefinitions"
        ],
        "description": "Gets a Dev Box definition",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "devBoxDefinitionName",
            "in": "path",
            "description": "The name of the Dev Box definition.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DevBoxDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DevBoxDefinitions_Get": {
            "$ref": "./examples/DevBoxDefinitions_Get.json"
          }
        }
      },
      "put": {
        "operationId": "DevBoxDefinitions_CreateOrUpdate",
        "tags": [
          "DevBoxDefinitions"
        ],
        "description": "Creates or updates a Dev Box definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "devBoxDefinitionName",
            "in": "path",
            "description": "The name of the Dev Box definition.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents a Dev Box definition.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevBoxDefinition"
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DevBoxDefinition' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DevBoxDefinition"
            }
          },
          "201": {
            "description": "Resource 'DevBoxDefinition' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DevBoxDefinition"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DevBoxDefinitions_Create": {
            "$ref": "./examples/DevBoxDefinitions_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "DevBoxDefinitions_Update",
        "tags": [
          "DevBoxDefinitions"
        ],
        "description": "Partially updates a Dev Box definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "devBoxDefinitionName",
            "in": "path",
            "description": "The name of the Dev Box definition.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents a Dev Box definition.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevBoxDefinitionUpdate"
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DevBoxDefinition"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DevBoxDefinitions_Patch": {
            "$ref": "./examples/DevBoxDefinitions_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "DevBoxDefinitions_Delete",
        "tags": [
          "DevBoxDefinitions"
        ],
        "description": "Deletes a Dev Box definition",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "devBoxDefinitionName",
            "in": "path",
            "description": "The name of the Dev Box definition.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DevBoxDefinitions_Delete": {
            "$ref": "./examples/DevBoxDefinitions_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/environmentTypes": {
      "get": {
        "operationId": "EnvironmentTypes_ListByDevCenter",
        "tags": [
          "EnvironmentTypes"
        ],
        "description": "Lists environment types for the devcenter.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnvironmentTypeListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnvironmentTypes_ListByDevCenter": {
            "$ref": "./examples/EnvironmentTypes_ListByDevCenter.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/environmentTypes/{environmentTypeName}": {
      "get": {
        "operationId": "EnvironmentTypes_Get",
        "tags": [
          "EnvironmentTypes"
        ],
        "description": "Gets an environment type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentTypeName",
            "in": "path",
            "description": "The name of the environment type.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnvironmentType"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnvironmentTypes_Get": {
            "$ref": "./examples/EnvironmentTypes_Get.json"
          }
        }
      },
      "put": {
        "operationId": "EnvironmentTypes_CreateOrUpdate",
        "tags": [
          "EnvironmentTypes"
        ],
        "description": "Creates or updates an environment type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentTypeName",
            "in": "path",
            "description": "The name of the environment type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents an Environment Type.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentType"
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EnvironmentType' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/EnvironmentType"
            }
          },
          "201": {
            "description": "Resource 'EnvironmentType' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/EnvironmentType"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnvironmentTypes_CreateOrUpdate": {
            "$ref": "./examples/EnvironmentTypes_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "operationId": "EnvironmentTypes_Update",
        "tags": [
          "EnvironmentTypes"
        ],
        "description": "Partially updates an environment type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentTypeName",
            "in": "path",
            "description": "The name of the environment type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updatable environment type properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentTypeUpdate"
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnvironmentType"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnvironmentTypes_Update": {
            "$ref": "./examples/EnvironmentTypes_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "EnvironmentTypes_Delete",
        "tags": [
          "EnvironmentTypes"
        ],
        "description": "Deletes an environment type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentTypeName",
            "in": "path",
            "description": "The name of the environment type.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnvironmentTypes_Delete": {
            "$ref": "./examples/EnvironmentTypes_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/galleries": {
      "get": {
        "operationId": "Galleries_ListByDevCenter",
        "tags": [
          "Galleries"
        ],
        "description": "Lists galleries for a devcenter.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GalleryListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Galleries_ListByDevCenter": {
            "$ref": "./examples/Galleries_ListByDevCenter.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/galleries/{galleryName}": {
      "get": {
        "operationId": "Galleries_Get",
        "tags": [
          "Galleries"
        ],
        "description": "Gets a gallery",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "galleryName",
            "in": "path",
            "description": "The name of the gallery.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Gallery"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Galleries_Get": {
            "$ref": "./examples/Galleries_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Galleries_CreateOrUpdate",
        "tags": [
          "Galleries"
        ],
        "description": "Creates or updates a gallery.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "galleryName",
            "in": "path",
            "description": "The name of the gallery.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents a gallery.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Gallery"
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Gallery' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Gallery"
            }
          },
          "201": {
            "description": "Resource 'Gallery' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Gallery"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Galleries_CreateOrUpdate": {
            "$ref": "./examples/Galleries_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Galleries_Delete",
        "tags": [
          "Galleries"
        ],
        "description": "Deletes a gallery resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "galleryName",
            "in": "path",
            "description": "The name of the gallery.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Galleries_Delete": {
            "$ref": "./examples/Galleries_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/galleries/{galleryName}/images": {
      "get": {
        "operationId": "Images_ListByGallery",
        "tags": [
          "Images"
        ],
        "description": "Lists images for a gallery.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "galleryName",
            "in": "path",
            "description": "The name of the gallery.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImageListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Images_ListByGallery": {
            "$ref": "./examples/Images_ListByGallery.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/galleries/{galleryName}/images/{imageName}": {
      "get": {
        "operationId": "Images_Get",
        "tags": [
          "Images"
        ],
        "description": "Gets a gallery image.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "galleryName",
            "in": "path",
            "description": "The name of the gallery.",
            "required": true,
            "type": "string"
          },
          {
            "name": "imageName",
            "in": "path",
            "description": "The name of the image.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Image"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Images_Get": {
            "$ref": "./examples/Images_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/galleries/{galleryName}/images/{imageName}/versions": {
      "get": {
        "operationId": "ImageVersions_ListByImage",
        "tags": [
          "ImageVersions"
        ],
        "description": "Lists versions for an image.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "galleryName",
            "in": "path",
            "description": "The name of the gallery.",
            "required": true,
            "type": "string"
          },
          {
            "name": "imageName",
            "in": "path",
            "description": "The name of the image.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImageVersionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ImageVersions_ListByImage": {
            "$ref": "./examples/ImageVersions_ListByImage.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/galleries/{galleryName}/images/{imageName}/versions/{versionName}": {
      "get": {
        "operationId": "ImageVersions_Get",
        "tags": [
          "ImageVersions"
        ],
        "description": "Gets an image version.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "galleryName",
            "in": "path",
            "description": "The name of the gallery.",
            "required": true,
            "type": "string"
          },
          {
            "name": "imageName",
            "in": "path",
            "description": "The name of the image.",
            "required": true,
            "type": "string"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The version of the image.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImageVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Versions_Get": {
            "$ref": "./examples/ImageVersions_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/images/{subscriptionId}/{resourceGroupName}/{devCenterName}": {
      "get": {
        "operationId": "Images_ListByDevCenter",
        "tags": [
          "DevCenters"
        ],
        "description": "Lists images for a devcenter.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "devCenterName",
            "in": "path",
            "description": "The name of the devcenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ImageListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Images_ListByDevCenter": {
            "$ref": "./examples/Images_ListByDevCenter.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections": {
      "get": {
        "operationId": "NetworkConnections_ListByResourceGroup",
        "tags": [
          "NetworkConnections"
        ],
        "description": "Lists network connections in a resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkConnectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkConnections_ListByResourceGroup": {
            "$ref": "./examples/NetworkConnections_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections/{networkConnectionName}": {
      "get": {
        "operationId": "NetworkConnections_Get",
        "tags": [
          "NetworkConnections"
        ],
        "description": "Gets a network connection resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkConnectionName",
            "in": "path",
            "description": "Name of the Network Connection that can be applied to a Pool.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkConnections_Get": {
            "$ref": "./examples/NetworkConnections_Get.json"
          }
        }
      },
      "put": {
        "operationId": "NetworkConnections_CreateOrUpdate",
        "tags": [
          "NetworkConnections"
        ],
        "description": "Creates or updates a Network Connections resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkConnectionName",
            "in": "path",
            "description": "Name of the Network Connection that can be applied to a Pool.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents network connection",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkConnection"
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NetworkConnection' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NetworkConnection"
            }
          },
          "201": {
            "description": "Resource 'NetworkConnection' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/NetworkConnection"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkConnections_CreateOrUpdate": {
            "$ref": "./examples/NetworkConnections_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "NetworkConnections_Update",
        "tags": [
          "NetworkConnections"
        ],
        "description": "Partially updates a Network Connection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkConnectionName",
            "in": "path",
            "description": "Name of the Network Connection that can be applied to a Pool.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents network connection",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkConnectionUpdate"
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkConnection"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkConnections_Update": {
            "$ref": "./examples/NetworkConnections_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "NetworkConnections_Delete",
        "tags": [
          "NetworkConnections"
        ],
        "description": "Deletes a Network Connections resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkConnectionName",
            "in": "path",
            "description": "Name of the Network Connection that can be applied to a Pool.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkConnections_Delete": {
            "$ref": "./examples/NetworkConnections_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections/{networkConnectionName}/healthChecks": {
      "get": {
        "operationId": "NetworkConnections_ListHealthDetails",
        "tags": [
          "HealthCheckStatusDetailsOperationGroup"
        ],
        "description": "Lists health check status details",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "networkConnectionName",
            "in": "path",
            "description": "Name of the Network Connection that can be applied to a Pool.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HealthCheckStatusDetailsListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkConnections_ListHealthDetails": {
            "$ref": "./examples/NetworkConnections_ListHealthDetails.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections/{networkConnectionName}/healthChecks/latest": {
      "get": {
        "operationId": "NetworkConnections_GetHealthDetails",
        "tags": [
          "HealthCheckStatusDetailsOperationGroup"
        ],
        "description": "Gets health check status details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkConnectionName",
            "in": "path",
            "description": "Name of the Network Connection that can be applied to a Pool.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HealthCheckStatusDetails"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkConnections_GetHealthDetails": {
            "$ref": "./examples/NetworkConnections_GetHealthDetails.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections/{networkConnectionName}/outboundNetworkDependenciesEndpoints/{subscriptionId}/{resourceGroupName}/{networkConnectionName}": {
      "get": {
        "operationId": "NetworkConnections_ListOutboundNetworkDependenciesEndpoints",
        "tags": [
          "NetworkConnections"
        ],
        "description": "Lists the endpoints that agents may call as part of Dev Box service administration. These FQDNs should be allowed for outbound access in order for the Dev Box service to function.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "networkConnectionName",
            "in": "path",
            "description": "Name of the Network Connection that can be applied to a Pool.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedOutboundEnvironmentEndpoint"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "ListOutboundNetworkDependencies": {
            "$ref": "./examples/NetworkConnections_ListOutboundNetworkDependenciesEndpoints.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections/{networkConnectionName}/runHealthChecks": {
      "post": {
        "operationId": "NetworkConnections_RunHealthChecks",
        "tags": [
          "NetworkConnections"
        ],
        "description": "Triggers a new health check run. The execution and health check result can be tracked via the network Connection health check details",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkConnectionName",
            "in": "path",
            "description": "Name of the Network Connection that can be applied to a Pool.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkConnections_RunHealthChecks": {
            "$ref": "./examples/NetworkConnections_RunHealthChecks.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects": {
      "get": {
        "operationId": "Projects_ListByResourceGroup",
        "tags": [
          "Projects"
        ],
        "description": "Lists all projects in the resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProjectListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Projects_ListByResourceGroup": {
            "$ref": "./examples/Projects_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}": {
      "get": {
        "operationId": "Projects_Get",
        "tags": [
          "Projects"
        ],
        "description": "Gets a specific project.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Projects_Get": {
            "$ref": "./examples/Projects_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Projects_CreateOrUpdate",
        "tags": [
          "Projects"
        ],
        "description": "Creates or updates a project.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents a project.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Project' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "201": {
            "description": "Resource 'Project' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Project"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Projects_CreateOrUpdate": {
            "$ref": "./examples/Projects_CreateOrUpdate.json"
          },
          "Projects_CreateOrUpdateWithLimitsPerDev": {
            "$ref": "./examples/Projects_CreateOrUpdateWithLimitsPerDev.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Projects_Update",
        "tags": [
          "Projects"
        ],
        "description": "Partially updates a project.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updatable project properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectUpdate"
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Projects_Update": {
            "$ref": "./examples/Projects_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Projects_Delete",
        "tags": [
          "Projects"
        ],
        "description": "Deletes a project resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Projects_Delete": {
            "$ref": "./examples/Projects_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/allowedEnvironmentTypes": {
      "get": {
        "operationId": "ProjectAllowedEnvironmentTypes_List",
        "tags": [
          "AllowedEnvironmentTypes"
        ],
        "description": "Lists allowed environment types for a project.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AllowedEnvironmentTypeListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProjectAllowedEnvironmentTypes_List": {
            "$ref": "./examples/ProjectAllowedEnvironmentTypes_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/allowedEnvironmentTypes/{environmentTypeName}": {
      "get": {
        "operationId": "ProjectAllowedEnvironmentTypes_Get",
        "tags": [
          "AllowedEnvironmentTypes"
        ],
        "description": "Gets an allowed environment type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentTypeName",
            "in": "path",
            "description": "The name of the environment type.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AllowedEnvironmentType"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProjectAllowedEnvironmentTypes_Get": {
            "$ref": "./examples/ProjectAllowedEnvironmentTypes_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/attachednetworks": {
      "get": {
        "operationId": "AttachedNetworks_ListByProject",
        "tags": [
          "AttachedNetworkConnections"
        ],
        "description": "Lists the attached NetworkConnections for a Project.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AttachedNetworkConnectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AttachedNetworks_ListByProject": {
            "$ref": "./examples/AttachedNetworks_ListByProject.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/attachednetworks/{attachedNetworkConnectionName}": {
      "get": {
        "operationId": "AttachedNetworks_GetByProject",
        "tags": [
          "AttachedNetworkConnections"
        ],
        "description": "Gets an attached NetworkConnection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project.",
            "required": true,
            "type": "string"
          },
          {
            "name": "attachedNetworkConnectionName",
            "in": "path",
            "description": "The name of the attached NetworkConnection.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AttachedNetworkConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AttachedNetworks_GetByProject": {
            "$ref": "./examples/AttachedNetworks_GetByProject.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/devboxdefinitions": {
      "get": {
        "operationId": "DevBoxDefinitionsOperations_ListByProject",
        "description": "List Dev Box definitions configured for a project.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DevBoxDefinitionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/devboxdefinitions/{devBoxDefinitionName}": {
      "get": {
        "operationId": "DevBoxDefinitionsOperations_GetByProject",
        "description": "Gets a Dev Box definition configured for a project",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project.",
            "required": true,
            "type": "string"
          },
          {
            "name": "devBoxDefinitionName",
            "in": "path",
            "description": "The name of the Dev Box definition.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DevBoxDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/environmentTypes": {
      "get": {
        "operationId": "ProjectEnvironmentTypes_List",
        "tags": [
          "ProjectEnvironmentTypes"
        ],
        "description": "Lists environment types for a project.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProjectEnvironmentTypeListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProjectEnvironmentTypes_List": {
            "$ref": "./examples/ProjectEnvironmentTypes_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/environmentTypes/{environmentTypeName}": {
      "get": {
        "operationId": "ProjectEnvironmentTypes_Get",
        "tags": [
          "ProjectEnvironmentTypes"
        ],
        "description": "Gets a project environment type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentTypeName",
            "in": "path",
            "description": "The name of the environment type.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProjectEnvironmentType"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProjectEnvironmentTypes_Get": {
            "$ref": "./examples/ProjectEnvironmentTypes_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ProjectEnvironmentTypes_CreateOrUpdate",
        "tags": [
          "ProjectEnvironmentTypes"
        ],
        "description": "Creates or updates a project environment type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentTypeName",
            "in": "path",
            "description": "The name of the environment type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents a Project Environment Type.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectEnvironmentType"
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ProjectEnvironmentType' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ProjectEnvironmentType"
            }
          },
          "201": {
            "description": "Resource 'ProjectEnvironmentType' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ProjectEnvironmentType"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProjectEnvironmentTypes_CreateOrUpdate": {
            "$ref": "./examples/ProjectEnvironmentTypes_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "operationId": "ProjectEnvironmentTypes_Update",
        "tags": [
          "ProjectEnvironmentTypes"
        ],
        "description": "Partially updates a project environment type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentTypeName",
            "in": "path",
            "description": "The name of the environment type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updatable project environment type properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectEnvironmentTypeUpdate"
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProjectEnvironmentType"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProjectEnvironmentTypes_Update": {
            "$ref": "./examples/ProjectEnvironmentTypes_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "ProjectEnvironmentTypes_Delete",
        "tags": [
          "ProjectEnvironmentTypes"
        ],
        "description": "Deletes a project environment type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentTypeName",
            "in": "path",
            "description": "The name of the environment type.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProjectEnvironmentTypes_Delete": {
            "$ref": "./examples/ProjectEnvironmentTypes_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/pools": {
      "get": {
        "operationId": "Pools_ListByProject",
        "tags": [
          "Pools"
        ],
        "description": "Lists pools for a project",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PoolListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_ListByProject": {
            "$ref": "./examples/Pools_ListByProject.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/pools/{poolName}": {
      "get": {
        "operationId": "Pools_Get",
        "tags": [
          "Pools"
        ],
        "description": "Gets a machine pool",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project.",
            "required": true,
            "type": "string"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Name of the pool.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Pool"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_Get": {
            "$ref": "./examples/Pools_Get.json"
          },
          "Pools_GetUnhealthyStatus": {
            "$ref": "./examples/Pools_GetUnhealthyStatus.json"
          }
        }
      },
      "put": {
        "operationId": "Pools_CreateOrUpdate",
        "tags": [
          "Pools"
        ],
        "description": "Creates or updates a machine pool",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project.",
            "required": true,
            "type": "string"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Name of the pool.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents a machine pool",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Pool"
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Pool' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Pool"
            }
          },
          "201": {
            "description": "Resource 'Pool' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Pool"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_CreateOrUpdate": {
            "$ref": "./examples/Pools_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Pools_Update",
        "tags": [
          "Pools"
        ],
        "description": "Partially updates a machine pool",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project.",
            "required": true,
            "type": "string"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Name of the pool.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents a machine pool",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PoolUpdate"
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Pool"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_Update": {
            "$ref": "./examples/Pools_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Pools_Delete",
        "tags": [
          "Pools"
        ],
        "description": "Deletes a machine pool",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project.",
            "required": true,
            "type": "string"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Name of the pool.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_Delete": {
            "$ref": "./examples/Pools_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/pools/{poolName}/runHealthChecks": {
      "post": {
        "operationId": "Pools_RunHealthChecks",
        "tags": [
          "Pools"
        ],
        "description": "Triggers a refresh of the pool status.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project.",
            "required": true,
            "type": "string"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Name of the pool.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_RefreshStatus": {
            "$ref": "./examples/Pools_RunHealthChecks.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/pools/{poolName}/schedules": {
      "get": {
        "operationId": "Schedules_ListByPool",
        "tags": [
          "Schedules"
        ],
        "description": "Lists schedules for a pool",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project.",
            "required": true,
            "type": "string"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Name of the pool.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScheduleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Schedules_ListByPool": {
            "$ref": "./examples/Schedules_ListByPool.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/pools/{poolName}/schedules/{scheduleName}": {
      "get": {
        "operationId": "Schedules_Get",
        "tags": [
          "Schedules"
        ],
        "description": "Gets a schedule resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project.",
            "required": true,
            "type": "string"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Name of the pool.",
            "required": true,
            "type": "string"
          },
          {
            "name": "scheduleName",
            "in": "path",
            "description": "The name of the schedule that uniquely identifies it.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[-\\w]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Schedules_GetByPool": {
            "$ref": "./examples/Schedules_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Schedules_CreateOrUpdate",
        "tags": [
          "Schedules"
        ],
        "description": "Creates or updates a Schedule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project.",
            "required": true,
            "type": "string"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Name of the pool.",
            "required": true,
            "type": "string"
          },
          {
            "name": "scheduleName",
            "in": "path",
            "description": "The name of the schedule that uniquely identifies it.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[-\\w]+$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents a scheduled task",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Schedule"
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Schedule' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          },
          "201": {
            "description": "Resource 'Schedule' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Schedule"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Schedules_CreateDailyShutdownPoolSchedule": {
            "$ref": "./examples/Schedules_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Schedules_Update",
        "tags": [
          "Schedules"
        ],
        "description": "Partially updates a Scheduled.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project.",
            "required": true,
            "type": "string"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Name of the pool.",
            "required": true,
            "type": "string"
          },
          {
            "name": "scheduleName",
            "in": "path",
            "description": "The name of the schedule that uniquely identifies it.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[-\\w]+$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents a scheduled task.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScheduleUpdate"
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Schedules_Update": {
            "$ref": "./examples/Schedules_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Schedules_Delete",
        "tags": [
          "Schedules"
        ],
        "description": "Deletes a Scheduled.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the project.",
            "required": true,
            "type": "string"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Name of the pool.",
            "required": true,
            "type": "string"
          },
          {
            "name": "scheduleName",
            "in": "path",
            "description": "The name of the schedule that uniquely identifies it.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[-\\w]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Schedules_Delete": {
            "$ref": "./examples/Schedules_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AllowedEnvironmentType": {
      "type": "object",
      "description": "Represents an allowed environment type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AllowedEnvironmentTypeProperties",
          "description": "Properties of an allowed environment type.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AllowedEnvironmentTypeListResult": {
      "type": "object",
      "description": "The response of a AllowedEnvironmentType list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AllowedEnvironmentType items on this page",
          "items": {
            "$ref": "#/definitions/AllowedEnvironmentType"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AllowedEnvironmentTypeProperties": {
      "type": "object",
      "description": "Properties of an allowed environment type.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        }
      }
    },
    "AttachedNetworkConnection": {
      "type": "object",
      "description": "Represents an attached NetworkConnection.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AttachedNetworkConnectionProperties",
          "description": "Attached NetworkConnection properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AttachedNetworkConnectionListResult": {
      "type": "object",
      "description": "The response of a AttachedNetworkConnection list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AttachedNetworkConnection items on this page",
          "items": {
            "$ref": "#/definitions/AttachedNetworkConnection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AttachedNetworkConnectionProperties": {
      "type": "object",
      "description": "Properties of an attached NetworkConnection.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        },
        "networkConnectionId": {
          "type": "string",
          "description": "The resource ID of the NetworkConnection you want to attach.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "networkConnectionLocation": {
          "type": "string",
          "description": "The geo-location where the NetworkConnection resource specified in 'networkConnectionResourceId' property lives.",
          "readOnly": true
        },
        "healthCheckStatus": {
          "$ref": "#/definitions/HealthCheckStatus",
          "description": "Health check status values",
          "readOnly": true
        },
        "domainJoinType": {
          "$ref": "#/definitions/DomainJoinType",
          "description": "AAD Join type of the network. This is populated based on the referenced Network Connection.",
          "readOnly": true
        }
      },
      "required": [
        "networkConnectionId"
      ]
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "Azure.ResourceManager.Foundations.CheckNameAvailabilityReason": {
      "type": "string",
      "description": "Possible reasons for a name not being available.",
      "enum": [
        "Invalid",
        "AlreadyExists"
      ],
      "x-ms-enum": {
        "name": "CheckNameAvailabilityReason",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid",
            "description": "Name is invalid."
          },
          {
            "name": "AlreadyExists",
            "value": "AlreadyExists",
            "description": "Name already exists."
          }
        ]
      }
    },
    "Azure.ResourceManager.Foundations.SkuTier": {
      "type": "string",
      "description": "Available service tiers for the SKU.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": true,
        "values": [
          {
            "name": "Free",
            "value": "Free",
            "description": "The Free service tier."
          },
          {
            "name": "Basic",
            "value": "Basic",
            "description": "The Basic service tier."
          },
          {
            "name": "Standard",
            "value": "Standard",
            "description": "The Standard service tier."
          },
          {
            "name": "Premium",
            "value": "Premium",
            "description": "The Premium service tier."
          }
        ]
      }
    },
    "Azure.ResourceManager.ManagedServiceIdentity": {
      "type": "object",
      "description": "The managed service identities envelope.",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      }
    },
    "Capability": {
      "type": "object",
      "description": "A name/value pair to describe a capability.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the capability.",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "description": "Value of the capability.",
          "readOnly": true
        }
      }
    },
    "Catalog": {
      "type": "object",
      "description": "Represents a catalog.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CatalogProperties",
          "description": "Catalog properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "CatalogListResult": {
      "type": "object",
      "description": "The response of a Catalog list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Catalog items on this page",
          "items": {
            "$ref": "#/definitions/Catalog"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CatalogProperties": {
      "type": "object",
      "description": "Properties of a catalog.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        },
        "syncState": {
          "$ref": "#/definitions/CatalogSyncState",
          "description": "The synchronization state of the catalog.",
          "readOnly": true
        },
        "lastSyncTime": {
          "type": "string",
          "format": "date-time",
          "description": "When the catalog was last synced.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CatalogUpdateProperties"
        }
      ]
    },
    "CatalogSyncState": {
      "type": "string",
      "description": "The synchronization state of the catalog.",
      "enum": [
        "Succeeded",
        "InProgress",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "CatalogSyncState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "CatalogUpdate": {
      "type": "object",
      "description": "The catalog's properties for partial update. Properties not provided in the update request will not be changed.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CatalogUpdateProperties",
          "description": "Catalog properties for update.",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "CatalogUpdateProperties": {
      "type": "object",
      "description": "Properties of a catalog. These properties can be updated after the resource has been created.",
      "properties": {
        "gitHub": {
          "$ref": "#/definitions/GitCatalog",
          "description": "Properties for a GitHub catalog type."
        },
        "adoGit": {
          "$ref": "#/definitions/GitCatalog",
          "description": "Properties for an Azure DevOps catalog type."
        }
      }
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.CheckNameAvailabilityReason",
          "description": "The reason why the given name is not available."
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "CloudError": {
      "type": "object",
      "description": "An error response from the DevCenter service.",
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody",
          "description": "Error body"
        }
      },
      "required": [
        "error"
      ]
    },
    "CloudErrorBody": {
      "type": "object",
      "description": "An error response from the DevCenter service.",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user interface."
        },
        "target": {
          "type": "string",
          "description": "The target of the particular error. For example, the name of the property in error."
        },
        "details": {
          "type": "array",
          "description": "A list of additional details about the error.",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "DevBoxDefinition": {
      "type": "object",
      "description": "Represents a definition for a Developer Machine.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DevBoxDefinitionProperties",
          "description": "Dev Box definition properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DevBoxDefinitionListResult": {
      "type": "object",
      "description": "The response of a DevBoxDefinition list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DevBoxDefinition items on this page",
          "items": {
            "$ref": "#/definitions/DevBoxDefinition"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DevBoxDefinitionProperties": {
      "type": "object",
      "description": "Properties of a Dev Box definition.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        },
        "imageValidationStatus": {
          "$ref": "#/definitions/ImageValidationStatus",
          "description": "Validation status of the configured image.",
          "readOnly": true
        },
        "imageValidationErrorDetails": {
          "$ref": "#/definitions/ImageValidationErrorDetails",
          "description": "Details for image validator error. Populated when the image validation is not successful.",
          "readOnly": true
        },
        "activeImageReference": {
          "$ref": "#/definitions/ImageReference",
          "description": "Image reference information for the currently active image (only populated during updates).",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DevBoxDefinitionUpdateProperties"
        }
      ]
    },
    "DevBoxDefinitionUpdate": {
      "type": "object",
      "description": "Partial update of a Dev Box definition resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DevBoxDefinitionUpdateProperties",
          "description": "Properties of a Dev Box definition to be updated.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResourceUpdate"
        }
      ]
    },
    "DevBoxDefinitionUpdateProperties": {
      "type": "object",
      "description": "Properties of a Dev Box definition. These properties can be updated after the resource has been created.",
      "properties": {
        "imageReference": {
          "$ref": "#/definitions/ImageReference",
          "description": "Image reference information."
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU for Dev Boxes created using this definition."
        },
        "osStorageType": {
          "type": "string",
          "description": "The storage type used for the Operating System disk of Dev Boxes created using this definition."
        },
        "hibernateSupport": {
          "$ref": "#/definitions/HibernateSupport",
          "description": "Indicates whether Dev Boxes created with this definition are capable of hibernation. Not all images are capable of supporting hibernation. To find out more see https://aka.ms/devbox/hibernate"
        }
      }
    },
    "DevCenter": {
      "type": "object",
      "description": "Represents a devcenter resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DevCenterProperties",
          "description": "DevCenter properties",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DevCenterListResult": {
      "type": "object",
      "description": "The response of a DevCenter list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DevCenter items on this page",
          "items": {
            "$ref": "#/definitions/DevCenter"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DevCenterProperties": {
      "type": "object",
      "description": "Properties of the devcenter.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        },
        "devCenterUri": {
          "type": "string",
          "description": "The URI of the Dev Center.",
          "readOnly": true
        }
      }
    },
    "DevCenterSku": {
      "type": "object",
      "description": "The resource model definition representing SKU for DevCenter resources",
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "The name of the resource type",
          "readOnly": true
        },
        "locations": {
          "type": "array",
          "description": "SKU supported locations.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "capabilities": {
          "type": "array",
          "description": "Collection of name/value pairs to describe the SKU capabilities.",
          "items": {
            "$ref": "#/definitions/Capability"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Sku"
        }
      ]
    },
    "DevCenterUpdate": {
      "type": "object",
      "description": "The devcenter resource for partial updates. Properties not provided in the update request will not be changed.",
      "properties": {
        "identity": {
          "$ref": "#/definitions/Azure.ResourceManager.ManagedServiceIdentity",
          "description": "Managed identity properties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResourceUpdate"
        }
      ]
    },
    "DomainJoinType": {
      "type": "string",
      "description": "Active Directory join type",
      "enum": [
        "HybridAzureADJoin",
        "AzureADJoin"
      ],
      "x-ms-enum": {
        "name": "DomainJoinType",
        "modelAsString": true
      }
    },
    "EndpointDependency": {
      "type": "object",
      "description": "A domain name and connection details used to access a dependency.",
      "properties": {
        "domainName": {
          "type": "string",
          "description": "The domain name of the dependency. Domain names may be fully qualified or may contain a * wildcard.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Human-readable supplemental information about the dependency and when it is applicable.",
          "readOnly": true
        },
        "endpointDetails": {
          "type": "array",
          "description": "The list of connection details for this endpoint.",
          "items": {
            "$ref": "#/definitions/EndpointDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "EndpointDetail": {
      "type": "object",
      "description": "Details about the connection between the Batch service and the endpoint.",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "The port an endpoint is connected to.",
          "readOnly": true
        }
      }
    },
    "EnvironmentRole": {
      "type": "object",
      "description": "A role that can be assigned to a user.",
      "properties": {
        "roleName": {
          "type": "string",
          "description": "The common name of the Role Assignment. This is a descriptive name such as 'AcrPush'.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "This is a description of the Role Assignment.",
          "readOnly": true
        }
      }
    },
    "EnvironmentType": {
      "type": "object",
      "description": "Represents an environment type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EnvironmentTypeProperties",
          "description": "Properties of an environment type.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "EnvironmentTypeEnableStatus": {
      "type": "string",
      "description": "Indicates whether the environment type is either enabled or disabled.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "EnvironmentTypeEnableStatus",
        "modelAsString": true
      }
    },
    "EnvironmentTypeListResult": {
      "type": "object",
      "description": "The response of a EnvironmentType list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EnvironmentType items on this page",
          "items": {
            "$ref": "#/definitions/EnvironmentType"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EnvironmentTypeProperties": {
      "type": "object",
      "description": "Properties of an environment type.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        }
      }
    },
    "EnvironmentTypeUpdate": {
      "type": "object",
      "description": "The environment type for partial update. Properties not provided in the update request will not be changed.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Gallery": {
      "type": "object",
      "description": "Represents a gallery.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GalleryProperties",
          "description": "Gallery properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "GalleryListResult": {
      "type": "object",
      "description": "The response of a Gallery list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Gallery items on this page",
          "items": {
            "$ref": "#/definitions/Gallery"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "GalleryProperties": {
      "type": "object",
      "description": "Properties of a gallery.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        },
        "galleryResourceId": {
          "type": "string",
          "description": "The resource ID of the backing Azure Compute Gallery.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "galleryResourceId"
      ]
    },
    "GitCatalog": {
      "type": "object",
      "description": "Properties for a Git repository catalog.",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Git URI."
        },
        "branch": {
          "type": "string",
          "description": "Git branch."
        },
        "secretIdentifier": {
          "type": "string",
          "description": "A reference to the Key Vault secret containing a security token to authenticate to a Git repository."
        },
        "path": {
          "type": "string",
          "description": "The folder where the catalog items can be found inside the repository."
        }
      }
    },
    "HealthCheck": {
      "type": "object",
      "description": "An individual health check item",
      "properties": {
        "status": {
          "$ref": "#/definitions/HealthCheckStatus",
          "description": "The status of the health check item.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The display name of this health check item.",
          "readOnly": true
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of health check item.",
          "readOnly": true
        },
        "endDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "End time of the health check item.",
          "readOnly": true
        },
        "errorType": {
          "type": "string",
          "description": "The type of error that occurred during this health check.",
          "readOnly": true
        },
        "recommendedAction": {
          "type": "string",
          "description": "The recommended action to fix the corresponding error.",
          "readOnly": true
        },
        "additionalDetails": {
          "type": "string",
          "description": "Additional details about the health check or the recommended action.",
          "readOnly": true
        }
      }
    },
    "HealthCheckStatus": {
      "type": "string",
      "description": "Health check status values",
      "enum": [
        "Unknown",
        "Pending",
        "Running",
        "Passed",
        "Warning",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "HealthCheckStatus",
        "modelAsString": true
      }
    },
    "HealthCheckStatusDetails": {
      "type": "object",
      "description": "Health Check details.",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/HealthCheckStatusDetailsProperties",
          "description": "Health check status details properties.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "HealthCheckStatusDetailsListResult": {
      "type": "object",
      "description": "The response of a HealthCheckStatusDetails list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The HealthCheckStatusDetails items on this page",
          "items": {
            "$ref": "#/definitions/HealthCheckStatusDetails"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "HealthCheckStatusDetailsProperties": {
      "type": "object",
      "description": "Health Check properties.",
      "properties": {
        "startDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of last execution of the health checks.",
          "readOnly": true
        },
        "endDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "End time of last execution of the health checks.",
          "readOnly": true
        },
        "healthChecks": {
          "type": "array",
          "description": "Details for each health check item.",
          "items": {
            "$ref": "#/definitions/HealthCheck"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "HealthStatus": {
      "type": "string",
      "description": "Health status indicating whether a pool is available to create Dev Boxes.",
      "enum": [
        "Unknown",
        "Pending",
        "Healthy",
        "Warning",
        "Unhealthy"
      ],
      "x-ms-enum": {
        "name": "HealthStatus",
        "modelAsString": true
      }
    },
    "HealthStatusDetail": {
      "type": "object",
      "description": "Pool health status detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the issue.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "A message describing the issue, intended to be suitable for display in a user interface",
          "readOnly": true
        }
      }
    },
    "HibernateSupport": {
      "type": "string",
      "description": "Indicates whether hibernate is enabled/disabled.",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "HibernateSupport",
        "modelAsString": true
      }
    },
    "Image": {
      "type": "object",
      "description": "Represents an image.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ImageProperties",
          "description": "Image properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ImageListResult": {
      "type": "object",
      "description": "The response of a Image list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Image items on this page",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ImageProperties": {
      "type": "object",
      "description": "Properties of an image.",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the image.",
          "readOnly": true
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the image.",
          "readOnly": true
        },
        "offer": {
          "type": "string",
          "description": "The name of the image offer.",
          "readOnly": true
        },
        "sku": {
          "type": "string",
          "description": "The SKU name for the image.",
          "readOnly": true
        },
        "recommendedMachineConfiguration": {
          "$ref": "#/definitions/RecommendedMachineConfiguration",
          "description": "The recommended machine configuration to use with the image.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        },
        "hibernateSupport": {
          "$ref": "#/definitions/HibernateSupport",
          "description": "Indicates whether this image has hibernate enabled. Not all images are capable of supporting hibernation. To find out more see https://aka.ms/devbox/hibernate",
          "readOnly": true
        }
      }
    },
    "ImageReference": {
      "type": "object",
      "description": "Image reference information",
      "properties": {
        "id": {
          "type": "string",
          "description": "Image ID, or Image version ID. When Image ID is provided, its latest version will be used."
        },
        "exactVersion": {
          "type": "string",
          "description": "The actual version of the image after use. When id references a gallery image latest version, this will indicate the actual version in use.",
          "readOnly": true
        }
      }
    },
    "ImageValidationErrorDetails": {
      "type": "object",
      "description": "Image validation error details",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error."
        }
      }
    },
    "ImageValidationStatus": {
      "type": "string",
      "description": "Image validation status",
      "enum": [
        "Unknown",
        "Pending",
        "Succeeded",
        "Failed",
        "TimedOut"
      ],
      "x-ms-enum": {
        "name": "ImageValidationStatus",
        "modelAsString": true
      },
      "readOnly": true
    },
    "ImageVersion": {
      "type": "object",
      "description": "Represents an image version.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ImageVersionProperties",
          "description": "Image version properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ImageVersionListResult": {
      "type": "object",
      "description": "The response of a ImageVersion list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ImageVersion items on this page",
          "items": {
            "$ref": "#/definitions/ImageVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ImageVersionProperties": {
      "type": "object",
      "description": "Properties of an image version.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The semantic version string.",
          "readOnly": true
        },
        "publishedDate": {
          "type": "string",
          "format": "date-time",
          "description": "The datetime that the backing image version was published.",
          "readOnly": true
        },
        "excludeFromLatest": {
          "type": "boolean",
          "description": "If the version should be excluded from being treated as the latest version.",
          "readOnly": true
        },
        "osDiskImageSizeInGb": {
          "type": "integer",
          "format": "int32",
          "description": "The size of the OS disk image, in GB.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        }
      }
    },
    "LicenseType": {
      "type": "string",
      "description": "License Types",
      "enum": [
        "Windows_Client"
      ],
      "x-ms-enum": {
        "name": "LicenseType",
        "modelAsString": true
      }
    },
    "LocalAdminStatus": {
      "type": "string",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "LocalAdminStatus",
        "modelAsString": true
      }
    },
    "ManagedServiceIdentityType": {
      "type": "string",
      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
      "enum": [
        "None",
        "SystemAssigned",
        "UserAssigned",
        "SystemAssigned, UserAssigned"
      ],
      "x-ms-enum": {
        "name": "ManagedServiceIdentityType",
        "modelAsString": true
      }
    },
    "NetworkConnection": {
      "type": "object",
      "description": "Network related settings",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkProperties",
          "description": "Properties of a Network Connection",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "NetworkConnectionListResult": {
      "type": "object",
      "description": "The response of a NetworkConnection list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NetworkConnection items on this page",
          "items": {
            "$ref": "#/definitions/NetworkConnection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NetworkConnectionUpdate": {
      "type": "object",
      "description": "The network connection properties for partial update. Properties not provided in the update request will not be changed.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkConnectionUpdateProperties",
          "description": "Properties of a network connection resource to be updated.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResourceUpdate"
        }
      ]
    },
    "NetworkConnectionUpdateProperties": {
      "type": "object",
      "description": "Properties of network connection. These properties can be updated after the resource has been created.",
      "properties": {
        "subnetId": {
          "type": "string",
          "description": "The subnet to attach Virtual Machines to"
        },
        "domainName": {
          "type": "string",
          "description": "Active Directory domain name"
        },
        "organizationUnit": {
          "type": "string",
          "description": "Active Directory domain Organization Unit (OU)"
        },
        "domainUsername": {
          "type": "string",
          "description": "The username of an Active Directory account (user or service account) that has permissions to create computer objects in Active Directory. Required format: admin"
        },
        "domainPassword": {
          "type": "string",
          "description": "The password for the account used to join domain"
        }
      }
    },
    "NetworkProperties": {
      "type": "object",
      "description": "Network properties",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        },
        "healthCheckStatus": {
          "$ref": "#/definitions/HealthCheckStatus",
          "description": "Overall health status of the network connection. Health checks are run on creation, update, and periodically to validate the network connection.",
          "readOnly": true
        },
        "networkingResourceGroupName": {
          "type": "string",
          "description": "The name for resource group where NICs will be placed.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "domainJoinType": {
          "$ref": "#/definitions/DomainJoinType",
          "description": "AAD Join type.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "domainJoinType"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/NetworkConnectionUpdateProperties"
        }
      ]
    },
    "OperationStatus": {
      "type": "object",
      "description": "The current status of an async operation",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The id of the resource.",
          "readOnly": true
        },
        "properties": {
          "type": "object",
          "description": "Custom operation properties, populated only for a successful operation.",
          "additionalProperties": {},
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/OperationStatusResult"
        }
      ]
    },
    "OutboundEnvironmentEndpoint": {
      "type": "object",
      "description": "A collection of related endpoints from the same service for which the agent requires outbound access.",
      "properties": {
        "category": {
          "type": "string",
          "description": "The type of service that the agent connects to.",
          "readOnly": true
        },
        "endpoints": {
          "type": "array",
          "description": "The endpoints for this service for which the agent requires outbound access.",
          "items": {
            "$ref": "#/definitions/EndpointDependency"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "PagedDevCenterSku": {
      "type": "object",
      "description": "Results of the Microsoft.DevCenter SKU list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DevCenterSku items on this page",
          "items": {
            "$ref": "#/definitions/DevCenterSku"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedOutboundEnvironmentEndpoint": {
      "type": "object",
      "description": "Values returned by the List operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The OutboundEnvironmentEndpoint items on this page",
          "items": {
            "$ref": "#/definitions/OutboundEnvironmentEndpoint"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedUsage": {
      "type": "object",
      "description": "List of Core Usages.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Usage items on this page",
          "items": {
            "$ref": "#/definitions/Usage"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "Pool": {
      "type": "object",
      "description": "A pool of Virtual Machines.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PoolProperties",
          "description": "Pool properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "PoolListResult": {
      "type": "object",
      "description": "The response of a Pool list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Pool items on this page",
          "items": {
            "$ref": "#/definitions/Pool"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PoolProperties": {
      "type": "object",
      "description": "Properties of a Pool",
      "properties": {
        "healthStatus": {
          "$ref": "#/definitions/HealthStatus",
          "description": "Overall health status of the Pool. Indicates whether or not the Pool is available to create Dev Boxes.",
          "readOnly": true
        },
        "healthStatusDetails": {
          "type": "array",
          "description": "Details on the Pool health status to help diagnose issues. This is only populated when the pool status indicates the pool is in a non-healthy state",
          "items": {
            "$ref": "#/definitions/HealthStatusDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PoolUpdateProperties"
        }
      ]
    },
    "PoolUpdate": {
      "type": "object",
      "description": "The pool properties for partial update. Properties not provided in the update request will not be changed.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PoolUpdateProperties",
          "description": "Properties of a pool to be updated.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResourceUpdate"
        }
      ]
    },
    "PoolUpdateProperties": {
      "type": "object",
      "description": "Properties of a Pool. These properties can be updated after the resource has been created.",
      "properties": {
        "devBoxDefinitionName": {
          "type": "string",
          "description": "Name of a Dev Box definition in parent Project of this Pool"
        },
        "networkConnectionName": {
          "type": "string",
          "description": "Name of a Network Connection in parent Project of this Pool"
        },
        "licenseType": {
          "$ref": "#/definitions/LicenseType",
          "description": "Specifies the license type indicating the caller has already acquired licenses for the Dev Boxes that will be created."
        },
        "localAdministrator": {
          "$ref": "#/definitions/LocalAdminStatus",
          "description": "Indicates whether owners of Dev Boxes in this pool are added as local administrators on the Dev Box."
        },
        "stopOnDisconnect": {
          "$ref": "#/definitions/StopOnDisconnectConfiguration",
          "description": "Stop on disconnect configuration settings for Dev Boxes created in this pool."
        }
      }
    },
    "Project": {
      "type": "object",
      "description": "Represents a project resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProjectProperties",
          "description": "Properties of a project.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ProjectEnvironmentType": {
      "type": "object",
      "description": "Represents an environment type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProjectEnvironmentTypeProperties",
          "description": "Properties of an environment type.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ProjectEnvironmentTypeListResult": {
      "type": "object",
      "description": "The response of a ProjectEnvironmentType list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ProjectEnvironmentType items on this page",
          "items": {
            "$ref": "#/definitions/ProjectEnvironmentType"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ProjectEnvironmentTypeProperties": {
      "type": "object",
      "description": "Properties of a project environment type.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProjectEnvironmentTypeUpdateProperties"
        }
      ]
    },
    "ProjectEnvironmentTypeUpdate": {
      "type": "object",
      "description": "The project environment type for partial update. Properties not provided in the update request will not be changed.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProjectEnvironmentTypeUpdateProperties",
          "description": "Properties to configure an environment type.",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "$ref": "#/definitions/Azure.ResourceManager.ManagedServiceIdentity",
          "description": "Managed identity properties"
        }
      }
    },
    "ProjectEnvironmentTypeUpdateProperties": {
      "type": "object",
      "description": "Properties of a project environment type. These properties can be updated after the resource has been created.",
      "properties": {
        "deploymentTargetId": {
          "type": "string",
          "description": "Id of a subscription that the environment type will be mapped to. The environment's resources will be deployed into this subscription."
        },
        "status": {
          "$ref": "#/definitions/EnvironmentTypeEnableStatus",
          "description": "Defines whether this Environment Type can be used in this Project."
        },
        "creatorRoleAssignment": {
          "$ref": "#/definitions/ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment",
          "description": "The role definition assigned to the environment creator on backing resources."
        },
        "userRoleAssignments": {
          "type": "object",
          "description": "Role Assignments created on environment backing resources. This is a mapping from a user object ID to an object of role definition IDs.",
          "additionalProperties": {
            "$ref": "#/definitions/UserRoleAssignmentValue"
          }
        }
      }
    },
    "ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment": {
      "type": "object",
      "description": "The role definition assigned to the environment creator on backing resources.",
      "properties": {
        "roles": {
          "type": "object",
          "description": "A map of roles to assign to the environment creator.",
          "additionalProperties": {
            "$ref": "#/definitions/EnvironmentRole"
          }
        }
      }
    },
    "ProjectListResult": {
      "type": "object",
      "description": "The response of a Project list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Project items on this page",
          "items": {
            "$ref": "#/definitions/Project"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ProjectProperties": {
      "type": "object",
      "description": "Properties of a project.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        },
        "devCenterUri": {
          "type": "string",
          "description": "The URI of the Dev Center resource this project is associated with.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProjectUpdateProperties"
        }
      ]
    },
    "ProjectUpdate": {
      "type": "object",
      "description": "The project properties for partial update. Properties not provided in the update request will not be changed.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProjectUpdateProperties",
          "description": "Properties of a project to be updated.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResourceUpdate"
        }
      ]
    },
    "ProjectUpdateProperties": {
      "type": "object",
      "description": "Properties of a project. These properties can be updated after the resource has been created.",
      "properties": {
        "devCenterId": {
          "type": "string",
          "description": "Resource Id of an associated DevCenter"
        },
        "description": {
          "type": "string",
          "description": "Description of the project."
        },
        "maxDevBoxesPerUser": {
          "type": "integer",
          "format": "int32",
          "description": "When specified, limits the maximum number of Dev Boxes a single user can create across all pools in the project. This will have no effect on existing Dev Boxes when reduced."
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the resource.",
      "enum": [
        "NotSpecified",
        "Accepted",
        "Running",
        "Creating",
        "Created",
        "Updating",
        "Updated",
        "Deleting",
        "Deleted",
        "Succeeded",
        "Failed",
        "Canceled",
        "MovingResources",
        "TransientFailure",
        "RolloutInProgress",
        "StorageProvisioningFailed"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "RecommendedMachineConfiguration": {
      "type": "object",
      "description": "Properties for a recommended machine configuration.",
      "properties": {
        "memory": {
          "$ref": "#/definitions/ResourceRange",
          "description": "Recommended memory range.",
          "readOnly": true
        },
        "vCPUs": {
          "$ref": "#/definitions/ResourceRange",
          "description": "Recommended vCPU range.",
          "readOnly": true
        }
      }
    },
    "Resource": {
      "type": "object",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      }
    },
    "ResourceRange": {
      "type": "object",
      "description": "Properties for a range of values.",
      "properties": {
        "min": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum value.",
          "readOnly": true
        },
        "max": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum value.",
          "readOnly": true
        }
      }
    },
    "Schedule": {
      "type": "object",
      "description": "Represents a Schedule to execute a task.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScheduleProperties",
          "description": "Properties of a Schedule resource",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ScheduleEnableStatus": {
      "type": "string",
      "description": "Schedule enable or disable status. Indicates whether the schedule applied to is either enabled or disabled.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "ScheduleEnableStatus",
        "modelAsString": true
      }
    },
    "ScheduleListResult": {
      "type": "object",
      "description": "The response of a Schedule list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Schedule items on this page",
          "items": {
            "$ref": "#/definitions/Schedule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ScheduleProperties": {
      "type": "object",
      "description": "The Schedule properties defining when and what to execute.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ScheduleUpdateProperties"
        }
      ]
    },
    "ScheduleUpdate": {
      "type": "object",
      "description": "The schedule properties for partial update. Properties not provided in the update request will not be changed.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScheduleUpdateProperties",
          "description": "Properties of a schedule resource to be updated.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResourceUpdate"
        }
      ]
    },
    "ScheduleUpdateProperties": {
      "type": "object",
      "description": "Updatable properties of a Schedule.",
      "properties": {
        "type": {
          "$ref": "#/definitions/ScheduledType",
          "description": "Supported type this scheduled task represents.",
          "x-ms-client-name": "scheduledType"
        },
        "frequency": {
          "$ref": "#/definitions/ScheduledFrequency",
          "description": "The frequency of this scheduled task."
        },
        "time": {
          "type": "string",
          "description": "The target time to trigger the action. The format is HH:MM."
        },
        "timeZone": {
          "type": "string",
          "description": "The IANA timezone id at which the schedule should execute."
        },
        "state": {
          "$ref": "#/definitions/ScheduleEnableStatus",
          "description": "Indicates whether or not this scheduled task is enabled."
        }
      }
    },
    "ScheduledFrequency": {
      "type": "string",
      "description": "The frequency of task execution.",
      "enum": [
        "Daily"
      ],
      "x-ms-enum": {
        "name": "ScheduledFrequency",
        "modelAsString": true
      }
    },
    "ScheduledType": {
      "type": "string",
      "description": "The supported types for a scheduled task.",
      "enum": [
        "StopDevBox"
      ],
      "x-ms-enum": {
        "name": "ScheduledType",
        "modelAsString": true
      }
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.SkuTier",
          "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code."
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "StopOnDisconnectConfiguration": {
      "type": "object",
      "description": "Stop on disconnect configuration settings for Dev Boxes created in this pool.",
      "properties": {
        "status": {
          "$ref": "#/definitions/StopOnDisconnectEnableStatus",
          "description": "Whether the feature to stop the Dev Box on disconnect once the grace period has lapsed is enabled."
        },
        "gracePeriodMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "The specified time in minutes to wait before stopping a Dev Box once disconnect is detected."
        }
      }
    },
    "StopOnDisconnectEnableStatus": {
      "type": "string",
      "description": "Stop on disconnect enable or disable status. Indicates whether stop on disconnect to is either enabled or disabled.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "StopOnDisconnectEnableStatus",
        "modelAsString": true
      }
    },
    "TrackedResourceUpdate": {
      "type": "object",
      "description": "Base tracked resource type for PATCH updates",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "Usage": {
      "type": "object",
      "description": "The core usage details.",
      "properties": {
        "currentValue": {
          "type": "integer",
          "format": "int64",
          "description": "The current usage."
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "The limit integer."
        },
        "unit": {
          "$ref": "#/definitions/UsageUnit",
          "description": "The unit details."
        },
        "name": {
          "$ref": "#/definitions/UsageName",
          "description": "The name."
        }
      }
    },
    "UsageName": {
      "type": "object",
      "description": "The Usage Names.",
      "properties": {
        "localizedValue": {
          "type": "string",
          "description": "The localized name of the resource."
        },
        "value": {
          "type": "string",
          "description": "The name of the resource."
        }
      }
    },
    "UsageUnit": {
      "type": "string",
      "description": "The unit details.",
      "enum": [
        "Count"
      ],
      "x-ms-enum": {
        "name": "UsageUnit",
        "modelAsString": true
      }
    },
    "UserRoleAssignmentValue": {
      "type": "object",
      "description": "Mapping of user object ID to role assignments.",
      "properties": {
        "roles": {
          "type": "object",
          "description": "A map of roles to assign to the parent user.",
          "additionalProperties": {
            "$ref": "#/definitions/EnvironmentRole"
          }
        }
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2023-04-01"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2023_04_01",
            "value": "2023-04-01",
            "description": "The 2023-04-01 API version."
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
