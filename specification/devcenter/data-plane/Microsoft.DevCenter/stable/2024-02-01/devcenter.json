{
  "swagger": "2.0",
  "info": {
    "title": "DevCenter",
    "version": "2024-02-01",
    "description": "DevCenter service",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "endpoint",
        "in": "path",
        "description": "The DevCenter-specific URI to operate on.",
        "required": true,
        "type": "string"
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "OAuth2Auth": [
        "https://devcenter.azure.com/.default"
      ]
    }
  ],
  "securityDefinitions": {
    "OAuth2Auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "https://devcenter.azure.com/.default": ""
      }
    }
  },
  "tags": [],
  "paths": {
    "/projects": {
      "get": {
        "operationId": "DevCenter_ListProjects",
        "description": "Lists all projects.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedProject"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Lists all projects in a Dev Center.": {
            "$ref": "./examples/DevCenter_ListProjects.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}": {
      "get": {
        "operationId": "DevCenter_GetProject",
        "description": "Gets a project.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Gets a project.": {
            "$ref": "./examples/DevCenter_GetProject.json"
          }
        }
      }
    }
  },
  "definitions": {
    "APIVersions": {
      "type": "string",
      "description": "DevCenter API versions",
      "enum": [
        "2024-02-01"
      ],
      "x-ms-enum": {
        "name": "APIVersions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2024_02_01",
            "value": "2024-02-01",
            "description": "The 2024-02-01 service API version"
          }
        ]
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "OperationStatus": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified ID for the operation status.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The operation id name."
        },
        "status": {
          "$ref": "#/definitions/OperationStatusValue",
          "description": "Provisioning state of the resource."
        },
        "resourceId": {
          "type": "string",
          "description": "The id of the resource."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "percentComplete": {
          "type": "number",
          "format": "double",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "properties": {
          "description": "Custom operation properties, populated only for a successful operation."
        },
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "Operation Error message."
        }
      },
      "required": [
        "id",
        "status"
      ]
    },
    "OperationStatusValue": {
      "type": "string",
      "description": "Indicates whether operation status is running, completed, canceled or failed.",
      "enum": [
        "Running",
        "Completed",
        "Canceled",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "OperationStatusValue",
        "modelAsString": true,
        "values": [
          {
            "name": "Running",
            "value": "Running",
            "description": "Operation is in progress."
          },
          {
            "name": "Completed",
            "value": "Completed",
            "description": "Operation is completed with success."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Operation was canceled."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Operation failed."
          }
        ]
      }
    },
    "PagedProject": {
      "type": "object",
      "description": "Paged collection of Project items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Project items on this page",
          "items": {
            "$ref": "#/definitions/Project"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "Project": {
      "type": "object",
      "description": "Project details.",
      "properties": {
        "uri": {
          "type": "string",
          "format": "uri",
          "description": "The unique URI of the project."
        },
        "name": {
          "type": "string",
          "description": "Name of the project.",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of the project."
        },
        "maxDevBoxesPerUser": {
          "type": "integer",
          "format": "int32",
          "description": "When specified, indicates the maximum number of Dev Boxes a single user can\ncreate across all pools in the project.",
          "minimum": 0
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the pool."
        }
      },
      "required": [
        "uri",
        "name"
      ]
    },
    "User": {
      "type": "object",
      "description": "Project user.",
      "properties": {
        "userId": {
          "type": "string",
          "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
          "minLength": 2,
          "maxLength": 36,
          "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$",
          "readOnly": true
        }
      },
      "required": [
        "userId"
      ]
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
