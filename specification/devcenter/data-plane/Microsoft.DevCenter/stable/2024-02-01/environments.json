{
  "swagger": "2.0",
  "info": {
    "title": "DevCenter",
    "version": "2024-02-01",
    "description": "DevCenter service",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "endpoint",
        "in": "path",
        "description": "The DevCenter-specific URI to operate on.",
        "required": true,
        "type": "string"
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "OAuth2Auth": [
        "https://devcenter.azure.com/.default"
      ]
    }
  ],
  "securityDefinitions": {
    "OAuth2Auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "https://devcenter.azure.com/.default": ""
      }
    }
  },
  "tags": [],
  "paths": {
    "/projects/{projectName}/catalogs": {
      "get": {
        "operationId": "Environments_ListCatalogsByProject",
        "description": "Lists all of the catalogs available for a project.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedCatalog"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Lists all of the catalogs available for a project.": {
            "$ref": "./examples/Environments_ListCatalogsByProject.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/catalogs/{catalogName}": {
      "get": {
        "operationId": "Environments_GetCatalog",
        "description": "Gets the specified catalog within the project.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "catalogName",
            "in": "path",
            "description": "Name of the catalog.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Gets the specified catalog within the project.": {
            "$ref": "./examples/Environments_GetCatalog.json"
          }
        }
      }
    },
    "/projects/{projectName}/catalogs/{catalogName}/environmentDefinitions": {
      "get": {
        "operationId": "Environments_ListEnvironmentDefinitionsByCatalog",
        "description": "Lists all environment definitions available within a catalog.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string"
          },
          {
            "name": "catalogName",
            "in": "path",
            "description": "The name of the catalog",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEnvironmentDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Lists all environment definitions available within a catalog.": {
            "$ref": "./examples/Environments_ListEnvironmentDefinitionsByCatalog.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/catalogs/{catalogName}/environmentDefinitions/{definitionName}": {
      "get": {
        "operationId": "Environments_GetEnvironmentDefinition",
        "description": "Get an environment definition from a catalog.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "catalogName",
            "in": "path",
            "description": "Name of the catalog.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "definitionName",
            "in": "path",
            "description": "Name of the environment definition.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EnvironmentDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Get an environment definition from a catalog.": {
            "$ref": "./examples/Environments_GetEnvironmentDefinition.json"
          }
        }
      }
    },
    "/projects/{projectName}/environmentDefinitions": {
      "get": {
        "operationId": "Environments_ListEnvironmentDefinitionsByProject",
        "description": "Lists all environment definitions available for a project.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEnvironmentDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Lists all environment definitions available for a project.": {
            "$ref": "./examples/Environments_ListEnvironmentDefinitionsByProject.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/environmentTypes": {
      "get": {
        "operationId": "Environments_ListEnvironmentTypes",
        "description": "Lists all environment types configured for a project.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEnvironmentType"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Lists all environment types configured for a project.": {
            "$ref": "./examples/Environments_ListEnvironmentTypes.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/environments": {
      "get": {
        "operationId": "Environments_ListEnvironments",
        "description": "Lists the environments for a project.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEnvironment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Lists all environment definitions available for a project.": {
            "$ref": "./examples/Environments_ListEnvironments.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/operationstatuses/{operationId}": {
      "get": {
        "operationId": "OperationStatuses_Get",
        "description": "Get the status of an operation.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Fully qualified ID for the operation status.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Get the status of an operation.": {
            "$ref": "./examples/OperationStatuses_Get.json"
          }
        }
      }
    },
    "/projects/{projectName}/users/{userId}/environments": {
      "get": {
        "operationId": "Environments_ListEnvironmentsByUser",
        "description": "Lists the environments for a project and user.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEnvironment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Lists the environments for a project and user.": {
            "$ref": "./examples/Environments_ListEnvironmentsByUser.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/users/{userId}/environments/{environmentName}": {
      "get": {
        "operationId": "Environments_GetEnvironmentByUser",
        "description": "Gets an environment.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Environment name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Gets an environment.": {
            "$ref": "./examples/Environments_GetEnvironmentByUser.json"
          }
        }
      },
      "put": {
        "operationId": "Environments_CreateOrReplaceEnvironment",
        "description": "Creates or updates an environment.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The name of the environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents an environment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/Environment"
            },
            "headers": {
              "Operation-Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Creates or updates an environment.": {
            "$ref": "./examples/Environments_CreateOrReplaceEnvironment.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Environments_PatchEnvironment",
        "description": "Partially updates an environment.",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The name of the environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents an environment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Partially updates an environment.": {
            "$ref": "./examples/Environments_PatchEnvironment.json"
          }
        }
      },
      "delete": {
        "operationId": "Environments_DeleteEnvironment",
        "description": "Deletes an environment and all its associated resources",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The name of the environment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            },
            "headers": {
              "Location": {
                "type": "string"
              },
              "Operation-Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Deletes an environment and all its associated resources.": {
            "$ref": "./examples/Environments_DeleteEnvironment.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/projects/{projectName}/users/{userId}/environments/{environmentName}/actions": {
      "get": {
        "operationId": "Environments_ListActions",
        "description": "Get all scheduled actions for a user within an environment.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Environment name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEnvironmentAction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Get all scheduled actions for a user within an environment.": {
            "$ref": "./examples/Environments_ListActions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/users/{userId}/environments/{environmentName}/actions/{actionName}": {
      "get": {
        "operationId": "Environments_GetAction",
        "description": "Retrieve a specific environment action.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Environment name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "actionName",
            "in": "path",
            "description": "Uniquely identifies the action.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EnvironmentAction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Retrieve a specific environment action.": {
            "$ref": "./examples/Environments_GetAction.json"
          }
        }
      }
    },
    "/projects/{projectName}/users/{userId}/environments/{environmentName}/actions/{actionName}:skip": {
      "post": {
        "operationId": "Environments_SkipAction",
        "description": "Skips an occurrence of an action.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Environment name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "actionName",
            "in": "path",
            "description": "Uniquely identifies the action.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Skips an occurrence of an action.": {
            "$ref": "./examples/Environments_SkipAction.json"
          }
        }
      }
    },
    "/projects/{projectName}/users/{userId}/environments/{environmentName}/actions/{actionName}:delay": {
      "post": {
        "operationId": "Environments_DelayAction",
        "description": "Delays the occurrence of an action.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Environment name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "actionName",
            "in": "path",
            "description": "Uniquely identifies the action.",
            "required": true,
            "type": "string"
          },
          {
            "name": "until",
            "in": "query",
            "description": "The time to delay the Environment action until.",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EnvironmentAction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Delays the occurrence of an action.": {
            "$ref": "./examples/Environments_DelayAction.json"
          }
        }
      }
    },
    "/projects/{projectName}/users/{userId}/environments/{environmentName}/operations": {
      "get": {
        "operationId": "Environments_ListOperations",
        "description": "Lists operations on the environment which have occurred within the past 90 days",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Environment name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEnvironmentOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Lists operations on the environment which have occurred within the past 90 days.": {
            "$ref": "./examples/Environments_ListOperations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/users/{userId}/environments/{environmentName}/operations/{operationId}": {
      "get": {
        "operationId": "Environments_GetOperation",
        "description": "Gets an environment action result.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Environment name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Unique identifier for the environment operation.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EnvironmentOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Gets an environment action result.": {
            "$ref": "./examples/Environments_GetOperation.json"
          }
        }
      }
    },
    "/projects/{projectName}/users/{userId}/environments/{environmentName}/operations/{operationId}/logs": {
      "get": {
        "operationId": "Environments_GetLogsByOperation",
        "description": "Gets the logs for an operation on an environment.",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The name of the environment.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The id of the operation on an environment.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Gets the logs for an operation on an environment.": {
            "$ref": "./examples/Environments_GetLogsByOperation.json"
          }
        }
      }
    },
    "/projects/{projectName}/users/{userId}/environments/{environmentName}/outputs": {
      "get": {
        "operationId": "Environments_GetOutputs",
        "description": "Gets Outputs from the environment.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The name of the environment.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EnvironmentOutputs"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Gets Outputs from the environment.": {
            "$ref": "./examples/Environments_GetOutputs.json"
          }
        }
      }
    }
  },
  "definitions": {
    "APIVersions": {
      "type": "string",
      "description": "DevCenter API versions",
      "enum": [
        "2024-02-01"
      ],
      "x-ms-enum": {
        "name": "APIVersions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2024_02_01",
            "value": "2024-02-01",
            "description": "The 2024-02-01 service API version"
          }
        ]
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "Azure.Core.uuid": {
      "type": "string",
      "format": "uuid",
      "description": "Universally Unique Identifier"
    },
    "Catalog": {
      "type": "object",
      "description": "A catalog.",
      "properties": {
        "uri": {
          "type": "string",
          "format": "uri",
          "description": "The unique URI of the catalog."
        },
        "name": {
          "type": "string",
          "description": "Name of the catalog.",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
          "readOnly": true
        }
      },
      "required": [
        "uri",
        "name"
      ]
    },
    "Environment": {
      "type": "object",
      "description": "Properties of an environment.",
      "properties": {
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The time the expiration date will be triggered (UTC), after which the\nenvironment and associated resources will be deleted."
        },
        "parameters": {
          "type": "object",
          "description": "Parameters object for the environment.",
          "additionalProperties": {}
        },
        "uri": {
          "type": "string",
          "format": "uri",
          "description": "The unique URI of the environment.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Environment name.",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
          "readOnly": true
        },
        "environmentType": {
          "type": "string",
          "description": "Environment type.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "user": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "The AAD object id of the owner of this Environment.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/EnvironmentProvisioningState",
          "description": "The provisioning state of the environment.",
          "readOnly": true
        },
        "resourceGroupId": {
          "type": "string",
          "description": "The identifier of the resource group containing the environment's resources.",
          "readOnly": true
        },
        "catalogName": {
          "type": "string",
          "description": "Name of the catalog.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "environmentDefinitionName": {
          "type": "string",
          "description": "Name of the environment definition.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "Provisioning error details. Populated only for error states.",
          "readOnly": true
        }
      },
      "required": [
        "uri",
        "name",
        "environmentType",
        "catalogName",
        "environmentDefinitionName"
      ]
    },
    "EnvironmentAction": {
      "type": "object",
      "description": "An upcoming Environment Action.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Uniquely identifies the action.",
          "readOnly": true
        },
        "uri": {
          "type": "string",
          "format": "uri",
          "description": "Uri of the action resource.",
          "readOnly": true
        },
        "actionType": {
          "$ref": "#/definitions/EnvironmentActionType",
          "description": "The action that will be taken."
        },
        "next": {
          "$ref": "#/definitions/EnvironmentNextAction",
          "description": "Details about the next run of this action."
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "Object Id of the user who last modified the action.",
          "readOnly": true
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time the object was last modified."
        }
      },
      "required": [
        "name",
        "actionType"
      ]
    },
    "EnvironmentActionType": {
      "type": "string",
      "description": "The scheduled action types.",
      "enum": [
        "Delete"
      ],
      "x-ms-enum": {
        "name": "EnvironmentActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "Delete",
            "value": "Delete",
            "description": "The action will delete the environment and associated resources."
          }
        ]
      }
    },
    "EnvironmentDefinition": {
      "type": "object",
      "description": "An environment definition.",
      "properties": {
        "uri": {
          "type": "string",
          "format": "uri",
          "description": "The unique URI of the environment definition."
        },
        "id": {
          "type": "string",
          "description": "The ID of the environment definition."
        },
        "name": {
          "type": "string",
          "description": "Name of the environment definition.",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
          "readOnly": true
        },
        "catalogName": {
          "type": "string",
          "description": "Name of the catalog."
        },
        "description": {
          "type": "string",
          "description": "A short description of the environment definition."
        },
        "parameters": {
          "type": "array",
          "description": "Input parameters passed to an environment.",
          "items": {
            "$ref": "#/definitions/EnvironmentDefinitionParameter"
          }
        },
        "parametersSchema": {
          "type": "string",
          "description": "JSON schema defining the parameters object passed to an environment."
        },
        "templatePath": {
          "type": "string",
          "description": "Path to the Environment Definition entrypoint file."
        }
      },
      "required": [
        "uri",
        "id",
        "name",
        "catalogName"
      ]
    },
    "EnvironmentDefinitionParameter": {
      "type": "object",
      "description": "Properties of an Environment Definition parameter",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique ID of the parameter."
        },
        "name": {
          "type": "string",
          "description": "Display name of the parameter."
        },
        "description": {
          "type": "string",
          "description": "Description of the parameter."
        },
        "default": {
          "type": "string",
          "description": "Default value of the parameter."
        },
        "type": {
          "$ref": "#/definitions/ParameterType",
          "description": "A string of one of the basic JSON types (number, integer, array, object,\nboolean, string)."
        },
        "readOnly": {
          "type": "boolean",
          "description": "Whether or not this parameter is read-only.  If true, default should have a\nvalue."
        },
        "required": {
          "type": "boolean",
          "description": "Whether or not this parameter is required."
        },
        "allowed": {
          "type": "array",
          "description": "An array of allowed values.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "type",
        "required"
      ]
    },
    "EnvironmentDeleteOperation": {
      "type": "object",
      "description": "Information about a delete operation on an environment.",
      "allOf": [
        {
          "$ref": "#/definitions/EnvironmentOperation"
        }
      ],
      "x-ms-discriminator-value": "Delete"
    },
    "EnvironmentDeployOperation": {
      "type": "object",
      "description": "Information about a deploy operation on an environment.",
      "allOf": [
        {
          "$ref": "#/definitions/EnvironmentOperation"
        }
      ],
      "x-ms-discriminator-value": "Deploy"
    },
    "EnvironmentNextAction": {
      "type": "object",
      "description": "Details about the next run of an action.",
      "properties": {
        "scheduledTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time the action will be triggered (UTC)."
        }
      }
    },
    "EnvironmentOperation": {
      "type": "object",
      "description": "Information about an operation on an environment.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Discriminator property for EnvironmentOperation."
        },
        "uri": {
          "type": "string",
          "format": "uri",
          "description": "The unique URI for the environment operation."
        },
        "operationId": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "Unique identifier for the environment operation.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/EnvironmentOperationStatus",
          "description": "The operation status."
        },
        "createdByObjectId": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "The object ID of the actor which initiated the operation."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time the operation started."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time the operation finished."
        },
        "environmentParameters": {
          "type": "object",
          "description": "Parameters object for the environment at the time of the operation.",
          "additionalProperties": {}
        },
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "Provisioning or operation error details. Populated only for error states."
        }
      },
      "discriminator": "kind",
      "required": [
        "kind",
        "uri",
        "operationId",
        "status"
      ]
    },
    "EnvironmentOperationKind": {
      "type": "string",
      "description": "The type of environment operation.",
      "enum": [
        "Deploy",
        "Delete"
      ],
      "x-ms-enum": {
        "name": "EnvironmentOperationKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Deploy",
            "value": "Deploy",
            "description": "The operation represents a deployment."
          },
          {
            "name": "Delete",
            "value": "Delete",
            "description": "The operation represents a delete."
          }
        ]
      }
    },
    "EnvironmentOperationStatus": {
      "type": "string",
      "description": "The status of an environment operation.",
      "enum": [
        "NotStarted",
        "Running",
        "Succeeded",
        "Canceled",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "EnvironmentOperationStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "NotStarted",
            "value": "NotStarted",
            "description": "The operation has not started."
          },
          {
            "name": "Running",
            "value": "Running",
            "description": "The operation is running."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The operation succeeded."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "The operation was canceled."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "he operation failed."
          }
        ]
      }
    },
    "EnvironmentOutput": {
      "type": "object",
      "description": "Output from environment deployment.",
      "properties": {
        "type": {
          "$ref": "#/definitions/EnvironmentOutputType",
          "description": "Type of the output value."
        },
        "value": {
          "description": "The output value."
        },
        "sensitive": {
          "type": "boolean",
          "description": "Indicates if the value is sensitive."
        }
      }
    },
    "EnvironmentOutputType": {
      "type": "string",
      "description": "Type of the output value.",
      "enum": [
        "array",
        "boolean",
        "number",
        "object",
        "string"
      ],
      "x-ms-enum": {
        "name": "EnvironmentOutputType",
        "modelAsString": true,
        "values": [
          {
            "name": "array",
            "value": "array",
            "description": "The output is an array of values."
          },
          {
            "name": "boolean",
            "value": "boolean",
            "description": "The output is a boolean value."
          },
          {
            "name": "number",
            "value": "number",
            "description": "The output is a number value."
          },
          {
            "name": "object",
            "value": "object",
            "description": "The output is an object value."
          },
          {
            "name": "string",
            "value": "string",
            "description": "The output is a string value."
          }
        ]
      }
    },
    "EnvironmentOutputs": {
      "type": "object",
      "description": "Outputs from environment deployment.",
      "properties": {
        "outputs": {
          "type": "object",
          "description": "The outputs Names and Values.",
          "additionalProperties": {
            "$ref": "#/definitions/EnvironmentOutput"
          }
        }
      }
    },
    "EnvironmentPatchProperties": {
      "type": "object",
      "description": "Properties of an environment. These properties can be updated via PATCH after\nthe resource has been created.",
      "properties": {
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The time the expiration date will be triggered (UTC), after which the\nenvironment and associated resources will be deleted."
        }
      }
    },
    "EnvironmentProvisioningState": {
      "type": "string",
      "description": "The provisioning state of the environment.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Creating",
        "Accepted",
        "Deleting",
        "Updating",
        "Preparing",
        "Running",
        "Syncing",
        "MovingResources",
        "TransientFailure",
        "StorageProvisioningFailed"
      ],
      "x-ms-enum": {
        "name": "EnvironmentProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The environment was successfully provisioned."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The environment failed to provision."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "The environment provisioning was canceled."
          },
          {
            "name": "Creating",
            "value": "Creating",
            "description": "The environment is creating."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "The environment was accepted."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "The environment is deleting."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "The environment is updating."
          },
          {
            "name": "Preparing",
            "value": "Preparing",
            "description": "The environment is preparing."
          },
          {
            "name": "Running",
            "value": "Running",
            "description": "The environment is running."
          },
          {
            "name": "Syncing",
            "value": "Syncing",
            "description": "The environment is Syncing."
          },
          {
            "name": "MovingResources",
            "value": "MovingResources",
            "description": "The environment is moving resources."
          },
          {
            "name": "TransientFailure",
            "value": "TransientFailure",
            "description": "The environment has a transient failure."
          },
          {
            "name": "StorageProvisioningFailed",
            "value": "StorageProvisioningFailed",
            "description": "The environment storage provisioning failed."
          }
        ]
      }
    },
    "EnvironmentType": {
      "type": "object",
      "description": "Properties of an environment type.",
      "properties": {
        "uri": {
          "type": "string",
          "format": "uri",
          "description": "The unique URI of the environment type."
        },
        "name": {
          "type": "string",
          "description": "Name of the environment type."
        },
        "deploymentTargetId": {
          "type": "string",
          "description": "Id of a subscription or management group that the environment type will be\nmapped to. The environment's resources will be deployed into this subscription\nor management group."
        },
        "status": {
          "$ref": "#/definitions/EnvironmentTypeEnableStatus",
          "description": "Indicates whether this environment type is enabled for use in this project."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the environment type."
        }
      },
      "required": [
        "uri",
        "name",
        "deploymentTargetId",
        "status"
      ]
    },
    "EnvironmentTypeEnableStatus": {
      "type": "string",
      "description": "Indicates whether an environment type is enabled for use in a project.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "EnvironmentTypeEnableStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "The environment type is enabled for use in the project."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "The environment type is not enabled for use in the project."
          }
        ]
      }
    },
    "EnvironmentUpdate": {
      "type": "object",
      "description": "Properties of an environment.",
      "properties": {
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The time the expiration date will be triggered (UTC), after which the\nenvironment and associated resources will be deleted."
        },
        "parameters": {
          "type": "object",
          "description": "Parameters object for the environment.",
          "additionalProperties": {}
        }
      }
    },
    "EnvironmentUpdateProperties": {
      "type": "object",
      "description": "Properties of an environment. These properties can be updated after the\nresource has been created.",
      "properties": {
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The time the expiration date will be triggered (UTC), after which the\nenvironment and associated resources will be deleted."
        },
        "parameters": {
          "type": "object",
          "description": "Parameters object for the environment.",
          "additionalProperties": {}
        }
      }
    },
    "OperationStatus": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified ID for the operation status.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The operation id name."
        },
        "status": {
          "$ref": "#/definitions/OperationStatusValue",
          "description": "Provisioning state of the resource."
        },
        "resourceId": {
          "type": "string",
          "description": "The id of the resource."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "percentComplete": {
          "type": "number",
          "format": "double",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "properties": {
          "description": "Custom operation properties, populated only for a successful operation."
        },
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "Operation Error message."
        }
      },
      "required": [
        "id",
        "status"
      ]
    },
    "OperationStatusValue": {
      "type": "string",
      "description": "Indicates whether operation status is running, completed, canceled or failed.",
      "enum": [
        "Running",
        "Completed",
        "Canceled",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "OperationStatusValue",
        "modelAsString": true,
        "values": [
          {
            "name": "Running",
            "value": "Running",
            "description": "Operation is in progress."
          },
          {
            "name": "Completed",
            "value": "Completed",
            "description": "Operation is completed with success."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Operation was canceled."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Operation failed."
          }
        ]
      }
    },
    "PagedCatalog": {
      "type": "object",
      "description": "Paged collection of Catalog items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Catalog items on this page",
          "items": {
            "$ref": "#/definitions/Catalog"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedEnvironment": {
      "type": "object",
      "description": "Results of the environment list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Environment items on this page",
          "items": {
            "$ref": "#/definitions/Environment"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedEnvironmentAction": {
      "type": "object",
      "description": "Paged collection of EnvironmentAction items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EnvironmentAction items on this page",
          "items": {
            "$ref": "#/definitions/EnvironmentAction"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedEnvironmentDefinition": {
      "type": "object",
      "description": "Results of the environment definition list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EnvironmentDefinition items on this page",
          "items": {
            "$ref": "#/definitions/EnvironmentDefinition"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedEnvironmentOperation": {
      "type": "object",
      "description": "Paged collection of EnvironmentOperation items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EnvironmentOperation items on this page",
          "items": {
            "$ref": "#/definitions/EnvironmentOperation"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedEnvironmentType": {
      "type": "object",
      "description": "Result of the environment type list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EnvironmentType items on this page",
          "items": {
            "$ref": "#/definitions/EnvironmentType"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ParameterType": {
      "type": "string",
      "description": "The type of data a parameter accepts.",
      "enum": [
        "array",
        "boolean",
        "integer",
        "number",
        "object",
        "string"
      ],
      "x-ms-enum": {
        "name": "ParameterType",
        "modelAsString": true,
        "values": [
          {
            "name": "array",
            "value": "array",
            "description": "The parameter accepts an array of values."
          },
          {
            "name": "boolean",
            "value": "boolean",
            "description": "The parameter accepts a boolean value."
          },
          {
            "name": "integer",
            "value": "integer",
            "description": "The parameter accepts an integer value."
          },
          {
            "name": "number",
            "value": "number",
            "description": "The parameter accepts a number value."
          },
          {
            "name": "object",
            "value": "object",
            "description": "The parameter accepts an object value."
          },
          {
            "name": "string",
            "value": "string",
            "description": "The parameter accepts a string value."
          }
        ]
      }
    },
    "Project": {
      "type": "object",
      "description": "Project details.",
      "properties": {
        "uri": {
          "type": "string",
          "format": "uri",
          "description": "The unique URI of the project."
        },
        "name": {
          "type": "string",
          "description": "Name of the project.",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of the project."
        },
        "maxDevBoxesPerUser": {
          "type": "integer",
          "format": "int32",
          "description": "When specified, indicates the maximum number of Dev Boxes a single user can\ncreate across all pools in the project.",
          "minimum": 0
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the pool."
        }
      },
      "required": [
        "uri",
        "name"
      ]
    },
    "User": {
      "type": "object",
      "description": "Project user.",
      "properties": {
        "userId": {
          "type": "string",
          "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
          "minLength": 2,
          "maxLength": 36,
          "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$",
          "readOnly": true
        }
      },
      "required": [
        "userId"
      ]
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
