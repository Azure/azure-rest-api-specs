{
  "swagger": "2.0",
  "info": {
    "version": "2024-02-01",
    "title": "DevCenter",
    "description": "Internal additions to the API not ready for external customer use."
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "devcenter.json#/parameters/EndpointParameter"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "AADToken": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "AADToken": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/projects/{projectName}/users/{userId}/notificationSettings/default": {
      "get": {
        "tags": [
          "Notification Settings"
        ],
        "parameters": [
          {
            "$ref": "devcenter.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/UserIdParameter"
          }
        ],
        "description": "Gets notification settings for user in the project.",
        "operationId": "DevCenter_GetNotificationSettings",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NotificationSettings"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "devcenter.json#/definitions/CloudError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "DevCenter_GetNotificationSettings": {
            "$ref": "./examples/DevCenter_GetNotificationSettings.json"
          }
        }
      },
      "put": {
        "tags": [
          "Notification Settings"
        ],
        "parameters": [
          {
            "$ref": "devcenter.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/UserIdParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents notification settings.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationSettings"
            }
          }
        ],
        "description": "Creates or updates notification settings.",
        "operationId": "DevCenter_CreateNotificationSettings",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NotificationSettings"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "devcenter.json#/definitions/CloudError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "DevCenter_CreateNotificationSettings": {
            "$ref": "./examples/DevCenter_CreateNotificationSettings.json"
          }
        }
      }
    },
    "/projects/{projectName}/users/{userId}/notificationSettings/default/allowedCultures": {
      "get": {
        "tags": [
          "Notification Settings"
        ],
        "parameters": [
          {
            "$ref": "devcenter.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/UserIdParameter"
          }
        ],
        "description": "Lists allowed culture codes for notification settings",
        "operationId": "DevCenter_ListNotificationSettingsAllowedCultures",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NotificationSettingsAllowedCulturesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "devcenter.json#/definitions/CloudError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "DevCenter_ListNotificationSettingsAllowedCultures": {
            "$ref": "./examples/DevCenter_ListNotificationSettingsAllowedCultures.json"
          }
        }
      }
    },
    "/projects/{projectName}/users/{userId}/environments/{environmentName}/artifacts": {
      "parameters": [
        {
          "$ref": "devcenter.json#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "tags": [
          "Environment Artifacts"
        ],
        "description": "Lists the artifacts for an environment",
        "parameters": [
          {
            "$ref": "devcenter.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/UserIdParameter"
          },
          {
            "$ref": "environments.json#/parameters/EnvironmentNameParameter"
          }
        ],
        "operationId": "Environments_ListArtifactsByEnvironment",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ArtifactListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "devcenter.json#/definitions/CloudError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Environments_ListArtifactsByEnvironment": {
            "$ref": "./examples/Artifacts_ListByEnvironment.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/users/{userId}/environments/{environmentName}/artifacts/{artifactPath}": {
      "parameters": [
        {
          "$ref": "devcenter.json#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "tags": [
          "Environment Artifacts"
        ],
        "description": "Lists the artifacts for an environment at a specified path, or returns the file at the path.",
        "parameters": [
          {
            "$ref": "devcenter.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/UserIdParameter"
          },
          {
            "$ref": "environments.json#/parameters/EnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/ArtifactPathParameter"
          }
        ],
        "operationId": "Environments_ListArtifactsByEnvironmentAndPath",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ArtifactListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "devcenter.json#/definitions/CloudError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Environments_ListArtifactsByEnvironmentAndPath": {
            "$ref": "./examples/Artifacts_ListByPath.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "NotificationSettings": {
      "type": "object",
      "description": "The NotificationSettings configured for user.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the notification settings.",
          "enum": [
            "default"
          ]
        },
        "enabled": {
          "type": "boolean",
          "description": "If notification is enabled for the user."
        },
        "culture": {
          "type": "string",
          "description": "The culture that MEO can accommdate requests to send emails in."
        },
        "notificationType": {
          "$ref": "#/definitions/NotificationType"
        }
      },
      "required": [
        "name",
        "enabled",
        "culture",
        "notificationType"
      ]
    },
    "NotificationType": {
      "type": "object",
      "description": "The type of the notification",
      "properties": {
        "devBoxProvisioningNotification": {
          "$ref": "#/definitions/DevBoxProvisioningNotification"
        }
      },
      "required": [
        "devBoxProvisioningNotification"
      ]
    },
    "DevBoxProvisioningNotification": {
      "type": "object",
      "description": "The notification configured for DevBox provisioning.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "If notification is enabled for DevBox provisioning."
        },
        "notificationChannel": {
          "$ref": "#/definitions/NotificationChannel"
        }
      },
      "required": [
        "enabled",
        "notificationChannel"
      ]
    },
    "NotificationChannel": {
      "type": "object",
      "description": "The channel of the notification",
      "properties": {
        "emailNotification": {
          "$ref": "#/definitions/EmailNotification"
        },
        "webhookNotification": {
          "$ref": "#/definitions/WebhookNotification"
        }
      },
      "required": [
        "emailNotification",
        "webhookNotification"
      ]
    },
    "EmailNotification": {
      "type": "object",
      "description": "The email notification",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "If email notification is enabled"
        },
        "recipients": {
          "type": "string",
          "description": "The recipients of the email notification"
        },
        "cc": {
          "type": "string",
          "description": "The cc of the email notification"
        }
      },
      "required": [
        "enabled"
      ]
    },
    "WebhookNotification": {
      "type": "object",
      "description": "The webhook notification",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "If webhook notification is enabled"
        },
        "url": {
          "type": "string",
          "description": "The url of the webhook"
        }
      },
      "required": [
        "enabled"
      ]
    },
    "NotificationSettingsAllowedCulturesListResult": {
      "type": "object",
      "description": "The allowed cultures list result for NotificationSettings",
      "properties": {
        "value": {
          "description": "Allowed culture codes for NotificationSettings",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "Artifact": {
      "description": "Properties of an Artifact",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Artifact identifier",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Artifact name",
          "readOnly": true
        },
        "isDirectory": {
          "type": "boolean",
          "description": "Whether artifact is a directory",
          "readOnly": true
        },
        "downloadUri": {
          "type": "string",
          "description": "Uri where the file contents can be downloaded",
          "readOnly": true,
          "format": "uri"
        },
        "fileSize": {
          "type": "number",
          "description": "Size of file in bytes, if the artifact is a file",
          "readOnly": true
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time the artifact was created",
          "readOnly": true
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time the artifact was last modified",
          "readOnly": true
        }
      }
    },
    "ArtifactListResult": {
      "description": "Results of the artifact list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Artifact"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    }
  },
  "parameters": {
    "ArtifactPathParameter": {
      "name": "artifactPath",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
      "minLength": 3,
      "maxLength": 63,
      "description": "The path of the artifact.",
      "x-ms-parameter-location": "method"
    }
  }
}