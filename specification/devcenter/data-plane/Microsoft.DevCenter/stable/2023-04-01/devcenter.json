{
  "swagger": "2.0",
  "info": {
    "title": "DevCenter",
    "version": "2023-04-01",
    "description": "DevCenter service",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "endpoint",
        "in": "path",
        "description": "The DevCenter-specific URI to operate on.",
        "required": true,
        "type": "string",
        "format": "uri",
        "x-ms-skip-url-encoding": true
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "OAuth2Auth": [
        "https://devcenter.azure.com/.default"
      ]
    }
  ],
  "securityDefinitions": {
    "OAuth2Auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "https://devcenter.azure.com/.default": ""
      }
    }
  },
  "tags": [],
  "paths": {
    "/devboxes": {
      "get": {
        "operationId": "DevBoxes_ListAllDevBoxes",
        "description": "Lists Dev Boxes that the caller has access to in the DevCenter.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedDevBox"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Lists Dev Boxes that the caller has access to in the DevCenter.": {
            "$ref": "./examples/DevBoxes_ListAllDevBoxes.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects": {
      "get": {
        "operationId": "DevCenter_ListProjects",
        "description": "Lists all projects.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedProject"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Lists all projects.": {
            "$ref": "./examples/DevCenter_ListProjects.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}": {
      "get": {
        "operationId": "DevCenter_GetProject",
        "description": "Gets a project.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Gets a project.": {
            "$ref": "./examples/DevCenter_GetProject.json"
          }
        }
      }
    },
    "/projects/{projectName}/catalogs": {
      "get": {
        "operationId": "Environments_ListCatalogsByProject",
        "description": "Lists all of the catalogs available for a project.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedCatalog"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Lists all of the catalogs available for a project.": {
            "$ref": "./examples/Environments_ListCatalogsByProject.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/catalogs/{catalogName}": {
      "get": {
        "operationId": "Environments_GetCatalog",
        "description": "Gets the specified catalog within the project.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "catalogName",
            "in": "path",
            "description": "Name of the catalog.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Gets the specified catalog within the project": {
            "$ref": "./examples/Environments_GetCatalog.json"
          }
        }
      }
    },
    "/projects/{projectName}/catalogs/{catalogName}/environmentDefinitions": {
      "get": {
        "operationId": "Environments_ListEnvironmentDefinitionsByCatalog",
        "description": "Lists all environment definitions available within a catalog.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "catalogName",
            "in": "path",
            "description": "The name of the catalog",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEnvironmentDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Lists all environment definitions available within a catalog.": {
            "$ref": "./examples/Environments_ListEnvironmentDefinitionsByCatalog.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/catalogs/{catalogName}/environmentDefinitions/{definitionName}": {
      "get": {
        "operationId": "Environments_GetEnvironmentDefinition",
        "description": "Get an environment definition from a catalog.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "catalogName",
            "in": "path",
            "description": "Name of the catalog.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "definitionName",
            "in": "path",
            "description": "Name of the environment definition.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EnvironmentDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Get an environment definition from a catalog.": {
            "$ref": "./examples/Environments_GetEnvironmentDefinition.json"
          }
        }
      }
    },
    "/projects/{projectName}/environmentDefinitions": {
      "get": {
        "operationId": "Environments_ListEnvironmentDefinitionsByProject",
        "description": "Lists all environment definitions available for a project.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEnvironmentDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Lists all environment definitions available for a project.": {
            "$ref": "./examples/Environments_ListEnvironmentDefinitionsByProject.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/environmentTypes": {
      "get": {
        "operationId": "Environments_ListEnvironmentTypes",
        "description": "Lists all environment types configured for a project.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEnvironmentType"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Lists all environment types configured for a project.": {
            "$ref": "./examples/Environments_ListEnvironmentTypes.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/environments": {
      "get": {
        "operationId": "Environments_ListEnvironments",
        "description": "Lists the environments for a project.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEnvironment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Lists the environments for a project.": {
            "$ref": "./examples/Environments_ListEnvironments.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/operationstatuses/{operationId}": {
      "get": {
        "operationId": "OperationStatuses_Get",
        "description": "Get the status of an operation.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The operation id name.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "minLength": 36,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Get the status of an operation.": {
            "$ref": "./examples/OperationStatuses_Get.json"
          }
        }
      }
    },
    "/projects/{projectName}/pools": {
      "get": {
        "operationId": "DevBoxes_ListPools",
        "description": "Lists available pools.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedPool"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Lists available pools": {
            "$ref": "./examples/DevBoxes_ListPools.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/pools/{poolName}": {
      "get": {
        "operationId": "DevBoxes_GetPool",
        "description": "Gets a pool.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Pool name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Pool"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Gets a pool": {
            "$ref": "./examples/DevBoxes_GetPool.json"
          }
        }
      }
    },
    "/projects/{projectName}/pools/{poolName}/schedules": {
      "get": {
        "operationId": "DevBoxes_ListSchedulesByPool",
        "description": "Lists all schedules within a pool that are configured by your project administrator.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of a pool of Dev Boxes.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedSchedule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Lists available schedules for a pool.": {
            "$ref": "./examples/DevBoxes_ListSchedulesByPool.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/pools/{poolName}/schedules/{scheduleName}": {
      "get": {
        "operationId": "DevBoxes_GetScheduleByPool",
        "description": "Gets a schedule.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Pool name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "scheduleName",
            "in": "path",
            "description": "Display name for the Schedule.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Gets a schedule.": {
            "$ref": "./examples/DevBoxes_GetScheduleByPool.json"
          }
        }
      }
    },
    "/projects/{projectName}/users/{userId}/devboxes": {
      "get": {
        "operationId": "DevBoxes_ListDevBoxesByUser",
        "description": "Lists Dev Boxes in the project for a particular user.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedDevBox"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Lists Dev Boxes in the project for a particular user.": {
            "$ref": "./examples/DevBoxes_ListDevBoxesByUser.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/users/{userId}/devboxes/{devBoxName}": {
      "get": {
        "operationId": "DevBoxes_GetDevBoxByUser",
        "description": "Gets a Dev Box.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$"
          },
          {
            "name": "devBoxName",
            "in": "path",
            "description": "Display name for the Dev Box.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DevBox"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Gets a Dev Box": {
            "$ref": "./examples/DevBoxes_GetDevBoxByUser.json"
          }
        }
      },
      "put": {
        "operationId": "DevBoxes_CreateDevBox",
        "description": "Creates or replaces a Dev Box.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute the operation.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$"
          },
          {
            "name": "devBoxName",
            "in": "path",
            "description": "The name of a Dev Box.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents the body request of a Dev Box creation. Dev Box Pool name is required. Optionally set the owner of the Dev Box as local administrator",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevBox"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DevBox"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/DevBox"
            },
            "headers": {
              "Location": {
                "type": "string",
                "format": "uri",
                "description": "The location of an instance of DevBox"
              },
              "Operation-Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Creates or replaces a Dev Box.": {
            "$ref": "./examples/DevBoxes_CreateDevBox.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "DevBoxes_DeleteDevBox",
        "description": "Deletes a Dev Box.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$"
          },
          {
            "name": "devBoxName",
            "in": "path",
            "description": "The name of a Dev Box.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            },
            "headers": {
              "Location": {
                "type": "string"
              },
              "Operation-Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Deletes a Dev Box.": {
            "$ref": "./examples/DevBoxes_DeleteDevBox.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/projects/{projectName}/users/{userId}/devboxes/{devBoxName}:start": {
      "post": {
        "operationId": "DevBoxes_StartDevBox",
        "description": "Starts a Dev Box.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$"
          },
          {
            "name": "devBoxName",
            "in": "path",
            "description": "Display name for the Dev Box.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            },
            "headers": {
              "Operation-Location": {
                "type": "string",
                "format": "uri",
                "description": "The location for monitoring the operation state."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Starts a Dev Box": {
            "$ref": "./examples/DevBoxes_StartDevBox.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/projects/{projectName}/users/{userId}/devboxes/{devBoxName}:stop": {
      "post": {
        "operationId": "DevBoxes_StopDevBox",
        "description": "Stops a Dev Box.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$"
          },
          {
            "name": "devBoxName",
            "in": "path",
            "description": "Display name for the Dev Box.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "hibernate",
            "in": "query",
            "description": "Optional parameter to hibernate the dev box.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            },
            "headers": {
              "Operation-Location": {
                "type": "string",
                "format": "uri",
                "description": "The location for monitoring the operation state."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Stops a Dev Box": {
            "$ref": "./examples/DevBoxes_StopDevBox.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/projects/{projectName}/users/{userId}/devboxes/{devBoxName}:restart": {
      "post": {
        "operationId": "DevBoxes_RestartDevBox",
        "description": "Restarts a Dev Box.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$"
          },
          {
            "name": "devBoxName",
            "in": "path",
            "description": "Display name for the Dev Box.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            },
            "headers": {
              "Operation-Location": {
                "type": "string",
                "format": "uri",
                "description": "The location for monitoring the operation state."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Restarts a Dev Box": {
            "$ref": "./examples/DevBoxes_RestartDevBox.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/projects/{projectName}/users/{userId}/devboxes/{devBoxName}/actions": {
      "get": {
        "operationId": "DevBoxes_ListActions",
        "description": "Lists actions on a Dev Box.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$"
          },
          {
            "name": "devBoxName",
            "in": "path",
            "description": "Display name for the Dev Box.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedDevBoxAction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Lists actions on a Dev Box.": {
            "$ref": "./examples/DevBoxes_ListActions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/users/{userId}/devboxes/{devBoxName}/actions/{actionName}": {
      "get": {
        "operationId": "DevBoxes_GetAction",
        "description": "Gets an action.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$"
          },
          {
            "name": "devBoxName",
            "in": "path",
            "description": "Display name for the Dev Box.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "actionName",
            "in": "path",
            "description": "The name of the action.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DevBoxAction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Gets an action.": {
            "$ref": "./examples/DevBoxes_GetAction.json"
          }
        }
      }
    },
    "/projects/{projectName}/users/{userId}/devboxes/{devBoxName}/actions/{actionName}:skip": {
      "post": {
        "operationId": "DevBoxes_SkipAction",
        "description": "Skips an occurrence of an action.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$"
          },
          {
            "name": "devBoxName",
            "in": "path",
            "description": "Display name for the Dev Box.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "actionName",
            "in": "path",
            "description": "The name of the action.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Skips an occurrence of an action.": {
            "$ref": "./examples/DevBoxes_SkipAction.json"
          }
        }
      }
    },
    "/projects/{projectName}/users/{userId}/devboxes/{devBoxName}/actions/{actionName}:delay": {
      "post": {
        "operationId": "DevBoxes_DelayAction",
        "description": "Delays the occurrence of an action.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$"
          },
          {
            "name": "devBoxName",
            "in": "path",
            "description": "Display name for the Dev Box.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "actionName",
            "in": "path",
            "description": "The name of the action.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "until",
            "in": "query",
            "description": "The time to delay the Dev Box action or actions until.",
            "required": true,
            "type": "string",
            "format": "date-time",
            "x-ms-client-name": "delayUntil"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DevBoxAction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Delays the occurrence of an action.": {
            "$ref": "./examples/DevBoxes_DelayAction.json"
          }
        }
      }
    },
    "/projects/{projectName}/users/{userId}/devboxes/{devBoxName}/actions:delay": {
      "post": {
        "operationId": "DevBoxes_DelayActions",
        "description": "Delays all actions.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$"
          },
          {
            "name": "devBoxName",
            "in": "path",
            "description": "Display name for the Dev Box.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "until",
            "in": "query",
            "description": "The time to delay the Dev Box action or actions until.",
            "required": true,
            "type": "string",
            "format": "date-time",
            "x-ms-client-name": "delayUntil"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedDevBoxActionDelayResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Delays all actions.": {
            "$ref": "./examples/DevBoxes_DelayActions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/users/{userId}/devboxes/{devBoxName}/remoteConnection": {
      "get": {
        "operationId": "DevBoxes_GetRemoteConnection",
        "description": "Gets RDP Connection info.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$"
          },
          {
            "name": "devBoxName",
            "in": "path",
            "description": "The name of a Dev Box.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/RemoteConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Gets RDP Connection info": {
            "$ref": "./examples/DevBoxes_GetRemoteConnection.json"
          }
        }
      }
    },
    "/projects/{projectName}/users/{userId}/environments": {
      "get": {
        "operationId": "Environments_ListEnvironmentsByUser",
        "description": "Lists the environments for a project and user.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEnvironment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Lists the environments for a project and user.": {
            "$ref": "./examples/Environments_ListEnvironmentsByUser.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/users/{userId}/environments/{environmentName}": {
      "get": {
        "operationId": "Environments_GetEnvironmentByUser",
        "description": "Gets an environment.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Name of the project.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Environment name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Gets an environment": {
            "$ref": "./examples/Environments_GetEnvironmentByUser.json"
          }
        }
      },
      "put": {
        "operationId": "Environments_CreateOrReplaceEnvironment",
        "description": "Creates or updates an environment.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The name of the environment.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents an environment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/Environment"
            },
            "headers": {
              "Operation-Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Creates or updates an environment.": {
            "$ref": "./examples/Environments_CreateOrReplaceEnvironment.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Environments_DeleteEnvironment",
        "description": "Deletes an environment and all its associated resources",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The name of the environment.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            },
            "headers": {
              "Location": {
                "type": "string"
              },
              "Operation-Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Deletes an environment and all its associated resources": {
            "$ref": "./examples/Environments_DeleteEnvironment.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/users/{userId}/devboxes": {
      "get": {
        "operationId": "DevBoxes_ListAllDevBoxesByUser",
        "description": "Lists Dev Boxes in the Dev Center for a particular user.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 36,
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedDevBox"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Lists Dev Boxes in the Dev Center for a particular user.": {
            "$ref": "./examples/DevBoxes_ListAllDevBoxesByUser.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "Azure.Core.Foundations.OperationState": {
      "type": "string",
      "description": "Enum describing allowed operation states.",
      "enum": [
        "NotStarted",
        "Running",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "OperationState",
        "modelAsString": true,
        "values": [
          {
            "name": "NotStarted",
            "value": "NotStarted",
            "description": "The operation has not started."
          },
          {
            "name": "Running",
            "value": "Running",
            "description": "The operation is in progress."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The operation has completed successfully."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The operation has failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "The operation has been canceled by the user."
          }
        ]
      }
    },
    "Azure.Core.azureLocation": {
      "type": "string",
      "description": "Represents an Azure geography region where supported resource providers live."
    },
    "Azure.Core.uuid": {
      "type": "string",
      "format": "uuid",
      "description": "Universally Unique Identifier"
    },
    "Catalog": {
      "type": "object",
      "description": "A catalog.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the catalog.",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ]
    },
    "DevBox": {
      "type": "object",
      "description": "A Dev Box.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Display name for the Dev Box.",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
          "readOnly": true
        },
        "projectName": {
          "type": "string",
          "description": "Name of the project this Dev Box belongs to.",
          "readOnly": true
        },
        "poolName": {
          "type": "string",
          "description": "The name of the Dev Box pool this machine belongs to.",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "hibernateSupport": {
          "$ref": "#/definitions/HibernateSupport",
          "description": "Indicates whether hibernate is enabled/disabled or unknown.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/DevBoxProvisioningState",
          "description": "The current provisioning state of the Dev Box.",
          "readOnly": true
        },
        "actionState": {
          "type": "string",
          "description": "The current action state of the Dev Box. This is state is based on previous\naction performed by user.",
          "readOnly": true
        },
        "powerState": {
          "$ref": "#/definitions/PowerState",
          "description": "The current power state of the Dev Box.",
          "readOnly": true
        },
        "uniqueId": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "A unique identifier for the Dev Box. This is a GUID-formatted string (e.g.\n00000000-0000-0000-0000-000000000000).",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "Provisioning or action error details. Populated only for error states.",
          "readOnly": true
        },
        "location": {
          "$ref": "#/definitions/Azure.Core.azureLocation",
          "description": "Azure region where this Dev Box is located. This will be the same region as the\nVirtual Network it is attached to.",
          "readOnly": true
        },
        "osType": {
          "$ref": "#/definitions/OsType",
          "description": "The operating system type of this Dev Box.",
          "readOnly": true
        },
        "user": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "The AAD object id of the user this Dev Box is assigned to.",
          "readOnly": true
        },
        "hardwareProfile": {
          "$ref": "#/definitions/HardwareProfile",
          "description": "Information about the Dev Box's hardware resources.",
          "readOnly": true
        },
        "storageProfile": {
          "$ref": "#/definitions/StorageProfile",
          "description": "Storage settings for this Dev Box.",
          "readOnly": true
        },
        "imageReference": {
          "$ref": "#/definitions/ImageReference",
          "description": "Information about the image used for this Dev Box.",
          "readOnly": true
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "description": "Creation time of this Dev Box.",
          "readOnly": true
        },
        "localAdministrator": {
          "$ref": "#/definitions/LocalAdminStatus",
          "description": "Indicates whether the owner of the Dev Box is a local administrator.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "name",
        "poolName"
      ]
    },
    "DevBoxAction": {
      "type": "object",
      "description": "An action which will take place on a Dev Box.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the action.",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
          "readOnly": true
        },
        "actionType": {
          "$ref": "#/definitions/DevBoxActionType",
          "description": "The action that will be taken."
        },
        "sourceId": {
          "type": "string",
          "description": "The id of the resource which triggered this action."
        },
        "suspendedUntil": {
          "type": "string",
          "format": "date-time",
          "description": "The earliest time that the action could occur (UTC)."
        },
        "next": {
          "$ref": "#/definitions/DevBoxNextAction",
          "description": "Details about the next run of this action."
        }
      },
      "required": [
        "name",
        "actionType",
        "sourceId"
      ]
    },
    "DevBoxActionDelayResult": {
      "type": "object",
      "description": "The action delay result.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the action."
        },
        "result": {
          "$ref": "#/definitions/DevBoxActionDelayResultStatus",
          "description": "The result of the delay operation on this action."
        },
        "action": {
          "$ref": "#/definitions/DevBoxAction",
          "description": "The delayed action."
        },
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "Information about the error that occurred. Only populated on error."
        }
      },
      "required": [
        "name",
        "result"
      ]
    },
    "DevBoxActionDelayResultStatus": {
      "type": "string",
      "description": "The result of the delay operation on this action.",
      "enum": [
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "DevBoxActionDelayResultStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The delay operation succeeded."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The delay operation failed."
          }
        ]
      }
    },
    "DevBoxActionType": {
      "type": "string",
      "description": "The type of action which will take place on a Dev Box.",
      "enum": [
        "Stop"
      ],
      "x-ms-enum": {
        "name": "DevBoxActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "Stop",
            "value": "Stop",
            "description": "The action will stop the Dev Box."
          }
        ]
      }
    },
    "DevBoxNextAction": {
      "type": "object",
      "description": "Details about the next run of an action.",
      "properties": {
        "scheduledTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time the action will be triggered (UTC)."
        }
      },
      "required": [
        "scheduledTime"
      ]
    },
    "DevBoxProvisioningState": {
      "type": "string",
      "description": "Indicates the provisioning state of the Dev Box.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Creating",
        "Deleting",
        "Updating",
        "Starting",
        "Stopping",
        "Provisioning",
        "ProvisionedWithWarning",
        "InGracePeriod",
        "NotProvisioned"
      ],
      "x-ms-enum": {
        "name": "DevBoxProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Dev Box was successfully provisioned."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Dev Box failed to provision."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Dev Box provision was canceled."
          },
          {
            "name": "Creating",
            "value": "Creating",
            "description": "Dev Box is being created."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Dev Box is being deleted."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Dev Box is updating."
          },
          {
            "name": "Starting",
            "value": "Starting",
            "description": "Dev Box is starting."
          },
          {
            "name": "Stopping",
            "value": "Stopping",
            "description": "Dev Box is stopping."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Dev Box is provisioning."
          },
          {
            "name": "ProvisionedWithWarning",
            "value": "ProvisionedWithWarning",
            "description": "Dev Box was provisioned with warning."
          },
          {
            "name": "InGracePeriod",
            "value": "InGracePeriod",
            "description": "Dev Box is in grace period."
          },
          {
            "name": "NotProvisioned",
            "value": "NotProvisioned",
            "description": "Dev Box is not provisioned."
          }
        ]
      }
    },
    "Environment": {
      "type": "object",
      "description": "Properties of an environment.",
      "properties": {
        "parameters": {
          "type": "object",
          "description": "Parameters object for the environment.",
          "additionalProperties": {}
        },
        "name": {
          "type": "string",
          "description": "Environment name.",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
          "readOnly": true
        },
        "environmentType": {
          "type": "string",
          "description": "Environment type.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "user": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "The AAD object id of the owner of this Environment.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/EnvironmentProvisioningState",
          "description": "The provisioning state of the environment.",
          "readOnly": true
        },
        "resourceGroupId": {
          "type": "string",
          "description": "The identifier of the resource group containing the environment's resources.",
          "readOnly": true
        },
        "catalogName": {
          "type": "string",
          "description": "Name of the catalog.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "environmentDefinitionName": {
          "type": "string",
          "description": "Name of the environment definition.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "Provisioning error details. Populated only for error states.",
          "readOnly": true
        }
      },
      "required": [
        "name",
        "environmentType",
        "catalogName",
        "environmentDefinitionName"
      ]
    },
    "EnvironmentDefinition": {
      "type": "object",
      "description": "An environment definition.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the environment definition."
        },
        "name": {
          "type": "string",
          "description": "Name of the environment definition.",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
          "readOnly": true
        },
        "catalogName": {
          "type": "string",
          "description": "Name of the catalog."
        },
        "description": {
          "type": "string",
          "description": "A short description of the environment definition."
        },
        "parameters": {
          "type": "array",
          "description": "Input parameters passed to an environment.",
          "items": {
            "$ref": "#/definitions/EnvironmentDefinitionParameter"
          }
        },
        "parametersSchema": {
          "type": "string",
          "description": "JSON schema defining the parameters object passed to an environment."
        },
        "templatePath": {
          "type": "string",
          "description": "Path to the Environment Definition entrypoint file."
        }
      },
      "required": [
        "id",
        "name",
        "catalogName"
      ]
    },
    "EnvironmentDefinitionParameter": {
      "type": "object",
      "description": "Properties of an Environment Definition parameter",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique ID of the parameter."
        },
        "name": {
          "type": "string",
          "description": "Display name of the parameter."
        },
        "description": {
          "type": "string",
          "description": "Description of the parameter."
        },
        "default": {
          "type": "string",
          "description": "Default value of the parameter."
        },
        "type": {
          "$ref": "#/definitions/ParameterType",
          "description": "A string of one of the basic JSON types (number, integer, array, object,\nboolean, string)."
        },
        "readOnly": {
          "type": "boolean",
          "description": "Whether or not this parameter is read-only.  If true, default should have a\nvalue."
        },
        "required": {
          "type": "boolean",
          "description": "Whether or not this parameter is required."
        },
        "allowed": {
          "type": "array",
          "description": "An array of allowed values.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "type",
        "required"
      ]
    },
    "EnvironmentProvisioningState": {
      "type": "string",
      "description": "The provisioning state of the environment.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Creating",
        "Accepted",
        "Deleting",
        "Updating",
        "Preparing",
        "Running",
        "Syncing",
        "MovingResources",
        "TransientFailure",
        "StorageProvisioningFailed"
      ],
      "x-ms-enum": {
        "name": "EnvironmentProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The environment was successfully provisioned."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The environment failed to provision."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "The environment provisioning was canceled."
          },
          {
            "name": "Creating",
            "value": "Creating",
            "description": "The environment is creating."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "The environment was accepted."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "The environment is deleting."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "The environment is updating."
          },
          {
            "name": "Preparing",
            "value": "Preparing",
            "description": "The environment is preparing."
          },
          {
            "name": "Running",
            "value": "Running",
            "description": "The environment is running."
          },
          {
            "name": "Syncing",
            "value": "Syncing",
            "description": "The environment is Syncing."
          },
          {
            "name": "MovingResources",
            "value": "MovingResources",
            "description": "The environment is moving resources."
          },
          {
            "name": "TransientFailure",
            "value": "TransientFailure",
            "description": "The environment has a transient failure."
          },
          {
            "name": "StorageProvisioningFailed",
            "value": "StorageProvisioningFailed",
            "description": "The environment storage provisioning failed."
          }
        ]
      }
    },
    "EnvironmentType": {
      "type": "object",
      "description": "Properties of an environment type.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the environment type.",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
          "readOnly": true
        },
        "deploymentTargetId": {
          "type": "string",
          "description": "Id of a subscription or management group that the environment type will be\nmapped to. The environment's resources will be deployed into this subscription\nor management group."
        },
        "status": {
          "$ref": "#/definitions/EnvironmentTypeEnableStatus",
          "description": "Indicates whether this environment type is enabled for use in this project."
        }
      },
      "required": [
        "name",
        "deploymentTargetId",
        "status"
      ]
    },
    "EnvironmentTypeEnableStatus": {
      "type": "string",
      "description": "Indicates whether an environment type is enabled for use in a project.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "EnvironmentTypeEnableStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "The environment type is enabled for use in the project."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "The environment type is not enabled for use in the project."
          }
        ]
      }
    },
    "HardwareProfile": {
      "type": "object",
      "description": "Hardware specifications for the Dev Box.",
      "properties": {
        "skuName": {
          "$ref": "#/definitions/SkuName",
          "description": "The name of the SKU.",
          "readOnly": true
        },
        "vCPUs": {
          "type": "integer",
          "format": "int32",
          "description": "The number of vCPUs available for the Dev Box.",
          "readOnly": true
        },
        "memoryGB": {
          "type": "integer",
          "format": "int32",
          "description": "The amount of memory available for the Dev Box.",
          "readOnly": true
        }
      }
    },
    "HibernateSupport": {
      "type": "string",
      "description": "Indicates whether hibernate is supported and enabled, disabled, or unsupported by the operating system. Unknown hibernate support is represented as null.",
      "enum": [
        "Enabled",
        "Disabled",
        "OsUnsupported"
      ],
      "x-ms-enum": {
        "name": "HibernateSupport",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Hibernate is enabled."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Hibernate is not enabled."
          },
          {
            "name": "OsUnsupported",
            "value": "OsUnsupported",
            "description": "Hibernate is not supported by the operating system."
          }
        ]
      }
    },
    "ImageReference": {
      "type": "object",
      "description": "Specifies information about the image used.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the image used.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "The version of the image.",
          "readOnly": true
        },
        "operatingSystem": {
          "type": "string",
          "description": "The operating system of the image.",
          "readOnly": true
        },
        "osBuildNumber": {
          "type": "string",
          "description": "The operating system build number of the image.",
          "readOnly": true
        },
        "publishedDate": {
          "type": "string",
          "format": "date-time",
          "description": "The datetime that the backing image version was published.",
          "readOnly": true
        }
      }
    },
    "LocalAdminStatus": {
      "type": "string",
      "description": "Indicates whether owners of Dev Boxes in a pool are local administrators on the Dev Boxes.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "LocalAdminStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Owners of Dev Boxes in the pool are local administrators on the Dev Boxes."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Owners of Dev Boxes in the pool are not local administrators on the Dev Boxes."
          }
        ]
      }
    },
    "OperationStatus": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified ID for the operation status.",
          "readOnly": true
        },
        "name": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "The operation id name.",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/Azure.Core.Foundations.OperationState",
          "description": "Provisioning state of the resource."
        },
        "resourceId": {
          "type": "string",
          "description": "The id of the resource."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "percentComplete": {
          "type": "number",
          "format": "double",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "properties": {
          "description": "Custom operation properties, populated only for a successful operation."
        },
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "Operation Error message."
        }
      },
      "required": [
        "id",
        "name",
        "status"
      ]
    },
    "OsDisk": {
      "type": "object",
      "description": "Settings for the operating system disk.",
      "properties": {
        "diskSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "The size of the OS Disk in gigabytes.",
          "readOnly": true
        }
      }
    },
    "OsType": {
      "type": "string",
      "description": "The operating system type.",
      "enum": [
        "Windows"
      ],
      "x-ms-enum": {
        "name": "OsType",
        "modelAsString": true,
        "values": [
          {
            "name": "Windows",
            "value": "Windows",
            "description": "The Windows operating system."
          }
        ]
      }
    },
    "PagedCatalog": {
      "type": "object",
      "description": "Paged collection of Catalog items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Catalog items on this page",
          "items": {
            "$ref": "#/definitions/Catalog"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedDevBox": {
      "type": "object",
      "description": "Paged collection of DevBox items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DevBox items on this page",
          "items": {
            "$ref": "#/definitions/DevBox"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedDevBoxAction": {
      "type": "object",
      "description": "Paged collection of DevBoxAction items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DevBoxAction items on this page",
          "items": {
            "$ref": "#/definitions/DevBoxAction"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedDevBoxActionDelayResult": {
      "type": "object",
      "description": "Paged collection of DevBoxActionDelayResult items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DevBoxActionDelayResult items on this page",
          "items": {
            "$ref": "#/definitions/DevBoxActionDelayResult"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedEnvironment": {
      "type": "object",
      "description": "Paged collection of Environment items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Environment items on this page",
          "items": {
            "$ref": "#/definitions/Environment"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedEnvironmentDefinition": {
      "type": "object",
      "description": "Paged collection of EnvironmentDefinition items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EnvironmentDefinition items on this page",
          "items": {
            "$ref": "#/definitions/EnvironmentDefinition"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedEnvironmentType": {
      "type": "object",
      "description": "Paged collection of EnvironmentType items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EnvironmentType items on this page",
          "items": {
            "$ref": "#/definitions/EnvironmentType"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedPool": {
      "type": "object",
      "description": "Paged collection of Pool items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Pool items on this page",
          "items": {
            "$ref": "#/definitions/Pool"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedProject": {
      "type": "object",
      "description": "Paged collection of Project items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Project items on this page",
          "items": {
            "$ref": "#/definitions/Project"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedSchedule": {
      "type": "object",
      "description": "Paged collection of Schedule items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Schedule items on this page",
          "items": {
            "$ref": "#/definitions/Schedule"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ParameterType": {
      "type": "string",
      "description": "The type of data a parameter accepts.",
      "enum": [
        "array",
        "boolean",
        "integer",
        "number",
        "object",
        "string"
      ],
      "x-ms-enum": {
        "name": "ParameterType",
        "modelAsString": true,
        "values": [
          {
            "name": "array",
            "value": "array",
            "description": "The parameter accepts an array of values."
          },
          {
            "name": "boolean",
            "value": "boolean",
            "description": "The parameter accepts a boolean value."
          },
          {
            "name": "integer",
            "value": "integer",
            "description": "The parameter accepts an integer value."
          },
          {
            "name": "number",
            "value": "number",
            "description": "The parameter accepts a number value."
          },
          {
            "name": "object",
            "value": "object",
            "description": "The parameter accepts an object value."
          },
          {
            "name": "string",
            "value": "string",
            "description": "The parameter accepts a string value."
          }
        ]
      }
    },
    "Pool": {
      "type": "object",
      "description": "A pool of Dev Boxes.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Pool name.",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
          "readOnly": true
        },
        "location": {
          "$ref": "#/definitions/Azure.Core.azureLocation",
          "description": "Azure region where Dev Boxes in the pool are located."
        },
        "osType": {
          "$ref": "#/definitions/OsType",
          "description": "The operating system type of Dev Boxes in this pool."
        },
        "hardwareProfile": {
          "$ref": "#/definitions/HardwareProfile",
          "description": "Hardware settings for the Dev Boxes created in this pool."
        },
        "hibernateSupport": {
          "$ref": "#/definitions/HibernateSupport",
          "description": "Indicates whether hibernate is enabled/disabled or unknown."
        },
        "storageProfile": {
          "$ref": "#/definitions/StorageProfile",
          "description": "Storage settings for Dev Box created in this pool."
        },
        "imageReference": {
          "$ref": "#/definitions/ImageReference",
          "description": "Image settings for Dev Boxes create in this pool."
        },
        "localAdministrator": {
          "$ref": "#/definitions/LocalAdminStatus",
          "description": "Indicates whether owners of Dev Boxes in this pool are local administrators on\nthe Dev Boxes."
        },
        "stopOnDisconnect": {
          "$ref": "#/definitions/StopOnDisconnectConfiguration",
          "description": "Stop on disconnect configuration settings for Dev Boxes created in this pool."
        },
        "healthStatus": {
          "$ref": "#/definitions/PoolHealthStatus",
          "description": "Overall health status of the Pool. Indicates whether or not the Pool is\navailable to create Dev Boxes."
        }
      },
      "required": [
        "name",
        "location",
        "healthStatus"
      ]
    },
    "PoolHealthStatus": {
      "type": "string",
      "description": "Pool status indicating whether a pool is available to create Dev Boxes.",
      "enum": [
        "Unknown",
        "Pending",
        "Healthy",
        "Warning",
        "Unhealthy"
      ],
      "x-ms-enum": {
        "name": "PoolHealthStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "The pool health status is not known."
          },
          {
            "name": "Pending",
            "value": "Pending",
            "description": "The pool health status waiting for health checks to run."
          },
          {
            "name": "Healthy",
            "value": "Healthy",
            "description": "The pool health status is healthy."
          },
          {
            "name": "Warning",
            "value": "Warning",
            "description": "The pool health status has one or more warnings."
          },
          {
            "name": "Unhealthy",
            "value": "Unhealthy",
            "description": "The pool health status is not healthy."
          }
        ]
      }
    },
    "PowerState": {
      "type": "string",
      "description": "The power states of a Dev Box.",
      "enum": [
        "Unknown",
        "Running",
        "Deallocated",
        "PoweredOff",
        "Hibernated"
      ],
      "x-ms-enum": {
        "name": "PowerState",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "The Dev Box power state is not known."
          },
          {
            "name": "Running",
            "value": "Running",
            "description": "The Dev Box is running."
          },
          {
            "name": "Deallocated",
            "value": "Deallocated",
            "description": "The Dev Box is deallocated."
          },
          {
            "name": "PoweredOff",
            "value": "PoweredOff",
            "description": "The Dev Box is powered off."
          },
          {
            "name": "Hibernated",
            "value": "Hibernated",
            "description": "The Dev Box is hibernated."
          }
        ]
      }
    },
    "Project": {
      "type": "object",
      "description": "Project details.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the project.",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of the project."
        },
        "maxDevBoxesPerUser": {
          "type": "integer",
          "format": "int32",
          "description": "When specified, indicates the maximum number of Dev Boxes a single user can\ncreate across all pools in the project.",
          "minimum": 0
        }
      },
      "required": [
        "name"
      ]
    },
    "RemoteConnection": {
      "type": "object",
      "description": "Provides remote connection information for a Dev Box.",
      "properties": {
        "webUrl": {
          "type": "string",
          "format": "uri",
          "description": "URL to open a browser based RDP session."
        },
        "rdpConnectionUrl": {
          "type": "string",
          "format": "uri",
          "description": "Link to open a Remote Desktop session."
        }
      }
    },
    "Schedule": {
      "type": "object",
      "description": "A Schedule to execute action.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Display name for the Schedule.",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/ScheduledType",
          "description": "Supported type this scheduled task represents."
        },
        "frequency": {
          "$ref": "#/definitions/ScheduledFrequency",
          "description": "The frequency of this scheduled task."
        },
        "time": {
          "type": "string",
          "description": "The target time to trigger the action. The format is HH:MM."
        },
        "timeZone": {
          "type": "string",
          "description": "The IANA timezone id at which the schedule should execute."
        }
      },
      "required": [
        "name",
        "type",
        "frequency",
        "time",
        "timeZone"
      ]
    },
    "ScheduledFrequency": {
      "type": "string",
      "description": "The frequency of task execution.",
      "enum": [
        "Daily"
      ],
      "x-ms-enum": {
        "name": "ScheduledFrequency",
        "modelAsString": true,
        "values": [
          {
            "name": "Daily",
            "value": "Daily",
            "description": "The scheduled task will run every day."
          }
        ]
      }
    },
    "ScheduledType": {
      "type": "string",
      "description": "The supported types for a scheduled task.",
      "enum": [
        "StopDevBox"
      ],
      "x-ms-enum": {
        "name": "ScheduledType",
        "modelAsString": true,
        "values": [
          {
            "name": "StopDevBox",
            "value": "StopDevBox",
            "description": "The scheduled task will stop impacted Dev Boxes."
          }
        ]
      }
    },
    "SkuName": {
      "type": "string",
      "description": "Indicates the Dev Box compute.",
      "enum": [
        "general_i_8c32gb256ssd_v2",
        "general_i_8c32gb512ssd_v2",
        "general_i_8c32gb1024ssd_v2",
        "general_i_8c32gb2048ssd_v2",
        "general_i_16c64gb256ssd_v2",
        "general_i_16c64gb512ssd_v2",
        "general_i_16c64gb1024ssd_v2",
        "general_i_16c64gb2048ssd_v2",
        "general_i_32c128gb512ssd_v2",
        "general_i_32c128gb1024ssd_v2",
        "general_i_32c128gb2048ssd_v2",
        "general_a_8c32gb256ssd_v2",
        "general_a_8c32gb512ssd_v2",
        "general_a_8c32gb1024ssd_v2",
        "general_a_8c32gb2048ssd_v2",
        "general_a_16c64gb256ssd_v2",
        "general_a_16c64gb512ssd_v2",
        "general_a_16c64gb1024ssd_v2",
        "general_a_16c64gb2048ssd_v2",
        "general_a_32c128gb512ssd_v2",
        "general_a_32c128gb1024ssd_v2",
        "general_a_32c128gb2048ssd_v2"
      ],
      "x-ms-enum": {
        "name": "SkuName",
        "modelAsString": true,
        "values": [
          {
            "name": "general_i_8c32gb256ssd_v2",
            "value": "general_i_8c32gb256ssd_v2",
            "description": "Intel, 8 vCPU, 32 GB RAM, 256 GB Storage."
          },
          {
            "name": "general_i_8c32gb512ssd_v2",
            "value": "general_i_8c32gb512ssd_v2",
            "description": "Intel, 8 vCPU, 32 GB RAM, 512 GB Storage."
          },
          {
            "name": "general_i_8c32gb1024ssd_v2",
            "value": "general_i_8c32gb1024ssd_v2",
            "description": "Intel, 8 vCPU, 32 GB RAM, 1024 GB Storage."
          },
          {
            "name": "general_i_8c32gb2048ssd_v2",
            "value": "general_i_8c32gb2048ssd_v2",
            "description": "Intel, 8 vCPU, 32 GB RAM, 2048 GB Storage."
          },
          {
            "name": "general_i_16c64gb256ssd_v2",
            "value": "general_i_16c64gb256ssd_v2",
            "description": "Intel, 16 vCPU, 64 GB RAM, 256 GB Storage."
          },
          {
            "name": "general_i_16c64gb512ssd_v2",
            "value": "general_i_16c64gb512ssd_v2",
            "description": "Intel, 16 vCPU, 64 GB RAM, 512 GB Storage."
          },
          {
            "name": "general_i_16c64gb1024ssd_v2",
            "value": "general_i_16c64gb1024ssd_v2",
            "description": "Intel, 16 vCPU, 64 GB RAM, 1024 GB Storage."
          },
          {
            "name": "general_i_16c64gb2048ssd_v2",
            "value": "general_i_16c64gb2048ssd_v2",
            "description": "Intel, 16 vCPU, 64 GB RAM, 2048 GB Storage."
          },
          {
            "name": "general_i_32c128gb512ssd_v2",
            "value": "general_i_32c128gb512ssd_v2",
            "description": "Intel, 32 vCPU, 128 GB RAM, 512 GB Storage."
          },
          {
            "name": "general_i_32c128gb1024ssd_v2",
            "value": "general_i_32c128gb1024ssd_v2",
            "description": "Intel, 32 vCPU, 128 GB RAM, 1024 GB Storage."
          },
          {
            "name": "general_i_32c128gb2048ssd_v2",
            "value": "general_i_32c128gb2048ssd_v2",
            "description": "Intel, 32 vCPU, 128 GB RAM, 2048 GB Storage."
          },
          {
            "name": "general_a_8c32gb256ssd_v2",
            "value": "general_a_8c32gb256ssd_v2",
            "description": "AMD, 8 vCPU, 32 GB RAM, 256 GB Storage."
          },
          {
            "name": "general_a_8c32gb512ssd_v2",
            "value": "general_a_8c32gb512ssd_v2",
            "description": "AMD, 8 vCPU, 32 GB RAM, 512 GB Storage."
          },
          {
            "name": "general_a_8c32gb1024ssd_v2",
            "value": "general_a_8c32gb1024ssd_v2",
            "description": "AMD, 8 vCPU, 32 GB RAM, 1024 GB Storage."
          },
          {
            "name": "general_a_8c32gb2048ssd_v2",
            "value": "general_a_8c32gb2048ssd_v2",
            "description": "AMD, 8 vCPU, 32 GB RAM, 2048 GB Storage."
          },
          {
            "name": "general_a_16c64gb256ssd_v2",
            "value": "general_a_16c64gb256ssd_v2",
            "description": "AMD, 16 vCPU, 64 GB RAM, 256 GB Storage."
          },
          {
            "name": "general_a_16c64gb512ssd_v2",
            "value": "general_a_16c64gb512ssd_v2",
            "description": "AMD, 16 vCPU, 64 GB RAM, 512 GB Storage."
          },
          {
            "name": "general_a_16c64gb1024ssd_v2",
            "value": "general_a_16c64gb1024ssd_v2",
            "description": "AMD, 16 vCPU, 64 GB RAM, 1024 GB Storage."
          },
          {
            "name": "general_a_16c64gb2048ssd_v2",
            "value": "general_a_16c64gb2048ssd_v2",
            "description": "AMD, 16 vCPU, 64 GB RAM, 2048 GB Storage."
          },
          {
            "name": "general_a_32c128gb512ssd_v2",
            "value": "general_a_32c128gb512ssd_v2",
            "description": "AMD, 32 vCPU, 128 GB RAM, 512 GB Storage."
          },
          {
            "name": "general_a_32c128gb1024ssd_v2",
            "value": "general_a_32c128gb1024ssd_v2",
            "description": "AMD, 32 vCPU, 128 GB RAM, 1024 GB Storage."
          },
          {
            "name": "general_a_32c128gb2048ssd_v2",
            "value": "general_a_32c128gb2048ssd_v2",
            "description": "AMD, 32 vCPU, 128 GB RAM, 2048 GB Storage."
          }
        ]
      }
    },
    "StopOnDisconnectConfiguration": {
      "type": "object",
      "description": "Stop on disconnect configuration settings for Dev Boxes created in this pool.",
      "properties": {
        "status": {
          "$ref": "#/definitions/StopOnDisconnectEnableStatus",
          "description": "Indicates whether the feature to stop the devbox on disconnect once the grace\nperiod has lapsed is enabled."
        },
        "gracePeriodMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "The specified time in minutes to wait before stopping a Dev Box once disconnect\nis detected."
        }
      },
      "required": [
        "status"
      ]
    },
    "StopOnDisconnectEnableStatus": {
      "type": "string",
      "description": "Indicates whether the feature to stop the devbox on disconnect once the grace period has lapsed is enabled.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "StopOnDisconnectEnableStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Stop on disconnect is enabled on the Dev Box."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Stop on disconnect is not enabled on the Dev Box."
          }
        ]
      }
    },
    "StorageProfile": {
      "type": "object",
      "description": "Storage settings for the Dev Box's disks.",
      "properties": {
        "osDisk": {
          "$ref": "#/definitions/OsDisk",
          "description": "Settings for the operating system disk."
        }
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
