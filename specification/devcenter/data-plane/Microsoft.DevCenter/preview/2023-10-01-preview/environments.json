{
  "swagger": "2.0",
  "info": {
    "version": "2023-10-01-preview",
    "title": "DevCenter",
    "description": "Deployment Environments API."
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "devcenter.json#/parameters/EndpointParameter"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "AADToken": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "AADToken": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/projects/{projectName}/environments": {
      "get": {
        "tags": [
          "Environments"
        ],
        "description": "Lists the environments for a project.",
        "parameters": [
          {
            "$ref": "devcenter.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/TopParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/ProjectNameParameter"
          }
        ],
        "operationId": "Environments_ListEnvironments",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EnvironmentListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "devcenter.json#/definitions/CloudError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Environments_ListEnvironments": {
            "$ref": "./examples/Environments_ListByProject.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/users/{userId}/environments": {
      "get": {
        "tags": [
          "Environments"
        ],
        "description": "Lists the environments for a project and user.",
        "parameters": [
          {
            "$ref": "devcenter.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/TopParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/UserIdParameter"
          }
        ],
        "operationId": "Environments_ListEnvironmentsByUser",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EnvironmentListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "devcenter.json#/definitions/CloudError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Environments_ListEnvironmentsByUser": {
            "$ref": "./examples/Environments_ListByProjectByUser.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/users/{userId}/environments/{environmentName}": {
      "get": {
        "tags": [
          "Environments"
        ],
        "description": "Gets an environment",
        "parameters": [
          {
            "$ref": "devcenter.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentNameParameter"
          }
        ],
        "operationId": "Environments_GetEnvironmentByUser",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "devcenter.json#/definitions/CloudError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Environments_GetEnvironmentByUser": {
            "$ref": "./examples/Environments_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Environments"
        ],
        "description": "Creates or updates an environment.",
        "parameters": [
          {
            "$ref": "devcenter.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents an environment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          }
        ],
        "operationId": "Environments_CreateOrReplaceEnvironment",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "responses": {
          "201": {
            "description": "Created. Operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/Environment"
            },
            "headers": {
              "Operation-Location": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "devcenter.json#/definitions/CloudError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Environments_CreateByEnvironmentDefinition": {
            "$ref": "./examples/Environments_CreateByEnvironmentDefinition.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Environments"
        ],
        "description": "Partially updates an environment",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          {
            "$ref": "devcenter.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updatable environment properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          }
        ],
        "operationId": "Environments_PatchEnvironment",
        "responses": {
          "200": {
            "description": "Succeeded",
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "devcenter.json#/definitions/CloudError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Environments_PatchEnvironment": {
            "$ref": "./examples/Environments_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Environments"
        ],
        "description": "Deletes an environment and all its associated resources",
        "parameters": [
          {
            "$ref": "devcenter.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentNameParameter"
          }
        ],
        "operationId": "Environments_DeleteEnvironment",
        "x-ms-long-running-operation": true,
        "responses": {
          "202": {
            "description": "Accepted. Operation will complete asynchronously.",
            "schema": {
              "$ref": "devcenter.json#/definitions/OperationStatus"
            },
            "headers": {
              "Operation-Location": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Deletion was successful or resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "devcenter.json#/definitions/CloudError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Environments_DeleteEnvironment": {
            "$ref": "./examples/Environments_Delete.json"
          }
        }
      }
    },
    "/projects/{projectName}/users/{userId}/environments/{environmentName}/outputs": {
      "get": {
        "tags": [
          "Environments"
        ],
        "parameters": [
          {
            "$ref": "devcenter.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentNameParameter"
          }
        ],
        "description": "Gets Outputs from the environment",
        "operationId": "Environments_GetOutputs",
        "responses": {
          "200": {
            "description": "The request completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnvironmentOutputs"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "devcenter.json#/definitions/CloudError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Environments_GetOutputs": {
            "$ref": "./examples/Environments_GetOutputs.json"
          }
        }
      }
    },
    "/projects/{projectName}/users/{userId}/environments/{environmentName}/operations": {
      "get": {
        "tags": [
          "EnvironmentOperations",
          "Environments"
        ],
        "description": "Lists operations on the environment which have occurred within the past 90 days",
        "parameters": [
          {
            "$ref": "devcenter.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/TopParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/FilterParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentNameParameter"
          }
        ],
        "operationId": "Environments_ListOperations",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EnvironmentOperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "devcenter.json#/definitions/CloudError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "EnvironmentOperations_ListByEnvironment": {
            "$ref": "./examples/EnvironmentOperations_ListByEnvironment.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/users/{userId}/environments/{environmentName}/operations/{operationId}": {
      "get": {
        "tags": [
          "EnvironmentOperations",
          "Environments"
        ],
        "description": "Gets an environment action result.",
        "parameters": [
          {
            "$ref": "devcenter.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentOperationIdParameter"
          }
        ],
        "operationId": "Environments_GetOperation",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EnvironmentOperation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "devcenter.json#/definitions/CloudError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "EnvironmentOperations_GetByEnvironment": {
            "$ref": "./examples/EnvironmentOperations_GetByEnvironment.json"
          }
        }
      }
    },
    "/projects/{projectName}/users/{userId}/environments/{environmentName}/operations/{operationId}/logs": {
      "get": {
        "tags": [
          "EnvironmentOperations",
          "Environments"
        ],
        "description": "Gets the logs for an operation on an environment.",
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "$ref": "devcenter.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentOperationIdParameter"
          }
        ],
        "operationId": "Environments_GetLogsByOperation",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "devcenter.json#/definitions/CloudError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "EnvironmentOperations_GetLogs": {
            "$ref": "./examples/EnvironmentOperations_GetLogs.json"
          }
        }
      }
    },
    "/projects/{projectName}/users/{userId}/environments/{environmentName}/actions": {
      "get": {
        "tags": [
          "Environment Actions"
        ],
        "description": "Get all scheduled actions for a user within an  environment.",
        "parameters": [
          {
            "$ref": "devcenter.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentNameParameter"
          }
        ],
        "operationId": "Environments_ListActions",
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/EnvironmentActionsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "devcenter.json#/definitions/CloudError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Environments_ListActions": {
            "$ref": "./examples/EnvironmentActions_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/EnvironmentAction"
      }
    },
    "/projects/{projectName}/users/{userId}/environments/{environmentName}/actions/{actionName}": {
      "get": {
        "tags": [
          "Environment Actions"
        ],
        "description": "Retrieve a specific environment action.",
        "operationId": "Environments_GetAction",
        "parameters": [
          {
            "$ref": "devcenter.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentActionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/EnvironmentAction"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "devcenter.json#/definitions/CloudError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Environments_GetAction": {
            "$ref": "./examples/EnvironmentActions_Get.json"
          }
        }
      }
    },
    "/projects/{projectName}/users/{userId}/environments/{environmentName}/actions/{actionName}:skip": {
      "post": {
        "tags": [
          "Environment Actions"
        ],
        "parameters": [
          {
            "$ref": "devcenter.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentActionNameParameter"
          }
        ],
        "description": "Skips an occurrence of an action.",
        "operationId": "Environments_SkipAction",
        "responses": {
          "204": {
            "description": "No content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "devcenter.json#/definitions/CloudError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Environments_SkipAction": {
            "$ref": "./examples/EnvironmentActions_Skip.json"
          }
        }
      }
    },
    "/projects/{projectName}/users/{userId}/environments/{environmentName}/actions/{actionName}:delay": {
      "post": {
        "tags": [
          "Environment Actions"
        ],
        "parameters": [
          {
            "$ref": "devcenter.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentActionNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentActionDelayUntilParameter"
          }
        ],
        "description": "Delays the occurrence of an action.",
        "operationId": "Environments_DelayAction",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EnvironmentAction"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "devcenter.json#/definitions/CloudError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Environments_DelayAction": {
            "$ref": "./examples/EnvironmentActions_Delay.json"
          }
        }
      }
    },
    "/projects/{projectName}/catalogs": {
      "get": {
        "tags": [
          "Catalogs"
        ],
        "description": "Lists all of the catalogs available for a project.",
        "parameters": [
          {
            "$ref": "devcenter.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/TopParameter"
          }
        ],
        "operationId": "Environments_ListCatalogsByProject",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CatalogListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "devcenter.json#/definitions/CloudError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Environments_ListCatalogsByProject": {
            "$ref": "./examples/Catalogs_ListByProject.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/catalogs/{catalogName}": {
      "get": {
        "tags": [
          "Catalogs"
        ],
        "description": "Gets the specified catalog within the project",
        "parameters": [
          {
            "$ref": "devcenter.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/CatalogNameParameter"
          }
        ],
        "operationId": "Environments_GetCatalog",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "devcenter.json#/definitions/CloudError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Environments_GetCatalog": {
            "$ref": "./examples/Catalogs_Get.json"
          }
        }
      }
    },
    "/projects/{projectName}/environmentDefinitions": {
      "get": {
        "tags": [
          "Environment Definitions"
        ],
        "description": "Lists all environment definitions available for a project.",
        "parameters": [
          {
            "$ref": "devcenter.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/TopParameter"
          }
        ],
        "operationId": "Environments_ListEnvironmentDefinitionsByProject",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EnvironmentDefinitionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "devcenter.json#/definitions/CloudError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Environments_ListEnvironmentDefinitions": {
            "$ref": "./examples/EnvironmentDefinitions_ListByProject.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/catalogs/{catalogName}/environmentDefinitions": {
      "get": {
        "tags": [
          "Environment Definitions"
        ],
        "description": "Lists all environment definitions available within a catalog.",
        "parameters": [
          {
            "$ref": "devcenter.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/TopParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/CatalogNameParameter"
          }
        ],
        "operationId": "Environments_ListEnvironmentDefinitionsByCatalog",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EnvironmentDefinitionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "devcenter.json#/definitions/CloudError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Environments_ListEnvironmentDefinitionsByCatalog": {
            "$ref": "./examples/EnvironmentDefinitions_ListByCatalog.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/catalogs/{catalogName}/environmentDefinitions/{definitionName}": {
      "get": {
        "tags": [
          "Environment Definitions"
        ],
        "description": "Get an environment definition from a catalog.",
        "parameters": [
          {
            "$ref": "devcenter.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/CatalogNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentDefinitionNameParameter"
          }
        ],
        "operationId": "Environments_GetEnvironmentDefinition",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EnvironmentDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "devcenter.json#/definitions/CloudError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Environments_GetEnvironmentDefinition": {
            "$ref": "./examples/EnvironmentDefinitions_Get.json"
          }
        }
      }
    },
    "/projects/{projectName}/environmentTypes": {
      "get": {
        "tags": [
          "Environment Types"
        ],
        "description": "Lists all environment types configured for a project.",
        "parameters": [
          {
            "$ref": "devcenter.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "devcenter.json#/parameters/TopParameter"
          }
        ],
        "operationId": "Environments_ListEnvironmentTypes",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EnvironmentTypeListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "devcenter.json#/definitions/CloudError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Environments_ListEnvironmentTypes": {
            "$ref": "./examples/EnvironmentTypes_ListByProject.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "EnvironmentUpdateProperties": {
      "description": "Properties of an environment. These properties can be updated after the resource has been created.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EnvironmentPatchProperties"
        }
      ],
      "properties": {
        "parameters": {
          "type": "object",
          "description": "Parameters object for the environment. Can only be updated via create or replace."
        }
      }
    },
    "EnvironmentPatchProperties": {
      "description": "Properties of an environment. These properties can be updated via PATCH after the resource has been created.",
      "type": "object",
      "properties": {
        "expirationDate": {
          "description": "The time the expiration date will be triggered (UTC), after which the environment and associated resources will be deleted.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Environment": {
      "description": "Properties of an environment.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EnvironmentUpdateProperties"
        }
      ],
      "properties": {
        "uri": {
          "description": "The unique URI of the environment",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Environment name.",
          "readOnly": true
        },
        "environmentType": {
          "type": "string",
          "description": "The name of the environment type. Cannot be updated after creation.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "user": {
          "type": "string",
          "description": "The AAD object id of the owner of this Environment.",
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state of the environment.",
          "type": "string",
          "readOnly": true
        },
        "resourceGroupId": {
          "description": "The identifier of the resource group containing the environment's resources.",
          "type": "string",
          "readOnly": true
        },
        "catalogName": {
          "type": "string",
          "description": "The name of the catalog. Cannot be updated after creation.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "environmentDefinitionName": {
          "type": "string",
          "description": "The name of the environment definition. Cannot be updated after creation.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "error": {
          "description": "Provisioning error details. Populated only for error states.",
          "readOnly": true,
          "$ref": "devcenter.json#/definitions/CloudErrorBody"
        }
      },
      "required": [
        "environmentType",
        "catalogName",
        "environmentDefinitionName"
      ]
    },
    "EnvironmentOutputs": {
      "description": "Outputs from environment deployment.",
      "type": "object",
      "properties": {
        "outputs": {
          "type": "object",
          "description": "The outputs Names and Values",
          "additionalProperties": {
            "$ref": "#/definitions/EnvironmentOutput"
          }
        }
      }
    },
    "EnvironmentOutput": {
      "description": "Output from environment deployment.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of the output value",
          "type": "string",
          "enum": [
            "string",
            "array",
            "boolean",
            "number",
            "object"
          ],
          "x-ms-enum": {
            "name": "EnvironmentOutputType",
            "modelAsString": true,
            "values": [
              {
                "value": "array",
                "description": "The output is an array of values."
              },
              {
                "value": "boolean",
                "description": "The output is a boolean value."
              },
              {
                "value": "number",
                "description": "The output is a number value."
              },
              {
                "value": "object",
                "description": "The output is an object value."
              },
              {
                "value": "string",
                "description": "The output is a string value."
              }
            ]
          }
        },
        "value": {
          "description": "The output value",
          "type": "object"
        },
        "sensitive": {
          "description": "Indicates if the value is sensitive.",
          "type": "boolean"
        }
      }
    },
    "EnvironmentActionType": {
      "description": "The scheduled action types.",
      "type": "string",
      "enum": [
        "Delete"
      ],
      "x-ms-enum": {
        "name": "EnvironmentActionType",
        "modelAsString": true,
        "values": [
          {
            "value": "Delete",
            "description": "The action will delete the environment and associated resources."
          }
        ]
      }
    },
    "EnvironmentNextAction": {
      "description": "Details about the next run of an action.",
      "type": "object",
      "properties": {
        "scheduledTime": {
          "description": "The time the action will be triggered (UTC).",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "scheduledTime"
      ]
    },
    "EnvironmentActionsListResult": {
      "type": "object",
      "description": "The actions list result",
      "properties": {
        "value": {
          "description": "Current page of results",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentAction"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "required": [
        "value"
      ]
    },
    "EnvironmentAction": {
      "type": "object",
      "description": "An upcoming Environment Action.",
      "properties": {
        "name": {
          "description": "Uniquely identifies the action.",
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "description": "Uri of the action resource.",
          "type": "string",
          "readOnly": true
        },
        "actionType": {
          "description": "The action that will be taken.",
          "$ref": "#/definitions/EnvironmentActionType",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "next": {
          "description": "Details about the next run of this action.",
          "$ref": "#/definitions/EnvironmentNextAction"
        },
        "lastModifiedBy": {
          "description": "Object Id of the user who last modified the action.",
          "type": "string",
          "readOnly": true
        },
        "lastModifiedAt": {
          "description": "time the object was last modified.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      },
      "required": [
        "actionType",
        "next"
      ]
    },
    "EnvironmentListResult": {
      "description": "Results of the environment list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Environment"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "CatalogListResult": {
      "description": "Results of the catalog list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Catalog"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "Catalog": {
      "description": "A catalog.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The unique URI of the catalog",
          "type": "string"
        },
        "name": {
          "description": "Name of the catalog.",
          "type": "string"
        }
      },
      "required": [
        "uri",
        "name"
      ]
    },
    "EnvironmentDefinitionListResult": {
      "description": "Results of the environment definition list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentDefinition"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "EnvironmentDefinition": {
      "description": "An environment definition.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The unique URI of the environment definition",
          "type": "string"
        },
        "id": {
          "description": "The ID of the environment definition.",
          "type": "string"
        },
        "name": {
          "description": "Name of the environment definition.",
          "type": "string"
        },
        "catalogName": {
          "description": "Name of the catalog.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the environment definition.",
          "type": "string"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentDefinitionParameter"
          },
          "description": "Input parameters passed to an environment."
        },
        "parametersSchema": {
          "type": "string",
          "description": "JSON schema defining the parameters object passed to an environment."
        },
        "templatePath": {
          "description": "Path to the Environment Definition entrypoint file.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "uri",
        "catalogName",
        "id"
      ]
    },
    "EnvironmentDefinitionParameter": {
      "type": "object",
      "description": "Properties of an Environment Definition parameter",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique ID of the parameter"
        },
        "name": {
          "type": "string",
          "description": "Display name of the parameter"
        },
        "description": {
          "type": "string",
          "description": "Description of the parameter"
        },
        "default": {
          "type": "string",
          "description": "Default value of the parameter"
        },
        "type": {
          "description": "A string of one of the basic JSON types (number, integer, array, object, boolean, string)",
          "$ref": "#/definitions/ParameterType"
        },
        "readOnly": {
          "type": "boolean",
          "description": "Whether or not this parameter is read-only.  If true, default should have a value."
        },
        "required": {
          "type": "boolean",
          "description": "Whether or not this parameter is required"
        },
        "allowed": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "uniqueItems": true,
          "description": "An array of allowed values"
        }
      },
      "required": [
        "id",
        "type",
        "required"
      ]
    },
    "EnvironmentTypeListResult": {
      "description": "Result of the environment type list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentType"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "EnvironmentType": {
      "description": "Properties of an environment type.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The unique URI of the environment type",
          "type": "string"
        },
        "name": {
          "description": "Name of the environment type",
          "type": "string"
        },
        "deploymentTargetId": {
          "description": "The ID of a subscription or management group that the environment type will be mapped to. The environment's resources will be deployed into this subscription or management group.",
          "type": "string"
        },
        "status": {
          "description": "Indicates whether this environment type is enabled for use in this project.",
          "$ref": "#/definitions/EnvironmentTypeEnableStatus"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the environment type."
        }
      },
      "required": [
        "uri",
        "name",
        "deploymentTargetId",
        "status"
      ]
    },
    "EnvironmentTypeEnableStatus": {
      "description": "Indicates whether an environment type is enabled for use in a project.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "EnvironmentTypeEnableStatus",
        "modelAsString": true,
        "values": [
          {
            "value": "Enabled",
            "description": "The environment type is enabled for use in the project."
          },
          {
            "value": "Disabled",
            "description": "The environment type is not enabled for use in the project."
          }
        ]
      }
    },
    "ParameterType": {
      "type": "string",
      "enum": [
        "array",
        "boolean",
        "integer",
        "number",
        "object",
        "string"
      ],
      "description": "The type of data a parameter accepts.",
      "x-ms-enum": {
        "name": "ParameterType",
        "modelAsString": true,
        "values": [
          {
            "value": "array",
            "description": "The parameter accepts an array of values."
          },
          {
            "value": "boolean",
            "description": "The parameter accepts a boolean value."
          },
          {
            "value": "integer",
            "description": "The parameter accepts an integer value."
          },
          {
            "value": "number",
            "description": "The parameter accepts a number value."
          },
          {
            "value": "object",
            "description": "The parameter accepts an object value."
          },
          {
            "value": "string",
            "description": "The parameter accepts a string value."
          }
        ]
      }
    },
    "EnvironmentOperationListResult": {
      "type": "object",
      "description": "The action results list result.",
      "properties": {
        "value": {
          "description": "The current page of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentOperation"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "required": [
        "value"
      ]
    },
    "EnvironmentOperation": {
      "type": "object",
      "description": "Information about an operation on an environment.",
      "discriminator": "kind",
      "properties": {
        "uri": {
          "description": "The unique URI for the environment operation.",
          "type": "string"
        },
        "operationId": {
          "description": "Unique identifier for the environment operation.",
          "type": "string"
        },
        "kind": {
          "description": "The kind of operation that occurred.",
          "$ref": "#/definitions/EnvironmentOperationKind"
        },
        "status": {
          "description": "The operation status.",
          "$ref": "#/definitions/EnvironmentOperationStatus"
        },
        "createdByObjectId": {
          "description": "The object ID of the actor which initiated the operation.",
          "type": "string"
        },
        "startTime": {
          "description": "The time the operation started.",
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "description": "The time the operation finished.",
          "type": "string",
          "format": "date-time"
        },
        "environmentParameters": {
          "type": "object",
          "description": "Parameters object for the environment at the time of the operation."
        },
        "error": {
          "description": "Provisioning or operation error details. Populated only for error states.",
          "$ref": "devcenter.json#/definitions/CloudErrorBody"
        }
      },
      "required": [
        "uri",
        "operationId",
        "kind",
        "status"
      ]
    },
    "EnvironmentOperationKind": {
      "type": "string",
      "enum": [
        "Deploy",
        "Delete"
      ],
      "description": "The type of environment operation.",
      "x-ms-enum": {
        "name": "EnvironmentOperationKind",
        "modelAsString": true,
        "values": [
          {
            "value": "Deploy",
            "description": "The operation represents a deployment."
          },
          {
            "value": "Delete",
            "description": "The operation represents a delete."
          }
        ]
      }
    },
    "EnvironmentOperationStatus": {
      "type": "string",
      "enum": [
        "NotStarted",
        "Running",
        "Succeeded",
        "Canceled",
        "Failed"
      ],
      "description": "The status of an environment operation.",
      "x-ms-enum": {
        "name": "EnvironmentOperationStatus",
        "modelAsString": true,
        "values": [
          {
            "value": "NotStarted",
            "description": "The operation has not started."
          },
          {
            "value": "Running",
            "description": "The operation is running."
          },
          {
            "value": "Succeeded",
            "description": "The operation succeeded."
          },
          {
            "value": "Canceled",
            "description": "The operation was canceled."
          },
          {
            "value": "Failed",
            "description": "The operation failed."
          }
        ]
      }
    },
    "EnvironmentDeployOperation": {
      "type": "object",
      "description": "Information about a deploy operation on an environment.",
      "x-ms-discriminator-value": "Deploy",
      "allOf": [
        {
          "$ref": "#/definitions/EnvironmentOperation"
        }
      ]
    },
    "EnvironmentDeleteOperation": {
      "type": "object",
      "description": "Information about a delete operation on an environment.",
      "x-ms-discriminator-value": "Delete",
      "allOf": [
        {
          "$ref": "#/definitions/EnvironmentOperation"
        }
      ]
    }
  },
  "parameters": {
    "EnvironmentNameParameter": {
      "name": "environmentName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
      "minLength": 3,
      "maxLength": 63,
      "description": "The name of the environment.",
      "x-ms-parameter-location": "method"
    },
    "EnvironmentDefinitionNameParameter": {
      "name": "definitionName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
      "minLength": 3,
      "maxLength": 63,
      "description": "The name of the environment definition",
      "x-ms-parameter-location": "method"
    },
    "EnvironmentOperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
      "minLength": 3,
      "maxLength": 63,
      "description": "The id of the operation on an environment.",
      "x-ms-parameter-location": "method"
    },
    "EnvironmentActionNameParameter": {
      "name": "actionName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
      "minLength": 3,
      "maxLength": 63,
      "description": "The name of an action that will take place on an Environment.",
      "x-ms-parameter-location": "method"
    },
    "EnvironmentActionDelayUntilParameter": {
      "name": "until",
      "description": "The time to delay the Environment action until.",
      "required": true,
      "type": "string",
      "format": "date-time",
      "in": "query",
      "x-ms-parameter-location": "method"
    }
  }
}
