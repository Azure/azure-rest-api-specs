{
  "swagger": "2.0",
  "info": {
    "version": "2021-11-20-preview",
    "title": "ElasticSanManagement"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "ElasticSans",
      "description": "APIs for ElasticSan operations."
    },
    {
      "name": "ElasticSanOperations",
      "description": "APIs for ElasticSan operations,"
    },
    {
      "name": "VolumeGroups",
      "description": "APIs for Volume Group operations."
    },
    {
      "name": "Volumes",
      "description": "APIs for Volume operations."
    }
  ],
  "paths": {
    "/providers/Microsoft.ElasticSan/operations": {
      "get": {
        "tags": [
          "Elastic San Operations"
        ],
        "operationId": "Operations_List",
        "description": "Gets a list of ElasticSan operations.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ElasticSanOperationListResult"
            }
          },
          "default": {
            "description": "Error from the ElasticSan Resource Provider",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "Operations_List_MaximumSet_Gen": {
            "$ref": "./examples/Operations_List_MaximumSet_Gen.json"
          },
          "Operations_List_MinimumSet_Gen": {
            "$ref": "./examples/Operations_List_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ElasticSan/skus": {
      "get": {
        "tags": [
          "Elastic San Skus"
        ],
        "summary": "List all the available Skus in the region and information related to them",
        "operationId": "Skus_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Specify $filter='location eq <location>' to filter on location.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists the available SKUs supported by Microsoft.ElasticSan for given subscription.",
            "schema": {
              "$ref": "#/definitions/SkuInformationList"
            }
          },
          "default": {
            "description": "Error from the ElasticSan Resource Provider.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "Skus_List_MaximumSet_Gen": {
            "$ref": "./examples/Skus_List_MaximumSet_Gen.json"
          },
          "Skus_List_MinimumSet_Gen": {
            "$ref": "./examples/Skus_List_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ElasticSan/elasticSans": {
      "get": {
        "tags": [
          "ElasticSans"
        ],
        "operationId": "ElasticSans_ListBySubscription",
        "description": "Gets a list of ElasticSans in a subscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Operation completed successfully; retrieved Elastic San by subscription",
            "schema": {
              "$ref": "#/definitions/ElasticSanList"
            }
          },
          "default": {
            "description": "Error from the ElasticSan Resource Provider",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ElasticSans_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/ElasticSans_ListBySubscription_MaximumSet_Gen.json"
          },
          "ElasticSans_ListBySubscription_MinimumSet_Gen": {
            "$ref": "./examples/ElasticSans_ListBySubscription_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans": {
      "get": {
        "tags": [
          "ElasticSan"
        ],
        "operationId": "ElasticSans_ListByResourceGroup",
        "description": "Gets a list of ElasticSan in a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Operation completed successfully; retrieved elasticSans by resource group",
            "schema": {
              "$ref": "#/definitions/ElasticSanList"
            }
          },
          "default": {
            "description": "Error from the ElasticSan Resource Provider",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ElasticSans_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/ElasticSans_ListByResourceGroup_MaximumSet_Gen.json"
          },
          "ElasticSans_ListByResourceGroup_MinimumSet_Gen": {
            "$ref": "./examples/ElasticSans_ListByResourceGroup_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}": {
      "put": {
        "tags": [
          "ElasticSans"
        ],
        "operationId": "ElasticSans_Create",
        "description": "Create ElasticSan.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ElasticSanNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ElasticSan"
            },
            "description": "Elastic San object."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Returned when the create operation is successfully completed.",
            "schema": {
              "$ref": "#/definitions/ElasticSan"
            }
          },
          "202": {
            "description": "Accepted -- Create request accepted; operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/ElasticSan"
            }
          },
          "default": {
            "description": "Error from the ElasticSan Resource Provider",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "ElasticSans_Create_MaximumSet_Gen": {
            "$ref": "./examples/ElasticSans_Create_MaximumSet_Gen.json"
          },
          "ElasticSans_Create_MinimumSet_Gen": {
            "$ref": "./examples/ElasticSans_Create_MinimumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "ElasticSans"
        ],
        "operationId": "ElasticSans_Update",
        "description": "Update a Elastic San.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ElasticSanNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ElasticSanUpdate"
            },
            "description": "Elastic San object."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- ElasticSAN properties updated successfully.",
            "schema": {
              "$ref": "#/definitions/ElasticSan"
            }
          },
          "202": {
            "description": "Accepted -- Update request accepted; operation will complete asynchronously."
          },
          "default": {
            "description": "Error from the ElasticSan Resource Provider.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "ElasticSans_Update_MaximumSet_Gen": {
            "$ref": "./examples/ElasticSans_Update_MaximumSet_Gen.json"
          },
          "ElasticSans_Update_MinimumSet_Gen": {
            "$ref": "./examples/ElasticSans_Update_MinimumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ElasticSans"
        ],
        "operationId": "ElasticSans_Delete",
        "description": "Delete a Elastic San.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ElasticSanNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Delete operation completed successfully."
          },
          "202": {
            "description": "Accepted -- Delete request accepted; operation will complete asynchronously."
          },
          "204": {
            "description": "NoContent --ElasticSAN does not exist in the subscription."
          },
          "default": {
            "description": "Error from the ElasticSan Resource Provider",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "ElasticSans_Delete_MaximumSet_Gen": {
            "$ref": "./examples/ElasticSans_Delete_MaximumSet_Gen.json"
          },
          "ElasticSans_Delete_MinimumSet_Gen": {
            "$ref": "./examples/ElasticSans_Delete_MinimumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "ElasticSans"
        ],
        "operationId": "ElasticSans_Get",
        "description": "Get a ElasticSan.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ElasticSanNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Operation completed successfully; retrieved ElasticSan.",
            "schema": {
              "$ref": "#/definitions/ElasticSan"
            }
          },
          "default": {
            "description": "Error from the ElasticSan Resource Provider.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "ElasticSans_Get_MaximumSet_Gen": {
            "$ref": "./examples/ElasticSans_Get_MaximumSet_Gen.json"
          },
          "ElasticSans_Get_MinimumSet_Gen": {
            "$ref": "./examples/ElasticSans_Get_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumeGroups": {
      "get": {
        "tags": [
          "VolumeGroups"
        ],
        "description": "List VolumeGroups.",
        "operationId": "VolumeGroups_ListByElasticSan",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ElasticSanNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Operation completed successfully; retrieved Volume Group List.",
            "schema": {
              "$ref": "#/definitions/VolumeGroupList"
            }
          },
          "default": {
            "description": "Error from the ElasticSan Resource Provider.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "VolumeGroups_ListByElasticSan_MaximumSet_Gen": {
            "$ref": "./examples/VolumeGroups_ListByElasticSan_MaximumSet_Gen.json"
          },
          "VolumeGroups_ListByElasticSan_MinimumSet_Gen": {
            "$ref": "./examples/VolumeGroups_ListByElasticSan_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}": {
      "put": {
        "tags": [
          "VolumeGroups"
        ],
        "description": "Create a Volume Group.",
        "operationId": "VolumeGroups_Create",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ElasticSanNameParameter"
          },
          {
            "$ref": "#/parameters/VolumeGroupNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VolumeGroup"
            },
            "description": "Volume Group object."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Returned when the create operation is successfully completed.",
            "schema": {
              "$ref": "#/definitions/VolumeGroup"
            }
          },
          "202": {
            "description": "Accepted -- Create request accepted; operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/VolumeGroup"
            }
          },
          "default": {
            "description": "Error from the ElasticSan Resource Provider.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "VolumeGroups_Create_MaximumSet_Gen": {
            "$ref": "./examples/VolumeGroups_Create_MaximumSet_Gen.json"
          },
          "VolumeGroups_Create_MinimumSet_Gen": {
            "$ref": "./examples/VolumeGroups_Create_MinimumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "VolumeGroups"
        ],
        "description": "Update an VolumeGroup.",
        "operationId": "VolumeGroups_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ElasticSanNameParameter"
          },
          {
            "$ref": "#/parameters/VolumeGroupNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VolumeGroupUpdate"
            },
            "description": "Volume Group object."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Returned when the update operation is successfully completed.",
            "schema": {
              "$ref": "#/definitions/VolumeGroup"
            }
          },
          "202": {
            "description": "Accepted -- Update request accepted; operation will complete asynchronously."
          },
          "default": {
            "description": "Error from the ElasticSan Resource Provider.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "VolumeGroups_Update_MaximumSet_Gen": {
            "$ref": "./examples/VolumeGroups_Update_MaximumSet_Gen.json"
          },
          "VolumeGroups_Update_MinimumSet_Gen": {
            "$ref": "./examples/VolumeGroups_Update_MinimumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "VolumeGroups"
        ],
        "description": "Delete an VolumeGroup.",
        "operationId": "VolumeGroups_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ElasticSanNameParameter"
          },
          {
            "$ref": "#/parameters/VolumeGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Delete operation completed successfully."
          },
          "202": {
            "description": "Accepted -- Delete request accepted; operation will complete asynchronously."
          },
          "204": {
            "description": "NoContent -- Resource does not exist in the subscription."
          },
          "default": {
            "description": "Error from the ElasticSan Resource Provider",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "VolumeGroups_Delete_MaximumSet_Gen": {
            "$ref": "./examples/VolumeGroups_Delete_MaximumSet_Gen.json"
          },
          "VolumeGroups_Delete_MinimumSet_Gen": {
            "$ref": "./examples/VolumeGroups_Delete_MinimumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "VolumeGroups"
        ],
        "description": "Get an VolumeGroups.",
        "operationId": "VolumeGroups_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ElasticSanNameParameter"
          },
          {
            "$ref": "#/parameters/VolumeGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation completed successfully; retrieved iSCSI Target.",
            "schema": {
              "$ref": "#/definitions/VolumeGroup"
            }
          },
          "default": {
            "description": "Error from the ElasticSan Resource Provider.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "VolumeGroups_Get_MaximumSet_Gen": {
            "$ref": "./examples/VolumeGroups_Get_MaximumSet_Gen.json"
          },
          "VolumeGroups_Get_MinimumSet_Gen": {
            "$ref": "./examples/VolumeGroups_Get_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/volumes/{volumeName}": {
      "put": {
        "tags": [
          "Volumes"
        ],
        "description": "Create a Volume.",
        "operationId": "Volumes_Create",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ElasticSanNameParameter"
          },
          {
            "$ref": "#/parameters/VolumeGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VolumeNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Volume"
            },
            "description": "Volume object."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Returned when the create operation is successfully completed.",
            "schema": {
              "$ref": "#/definitions/Volume"
            }
          },
          "202": {
            "description": "Accepted -- Create request accepted; operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/Volume"
            }
          },
          "default": {
            "description": "Error from the ElasticSan Resource Provider.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Volumes_Create_MaximumSet_Gen": {
            "$ref": "./examples/Volumes_Create_MaximumSet_Gen.json"
          },
          "Volumes_Create_MinimumSet_Gen": {
            "$ref": "./examples/Volumes_Create_MinimumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Volumes"
        ],
        "description": "Update an Volume.",
        "operationId": "Volumes_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ElasticSanNameParameter"
          },
          {
            "$ref": "#/parameters/VolumeGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VolumeNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VolumeUpdate"
            },
            "description": "Volume object."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Returned when the update operation is successfully completed.",
            "schema": {
              "$ref": "#/definitions/Volume"
            }
          },
          "202": {
            "description": "Accepted -- Update request accepted; operation will complete asynchronously."
          },
          "default": {
            "description": "Error from the ElasticSan Resource Provider.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Volumes_Update_MaximumSet_Gen": {
            "$ref": "./examples/Volumes_Update_MaximumSet_Gen.json"
          },
          "Volumes_Update_MinimumSet_Gen": {
            "$ref": "./examples/Volumes_Update_MinimumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Volumes"
        ],
        "description": "Delete an Volume.",
        "operationId": "Volumes_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ElasticSanNameParameter"
          },
          {
            "$ref": "#/parameters/VolumeGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VolumeNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete operation completed successfully."
          },
          "202": {
            "description": "Delete request accepted; operation will complete asynchronously."
          },
          "204": {
            "description": "Resource does not exist in the subscription."
          },
          "default": {
            "description": "Error from the ElasticSan Resource Provider",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Volumes_Delete_MaximumSet_Gen": {
            "$ref": "./examples/Volumes_Delete_MaximumSet_Gen.json"
          },
          "Volumes_Delete_MinimumSet_Gen": {
            "$ref": "./examples/Volumes_Delete_MinimumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "Volumes"
        ],
        "description": "Get an Volume.",
        "operationId": "Volumes_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ElasticSanNameParameter"
          },
          {
            "$ref": "#/parameters/VolumeGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VolumeNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation completed successfully; retrieved Volume.",
            "schema": {
              "$ref": "#/definitions/Volume"
            }
          },
          "default": {
            "description": "Error from the ElasticSan Resource Provider.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_Get_MaximumSet_Gen": {
            "$ref": "./examples/Volumes_Get_MaximumSet_Gen.json"
          },
          "Volumes_Get_MinimumSet_Gen": {
            "$ref": "./examples/Volumes_Get_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/volumes": {
      "get": {
        "tags": [
          "Volumes"
        ],
        "description": "List Volumes in a VolumeGroup.",
        "operationId": "Volumes_ListByVolumeGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ElasticSanNameParameter"
          },
          {
            "$ref": "#/parameters/VolumeGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation completed successfully; retrieved volumes in a volume group.",
            "schema": {
              "$ref": "#/definitions/VolumeList"
            }
          },
          "default": {
            "description": "Error from the ElasticSan Resource Provider",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Volumes_ListByVolumeGroup_MaximumSet_Gen": {
            "$ref": "./examples/Volumes_ListByVolumeGroup_MaximumSet_Gen.json"
          },
          "Volumes_ListByVolumeGroup_MinimumSet_Gen": {
            "$ref": "./examples/Volumes_ListByVolumeGroup_MinimumSet_Gen.json"
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID of the target subscription.",
      "minLength": 1
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to use for this operation.",
      "minLength": 1
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group. The name is case insensitive.",
      "pattern": "^[-\\w\\._]*[0-9A-Za-z]$",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ElasticSanNameParameter": {
      "name": "elasticSanName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the ElasticSan.",
      "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$",
      "minLength": 3,
      "maxLength": 24,
      "x-ms-parameter-location": "method"
    },
    "VolumeGroupNameParameter": {
      "name": "volumeGroupName",
      "type": "string",
      "required": true,
      "in": "path",
      "description": "The name of the VolumeGroup.",
      "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$",
      "minLength": 3,
      "maxLength": 63,
      "x-ms-parameter-location": "method"
    },
    "VolumeNameParameter": {
      "name": "volumeName",
      "type": "string",
      "required": true,
      "in": "path",
      "description": "The name of the Volume.",
      "pattern": "^[a-z0-9]+(-[a-z0-9A-Z]+)*$",
      "minLength": 3,
      "maxLength": 63,
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "ElasticSanOperationDisplay": {
      "type": "object",
      "required": [
        "provider",
        "resource",
        "operation",
        "description"
      ],
      "description": "Metadata about an operation.",
      "additionalProperties": false,
      "properties": {
        "provider": {
          "type": "string",
          "description": "Localized friendly form of the resource provider name."
        },
        "resource": {
          "type": "string",
          "description": "Localized friendly form of the resource type related to this action/operation."
        },
        "operation": {
          "type": "string",
          "description": "Localized friendly name for the operation, as it should be shown to the user."
        },
        "description": {
          "type": "string",
          "description": "Localized friendly description for the operation, as it should be shown to the user."
        }
      }
    },
    "ElasticSanRPOperation": {
      "type": "object",
      "required": [
        "name"
      ],
      "description": "Description of a ElasticSan RP Operation",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation being performed on this particular object"
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Indicates whether the operation applies to data-plane.",
          "readOnly": true
        },
        "display": {
          "description": "Additional metadata about RP operation.",
          "$ref": "#/definitions/ElasticSanOperationDisplay",
          "readOnly": true
        }
      }
    },
    "ElasticSanOperationListResult": {
      "type": "object",
      "required": [
        "value"
      ],
      "description": "List of operations supported by the RP.",
      "additionalProperties": false,
      "properties": {
        "value": {
          "type": "array",
          "description": "An array of operations supported by the ElasticSan RP.",
          "items": {
            "$ref": "#/definitions/ElasticSanRPOperation"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "URI to fetch the next section of the paginated response.",
          "type": "string"
        }
      }
    },
    "ElasticSanList": {
      "type": "object",
      "required": [
        "value"
      ],
      "description": "List of Elastic Sans",
      "additionalProperties": false,
      "properties": {
        "value": {
          "description": "An array of Elastic San objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ElasticSan"
          }
        },
        "nextLink": {
          "description": "URI to fetch the next section of the paginated response.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ElasticSan": {
      "type": "object",
      "description": "Response for ElasticSan request.",
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of ElasticSan.",
          "$ref": "#/definitions/ElasticSanProperties"
        },
        "systemData": {
          "description": "Resource metadata required by ARM RPC",
          "readOnly": true,
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ]
    },
    "ElasticSanProperties": {
      "type": "object",
      "description": "Elastic San response properties.",
      "required": [
        "baseSizeTiB",
        "extendedCapacitySizeTiB",
        "sku"
      ],
      "properties": {
        "sku": {
          "description": "resource sku",
          "$ref": "#/definitions/Sku"
        },
        "availabilityZones": {
          "type": "array",
          "description": "Logical zone for Elastic San resource; example: [\"1\"].",
          "items": {
            "$ref": "#/definitions/AvailabilityZone"
          }
        },
        "provisioningState": {
          "description": "State of the operation on the resource.",
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        },
        "baseSizeTiB": {
          "description": "Base size of the Elastic San appliance in TiB.",
          "type": "integer",
          "format": "int64",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedCapacitySizeTiB": {
          "description": "Extended size of the Elastic San appliance in TiB.",
          "type": "integer",
          "format": "int64",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "totalVolumeSizeGiB": {
          "description": "Total size of the provisioned Volumes in GiB.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "volumeGroupCount": {
          "description": "Total number of volume groups in this Elastic San appliance.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "totalIops": {
          "description": "Total Provisioned IOPS of the Elastic San appliance.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "totalMBps": {
          "description": "Total Provisioned MBps Elastic San appliance.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "totalSizeTiB": {
          "description": "Total size of the Elastic San appliance in TB.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      }
    },
    "ElasticSanUpdate": {
      "type": "object",
      "description": "Response for ElasticSan update request.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of ElasticSan.",
          "$ref": "#/definitions/ElasticSanUpdateProperties"
        },
        "tags": {
          "type": "object",
          "description": "Update tags",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ElasticSanUpdateProperties": {
      "type": "object",
      "description": "Elastic San update properties.",
      "properties": {
        "baseSizeTiB": {
          "description": "Base size of the Elastic San appliance in TiB.",
          "type": "integer",
          "format": "int64",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedCapacitySizeTiB": {
          "description": "Extended size of the Elastic San appliance in TiB.",
          "type": "integer",
          "format": "int64",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "AvailabilityZone": {
      "type": "string",
      "description": "Availability zone."
    },
    "SkuInformationList": {
      "description": "List of SKU Information objects",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of ResourceType Sku",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuInformation"
          },
          "x-ms-identifiers": [],
          "readOnly": true
        }
      }
    },
    "SkuInformation": {
      "description": "ElasticSAN SKU and its properties",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Sku Name",
          "$ref": "#/definitions/SkuName"
        },
        "tier": {
          "type": "string",
          "description": "Sku Tier",
          "$ref": "#/definitions/SkuTier"
        },
        "resourceType": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource."
        },
        "locations": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.)."
        },
        "locationInfo": {
          "description": "Availability of the SKU for the location/zone",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuLocationInfo"
          },
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "capabilities": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SKUCapability"
          },
          "x-ms-identifiers": [],
          "description": "The capability information in the specified SKU."
        }
      }
    },
    "SKUCapability": {
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of capability."
        },
        "value": {
          "readOnly": true,
          "type": "string",
          "description": "A string value to indicate states of given capability."
        }
      },
      "description": "The capability information in the specified SKU.",
      "type": "object"
    },
    "SkuLocationInfo": {
      "description": "The location info.",
      "type": "object",
      "properties": {
        "location": {
          "description": "The location.",
          "type": "string",
          "readOnly": true
        },
        "zones": {
          "description": "The zones.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "Sku": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "$ref": "#/definitions/SkuName"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        }
      },
      "description": "The SKU name. Required for account creation; optional for update."
    },
    "SkuName": {
      "type": "string",
      "enum": [
        "Premium_LRS",
        "Premium_ZRS"
      ],
      "x-ms-enum": {
        "name": "SkuName",
        "modelAsString": true,
        "values": [
          {
            "value": "Premium_LRS",
            "description": "Premium locally redundant storage"
          },
          {
            "value": "Premium_ZRS",
            "description": "Premium zone redundant storage"
          }
        ]
      },
      "description": "The sku name."
    },
    "SkuTier": {
      "type": "string",
      "enum": [
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": true,
        "values": [
          {
            "value": "Premium",
            "description": "Premium Tier"
          }
        ]
      },
      "description": "The sku tier."
    },
    "IscsiTargetInfo": {
      "type": "object",
      "description": "Iscsi target information",
      "readOnly": true,
      "properties": {
        "targetIqn": {
          "type": "string",
          "description": "iSCSI Target IQN (iSCSI Qualified Name); example: \"iqn.2005-03.org.iscsi:server\".",
          "readOnly": true
        },
        "targetPortalHostname": {
          "type": "string",
          "description": "iSCSI Target Portal Host Name",
          "readOnly": true
        },
        "targetPortalPort": {
          "type": "integer",
          "format": "int32",
          "description": "iSCSI Target Portal Port",
          "readOnly": true
        },
        "provisioningState": {
          "description": "State of the operation on the resource.",
          "$ref": "#/definitions/ProvisioningState"
        },
        "status": {
          "$ref": "#/definitions/OperationalStatus",
          "description": "Operational status of the iSCSI Target."
        }
      }
    },
    "VolumeGroup": {
      "type": "object",
      "description": "Response for Volume Group request.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of VolumeGroup.",
          "$ref": "#/definitions/VolumeGroupProperties"
        },
        "systemData": {
          "description": "Resource metadata required by ARM RPC",
          "readOnly": true,
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "VolumeGroupList": {
      "type": "object",
      "required": [
        "value"
      ],
      "description": "List of Volume Groups",
      "additionalProperties": false,
      "properties": {
        "value": {
          "description": "An array of Volume Groups objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeGroup"
          }
        },
        "nextLink": {
          "description": "URI to fetch the next section of the paginated response.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "VolumeGroupProperties": {
      "type": "object",
      "description": "VolumeGroup response properties.",
      "properties": {
        "provisioningState": {
          "description": "State of the operation on the resource.",
          "$ref": "#/definitions/ProvisioningState"
        },
        "protocolType": {
          "description": "Type of storage target",
          "$ref": "#/definitions/StorageTargetType"
        },
        "encryption": {
          "description": "Type of encryption",
          "$ref": "#/definitions/EncryptionType"
        },
        "networkAcls": {
          "$ref": "#/definitions/NetworkRuleSet",
          "description": "A collection of rules governing the accessibility from specific network locations.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "VolumeGroupUpdate": {
      "type": "object",
      "description": "Volume Group request.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of VolumeGroup.",
          "$ref": "#/definitions/VolumeGroupUpdateProperties"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      }
    },
    "VolumeGroupUpdateProperties": {
      "type": "object",
      "description": "VolumeGroup response properties.",
      "properties": {
        "protocolType": {
          "description": "Type of storage target",
          "$ref": "#/definitions/StorageTargetType"
        },
        "encryption": {
          "description": "Type of encryption",
          "$ref": "#/definitions/EncryptionType"
        },
        "networkAcls": {
          "$ref": "#/definitions/NetworkRuleSet",
          "description": "A collection of rules governing the accessibility from specific network locations.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "Volume": {
      "type": "object",
      "description": "Response for Volume request.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of Volume.",
          "$ref": "#/definitions/VolumeProperties"
        },
        "systemData": {
          "description": "Resource metadata required by ARM RPC",
          "readOnly": true,
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "VolumeList": {
      "type": "object",
      "required": [
        "value"
      ],
      "description": "List of Volumes",
      "additionalProperties": false,
      "properties": {
        "value": {
          "description": "An array of Volume objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Volume"
          }
        },
        "nextLink": {
          "description": "URI to fetch the next section of the paginated response.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "VolumeProperties": {
      "type": "object",
      "description": "Volume response properties.",
      "properties": {
        "volumeId": {
          "description": "Unique Id of the volume in GUID format",
          "type": "string",
          "readOnly": true
        },
        "creationData": {
          "description": "State of the operation on the resource.",
          "$ref": "#/definitions/SourceCreationData"
        },
        "sizeGiB": {
          "description": "Volume size.",
          "type": "integer",
          "format": "int64"
        },
        "storageTarget": {
          "description": "Storage target information",
          "$ref": "#/definitions/IscsiTargetInfo"
        }
      }
    },
    "VolumeUpdate": {
      "type": "object",
      "description": "Response for Volume request.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of Volume.",
          "$ref": "#/definitions/VolumeUpdateProperties"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      }
    },
    "VolumeUpdateProperties": {
      "type": "object",
      "description": "Volume response properties.",
      "properties": {
        "sizeGiB": {
          "description": "Volume size.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SourceCreationData": {
      "type": "object",
      "description": "Data source used when creating the volume.",
      "properties": {
        "createSource": {
          "type": "string",
          "enum": [
            "None"
          ],
          "x-ms-enum": {
            "name": "VolumeCreateOption",
            "modelAsString": false
          },
          "description": "This enumerates the possible sources of a volume creation."
        },
        "sourceUri": {
          "type": "string",
          "description": "If createOption is Copy, this is the ARM id of the source snapshot or disk. If createOption is Restore, this is the ARM-like id of the source disk restore point."
        }
      }
    },
    "Error": {
      "type": "object",
      "description": "The resource management error response.",
      "properties": {
        "error": {
          "description": "RP error response.",
          "$ref": "#/definitions/ErrorResponse"
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "enum": [
        "Invalid",
        "Succeeded",
        "Failed",
        "Canceled",
        "Pending",
        "Creating",
        "Updating",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ProvisioningStates",
        "modelAsString": true
      },
      "description": "Provisioning state of the iSCSI Target.",
      "readOnly": true
    },
    "OperationalStatus": {
      "type": "string",
      "enum": [
        "Invalid",
        "Unknown",
        "Healthy",
        "Unhealthy",
        "Updating",
        "Running",
        "Stopped",
        "Stopped (deallocated)"
      ],
      "x-ms-enum": {
        "name": "OperationalStatus",
        "modelAsString": true
      },
      "description": "Operational status of the resource."
    },
    "StorageTargetType": {
      "type": "string",
      "enum": [
        "Iscsi",
        "None"
      ],
      "x-ms-enum": {
        "name": "StorageTargetType",
        "modelAsString": true
      },
      "description": "Storage Target type."
    },
    "EncryptionType": {
      "type": "string",
      "description": "The type of key used to encrypt the data of the disk.",
      "enum": [
        "EncryptionAtRestWithPlatformKey"
      ],
      "x-ms-enum": {
        "name": "EncryptionType",
        "modelAsString": true,
        "values": [
          {
            "value": "EncryptionAtRestWithPlatformKey",
            "description": "Volume is encrypted at rest with Platform managed key. It is the default encryption type."
          }
        ]
      }
    },
    "TrackedResource": {
      "description": "The resource model definition for a ARM tracked top level resource.",
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Azure resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Azure resource type.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "Azure resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "The resource model definition.",
      "x-ms-azure-resource": true
    },
    "ErrorAdditionalInfo": {
      "description": "The resource management error additional info.",
      "type": "object",
      "x-ms-identifiers": [],
      "properties": {
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The additional info type."
        },
        "info": {
          "readOnly": true,
          "type": "object",
          "description": "The additional info."
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "readOnly": true,
          "type": "string",
          "description": "The error code."
        },
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "The error message."
        },
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "The error target."
        },
        "details": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorResponse"
          },
          "x-ms-identifiers": [],
          "description": "The error details."
        },
        "additionalInfo": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "x-ms-identifiers": [],
          "description": "The error additional info."
        }
      },
      "description": "The resource management error response."
    },
    "NetworkRuleSet": {
      "type": "object",
      "properties": {
        "virtualNetworkRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkRule"
          },
          "description": "The list of virtual network rules."
        }
      },
      "description": "A set of rules governing the network accessibility."
    },
    "VirtualNetworkRule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-ms-client-name": "VirtualNetworkResourceId",
          "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}."
        },
        "action": {
          "type": "string",
          "enum": [
            "Allow"
          ],
          "x-ms-enum": {
            "name": "Action",
            "modelAsString": false
          },
          "default": "Allow",
          "description": "The action of virtual network rule."
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "provisioning",
            "deprovisioning",
            "succeeded",
            "failed",
            "networkSourceDeleted"
          ],
          "x-ms-enum": {
            "name": "State",
            "modelAsString": false
          },
          "description": "Gets the state of virtual network rule."
        }
      },
      "required": [
        "id"
      ],
      "description": "Virtual Network rule."
    }
  }
}
