import "@azure-tools/typespec-azure-core";
import "@azure-tools/typespec-azure-resource-manager";
import "@typespec/rest";
import "./models.tsp";
import "./ElasticSanVolumeGroup.tsp";

using TypeSpec.Rest;
using Azure.ResourceManager;
using Azure.ResourceManager.Foundations;
using TypeSpec.Http;

namespace Azure.ResourceManager.ElasticSan;
@doc("Response for Volume request.")
@parentResource(ElasticSanVolumeGroup)
model ElasticSanVolume is ProxyResource<VolumeProperties> {
  @doc("The name of the Volume.")
  @maxLength(63)
  @minLength(3)
  @pattern("^[a-z0-9]+(-[a-z0-9A-Z]+)*$")
  @path
  @key("volumeName")
  @segment("volumes")
  name: string;
}

@armResourceOperations
interface ElasticSanVolumes {
  @doc("Get an Volume.")
  get is ArmResourceRead<ElasticSanVolume>;
  @doc("Create a Volume.")
  create is ArmResourceCreateOrUpdateAsync<ElasticSanVolume>;
  @doc("Update an Volume.")
  update is ArmResourcePatchAsync<ElasticSanVolume, VolumeProperties>;
  @doc("Delete an Volume.")
  delete is ArmResourceDeleteAsync<
    ElasticSanVolume,
    {
      ...BaseParameters<ElasticSanVolume>;

      @doc("Optional, used to delete snapshots under volume. Allowed value are only true or false. Default value is false.")
      @header
      `x-ms-delete-snapshots`?: XMsDeleteSnapshots;

      @doc("Optional, used to delete volume if active sessions present. Allowed value are only true or false. Default value is false.")
      @header
      `x-ms-force-delete`?: XMsForceDelete;
    }
  >;
  @doc("List Volumes in a VolumeGroup.")
  listByVolumeGroup is ArmResourceListByParent<ElasticSanVolume>;
}
