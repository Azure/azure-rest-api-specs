{
  "swagger": "2.0",
  "info": {
    "title": "ElasticSanManagement",
    "version": "2023-01-01",
    "description": "// FIXME: (miissing-service-description) Add service description",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "ElasticSans"
    },
    {
      "name": "VolumeGroups"
    },
    {
      "name": "Volumes"
    },
    {
      "name": "PrivateEndpointConnections"
    },
    {
      "name": "Snapshots"
    }
  ],
  "paths": {
    "/providers/Microsoft.ElasticSan/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ElasticSan/elasticSans": {
      "get": {
        "operationId": "ElasticSans_ListBySubscription",
        "tags": [
          "ElasticSans"
        ],
        "description": "Gets a list of ElasticSans in a subscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ElasticSanListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ElasticSan/skus": {
      "get": {
        "operationId": "SkusOperations_List",
        "summary": "List all the available Skus in the region and information related to them",
        "description": "List all the available Skus in the region and information related to them",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Specify $filter='location eq <location>' to filter on location.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedSkuInformation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans": {
      "get": {
        "operationId": "ElasticSans_ListByResourceGroup",
        "tags": [
          "ElasticSans"
        ],
        "description": "Gets a list of ElasticSan in a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ElasticSanListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}": {
      "get": {
        "operationId": "ElasticSans_Get",
        "tags": [
          "ElasticSans"
        ],
        "description": "Get a ElasticSan.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "elasticSanName",
            "in": "path",
            "description": "The name of the ElasticSan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ElasticSan"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "ElasticSans_Create",
        "tags": [
          "ElasticSans"
        ],
        "description": "Create ElasticSan.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "elasticSanName",
            "in": "path",
            "description": "The name of the ElasticSan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ElasticSan"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ElasticSan' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ElasticSan"
            }
          },
          "201": {
            "description": "Resource 'ElasticSan' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ElasticSan"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ElasticSans_Update",
        "tags": [
          "ElasticSans"
        ],
        "description": "Update a Elastic San.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "elasticSanName",
            "in": "path",
            "description": "The name of the ElasticSan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ElasticSanUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ElasticSan"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ElasticSans_Delete",
        "tags": [
          "ElasticSans"
        ],
        "description": "Delete a Elastic San.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "elasticSanName",
            "in": "path",
            "description": "The name of the ElasticSan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/privateEndpointConnections": {
      "get": {
        "operationId": "PrivateEndpointConnections_ListByElasticSan",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "List all Private Endpoint Connections associated with the Elastic San.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "elasticSanName",
            "in": "path",
            "description": "The name of the ElasticSan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "PrivateEndpointConnections_Get",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Gets the specified private endpoint connection associated with the Elastic San",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "elasticSanName",
            "in": "path",
            "description": "The name of the ElasticSan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the Private Endpoint connection.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnections_Create",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Update the state of specified private endpoint connection associated with the Elastic San",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "elasticSanName",
            "in": "path",
            "description": "The name of the ElasticSan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the Private Endpoint connection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateEndpointConnection' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "201": {
            "description": "Resource 'PrivateEndpointConnection' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "PrivateEndpointConnections_Delete",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Deletes the specified private endpoint connection associated with the Elastic San",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "elasticSanName",
            "in": "path",
            "description": "The name of the ElasticSan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the Private Endpoint connection.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/privateLinkResources/{subscriptionId}/{resourceGroupName}/{elasticSanName}": {
      "get": {
        "operationId": "PrivateLinkResources_ListByElasticSan",
        "tags": [
          "ElasticSans"
        ],
        "description": "Gets the private link resources that need to be created for a elastic San.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "elasticSanName",
            "in": "path",
            "description": "The name of the ElasticSan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups": {
      "get": {
        "operationId": "VolumeGroups_ListByElasticSan",
        "tags": [
          "VolumeGroups"
        ],
        "description": "List VolumeGroups.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "elasticSanName",
            "in": "path",
            "description": "The name of the ElasticSan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VolumeGroupListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}": {
      "get": {
        "operationId": "VolumeGroups_Get",
        "tags": [
          "VolumeGroups"
        ],
        "description": "Get an VolumeGroups.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "elasticSanName",
            "in": "path",
            "description": "The name of the ElasticSan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          },
          {
            "name": "volumeGroupName",
            "in": "path",
            "description": "The name of the VolumeGroup.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VolumeGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "VolumeGroups_Create",
        "tags": [
          "VolumeGroups"
        ],
        "description": "Create a Volume Group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "elasticSanName",
            "in": "path",
            "description": "The name of the ElasticSan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          },
          {
            "name": "volumeGroupName",
            "in": "path",
            "description": "The name of the VolumeGroup.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VolumeGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'VolumeGroup' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/VolumeGroup"
            }
          },
          "201": {
            "description": "Resource 'VolumeGroup' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/VolumeGroup"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "VolumeGroups_Update",
        "tags": [
          "VolumeGroups"
        ],
        "description": "Update an VolumeGroup.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "elasticSanName",
            "in": "path",
            "description": "The name of the ElasticSan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          },
          {
            "name": "volumeGroupName",
            "in": "path",
            "description": "The name of the VolumeGroup.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VolumeGroupUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VolumeGroup"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "VolumeGroups_Delete",
        "tags": [
          "VolumeGroups"
        ],
        "description": "Delete an VolumeGroup.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "elasticSanName",
            "in": "path",
            "description": "The name of the ElasticSan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          },
          {
            "name": "volumeGroupName",
            "in": "path",
            "description": "The name of the VolumeGroup.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/snapshots": {
      "get": {
        "operationId": "VolumeSnapshots_ListByVolumeGroup",
        "tags": [
          "Snapshots"
        ],
        "description": "List Snapshots in a VolumeGroup or List Snapshots by Volume (name) in a VolumeGroup using filter",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Specify $filter='volumeName eq <volume name>' to filter on volume.",
            "required": false,
            "type": "string"
          },
          {
            "name": "elasticSanName",
            "in": "path",
            "description": "The name of the ElasticSan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          },
          {
            "name": "volumeGroupName",
            "in": "path",
            "description": "The name of the VolumeGroup.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SnapshotListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/snapshots/{snapshotName}": {
      "get": {
        "operationId": "VolumeSnapshots_Get",
        "tags": [
          "Snapshots"
        ],
        "description": "Get a Volume Snapshot.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "elasticSanName",
            "in": "path",
            "description": "The name of the ElasticSan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          },
          {
            "name": "volumeGroupName",
            "in": "path",
            "description": "The name of the VolumeGroup.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          },
          {
            "name": "snapshotName",
            "in": "path",
            "description": "The name of the volume snapshot within the given volume group.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-z0-9]+(?:[._-][a-z0-9]+)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Snapshot"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "VolumeSnapshots_Create",
        "tags": [
          "Snapshots"
        ],
        "description": "Create a Volume Snapshot.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "elasticSanName",
            "in": "path",
            "description": "The name of the ElasticSan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          },
          {
            "name": "volumeGroupName",
            "in": "path",
            "description": "The name of the VolumeGroup.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          },
          {
            "name": "snapshotName",
            "in": "path",
            "description": "The name of the volume snapshot within the given volume group.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-z0-9]+(?:[._-][a-z0-9]+)*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Snapshot"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Snapshot' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Snapshot"
            }
          },
          "201": {
            "description": "Resource 'Snapshot' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Snapshot"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "VolumeSnapshots_Delete",
        "tags": [
          "Snapshots"
        ],
        "description": "Delete a Volume Snapshot.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "elasticSanName",
            "in": "path",
            "description": "The name of the ElasticSan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          },
          {
            "name": "volumeGroupName",
            "in": "path",
            "description": "The name of the VolumeGroup.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          },
          {
            "name": "snapshotName",
            "in": "path",
            "description": "The name of the volume snapshot within the given volume group.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-z0-9]+(?:[._-][a-z0-9]+)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/volumes": {
      "get": {
        "operationId": "Volumes_ListByVolumeGroup",
        "tags": [
          "Volumes"
        ],
        "description": "List Volumes in a VolumeGroup.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "elasticSanName",
            "in": "path",
            "description": "The name of the ElasticSan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          },
          {
            "name": "volumeGroupName",
            "in": "path",
            "description": "The name of the VolumeGroup.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VolumeListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/volumes/{volumeName}": {
      "get": {
        "operationId": "Volumes_Get",
        "tags": [
          "Volumes"
        ],
        "description": "Get an Volume.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "elasticSanName",
            "in": "path",
            "description": "The name of the ElasticSan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          },
          {
            "name": "volumeGroupName",
            "in": "path",
            "description": "The name of the VolumeGroup.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the Volume.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9]+(-[a-z0-9A-Z]+)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Volume"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Volumes_Create",
        "tags": [
          "Volumes"
        ],
        "description": "Create a Volume.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "elasticSanName",
            "in": "path",
            "description": "The name of the ElasticSan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          },
          {
            "name": "volumeGroupName",
            "in": "path",
            "description": "The name of the VolumeGroup.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the Volume.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9]+(-[a-z0-9A-Z]+)*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Volume"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Volume' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Volume"
            }
          },
          "201": {
            "description": "Resource 'Volume' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Volume"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Volumes_Update",
        "tags": [
          "Volumes"
        ],
        "description": "Update an Volume.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "elasticSanName",
            "in": "path",
            "description": "The name of the ElasticSan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          },
          {
            "name": "volumeGroupName",
            "in": "path",
            "description": "The name of the VolumeGroup.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the Volume.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9]+(-[a-z0-9A-Z]+)*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VolumeUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Volume"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Volumes_Delete",
        "tags": [
          "Volumes"
        ],
        "description": "Delete an Volume.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "x-ms-delete-snapshots",
            "in": "header",
            "description": "Optional, used to delete snapshots under volume. Allowed value are only true or false. Default value is false.",
            "required": false,
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "x-ms-enum": {
              "name": "XMsDeleteSnapshots",
              "modelAsString": true
            }
          },
          {
            "name": "x-ms-force-delete",
            "in": "header",
            "description": "Optional, used to delete volume if active sessions present. Allowed value are only true or false. Default value is false.",
            "required": false,
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "x-ms-enum": {
              "name": "XMsForceDelete",
              "modelAsString": true
            }
          },
          {
            "name": "elasticSanName",
            "in": "path",
            "description": "The name of the ElasticSan.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          },
          {
            "name": "volumeGroupName",
            "in": "path",
            "description": "The name of the VolumeGroup.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the Volume.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9]+(-[a-z0-9A-Z]+)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "Action": {
      "type": "string",
      "enum": [
        "Allow"
      ],
      "x-ms-enum": {
        "name": "Action",
        "modelAsString": true
      }
    },
    "ActionType": {
      "type": "string",
      "enum": [
        "Internal"
      ],
      "x-ms-enum": {
        "name": "ActionType",
        "modelAsString": true
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "Azure.ResourceManager.Foundations.ManagedIdentityProperties": {
      "type": "object",
      "description": "The properties of the managed service identities assigned to this resource.",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The Active Directory tenant id of the principal.",
          "readOnly": true
        },
        "principalId": {
          "type": "string",
          "description": "The active directory identifier of this principal.",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.ManagedIdentityType",
          "description": "The type of managed identity assigned to this resource."
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "The identities assigned to this resource by the user.",
          "additionalProperties": {
            "$ref": "#/definitions/Azure.ResourceManager.Foundations.UserAssignedIdentity"
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "Azure.ResourceManager.Foundations.ManagedIdentityType": {
      "type": "string",
      "description": "The kind of managed identity assigned to this resource.",
      "enum": [
        "None",
        "SystemAssigned",
        "UserAssigned",
        "SystemAssigned, UserAssigned"
      ],
      "x-ms-enum": {
        "name": "ManagedIdentityType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "No managed identity."
          },
          {
            "name": "SystemAssigned",
            "value": "SystemAssigned",
            "description": "System assigned managed identity."
          },
          {
            "name": "UserAssigned",
            "value": "UserAssigned",
            "description": "User assigned managed identity."
          },
          {
            "name": "SystemAndUserAssigned",
            "value": "SystemAssigned, UserAssigned",
            "description": "System and user assigned managed identity."
          }
        ]
      }
    },
    "Azure.ResourceManager.Foundations.UserAssignedIdentity": {
      "type": "object",
      "description": "A managed identity assigned by the user.",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The active directory client identifier for this principal."
        },
        "principalId": {
          "type": "string",
          "description": "The active directory identifier for this principal."
        }
      }
    },
    "CreatedByType": {
      "type": "string",
      "enum": [
        "User",
        "Application",
        "ManagedIdentity",
        "Key"
      ],
      "x-ms-enum": {
        "name": "CreatedByType",
        "modelAsString": true
      }
    },
    "ElasticSan": {
      "type": "object",
      "description": "Response for ElasticSan request.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ElasticSanProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ElasticSanListResult": {
      "type": "object",
      "description": "The response of a ElasticSan list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ElasticSan items on this page",
          "items": {
            "$ref": "#/definitions/ElasticSan"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ElasticSanProperties": {
      "type": "object",
      "description": "Elastic San response properties.",
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "resource sku"
        },
        "availabilityZones": {
          "type": "array",
          "description": "Logical zone for Elastic San resource; example: [\"1\"].",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningStates",
          "description": "State of the operation on the resource.",
          "readOnly": true
        },
        "baseSizeTiB": {
          "type": "integer",
          "format": "int32",
          "description": "Base size of the Elastic San appliance in TiB.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedCapacitySizeTiB": {
          "type": "integer",
          "format": "int32",
          "description": "Extended size of the Elastic San appliance in TiB.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "totalVolumeSizeGiB": {
          "type": "integer",
          "format": "int32",
          "description": "Total size of the provisioned Volumes in GiB.",
          "readOnly": true
        },
        "volumeGroupCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of volume groups in this Elastic San appliance.",
          "readOnly": true
        },
        "totalIops": {
          "type": "integer",
          "format": "int32",
          "description": "Total Provisioned IOPS of the Elastic San appliance.",
          "readOnly": true
        },
        "totalMBps": {
          "type": "integer",
          "format": "int32",
          "description": "Total Provisioned MBps Elastic San appliance.",
          "readOnly": true
        },
        "totalSizeTiB": {
          "type": "integer",
          "format": "int32",
          "description": "Total size of the Elastic San appliance in TB.",
          "readOnly": true
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "The list of Private Endpoint Connections.",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "readOnly": true
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Allow or disallow public network access to ElasticSan. Value is optional but if passed in, must be 'Enabled' or 'Disabled'."
        }
      },
      "required": [
        "sku",
        "baseSizeTiB",
        "extendedCapacitySizeTiB"
      ]
    },
    "ElasticSanUpdate": {
      "type": "object",
      "description": "Response for ElasticSan update request.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ElasticSanUpdateProperties",
          "description": "Properties of ElasticSan."
        },
        "tags": {
          "type": "object",
          "description": "Update tags",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ElasticSanUpdateProperties": {
      "type": "object",
      "description": "Elastic San update properties.",
      "properties": {
        "baseSizeTiB": {
          "type": "integer",
          "format": "int32",
          "description": "Base size of the Elastic San appliance in TiB.",
          "x-ms-mutability": [
            "update"
          ]
        },
        "extendedCapacitySizeTiB": {
          "type": "integer",
          "format": "int32",
          "description": "Extended size of the Elastic San appliance in TiB.",
          "x-ms-mutability": [
            "update"
          ]
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Allow or disallow public network access to ElasticSan Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'."
        }
      }
    },
    "EncryptionIdentity": {
      "type": "object",
      "description": "Encryption identity for the volume group.",
      "properties": {
        "userAssignedIdentity": {
          "type": "string",
          "description": "Resource identifier of the UserAssigned identity to be associated with server-side encryption on the volume group.",
          "x-ms-client-name": "encryptionUserAssignedIdentity"
        }
      }
    },
    "EncryptionProperties": {
      "type": "object",
      "description": "The encryption settings on the volume group.",
      "properties": {
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Properties provided by key vault."
        },
        "identity": {
          "$ref": "#/definitions/EncryptionIdentity",
          "description": "The identity to be used with service-side encryption at rest.",
          "x-ms-client-name": "encryptionIdentity"
        }
      }
    },
    "EncryptionType": {
      "type": "string",
      "enum": [
        "EncryptionAtRestWithPlatformKey",
        "EncryptionAtRestWithCustomerManagedKey"
      ],
      "x-ms-enum": {
        "name": "EncryptionType",
        "modelAsString": true,
        "values": [
          {
            "name": "EncryptionAtRestWithPlatformKey",
            "value": "EncryptionAtRestWithPlatformKey",
            "description": "Volume is encrypted at rest with Platform managed key. It is the default encryption type."
          },
          {
            "name": "EncryptionAtRestWithCustomerManagedKey",
            "value": "EncryptionAtRestWithCustomerManagedKey",
            "description": "Volume is encrypted at rest with Customer managed key that can be changed and revoked by a customer."
          }
        ]
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "type": {
          "$ref": "#/definitions/IdentityType",
          "description": "The identity type."
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "Gets or sets a list of key value pairs that describe the set of User Assigned identities that will be used with this volume group. The key is the ARM resource identifier of the identity.",
          "additionalProperties": {
            "$ref": "#/definitions/Azure.ResourceManager.Foundations.UserAssignedIdentity"
          }
        }
      }
    },
    "IdentityType": {
      "type": "string",
      "enum": [
        "None",
        "SystemAssigned",
        "UserAssigned"
      ],
      "x-ms-enum": {
        "name": "IdentityType",
        "modelAsString": true
      }
    },
    "IscsiTargetInfo": {
      "type": "object",
      "description": "Iscsi target information",
      "properties": {
        "targetIqn": {
          "type": "string",
          "description": "iSCSI Target IQN (iSCSI Qualified Name); example: \"iqn.2005-03.org.iscsi:server\".",
          "readOnly": true
        },
        "targetPortalHostname": {
          "type": "string",
          "description": "iSCSI Target Portal Host Name",
          "readOnly": true
        },
        "targetPortalPort": {
          "type": "integer",
          "format": "int32",
          "description": "iSCSI Target Portal Port",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningStates",
          "description": "State of the operation on the resource.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/OperationalStatus",
          "description": "Operational status of the iSCSI Target."
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "description": "Properties of key vault.",
      "properties": {
        "keyName": {
          "type": "string",
          "description": "The name of KeyVault key."
        },
        "keyVersion": {
          "type": "string",
          "description": "The version of KeyVault key."
        },
        "keyVaultUri": {
          "type": "string",
          "description": "The Uri of KeyVault."
        },
        "currentVersionedKeyIdentifier": {
          "type": "string",
          "description": "The object identifier of the current versioned Key Vault Key in use.",
          "readOnly": true
        },
        "lastKeyRotationTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of last rotation of the Key Vault Key.",
          "readOnly": true
        },
        "currentVersionedKeyExpirationTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "This is a read only property that represents the expiration time of the current version of the customer managed key used for encryption.",
          "readOnly": true
        }
      }
    },
    "ManagedByInfo": {
      "type": "object",
      "description": "Parent resource information.",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "Resource ID of the resource managing the volume, this is a restricted field and can only be set for internal use."
        }
      }
    },
    "NetworkRuleSet": {
      "type": "object",
      "description": "A set of rules governing the network accessibility.",
      "properties": {
        "virtualNetworkRules": {
          "type": "array",
          "description": "The list of virtual network rules.",
          "items": {
            "$ref": "#/definitions/VirtualNetworkRule"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "OperationalStatus": {
      "type": "string",
      "enum": [
        "Invalid",
        "Unknown",
        "Healthy",
        "Unhealthy",
        "Updating",
        "Running",
        "Stopped",
        "Stopped (deallocated)"
      ],
      "x-ms-enum": {
        "name": "OperationalStatus",
        "modelAsString": true
      }
    },
    "Origin": {
      "type": "string",
      "enum": [
        "user",
        "system",
        "user,system"
      ],
      "x-ms-enum": {
        "name": "Origin",
        "modelAsString": true
      }
    },
    "PagedSkuInformation": {
      "type": "object",
      "description": "List of SKU Information objects",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SkuInformation items on this page",
          "items": {
            "$ref": "#/definitions/SkuInformation"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateEndpoint": {
      "type": "object",
      "description": "Response for PrivateEndpoint",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ARM identifier for Private Endpoint",
          "readOnly": true
        }
      }
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "description": " Response for PrivateEndpoint Connection object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "description": "The response of a PrivateEndpointConnection list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateEndpointConnection items on this page",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "description": " Response for PrivateEndpoint connection properties",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningStates",
          "description": "Provisioning State of Private Endpoint connection resource",
          "readOnly": true
        },
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "Private Endpoint resource"
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "Private Link Service Connection State."
        },
        "groupIds": {
          "type": "array",
          "description": " List of resources private endpoint is mapped",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ]
    },
    "PrivateEndpointServiceConnectionStatus": {
      "type": "string",
      "enum": [
        "Pending",
        "Approved",
        "Failed",
        "Rejected"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointServiceConnectionStatus",
        "modelAsString": true
      }
    },
    "PrivateLinkResource": {
      "type": "object",
      "description": "A private link resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Resource properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "PrivateLinkResourceListResult": {
      "type": "object",
      "description": "A list of private link resources",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private link resources",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "URI to fetch the next section of the paginated response.",
          "readOnly": true
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "description": "Properties of a private link resource.",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The private link resource group id.",
          "readOnly": true
        },
        "requiredMembers": {
          "type": "array",
          "description": "The private link resource required member names.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "The private link resource Private link DNS zone name.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrivateLinkServiceConnectionState": {
      "type": "object",
      "description": "Response for Private Link Service Connection state",
      "properties": {
        "status": {
          "$ref": "#/definitions/PrivateEndpointServiceConnectionStatus",
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
        },
        "description": {
          "type": "string",
          "description": "The reason for approval/rejection of the connection."
        },
        "actionsRequired": {
          "type": "string",
          "description": "A message indicating if changes on the service provider require any updates on the consumer."
        }
      }
    },
    "ProvisioningStates": {
      "type": "string",
      "enum": [
        "Invalid",
        "Succeeded",
        "Failed",
        "Canceled",
        "Pending",
        "Creating",
        "Updating",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ProvisioningStates",
        "modelAsString": true
      }
    },
    "PublicNetworkAccess": {
      "type": "string",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "PublicNetworkAccess",
        "modelAsString": true
      }
    },
    "Resource": {
      "type": "object",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      }
    },
    "SKUCapability": {
      "type": "object",
      "description": "The capability information in the specified SKU.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of capability.",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "description": "A string value to indicate states of given capability.",
          "readOnly": true
        }
      }
    },
    "Sku": {
      "type": "object",
      "description": "The SKU name. Required for account creation; optional for update.",
      "properties": {
        "name": {
          "$ref": "#/definitions/SkuName",
          "description": "The sku name."
        },
        "tier": {
          "$ref": "#/definitions/SkuTier",
          "description": "The sku tier."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuInformation": {
      "type": "object",
      "description": "ElasticSAN SKU and its properties",
      "properties": {
        "name": {
          "$ref": "#/definitions/SkuName",
          "description": "Sku Name"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier",
          "description": "Sku Tier"
        },
        "resourceType": {
          "type": "string",
          "description": "The type of the resource.",
          "readOnly": true
        },
        "locations": {
          "type": "array",
          "description": "The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "locationInfo": {
          "type": "array",
          "description": "Availability of the SKU for the location/zone",
          "items": {
            "$ref": "#/definitions/SkuLocationInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "capabilities": {
          "type": "array",
          "description": "The capability information in the specified SKU.",
          "items": {
            "$ref": "#/definitions/SKUCapability"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuLocationInfo": {
      "type": "object",
      "description": "The location info.",
      "properties": {
        "location": {
          "type": "string",
          "description": "The location.",
          "readOnly": true
        },
        "zones": {
          "type": "array",
          "description": "The zones.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "SkuName": {
      "type": "string",
      "enum": [
        "Premium_LRS",
        "Premium_ZRS"
      ],
      "x-ms-enum": {
        "name": "SkuName",
        "modelAsString": true,
        "values": [
          {
            "name": "Premium_LRS",
            "value": "Premium_LRS",
            "description": "Premium locally redundant storage"
          },
          {
            "name": "Premium_ZRS",
            "value": "Premium_ZRS",
            "description": "Premium zone redundant storage"
          }
        ]
      }
    },
    "SkuTier": {
      "type": "string",
      "enum": [
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": true,
        "values": [
          {
            "name": "Premium",
            "value": "Premium",
            "description": "Premium Tier"
          }
        ]
      }
    },
    "Snapshot": {
      "type": "object",
      "description": "Response for Volume Snapshot request.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SnapshotProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SnapshotCreationData": {
      "type": "object",
      "description": "Data used when creating a volume snapshot.",
      "properties": {
        "sourceId": {
          "type": "string",
          "description": "Fully qualified resource ID of the volume. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/volumes/{volumeName}\""
        }
      },
      "required": [
        "sourceId"
      ]
    },
    "SnapshotListResult": {
      "type": "object",
      "description": "The response of a Snapshot list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Snapshot items on this page",
          "items": {
            "$ref": "#/definitions/Snapshot"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SnapshotProperties": {
      "type": "object",
      "description": "Properties for Snapshot.",
      "properties": {
        "creationData": {
          "$ref": "#/definitions/SnapshotCreationData",
          "description": "Data used when creating a volume snapshot."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningStates",
          "description": "State of the operation on the resource.",
          "readOnly": true
        },
        "sourceVolumeSizeGiB": {
          "type": "integer",
          "format": "int32",
          "description": "Size of Source Volume",
          "readOnly": true
        },
        "volumeName": {
          "type": "string",
          "description": "Source Volume Name of a snapshot",
          "readOnly": true
        }
      },
      "required": [
        "creationData"
      ]
    },
    "SourceCreationData": {
      "type": "object",
      "description": "Data source used when creating the volume.",
      "properties": {
        "createSource": {
          "$ref": "#/definitions/VolumeCreateOption",
          "description": "This enumerates the possible sources of a volume creation."
        },
        "sourceId": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\""
        }
      }
    },
    "StorageTargetType": {
      "type": "string",
      "enum": [
        "Iscsi",
        "None"
      ],
      "x-ms-enum": {
        "name": "StorageTargetType",
        "modelAsString": true
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2023-01-01"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2023_01_01",
            "value": "2023-01-01"
          }
        ]
      }
    },
    "VirtualNetworkRule": {
      "type": "object",
      "description": "Virtual Network rule.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.",
          "x-ms-client-name": "virtualNetworkResourceId"
        },
        "action": {
          "$ref": "#/definitions/Action",
          "description": "The action of virtual network rule."
        }
      },
      "required": [
        "id"
      ]
    },
    "Volume": {
      "type": "object",
      "description": "Response for Volume request.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VolumeProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "VolumeCreateOption": {
      "type": "string",
      "enum": [
        "None",
        "VolumeSnapshot",
        "DiskSnapshot",
        "Disk",
        "DiskRestorePoint"
      ],
      "x-ms-enum": {
        "name": "VolumeCreateOption",
        "modelAsString": true
      }
    },
    "VolumeGroup": {
      "type": "object",
      "description": "Response for Volume Group request.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VolumeGroupProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.ManagedIdentityProperties",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "VolumeGroupListResult": {
      "type": "object",
      "description": "The response of a VolumeGroup list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The VolumeGroup items on this page",
          "items": {
            "$ref": "#/definitions/VolumeGroup"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "VolumeGroupProperties": {
      "type": "object",
      "description": "VolumeGroup response properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningStates",
          "description": "State of the operation on the resource.",
          "readOnly": true
        },
        "protocolType": {
          "$ref": "#/definitions/StorageTargetType",
          "description": "Type of storage target"
        },
        "encryption": {
          "$ref": "#/definitions/EncryptionType",
          "description": "Type of encryption"
        },
        "encryptionProperties": {
          "$ref": "#/definitions/EncryptionProperties",
          "description": "Encryption Properties describing Key Vault and Identity information"
        },
        "networkAcls": {
          "$ref": "#/definitions/NetworkRuleSet",
          "description": "A collection of rules governing the accessibility from specific network locations.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "The list of Private Endpoint Connections.",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "readOnly": true
        }
      }
    },
    "VolumeGroupUpdate": {
      "type": "object",
      "description": "Volume Group request.",
      "properties": {
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "The identity of the resource."
        },
        "properties": {
          "$ref": "#/definitions/VolumeGroupUpdateProperties",
          "description": "Properties of VolumeGroup."
        }
      }
    },
    "VolumeGroupUpdateProperties": {
      "type": "object",
      "description": "VolumeGroup response properties.",
      "properties": {
        "protocolType": {
          "$ref": "#/definitions/StorageTargetType",
          "description": "Type of storage target"
        },
        "encryption": {
          "$ref": "#/definitions/EncryptionType",
          "description": "Type of encryption"
        },
        "encryptionProperties": {
          "$ref": "#/definitions/EncryptionProperties",
          "description": "Encryption Properties describing Key Vault and Identity information"
        },
        "networkAcls": {
          "$ref": "#/definitions/NetworkRuleSet",
          "description": "A collection of rules governing the accessibility from specific network locations.",
          "x-ms-mutability": [
            "update"
          ]
        }
      }
    },
    "VolumeListResult": {
      "type": "object",
      "description": "The response of a Volume list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Volume items on this page",
          "items": {
            "$ref": "#/definitions/Volume"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "VolumeProperties": {
      "type": "object",
      "description": "Volume response properties.",
      "properties": {
        "volumeId": {
          "type": "string",
          "description": "Unique Id of the volume in GUID format",
          "readOnly": true
        },
        "creationData": {
          "$ref": "#/definitions/SourceCreationData",
          "description": "State of the operation on the resource."
        },
        "sizeGiB": {
          "type": "integer",
          "format": "int32",
          "description": "Volume size."
        },
        "storageTarget": {
          "$ref": "#/definitions/IscsiTargetInfo",
          "description": "Storage target information",
          "readOnly": true
        },
        "managedBy": {
          "$ref": "#/definitions/ManagedByInfo",
          "description": "Parent resource information."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningStates",
          "description": "State of the operation on the resource.",
          "readOnly": true
        }
      },
      "required": [
        "sizeGiB"
      ]
    },
    "VolumeUpdate": {
      "type": "object",
      "description": "Response for Volume request.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VolumeUpdateProperties",
          "description": "Properties of Volume."
        }
      }
    },
    "VolumeUpdateProperties": {
      "type": "object",
      "description": "Volume response properties.",
      "properties": {
        "sizeGiB": {
          "type": "integer",
          "format": "int32",
          "description": "Volume size."
        },
        "managedBy": {
          "$ref": "#/definitions/ManagedByInfo",
          "description": "Parent resource information."
        }
      }
    },
    "XMsDeleteSnapshots": {
      "type": "string",
      "enum": [
        "true",
        "false"
      ],
      "x-ms-enum": {
        "name": "XMsDeleteSnapshots",
        "modelAsString": true
      }
    },
    "XMsForceDelete": {
      "type": "string",
      "enum": [
        "true",
        "false"
      ],
      "x-ms-enum": {
        "name": "XMsForceDelete",
        "modelAsString": true
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
