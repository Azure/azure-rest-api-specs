{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.CloudHealth",
    "version": "2025-05-01-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "HealthModels"
    },
    {
      "name": "SignalDefinitions"
    },
    {
      "name": "AuthenticationSettings"
    },
    {
      "name": "Entities"
    },
    {
      "name": "Relationships"
    },
    {
      "name": "DiscoveryRules"
    }
  ],
  "paths": {
    "/providers/Microsoft.CloudHealth/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CloudHealth/healthmodels": {
      "get": {
        "operationId": "HealthModels_ListBySubscription",
        "tags": [
          "HealthModels"
        ],
        "description": "List HealthModel resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HealthModelListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HealthModels_ListBySubscription": {
            "$ref": "./examples/HealthModels_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CloudHealth/healthmodels": {
      "get": {
        "operationId": "HealthModels_ListByResourceGroup",
        "tags": [
          "HealthModels"
        ],
        "description": "List HealthModel resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HealthModelListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HealthModels_ListByResourceGroup": {
            "$ref": "./examples/HealthModels_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CloudHealth/healthmodels/{healthModelName}": {
      "get": {
        "operationId": "HealthModels_Get",
        "tags": [
          "HealthModels"
        ],
        "description": "Get a HealthModel",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "healthModelName",
            "in": "path",
            "description": "Name of health model resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,42}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HealthModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HealthModels_Get": {
            "$ref": "./examples/HealthModels_Get.json"
          }
        }
      },
      "put": {
        "operationId": "HealthModels_Create",
        "tags": [
          "HealthModels"
        ],
        "description": "Create a HealthModel",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "healthModelName",
            "in": "path",
            "description": "Name of health model resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,42}[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HealthModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'HealthModel' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/HealthModel"
            }
          },
          "201": {
            "description": "Resource 'HealthModel' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/HealthModel"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HealthModels_Create": {
            "$ref": "./examples/HealthModels_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "HealthModels_Update",
        "tags": [
          "HealthModels"
        ],
        "description": "Update a HealthModel",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "healthModelName",
            "in": "path",
            "description": "Name of health model resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,42}[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HealthModelUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HealthModel"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HealthModels_Update": {
            "$ref": "./examples/HealthModels_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "HealthModels_Delete",
        "tags": [
          "HealthModels"
        ],
        "description": "Delete a HealthModel",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "healthModelName",
            "in": "path",
            "description": "Name of health model resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,42}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HealthModels_Delete": {
            "$ref": "./examples/HealthModels_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CloudHealth/healthmodels/{healthModelName}/authenticationsettings": {
      "get": {
        "operationId": "AuthenticationSettings_ListByHealthModel",
        "tags": [
          "AuthenticationSettings"
        ],
        "description": "List AuthenticationSetting resources by HealthModel",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "healthModelName",
            "in": "path",
            "description": "Name of health model resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,42}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AuthenticationSettingListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AuthenticationSettings_ListByHealthModel": {
            "$ref": "./examples/AuthenticationSettings_ListByHealthModel.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CloudHealth/healthmodels/{healthModelName}/authenticationsettings/{authenticationSettingName}": {
      "get": {
        "operationId": "AuthenticationSettings_Get",
        "tags": [
          "AuthenticationSettings"
        ],
        "description": "Get a AuthenticationSetting",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "healthModelName",
            "in": "path",
            "description": "Name of health model resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,42}[a-zA-Z0-9]$"
          },
          {
            "name": "authenticationSettingName",
            "in": "path",
            "description": "Name of the authentication setting. Must be unique within a health model.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]{1,258}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AuthenticationSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AuthenticationSettings_Get": {
            "$ref": "./examples/AuthenticationSettings_Get.json"
          }
        }
      },
      "put": {
        "operationId": "AuthenticationSettings_CreateOrUpdate",
        "tags": [
          "AuthenticationSettings"
        ],
        "description": "Create a AuthenticationSetting",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "healthModelName",
            "in": "path",
            "description": "Name of health model resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,42}[a-zA-Z0-9]$"
          },
          {
            "name": "authenticationSettingName",
            "in": "path",
            "description": "Name of the authentication setting. Must be unique within a health model.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]{1,258}[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthenticationSetting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AuthenticationSetting' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AuthenticationSetting"
            }
          },
          "201": {
            "description": "Resource 'AuthenticationSetting' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/AuthenticationSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AuthenticationSettings_CreateOrUpdate": {
            "$ref": "./examples/AuthenticationSettings_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "AuthenticationSettings_Delete",
        "tags": [
          "AuthenticationSettings"
        ],
        "description": "Delete a AuthenticationSetting",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "healthModelName",
            "in": "path",
            "description": "Name of health model resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,42}[a-zA-Z0-9]$"
          },
          {
            "name": "authenticationSettingName",
            "in": "path",
            "description": "Name of the authentication setting. Must be unique within a health model.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]{1,258}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AuthenticationSettings_Delete": {
            "$ref": "./examples/AuthenticationSettings_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CloudHealth/healthmodels/{healthModelName}/discoveryrules": {
      "get": {
        "operationId": "DiscoveryRules_ListByHealthModel",
        "tags": [
          "DiscoveryRules"
        ],
        "description": "List DiscoveryRule resources by HealthModel",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "Timestamp to use for the operation. When specified, the version of the resource at this point in time is retrieved. If not specified, the latest version is used.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "healthModelName",
            "in": "path",
            "description": "Name of health model resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,42}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DiscoveryRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DiscoveryRules_ListByHealthModel": {
            "$ref": "./examples/DiscoveryRules_ListByHealthModel.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CloudHealth/healthmodels/{healthModelName}/discoveryrules/{discoveryRuleName}": {
      "get": {
        "operationId": "DiscoveryRules_Get",
        "tags": [
          "DiscoveryRules"
        ],
        "description": "Get a DiscoveryRule",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "healthModelName",
            "in": "path",
            "description": "Name of health model resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,42}[a-zA-Z0-9]$"
          },
          {
            "name": "discoveryRuleName",
            "in": "path",
            "description": "Name of the discovery rule. Must be unique within a health model.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]{1,258}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DiscoveryRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DiscoveryRules_Get": {
            "$ref": "./examples/DiscoveryRules_Get.json"
          }
        }
      },
      "put": {
        "operationId": "DiscoveryRules_CreateOrUpdate",
        "tags": [
          "DiscoveryRules"
        ],
        "description": "Create a DiscoveryRule",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "healthModelName",
            "in": "path",
            "description": "Name of health model resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,42}[a-zA-Z0-9]$"
          },
          {
            "name": "discoveryRuleName",
            "in": "path",
            "description": "Name of the discovery rule. Must be unique within a health model.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]{1,258}[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiscoveryRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DiscoveryRule' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DiscoveryRule"
            }
          },
          "201": {
            "description": "Resource 'DiscoveryRule' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DiscoveryRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DiscoveryRules_CreateOrUpdate": {
            "$ref": "./examples/DiscoveryRules_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "DiscoveryRules_Delete",
        "tags": [
          "DiscoveryRules"
        ],
        "description": "Delete a DiscoveryRule",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "healthModelName",
            "in": "path",
            "description": "Name of health model resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,42}[a-zA-Z0-9]$"
          },
          {
            "name": "discoveryRuleName",
            "in": "path",
            "description": "Name of the discovery rule. Must be unique within a health model.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]{1,258}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DiscoveryRules_Delete": {
            "$ref": "./examples/DiscoveryRules_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CloudHealth/healthmodels/{healthModelName}/entities": {
      "get": {
        "operationId": "Entities_ListByHealthModel",
        "tags": [
          "Entities"
        ],
        "description": "List Entity resources by HealthModel",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "Timestamp to use for the operation. When specified, the version of the resource at this point in time is retrieved. If not specified, the latest version is used.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "healthModelName",
            "in": "path",
            "description": "Name of health model resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,42}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EntityListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Entities_ListByHealthModel": {
            "$ref": "./examples/Entities_ListByHealthModel.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CloudHealth/healthmodels/{healthModelName}/entities/{entityName}": {
      "get": {
        "operationId": "Entities_Get",
        "tags": [
          "Entities"
        ],
        "description": "Get a Entity",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "healthModelName",
            "in": "path",
            "description": "Name of health model resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,42}[a-zA-Z0-9]$"
          },
          {
            "name": "entityName",
            "in": "path",
            "description": "Name of the entity. Must be unique within a health model.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]{1,258}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Entity"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Entities_Get": {
            "$ref": "./examples/Entities_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Entities_CreateOrUpdate",
        "tags": [
          "Entities"
        ],
        "description": "Create a Entity",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "healthModelName",
            "in": "path",
            "description": "Name of health model resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,42}[a-zA-Z0-9]$"
          },
          {
            "name": "entityName",
            "in": "path",
            "description": "Name of the entity. Must be unique within a health model.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]{1,258}[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Entity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Entity' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Entity"
            }
          },
          "201": {
            "description": "Resource 'Entity' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Entity"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Entities_CreateOrUpdate": {
            "$ref": "./examples/Entities_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "Entities_Delete",
        "tags": [
          "Entities"
        ],
        "description": "Delete a Entity",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "healthModelName",
            "in": "path",
            "description": "Name of health model resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,42}[a-zA-Z0-9]$"
          },
          {
            "name": "entityName",
            "in": "path",
            "description": "Name of the entity. Must be unique within a health model.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]{1,258}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Entities_Delete": {
            "$ref": "./examples/Entities_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CloudHealth/healthmodels/{healthModelName}/relationships": {
      "get": {
        "operationId": "Relationships_ListByHealthModel",
        "tags": [
          "Relationships"
        ],
        "description": "List Relationship resources by HealthModel",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "Timestamp to use for the operation. When specified, the version of the resource at this point in time is retrieved. If not specified, the latest version is used.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "healthModelName",
            "in": "path",
            "description": "Name of health model resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,42}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RelationshipListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Relationships_ListByHealthModel": {
            "$ref": "./examples/Relationships_ListByHealthModel.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CloudHealth/healthmodels/{healthModelName}/relationships/{relationshipName}": {
      "get": {
        "operationId": "Relationships_Get",
        "tags": [
          "Relationships"
        ],
        "description": "Get a Relationship",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "healthModelName",
            "in": "path",
            "description": "Name of health model resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,42}[a-zA-Z0-9]$"
          },
          {
            "name": "relationshipName",
            "in": "path",
            "description": "Name of the relationship. Must be unique within a health model. For example, a concatenation of parentEntityName and childEntityName can be used as the name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]{1,258}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Relationship"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Relationships_Get": {
            "$ref": "./examples/Relationships_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Relationships_CreateOrUpdate",
        "tags": [
          "Relationships"
        ],
        "description": "Create a Relationship",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "healthModelName",
            "in": "path",
            "description": "Name of health model resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,42}[a-zA-Z0-9]$"
          },
          {
            "name": "relationshipName",
            "in": "path",
            "description": "Name of the relationship. Must be unique within a health model. For example, a concatenation of parentEntityName and childEntityName can be used as the name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]{1,258}[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Relationship"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Relationship' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Relationship"
            }
          },
          "201": {
            "description": "Resource 'Relationship' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Relationship"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Relationships_CreateOrUpdate": {
            "$ref": "./examples/Relationships_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "Relationships_Delete",
        "tags": [
          "Relationships"
        ],
        "description": "Delete a Relationship",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "healthModelName",
            "in": "path",
            "description": "Name of health model resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,42}[a-zA-Z0-9]$"
          },
          {
            "name": "relationshipName",
            "in": "path",
            "description": "Name of the relationship. Must be unique within a health model. For example, a concatenation of parentEntityName and childEntityName can be used as the name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]{1,258}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Relationships_Delete": {
            "$ref": "./examples/Relationships_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CloudHealth/healthmodels/{healthModelName}/signaldefinitions": {
      "get": {
        "operationId": "SignalDefinitions_ListByHealthModel",
        "tags": [
          "SignalDefinitions"
        ],
        "description": "List SignalDefinition resources by HealthModel",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "Timestamp to use for the operation. When specified, the version of the resource at this point in time is retrieved. If not specified, the latest version is used.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "healthModelName",
            "in": "path",
            "description": "Name of health model resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,42}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SignalDefinitionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalDefinitions_ListByHealthModel": {
            "$ref": "./examples/SignalDefinitions_ListByHealthModel.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CloudHealth/healthmodels/{healthModelName}/signaldefinitions/{signalDefinitionName}": {
      "get": {
        "operationId": "SignalDefinitions_Get",
        "tags": [
          "SignalDefinitions"
        ],
        "description": "Get a SignalDefinition",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "healthModelName",
            "in": "path",
            "description": "Name of health model resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,42}[a-zA-Z0-9]$"
          },
          {
            "name": "signalDefinitionName",
            "in": "path",
            "description": "Name of the signal definition. Must be unique within a health model.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]{1,258}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SignalDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalDefinitions_Get": {
            "$ref": "./examples/SignalDefinitions_Get.json"
          }
        }
      },
      "put": {
        "operationId": "SignalDefinitions_CreateOrUpdate",
        "tags": [
          "SignalDefinitions"
        ],
        "description": "Create a SignalDefinition",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "healthModelName",
            "in": "path",
            "description": "Name of health model resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,42}[a-zA-Z0-9]$"
          },
          {
            "name": "signalDefinitionName",
            "in": "path",
            "description": "Name of the signal definition. Must be unique within a health model.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]{1,258}[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignalDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SignalDefinition' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SignalDefinition"
            }
          },
          "201": {
            "description": "Resource 'SignalDefinition' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SignalDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalDefinitions_CreateOrUpdate": {
            "$ref": "./examples/SignalDefinitions_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "SignalDefinitions_Delete",
        "tags": [
          "SignalDefinitions"
        ],
        "description": "Delete a SignalDefinition",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "healthModelName",
            "in": "path",
            "description": "Name of health model resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,42}[a-zA-Z0-9]$"
          },
          {
            "name": "signalDefinitionName",
            "in": "path",
            "description": "Name of the signal definition. Must be unique within a health model.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]{1,258}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalDefinitions_Delete": {
            "$ref": "./examples/SignalDefinitions_Delete.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AlertConfiguration": {
      "type": "object",
      "description": "Alert configuration details",
      "properties": {
        "severity": {
          "$ref": "#/definitions/AlertSeverity",
          "description": "The severity of triggered alert."
        },
        "description": {
          "type": "string",
          "description": "The alert rule description.",
          "minLength": 1,
          "maxLength": 1000
        },
        "actionGroupIds": {
          "type": "array",
          "description": "Optional list of action group resource IDs to be notified when the alert is triggered.",
          "minItems": 1,
          "maxItems": 5,
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.Insights/actionGroups"
                }
              ]
            }
          }
        }
      },
      "required": [
        "severity"
      ]
    },
    "AlertSeverity": {
      "type": "string",
      "description": "Severity of an alert",
      "enum": [
        "Sev0",
        "Sev1",
        "Sev2",
        "Sev3",
        "Sev4"
      ],
      "x-ms-enum": {
        "name": "AlertSeverity",
        "modelAsString": true,
        "values": [
          {
            "name": "Sev0",
            "value": "Sev0",
            "description": "Critical"
          },
          {
            "name": "Sev1",
            "value": "Sev1",
            "description": "Error"
          },
          {
            "name": "Sev2",
            "value": "Sev2",
            "description": "Warning"
          },
          {
            "name": "Sev3",
            "value": "Sev3",
            "description": "Informational"
          },
          {
            "name": "Sev4",
            "value": "Sev4",
            "description": "Verbose"
          }
        ]
      }
    },
    "AuthenticationKind": {
      "type": "string",
      "description": "Supported kinds of authentication settings as discriminator",
      "enum": [
        "ManagedIdentity"
      ],
      "x-ms-enum": {
        "name": "AuthenticationKind",
        "modelAsString": true,
        "values": [
          {
            "name": "ManagedIdentity",
            "value": "ManagedIdentity"
          }
        ]
      }
    },
    "AuthenticationSetting": {
      "type": "object",
      "description": "An authentication setting in a health model",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AuthenticationSettingProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AuthenticationSettingListResult": {
      "type": "object",
      "description": "The response of a AuthenticationSetting list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AuthenticationSetting items on this page",
          "items": {
            "$ref": "#/definitions/AuthenticationSetting"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AuthenticationSettingProperties": {
      "type": "object",
      "description": "Authentication setting properties",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/HealthModelProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Display name",
          "minLength": 1,
          "maxLength": 260
        },
        "authenticationKind": {
          "$ref": "#/definitions/AuthenticationKind",
          "description": "Kind of the authentication setting"
        }
      },
      "discriminator": "authenticationKind",
      "required": [
        "authenticationKind"
      ]
    },
    "AzureMonitorWorkspaceResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Monitor/accounts"
          }
        ]
      }
    },
    "AzureMonitorWorkspaceSignalGroup": {
      "type": "object",
      "description": "A grouping of signal assignments for a Azure Monitor Workspace",
      "properties": {
        "signalAssignments": {
          "type": "array",
          "description": "Signal definitions which are assigned to this signal group. All assignments are combined with an OR operator.",
          "maxItems": 50,
          "items": {
            "$ref": "#/definitions/SignalAssignment"
          },
          "x-ms-identifiers": [
            "signalDefinitions"
          ]
        },
        "authenticationSetting": {
          "$ref": "#/definitions/authenticationSettingName",
          "description": "Reference to the name of the authentication setting which is used for querying the data source"
        },
        "azureMonitorWorkspaceResourceId": {
          "$ref": "#/definitions/AzureMonitorWorkspaceResourceId",
          "description": "Azure Monitor workspace resource ID"
        }
      },
      "required": [
        "authenticationSetting",
        "azureMonitorWorkspaceResourceId"
      ]
    },
    "AzureResourceSignalGroup": {
      "type": "object",
      "description": "A grouping of signal assignments for an Azure resource",
      "properties": {
        "signalAssignments": {
          "type": "array",
          "description": "Signal definitions which are assigned to this signal group. All assignments are combined with an OR operator.",
          "maxItems": 50,
          "items": {
            "$ref": "#/definitions/SignalAssignment"
          },
          "x-ms-identifiers": [
            "signalDefinitions"
          ]
        },
        "authenticationSetting": {
          "$ref": "#/definitions/authenticationSettingName",
          "description": "Reference to the name of the authentication setting which is used for querying the data source"
        },
        "azureResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Azure resource ID",
          "x-ms-arm-id-details": {
            "allowedResources": []
          }
        }
      },
      "required": [
        "authenticationSetting",
        "azureResourceId"
      ]
    },
    "DependenciesSignalGroup": {
      "type": "object",
      "description": "Properties for dependent entities, i.e. child entities",
      "properties": {
        "aggregationType": {
          "type": "string",
          "description": "Aggregation type for child dependencies.",
          "default": "WorstOf",
          "enum": [
            "WorstOf",
            "Thresholds"
          ],
          "x-ms-enum": {
            "name": "DependenciesAggregationType",
            "modelAsString": true,
            "values": [
              {
                "name": "WorstOf",
                "value": "WorstOf",
                "description": "Default behavior: Worst child health state is propagated."
              },
              {
                "name": "Thresholds",
                "value": "Thresholds",
                "description": "Based on configurable thresholds."
              }
            ]
          }
        },
        "degradedThreshold": {
          "type": "string",
          "description": "Degraded threshold for aggregating the propagated health state of child dependencies. Can be either an absolute number that is greater than 0, or a percentage between 1-100%. The entity will be considered degraded when the number of not healthy child dependents (unhealthy, degraded, unknown) is equal to or above the threshold value. Must only be set when AggregationType is 'Thresholds'."
        },
        "unhealthyThreshold": {
          "type": "string",
          "description": "Unhealthy threshold for aggregating the propagated health state of child dependencies. Can be either an absolute number that is greater than 0, or a percentage between 1-100%. The entity will be considered unhealthy when the number of not healthy child dependents (unhealthy, degraded, unknown) is equal to or above the threshold value. Must only be set when AggregationType is 'Thresholds'."
        }
      },
      "required": [
        "aggregationType"
      ]
    },
    "DiscoveryRule": {
      "type": "object",
      "description": "A discovery rule which automatically finds entities and relationships in a health model based on an Azure Resource Graph query",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DiscoveryRuleProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DiscoveryRuleListResult": {
      "type": "object",
      "description": "The response of a DiscoveryRule list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DiscoveryRule items on this page",
          "items": {
            "$ref": "#/definitions/DiscoveryRule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DiscoveryRuleProperties": {
      "type": "object",
      "description": "Discovery rule properties",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/HealthModelProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Display name",
          "minLength": 1,
          "maxLength": 260
        },
        "resourceGraphQuery": {
          "type": "string",
          "description": "Azure Resource Graph query text in KQL syntax. The query must return at least a column named 'id' which contains the resource ID of the discovered resources.",
          "minLength": 1,
          "maxLength": 5000
        },
        "authenticationSetting": {
          "$ref": "#/definitions/authenticationSettingName",
          "description": "Reference to the name of the authentication setting which is used for querying Azure Resource Graph. The same authentication setting will also be assigned to any discovered entities."
        },
        "discoverRelationships": {
          "$ref": "#/definitions/DiscoveryRuleRelationshipDiscoveryBehavior",
          "description": "Whether to create relationships between the discovered entities based on a set of built-in rules. These relationships cannot be manually deleted."
        },
        "addRecommendedSignals": {
          "$ref": "#/definitions/DiscoveryRuleRecommendedSignalsBehavior",
          "description": "Whether to add all recommended signals to the discovered entities."
        },
        "deletionDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date when the discovery rule was (soft-)deleted.",
          "readOnly": true
        },
        "errorMessage": {
          "type": "string",
          "description": "Error message if the last discovery operation failed.",
          "readOnly": true
        },
        "numberOfDiscoveredEntities": {
          "type": "integer",
          "format": "int32",
          "description": "Number of discovered entities in the last discovery operation.",
          "readOnly": true
        },
        "entityName": {
          "type": "string",
          "description": "Name of the entity which represents the discovery rule. Note: It might take a few minutes after creating the discovery rule until the entity is created.",
          "readOnly": true
        }
      },
      "required": [
        "resourceGraphQuery",
        "authenticationSetting",
        "discoverRelationships",
        "addRecommendedSignals",
        "entityName"
      ]
    },
    "DiscoveryRuleRecommendedSignalsBehavior": {
      "type": "string",
      "description": "Discovery rule recommended signal behavior",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "DiscoveryRuleRecommendedSignalsBehavior",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Automatically add recommended signals"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Do not automatically add recommended signals"
          }
        ]
      }
    },
    "DiscoveryRuleRelationshipDiscoveryBehavior": {
      "type": "string",
      "description": "Discovery rule relationship discovery behavior",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "DiscoveryRuleRelationshipDiscoveryBehavior",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Automatically attempt to discover relationships"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Do not automatically attempt to discover relationships"
          }
        ]
      }
    },
    "DynamicDetectionRule": {
      "type": "object",
      "description": "ML-based evaluation rule for a signal definition",
      "properties": {
        "dynamicThresholdModel": {
          "$ref": "#/definitions/DynamicThresholdModel",
          "description": "ML model to use for dynamic thresholds"
        },
        "modelSensitivity": {
          "type": "number",
          "format": "float",
          "description": "ML model sensitivity. Lowest value = high sensitivity. Supported step size = 0.5",
          "minimum": 0,
          "maximum": 5
        },
        "dynamicThresholdDirection": {
          "$ref": "#/definitions/DynamicThresholdDirection",
          "description": "Threshold direction"
        },
        "trainingStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of the training in UTC."
        }
      },
      "required": [
        "dynamicThresholdModel",
        "modelSensitivity",
        "dynamicThresholdDirection"
      ]
    },
    "DynamicThresholdDirection": {
      "type": "string",
      "description": "Threshold direction for dynamic thresholds",
      "enum": [
        "LowerThan",
        "GreaterThan",
        "GreaterOrLowerThan"
      ],
      "x-ms-enum": {
        "name": "DynamicThresholdDirection",
        "modelAsString": true,
        "values": [
          {
            "name": "LowerThan",
            "value": "LowerThan",
            "description": "Lower than"
          },
          {
            "name": "GreaterThan",
            "value": "GreaterThan",
            "description": "Greater than"
          },
          {
            "name": "GreaterOrLowerThan",
            "value": "GreaterOrLowerThan",
            "description": "Greater or Lower Than"
          }
        ]
      }
    },
    "DynamicThresholdModel": {
      "type": "string",
      "description": "ML-based model variants",
      "enum": [
        "AnomalyDetection"
      ],
      "x-ms-enum": {
        "name": "DynamicThresholdModel",
        "modelAsString": true,
        "values": [
          {
            "name": "AnomalyDetection",
            "value": "AnomalyDetection",
            "description": "Anomaly detection model"
          }
        ]
      }
    },
    "Entity": {
      "type": "object",
      "description": "An entity (aka node) of a health model",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EntityProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "EntityAlerts": {
      "type": "object",
      "description": "Alert configuration for an entity",
      "properties": {
        "unhealthy": {
          "$ref": "#/definitions/AlertConfiguration",
          "description": "Alert to be triggered on state change to unhealthy"
        },
        "degraded": {
          "$ref": "#/definitions/AlertConfiguration",
          "description": "Alert to be triggered on state change to degraded"
        }
      }
    },
    "EntityCoordinates": {
      "type": "object",
      "description": "Visual position of the entity",
      "properties": {
        "x": {
          "type": "number",
          "format": "float",
          "description": "X Coordinate"
        },
        "y": {
          "type": "number",
          "format": "float",
          "description": "Y Coordinate"
        }
      },
      "required": [
        "x",
        "y"
      ]
    },
    "EntityListResult": {
      "type": "object",
      "description": "The response of a Entity list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Entity items on this page",
          "items": {
            "$ref": "#/definitions/Entity"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EntityProperties": {
      "type": "object",
      "description": "Properties which are common across all kinds of entities",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/HealthModelProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Display name",
          "minLength": 1,
          "maxLength": 260
        },
        "kind": {
          "type": "string",
          "description": "Entity kind",
          "default": "Default",
          "minLength": 1,
          "maxLength": 260
        },
        "canvasPosition": {
          "$ref": "#/definitions/EntityCoordinates",
          "description": "Positioning of the entity on the model canvas"
        },
        "icon": {
          "$ref": "#/definitions/IconDefinition",
          "description": "Visual icon definition. If not set, a default icon is used."
        },
        "healthObjective": {
          "type": "number",
          "format": "float",
          "description": "Health objective as a percentage of time the entity should be healthy.",
          "minimum": 0,
          "maximum": 100
        },
        "impact": {
          "type": "string",
          "description": "Impact of the entity in health state propagation",
          "default": "Standard",
          "enum": [
            "Standard",
            "Limited",
            "Suppressed"
          ],
          "x-ms-enum": {
            "name": "EntityImpact",
            "modelAsString": true,
            "values": [
              {
                "name": "Standard",
                "value": "Standard",
                "description": "Standard impact"
              },
              {
                "name": "Limited",
                "value": "Limited",
                "description": "Limited impact"
              },
              {
                "name": "Suppressed",
                "value": "Suppressed",
                "description": "Suppressed impact"
              }
            ]
          }
        },
        "labels": {
          "type": "object",
          "description": "Optional set of labels (key-value pairs)",
          "additionalProperties": {
            "$ref": "#/definitions/string4096"
          }
        },
        "signals": {
          "$ref": "#/definitions/SignalGroup",
          "description": "Signal groups which are assigned to this entity"
        },
        "discoveredBy": {
          "$ref": "#/definitions/discoveryRuleName",
          "description": "Discovered by which discovery rule. If set, the entity cannot be deleted manually.",
          "readOnly": true
        },
        "deletionDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date when the entity was (soft-)deleted",
          "readOnly": true
        },
        "healthState": {
          "$ref": "#/definitions/HealthState",
          "description": "Health state of this entity",
          "readOnly": true
        },
        "alerts": {
          "$ref": "#/definitions/EntityAlerts",
          "description": "Alert configuration for this entity"
        }
      }
    },
    "EvaluationRule": {
      "type": "object",
      "description": "Evaluation rule for a signal definition",
      "properties": {
        "dynamicDetectionRule": {
          "$ref": "#/definitions/DynamicDetectionRule",
          "description": "Configure to use ML-based dynamic thresholds. When used, degradedRule and unhealthyRule must not be set."
        },
        "degradedRule": {
          "$ref": "#/definitions/ThresholdRule",
          "description": "Degraded rule with static threshold. When used, dynamicDetectionRule must not be set."
        },
        "unhealthyRule": {
          "$ref": "#/definitions/ThresholdRule",
          "description": "Unhealthy rule with static threshold. When used, dynamicDetectionRule must not be set."
        }
      }
    },
    "HealthModel": {
      "type": "object",
      "description": "A HealthModel resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/HealthModelProperties",
          "description": "The resource-specific properties for this resource."
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v6/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "HealthModelListResult": {
      "type": "object",
      "description": "The response of a HealthModel list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The HealthModel items on this page",
          "items": {
            "$ref": "#/definitions/HealthModel"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "HealthModelProperties": {
      "type": "object",
      "description": "HealthModel properties",
      "properties": {
        "dataplaneEndpoint": {
          "type": "string",
          "description": "The data plane endpoint for interacting with health data",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/HealthModelProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "discovery": {
          "$ref": "#/definitions/ModelDiscoverySettings",
          "description": "Configure to automatically discover entities from a given scope, such as a Service Group. The discovered entities will be linked to the root entity of the health model."
        }
      }
    },
    "HealthModelProvisioningState": {
      "type": "string",
      "description": "Health Model provisioning states",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Creating",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "HealthModelProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          }
        ]
      },
      "readOnly": true
    },
    "HealthModelUpdate": {
      "type": "object",
      "description": "The type used for update operations of the HealthModel.",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v6/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/HealthModelUpdateProperties",
          "description": "The resource-specific properties for this resource."
        }
      }
    },
    "HealthModelUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the HealthModel.",
      "properties": {
        "discovery": {
          "$ref": "#/definitions/ModelDiscoverySettingsUpdate",
          "description": "Configure to automatically discover entities from a given scope, such as a Service Group. The discovered entities will be linked to the root entity of the health model."
        }
      }
    },
    "HealthState": {
      "type": "string",
      "description": "Health state of an entity",
      "enum": [
        "Healthy",
        "Degraded",
        "Error",
        "Unknown",
        "Deleted"
      ],
      "x-ms-enum": {
        "name": "HealthState",
        "modelAsString": true,
        "values": [
          {
            "name": "Healthy",
            "value": "Healthy",
            "description": "Healthy status"
          },
          {
            "name": "Degraded",
            "value": "Degraded",
            "description": "Degraded status"
          },
          {
            "name": "Error",
            "value": "Error",
            "description": "Error status (Unhealthy)"
          },
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "Unknown status"
          },
          {
            "name": "Deleted",
            "value": "Deleted",
            "description": "Deleted status"
          }
        ]
      }
    },
    "IconDefinition": {
      "type": "object",
      "description": "Visual icon definition of an entity",
      "properties": {
        "iconName": {
          "type": "string",
          "description": "Name of the built-in icon, or 'Custom' to use customData",
          "minLength": 1,
          "maxLength": 100
        },
        "customData": {
          "type": "string",
          "description": "Custom data. Base64-encoded SVG data. If set, this overrides the built-in icon.",
          "minLength": 1,
          "maxLength": 5000
        }
      },
      "required": [
        "iconName"
      ]
    },
    "LogAnalyticsQuerySignalDefinitionProperties": {
      "type": "object",
      "description": "Log Analytics Query Signal Definition properties",
      "properties": {
        "queryText": {
          "type": "string",
          "description": "Query text in KQL syntax",
          "minLength": 1,
          "maxLength": 5000
        },
        "timeGrain": {
          "type": "string",
          "description": "Time range of signal. ISO duration format like PT10M. If not specified, the KQL query must define a time range.",
          "minLength": 1,
          "maxLength": 100
        },
        "valueColumnName": {
          "type": "string",
          "description": "Name of the column in the result set to evaluate against the thresholds. Defaults to the first column in the result set if not specified. The column must be numeric.",
          "minLength": 1,
          "maxLength": 100
        }
      },
      "required": [
        "queryText"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SignalDefinitionProperties"
        }
      ],
      "x-ms-discriminator-value": "LogAnalyticsQuery"
    },
    "LogAnalyticsSignalGroup": {
      "type": "object",
      "description": "A grouping of signal assignments for a Log Analytics Workspace",
      "properties": {
        "signalAssignments": {
          "type": "array",
          "description": "Signal definitions which are assigned to this signal group. All assignments are combined with an OR operator.",
          "maxItems": 50,
          "items": {
            "$ref": "#/definitions/SignalAssignment"
          },
          "x-ms-identifiers": [
            "signalDefinitions"
          ]
        },
        "authenticationSetting": {
          "$ref": "#/definitions/authenticationSettingName",
          "description": "Reference to the name of the authentication setting which is used for querying the data source"
        },
        "logAnalyticsWorkspaceResourceId": {
          "$ref": "#/definitions/LogAnalyticsWorkspaceResourceId",
          "description": "Log Analytics Workspace resource ID"
        }
      },
      "required": [
        "authenticationSetting",
        "logAnalyticsWorkspaceResourceId"
      ]
    },
    "LogAnalyticsWorkspaceResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.OperationalInsights/workspaces"
          }
        ]
      }
    },
    "ManagedIdentityAuthenticationSettingProperties": {
      "type": "object",
      "description": "Authentication setting properties for Azure Managed Identity",
      "properties": {
        "managedIdentityName": {
          "type": "string",
          "description": "Name of the managed identity to use. Either 'SystemAssigned' or the resourceId of a user-assigned identity.",
          "minLength": 1,
          "maxLength": 500
        }
      },
      "required": [
        "managedIdentityName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AuthenticationSettingProperties"
        }
      ],
      "x-ms-discriminator-value": "ManagedIdentity"
    },
    "MetricAggregationType": {
      "type": "string",
      "description": "Metric aggregation type",
      "enum": [
        "None",
        "Average",
        "Count",
        "Minimum",
        "Maximum",
        "Total"
      ],
      "x-ms-enum": {
        "name": "MetricAggregationType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "Average",
            "value": "Average"
          },
          {
            "name": "Count",
            "value": "Count"
          },
          {
            "name": "Minimum",
            "value": "Minimum"
          },
          {
            "name": "Maximum",
            "value": "Maximum"
          },
          {
            "name": "Total",
            "value": "Total"
          }
        ]
      }
    },
    "ModelDiscoverySettings": {
      "type": "object",
      "description": "Settings for automatically discovering entities for the health model.",
      "properties": {
        "scope": {
          "$ref": "#/definitions/string4096",
          "description": "The scope from which entities should be automatically discovered. For example, the resource id of a Service Group."
        },
        "addRecommendedSignals": {
          "$ref": "#/definitions/DiscoveryRuleRecommendedSignalsBehavior",
          "description": "Whether to add all recommended signals to the discovered entities."
        },
        "identity": {
          "$ref": "#/definitions/string4096",
          "description": "Which Managed Identity of the health model to use for discovery. Defaults to SystemAssigned, if not set. Can be set to 'SystemAssigned' or to the resource id of a user-assigned managed identity which is linked to the health model."
        }
      },
      "required": [
        "scope",
        "addRecommendedSignals"
      ]
    },
    "ModelDiscoverySettingsUpdate": {
      "type": "object",
      "description": "Settings for automatically discovering entities for the health model.",
      "properties": {
        "scope": {
          "$ref": "#/definitions/string4096",
          "description": "The scope from which entities should be automatically discovered. For example, the resource id of a Service Group."
        },
        "addRecommendedSignals": {
          "$ref": "#/definitions/DiscoveryRuleRecommendedSignalsBehavior",
          "description": "Whether to add all recommended signals to the discovered entities."
        },
        "identity": {
          "$ref": "#/definitions/string4096",
          "description": "Which Managed Identity of the health model to use for discovery. Defaults to SystemAssigned, if not set. Can be set to 'SystemAssigned' or to the resource id of a user-assigned managed identity which is linked to the health model."
        }
      }
    },
    "PrometheusMetricsSignalDefinitionProperties": {
      "type": "object",
      "description": "Prometheus Metrics Signal Definition properties",
      "properties": {
        "queryText": {
          "type": "string",
          "description": "Query text in PromQL syntax",
          "minLength": 1,
          "maxLength": 5000
        },
        "timeGrain": {
          "type": "string",
          "description": "Time range of signal. ISO duration format like PT10M.",
          "minLength": 1,
          "maxLength": 100
        }
      },
      "required": [
        "queryText"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SignalDefinitionProperties"
        }
      ],
      "x-ms-discriminator-value": "PrometheusMetricsQuery"
    },
    "Relationship": {
      "type": "object",
      "description": "A relationship (aka edge) between two entities in a health model",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RelationshipProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "RelationshipListResult": {
      "type": "object",
      "description": "The response of a Relationship list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Relationship items on this page",
          "items": {
            "$ref": "#/definitions/Relationship"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "RelationshipProperties": {
      "type": "object",
      "description": "Relationship properties",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/HealthModelProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Display name",
          "minLength": 1,
          "maxLength": 260
        },
        "parentEntityName": {
          "$ref": "#/definitions/entityName",
          "description": "Resource name of the parent entity",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "childEntityName": {
          "$ref": "#/definitions/entityName",
          "description": "Resource name of the child entity",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "labels": {
          "type": "object",
          "description": "Optional set of labels (key-value pairs)",
          "additionalProperties": {
            "$ref": "#/definitions/string4096"
          }
        },
        "discoveredBy": {
          "$ref": "#/definitions/discoveryRuleName",
          "description": "Discovered by which discovery rule. If set, the relationship cannot be deleted manually.",
          "readOnly": true
        },
        "deletionDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date when the relationship was (soft-)deleted",
          "readOnly": true
        }
      },
      "required": [
        "parentEntityName",
        "childEntityName"
      ]
    },
    "ResourceMetricSignalDefinitionProperties": {
      "type": "object",
      "description": "Azure Resource Metric Signal Definition properties",
      "properties": {
        "metricNamespace": {
          "type": "string",
          "description": "Metric namespace",
          "minLength": 1,
          "maxLength": 256
        },
        "metricName": {
          "type": "string",
          "description": "Name of the metric",
          "minLength": 1,
          "maxLength": 256
        },
        "timeGrain": {
          "type": "string",
          "description": "Time range of signal. ISO duration format like PT10M.",
          "minLength": 1,
          "maxLength": 100
        },
        "aggregationType": {
          "$ref": "#/definitions/MetricAggregationType",
          "description": "Type of aggregation to apply to the metric"
        },
        "dimension": {
          "type": "string",
          "description": "Optional: Dimension to split by",
          "minLength": 1,
          "maxLength": 256
        },
        "dimensionFilter": {
          "type": "string",
          "description": "Optional: Dimension filter to apply to the dimension. Must only be set if also Dimension is set.",
          "minLength": 1,
          "maxLength": 256
        }
      },
      "required": [
        "metricNamespace",
        "metricName",
        "timeGrain",
        "aggregationType"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SignalDefinitionProperties"
        }
      ],
      "x-ms-discriminator-value": "AzureResourceMetric"
    },
    "SignalAssignment": {
      "type": "object",
      "description": "Group of signal definition assignments",
      "properties": {
        "signalDefinitions": {
          "type": "array",
          "description": "Signal definitions referenced by their names. All definitions are combined with an AND operator.",
          "minItems": 1,
          "maxItems": 1,
          "items": {
            "$ref": "#/definitions/signalDefinitionName"
          }
        }
      },
      "required": [
        "signalDefinitions"
      ]
    },
    "SignalDefinition": {
      "type": "object",
      "description": "A signal definition in a health model",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SignalDefinitionProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SignalDefinitionListResult": {
      "type": "object",
      "description": "The response of a SignalDefinition list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SignalDefinition items on this page",
          "items": {
            "$ref": "#/definitions/SignalDefinition"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SignalDefinitionProperties": {
      "type": "object",
      "description": "SignalDefinition properties",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/HealthModelProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Display name",
          "minLength": 1,
          "maxLength": 260
        },
        "signalKind": {
          "$ref": "#/definitions/SignalKind",
          "description": "Kind of the signal definition"
        },
        "refreshInterval": {
          "type": "string",
          "description": "Interval in which the signal is being evaluated. Defaults to PT1M (1 minute).",
          "default": "PT1M",
          "enum": [
            "PT1M",
            "PT5M",
            "PT10M",
            "PT30M",
            "PT1H",
            "PT2H"
          ],
          "x-ms-enum": {
            "name": "RefreshInterval",
            "modelAsString": true,
            "values": [
              {
                "name": "PT1M",
                "value": "PT1M",
                "description": "One Minute"
              },
              {
                "name": "PT5M",
                "value": "PT5M",
                "description": "Five Minutes"
              },
              {
                "name": "PT10M",
                "value": "PT10M",
                "description": "Ten Minutes"
              },
              {
                "name": "PT30M",
                "value": "PT30M",
                "description": "Thirty Minutes"
              },
              {
                "name": "PT1H",
                "value": "PT1H",
                "description": "One Hour"
              },
              {
                "name": "PT2H",
                "value": "PT2H",
                "description": "Two Hours"
              }
            ]
          }
        },
        "labels": {
          "type": "object",
          "description": "Optional set of labels (key-value pairs)",
          "additionalProperties": {
            "$ref": "#/definitions/string4096"
          }
        },
        "dataUnit": {
          "type": "string",
          "description": "Unit of the signal result (e.g. Bytes, MilliSeconds, Percent, Count))",
          "minLength": 1,
          "maxLength": 100
        },
        "evaluationRules": {
          "$ref": "#/definitions/EvaluationRule",
          "description": "Evaluation rules for the signal definition"
        },
        "deletionDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date when the signal definition was (soft-)deleted",
          "readOnly": true
        }
      },
      "discriminator": "signalKind",
      "required": [
        "signalKind",
        "evaluationRules"
      ]
    },
    "SignalGroup": {
      "type": "object",
      "description": "Contains various signal groups that can be assigned to an entity",
      "properties": {
        "azureResource": {
          "$ref": "#/definitions/AzureResourceSignalGroup",
          "description": "Azure Resource Signal Group"
        },
        "azureLogAnalytics": {
          "$ref": "#/definitions/LogAnalyticsSignalGroup",
          "description": "Log Analytics Signal Group"
        },
        "azureMonitorWorkspace": {
          "$ref": "#/definitions/AzureMonitorWorkspaceSignalGroup",
          "description": "Azure Monitor Workspace Signal Group"
        },
        "dependencies": {
          "$ref": "#/definitions/DependenciesSignalGroup",
          "description": "Settings for dependency signals to control how the health state of child entities influences the health state of the parent entity."
        }
      }
    },
    "SignalKind": {
      "type": "string",
      "description": "Supported signal kinds as discriminator",
      "enum": [
        "AzureResourceMetric",
        "LogAnalyticsQuery",
        "PrometheusMetricsQuery"
      ],
      "x-ms-enum": {
        "name": "SignalKind",
        "modelAsString": true,
        "values": [
          {
            "name": "AzureResourceMetric",
            "value": "AzureResourceMetric"
          },
          {
            "name": "LogAnalyticsQuery",
            "value": "LogAnalyticsQuery"
          },
          {
            "name": "PrometheusMetricsQuery",
            "value": "PrometheusMetricsQuery"
          }
        ]
      }
    },
    "SignalOperator": {
      "type": "string",
      "description": "Signal operator",
      "enum": [
        "LowerThan",
        "LowerOrEquals",
        "GreaterThan",
        "GreaterOrEquals",
        "Equals"
      ],
      "x-ms-enum": {
        "name": "SignalOperator",
        "modelAsString": true,
        "values": [
          {
            "name": "LowerThan",
            "value": "LowerThan",
            "description": "Lower than"
          },
          {
            "name": "LowerOrEquals",
            "value": "LowerOrEquals",
            "description": "Lower than or equal to"
          },
          {
            "name": "GreaterThan",
            "value": "GreaterThan",
            "description": "Greater than"
          },
          {
            "name": "GreaterOrEquals",
            "value": "GreaterOrEquals",
            "description": "Greater than or equal to"
          },
          {
            "name": "Equals",
            "value": "Equals",
            "description": "Equal to"
          }
        ]
      }
    },
    "ThresholdRule": {
      "type": "object",
      "description": "Threshold-based evaluation rule for a signal definition",
      "properties": {
        "operator": {
          "$ref": "#/definitions/SignalOperator",
          "description": "Operator how to compare the signal value with the threshold"
        },
        "threshold": {
          "type": "string",
          "description": "Threshold value",
          "minLength": 1,
          "maxLength": 100
        }
      },
      "required": [
        "operator",
        "threshold"
      ]
    },
    "authenticationSettingName": {
      "type": "string",
      "description": "Type for authentication setting resource name.",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]{1,258}[a-zA-Z0-9]$"
    },
    "discoveryRuleName": {
      "type": "string",
      "description": "Type for discovery rule resource name.",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]{1,258}[a-zA-Z0-9]$"
    },
    "entityName": {
      "type": "string",
      "description": "Type for entity resource name.",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]{1,258}[a-zA-Z0-9]$"
    },
    "signalDefinitionName": {
      "type": "string",
      "description": "Type for signal definition resource name.",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]{1,258}[a-zA-Z0-9]$"
    },
    "string4096": {
      "type": "string",
      "description": "String with max length validation of 4096 characters",
      "maxLength": 4096
    }
  },
  "parameters": {}
}
