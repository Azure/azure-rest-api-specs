{
  "swagger": "2.0",
  "info": {
    "title": "Azure Batch",
    "version": "2024-02-01.19.0",
    "description": "Azure Batch provides Cloud-scale job scheduling and compute management.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "endpoint",
        "in": "path",
        "description": "Batch account endpoint (for example: https://batchaccount.eastus2.batch.azure.com).",
        "required": true,
        "type": "string",
        "format": "uri",
        "x-ms-skip-url-encoding": true
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "OAuth2Auth": [
        "https://batch.core.windows.net//.default"
      ]
    }
  ],
  "securityDefinitions": {
    "OAuth2Auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
      "scopes": {
        "https://batch.core.windows.net//.default": ""
      }
    }
  },
  "tags": [],
  "paths": {
    "/applications": {
      "get": {
        "operationId": "Batch_ListApplications",
        "summary": "Lists all of the applications available in the specified Account.",
        "description": "This operation returns only Applications and versions that are available for\nuse on Compute Nodes; that is, that can be used in an Package reference. For\nadministrator information about applications and versions that are not yet\navailable to Compute Nodes, use the Azure portal or the Azure Resource Manager\nAPI.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "maxresults",
            "in": "query",
            "description": "The maximum number of items to return in the response. A maximum of 1000\napplications can be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1000,
            "minimum": 1,
            "maximum": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BatchApplicationListResult"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "List applications": {
            "$ref": "./examples/ApplicationList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink"
        }
      }
    },
    "/applications/{applicationId}": {
      "get": {
        "operationId": "Batch_GetApplication",
        "summary": "Gets information about the specified Application.",
        "description": "This operation returns only Applications and versions that are available for\nuse on Compute Nodes; that is, that can be used in an Package reference. For\nadministrator information about Applications and versions that are not yet\navailable to Compute Nodes, use the Azure portal or the Azure Resource Manager\nAPI.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "The ID of the Application",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BatchApplication"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Get applications": {
            "$ref": "./examples/ApplicationGet.json"
          }
        }
      }
    },
    "/jobs": {
      "get": {
        "operationId": "Batch_ListJobs",
        "summary": "Lists all of the Jobs in the specified Account.",
        "description": "Lists all of the Jobs in the specified Account.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "maxresults",
            "in": "query",
            "description": "The maximum number of items to return in the response. A maximum of 1000\napplications can be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1000,
            "minimum": 1,
            "maximum": 1000
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData $filter clause. For more information on constructing this filter, see\nhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-jobs.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "An OData $select clause.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "An OData $expand clause.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BatchJobListResult"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Job list": {
            "$ref": "./examples/JobList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink"
        }
      },
      "post": {
        "operationId": "Batch_CreateJob",
        "summary": "Creates a Job to the specified Account.",
        "description": "The Batch service supports two ways to control the work done as part of a Job.\nIn the first approach, the user specifies a Job Manager Task. The Batch service\nlaunches this Task when it is ready to start the Job. The Job Manager Task\ncontrols all other Tasks that run under this Job, by using the Task APIs. In\nthe second approach, the user directly controls the execution of Tasks under an\nactive Job, by using the Task APIs. Also note: when naming Jobs, avoid\nincluding sensitive information such as user names or secret project names.\nThis information may appear in telemetry logs accessible to Microsoft Support\nengineers.",
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "job",
            "in": "body",
            "description": "The Job to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchJobCreateContent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Creates a basic job": {
            "$ref": "./examples/JobCreate_Basic.json"
          },
          "Creates a complex job": {
            "$ref": "./examples/JobCreate_Complex.json"
          }
        }
      }
    },
    "/jobs/{jobId}": {
      "get": {
        "operationId": "Batch_GetJob",
        "summary": "Gets information about the specified Job.",
        "description": "Gets information about the specified Job.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The ID of the Job.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "An OData $select clause.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "An OData $expand clause.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BatchJob"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Job get": {
            "$ref": "./examples/JobGet.json"
          }
        }
      },
      "put": {
        "operationId": "Batch_ReplaceJob",
        "summary": "Updates the properties of the specified Job.",
        "description": "This fully replaces all the updatable properties of the Job. For example, if\nthe Job has constraints associated with it and if constraints is not specified\nwith this request, then the Batch service will remove the existing constraints.",
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The ID of the Job whose properties you want to update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "job",
            "in": "body",
            "description": "A job with updated properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchJob"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Job update": {
            "$ref": "./examples/JobUpdate.json"
          }
        }
      },
      "patch": {
        "operationId": "Batch_UpdateJob",
        "summary": "Updates the properties of the specified Job.",
        "description": "This replaces only the Job properties specified in the request. For example, if\nthe Job has constraints, and a request does not specify the constraints\nelement, then the Job keeps the existing constraints.",
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The ID of the Job whose properties you want to update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "job",
            "in": "body",
            "description": "The options to use for updating the Job.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchJobUpdateContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Job patch": {
            "$ref": "./examples/JobPatch.json"
          }
        }
      },
      "delete": {
        "operationId": "Batch_DeleteJob",
        "summary": "Deletes a Job.",
        "description": "Deleting a Job also deletes all Tasks that are part of that Job, and all Job\nstatistics. This also overrides the retention period for Task data; that is, if\nthe Job contains Tasks which are still retained on Compute Nodes, the Batch\nservices deletes those Tasks' working directories and all their contents.  When\na Delete Job request is received, the Batch service sets the Job to the\ndeleting state. All update operations on a Job that is in deleting state will\nfail with status code 409 (Conflict), with additional information indicating\nthat the Job is being deleted.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The ID of the Job to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Delete Job": {
            "$ref": "./examples/JobDelete.json"
          }
        }
      }
    },
    "/jobs/{jobId}/addtaskcollection": {
      "post": {
        "operationId": "Batch_CreateTaskCollection",
        "summary": "Adds a collection of Tasks to the specified Job.",
        "description": "Note that each Task must have a unique ID. The Batch service may not return the\nresults for each Task in the same order the Tasks were submitted in this\nrequest. If the server times out or the connection is closed during the\nrequest, the request may have been partially or fully processed, or not at all.\nIn such cases, the user should re-issue the request. Note that it is up to the\nuser to correctly handle failures when re-issuing a request. For example, you\nshould use the same Task IDs during a retry so that if the prior operation\nsucceeded, the retry will not create extra Tasks unexpectedly. If the response\ncontains any Tasks which failed to add, a client can retry the request. In a\nretry, it is most efficient to resubmit only Tasks that failed to add, and to\nomit Tasks that were successfully added on the first attempt. The maximum\nlifetime of a Task from addition to completion is 180 days. If a Task has not\ncompleted within 180 days of being added it will be terminated by the Batch\nservice and left in whatever state it was in at that time.",
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The ID of the Job to which the Task collection is to be added.",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskCollection",
            "in": "body",
            "description": "The Tasks to be added.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchTaskGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BatchTaskAddCollectionResult"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Creates a basic collection of tasks": {
            "$ref": "./examples/TaskCreateCollection_Basic.json"
          },
          "Creates a complex collection of tasks": {
            "$ref": "./examples/TaskCreateCollection_Complex.json"
          }
        }
      }
    },
    "/jobs/{jobId}/disable": {
      "post": {
        "operationId": "Batch_DisableJob",
        "summary": "Disables the specified Job, preventing new Tasks from running.",
        "description": "The Batch Service immediately moves the Job to the disabling state. Batch then\nuses the disableTasks parameter to determine what to do with the currently\nrunning Tasks of the Job. The Job remains in the disabling state until the\ndisable operation is completed and all Tasks have been dealt with according to\nthe disableTasks option; the Job then moves to the disabled state. No new Tasks\nare started under the Job until it moves back to active state. If you try to\ndisable a Job that is in any state other than active, disabling, or disabled,\nthe request fails with status code 409.",
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The ID of the Job to disable.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content",
            "in": "body",
            "description": "The options to use for disabling the Job.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchJobDisableContent"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Job disable": {
            "$ref": "./examples/JobDisable.json"
          }
        }
      }
    },
    "/jobs/{jobId}/enable": {
      "post": {
        "operationId": "Batch_EnableJob",
        "summary": "Enables the specified Job, allowing new Tasks to run.",
        "description": "When you call this API, the Batch service sets a disabled Job to the enabling\nstate. After the this operation is completed, the Job moves to the active\nstate, and scheduling of new Tasks under the Job resumes. The Batch service\ndoes not allow a Task to remain in the active state for more than 180 days.\nTherefore, if you enable a Job containing active Tasks which were added more\nthan 180 days ago, those Tasks will not run.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The ID of the Job to enable.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Job enable": {
            "$ref": "./examples/JobEnable.json"
          }
        }
      }
    },
    "/jobs/{jobId}/jobpreparationandreleasetaskstatus": {
      "get": {
        "operationId": "Batch_ListJobPreparationAndReleaseTaskStatus",
        "summary": "Lists the execution status of the Job Preparation and Job Release Task for the\nspecified Job across the Compute Nodes where the Job has run.",
        "description": "This API returns the Job Preparation and Job Release Task status on all Compute\nNodes that have run the Job Preparation or Job Release Task. This includes\nCompute Nodes which have since been removed from the Pool. If this API is\ninvoked on a Job which has no Job Preparation or Job Release Task, the Batch\nservice returns HTTP status code 409 (Conflict) with an error code of\nJobPreparationTaskNotSpecified.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "maxresults",
            "in": "query",
            "description": "The maximum number of items to return in the response. A maximum of 1000\napplications can be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1000,
            "minimum": 1,
            "maximum": 1000
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The ID of the Job.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData $filter clause. For more information on constructing this filter, see\nhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-job-preparation-and-release-status.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "An OData $select clause.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BatchJobPreparationAndReleaseTaskStatusListResult"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Job list preparation and release task status": {
            "$ref": "./examples/JobListPreparationAndReleaseTaskStatus.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink"
        }
      }
    },
    "/jobs/{jobId}/taskcounts": {
      "get": {
        "operationId": "Batch_GetJobTaskCounts",
        "summary": "Gets the Task counts for the specified Job.",
        "description": "Task counts provide a count of the Tasks by active, running or completed Task\nstate, and a count of Tasks which succeeded or failed. Tasks in the preparing\nstate are counted as running. Note that the numbers returned may not always be\nup to date. If you need exact task counts, use a list query.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The ID of the Job.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BatchTaskCountsResult"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Job get task counts": {
            "$ref": "./examples/JobGetTaskCounts.json"
          }
        }
      }
    },
    "/jobs/{jobId}/tasks": {
      "get": {
        "operationId": "Batch_ListTasks",
        "summary": "Lists all of the Tasks that are associated with the specified Job.",
        "description": "For multi-instance Tasks, information such as affinityId, executionInfo and\nnodeInfo refer to the primary Task. Use the list subtasks API to retrieve\ninformation about subtasks.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "maxresults",
            "in": "query",
            "description": "The maximum number of items to return in the response. A maximum of 1000\napplications can be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1000,
            "minimum": 1,
            "maximum": 1000
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The ID of the Job.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData $filter clause. For more information on constructing this filter, see\nhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-tasks.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "An OData $select clause.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "An OData $expand clause.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BatchTaskListResult"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Task list": {
            "$ref": "./examples/TaskList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink"
        }
      },
      "post": {
        "operationId": "Batch_CreateTask",
        "summary": "Creates a Task to the specified Job.",
        "description": "The maximum lifetime of a Task from addition to completion is 180 days. If a\nTask has not completed within 180 days of being added it will be terminated by\nthe Batch service and left in whatever state it was in at that time.",
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The ID of the Job to which the Task is to be created.",
            "required": true,
            "type": "string"
          },
          {
            "name": "task",
            "in": "body",
            "description": "The Task to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchTaskCreateContent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Creates a basic task": {
            "$ref": "./examples/TaskCreate_Basic.json"
          },
          "Creates a task with container settings": {
            "$ref": "./examples/TaskCreate_ContainerSettings.json"
          },
          "Creates a task with exit conditions": {
            "$ref": "./examples/TaskCreate_ExitConditions.json"
          },
          "Creates a task with extra slot requirement": {
            "$ref": "./examples/TaskCreate_RequiredSlots.json"
          }
        }
      }
    },
    "/jobs/{jobId}/tasks/{taskId}": {
      "get": {
        "operationId": "Batch_GetTask",
        "summary": "Gets information about the specified Task.",
        "description": "For multi-instance Tasks, information such as affinityId, executionInfo and\nnodeInfo refer to the primary Task. Use the list subtasks API to retrieve\ninformation about subtasks.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The ID of the Job that contains the Task.",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "The ID of the Task to get information about.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "An OData $select clause.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "An OData $expand clause.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BatchTask"
            },
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Task get": {
            "$ref": "./examples/TaskGet.json"
          }
        }
      },
      "put": {
        "operationId": "Batch_ReplaceTask",
        "description": "Updates the properties of the specified Task.",
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The ID of the Job containing the Task.",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "The ID of the Task to update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "task",
            "in": "body",
            "description": "The Task to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchTask"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Task update": {
            "$ref": "./examples/TaskUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "Batch_DeleteTask",
        "summary": "Deletes a Task from the specified Job.",
        "description": "When a Task is deleted, all of the files in its directory on the Compute Node\nwhere it ran are also deleted (regardless of the retention time). For\nmulti-instance Tasks, the delete Task operation applies synchronously to the\nprimary task; subtasks and their files are then deleted asynchronously in the\nbackground.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The ID of the Job from which to delete the Task.",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "The ID of the Task to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Task delete": {
            "$ref": "./examples/TaskDelete.json"
          }
        }
      }
    },
    "/jobs/{jobId}/tasks/{taskId}/files": {
      "get": {
        "operationId": "Batch_ListTaskFiles",
        "summary": "Lists the files in a Task's directory on its Compute Node.",
        "description": "Lists the files in a Task's directory on its Compute Node.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "maxresults",
            "in": "query",
            "description": "The maximum number of items to return in the response. A maximum of 1000\napplications can be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1000,
            "minimum": 1,
            "maximum": 1000
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The ID of the Job that contains the Task.",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "The ID of the Task whose files you want to list.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData $filter clause. For more information on constructing this filter, see\nhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-task-files.",
            "required": false,
            "type": "string"
          },
          {
            "name": "recursive",
            "in": "query",
            "description": "Whether to list children of the Task directory. This parameter can be used in\ncombination with the filter parameter to list specific type of files.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BatchNodeFileListResult"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "File list from task": {
            "$ref": "./examples/FileListFromTask.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink"
        }
      }
    },
    "/jobs/{jobId}/tasks/{taskId}/files/{filePath}": {
      "get": {
        "operationId": "Batch_GetTaskFile",
        "description": "Returns the content of the specified Task file.",
        "produces": [
          "application/octet-stream",
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The ID of the Job that contains the Task.",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "The ID of the Task whose file you want to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filePath",
            "in": "path",
            "description": "The path to the Task file that you want to get the content of.",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "ocp-range",
            "in": "header",
            "description": "The byte range to be retrieved. The default is to retrieve the entire file. The\nformat is bytes=startRange-endRange.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "file"
            },
            "headers": {
              "Content-Length": {
                "type": "integer",
                "format": "int64",
                "description": "The length of the file."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "ocp-batch-file-isdirectory": {
                "type": "boolean",
                "description": "Whether the object represents a directory."
              },
              "ocp-batch-file-mode": {
                "type": "string",
                "description": "The file mode attribute in octal format."
              },
              "ocp-batch-file-url": {
                "type": "string",
                "description": "The URL of the file."
              },
              "ocp-creation-time": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The file creation time."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Get File From Task": {
            "$ref": "./examples/FileGetFromTask.json"
          }
        }
      },
      "delete": {
        "operationId": "Batch_DeleteTaskFile",
        "summary": "Deletes the specified Task file from the Compute Node where the Task ran.",
        "description": "Deletes the specified Task file from the Compute Node where the Task ran.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The ID of the Job that contains the Task.",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "The ID of the Task whose file you want to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filePath",
            "in": "path",
            "description": "The path to the Task file that you want to get the content of.",
            "required": true,
            "type": "string"
          },
          {
            "name": "recursive",
            "in": "query",
            "description": "Whether to delete children of a directory. If the filePath parameter represents\na directory instead of a file, you can set recursive to true to delete the\ndirectory and all of the files and subdirectories in it. If recursive is false\nthen the directory must be empty or deletion will fail.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "File delete from task": {
            "$ref": "./examples/FileDeleteFromTask.json"
          }
        }
      },
      "head": {
        "operationId": "Batch_GetTaskFileProperties",
        "description": "Gets the properties of the specified Task file.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The ID of the Job that contains the Task.",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "The ID of the Task whose file you want to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filePath",
            "in": "path",
            "description": "The path to the Task file that you want to get the content of.",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "Content-Length": {
                "type": "integer",
                "format": "int64",
                "description": "The length of the file."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "ocp-batch-file-isdirectory": {
                "type": "boolean",
                "description": "Whether the object represents a directory."
              },
              "ocp-batch-file-mode": {
                "type": "string",
                "description": "The file mode attribute in octal format."
              },
              "ocp-batch-file-url": {
                "type": "string",
                "description": "The URL of the file."
              },
              "ocp-creation-time": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The file creation time."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "File get properties from task": {
            "$ref": "./examples/FileGetPropertiesFromTask.json"
          }
        }
      }
    },
    "/jobs/{jobId}/tasks/{taskId}/reactivate": {
      "post": {
        "operationId": "Batch_ReactivateTask",
        "summary": "Reactivates a Task, allowing it to run again even if its retry count has been\nexhausted.",
        "description": "Reactivation makes a Task eligible to be retried again up to its maximum retry\ncount. The Task's state is changed to active. As the Task is no longer in the\ncompleted state, any previous exit code or failure information is no longer\navailable after reactivation. Each time a Task is reactivated, its retry count\nis reset to 0. Reactivation will fail for Tasks that are not completed or that\npreviously completed successfully (with an exit code of 0). Additionally, it\nwill fail if the Job has completed (or is terminating or deleting).",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The ID of the Job containing the Task.",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "The ID of the Task to reactivate.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. ",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Task reactivate": {
            "$ref": "./examples/TaskReactivate.json"
          }
        }
      }
    },
    "/jobs/{jobId}/tasks/{taskId}/subtasksinfo": {
      "get": {
        "operationId": "Batch_ListSubTasks",
        "summary": "Lists all of the subtasks that are associated with the specified multi-instance\nTask.",
        "description": "If the Task is not a multi-instance Task then this returns an empty collection.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The ID of the Job.",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "The ID of the Task.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "An OData $select clause.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BatchTaskListSubtasksResult"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Task list subtasks": {
            "$ref": "./examples/TaskListSubtasks.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink"
        }
      }
    },
    "/jobs/{jobId}/tasks/{taskId}/terminate": {
      "post": {
        "operationId": "Batch_TerminateTask",
        "summary": "Terminates the specified Task.",
        "description": "When the Task has been terminated, it moves to the completed state. For\nmulti-instance Tasks, the terminate Task operation applies synchronously to the\nprimary task; subtasks are then terminated asynchronously in the background.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The ID of the Job containing the Task.",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "The ID of the Task to terminate.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. ",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Task terminate": {
            "$ref": "./examples/TaskTerminate.json"
          }
        }
      }
    },
    "/jobs/{jobId}/terminate": {
      "post": {
        "operationId": "Batch_TerminateJob",
        "summary": "Terminates the specified Job, marking it as completed.",
        "description": "When a Terminate Job request is received, the Batch service sets the Job to the\nterminating state. The Batch service then terminates any running Tasks\nassociated with the Job and runs any required Job release Tasks. Then the Job\nmoves into the completed state. If there are any Tasks in the Job in the active\nstate, they will remain in the active state. Once a Job is terminated, new\nTasks cannot be added and any remaining active Tasks will not be scheduled.",
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The ID of the Job to terminate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The options to use for terminating the Job.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BatchJobTerminateContent"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Job terminate": {
            "$ref": "./examples/JobTerminate.json"
          }
        }
      }
    },
    "/jobschedules": {
      "get": {
        "operationId": "Batch_ListJobSchedules",
        "summary": "Lists all of the Job Schedules in the specified Account.",
        "description": "Lists all of the Job Schedules in the specified Account.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "maxresults",
            "in": "query",
            "description": "The maximum number of items to return in the response. A maximum of 1000\napplications can be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1000,
            "minimum": 1,
            "maximum": 1000
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData $filter clause. For more information on constructing this filter, see\nhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-job-schedules.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "An OData $select clause.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "An OData $expand clause.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BatchJobScheduleListResult"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "JobSchedule list": {
            "$ref": "./examples/JobScheduleList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink"
        }
      },
      "post": {
        "operationId": "Batch_CreateJobSchedule",
        "summary": "Creates a Job Schedule to the specified Account.",
        "description": "Creates a Job Schedule to the specified Account.",
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "jobSchedule",
            "in": "body",
            "description": "The Job Schedule to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchJobScheduleCreateContent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Creates a basic JobSchedule": {
            "$ref": "./examples/JobScheduleCreate_Basic.json"
          },
          "Creates a complex JobScheduleAdd": {
            "$ref": "./examples/JobScheduleCreate_Complex.json"
          }
        }
      }
    },
    "/jobschedules/{jobScheduleId}": {
      "get": {
        "operationId": "Batch_GetJobSchedule",
        "description": "Gets information about the specified Job Schedule.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "jobScheduleId",
            "in": "path",
            "description": "The ID of the Job Schedule to get.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "An OData $select clause.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "An OData $expand clause.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BatchJobSchedule"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "JobSchedule get": {
            "$ref": "./examples/JobScheduleGet.json"
          }
        }
      },
      "put": {
        "operationId": "Batch_ReplaceJobSchedule",
        "summary": "Updates the properties of the specified Job Schedule.",
        "description": "This fully replaces all the updatable properties of the Job Schedule. For\nexample, if the schedule property is not specified with this request, then the\nBatch service will remove the existing schedule. Changes to a Job Schedule only\nimpact Jobs created by the schedule after the update has taken place; currently\nrunning Jobs are unaffected.",
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "jobScheduleId",
            "in": "path",
            "description": "The ID of the Job Schedule to update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobSchedule",
            "in": "body",
            "description": "A Job Schedule with updated properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchJobSchedule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "JobSchedule update": {
            "$ref": "./examples/JobScheduleUpdate.json"
          }
        }
      },
      "patch": {
        "operationId": "Batch_UpdateJobSchedule",
        "summary": "Updates the properties of the specified Job Schedule.",
        "description": "This replaces only the Job Schedule properties specified in the request. For\nexample, if the schedule property is not specified with this request, then the\nBatch service will keep the existing schedule. Changes to a Job Schedule only\nimpact Jobs created by the schedule after the update has taken place; currently\nrunning Jobs are unaffected.",
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "jobScheduleId",
            "in": "path",
            "description": "The ID of the Job Schedule to update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobSchedule",
            "in": "body",
            "description": "The options to use for updating the Job Schedule.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchJobScheduleUpdateContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "JobSchedule patch": {
            "$ref": "./examples/JobSchedulePatch.json"
          }
        }
      },
      "delete": {
        "operationId": "Batch_DeleteJobSchedule",
        "summary": "Deletes a Job Schedule from the specified Account.",
        "description": "When you delete a Job Schedule, this also deletes all Jobs and Tasks under that\nschedule. When Tasks are deleted, all the files in their working directories on\nthe Compute Nodes are also deleted (the retention period is ignored). The Job\nSchedule statistics are no longer accessible once the Job Schedule is deleted,\nthough they are still counted towards Account lifetime statistics.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "jobScheduleId",
            "in": "path",
            "description": "The ID of the Job Schedule to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "JobSchedule delete": {
            "$ref": "./examples/JobScheduleDelete.json"
          }
        }
      },
      "head": {
        "operationId": "Batch_JobScheduleExists",
        "summary": "Checks the specified Job Schedule exists.",
        "description": "Checks the specified Job Schedule exists.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "jobScheduleId",
            "in": "path",
            "description": "The ID of the Job Schedule which you want to check.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Check Job Schedule Exists": {
            "$ref": "./examples/JobScheduleExists.json"
          }
        }
      }
    },
    "/jobschedules/{jobScheduleId}/disable": {
      "post": {
        "operationId": "Batch_DisableJobSchedule",
        "summary": "Disables a Job Schedule.",
        "description": "No new Jobs will be created until the Job Schedule is enabled again.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "jobScheduleId",
            "in": "path",
            "description": "The ID of the Job Schedule to disable.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. ",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "JobSchedule disable": {
            "$ref": "./examples/JobScheduleDisable.json"
          }
        }
      }
    },
    "/jobschedules/{jobScheduleId}/enable": {
      "post": {
        "operationId": "Batch_EnableJobSchedule",
        "summary": "Enables a Job Schedule.",
        "description": "Enables a Job Schedule.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "jobScheduleId",
            "in": "path",
            "description": "The ID of the Job Schedule to enable.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. ",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "JobSchedule enable": {
            "$ref": "./examples/JobScheduleEnable.json"
          }
        }
      }
    },
    "/jobschedules/{jobScheduleId}/jobs": {
      "get": {
        "operationId": "Batch_ListJobsFromSchedule",
        "summary": "Lists the Jobs that have been created under the specified Job Schedule.",
        "description": "Lists the Jobs that have been created under the specified Job Schedule.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "maxresults",
            "in": "query",
            "description": "The maximum number of items to return in the response. A maximum of 1000\napplications can be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1000,
            "minimum": 1,
            "maximum": 1000
          },
          {
            "name": "jobScheduleId",
            "in": "path",
            "description": "The ID of the Job Schedule from which you want to get a list of Jobs.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData $filter clause. For more information on constructing this filter, see\nhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-jobs-in-a-job-schedule.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "An OData $select clause.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "An OData $expand clause.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BatchJobListResult"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "List Job Under Job Schedule": {
            "$ref": "./examples/JobListFromJobSchedule.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink"
        }
      }
    },
    "/jobschedules/{jobScheduleId}/terminate": {
      "post": {
        "operationId": "Batch_TerminateJobSchedule",
        "summary": "Terminates a Job Schedule.",
        "description": "Terminates a Job Schedule.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "jobScheduleId",
            "in": "path",
            "description": "The ID of the Job Schedule to terminates.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "JobSchedule terminate": {
            "$ref": "./examples/JobScheduleTerminate.json"
          }
        }
      }
    },
    "/nodecounts": {
      "get": {
        "operationId": "Batch_ListPoolNodeCounts",
        "description": "Gets the number of Compute Nodes in each state, grouped by Pool. Note that the\nnumbers returned may not always be up to date. If you need exact node counts,\nuse a list query.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "maxresults",
            "in": "query",
            "description": "The maximum number of items to return in the response. A maximum of 1000\napplications can be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1000,
            "minimum": 1,
            "maximum": 1000
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData $filter clause. For more information on constructing this filter, see\nhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-support-images.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BatchPoolNodeCountsListResult"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "NodeCountsPayload": {
            "$ref": "./examples/AccountListPoolNodeCounts.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink"
        }
      }
    },
    "/pools": {
      "get": {
        "operationId": "Batch_ListPools",
        "summary": "Lists all of the Pools in the specified Account.",
        "description": "Lists all of the Pools in the specified Account.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "maxresults",
            "in": "query",
            "description": "The maximum number of items to return in the response. A maximum of 1000\napplications can be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1000,
            "minimum": 1,
            "maximum": 1000
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData $filter clause. For more information on constructing this filter, see\nhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-pools.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "An OData $select clause.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "An OData $expand clause.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BatchPoolListResult"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Pool list": {
            "$ref": "./examples/PoolList_Basic.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink"
        }
      },
      "post": {
        "operationId": "Batch_CreatePool",
        "summary": "Creates a Pool to the specified Account.",
        "description": "When naming Pools, avoid including sensitive information such as user names or\nsecret project names. This information may appear in telemetry logs accessible\nto Microsoft Support engineers.",
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "pool",
            "in": "body",
            "description": "The Pool to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchPoolCreateContent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Creates a VirtualMachineConfiguration pool": {
            "$ref": "./examples/PoolCreate_VirtualMachineConfiguration.json"
          },
          "Creates a VirtualMachineConfiguration pool with OS disk": {
            "$ref": "./examples/PoolCreate_OSDisk.json"
          },
          "Creates a VirtualMachineConfiguration pool with ServiceArtifactReference": {
            "$ref": "./examples/PoolCreate_VirtualMachineConfigurationWithServiceArtifactReference.json"
          },
          "Creates a VirtualMachineConfiguration pool with containers": {
            "$ref": "./examples/PoolCreate_VirtualMachineConfigurationWithContainers.json"
          },
          "Creates a VirtualMachineConfiguration pool with extensions": {
            "$ref": "./examples/PoolCreate_VirtualMachineConfigurationWithExtensions.json"
          },
          "Creates a pool with SecurityProfile": {
            "$ref": "./examples/PoolCreate_SecurityProfile.json"
          },
          "Creates a pool with accelerated networking": {
            "$ref": "./examples/PoolCreate_AcceleratedNetworking.json"
          },
          "Creates a pool with mount drive specified": {
            "$ref": "./examples/PoolCreate_MountConfiguration.json"
          },
          "Creates a simple pool with resourceTags": {
            "$ref": "./examples/PoolCreate_ResourceTags.json"
          }
        }
      }
    },
    "/pools/{poolId}": {
      "get": {
        "operationId": "Batch_GetPool",
        "description": "Gets information about the specified Pool.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "poolId",
            "in": "path",
            "description": "The ID of the Pool to get.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "An OData $select clause.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "An OData $expand clause.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BatchPool"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Add a VirtualMachineConfiguration pool with OS disk": {
            "$ref": "./examples/PoolGet_VirtualMachineConfigurationWithOSDisk.json"
          },
          "Get a VirtualMachineConfiguration pool with SecurityProfile": {
            "$ref": "./examples/PoolGet_SecurityProfile.json"
          },
          "Get a VirtualMachineConfiguration pool with ServiceArtifactReference": {
            "$ref": "./examples/PoolGet_VirtualMachineConfigurationWithServiceArtifactReference.json"
          },
          "Get a VirtualMachineConfiguration pool with extensions": {
            "$ref": "./examples/PoolGet_VirtualMachineConfigurationWithExtensions.json"
          },
          "Get a pool with AcceleratedNetworking": {
            "$ref": "./examples/PoolGet_AcceleratedNetworking.json"
          },
          "Pool get": {
            "$ref": "./examples/PoolGet_Basic.json"
          }
        }
      },
      "patch": {
        "operationId": "Batch_UpdatePool",
        "summary": "Updates the properties of the specified Pool.",
        "description": "This only replaces the Pool properties specified in the request. For example,\nif the Pool has a StartTask associated with it, and a request does not specify\na StartTask element, then the Pool keeps the existing StartTask.",
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "poolId",
            "in": "path",
            "description": "The ID of the Pool to get.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pool",
            "in": "body",
            "description": "The pool properties to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchPoolUpdateContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Patch the Pool": {
            "$ref": "./examples/PoolPatch.json"
          }
        }
      },
      "delete": {
        "operationId": "Batch_DeletePool",
        "summary": "Deletes a Pool from the specified Account.",
        "description": "When you request that a Pool be deleted, the following actions occur: the Pool\nstate is set to deleting; any ongoing resize operation on the Pool are stopped;\nthe Batch service starts resizing the Pool to zero Compute Nodes; any Tasks\nrunning on existing Compute Nodes are terminated and requeued (as if a resize\nPool operation had been requested with the default requeue option); finally,\nthe Pool is removed from the system. Because running Tasks are requeued, the\nuser can rerun these Tasks by updating their Job to target a different Pool.\nThe Tasks can then run on the new Pool. If you want to override the requeue\nbehavior, then you should call resize Pool explicitly to shrink the Pool to\nzero size before deleting the Pool. If you call an Update, Patch or Delete API\non a Pool in the deleting state, it will fail with HTTP status code 409 with\nerror code PoolBeingDeleted.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "poolId",
            "in": "path",
            "description": "The ID of the Pool to get.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Pool delete": {
            "$ref": "./examples/PoolDelete.json"
          }
        }
      },
      "head": {
        "operationId": "Batch_PoolExists",
        "description": "Gets basic properties of a Pool.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "poolId",
            "in": "path",
            "description": "The ID of the Pool to get.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Check Pool Exists": {
            "$ref": "./examples/PoolExists.json"
          }
        }
      }
    },
    "/pools/{poolId}/disableautoscale": {
      "post": {
        "operationId": "Batch_DisablePoolAutoScale",
        "summary": "Disables automatic scaling for a Pool.",
        "description": "Disables automatic scaling for a Pool.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "poolId",
            "in": "path",
            "description": "The ID of the Pool on which to disable automatic scaling.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Disable pool autoscale": {
            "$ref": "./examples/PoolDisableAutoScale.json"
          }
        }
      }
    },
    "/pools/{poolId}/enableautoscale": {
      "post": {
        "operationId": "Batch_EnablePoolAutoScale",
        "summary": "Enables automatic scaling for a Pool.",
        "description": "You cannot enable automatic scaling on a Pool if a resize operation is in\nprogress on the Pool. If automatic scaling of the Pool is currently disabled,\nyou must specify a valid autoscale formula as part of the request. If automatic\nscaling of the Pool is already enabled, you may specify a new autoscale formula\nand/or a new evaluation interval. You cannot call this API for the same Pool\nmore than once every 30 seconds.",
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "poolId",
            "in": "path",
            "description": "The ID of the Pool to get.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content",
            "in": "body",
            "description": "The options to use for enabling automatic scaling.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchPoolEnableAutoScaleContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Pool enable autoscale": {
            "$ref": "./examples/PoolEnableAutoscale.json"
          }
        }
      }
    },
    "/pools/{poolId}/evaluateautoscale": {
      "post": {
        "operationId": "Batch_EvaluatePoolAutoScale",
        "summary": "Gets the result of evaluating an automatic scaling formula on the Pool.",
        "description": "This API is primarily for validating an autoscale formula, as it simply returns\nthe result without applying the formula to the Pool. The Pool must have auto\nscaling enabled in order to evaluate a formula.",
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "poolId",
            "in": "path",
            "description": "The ID of the Pool on which to evaluate the automatic scaling formula.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content",
            "in": "body",
            "description": "The options to use for evaluating the automatic scaling formula.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchPoolEvaluateAutoScaleContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AutoScaleRun"
            },
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Pool evaluate autoscale": {
            "$ref": "./examples/PoolEvaluateAutoscale.json"
          }
        }
      }
    },
    "/pools/{poolId}/nodes": {
      "get": {
        "operationId": "Batch_ListNodes",
        "summary": "Lists the Compute Nodes in the specified Pool.",
        "description": "Lists the Compute Nodes in the specified Pool.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "maxresults",
            "in": "query",
            "description": "The maximum number of items to return in the response. A maximum of 1000\napplications can be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1000,
            "minimum": 1,
            "maximum": 1000
          },
          {
            "name": "poolId",
            "in": "path",
            "description": "The ID of the Pool from which you want to list Compute Nodes.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData $filter clause. For more information on constructing this filter, see\nhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-nodes-in-a-pool.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "An OData $select clause.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BatchNodeListResult"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Node list": {
            "$ref": "./examples/NodeList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink"
        }
      }
    },
    "/pools/{poolId}/nodes/{nodeId}": {
      "get": {
        "operationId": "Batch_GetNode",
        "summary": "Gets information about the specified Compute Node.",
        "description": "Gets information about the specified Compute Node.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "poolId",
            "in": "path",
            "description": "The ID of the Pool that contains the Compute Node.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "The ID of the Compute Node that you want to get information about.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "An OData $select clause.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BatchNode"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Node get": {
            "$ref": "./examples/NodeGet_Basic.json"
          }
        }
      }
    },
    "/pools/{poolId}/nodes/{nodeId}/disablescheduling": {
      "post": {
        "operationId": "Batch_DisableNodeScheduling",
        "summary": "Disables Task scheduling on the specified Compute Node.",
        "description": "You can disable Task scheduling on a Compute Node only if its current\nscheduling state is enabled.",
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "poolId",
            "in": "path",
            "description": "The ID of the Pool that contains the Compute Node.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "The ID of the Compute Node on which you want to disable Task scheduling.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The options to use for disabling scheduling on the Compute Node.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BatchNodeDisableSchedulingContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Node disable scheduling": {
            "$ref": "./examples/NodeDisableScheduling.json"
          }
        }
      }
    },
    "/pools/{poolId}/nodes/{nodeId}/enablescheduling": {
      "post": {
        "operationId": "Batch_EnableNodeScheduling",
        "summary": "Enables Task scheduling on the specified Compute Node.",
        "description": "You can enable Task scheduling on a Compute Node only if its current scheduling\nstate is disabled",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "poolId",
            "in": "path",
            "description": "The ID of the Pool that contains the Compute Node.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "The ID of the Compute Node on which you want to enable Task scheduling.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Node enable scheduling": {
            "$ref": "./examples/NodeEnableScheduling.json"
          }
        }
      }
    },
    "/pools/{poolId}/nodes/{nodeId}/extensions": {
      "get": {
        "operationId": "Batch_ListNodeExtensions",
        "summary": "Lists the Compute Nodes Extensions in the specified Pool.",
        "description": "Lists the Compute Nodes Extensions in the specified Pool.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "maxresults",
            "in": "query",
            "description": "The maximum number of items to return in the response. A maximum of 1000\napplications can be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1000,
            "minimum": 1,
            "maximum": 1000
          },
          {
            "name": "poolId",
            "in": "path",
            "description": "The ID of the Pool that contains Compute Node.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "The ID of the Compute Node that you want to list extensions.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "An OData $select clause.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BatchNodeVMExtensionListResult"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "List compute node extensions": {
            "$ref": "./examples/BatchNodeExtensionList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink"
        }
      }
    },
    "/pools/{poolId}/nodes/{nodeId}/extensions/{extensionName}": {
      "get": {
        "operationId": "Batch_GetNodeExtension",
        "summary": "Gets information about the specified Compute Node Extension.",
        "description": "Gets information about the specified Compute Node Extension.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "poolId",
            "in": "path",
            "description": "The ID of the Pool that contains the Compute Node.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "The ID of the Compute Node that contains the extensions.",
            "required": true,
            "type": "string"
          },
          {
            "name": "extensionName",
            "in": "path",
            "description": "The name of the Compute Node Extension that you want to get information about.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "An OData $select clause.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BatchNodeVMExtension"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Get batch node extension": {
            "$ref": "./examples/BatchNodeExtensionGet.json"
          }
        }
      }
    },
    "/pools/{poolId}/nodes/{nodeId}/files": {
      "get": {
        "operationId": "Batch_ListNodeFiles",
        "summary": "Lists all of the files in Task directories on the specified Compute Node.",
        "description": "Lists all of the files in Task directories on the specified Compute Node.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "maxresults",
            "in": "query",
            "description": "The maximum number of items to return in the response. A maximum of 1000\napplications can be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1000,
            "minimum": 1,
            "maximum": 1000
          },
          {
            "name": "poolId",
            "in": "path",
            "description": "The ID of the Pool that contains the Compute Node.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "The ID of the Compute Node whose files you want to list.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData $filter clause. For more information on constructing this filter, see\nhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-compute-node-files.",
            "required": false,
            "type": "string"
          },
          {
            "name": "recursive",
            "in": "query",
            "description": "Whether to list children of a directory.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BatchNodeFileListResult"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "File list from node": {
            "$ref": "./examples/FileListFromNode.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink"
        }
      }
    },
    "/pools/{poolId}/nodes/{nodeId}/files/{filePath}": {
      "get": {
        "operationId": "Batch_GetNodeFile",
        "description": "Returns the content of the specified Compute Node file.",
        "produces": [
          "application/octet-stream",
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "poolId",
            "in": "path",
            "description": "The ID of the Pool that contains the Compute Node.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "The ID of the Compute Node.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filePath",
            "in": "path",
            "description": "The path to the file or directory.",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "ocp-range",
            "in": "header",
            "description": "The byte range to be retrieved. The default is to retrieve the entire file. The\nformat is bytes=startRange-endRange.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "file"
            },
            "headers": {
              "Content-Length": {
                "type": "integer",
                "format": "int64",
                "description": "The length of the file."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "ocp-batch-file-isdirectory": {
                "type": "boolean",
                "description": "Whether the object represents a directory."
              },
              "ocp-batch-file-mode": {
                "type": "string",
                "description": "The file mode attribute in octal format."
              },
              "ocp-batch-file-url": {
                "type": "string",
                "description": "The URL of the file."
              },
              "ocp-creation-time": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The file creation time."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Get File From Compute Node": {
            "$ref": "./examples/FileGetFromNode.json"
          }
        }
      },
      "delete": {
        "operationId": "Batch_DeleteNodeFile",
        "summary": "Deletes the specified file from the Compute Node.",
        "description": "Deletes the specified file from the Compute Node.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "poolId",
            "in": "path",
            "description": "The ID of the Pool that contains the Compute Node.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "The ID of the Compute Node.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filePath",
            "in": "path",
            "description": "The path to the file or directory.",
            "required": true,
            "type": "string"
          },
          {
            "name": "recursive",
            "in": "query",
            "description": "Whether to delete children of a directory. If the filePath parameter represents\na directory instead of a file, you can set recursive to true to delete the\ndirectory and all of the files and subdirectories in it. If recursive is false\nthen the directory must be empty or deletion will fail.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "File delete from node": {
            "$ref": "./examples/FileDeleteFromNode.json"
          }
        }
      },
      "head": {
        "operationId": "Batch_GetNodeFileProperties",
        "description": "Gets the properties of the specified Compute Node file.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "poolId",
            "in": "path",
            "description": "The ID of the Pool that contains the Compute Node.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "The ID of the Compute Node.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filePath",
            "in": "path",
            "description": "The path to the file or directory.",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "Content-Length": {
                "type": "integer",
                "format": "int64",
                "description": "The length of the file."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "ocp-batch-file-isdirectory": {
                "type": "boolean",
                "description": "Whether the object represents a directory."
              },
              "ocp-batch-file-mode": {
                "type": "string",
                "description": "The file mode attribute in octal format."
              },
              "ocp-batch-file-url": {
                "type": "string",
                "description": "The URL of the file."
              },
              "ocp-creation-time": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The file creation time."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "File get properties from node": {
            "$ref": "./examples/FileGetPropertiesFromNode.json"
          }
        }
      }
    },
    "/pools/{poolId}/nodes/{nodeId}/reboot": {
      "post": {
        "operationId": "Batch_RebootNode",
        "summary": "Restarts the specified Compute Node.",
        "description": "You can restart a Compute Node only if it is in an idle or running state.",
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "poolId",
            "in": "path",
            "description": "The ID of the Pool that contains the Compute Node.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "The ID of the Compute Node that you want to restart.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The options to use for rebooting the Compute Node.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BatchNodeRebootContent"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Node reboot": {
            "$ref": "./examples/NodeReboot.json"
          }
        }
      }
    },
    "/pools/{poolId}/nodes/{nodeId}/remoteloginsettings": {
      "get": {
        "operationId": "Batch_GetNodeRemoteLoginSettings",
        "summary": "Gets the settings required for remote login to a Compute Node.",
        "description": "Before you can remotely login to a Compute Node using the remote login\nsettings, you must create a user Account on the Compute Node. This API can be\ninvoked only on Pools created with the virtual machine configuration property.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "poolId",
            "in": "path",
            "description": "The ID of the Pool that contains the Compute Node.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "The ID of the Compute Node for which to obtain the remote login settings.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BatchNodeRemoteLoginSettings"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Node get remote login settings": {
            "$ref": "./examples/NodeGetRemoteLoginSettings.json"
          }
        }
      }
    },
    "/pools/{poolId}/nodes/{nodeId}/uploadbatchservicelogs": {
      "post": {
        "operationId": "Batch_UploadNodeLogs",
        "summary": "Upload Azure Batch service log files from the specified Compute Node to Azure\nBlob Storage.",
        "description": "This is for gathering Azure Batch service log files in an automated fashion\nfrom Compute Nodes if you are experiencing an error and wish to escalate to\nAzure support. The Azure Batch service log files should be shared with Azure\nsupport to aid in debugging issues with the Batch service.",
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "poolId",
            "in": "path",
            "description": "The ID of the Pool that contains the Compute Node.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "The ID of the Compute Node for which you want to get the Remote Desktop\nProtocol file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content",
            "in": "body",
            "description": "The Azure Batch service log files upload options.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UploadBatchServiceLogsContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/UploadBatchServiceLogsResult"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Upload BatchService Logs": {
            "$ref": "./examples/NodeUploadBatchServiceLogs.json"
          }
        }
      }
    },
    "/pools/{poolId}/nodes/{nodeId}/users": {
      "post": {
        "operationId": "Batch_CreateNodeUser",
        "summary": "Adds a user Account to the specified Compute Node.",
        "description": "You can add a user Account to a Compute Node only when it is in the idle or\nrunning state.",
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "poolId",
            "in": "path",
            "description": "The ID of the Pool that contains the Compute Node.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "The ID of the machine on which you want to create a user Account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "description": "The options to use for creating the user.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchNodeUserCreateContent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Node create user": {
            "$ref": "./examples/NodeCreateUser.json"
          }
        }
      }
    },
    "/pools/{poolId}/nodes/{nodeId}/users/{userName}": {
      "put": {
        "operationId": "Batch_ReplaceNodeUser",
        "summary": "Updates the password and expiration time of a user Account on the specified Compute Node.",
        "description": "This operation replaces of all the updatable properties of the Account. For\nexample, if the expiryTime element is not specified, the current value is\nreplaced with the default value, not left unmodified. You can update a user\nAccount on a Compute Node only when it is in the idle or running state.",
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "poolId",
            "in": "path",
            "description": "The ID of the Pool that contains the Compute Node.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "The ID of the machine on which you want to update a user Account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user Account to update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content",
            "in": "body",
            "description": "The options to use for updating the user.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchNodeUserUpdateContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Node update user": {
            "$ref": "./examples/NodeUpdateUser.json"
          }
        }
      },
      "delete": {
        "operationId": "Batch_DeleteNodeUser",
        "summary": "Deletes a user Account from the specified Compute Node.",
        "description": "You can delete a user Account to a Compute Node only when it is in the idle or\nrunning state.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "poolId",
            "in": "path",
            "description": "The ID of the Pool that contains the Compute Node.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "The ID of the machine on which you want to delete a user Account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user Account to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Node delete user": {
            "$ref": "./examples/NodeDeleteUser.json"
          }
        }
      }
    },
    "/pools/{poolId}/removenodes": {
      "post": {
        "operationId": "Batch_RemoveNodes",
        "summary": "Removes Compute Nodes from the specified Pool.",
        "description": "This operation can only run when the allocation state of the Pool is steady.\nWhen this operation runs, the allocation state changes from steady to resizing.\nEach request may remove up to 100 nodes.",
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "poolId",
            "in": "path",
            "description": "The ID of the Pool to get.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content",
            "in": "body",
            "description": "The options to use for removing the node.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchNodeRemoveContent"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Pool remove nodes": {
            "$ref": "./examples/PoolRemoveNodes.json"
          }
        }
      }
    },
    "/pools/{poolId}/resize": {
      "post": {
        "operationId": "Batch_ResizePool",
        "summary": "Changes the number of Compute Nodes that are assigned to a Pool.",
        "description": "You can only resize a Pool when its allocation state is steady. If the Pool is\nalready resizing, the request fails with status code 409. When you resize a\nPool, the Pool's allocation state changes from steady to resizing. You cannot\nresize Pools which are configured for automatic scaling. If you try to do this,\nthe Batch service returns an error 409. If you resize a Pool downwards, the\nBatch service chooses which Compute Nodes to remove. To remove specific Compute\nNodes, use the Pool remove Compute Nodes API instead.",
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "poolId",
            "in": "path",
            "description": "The ID of the Pool to get.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content",
            "in": "body",
            "description": "The options to use for resizing the pool.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchPoolResizeContent"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Pool resize": {
            "$ref": "./examples/PoolResize.json"
          }
        }
      }
    },
    "/pools/{poolId}/stopresize": {
      "post": {
        "operationId": "Batch_StopPoolResize",
        "summary": "Stops an ongoing resize operation on the Pool.",
        "description": "This does not restore the Pool to its previous state before the resize\noperation: it only stops any further changes being made, and the Pool maintains\nits current state. After stopping, the Pool stabilizes at the number of Compute\nNodes it was at when the stop operation was done. During the stop operation,\nthe Pool allocation state changes first to stopping and then to steady. A\nresize operation need not be an explicit resize Pool request; this API can also\nbe used to halt the initial sizing of the Pool when it is created.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifModifiedSince"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ifUnmodifiedSince"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "poolId",
            "in": "path",
            "description": "The ID of the Pool to get.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Pool stop resize": {
            "$ref": "./examples/PoolStopResize.json"
          }
        }
      }
    },
    "/pools/{poolId}/updateproperties": {
      "post": {
        "operationId": "Batch_ReplacePoolProperties",
        "summary": "Updates the properties of the specified Pool.",
        "description": "This fully replaces all the updatable properties of the Pool. For example, if\nthe Pool has a StartTask associated with it and if StartTask is not specified\nwith this request, then the Batch service will remove the existing StartTask.",
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "poolId",
            "in": "path",
            "description": "The ID of the Pool to update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pool",
            "in": "body",
            "description": "The options to use for replacing properties on the pool.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchPoolReplaceContent"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. ",
            "headers": {
              "DataServiceId": {
                "type": "string",
                "description": "The OData ID of the resource to which the request applied."
              },
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Pool update": {
            "$ref": "./examples/PoolUpdate.json"
          }
        }
      }
    },
    "/poolusagemetrics": {
      "get": {
        "operationId": "Batch_ListPoolUsageMetrics",
        "summary": "Lists the usage metrics, aggregated by Pool across individual time intervals,\nfor the specified Account.",
        "description": "If you do not specify a $filter clause including a poolId, the response\nincludes all Pools that existed in the Account in the time range of the\nreturned aggregation intervals. If you do not specify a $filter clause\nincluding a startTime or endTime these filters default to the start and end\ntimes of the last aggregation interval currently available; that is, only the\nlast aggregation interval is returned.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "maxresults",
            "in": "query",
            "description": "The maximum number of items to return in the response. A maximum of 1000\napplications can be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1000,
            "minimum": 1,
            "maximum": 1000
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "The earliest time from which to include metrics. This must be at least two and\na half hours before the current time. If not specified this defaults to the\nstart time of the last aggregation interval currently available.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endtime",
            "in": "query",
            "description": "The latest time from which to include metrics. This must be at least two hours\nbefore the current time. If not specified this defaults to the end time of the\nlast aggregation interval currently available.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData $filter clause. For more information on constructing this filter, see\nhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-account-usage-metrics.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BatchPoolListUsageMetricsResult"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Pool list usage metrics": {
            "$ref": "./examples/PoolListUsageMetrics.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink"
        }
      }
    },
    "/supportedimages": {
      "get": {
        "operationId": "Batch_ListSupportedImages",
        "summary": "Lists all Virtual Machine Images supported by the Azure Batch service.",
        "description": "Lists all Virtual Machine Images supported by the Azure Batch service.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "timeOut",
            "in": "query",
            "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the value is larger than 30, the default will be used instead.\".",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "client-request-id",
            "in": "header",
            "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "clientRequestId"
          },
          {
            "name": "return-client-request-id",
            "in": "header",
            "description": "Whether the server should return the client-request-id in the response.",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-ms-client-name": "returnClientRequestId"
          },
          {
            "name": "ocp-date",
            "in": "header",
            "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
            "required": false,
            "type": "string",
            "format": "date-time-rfc7231",
            "x-ms-client-name": "ocpdate"
          },
          {
            "name": "maxresults",
            "in": "query",
            "description": "The maximum number of items to return in the response. A maximum of 1000\napplications can be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1000,
            "minimum": 1,
            "maximum": 1000
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData $filter clause. For more information on constructing this filter, see\nhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-support-images.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BatchAccountListSupportedImagesResult"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc7231",
                "description": "The time at which the resource was last modified."
              },
              "client-request-id": {
                "type": "string",
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true."
              },
              "request-id": {
                "type": "string",
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Account list node agent skus": {
            "$ref": "./examples/AccountListSupportedImages.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink"
        }
      }
    }
  },
  "definitions": {
    "AccessScope": {
      "type": "string",
      "description": "AccessScope enums",
      "enum": [
        "job"
      ],
      "x-ms-enum": {
        "name": "AccessScope",
        "modelAsString": true,
        "values": [
          {
            "name": "Job",
            "value": "job",
            "description": "Grants access to perform all operations on the Job containing the Task."
          }
        ]
      }
    },
    "AffinityInfo": {
      "type": "object",
      "description": "A locality hint that can be used by the Batch service to select a Compute Node\non which to start a Task.",
      "properties": {
        "affinityId": {
          "type": "string",
          "description": "An opaque string representing the location of a Compute Node or a Task that has run previously. You can pass the affinityId of a Node to indicate that this Task needs to run on that Compute Node. Note that this is just a soft affinity. If the target Compute Node is busy or unavailable at the time the Task is scheduled, then the Task will be scheduled elsewhere."
        }
      },
      "required": [
        "affinityId"
      ]
    },
    "AllocationState": {
      "type": "string",
      "description": "AllocationState enums",
      "enum": [
        "steady",
        "resizing",
        "stopping"
      ],
      "x-ms-enum": {
        "name": "AllocationState",
        "modelAsString": true,
        "values": [
          {
            "name": "Steady",
            "value": "steady",
            "description": "The Pool is not resizing. There are no changes to the number of Compute Nodes in the Pool in progress. A Pool enters this state when it is created and when no operations are being performed on the Pool to change the number of Compute Nodes."
          },
          {
            "name": "Resizing",
            "value": "resizing",
            "description": "The Pool is resizing; that is, Compute Nodes are being added to or removed from the Pool."
          },
          {
            "name": "Stopping",
            "value": "stopping",
            "description": "The Pool was resizing, but the user has requested that the resize be stopped, but the stop request has not yet been completed."
          }
        ]
      }
    },
    "AuthenticationTokenSettings": {
      "type": "object",
      "description": "The settings for an authentication token that the Task can use to perform Batch\nservice operations.",
      "properties": {
        "access": {
          "type": "array",
          "description": "The Batch resources to which the token grants access. The authentication token grants access to a limited set of Batch service operations. Currently the only supported value for the access property is 'job', which grants access to all operations related to the Job which contains the Task.",
          "items": {
            "$ref": "#/definitions/AccessScope"
          }
        }
      }
    },
    "AutoScaleRun": {
      "type": "object",
      "description": "The results and errors from an execution of a Pool autoscale formula.",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the autoscale formula was last evaluated."
        },
        "results": {
          "type": "string",
          "description": "The final values of all variables used in the evaluation of the autoscale formula. Each variable value is returned in the form $variable=value, and variables are separated by semicolons."
        },
        "error": {
          "$ref": "#/definitions/AutoScaleRunError",
          "description": "Details of the error encountered evaluating the autoscale formula on the Pool, if the evaluation was unsuccessful."
        }
      },
      "required": [
        "timestamp"
      ]
    },
    "AutoScaleRunError": {
      "type": "object",
      "description": "An error that occurred when executing or evaluating a Pool autoscale formula.",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the autoscale error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the autoscale error, intended to be suitable for display in a user interface."
        },
        "values": {
          "type": "array",
          "description": "A list of additional error details related to the autoscale error.",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "AutoUserScope": {
      "type": "string",
      "description": "AutoUserScope enums",
      "enum": [
        "task",
        "pool"
      ],
      "x-ms-enum": {
        "name": "AutoUserScope",
        "modelAsString": true,
        "values": [
          {
            "name": "Task",
            "value": "task",
            "description": "Specifies that the service should create a new user for the Task."
          },
          {
            "name": "Pool",
            "value": "pool",
            "description": "Specifies that the Task runs as the common auto user Account which is created on every Compute Node in a Pool."
          }
        ]
      }
    },
    "AutoUserSpecification": {
      "type": "object",
      "description": "Specifies the options for the auto user that runs an Azure Batch Task.",
      "properties": {
        "scope": {
          "$ref": "#/definitions/AutoUserScope",
          "description": "The scope for the auto user. The default value is pool. If the pool is running Windows, a value of Task should be specified if stricter isolation between tasks is required, such as if the task mutates the registry in a way which could impact other tasks."
        },
        "elevationLevel": {
          "$ref": "#/definitions/ElevationLevel",
          "description": "The elevation level of the auto user. The default value is nonAdmin."
        }
      }
    },
    "AutomaticOsUpgradePolicy": {
      "type": "object",
      "description": "The configuration parameters used for performing automatic OS upgrade.",
      "properties": {
        "disableAutomaticRollback": {
          "type": "boolean",
          "description": "Whether OS image rollback feature should be disabled."
        },
        "enableAutomaticOSUpgrade": {
          "type": "boolean",
          "description": "Indicates whether OS upgrades should automatically be applied to scale set instances in a rolling fashion when a newer version of the OS image becomes available. <br /><br /> If this is set to true for Windows based pools, [WindowsConfiguration.enableAutomaticUpdates](https://learn.microsoft.com/en-us/rest/api/batchservice/pool/add?tabs=HTTP#windowsconfiguration) cannot be set to true.",
          "x-ms-client-name": "enableAutomaticOsUpgrade"
        },
        "useRollingUpgradePolicy": {
          "type": "boolean",
          "description": "Indicates whether rolling upgrade policy should be used during Auto OS Upgrade. Auto OS Upgrade will fallback to the default policy if no policy is defined on the VMSS."
        },
        "osRollingUpgradeDeferral": {
          "type": "boolean",
          "description": "Defer OS upgrades on the TVMs if they are running tasks."
        }
      }
    },
    "AzureBlobFileSystemConfiguration": {
      "type": "object",
      "description": "Information used to connect to an Azure Storage Container using Blobfuse.",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "The Azure Storage Account name."
        },
        "containerName": {
          "type": "string",
          "description": "The Azure Blob Storage Container name."
        },
        "accountKey": {
          "type": "string",
          "format": "password",
          "description": "The Azure Storage Account key. This property is mutually exclusive with both sasKey and identity; exactly one must be specified.",
          "x-ms-secret": true
        },
        "sasKey": {
          "type": "string",
          "format": "password",
          "description": "The Azure Storage SAS token. This property is mutually exclusive with both accountKey and identity; exactly one must be specified.",
          "x-ms-secret": true
        },
        "blobfuseOptions": {
          "type": "string",
          "description": "Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux."
        },
        "relativeMountPath": {
          "type": "string",
          "description": "The relative path on the compute node where the file system will be mounted. All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable."
        },
        "identityReference": {
          "$ref": "#/definitions/BatchNodeIdentityReference",
          "description": "The reference to the user assigned identity to use to access containerName. This property is mutually exclusive with both accountKey and sasKey; exactly one must be specified."
        }
      },
      "required": [
        "accountName",
        "containerName",
        "relativeMountPath"
      ]
    },
    "AzureFileShareConfiguration": {
      "type": "object",
      "description": "Information used to connect to an Azure Fileshare.",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "The Azure Storage account name."
        },
        "azureFileUrl": {
          "type": "string",
          "description": "The Azure Files URL. This is of the form 'https://{account}.file.core.windows.net/'."
        },
        "accountKey": {
          "type": "string",
          "format": "password",
          "description": "The Azure Storage account key.",
          "x-ms-secret": true
        },
        "relativeMountPath": {
          "type": "string",
          "description": "The relative path on the compute node where the file system will be mounted. All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable."
        },
        "mountOptions": {
          "type": "string",
          "description": "Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux."
        }
      },
      "required": [
        "accountName",
        "azureFileUrl",
        "accountKey",
        "relativeMountPath"
      ]
    },
    "BatchAccountListSupportedImagesResult": {
      "type": "object",
      "description": "The result of listing the supported Virtual Machine Images.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of supported Virtual Machine Images.",
          "items": {
            "$ref": "#/definitions/BatchSupportedImage"
          },
          "x-ms-identifiers": []
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "BatchApplication": {
      "type": "object",
      "description": "Contains information about an application in an Azure Batch Account.",
      "properties": {
        "id": {
          "type": "string",
          "description": "A string that uniquely identifies the application within the Account."
        },
        "displayName": {
          "type": "string",
          "description": "The display name for the application."
        },
        "versions": {
          "type": "array",
          "description": "The list of available versions of the application.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "displayName",
        "versions"
      ]
    },
    "BatchApplicationListResult": {
      "type": "object",
      "description": "The result of listing the applications available in an Account.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of applications available in the Account.",
          "items": {
            "$ref": "#/definitions/BatchApplication"
          }
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "BatchApplicationPackageReference": {
      "type": "object",
      "description": "A reference to an Package to be deployed to Compute Nodes.",
      "properties": {
        "applicationId": {
          "type": "string",
          "description": "The ID of the application to deploy. When creating a pool, the package's application ID must be fully qualified (/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications/{applicationName})."
        },
        "version": {
          "type": "string",
          "description": "The version of the application to deploy. If omitted, the default version is deployed. If this is omitted on a Pool, and no default version is specified for this application, the request fails with the error code InvalidApplicationPackageReferences and HTTP status code 409. If this is omitted on a Task, and no default version is specified for this application, the Task fails with a pre-processing error."
        }
      },
      "required": [
        "applicationId"
      ]
    },
    "BatchAutoPoolSpecification": {
      "type": "object",
      "description": "Specifies characteristics for a temporary 'auto pool'. The Batch service will\ncreate this auto Pool when the Job is submitted.",
      "properties": {
        "autoPoolIdPrefix": {
          "type": "string",
          "description": "A prefix to be added to the unique identifier when a Pool is automatically created. The Batch service assigns each auto Pool a unique identifier on creation. To distinguish between Pools created for different purposes, you can specify this element to add a prefix to the ID that is assigned. The prefix can be up to 20 characters long."
        },
        "poolLifetimeOption": {
          "$ref": "#/definitions/BatchPoolLifetimeOption",
          "description": "The minimum lifetime of created auto Pools, and how multiple Jobs on a schedule are assigned to Pools."
        },
        "keepAlive": {
          "type": "boolean",
          "description": "Whether to keep an auto Pool alive after its lifetime expires. If false, the Batch service deletes the Pool once its lifetime (as determined by the poolLifetimeOption setting) expires; that is, when the Job or Job Schedule completes. If true, the Batch service does not delete the Pool automatically. It is up to the user to delete auto Pools created with this option."
        },
        "pool": {
          "$ref": "#/definitions/BatchPoolSpecification",
          "description": "The Pool specification for the auto Pool."
        }
      },
      "required": [
        "poolLifetimeOption"
      ]
    },
    "BatchAutoPoolSpecificationUpdate": {
      "type": "object",
      "description": "Specifies characteristics for a temporary 'auto pool'. The Batch service will\ncreate this auto Pool when the Job is submitted.",
      "properties": {
        "autoPoolIdPrefix": {
          "type": "string",
          "description": "A prefix to be added to the unique identifier when a Pool is automatically created. The Batch service assigns each auto Pool a unique identifier on creation. To distinguish between Pools created for different purposes, you can specify this element to add a prefix to the ID that is assigned. The prefix can be up to 20 characters long."
        },
        "poolLifetimeOption": {
          "$ref": "#/definitions/BatchPoolLifetimeOption",
          "description": "The minimum lifetime of created auto Pools, and how multiple Jobs on a schedule are assigned to Pools."
        },
        "keepAlive": {
          "type": "boolean",
          "description": "Whether to keep an auto Pool alive after its lifetime expires. If false, the Batch service deletes the Pool once its lifetime (as determined by the poolLifetimeOption setting) expires; that is, when the Job or Job Schedule completes. If true, the Batch service does not delete the Pool automatically. It is up to the user to delete auto Pools created with this option."
        },
        "pool": {
          "$ref": "#/definitions/BatchPoolSpecificationUpdate",
          "description": "The Pool specification for the auto Pool."
        }
      }
    },
    "BatchError": {
      "type": "object",
      "description": "An error response received from the Azure Batch service.",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "$ref": "#/definitions/BatchErrorMessage",
          "description": "A message describing the error, intended to be suitable for display in a user interface."
        },
        "values": {
          "type": "array",
          "description": "A collection of key-value pairs containing additional details about the error.",
          "items": {
            "$ref": "#/definitions/BatchErrorDetail"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "code"
      ]
    },
    "BatchErrorDetail": {
      "type": "object",
      "description": "An item of additional information included in an Azure Batch error response.",
      "properties": {
        "key": {
          "type": "string",
          "description": "An identifier specifying the meaning of the Value property."
        },
        "value": {
          "type": "string",
          "description": "The additional information included with the error response."
        }
      }
    },
    "BatchErrorMessage": {
      "type": "object",
      "description": "An error message received in an Azure Batch error response.",
      "properties": {
        "lang": {
          "type": "string",
          "description": "The language code of the error message."
        },
        "value": {
          "type": "string",
          "description": "The text of the message."
        }
      }
    },
    "BatchJob": {
      "type": "object",
      "description": "An Azure Batch Job.",
      "properties": {
        "id": {
          "type": "string",
          "description": "A string that uniquely identifies the Job within the Account. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within an Account that differ only by case).",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The display name for the Job.",
          "readOnly": true
        },
        "usesTaskDependencies": {
          "type": "boolean",
          "description": "Whether Tasks in the Job can define dependencies on each other. The default is false.",
          "readOnly": true
        },
        "url": {
          "type": "string",
          "description": "The URL of the Job.",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "description": "The ETag of the Job. This is an opaque string. You can use it to detect whether the Job has changed between requests. In particular, you can be pass the ETag when updating a Job to specify that your changes should take effect only if nobody else has modified the Job in the meantime.",
          "readOnly": true
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "The last modified time of the Job. This is the last time at which the Job level data, such as the Job state or priority, changed. It does not factor in task-level changes such as adding new Tasks or Tasks changing state.",
          "readOnly": true
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation time of the Job.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/BatchJobState",
          "description": "The current state of the Job.",
          "readOnly": true
        },
        "stateTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the Job entered its current state.",
          "readOnly": true
        },
        "previousState": {
          "$ref": "#/definitions/BatchJobState",
          "description": "The previous state of the Job. This property is not set if the Job is in its initial Active state.",
          "readOnly": true
        },
        "previousStateTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the Job entered its previous state. This property is not set if the Job is in its initial Active state.",
          "readOnly": true
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the Job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0."
        },
        "allowTaskPreemption": {
          "type": "boolean",
          "description": "Whether Tasks in this job can be preempted by other high priority jobs. If the value is set to True, other high priority jobs submitted to the system will take precedence and will be able requeue tasks from this job. You can update a job's allowTaskPreemption after it has been created using the update job API."
        },
        "maxParallelTasks": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of tasks that can be executed in parallel for the job. The value of maxParallelTasks must be -1 or greater than 0 if specified. If not specified, the default value is -1, which means there's no limit to the number of tasks that can be run at once. You can update a job's maxParallelTasks after it has been created using the update job API.",
          "default": -1
        },
        "constraints": {
          "$ref": "#/definitions/BatchJobConstraints",
          "description": "The execution constraints for the Job."
        },
        "jobManagerTask": {
          "$ref": "#/definitions/BatchJobManagerTask",
          "description": "Details of a Job Manager Task to be launched when the Job is started.",
          "readOnly": true
        },
        "jobPreparationTask": {
          "$ref": "#/definitions/BatchJobPreparationTask",
          "description": "The Job Preparation Task. The Job Preparation Task is a special Task run on each Compute Node before any other Task of the Job.",
          "readOnly": true
        },
        "jobReleaseTask": {
          "$ref": "#/definitions/BatchJobReleaseTask",
          "description": "The Job Release Task. The Job Release Task is a special Task run at the end of the Job on each Compute Node that has run any other Task of the Job.",
          "readOnly": true
        },
        "commonEnvironmentSettings": {
          "type": "array",
          "description": "The list of common environment variable settings. These environment variables are set for all Tasks in the Job (including the Job Manager, Job Preparation and Job Release Tasks). Individual Tasks can override an environment setting specified here by specifying the same setting name with a different value.",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "poolInfo": {
          "$ref": "#/definitions/BatchPoolInfo",
          "description": "The Pool settings associated with the Job."
        },
        "onAllTasksComplete": {
          "$ref": "#/definitions/OnAllBatchTasksComplete",
          "description": "The action the Batch service should take when all Tasks in the Job are in the completed state. The default is noaction."
        },
        "onTaskFailure": {
          "$ref": "#/definitions/OnBatchTaskFailure",
          "description": "The action the Batch service should take when any Task in the Job fails. A Task is considered to have failed if has a failureInfo. A failureInfo is set if the Task completes with a non-zero exit code after exhausting its retry count, or if there was an error starting the Task, for example due to a resource file download error. The default is noaction.",
          "readOnly": true
        },
        "networkConfiguration": {
          "$ref": "#/definitions/BatchJobNetworkConfiguration",
          "description": "The network configuration for the Job.",
          "readOnly": true
        },
        "metadata": {
          "type": "array",
          "description": "A list of name-value pairs associated with the Job as metadata. The Batch service does not assign any meaning to metadata; it is solely for the use of user code.",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "x-ms-identifiers": []
        },
        "executionInfo": {
          "$ref": "#/definitions/BatchJobExecutionInfo",
          "description": "The execution information for the Job.",
          "readOnly": true
        },
        "stats": {
          "$ref": "#/definitions/BatchJobStatistics",
          "description": "Resource usage statistics for the entire lifetime of the Job. This property is populated only if the CloudJob was retrieved with an expand clause including the 'stats' attribute; otherwise it is null. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.",
          "readOnly": true
        }
      },
      "required": [
        "poolInfo"
      ]
    },
    "BatchJobAction": {
      "type": "string",
      "description": "BatchJobAction enums",
      "enum": [
        "none",
        "disable",
        "terminate"
      ],
      "x-ms-enum": {
        "name": "BatchJobAction",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "none",
            "description": "Take no action."
          },
          {
            "name": "Disable",
            "value": "disable",
            "description": "Disable the Job. This is equivalent to calling the disable Job API, with a disableTasks value of requeue."
          },
          {
            "name": "Terminate",
            "value": "terminate",
            "description": "Terminate the Job. The terminationReason in the Job's executionInfo is set to \"TaskFailed\"."
          }
        ]
      }
    },
    "BatchJobConstraints": {
      "type": "object",
      "description": "The execution constraints for a Job.",
      "properties": {
        "maxWallClockTime": {
          "type": "string",
          "format": "duration",
          "description": "The maximum elapsed time that the Job may run, measured from the time the Job is created. If the Job does not complete within the time limit, the Batch service terminates it and any Tasks that are still running. In this case, the termination reason will be MaxWallClockTimeExpiry. If this property is not specified, there is no time limit on how long the Job may run."
        },
        "maxTaskRetryCount": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of times each Task may be retried. The Batch service retries a Task if its exit code is nonzero. Note that this value specifically controls the number of retries. The Batch service will try each Task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries a Task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry Tasks. If the maximum retry count is -1, the Batch service retries Tasks without limit. The default value is 0 (no retries)."
        }
      }
    },
    "BatchJobCreateContent": {
      "type": "object",
      "description": "Parameters for creating an Azure Batch Job.",
      "properties": {
        "id": {
          "type": "string",
          "description": "A string that uniquely identifies the Job within the Account. The ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within an Account that differ only by case)."
        },
        "displayName": {
          "type": "string",
          "description": "The display name for the Job. The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
        },
        "usesTaskDependencies": {
          "type": "boolean",
          "description": "Whether Tasks in the Job can define dependencies on each other. The default is false."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the Job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0."
        },
        "allowTaskPreemption": {
          "type": "boolean",
          "description": "Whether Tasks in this job can be preempted by other high priority jobs. If the value is set to True, other high priority jobs submitted to the system will take precedence and will be able requeue tasks from this job. You can update a job's allowTaskPreemption after it has been created using the update job API."
        },
        "maxParallelTasks": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of tasks that can be executed in parallel for the job. The value of maxParallelTasks must be -1 or greater than 0 if specified. If not specified, the default value is -1, which means there's no limit to the number of tasks that can be run at once. You can update a job's maxParallelTasks after it has been created using the update job API.",
          "default": -1
        },
        "constraints": {
          "$ref": "#/definitions/BatchJobConstraints",
          "description": "The execution constraints for the Job."
        },
        "jobManagerTask": {
          "$ref": "#/definitions/BatchJobManagerTask",
          "description": "Details of a Job Manager Task to be launched when the Job is started. If the Job does not specify a Job Manager Task, the user must explicitly add Tasks to the Job. If the Job does specify a Job Manager Task, the Batch service creates the Job Manager Task when the Job is created, and will try to schedule the Job Manager Task before scheduling other Tasks in the Job. The Job Manager Task's typical purpose is to control and/or monitor Job execution, for example by deciding what additional Tasks to run, determining when the work is complete, etc. (However, a Job Manager Task is not restricted to these activities - it is a fully-fledged Task in the system and perform whatever actions are required for the Job.) For example, a Job Manager Task might download a file specified as a parameter, analyze the contents of that file and submit additional Tasks based on those contents."
        },
        "jobPreparationTask": {
          "$ref": "#/definitions/BatchJobPreparationTask",
          "description": "The Job Preparation Task. If a Job has a Job Preparation Task, the Batch service will run the Job Preparation Task on a Node before starting any Tasks of that Job on that Compute Node."
        },
        "jobReleaseTask": {
          "$ref": "#/definitions/BatchJobReleaseTask",
          "description": "The Job Release Task. A Job Release Task cannot be specified without also specifying a Job Preparation Task for the Job. The Batch service runs the Job Release Task on the Nodes that have run the Job Preparation Task. The primary purpose of the Job Release Task is to undo changes to Compute Nodes made by the Job Preparation Task. Example activities include deleting local files, or shutting down services that were started as part of Job preparation."
        },
        "commonEnvironmentSettings": {
          "type": "array",
          "description": "The list of common environment variable settings. These environment variables are set for all Tasks in the Job (including the Job Manager, Job Preparation and Job Release Tasks). Individual Tasks can override an environment setting specified here by specifying the same setting name with a different value.",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "x-ms-identifiers": []
        },
        "poolInfo": {
          "$ref": "#/definitions/BatchPoolInfo",
          "description": "The Pool on which the Batch service runs the Job's Tasks."
        },
        "onAllTasksComplete": {
          "$ref": "#/definitions/OnAllBatchTasksComplete",
          "description": "The action the Batch service should take when all Tasks in the Job are in the completed state. Note that if a Job contains no Tasks, then all Tasks are considered complete. This option is therefore most commonly used with a Job Manager task; if you want to use automatic Job termination without a Job Manager, you should initially set onAllTasksComplete to noaction and update the Job properties to set onAllTasksComplete to terminatejob once you have finished adding Tasks. The default is noaction."
        },
        "onTaskFailure": {
          "$ref": "#/definitions/OnBatchTaskFailure",
          "description": "The action the Batch service should take when any Task in the Job fails. A Task is considered to have failed if has a failureInfo. A failureInfo is set if the Task completes with a non-zero exit code after exhausting its retry count, or if there was an error starting the Task, for example due to a resource file download error. The default is noaction."
        },
        "networkConfiguration": {
          "$ref": "#/definitions/BatchJobNetworkConfiguration",
          "description": "The network configuration for the Job."
        },
        "metadata": {
          "type": "array",
          "description": "A list of name-value pairs associated with the Job as metadata. The Batch service does not assign any meaning to metadata; it is solely for the use of user code.",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "id",
        "poolInfo"
      ]
    },
    "BatchJobDisableContent": {
      "type": "object",
      "description": "Parameters for disabling an Azure Batch Job.",
      "properties": {
        "disableTasks": {
          "$ref": "#/definitions/DisableBatchJobOption",
          "description": "What to do with active Tasks associated with the Job."
        }
      },
      "required": [
        "disableTasks"
      ]
    },
    "BatchJobExecutionInfo": {
      "type": "object",
      "description": "Contains information about the execution of a Job in the Azure Batch service.",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the Job. This is the time at which the Job was created."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The completion time of the Job. This property is set only if the Job is in the completed state."
        },
        "poolId": {
          "type": "string",
          "description": "The ID of the Pool to which this Job is assigned. This element contains the actual Pool where the Job is assigned. When you get Job details from the service, they also contain a poolInfo element, which contains the Pool configuration data from when the Job was added or updated. That poolInfo element may also contain a poolId element. If it does, the two IDs are the same. If it does not, it means the Job ran on an auto Pool, and this property contains the ID of that auto Pool."
        },
        "schedulingError": {
          "$ref": "#/definitions/BatchJobSchedulingError",
          "description": "Details of any error encountered by the service in starting the Job. This property is not set if there was no error starting the Job."
        },
        "terminateReason": {
          "type": "string",
          "description": "A string describing the reason the Job ended. This property is set only if the Job is in the completed state. If the Batch service terminates the Job, it sets the reason as follows: JMComplete - the Job Manager Task completed, and killJobOnCompletion was set to true. MaxWallClockTimeExpiry - the Job reached its maxWallClockTime constraint. TerminateJobSchedule - the Job ran as part of a schedule, and the schedule terminated. AllTasksComplete - the Job's onAllTasksComplete attribute is set to terminatejob, and all Tasks in the Job are complete. TaskFailed - the Job's onTaskFailure attribute is set to performExitOptionsJobAction, and a Task in the Job failed with an exit condition that specified a jobAction of terminatejob. Any other string is a user-defined reason specified in a call to the 'Terminate a Job' operation.",
          "x-ms-client-name": "terminationReason"
        }
      },
      "required": [
        "startTime"
      ]
    },
    "BatchJobListResult": {
      "type": "object",
      "description": "The result of listing the Jobs in an Account.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of Jobs.",
          "items": {
            "$ref": "#/definitions/BatchJob"
          }
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "BatchJobManagerTask": {
      "type": "object",
      "description": "Specifies details of a Job Manager Task.\nThe Job Manager Task is automatically started when the Job is created. The\nBatch service tries to schedule the Job Manager Task before any other Tasks in\nthe Job. When shrinking a Pool, the Batch service tries to preserve Nodes where\nJob Manager Tasks are running for as long as possible (that is, Compute Nodes\nrunning 'normal' Tasks are removed before Compute Nodes running Job Manager\nTasks). When a Job Manager Task fails and needs to be restarted, the system\ntries to schedule it at the highest priority. If there are no idle Compute\nNodes available, the system may terminate one of the running Tasks in the Pool\nand return it to the queue in order to make room for the Job Manager Task to\nrestart. Note that a Job Manager Task in one Job does not have priority over\nTasks in other Jobs. Across Jobs, only Job level priorities are observed. For\nexample, if a Job Manager in a priority 0 Job needs to be restarted, it will\nnot displace Tasks of a priority 1 Job. Batch will retry Tasks when a recovery\noperation is triggered on a Node. Examples of recovery operations include (but\nare not limited to) when an unhealthy Node is rebooted or a Compute Node\ndisappeared due to host failure. Retries due to recovery operations are\nindependent of and are not counted against the maxTaskRetryCount. Even if the\nmaxTaskRetryCount is 0, an internal retry due to a recovery operation may\noccur. Because of this, all Tasks should be idempotent. This means Tasks need\nto tolerate being interrupted and restarted without causing any corruption or\nduplicate data. The best practice for long running Tasks is to use some form of\ncheckpointing.",
      "properties": {
        "id": {
          "type": "string",
          "description": "A string that uniquely identifies the Job Manager Task within the Job. The ID can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the Job Manager Task. It need not be unique and can contain any Unicode characters up to a maximum length of 1024."
        },
        "commandLine": {
          "type": "string",
          "description": "The command line of the Job Manager Task. The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)."
        },
        "containerSettings": {
          "$ref": "#/definitions/BatchTaskContainerSettings",
          "description": "The settings for the container under which the Job Manager Task runs. If the Pool that will run this Task has containerConfiguration set, this must be set as well. If the Pool that will run this Task doesn't have containerConfiguration set, this must not be set. When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files."
        },
        "resourceFiles": {
          "type": "array",
          "description": "A list of files that the Batch service will download to the Compute Node before running the command line. Files listed under this element are located in the Task's working directory. There is a maximum size for the list of resource files.  When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers.",
          "items": {
            "$ref": "#/definitions/ResourceFile"
          },
          "x-ms-identifiers": []
        },
        "outputFiles": {
          "type": "array",
          "description": "A list of files that the Batch service will upload from the Compute Node after running the command line. For multi-instance Tasks, the files will only be uploaded from the Compute Node on which the primary Task is executed.",
          "items": {
            "$ref": "#/definitions/OutputFile"
          },
          "x-ms-identifiers": []
        },
        "environmentSettings": {
          "type": "array",
          "description": "A list of environment variable settings for the Job Manager Task.",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "x-ms-identifiers": []
        },
        "constraints": {
          "$ref": "#/definitions/BatchTaskConstraints",
          "description": "Constraints that apply to the Job Manager Task."
        },
        "requiredSlots": {
          "type": "integer",
          "format": "int32",
          "description": "The number of scheduling slots that the Task requires to run. The default is 1. A Task can only be scheduled to run on a compute node if the node has enough free scheduling slots available. For multi-instance Tasks, this property is not supported and must not be specified."
        },
        "killJobOnCompletion": {
          "type": "boolean",
          "description": "Whether completion of the Job Manager Task signifies completion of the entire Job. If true, when the Job Manager Task completes, the Batch service marks the Job as complete. If any Tasks are still running at this time (other than Job Release), those Tasks are terminated. If false, the completion of the Job Manager Task does not affect the Job status. In this case, you should either use the onAllTasksComplete attribute to terminate the Job, or have a client or user terminate the Job explicitly. An example of this is if the Job Manager creates a set of Tasks but then takes no further role in their execution. The default value is true. If you are using the onAllTasksComplete and onTaskFailure attributes to control Job lifetime, and using the Job Manager Task only to create the Tasks for the Job (not to monitor progress), then it is important to set killJobOnCompletion to false."
        },
        "userIdentity": {
          "$ref": "#/definitions/UserIdentity",
          "description": "The user identity under which the Job Manager Task runs. If omitted, the Task runs as a non-administrative user unique to the Task."
        },
        "runExclusive": {
          "type": "boolean",
          "description": "Whether the Job Manager Task requires exclusive use of the Compute Node where it runs. If true, no other Tasks will run on the same Node for as long as the Job Manager is running. If false, other Tasks can run simultaneously with the Job Manager on a Compute Node. The Job Manager Task counts normally against the Compute Node's concurrent Task limit, so this is only relevant if the Compute Node allows multiple concurrent Tasks. The default value is true."
        },
        "applicationPackageReferences": {
          "type": "array",
          "description": "A list of Application Packages that the Batch service will deploy to the\nCompute Node before running the command line.Application Packages are\ndownloaded and deployed to a shared directory, not the Task working\ndirectory. Therefore, if a referenced Application Package is already\non the Compute Node, and is up to date, then it is not re-downloaded;\nthe existing copy on the Compute Node is used. If a referenced Application\nPackage cannot be installed, for example because the package has been deleted\nor because download failed, the Task fails.",
          "items": {
            "$ref": "#/definitions/BatchApplicationPackageReference"
          },
          "x-ms-identifiers": []
        },
        "authenticationTokenSettings": {
          "$ref": "#/definitions/AuthenticationTokenSettings",
          "description": "The settings for an authentication token that the Task can use to perform Batch service operations. If this property is set, the Batch service provides the Task with an authentication token which can be used to authenticate Batch service operations without requiring an Account access key. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN environment variable. The operations that the Task can carry out using the token depend on the settings. For example, a Task can request Job permissions in order to add other Tasks to the Job, or check the status of the Job or of other Tasks under the Job."
        },
        "allowLowPriorityNode": {
          "type": "boolean",
          "description": "Whether the Job Manager Task may run on a Spot/Low-priority Compute Node. The default value is true."
        }
      },
      "required": [
        "id",
        "commandLine"
      ]
    },
    "BatchJobManagerTaskUpdate": {
      "type": "object",
      "description": "Specifies details of a Job Manager Task.\nThe Job Manager Task is automatically started when the Job is created. The\nBatch service tries to schedule the Job Manager Task before any other Tasks in\nthe Job. When shrinking a Pool, the Batch service tries to preserve Nodes where\nJob Manager Tasks are running for as long as possible (that is, Compute Nodes\nrunning 'normal' Tasks are removed before Compute Nodes running Job Manager\nTasks). When a Job Manager Task fails and needs to be restarted, the system\ntries to schedule it at the highest priority. If there are no idle Compute\nNodes available, the system may terminate one of the running Tasks in the Pool\nand return it to the queue in order to make room for the Job Manager Task to\nrestart. Note that a Job Manager Task in one Job does not have priority over\nTasks in other Jobs. Across Jobs, only Job level priorities are observed. For\nexample, if a Job Manager in a priority 0 Job needs to be restarted, it will\nnot displace Tasks of a priority 1 Job. Batch will retry Tasks when a recovery\noperation is triggered on a Node. Examples of recovery operations include (but\nare not limited to) when an unhealthy Node is rebooted or a Compute Node\ndisappeared due to host failure. Retries due to recovery operations are\nindependent of and are not counted against the maxTaskRetryCount. Even if the\nmaxTaskRetryCount is 0, an internal retry due to a recovery operation may\noccur. Because of this, all Tasks should be idempotent. This means Tasks need\nto tolerate being interrupted and restarted without causing any corruption or\nduplicate data. The best practice for long running Tasks is to use some form of\ncheckpointing.",
      "properties": {
        "id": {
          "type": "string",
          "description": "A string that uniquely identifies the Job Manager Task within the Job. The ID can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the Job Manager Task. It need not be unique and can contain any Unicode characters up to a maximum length of 1024."
        },
        "commandLine": {
          "type": "string",
          "description": "The command line of the Job Manager Task. The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)."
        },
        "containerSettings": {
          "$ref": "#/definitions/BatchTaskContainerSettingsUpdate",
          "description": "The settings for the container under which the Job Manager Task runs. If the Pool that will run this Task has containerConfiguration set, this must be set as well. If the Pool that will run this Task doesn't have containerConfiguration set, this must not be set. When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files."
        },
        "resourceFiles": {
          "type": "array",
          "description": "A list of files that the Batch service will download to the Compute Node before running the command line. Files listed under this element are located in the Task's working directory. There is a maximum size for the list of resource files.  When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers.",
          "items": {
            "$ref": "#/definitions/ResourceFile"
          },
          "x-ms-identifiers": []
        },
        "outputFiles": {
          "type": "array",
          "description": "A list of files that the Batch service will upload from the Compute Node after running the command line. For multi-instance Tasks, the files will only be uploaded from the Compute Node on which the primary Task is executed.",
          "items": {
            "$ref": "#/definitions/OutputFile"
          },
          "x-ms-identifiers": []
        },
        "environmentSettings": {
          "type": "array",
          "description": "A list of environment variable settings for the Job Manager Task.",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "x-ms-identifiers": []
        },
        "constraints": {
          "$ref": "#/definitions/BatchTaskConstraints",
          "description": "Constraints that apply to the Job Manager Task."
        },
        "requiredSlots": {
          "type": "integer",
          "format": "int32",
          "description": "The number of scheduling slots that the Task requires to run. The default is 1. A Task can only be scheduled to run on a compute node if the node has enough free scheduling slots available. For multi-instance Tasks, this property is not supported and must not be specified."
        },
        "killJobOnCompletion": {
          "type": "boolean",
          "description": "Whether completion of the Job Manager Task signifies completion of the entire Job. If true, when the Job Manager Task completes, the Batch service marks the Job as complete. If any Tasks are still running at this time (other than Job Release), those Tasks are terminated. If false, the completion of the Job Manager Task does not affect the Job status. In this case, you should either use the onAllTasksComplete attribute to terminate the Job, or have a client or user terminate the Job explicitly. An example of this is if the Job Manager creates a set of Tasks but then takes no further role in their execution. The default value is true. If you are using the onAllTasksComplete and onTaskFailure attributes to control Job lifetime, and using the Job Manager Task only to create the Tasks for the Job (not to monitor progress), then it is important to set killJobOnCompletion to false."
        },
        "userIdentity": {
          "$ref": "#/definitions/UserIdentity",
          "description": "The user identity under which the Job Manager Task runs. If omitted, the Task runs as a non-administrative user unique to the Task."
        },
        "runExclusive": {
          "type": "boolean",
          "description": "Whether the Job Manager Task requires exclusive use of the Compute Node where it runs. If true, no other Tasks will run on the same Node for as long as the Job Manager is running. If false, other Tasks can run simultaneously with the Job Manager on a Compute Node. The Job Manager Task counts normally against the Compute Node's concurrent Task limit, so this is only relevant if the Compute Node allows multiple concurrent Tasks. The default value is true."
        },
        "applicationPackageReferences": {
          "type": "array",
          "description": "A list of Application Packages that the Batch service will deploy to the\nCompute Node before running the command line.Application Packages are\ndownloaded and deployed to a shared directory, not the Task working\ndirectory. Therefore, if a referenced Application Package is already\non the Compute Node, and is up to date, then it is not re-downloaded;\nthe existing copy on the Compute Node is used. If a referenced Application\nPackage cannot be installed, for example because the package has been deleted\nor because download failed, the Task fails.",
          "items": {
            "$ref": "#/definitions/BatchApplicationPackageReference"
          },
          "x-ms-identifiers": []
        },
        "authenticationTokenSettings": {
          "$ref": "#/definitions/AuthenticationTokenSettings",
          "description": "The settings for an authentication token that the Task can use to perform Batch service operations. If this property is set, the Batch service provides the Task with an authentication token which can be used to authenticate Batch service operations without requiring an Account access key. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN environment variable. The operations that the Task can carry out using the token depend on the settings. For example, a Task can request Job permissions in order to add other Tasks to the Job, or check the status of the Job or of other Tasks under the Job."
        },
        "allowLowPriorityNode": {
          "type": "boolean",
          "description": "Whether the Job Manager Task may run on a Spot/Low-priority Compute Node. The default value is true."
        }
      }
    },
    "BatchJobNetworkConfiguration": {
      "type": "object",
      "description": "The network configuration for the Job.",
      "properties": {
        "subnetId": {
          "type": "string",
          "description": "The ARM resource identifier of the virtual network subnet which Compute Nodes running Tasks from the Job will join for the duration of the Task. This will only work with a VirtualMachineConfiguration Pool. The virtual network must be in the same region and subscription as the Azure Batch Account. The specified subnet should have enough free IP addresses to accommodate the number of Compute Nodes which will run Tasks from the Job. This can be up to the number of Compute Nodes in the Pool. The 'MicrosoftAzureBatch' service principal must have the 'Classic Virtual Machine Contributor' Role-Based Access Control (RBAC) role for the specified VNet so that Azure Batch service can schedule Tasks on the Nodes. This can be verified by checking if the specified VNet has any associated Network Security Groups (NSG). If communication to the Nodes in the specified subnet is denied by an NSG, then the Batch service will set the state of the Compute Nodes to unusable. This is of the form /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}. If the specified VNet has any associated Network Security Groups (NSG), then a few reserved system ports must be enabled for inbound communication from the Azure Batch service. For Pools created with a Virtual Machine configuration, enable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for Windows. Port 443 is also required to be open for outbound connections for communications to Azure Storage. For more details see: https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration."
        }
      },
      "required": [
        "subnetId"
      ]
    },
    "BatchJobNetworkConfigurationUpdate": {
      "type": "object",
      "description": "The network configuration for the Job.",
      "properties": {
        "subnetId": {
          "type": "string",
          "description": "The ARM resource identifier of the virtual network subnet which Compute Nodes running Tasks from the Job will join for the duration of the Task. This will only work with a VirtualMachineConfiguration Pool. The virtual network must be in the same region and subscription as the Azure Batch Account. The specified subnet should have enough free IP addresses to accommodate the number of Compute Nodes which will run Tasks from the Job. This can be up to the number of Compute Nodes in the Pool. The 'MicrosoftAzureBatch' service principal must have the 'Classic Virtual Machine Contributor' Role-Based Access Control (RBAC) role for the specified VNet so that Azure Batch service can schedule Tasks on the Nodes. This can be verified by checking if the specified VNet has any associated Network Security Groups (NSG). If communication to the Nodes in the specified subnet is denied by an NSG, then the Batch service will set the state of the Compute Nodes to unusable. This is of the form /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}. If the specified VNet has any associated Network Security Groups (NSG), then a few reserved system ports must be enabled for inbound communication from the Azure Batch service. For Pools created with a Virtual Machine configuration, enable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for Windows. Port 443 is also required to be open for outbound connections for communications to Azure Storage. For more details see: https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration."
        }
      }
    },
    "BatchJobPreparationAndReleaseTaskStatus": {
      "type": "object",
      "description": "The status of the Job Preparation and Job Release Tasks on a Compute Node.",
      "properties": {
        "poolId": {
          "type": "string",
          "description": "The ID of the Pool containing the Compute Node to which this entry refers."
        },
        "nodeId": {
          "type": "string",
          "description": "The ID of the Compute Node to which this entry refers."
        },
        "nodeUrl": {
          "type": "string",
          "description": "The URL of the Compute Node to which this entry refers."
        },
        "jobPreparationTaskExecutionInfo": {
          "$ref": "#/definitions/BatchJobPreparationTaskExecutionInfo",
          "description": "Information about the execution status of the Job Preparation Task on this Compute Node."
        },
        "jobReleaseTaskExecutionInfo": {
          "$ref": "#/definitions/BatchJobReleaseTaskExecutionInfo",
          "description": "Information about the execution status of the Job Release Task on this Compute Node. This property is set only if the Job Release Task has run on the Compute Node."
        }
      }
    },
    "BatchJobPreparationAndReleaseTaskStatusListResult": {
      "type": "object",
      "description": "The result of listing the status of the Job Preparation and Job Release Tasks\nfor a Job.",
      "properties": {
        "value": {
          "type": "array",
          "description": "A list of Job Preparation and Job Release Task execution information.",
          "items": {
            "$ref": "#/definitions/BatchJobPreparationAndReleaseTaskStatus"
          },
          "x-ms-identifiers": []
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "BatchJobPreparationTask": {
      "type": "object",
      "description": "A Job Preparation Task to run before any Tasks of the Job on any given Compute Node.\nYou can use Job Preparation to prepare a Node to run Tasks for the Job.\nActivities commonly performed in Job Preparation include: Downloading common\nresource files used by all the Tasks in the Job. The Job Preparation Task can\ndownload these common resource files to the shared location on the Node.\n(AZ_BATCH_NODE_ROOT_DIR\\shared), or starting a local service on the Node so\nthat all Tasks of that Job can communicate with it. If the Job Preparation Task\nfails (that is, exhausts its retry count before exiting with exit code 0),\nBatch will not run Tasks of this Job on the Node. The Compute Node remains\nineligible to run Tasks of this Job until it is reimaged. The Compute Node\nremains active and can be used for other Jobs. The Job Preparation Task can run\nmultiple times on the same Node. Therefore, you should write the Job\nPreparation Task to handle re-execution. If the Node is rebooted, the Job\nPreparation Task is run again on the Compute Node before scheduling any other\nTask of the Job, if rerunOnNodeRebootAfterSuccess is true or if the Job\nPreparation Task did not previously complete. If the Node is reimaged, the Job\nPreparation Task is run again before scheduling any Task of the Job. Batch will\nretry Tasks when a recovery operation is triggered on a Node. Examples of\nrecovery operations include (but are not limited to) when an unhealthy Node is\nrebooted or a Compute Node disappeared due to host failure. Retries due to\nrecovery operations are independent of and are not counted against the\nmaxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal retry due to\na recovery operation may occur. Because of this, all Tasks should be\nidempotent. This means Tasks need to tolerate being interrupted and restarted\nwithout causing any corruption or duplicate data. The best practice for long\nrunning Tasks is to use some form of checkpointing.",
      "properties": {
        "id": {
          "type": "string",
          "description": "A string that uniquely identifies the Job Preparation Task within the Job. The ID can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters. If you do not specify this property, the Batch service assigns a default value of 'jobpreparation'. No other Task in the Job can have the same ID as the Job Preparation Task. If you try to submit a Task with the same id, the Batch service rejects the request with error code TaskIdSameAsJobPreparationTask; if you are calling the REST API directly, the HTTP status code is 409 (Conflict)."
        },
        "commandLine": {
          "type": "string",
          "description": "The command line of the Job Preparation Task. The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)."
        },
        "containerSettings": {
          "$ref": "#/definitions/BatchTaskContainerSettings",
          "description": "The settings for the container under which the Job Preparation Task runs. When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files."
        },
        "resourceFiles": {
          "type": "array",
          "description": "A list of files that the Batch service will download to the Compute Node before running the command line. Files listed under this element are located in the Task's working directory.  There is a maximum size for the list of resource files.  When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers.",
          "items": {
            "$ref": "#/definitions/ResourceFile"
          },
          "x-ms-identifiers": []
        },
        "environmentSettings": {
          "type": "array",
          "description": "A list of environment variable settings for the Job Preparation Task.",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "x-ms-identifiers": []
        },
        "constraints": {
          "$ref": "#/definitions/BatchTaskConstraints",
          "description": "Constraints that apply to the Job Preparation Task."
        },
        "waitForSuccess": {
          "type": "boolean",
          "description": "Whether the Batch service should wait for the Job Preparation Task to complete successfully before scheduling any other Tasks of the Job on the Compute Node. A Job Preparation Task has completed successfully if it exits with exit code 0. If true and the Job Preparation Task fails on a Node, the Batch service retries the Job Preparation Task up to its maximum retry count (as specified in the constraints element). If the Task has still not completed successfully after all retries, then the Batch service will not schedule Tasks of the Job to the Node. The Node remains active and eligible to run Tasks of other Jobs. If false, the Batch service will not wait for the Job Preparation Task to complete. In this case, other Tasks of the Job can start executing on the Compute Node while the Job Preparation Task is still running; and even if the Job Preparation Task fails, new Tasks will continue to be scheduled on the Compute Node. The default value is true."
        },
        "userIdentity": {
          "$ref": "#/definitions/UserIdentity",
          "description": "The user identity under which the Job Preparation Task runs. If omitted, the Task runs as a non-administrative user unique to the Task on Windows Compute Nodes, or a non-administrative user unique to the Pool on Linux Compute Nodes."
        },
        "rerunOnNodeRebootAfterSuccess": {
          "type": "boolean",
          "description": "Whether the Batch service should rerun the Job Preparation Task after a Compute Node reboots. The Job Preparation Task is always rerun if a Compute Node is reimaged, or if the Job Preparation Task did not complete (e.g. because the reboot occurred while the Task was running). Therefore, you should always write a Job Preparation Task to be idempotent and to behave correctly if run multiple times. The default value is true."
        }
      },
      "required": [
        "commandLine"
      ]
    },
    "BatchJobPreparationTaskExecutionInfo": {
      "type": "object",
      "description": "Contains information about the execution of a Job Preparation Task on a Compute\nNode.",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the Task started running. If the Task has been restarted or retried, this is the most recent time at which the Task started running."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the Job Preparation Task completed. This property is set only if the Task is in the Completed state."
        },
        "state": {
          "$ref": "#/definitions/BatchJobPreparationTaskState",
          "description": "The current state of the Job Preparation Task on the Compute Node."
        },
        "taskRootDirectory": {
          "type": "string",
          "description": "The root directory of the Job Preparation Task on the Compute Node. You can use this path to retrieve files created by the Task, such as log files."
        },
        "taskRootDirectoryUrl": {
          "type": "string",
          "description": "The URL to the root directory of the Job Preparation Task on the Compute Node."
        },
        "exitCode": {
          "type": "integer",
          "format": "int32",
          "description": "The exit code of the program specified on the Task command line. This parameter is returned only if the Task is in the completed state. The exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. Note that the exit code may also be generated by the Compute Node operating system, such as when a process is forcibly terminated."
        },
        "containerInfo": {
          "$ref": "#/definitions/BatchTaskContainerExecutionInfo",
          "description": "Information about the container under which the Task is executing. This property is set only if the Task runs in a container context."
        },
        "failureInfo": {
          "$ref": "#/definitions/BatchTaskFailureInfo",
          "description": "Information describing the Task failure, if any. This property is set only if the Task is in the completed state and encountered a failure."
        },
        "retryCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of times the Task has been retried by the Batch service. Task application failures (non-zero exit code) are retried, pre-processing errors (the Task could not be run) and file upload errors are not retried. The Batch service will retry the Task up to the limit specified by the constraints. Task application failures (non-zero exit code) are retried, pre-processing errors (the Task could not be run) and file upload errors are not retried. The Batch service will retry the Task up to the limit specified by the constraints."
        },
        "lastRetryTime": {
          "type": "string",
          "format": "date-time",
          "description": "The most recent time at which a retry of the Job Preparation Task started running. This property is set only if the Task was retried (i.e. retryCount is nonzero). If present, this is typically the same as startTime, but may be different if the Task has been restarted for reasons other than retry; for example, if the Compute Node was rebooted during a retry, then the startTime is updated but the lastRetryTime is not."
        },
        "result": {
          "$ref": "#/definitions/BatchTaskExecutionResult",
          "description": "The result of the Task execution. If the value is 'failed', then the details of the failure can be found in the failureInfo property."
        }
      },
      "required": [
        "startTime",
        "state",
        "retryCount"
      ]
    },
    "BatchJobPreparationTaskState": {
      "type": "string",
      "description": "BatchJobPreparationTaskState enums",
      "enum": [
        "running",
        "completed"
      ],
      "x-ms-enum": {
        "name": "BatchJobPreparationTaskState",
        "modelAsString": true,
        "values": [
          {
            "name": "Running",
            "value": "running",
            "description": "The Task is currently running (including retrying)."
          },
          {
            "name": "Completed",
            "value": "completed",
            "description": "The Task has exited with exit code 0, or the Task has exhausted its retry limit, or the Batch service was unable to start the Task due to Task preparation errors (such as resource file download failures)."
          }
        ]
      }
    },
    "BatchJobPreparationTaskUpdate": {
      "type": "object",
      "description": "A Job Preparation Task to run before any Tasks of the Job on any given Compute Node.\nYou can use Job Preparation to prepare a Node to run Tasks for the Job.\nActivities commonly performed in Job Preparation include: Downloading common\nresource files used by all the Tasks in the Job. The Job Preparation Task can\ndownload these common resource files to the shared location on the Node.\n(AZ_BATCH_NODE_ROOT_DIR\\shared), or starting a local service on the Node so\nthat all Tasks of that Job can communicate with it. If the Job Preparation Task\nfails (that is, exhausts its retry count before exiting with exit code 0),\nBatch will not run Tasks of this Job on the Node. The Compute Node remains\nineligible to run Tasks of this Job until it is reimaged. The Compute Node\nremains active and can be used for other Jobs. The Job Preparation Task can run\nmultiple times on the same Node. Therefore, you should write the Job\nPreparation Task to handle re-execution. If the Node is rebooted, the Job\nPreparation Task is run again on the Compute Node before scheduling any other\nTask of the Job, if rerunOnNodeRebootAfterSuccess is true or if the Job\nPreparation Task did not previously complete. If the Node is reimaged, the Job\nPreparation Task is run again before scheduling any Task of the Job. Batch will\nretry Tasks when a recovery operation is triggered on a Node. Examples of\nrecovery operations include (but are not limited to) when an unhealthy Node is\nrebooted or a Compute Node disappeared due to host failure. Retries due to\nrecovery operations are independent of and are not counted against the\nmaxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal retry due to\na recovery operation may occur. Because of this, all Tasks should be\nidempotent. This means Tasks need to tolerate being interrupted and restarted\nwithout causing any corruption or duplicate data. The best practice for long\nrunning Tasks is to use some form of checkpointing.",
      "properties": {
        "id": {
          "type": "string",
          "description": "A string that uniquely identifies the Job Preparation Task within the Job. The ID can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters. If you do not specify this property, the Batch service assigns a default value of 'jobpreparation'. No other Task in the Job can have the same ID as the Job Preparation Task. If you try to submit a Task with the same id, the Batch service rejects the request with error code TaskIdSameAsJobPreparationTask; if you are calling the REST API directly, the HTTP status code is 409 (Conflict)."
        },
        "commandLine": {
          "type": "string",
          "description": "The command line of the Job Preparation Task. The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)."
        },
        "containerSettings": {
          "$ref": "#/definitions/BatchTaskContainerSettingsUpdate",
          "description": "The settings for the container under which the Job Preparation Task runs. When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files."
        },
        "resourceFiles": {
          "type": "array",
          "description": "A list of files that the Batch service will download to the Compute Node before running the command line. Files listed under this element are located in the Task's working directory.  There is a maximum size for the list of resource files.  When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers.",
          "items": {
            "$ref": "#/definitions/ResourceFile"
          },
          "x-ms-identifiers": []
        },
        "environmentSettings": {
          "type": "array",
          "description": "A list of environment variable settings for the Job Preparation Task.",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "x-ms-identifiers": []
        },
        "constraints": {
          "$ref": "#/definitions/BatchTaskConstraints",
          "description": "Constraints that apply to the Job Preparation Task."
        },
        "waitForSuccess": {
          "type": "boolean",
          "description": "Whether the Batch service should wait for the Job Preparation Task to complete successfully before scheduling any other Tasks of the Job on the Compute Node. A Job Preparation Task has completed successfully if it exits with exit code 0. If true and the Job Preparation Task fails on a Node, the Batch service retries the Job Preparation Task up to its maximum retry count (as specified in the constraints element). If the Task has still not completed successfully after all retries, then the Batch service will not schedule Tasks of the Job to the Node. The Node remains active and eligible to run Tasks of other Jobs. If false, the Batch service will not wait for the Job Preparation Task to complete. In this case, other Tasks of the Job can start executing on the Compute Node while the Job Preparation Task is still running; and even if the Job Preparation Task fails, new Tasks will continue to be scheduled on the Compute Node. The default value is true."
        },
        "userIdentity": {
          "$ref": "#/definitions/UserIdentity",
          "description": "The user identity under which the Job Preparation Task runs. If omitted, the Task runs as a non-administrative user unique to the Task on Windows Compute Nodes, or a non-administrative user unique to the Pool on Linux Compute Nodes."
        },
        "rerunOnNodeRebootAfterSuccess": {
          "type": "boolean",
          "description": "Whether the Batch service should rerun the Job Preparation Task after a Compute Node reboots. The Job Preparation Task is always rerun if a Compute Node is reimaged, or if the Job Preparation Task did not complete (e.g. because the reboot occurred while the Task was running). Therefore, you should always write a Job Preparation Task to be idempotent and to behave correctly if run multiple times. The default value is true."
        }
      }
    },
    "BatchJobReleaseTask": {
      "type": "object",
      "description": "A Job Release Task to run on Job completion on any Compute Node where the Job has run.\nThe Job Release Task runs when the Job ends, because of one of the following:\nThe user calls the Terminate Job API, or the Delete Job API while the Job is\nstill active, the Job's maximum wall clock time constraint is reached, and the\nJob is still active, or the Job's Job Manager Task completed, and the Job is\nconfigured to terminate when the Job Manager completes. The Job Release Task\nruns on each Node where Tasks of the Job have run and the Job Preparation Task\nran and completed. If you reimage a Node after it has run the Job Preparation\nTask, and the Job ends without any further Tasks of the Job running on that\nNode (and hence the Job Preparation Task does not re-run), then the Job Release\nTask does not run on that Compute Node. If a Node reboots while the Job Release\nTask is still running, the Job Release Task runs again when the Compute Node\nstarts up. The Job is not marked as complete until all Job Release Tasks have\ncompleted. The Job Release Task runs in the background. It does not occupy a\nscheduling slot; that is, it does not count towards the taskSlotsPerNode limit\nspecified on the Pool.",
      "properties": {
        "id": {
          "type": "string",
          "description": "A string that uniquely identifies the Job Release Task within the Job. The ID can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters. If you do not specify this property, the Batch service assigns a default value of 'jobrelease'. No other Task in the Job can have the same ID as the Job Release Task. If you try to submit a Task with the same id, the Batch service rejects the request with error code TaskIdSameAsJobReleaseTask; if you are calling the REST API directly, the HTTP status code is 409 (Conflict)."
        },
        "commandLine": {
          "type": "string",
          "description": "The command line of the Job Release Task. The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)."
        },
        "containerSettings": {
          "$ref": "#/definitions/BatchTaskContainerSettings",
          "description": "The settings for the container under which the Job Release Task runs. When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files."
        },
        "resourceFiles": {
          "type": "array",
          "description": "A list of files that the Batch service will download to the Compute Node before running the command line.  There is a maximum size for the list of resource files.  When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers. Files listed under this element are located in the Task's working directory.",
          "items": {
            "$ref": "#/definitions/ResourceFile"
          },
          "x-ms-identifiers": []
        },
        "environmentSettings": {
          "type": "array",
          "description": "A list of environment variable settings for the Job Release Task.",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "x-ms-identifiers": []
        },
        "maxWallClockTime": {
          "type": "string",
          "format": "duration",
          "description": "The maximum elapsed time that the Job Release Task may run on a given Compute Node, measured from the time the Task starts. If the Task does not complete within the time limit, the Batch service terminates it. The default value is 15 minutes. You may not specify a timeout longer than 15 minutes. If you do, the Batch service rejects it with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
        },
        "retentionTime": {
          "type": "string",
          "format": "duration",
          "description": "The minimum time to retain the Task directory for the Job Release Task on the Compute Node. After this time, the Batch service may delete the Task directory and all its contents. The default is 7 days, i.e. the Task directory will be retained for 7 days unless the Compute Node is removed or the Job is deleted."
        },
        "userIdentity": {
          "$ref": "#/definitions/UserIdentity",
          "description": "The user identity under which the Job Release Task runs. If omitted, the Task runs as a non-administrative user unique to the Task."
        }
      },
      "required": [
        "commandLine"
      ]
    },
    "BatchJobReleaseTaskExecutionInfo": {
      "type": "object",
      "description": "Contains information about the execution of a Job Release Task on a Compute\nNode.",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the Task started running. If the Task has been restarted or retried, this is the most recent time at which the Task started running."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the Job Release Task completed. This property is set only if the Task is in the Completed state."
        },
        "state": {
          "$ref": "#/definitions/BatchJobReleaseTaskState",
          "description": "The current state of the Job Release Task on the Compute Node."
        },
        "taskRootDirectory": {
          "type": "string",
          "description": "The root directory of the Job Release Task on the Compute Node. You can use this path to retrieve files created by the Task, such as log files."
        },
        "taskRootDirectoryUrl": {
          "type": "string",
          "description": "The URL to the root directory of the Job Release Task on the Compute Node."
        },
        "exitCode": {
          "type": "integer",
          "format": "int32",
          "description": "The exit code of the program specified on the Task command line. This parameter is returned only if the Task is in the completed state. The exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. Note that the exit code may also be generated by the Compute Node operating system, such as when a process is forcibly terminated."
        },
        "containerInfo": {
          "$ref": "#/definitions/BatchTaskContainerExecutionInfo",
          "description": "Information about the container under which the Task is executing. This property is set only if the Task runs in a container context."
        },
        "failureInfo": {
          "$ref": "#/definitions/BatchTaskFailureInfo",
          "description": "Information describing the Task failure, if any. This property is set only if the Task is in the completed state and encountered a failure."
        },
        "result": {
          "$ref": "#/definitions/BatchTaskExecutionResult",
          "description": "The result of the Task execution. If the value is 'failed', then the details of the failure can be found in the failureInfo property."
        }
      },
      "required": [
        "startTime",
        "state"
      ]
    },
    "BatchJobReleaseTaskState": {
      "type": "string",
      "description": "BatchJobReleaseTaskState enums",
      "enum": [
        "running",
        "completed"
      ],
      "x-ms-enum": {
        "name": "BatchJobReleaseTaskState",
        "modelAsString": true,
        "values": [
          {
            "name": "Running",
            "value": "running",
            "description": "The Task is currently running (including retrying)."
          },
          {
            "name": "Completed",
            "value": "completed",
            "description": "The Task has exited with exit code 0, or the Task has exhausted its retry limit, or the Batch service was unable to start the Task due to Task preparation errors (such as resource file download failures)."
          }
        ]
      }
    },
    "BatchJobReleaseTaskUpdate": {
      "type": "object",
      "description": "A Job Release Task to run on Job completion on any Compute Node where the Job has run.\nThe Job Release Task runs when the Job ends, because of one of the following:\nThe user calls the Terminate Job API, or the Delete Job API while the Job is\nstill active, the Job's maximum wall clock time constraint is reached, and the\nJob is still active, or the Job's Job Manager Task completed, and the Job is\nconfigured to terminate when the Job Manager completes. The Job Release Task\nruns on each Node where Tasks of the Job have run and the Job Preparation Task\nran and completed. If you reimage a Node after it has run the Job Preparation\nTask, and the Job ends without any further Tasks of the Job running on that\nNode (and hence the Job Preparation Task does not re-run), then the Job Release\nTask does not run on that Compute Node. If a Node reboots while the Job Release\nTask is still running, the Job Release Task runs again when the Compute Node\nstarts up. The Job is not marked as complete until all Job Release Tasks have\ncompleted. The Job Release Task runs in the background. It does not occupy a\nscheduling slot; that is, it does not count towards the taskSlotsPerNode limit\nspecified on the Pool.",
      "properties": {
        "id": {
          "type": "string",
          "description": "A string that uniquely identifies the Job Release Task within the Job. The ID can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters. If you do not specify this property, the Batch service assigns a default value of 'jobrelease'. No other Task in the Job can have the same ID as the Job Release Task. If you try to submit a Task with the same id, the Batch service rejects the request with error code TaskIdSameAsJobReleaseTask; if you are calling the REST API directly, the HTTP status code is 409 (Conflict)."
        },
        "commandLine": {
          "type": "string",
          "description": "The command line of the Job Release Task. The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)."
        },
        "containerSettings": {
          "$ref": "#/definitions/BatchTaskContainerSettingsUpdate",
          "description": "The settings for the container under which the Job Release Task runs. When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files."
        },
        "resourceFiles": {
          "type": "array",
          "description": "A list of files that the Batch service will download to the Compute Node before running the command line.  There is a maximum size for the list of resource files.  When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers. Files listed under this element are located in the Task's working directory.",
          "items": {
            "$ref": "#/definitions/ResourceFile"
          },
          "x-ms-identifiers": []
        },
        "environmentSettings": {
          "type": "array",
          "description": "A list of environment variable settings for the Job Release Task.",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "x-ms-identifiers": []
        },
        "maxWallClockTime": {
          "type": "string",
          "format": "duration",
          "description": "The maximum elapsed time that the Job Release Task may run on a given Compute Node, measured from the time the Task starts. If the Task does not complete within the time limit, the Batch service terminates it. The default value is 15 minutes. You may not specify a timeout longer than 15 minutes. If you do, the Batch service rejects it with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
        },
        "retentionTime": {
          "type": "string",
          "format": "duration",
          "description": "The minimum time to retain the Task directory for the Job Release Task on the Compute Node. After this time, the Batch service may delete the Task directory and all its contents. The default is 7 days, i.e. the Task directory will be retained for 7 days unless the Compute Node is removed or the Job is deleted."
        },
        "userIdentity": {
          "$ref": "#/definitions/UserIdentity",
          "description": "The user identity under which the Job Release Task runs. If omitted, the Task runs as a non-administrative user unique to the Task."
        }
      }
    },
    "BatchJobSchedule": {
      "type": "object",
      "description": "A Job Schedule that allows recurring Jobs by specifying when to run Jobs and a\nspecification used to create each Job.",
      "properties": {
        "id": {
          "type": "string",
          "description": "A string that uniquely identifies the schedule within the Account.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The display name for the schedule.",
          "readOnly": true
        },
        "url": {
          "type": "string",
          "description": "The URL of the Job Schedule.",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "description": "The ETag of the Job Schedule. This is an opaque string. You can use it to detect whether the Job Schedule has changed between requests. In particular, you can be pass the ETag with an Update Job Schedule request to specify that your changes should take effect only if nobody else has modified the schedule in the meantime.",
          "readOnly": true
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "The last modified time of the Job Schedule. This is the last time at which the schedule level data, such as the Job specification or recurrence information, changed. It does not factor in job-level changes such as new Jobs being created or Jobs changing state.",
          "readOnly": true
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation time of the Job Schedule.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/BatchJobScheduleState",
          "description": "The current state of the Job Schedule.",
          "readOnly": true
        },
        "stateTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the Job Schedule entered the current state.",
          "readOnly": true
        },
        "previousState": {
          "$ref": "#/definitions/BatchJobScheduleState",
          "description": "The previous state of the Job Schedule. This property is not present if the Job Schedule is in its initial active state.",
          "readOnly": true
        },
        "previousStateTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the Job Schedule entered its previous state. This property is not present if the Job Schedule is in its initial active state.",
          "readOnly": true
        },
        "schedule": {
          "$ref": "#/definitions/BatchJobScheduleConfiguration",
          "description": "The schedule according to which Jobs will be created. All times are fixed respective to UTC and are not impacted by daylight saving time."
        },
        "jobSpecification": {
          "$ref": "#/definitions/BatchJobSpecification",
          "description": "The details of the Jobs to be created on this schedule."
        },
        "executionInfo": {
          "$ref": "#/definitions/BatchJobScheduleExecutionInfo",
          "description": "Information about Jobs that have been and will be run under this schedule.",
          "readOnly": true
        },
        "metadata": {
          "type": "array",
          "description": "A list of name-value pairs associated with the schedule as metadata. The Batch service does not assign any meaning to metadata; it is solely for the use of user code.",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "x-ms-identifiers": []
        },
        "stats": {
          "$ref": "#/definitions/BatchJobScheduleStatistics",
          "description": "The lifetime resource usage statistics for the Job Schedule. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.",
          "readOnly": true
        }
      },
      "required": [
        "jobSpecification"
      ]
    },
    "BatchJobScheduleConfiguration": {
      "type": "object",
      "description": "The schedule according to which Jobs will be created. All times are fixed\nrespective to UTC and are not impacted by daylight saving time.",
      "properties": {
        "doNotRunUntil": {
          "type": "string",
          "format": "date-time",
          "description": "The earliest time at which any Job may be created under this Job Schedule. If you do not specify a doNotRunUntil time, the schedule becomes ready to create Jobs immediately."
        },
        "doNotRunAfter": {
          "type": "string",
          "format": "date-time",
          "description": "A time after which no Job will be created under this Job Schedule. The schedule will move to the completed state as soon as this deadline is past and there is no active Job under this Job Schedule. If you do not specify a doNotRunAfter time, and you are creating a recurring Job Schedule, the Job Schedule will remain active until you explicitly terminate it."
        },
        "startWindow": {
          "type": "string",
          "format": "duration",
          "description": "The time interval, starting from the time at which the schedule indicates a Job should be created, within which a Job must be created. If a Job is not created within the startWindow interval, then the 'opportunity' is lost; no Job will be created until the next recurrence of the schedule. If the schedule is recurring, and the startWindow is longer than the recurrence interval, then this is equivalent to an infinite startWindow, because the Job that is 'due' in one recurrenceInterval is not carried forward into the next recurrence interval. The default is infinite. The minimum value is 1 minute. If you specify a lower value, the Batch service rejects the schedule with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
        },
        "recurrenceInterval": {
          "type": "string",
          "format": "duration",
          "description": "The time interval between the start times of two successive Jobs under the Job Schedule. A Job Schedule can have at most one active Job under it at any given time. Because a Job Schedule can have at most one active Job under it at any given time, if it is time to create a new Job under a Job Schedule, but the previous Job is still running, the Batch service will not create the new Job until the previous Job finishes. If the previous Job does not finish within the startWindow period of the new recurrenceInterval, then no new Job will be scheduled for that interval. For recurring Jobs, you should normally specify a jobManagerTask in the jobSpecification. If you do not use jobManagerTask, you will need an external process to monitor when Jobs are created, add Tasks to the Jobs and terminate the Jobs ready for the next recurrence. The default is that the schedule does not recur: one Job is created, within the startWindow after the doNotRunUntil time, and the schedule is complete as soon as that Job finishes. The minimum value is 1 minute. If you specify a lower value, the Batch service rejects the schedule with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
        }
      }
    },
    "BatchJobScheduleCreateContent": {
      "type": "object",
      "description": "Parameters for creating an Azure Batch Job Schedule",
      "properties": {
        "id": {
          "type": "string",
          "description": "A string that uniquely identifies the schedule within the Account. The ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within an Account that differ only by case)."
        },
        "displayName": {
          "type": "string",
          "description": "The display name for the schedule. The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
        },
        "schedule": {
          "$ref": "#/definitions/BatchJobScheduleConfiguration",
          "description": "The schedule according to which Jobs will be created. All times are fixed respective to UTC and are not impacted by daylight saving time."
        },
        "jobSpecification": {
          "$ref": "#/definitions/BatchJobSpecification",
          "description": "The details of the Jobs to be created on this schedule."
        },
        "metadata": {
          "type": "array",
          "description": "A list of name-value pairs associated with the schedule as metadata. The Batch service does not assign any meaning to metadata; it is solely for the use of user code.",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "id",
        "schedule",
        "jobSpecification"
      ]
    },
    "BatchJobScheduleExecutionInfo": {
      "type": "object",
      "description": "Contains information about Jobs that have been and will be run under a Job\nSchedule.",
      "properties": {
        "nextRunTime": {
          "type": "string",
          "format": "date-time",
          "description": "The next time at which a Job will be created under this schedule. This property is meaningful only if the schedule is in the active state when the time comes around. For example, if the schedule is disabled, no Job will be created at nextRunTime unless the Job is enabled before then."
        },
        "recentJob": {
          "$ref": "#/definitions/RecentBatchJob",
          "description": "Information about the most recent Job under the Job Schedule. This property is present only if the at least one Job has run under the schedule."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the schedule ended. This property is set only if the Job Schedule is in the completed state."
        }
      }
    },
    "BatchJobScheduleListResult": {
      "type": "object",
      "description": "The result of listing the Job Schedules in an Account.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of Job Schedules.",
          "items": {
            "$ref": "#/definitions/BatchJobSchedule"
          }
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "BatchJobScheduleState": {
      "type": "string",
      "description": "BatchJobScheduleState enums",
      "enum": [
        "active",
        "completed",
        "disabled",
        "terminating",
        "deleting"
      ],
      "x-ms-enum": {
        "name": "BatchJobScheduleState",
        "modelAsString": true,
        "values": [
          {
            "name": "Active",
            "value": "active",
            "description": "The Job Schedule is active and will create Jobs as per its schedule."
          },
          {
            "name": "Completed",
            "value": "completed",
            "description": "The Job Schedule has terminated, either by reaching its end time or by the user terminating it explicitly."
          },
          {
            "name": "Disabled",
            "value": "disabled",
            "description": "The user has disabled the Job Schedule. The scheduler will not initiate any new Jobs will on this schedule, but any existing active Job will continue to run."
          },
          {
            "name": "Terminating",
            "value": "terminating",
            "description": "The Job Schedule has no more work to do, or has been explicitly terminated by the user, but the termination operation is still in progress. The scheduler will not initiate any new Jobs for this Job Schedule, nor is any existing Job active."
          },
          {
            "name": "Deleting",
            "value": "deleting",
            "description": "The user has requested that the Job Schedule be deleted, but the delete operation is still in progress. The scheduler will not initiate any new Jobs for this Job Schedule, and will delete any existing Jobs and Tasks under the Job Schedule, including any active Job. The Job Schedule will be deleted when all Jobs and Tasks under the Job Schedule have been deleted."
          }
        ]
      }
    },
    "BatchJobScheduleStatistics": {
      "type": "object",
      "description": "Resource usage statistics for a Job Schedule.",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL of the statistics."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the time range covered by the statistics."
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime."
        },
        "userCPUTime": {
          "type": "string",
          "format": "duration",
          "description": "The total user mode CPU time (summed across all cores and all Compute Nodes) consumed by all Tasks in all Jobs created under the schedule.",
          "x-ms-client-name": "userCpuTime"
        },
        "kernelCPUTime": {
          "type": "string",
          "format": "duration",
          "description": "The total kernel mode CPU time (summed across all cores and all Compute Nodes) consumed by all Tasks in all Jobs created under the schedule.",
          "x-ms-client-name": "kernelCpuTime"
        },
        "wallClockTime": {
          "type": "string",
          "format": "duration",
          "description": "The total wall clock time of all the Tasks in all the Jobs created under the schedule. The wall clock time is the elapsed time from when the Task started running on a Compute Node to when it finished (or to the last time the statistics were updated, if the Task had not finished by then). If a Task was retried, this includes the wall clock time of all the Task retries."
        },
        "readIOps": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of disk read operations made by all Tasks in all Jobs created under the schedule."
        },
        "writeIOps": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of disk write operations made by all Tasks in all Jobs created under the schedule."
        },
        "readIOGiB": {
          "type": "number",
          "format": "float",
          "description": "The total gibibytes read from disk by all Tasks in all Jobs created under the schedule."
        },
        "writeIOGiB": {
          "type": "number",
          "format": "float",
          "description": "The total gibibytes written to disk by all Tasks in all Jobs created under the schedule."
        },
        "numSucceededTasks": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of Tasks successfully completed during the given time range in Jobs created under the schedule. A Task completes successfully if it returns exit code 0."
        },
        "numFailedTasks": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of Tasks that failed during the given time range in Jobs created under the schedule. A Task fails if it exhausts its maximum retry count without returning exit code 0."
        },
        "numTaskRetries": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of retries during the given time range on all Tasks in all Jobs created under the schedule."
        },
        "waitTime": {
          "type": "string",
          "format": "duration",
          "description": "The total wait time of all Tasks in all Jobs created under the schedule. The wait time for a Task is defined as the elapsed time between the creation of the Task and the start of Task execution. (If the Task is retried due to failures, the wait time is the time to the most recent Task execution.). This value is only reported in the Account lifetime statistics; it is not included in the Job statistics."
        }
      },
      "required": [
        "url",
        "startTime",
        "lastUpdateTime",
        "userCPUTime",
        "kernelCPUTime",
        "wallClockTime",
        "readIOps",
        "writeIOps",
        "readIOGiB",
        "writeIOGiB",
        "numSucceededTasks",
        "numFailedTasks",
        "numTaskRetries",
        "waitTime"
      ]
    },
    "BatchJobScheduleUpdateContent": {
      "type": "object",
      "description": "Parameters for updating an Azure Batch Job Schedule.",
      "properties": {
        "schedule": {
          "$ref": "#/definitions/BatchJobScheduleConfiguration",
          "description": "The schedule according to which Jobs will be created. All times are fixed respective to UTC and are not impacted by daylight saving time. If you do not specify this element, the existing schedule is left unchanged."
        },
        "jobSpecification": {
          "$ref": "#/definitions/BatchJobSpecificationUpdate",
          "description": "The details of the Jobs to be created on this schedule. Updates affect only Jobs that are started after the update has taken place. Any currently active Job continues with the older specification."
        },
        "metadata": {
          "type": "array",
          "description": "A list of name-value pairs associated with the Job Schedule as metadata. If you do not specify this element, existing metadata is left unchanged.",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "BatchJobSchedulingError": {
      "type": "object",
      "description": "An error encountered by the Batch service when scheduling a Job.",
      "properties": {
        "category": {
          "$ref": "#/definitions/ErrorCategory",
          "description": "The category of the Job scheduling error."
        },
        "code": {
          "type": "string",
          "description": "An identifier for the Job scheduling error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the Job scheduling error, intended to be suitable for display in a user interface."
        },
        "details": {
          "type": "array",
          "description": "A list of additional error details related to the scheduling error.",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "category"
      ]
    },
    "BatchJobSpecification": {
      "type": "object",
      "description": "Specifies details of the Jobs to be created on a schedule.",
      "properties": {
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of Jobs created under this schedule. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0. This priority is used as the default for all Jobs under the Job Schedule. You can update a Job's priority after it has been created using by using the update Job API."
        },
        "allowTaskPreemption": {
          "type": "boolean",
          "description": "Whether Tasks in this job can be preempted by other high priority jobs. If the value is set to True, other high priority jobs submitted to the system will take precedence and will be able requeue tasks from this job. You can update a job's allowTaskPreemption after it has been created using the update job API."
        },
        "maxParallelTasks": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of tasks that can be executed in parallel for the job. The value of maxParallelTasks must be -1 or greater than 0 if specified. If not specified, the default value is -1, which means there's no limit to the number of tasks that can be run at once. You can update a job's maxParallelTasks after it has been created using the update job API."
        },
        "displayName": {
          "type": "string",
          "description": "The display name for Jobs created under this schedule. The name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
        },
        "usesTaskDependencies": {
          "type": "boolean",
          "description": "Whether Tasks in the Job can define dependencies on each other. The default is false."
        },
        "onAllTasksComplete": {
          "$ref": "#/definitions/OnAllBatchTasksComplete",
          "description": "The action the Batch service should take when all Tasks in a Job created under this schedule are in the completed state. Note that if a Job contains no Tasks, then all Tasks are considered complete. This option is therefore most commonly used with a Job Manager task; if you want to use automatic Job termination without a Job Manager, you should initially set onAllTasksComplete to noaction and update the Job properties to set onAllTasksComplete to terminatejob once you have finished adding Tasks. The default is noaction."
        },
        "onTaskFailure": {
          "$ref": "#/definitions/OnBatchTaskFailure",
          "description": "The action the Batch service should take when any Task fails in a Job created under this schedule. A Task is considered to have failed if it have failed if has a failureInfo. A failureInfo is set if the Task completes with a non-zero exit code after exhausting its retry count, or if there was an error starting the Task, for example due to a resource file download error. The default is noaction."
        },
        "networkConfiguration": {
          "$ref": "#/definitions/BatchJobNetworkConfiguration",
          "description": "The network configuration for the Job."
        },
        "constraints": {
          "$ref": "#/definitions/BatchJobConstraints",
          "description": "The execution constraints for Jobs created under this schedule."
        },
        "jobManagerTask": {
          "$ref": "#/definitions/BatchJobManagerTask",
          "description": "The details of a Job Manager Task to be launched when a Job is started under this schedule. If the Job does not specify a Job Manager Task, the user must explicitly add Tasks to the Job using the Task API. If the Job does specify a Job Manager Task, the Batch service creates the Job Manager Task when the Job is created, and will try to schedule the Job Manager Task before scheduling other Tasks in the Job."
        },
        "jobPreparationTask": {
          "$ref": "#/definitions/BatchJobPreparationTask",
          "description": "The Job Preparation Task for Jobs created under this schedule. If a Job has a Job Preparation Task, the Batch service will run the Job Preparation Task on a Node before starting any Tasks of that Job on that Compute Node."
        },
        "jobReleaseTask": {
          "$ref": "#/definitions/BatchJobReleaseTask",
          "description": "The Job Release Task for Jobs created under this schedule. The primary purpose of the Job Release Task is to undo changes to Nodes made by the Job Preparation Task. Example activities include deleting local files, or shutting down services that were started as part of Job preparation. A Job Release Task cannot be specified without also specifying a Job Preparation Task for the Job. The Batch service runs the Job Release Task on the Compute Nodes that have run the Job Preparation Task."
        },
        "commonEnvironmentSettings": {
          "type": "array",
          "description": "A list of common environment variable settings. These environment variables are set for all Tasks in Jobs created under this schedule (including the Job Manager, Job Preparation and Job Release Tasks). Individual Tasks can override an environment setting specified here by specifying the same setting name with a different value.",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "x-ms-identifiers": []
        },
        "poolInfo": {
          "$ref": "#/definitions/BatchPoolInfo",
          "description": "The Pool on which the Batch service runs the Tasks of Jobs created under this schedule."
        },
        "metadata": {
          "type": "array",
          "description": "A list of name-value pairs associated with each Job created under this schedule as metadata. The Batch service does not assign any meaning to metadata; it is solely for the use of user code.",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "poolInfo"
      ]
    },
    "BatchJobSpecificationUpdate": {
      "type": "object",
      "description": "Specifies details of the Jobs to be created on a schedule.",
      "properties": {
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of Jobs created under this schedule. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0. This priority is used as the default for all Jobs under the Job Schedule. You can update a Job's priority after it has been created using by using the update Job API."
        },
        "allowTaskPreemption": {
          "type": "boolean",
          "description": "Whether Tasks in this job can be preempted by other high priority jobs. If the value is set to True, other high priority jobs submitted to the system will take precedence and will be able requeue tasks from this job. You can update a job's allowTaskPreemption after it has been created using the update job API."
        },
        "maxParallelTasks": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of tasks that can be executed in parallel for the job. The value of maxParallelTasks must be -1 or greater than 0 if specified. If not specified, the default value is -1, which means there's no limit to the number of tasks that can be run at once. You can update a job's maxParallelTasks after it has been created using the update job API."
        },
        "displayName": {
          "type": "string",
          "description": "The display name for Jobs created under this schedule. The name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
        },
        "usesTaskDependencies": {
          "type": "boolean",
          "description": "Whether Tasks in the Job can define dependencies on each other. The default is false."
        },
        "onAllTasksComplete": {
          "$ref": "#/definitions/OnAllBatchTasksComplete",
          "description": "The action the Batch service should take when all Tasks in a Job created under this schedule are in the completed state. Note that if a Job contains no Tasks, then all Tasks are considered complete. This option is therefore most commonly used with a Job Manager task; if you want to use automatic Job termination without a Job Manager, you should initially set onAllTasksComplete to noaction and update the Job properties to set onAllTasksComplete to terminatejob once you have finished adding Tasks. The default is noaction."
        },
        "onTaskFailure": {
          "$ref": "#/definitions/OnBatchTaskFailure",
          "description": "The action the Batch service should take when any Task fails in a Job created under this schedule. A Task is considered to have failed if it have failed if has a failureInfo. A failureInfo is set if the Task completes with a non-zero exit code after exhausting its retry count, or if there was an error starting the Task, for example due to a resource file download error. The default is noaction."
        },
        "networkConfiguration": {
          "$ref": "#/definitions/BatchJobNetworkConfigurationUpdate",
          "description": "The network configuration for the Job."
        },
        "constraints": {
          "$ref": "#/definitions/BatchJobConstraints",
          "description": "The execution constraints for Jobs created under this schedule."
        },
        "jobManagerTask": {
          "$ref": "#/definitions/BatchJobManagerTaskUpdate",
          "description": "The details of a Job Manager Task to be launched when a Job is started under this schedule. If the Job does not specify a Job Manager Task, the user must explicitly add Tasks to the Job using the Task API. If the Job does specify a Job Manager Task, the Batch service creates the Job Manager Task when the Job is created, and will try to schedule the Job Manager Task before scheduling other Tasks in the Job."
        },
        "jobPreparationTask": {
          "$ref": "#/definitions/BatchJobPreparationTaskUpdate",
          "description": "The Job Preparation Task for Jobs created under this schedule. If a Job has a Job Preparation Task, the Batch service will run the Job Preparation Task on a Node before starting any Tasks of that Job on that Compute Node."
        },
        "jobReleaseTask": {
          "$ref": "#/definitions/BatchJobReleaseTaskUpdate",
          "description": "The Job Release Task for Jobs created under this schedule. The primary purpose of the Job Release Task is to undo changes to Nodes made by the Job Preparation Task. Example activities include deleting local files, or shutting down services that were started as part of Job preparation. A Job Release Task cannot be specified without also specifying a Job Preparation Task for the Job. The Batch service runs the Job Release Task on the Compute Nodes that have run the Job Preparation Task."
        },
        "commonEnvironmentSettings": {
          "type": "array",
          "description": "A list of common environment variable settings. These environment variables are set for all Tasks in Jobs created under this schedule (including the Job Manager, Job Preparation and Job Release Tasks). Individual Tasks can override an environment setting specified here by specifying the same setting name with a different value.",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "x-ms-identifiers": []
        },
        "poolInfo": {
          "$ref": "#/definitions/BatchPoolInfoUpdate",
          "description": "The Pool on which the Batch service runs the Tasks of Jobs created under this schedule."
        },
        "metadata": {
          "type": "array",
          "description": "A list of name-value pairs associated with each Job created under this schedule as metadata. The Batch service does not assign any meaning to metadata; it is solely for the use of user code.",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "BatchJobState": {
      "type": "string",
      "description": "BatchJobState enums",
      "enum": [
        "active",
        "disabling",
        "disabled",
        "enabling",
        "terminating",
        "completed",
        "deleting"
      ],
      "x-ms-enum": {
        "name": "BatchJobState",
        "modelAsString": true,
        "values": [
          {
            "name": "Active",
            "value": "active",
            "description": "The Job is available to have Tasks scheduled."
          },
          {
            "name": "Disabling",
            "value": "disabling",
            "description": "A user has requested that the Job be disabled, but the disable operation is still in progress (for example, waiting for Tasks to terminate)."
          },
          {
            "name": "Disabled",
            "value": "disabled",
            "description": "A user has disabled the Job. No Tasks are running, and no new Tasks will be scheduled."
          },
          {
            "name": "Enabling",
            "value": "enabling",
            "description": "A user has requested that the Job be enabled, but the enable operation is still in progress."
          },
          {
            "name": "Terminating",
            "value": "terminating",
            "description": "The Job is about to complete, either because a Job Manager Task has completed or because the user has terminated the Job, but the terminate operation is still in progress (for example, because Job Release Tasks are running)."
          },
          {
            "name": "Completed",
            "value": "completed",
            "description": "All Tasks have terminated, and the system will not accept any more Tasks or any further changes to the Job."
          },
          {
            "name": "Deleting",
            "value": "deleting",
            "description": "A user has requested that the Job be deleted, but the delete operation is still in progress (for example, because the system is still terminating running Tasks)."
          }
        ]
      }
    },
    "BatchJobStatistics": {
      "type": "object",
      "description": "Resource usage statistics for a Job.",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL of the statistics."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the time range covered by the statistics."
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime."
        },
        "userCPUTime": {
          "type": "string",
          "format": "duration",
          "description": "The total user mode CPU time (summed across all cores and all Compute Nodes) consumed by all Tasks in the Job.",
          "x-ms-client-name": "userCpuTime"
        },
        "kernelCPUTime": {
          "type": "string",
          "format": "duration",
          "description": "The total kernel mode CPU time (summed across all cores and all Compute Nodes) consumed by all Tasks in the Job.",
          "x-ms-client-name": "kernelCpuTime"
        },
        "wallClockTime": {
          "type": "string",
          "format": "duration",
          "description": "The total wall clock time of all Tasks in the Job.  The wall clock time is the elapsed time from when the Task started running on a Compute Node to when it finished (or to the last time the statistics were updated, if the Task had not finished by then). If a Task was retried, this includes the wall clock time of all the Task retries."
        },
        "readIOps": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of disk read operations made by all Tasks in the Job."
        },
        "writeIOps": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of disk write operations made by all Tasks in the Job."
        },
        "readIOGiB": {
          "type": "number",
          "format": "float",
          "description": "The total amount of data in GiB read from disk by all Tasks in the Job."
        },
        "writeIOGiB": {
          "type": "number",
          "format": "float",
          "description": "The total amount of data in GiB written to disk by all Tasks in the Job."
        },
        "numSucceededTasks": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of Tasks successfully completed in the Job during the given time range. A Task completes successfully if it returns exit code 0."
        },
        "numFailedTasks": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of Tasks in the Job that failed during the given time range. A Task fails if it exhausts its maximum retry count without returning exit code 0."
        },
        "numTaskRetries": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of retries on all the Tasks in the Job during the given time range."
        },
        "waitTime": {
          "type": "string",
          "format": "duration",
          "description": "The total wait time of all Tasks in the Job. The wait time for a Task is defined as the elapsed time between the creation of the Task and the start of Task execution. (If the Task is retried due to failures, the wait time is the time to the most recent Task execution.) This value is only reported in the Account lifetime statistics; it is not included in the Job statistics."
        }
      },
      "required": [
        "url",
        "startTime",
        "lastUpdateTime",
        "userCPUTime",
        "kernelCPUTime",
        "wallClockTime",
        "readIOps",
        "writeIOps",
        "readIOGiB",
        "writeIOGiB",
        "numSucceededTasks",
        "numFailedTasks",
        "numTaskRetries",
        "waitTime"
      ]
    },
    "BatchJobTerminateContent": {
      "type": "object",
      "description": "Parameters for terminating an Azure Batch Job.",
      "properties": {
        "terminateReason": {
          "type": "string",
          "description": "The text you want to appear as the Job's TerminationReason. The default is 'UserTerminate'.",
          "x-ms-client-name": "terminationReason"
        }
      }
    },
    "BatchJobUpdateContent": {
      "type": "object",
      "description": "Parameters for updating an Azure Batch Job.",
      "properties": {
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the Job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. If omitted, the priority of the Job is left unchanged."
        },
        "allowTaskPreemption": {
          "type": "boolean",
          "description": "Whether Tasks in this job can be preempted by other high priority jobs. If the value is set to True, other high priority jobs submitted to the system will take precedence and will be able requeue tasks from this job. You can update a job's allowTaskPreemption after it has been created using the update job API."
        },
        "maxParallelTasks": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of tasks that can be executed in parallel for the job. The value of maxParallelTasks must be -1 or greater than 0 if specified. If not specified, the default value is -1, which means there's no limit to the number of tasks that can be run at once. You can update a job's maxParallelTasks after it has been created using the update job API."
        },
        "constraints": {
          "$ref": "#/definitions/BatchJobConstraints",
          "description": "The execution constraints for the Job. If omitted, the existing execution constraints are left unchanged."
        },
        "poolInfo": {
          "$ref": "#/definitions/BatchPoolInfoUpdate",
          "description": "The Pool on which the Batch service runs the Job's Tasks. You may change the Pool for a Job only when the Job is disabled. The Patch Job call will fail if you include the poolInfo element and the Job is not disabled. If you specify an autoPoolSpecification in the poolInfo, only the keepAlive property of the autoPoolSpecification can be updated, and then only if the autoPoolSpecification has a poolLifetimeOption of Job (other job properties can be updated as normal). If omitted, the Job continues to run on its current Pool."
        },
        "onAllTasksComplete": {
          "$ref": "#/definitions/OnAllBatchTasksComplete",
          "description": "The action the Batch service should take when all Tasks in the Job are in the completed state. If omitted, the completion behavior is left unchanged. You may not change the value from terminatejob to noaction - that is, once you have engaged automatic Job termination, you cannot turn it off again. If you try to do this, the request fails with an 'invalid property value' error response; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
        },
        "metadata": {
          "type": "array",
          "description": "A list of name-value pairs associated with the Job as metadata. If omitted, the existing Job metadata is left unchanged.",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "BatchNode": {
      "type": "object",
      "description": "A Compute Node in the Batch service.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the Compute Node. Every Compute Node that is added to a Pool is assigned a unique ID. Whenever a Compute Node is removed from a Pool, all of its local files are deleted, and the ID is reclaimed and could be reused for new Compute Nodes."
        },
        "url": {
          "type": "string",
          "description": "The URL of the Compute Node."
        },
        "state": {
          "$ref": "#/definitions/BatchNodeState",
          "description": "The current state of the Compute Node. The Spot/Low-priority Compute Node has been preempted. Tasks which were running on the Compute Node when it was preempted will be rescheduled when another Compute Node becomes available."
        },
        "schedulingState": {
          "$ref": "#/definitions/SchedulingState",
          "description": "Whether the Compute Node is available for Task scheduling."
        },
        "stateTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the Compute Node entered its current state."
        },
        "lastBootTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last time at which the Compute Node was started. This property may not be present if the Compute Node state is unusable."
        },
        "allocationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which this Compute Node was allocated to the Pool. This is the time when the Compute Node was initially allocated and doesn't change once set. It is not updated when the Compute Node is service healed or preempted."
        },
        "ipAddress": {
          "type": "string",
          "description": "The IP address that other Nodes can use to communicate with this Compute Node. Every Compute Node that is added to a Pool is assigned a unique IP address. Whenever a Compute Node is removed from a Pool, all of its local files are deleted, and the IP address is reclaimed and could be reused for new Compute Nodes."
        },
        "affinityId": {
          "type": "string",
          "description": "An identifier which can be passed when adding a Task to request that the Task be scheduled on this Compute Node. Note that this is just a soft affinity. If the target Compute Node is busy or unavailable at the time the Task is scheduled, then the Task will be scheduled elsewhere."
        },
        "vmSize": {
          "type": "string",
          "description": "The size of the virtual machine hosting the Compute Node. For information about available sizes of virtual machines in Pools, see Choose a VM size for Compute Nodes in an Azure Batch Pool (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes)."
        },
        "totalTasksRun": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of Job Tasks completed on the Compute Node. This includes Job Manager Tasks and normal Tasks, but not Job Preparation, Job Release or Start Tasks."
        },
        "runningTasksCount": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of currently running Job Tasks on the Compute Node. This includes Job Manager Tasks and normal Tasks, but not Job Preparation, Job Release or Start Tasks."
        },
        "runningTaskSlotsCount": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of scheduling slots used by currently running Job Tasks on the Compute Node. This includes Job Manager Tasks and normal Tasks, but not Job Preparation, Job Release or Start Tasks."
        },
        "totalTasksSucceeded": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of Job Tasks which completed successfully (with exitCode 0) on the Compute Node. This includes Job Manager Tasks and normal Tasks, but not Job Preparation, Job Release or Start Tasks."
        },
        "recentTasks": {
          "type": "array",
          "description": "A list of Tasks whose state has recently changed. This property is present only if at least one Task has run on this Compute Node since it was assigned to the Pool.",
          "items": {
            "$ref": "#/definitions/BatchTaskInfo"
          },
          "x-ms-identifiers": []
        },
        "startTask": {
          "$ref": "#/definitions/BatchStartTask",
          "description": "The Task specified to run on the Compute Node as it joins the Pool."
        },
        "startTaskInfo": {
          "$ref": "#/definitions/BatchStartTaskInfo",
          "description": "Runtime information about the execution of the StartTask on the Compute Node."
        },
        "errors": {
          "type": "array",
          "description": "The list of errors that are currently being encountered by the Compute Node.",
          "items": {
            "$ref": "#/definitions/BatchNodeError"
          },
          "x-ms-identifiers": []
        },
        "isDedicated": {
          "type": "boolean",
          "description": "Whether this Compute Node is a dedicated Compute Node. If false, the Compute Node is a Spot/Low-priority Compute Node."
        },
        "endpointConfiguration": {
          "$ref": "#/definitions/BatchNodeEndpointConfiguration",
          "description": "The endpoint configuration for the Compute Node."
        },
        "nodeAgentInfo": {
          "$ref": "#/definitions/BatchNodeAgentInfo",
          "description": "Information about the Compute Node agent version and the time the Compute Node upgraded to a new version."
        },
        "virtualMachineInfo": {
          "$ref": "#/definitions/VirtualMachineInfo",
          "description": "Info about the current state of the virtual machine."
        }
      }
    },
    "BatchNodeAgentInfo": {
      "type": "object",
      "description": "The Batch Compute Node agent is a program that runs on each Compute Node in the\nPool and provides Batch capability on the Compute Node.",
      "properties": {
        "version": {
          "type": "string",
          "description": "The version of the Batch Compute Node agent running on the Compute Node. This version number can be checked against the Compute Node agent release notes located at https://github.com/Azure/Batch/blob/master/changelogs/nodeagent/CHANGELOG.md."
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the Compute Node agent was updated on the Compute Node. This is the most recent time that the Compute Node agent was updated to a new version."
        }
      },
      "required": [
        "version",
        "lastUpdateTime"
      ]
    },
    "BatchNodeCommunicationMode": {
      "type": "string",
      "description": "BatchNodeCommunicationMode enums",
      "enum": [
        "default",
        "classic",
        "simplified"
      ],
      "x-ms-enum": {
        "name": "BatchNodeCommunicationMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Default",
            "value": "default",
            "description": "The node communication mode is automatically set by the Batch service."
          },
          {
            "name": "Classic",
            "value": "classic",
            "description": "Nodes using the classic communication mode require inbound TCP communication on ports 29876 and 29877 from the \"BatchNodeManagement.{region}\" service tag and outbound TCP communication on port 443 to the \"Storage.region\" and \"BatchNodeManagement.{region}\" service tags."
          },
          {
            "name": "Simplified",
            "value": "simplified",
            "description": "Nodes using the simplified communication mode require outbound TCP communication on port 443 to the \"BatchNodeManagement.{region}\" service tag. No open inbound ports are required."
          }
        ]
      }
    },
    "BatchNodeCounts": {
      "type": "object",
      "description": "The number of Compute Nodes in each Compute Node state.",
      "properties": {
        "creating": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Compute Nodes in the creating state."
        },
        "idle": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Compute Nodes in the idle state."
        },
        "offline": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Compute Nodes in the offline state."
        },
        "preempted": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Compute Nodes in the preempted state."
        },
        "rebooting": {
          "type": "integer",
          "format": "int32",
          "description": "The count of Compute Nodes in the rebooting state."
        },
        "reimaging": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Compute Nodes in the reimaging state."
        },
        "running": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Compute Nodes in the running state."
        },
        "starting": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Compute Nodes in the starting state."
        },
        "startTaskFailed": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Compute Nodes in the startTaskFailed state."
        },
        "leavingPool": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Compute Nodes in the leavingPool state."
        },
        "unknown": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Compute Nodes in the unknown state."
        },
        "unusable": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Compute Nodes in the unusable state."
        },
        "waitingForStartTask": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Compute Nodes in the waitingForStartTask state."
        },
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of Compute Nodes."
        },
        "upgradingOS": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Compute Nodes in the upgradingOS state.",
          "x-ms-client-name": "upgradingOs"
        }
      },
      "required": [
        "creating",
        "idle",
        "offline",
        "preempted",
        "rebooting",
        "reimaging",
        "running",
        "starting",
        "startTaskFailed",
        "leavingPool",
        "unknown",
        "unusable",
        "waitingForStartTask",
        "total",
        "upgradingOS"
      ]
    },
    "BatchNodeDeallocationOption": {
      "type": "string",
      "description": "BatchNodeDeallocationOption enums",
      "enum": [
        "requeue",
        "terminate",
        "taskcompletion",
        "retaineddata"
      ],
      "x-ms-enum": {
        "name": "BatchNodeDeallocationOption",
        "modelAsString": true,
        "values": [
          {
            "name": "Requeue",
            "value": "requeue",
            "description": "Terminate running Task processes and requeue the Tasks. The Tasks will run again when a Compute Node is available. Remove Compute Nodes as soon as Tasks have been terminated."
          },
          {
            "name": "Terminate",
            "value": "terminate",
            "description": "Terminate running Tasks. The Tasks will be completed with failureInfo indicating that they were terminated, and will not run again. Remove Compute Nodes as soon as Tasks have been terminated."
          },
          {
            "name": "TaskCompletion",
            "value": "taskcompletion",
            "description": "Allow currently running Tasks to complete. Schedule no new Tasks while waiting. Remove Compute Nodes when all Tasks have completed."
          },
          {
            "name": "RetainedData",
            "value": "retaineddata",
            "description": "Allow currently running Tasks to complete, then wait for all Task data retention periods to expire. Schedule no new Tasks while waiting. Remove Compute Nodes when all Task retention periods have expired."
          }
        ]
      }
    },
    "BatchNodeDisableSchedulingContent": {
      "type": "object",
      "description": "Parameters for disabling scheduling on an Azure Batch Compute Node.",
      "properties": {
        "nodeDisableSchedulingOption": {
          "$ref": "#/definitions/BatchNodeDisableSchedulingOption",
          "description": "What to do with currently running Tasks when disabling Task scheduling on the Compute Node. The default value is requeue."
        }
      }
    },
    "BatchNodeDisableSchedulingOption": {
      "type": "string",
      "description": "BatchNodeDisableSchedulingOption enums",
      "enum": [
        "requeue",
        "terminate",
        "taskcompletion"
      ],
      "x-ms-enum": {
        "name": "BatchNodeDisableSchedulingOption",
        "modelAsString": true,
        "values": [
          {
            "name": "Requeue",
            "value": "requeue",
            "description": "Terminate running Task processes and requeue the Tasks. The Tasks may run again on other Compute Nodes, or when Task scheduling is re-enabled on this Compute Node. Enter offline state as soon as Tasks have been terminated."
          },
          {
            "name": "Terminate",
            "value": "terminate",
            "description": "Terminate running Tasks. The Tasks will be completed with failureInfo indicating that they were terminated, and will not run again. Enter offline state as soon as Tasks have been terminated."
          },
          {
            "name": "TaskCompletion",
            "value": "taskcompletion",
            "description": "Allow currently running Tasks to complete. Schedule no new Tasks while waiting. Enter offline state when all Tasks have completed."
          }
        ]
      }
    },
    "BatchNodeEndpointConfiguration": {
      "type": "object",
      "description": "The endpoint configuration for the Compute Node.",
      "properties": {
        "inboundEndpoints": {
          "type": "array",
          "description": "The list of inbound endpoints that are accessible on the Compute Node.",
          "items": {
            "$ref": "#/definitions/InboundEndpoint"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "inboundEndpoints"
      ]
    },
    "BatchNodeError": {
      "type": "object",
      "description": "An error encountered by a Compute Node.",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the Compute Node error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the Compute Node error, intended to be suitable for display in a user interface."
        },
        "errorDetails": {
          "type": "array",
          "description": "The list of additional error details related to the Compute Node error.",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "BatchNodeFile": {
      "type": "object",
      "description": "Information about a file or directory on a Compute Node.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The file path."
        },
        "url": {
          "type": "string",
          "description": "The URL of the file."
        },
        "isDirectory": {
          "type": "boolean",
          "description": "Whether the object represents a directory."
        },
        "properties": {
          "$ref": "#/definitions/FileProperties",
          "description": "The file properties."
        }
      }
    },
    "BatchNodeFileListResult": {
      "type": "object",
      "description": "The result of listing the files on a Compute Node, or the files associated with\na Task on a Compute Node.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of files.",
          "items": {
            "$ref": "#/definitions/BatchNodeFile"
          },
          "x-ms-identifiers": []
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "BatchNodeFillType": {
      "type": "string",
      "description": "BatchNodeFillType enums",
      "enum": [
        "spread",
        "pack"
      ],
      "x-ms-enum": {
        "name": "BatchNodeFillType",
        "modelAsString": true,
        "values": [
          {
            "name": "Spread",
            "value": "spread",
            "description": "Tasks should be assigned evenly across all Compute Nodes in the Pool."
          },
          {
            "name": "Pack",
            "value": "pack",
            "description": "As many Tasks as possible (taskSlotsPerNode) should be assigned to each Compute Node in the Pool before any Tasks are assigned to the next Compute Node in the Pool."
          }
        ]
      }
    },
    "BatchNodeIdentityReference": {
      "type": "object",
      "description": "The reference to a user assigned identity associated with the Batch pool which\na compute node will use.",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The ARM resource id of the user assigned identity."
        }
      }
    },
    "BatchNodeInfo": {
      "type": "object",
      "description": "Information about the Compute Node on which a Task ran.",
      "properties": {
        "affinityId": {
          "type": "string",
          "description": "An identifier for the Node on which the Task ran, which can be passed when adding a Task to request that the Task be scheduled on this Compute Node."
        },
        "nodeUrl": {
          "type": "string",
          "description": "The URL of the Compute Node on which the Task ran."
        },
        "poolId": {
          "type": "string",
          "description": "The ID of the Pool on which the Task ran."
        },
        "nodeId": {
          "type": "string",
          "description": "The ID of the Compute Node on which the Task ran."
        },
        "taskRootDirectory": {
          "type": "string",
          "description": "The root directory of the Task on the Compute Node."
        },
        "taskRootDirectoryUrl": {
          "type": "string",
          "description": "The URL to the root directory of the Task on the Compute Node."
        }
      }
    },
    "BatchNodeListResult": {
      "type": "object",
      "description": "The result of listing the Compute Nodes in a Pool.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of Compute Nodes.",
          "items": {
            "$ref": "#/definitions/BatchNode"
          }
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "BatchNodePlacementConfiguration": {
      "type": "object",
      "description": "For regional placement, nodes in the pool will be allocated in the same region.\nFor zonal placement, nodes in the pool will be spread across different zones\nwith best effort balancing.",
      "properties": {
        "policy": {
          "$ref": "#/definitions/BatchNodePlacementPolicyType",
          "description": "Node placement Policy type on Batch Pools. Allocation policy used by Batch Service to provision the nodes. If not specified, Batch will use the regional policy."
        }
      }
    },
    "BatchNodePlacementPolicyType": {
      "type": "string",
      "description": "BatchNodePlacementPolicyType enums",
      "enum": [
        "regional",
        "zonal"
      ],
      "x-ms-enum": {
        "name": "BatchNodePlacementPolicyType",
        "modelAsString": true,
        "values": [
          {
            "name": "Regional",
            "value": "regional",
            "description": "All nodes in the pool will be allocated in the same region."
          },
          {
            "name": "Zonal",
            "value": "zonal",
            "description": "Nodes in the pool will be spread across different availability zones with best effort balancing."
          }
        ]
      }
    },
    "BatchNodeRebootContent": {
      "type": "object",
      "description": "Parameters for rebooting an Azure Batch Compute Node.",
      "properties": {
        "nodeRebootOption": {
          "$ref": "#/definitions/BatchNodeRebootOption",
          "description": "When to reboot the Compute Node and what to do with currently running Tasks. The default value is requeue."
        }
      }
    },
    "BatchNodeRebootOption": {
      "type": "string",
      "description": "BatchNodeRebootOption enums",
      "enum": [
        "requeue",
        "terminate",
        "taskcompletion",
        "retaineddata"
      ],
      "x-ms-enum": {
        "name": "BatchNodeRebootOption",
        "modelAsString": true,
        "values": [
          {
            "name": "Requeue",
            "value": "requeue",
            "description": "Terminate running Task processes and requeue the Tasks. The Tasks will run again when a Compute Node is available. Restart the Compute Node as soon as Tasks have been terminated."
          },
          {
            "name": "Terminate",
            "value": "terminate",
            "description": "Terminate running Tasks. The Tasks will be completed with failureInfo indicating that they were terminated, and will not run again. Restart the Compute Node as soon as Tasks have been terminated."
          },
          {
            "name": "TaskCompletion",
            "value": "taskcompletion",
            "description": "Allow currently running Tasks to complete. Schedule no new Tasks while waiting. Restart the Compute Node when all Tasks have completed."
          },
          {
            "name": "RetainedData",
            "value": "retaineddata",
            "description": "Allow currently running Tasks to complete, then wait for all Task data retention periods to expire. Schedule no new Tasks while waiting. Restart the Compute Node when all Task retention periods have expired."
          }
        ]
      }
    },
    "BatchNodeReimageOption": {
      "type": "string",
      "description": "BatchNodeReimageOption enums",
      "enum": [
        "requeue",
        "terminate",
        "taskcompletion",
        "retaineddata"
      ],
      "x-ms-enum": {
        "name": "BatchNodeReimageOption",
        "modelAsString": true,
        "values": [
          {
            "name": "Requeue",
            "value": "requeue",
            "description": "Terminate running Task processes and requeue the Tasks. The Tasks will run again when a Compute Node is available. Reimage the Compute Node as soon as Tasks have been terminated."
          },
          {
            "name": "Terminate",
            "value": "terminate",
            "description": "Terminate running Tasks. The Tasks will be completed with failureInfo indicating that they were terminated, and will not run again. Reimage the Compute Node as soon as Tasks have been terminated."
          },
          {
            "name": "TaskCompletion",
            "value": "taskcompletion",
            "description": "Allow currently running Tasks to complete. Schedule no new Tasks while waiting. Reimage the Compute Node when all Tasks have completed."
          },
          {
            "name": "RetainedData",
            "value": "retaineddata",
            "description": "Allow currently running Tasks to complete, then wait for all Task data retention periods to expire. Schedule no new Tasks while waiting. Reimage the Compute Node when all Task retention periods have expired."
          }
        ]
      }
    },
    "BatchNodeRemoteLoginSettings": {
      "type": "object",
      "description": "The remote login settings for a Compute Node.",
      "properties": {
        "remoteLoginIPAddress": {
          "type": "string",
          "description": "The IP address used for remote login to the Compute Node.",
          "x-ms-client-name": "remoteLoginIpAddress"
        },
        "remoteLoginPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port used for remote login to the Compute Node."
        }
      },
      "required": [
        "remoteLoginIPAddress",
        "remoteLoginPort"
      ]
    },
    "BatchNodeRemoveContent": {
      "type": "object",
      "description": "Parameters for removing nodes from an Azure Batch Pool.",
      "properties": {
        "nodeList": {
          "type": "array",
          "description": "A list containing the IDs of the Compute Nodes to be removed from the specified Pool. A maximum of 100 nodes may be removed per request.",
          "items": {
            "type": "string"
          }
        },
        "resizeTimeout": {
          "type": "string",
          "format": "duration",
          "description": "The timeout for removal of Compute Nodes to the Pool. The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
        },
        "nodeDeallocationOption": {
          "$ref": "#/definitions/BatchNodeDeallocationOption",
          "description": "Determines what to do with a Compute Node and its running task(s) after it has been selected for deallocation. The default value is requeue."
        }
      },
      "required": [
        "nodeList"
      ]
    },
    "BatchNodeState": {
      "type": "string",
      "description": "BatchNodeState enums",
      "enum": [
        "idle",
        "rebooting",
        "reimaging",
        "running",
        "unusable",
        "creating",
        "starting",
        "waitingforstarttask",
        "starttaskfailed",
        "unknown",
        "leavingpool",
        "offline",
        "preempted",
        "upgradingos"
      ],
      "x-ms-enum": {
        "name": "BatchNodeState",
        "modelAsString": true,
        "values": [
          {
            "name": "Idle",
            "value": "idle",
            "description": "The Compute Node is not currently running a Task."
          },
          {
            "name": "Rebooting",
            "value": "rebooting",
            "description": "The Compute Node is rebooting."
          },
          {
            "name": "Reimaging",
            "value": "reimaging",
            "description": "The Compute Node is reimaging."
          },
          {
            "name": "Running",
            "value": "running",
            "description": "The Compute Node is running one or more Tasks (other than a StartTask)."
          },
          {
            "name": "Unusable",
            "value": "unusable",
            "description": "The Compute Node cannot be used for Task execution due to errors."
          },
          {
            "name": "Creating",
            "value": "creating",
            "description": "The Batch service has obtained the underlying virtual machine from Azure Compute, but it has not yet started to join the Pool."
          },
          {
            "name": "Starting",
            "value": "starting",
            "description": "The Batch service is starting on the underlying virtual machine."
          },
          {
            "name": "WaitingForStartTask",
            "value": "waitingforstarttask",
            "description": "The StartTask has started running on the Compute Node, but waitForSuccess is set and the StartTask has not yet completed."
          },
          {
            "name": "StartTaskFailed",
            "value": "starttaskfailed",
            "description": "The StartTask has failed on the Compute Node (and exhausted all retries), and waitForSuccess is set. The Compute Node is not usable for running Tasks."
          },
          {
            "name": "Unknown",
            "value": "unknown",
            "description": "The Batch service has lost contact with the Compute Node, and does not know its true state."
          },
          {
            "name": "LeavingPool",
            "value": "leavingpool",
            "description": "The Compute Node is leaving the Pool, either because the user explicitly removed it or because the Pool is resizing or autoscaling down."
          },
          {
            "name": "Offline",
            "value": "offline",
            "description": "The Compute Node is not currently running a Task, and scheduling of new Tasks to the Compute Node is disabled."
          },
          {
            "name": "Preempted",
            "value": "preempted",
            "description": "The Spot/Low-priority Compute Node has been preempted. Tasks which were running on the Compute Node when it was preempted will be rescheduled when another Compute Node becomes available."
          },
          {
            "name": "UpgradingOS",
            "value": "upgradingos",
            "description": "The Compute Node is undergoing an OS upgrade operation."
          }
        ]
      }
    },
    "BatchNodeUserCreateContent": {
      "type": "object",
      "description": "Parameters for creating a user account for RDP or SSH access on an Azure Batch Compute Node.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The user name of the Account."
        },
        "isAdmin": {
          "type": "boolean",
          "description": "Whether the Account should be an administrator on the Compute Node. The default value is false."
        },
        "expiryTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the Account should expire. If omitted, the default is 1 day from the current time. For Linux Compute Nodes, the expiryTime has a precision up to a day."
        },
        "password": {
          "type": "string",
          "format": "password",
          "description": "The password of the Account. The password is required for Windows Compute Nodes (those created with 'virtualMachineConfiguration' using a Windows Image reference). For Linux Compute Nodes, the password can optionally be specified along with the sshPublicKey property.",
          "x-ms-secret": true
        },
        "sshPublicKey": {
          "type": "string",
          "description": "The SSH public key that can be used for remote login to the Compute Node. The public key should be compatible with OpenSSH encoding and should be base 64 encoded. This property can be specified only for Linux Compute Nodes. If this is specified for a Windows Compute Node, then the Batch service rejects the request; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
        }
      },
      "required": [
        "name"
      ]
    },
    "BatchNodeUserUpdateContent": {
      "type": "object",
      "description": "Parameters for updating a user account for RDP or SSH access on an Azure Batch Compute Node.",
      "properties": {
        "password": {
          "type": "string",
          "format": "password",
          "description": "The password of the Account. The password is required for Windows Compute Nodes (those created with 'virtualMachineConfiguration' using a Windows Image reference). For Linux Compute Nodes, the password can optionally be specified along with the sshPublicKey property. If omitted, any existing password is removed.",
          "x-ms-secret": true
        },
        "expiryTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the Account should expire. If omitted, the default is 1 day from the current time. For Linux Compute Nodes, the expiryTime has a precision up to a day."
        },
        "sshPublicKey": {
          "type": "string",
          "description": "The SSH public key that can be used for remote login to the Compute Node. The public key should be compatible with OpenSSH encoding and should be base 64 encoded. This property can be specified only for Linux Compute Nodes. If this is specified for a Windows Compute Node, then the Batch service rejects the request; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request). If omitted, any existing SSH public key is removed."
        }
      }
    },
    "BatchNodeVMExtension": {
      "type": "object",
      "description": "The configuration for virtual machine extension instance view.",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the virtual machine extension."
        },
        "vmExtension": {
          "$ref": "#/definitions/VMExtension",
          "description": "The virtual machine extension."
        },
        "instanceView": {
          "$ref": "#/definitions/VMExtensionInstanceView",
          "description": "The vm extension instance view."
        }
      }
    },
    "BatchNodeVMExtensionListResult": {
      "type": "object",
      "description": "The result of listing the Compute Node extensions in a Node.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of Compute Node extensions.",
          "items": {
            "$ref": "#/definitions/BatchNodeVMExtension"
          },
          "x-ms-identifiers": []
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "BatchPool": {
      "type": "object",
      "description": "A Pool in the Azure Batch service.",
      "properties": {
        "id": {
          "type": "string",
          "description": "A string that uniquely identifies the Pool within the Account. The ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within an Account that differ only by case).",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The display name for the Pool. The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.",
          "readOnly": true
        },
        "url": {
          "type": "string",
          "description": "The URL of the Pool.",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "description": "The ETag of the Pool. This is an opaque string. You can use it to detect whether the Pool has changed between requests. In particular, you can be pass the ETag when updating a Pool to specify that your changes should take effect only if nobody else has modified the Pool in the meantime.",
          "readOnly": true
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "The last modified time of the Pool. This is the last time at which the Pool level data, such as the targetDedicatedNodes or enableAutoscale settings, changed. It does not factor in node-level changes such as a Compute Node changing state.",
          "readOnly": true
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation time of the Pool.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/BatchPoolState",
          "description": "The current state of the Pool.",
          "readOnly": true
        },
        "stateTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the Pool entered its current state.",
          "readOnly": true
        },
        "allocationState": {
          "$ref": "#/definitions/AllocationState",
          "description": "Whether the Pool is resizing.",
          "readOnly": true
        },
        "allocationStateTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the Pool entered its current allocation state.",
          "readOnly": true
        },
        "vmSize": {
          "type": "string",
          "description": "The size of virtual machines in the Pool. All virtual machines in a Pool are the same size. For information about available sizes of virtual machines in Pools, see Choose a VM size for Compute Nodes in an Azure Batch Pool (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes).",
          "readOnly": true
        },
        "virtualMachineConfiguration": {
          "$ref": "#/definitions/VirtualMachineConfiguration",
          "description": "The virtual machine configuration for the Pool. This property must be specified.",
          "readOnly": true
        },
        "resizeTimeout": {
          "type": "string",
          "format": "duration",
          "description": "The timeout for allocation of Compute Nodes to the Pool. This is the timeout for the most recent resize operation. (The initial sizing when the Pool is created counts as a resize.) The default value is 15 minutes.",
          "readOnly": true
        },
        "resizeErrors": {
          "type": "array",
          "description": "A list of errors encountered while performing the last resize on the Pool. This property is set only if one or more errors occurred during the last Pool resize, and only when the Pool allocationState is Steady.",
          "items": {
            "$ref": "#/definitions/ResizeError"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "resourceTags": {
          "type": "object",
          "description": "The user-specified tags associated with the pool. The user-defined tags to be associated with the Azure Batch Pool. When specified, these tags are propagated to the backing Azure resources associated with the pool. This property can only be specified when the Batch account was created with the poolAllocationMode property set to 'UserSubscription'.",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "currentDedicatedNodes": {
          "type": "integer",
          "format": "int32",
          "description": "The number of dedicated Compute Nodes currently in the Pool.",
          "readOnly": true
        },
        "currentLowPriorityNodes": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Spot/Low-priority Compute Nodes currently in the Pool. Spot/Low-priority Compute Nodes which have been preempted are included in this count.",
          "readOnly": true
        },
        "targetDedicatedNodes": {
          "type": "integer",
          "format": "int32",
          "description": "The desired number of dedicated Compute Nodes in the Pool.",
          "readOnly": true
        },
        "targetLowPriorityNodes": {
          "type": "integer",
          "format": "int32",
          "description": "The desired number of Spot/Low-priority Compute Nodes in the Pool.",
          "readOnly": true
        },
        "enableAutoScale": {
          "type": "boolean",
          "description": "Whether the Pool size should automatically adjust over time. If false, at least one of targetDedicatedNodes and targetLowPriorityNodes must be specified. If true, the autoScaleFormula property is required and the Pool automatically resizes according to the formula. The default value is false.",
          "readOnly": true
        },
        "autoScaleFormula": {
          "type": "string",
          "description": "A formula for the desired number of Compute Nodes in the Pool. This property is set only if the Pool automatically scales, i.e. enableAutoScale is true.",
          "readOnly": true
        },
        "autoScaleEvaluationInterval": {
          "type": "string",
          "format": "duration",
          "description": "The time interval at which to automatically adjust the Pool size according to the autoscale formula. This property is set only if the Pool automatically scales, i.e. enableAutoScale is true.",
          "readOnly": true
        },
        "autoScaleRun": {
          "$ref": "#/definitions/AutoScaleRun",
          "description": "The results and errors from the last execution of the autoscale formula. This property is set only if the Pool automatically scales, i.e. enableAutoScale is true.",
          "readOnly": true
        },
        "enableInterNodeCommunication": {
          "type": "boolean",
          "description": "Whether the Pool permits direct communication between Compute Nodes. This imposes restrictions on which Compute Nodes can be assigned to the Pool. Specifying this value can reduce the chance of the requested number of Compute Nodes to be allocated in the Pool.",
          "readOnly": true
        },
        "networkConfiguration": {
          "$ref": "#/definitions/NetworkConfiguration",
          "description": "The network configuration for the Pool.",
          "readOnly": true
        },
        "startTask": {
          "$ref": "#/definitions/BatchStartTask",
          "description": "A Task specified to run on each Compute Node as it joins the Pool."
        },
        "applicationPackageReferences": {
          "type": "array",
          "description": "The list of Packages to be installed on each Compute Node in the Pool. Changes to Package references affect all new Nodes joining the Pool, but do not affect Compute Nodes that are already in the Pool until they are rebooted or reimaged. There is a maximum of 10 Package references on any given Pool.",
          "items": {
            "$ref": "#/definitions/BatchApplicationPackageReference"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "taskSlotsPerNode": {
          "type": "integer",
          "format": "int32",
          "description": "The number of task slots that can be used to run concurrent tasks on a single compute node in the pool. The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256.",
          "readOnly": true
        },
        "taskSchedulingPolicy": {
          "$ref": "#/definitions/BatchTaskSchedulingPolicy",
          "description": "How Tasks are distributed across Compute Nodes in a Pool. If not specified, the default is spread.",
          "readOnly": true
        },
        "userAccounts": {
          "type": "array",
          "description": "The list of user Accounts to be created on each Compute Node in the Pool.",
          "items": {
            "$ref": "#/definitions/UserAccount"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "metadata": {
          "type": "array",
          "description": "A list of name-value pairs associated with the Pool as metadata.",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "stats": {
          "$ref": "#/definitions/BatchPoolStatistics",
          "description": "Utilization and resource usage statistics for the entire lifetime of the Pool. This property is populated only if the CloudPool was retrieved with an expand clause including the 'stats' attribute; otherwise it is null. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.",
          "readOnly": true
        },
        "mountConfiguration": {
          "type": "array",
          "description": "A list of file systems to mount on each node in the pool. This supports Azure Files, NFS, CIFS/SMB, and Blobfuse.",
          "items": {
            "$ref": "#/definitions/MountConfiguration"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "identity": {
          "$ref": "#/definitions/BatchPoolIdentity",
          "description": "The identity of the Batch pool, if configured. The list of user identities associated with the Batch pool. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
          "readOnly": true
        },
        "targetNodeCommunicationMode": {
          "$ref": "#/definitions/BatchNodeCommunicationMode",
          "description": "The desired node communication mode for the pool. If omitted, the default value is Default."
        },
        "currentNodeCommunicationMode": {
          "$ref": "#/definitions/BatchNodeCommunicationMode",
          "description": "The current state of the pool communication mode.",
          "readOnly": true
        },
        "upgradePolicy": {
          "$ref": "#/definitions/UpgradePolicy",
          "description": "The upgrade policy for the Pool. Describes an upgrade policy - automatic, manual, or rolling."
        }
      }
    },
    "BatchPoolCreateContent": {
      "type": "object",
      "description": "Parameters for creating an Azure Batch Pool.",
      "properties": {
        "id": {
          "type": "string",
          "description": "A string that uniquely identifies the Pool within the Account. The ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two Pool IDs within an Account that differ only by case)."
        },
        "displayName": {
          "type": "string",
          "description": "The display name for the Pool. The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
        },
        "vmSize": {
          "type": "string",
          "description": "The size of virtual machines in the Pool. All virtual machines in a Pool are the same size. For information about available VM sizes for Pools using Images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration), see Sizes for Virtual Machines (Linux) (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/) or Sizes for Virtual Machines (Windows) (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/). Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series)."
        },
        "virtualMachineConfiguration": {
          "$ref": "#/definitions/VirtualMachineConfiguration",
          "description": "The virtual machine configuration for the Pool. This property must be specified."
        },
        "resizeTimeout": {
          "type": "string",
          "format": "duration",
          "description": "The timeout for allocation of Compute Nodes to the Pool. This timeout applies only to manual scaling; it has no effect when enableAutoScale is set to true. The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
        },
        "resourceTags": {
          "type": "object",
          "description": "The user-specified tags associated with the pool. The user-defined tags to be associated with the Azure Batch Pool. When specified, these tags are propagated to the backing Azure resources associated with the pool. This property can only be specified when the Batch account was created with the poolAllocationMode property set to 'UserSubscription'.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "targetDedicatedNodes": {
          "type": "integer",
          "format": "int32",
          "description": "The desired number of dedicated Compute Nodes in the Pool. This property must not be specified if enableAutoScale is set to true. If enableAutoScale is set to false, then you must set either targetDedicatedNodes, targetLowPriorityNodes, or both."
        },
        "targetLowPriorityNodes": {
          "type": "integer",
          "format": "int32",
          "description": "The desired number of Spot/Low-priority Compute Nodes in the Pool. This property must not be specified if enableAutoScale is set to true. If enableAutoScale is set to false, then you must set either targetDedicatedNodes, targetLowPriorityNodes, or both."
        },
        "enableAutoScale": {
          "type": "boolean",
          "description": "Whether the Pool size should automatically adjust over time. If false, at least one of targetDedicatedNodes and targetLowPriorityNodes must be specified. If true, the autoScaleFormula property is required and the Pool automatically resizes according to the formula. The default value is false."
        },
        "autoScaleFormula": {
          "type": "string",
          "description": "A formula for the desired number of Compute Nodes in the Pool. This property must not be specified if enableAutoScale is set to false. It is required if enableAutoScale is set to true. The formula is checked for validity before the Pool is created. If the formula is not valid, the Batch service rejects the request with detailed error information. For more information about specifying this formula, see 'Automatically scale Compute Nodes in an Azure Batch Pool' (https://azure.microsoft.com/documentation/articles/batch-automatic-scaling/)."
        },
        "autoScaleEvaluationInterval": {
          "type": "string",
          "format": "duration",
          "description": "The time interval at which to automatically adjust the Pool size according to the autoscale formula. The default value is 15 minutes. The minimum and maximum value are 5 minutes and 168 hours respectively. If you specify a value less than 5 minutes or greater than 168 hours, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
        },
        "enableInterNodeCommunication": {
          "type": "boolean",
          "description": "Whether the Pool permits direct communication between Compute Nodes. Enabling inter-node communication limits the maximum size of the Pool due to deployment restrictions on the Compute Nodes of the Pool. This may result in the Pool not reaching its desired size. The default value is false."
        },
        "networkConfiguration": {
          "$ref": "#/definitions/NetworkConfiguration",
          "description": "The network configuration for the Pool."
        },
        "startTask": {
          "$ref": "#/definitions/BatchStartTask",
          "description": "A Task specified to run on each Compute Node as it joins the Pool. The Task runs when the Compute Node is added to the Pool or when the Compute Node is restarted."
        },
        "applicationPackageReferences": {
          "type": "array",
          "description": "The list of Packages to be installed on each Compute Node in the Pool. When creating a pool, the package's application ID must be fully qualified (/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications/{applicationName}). Changes to Package references affect all new Nodes joining the Pool, but do not affect Compute Nodes that are already in the Pool until they are rebooted or reimaged. There is a maximum of 10 Package references on any given Pool.",
          "items": {
            "$ref": "#/definitions/BatchApplicationPackageReference"
          },
          "x-ms-identifiers": []
        },
        "taskSlotsPerNode": {
          "type": "integer",
          "format": "int32",
          "description": "The number of task slots that can be used to run concurrent tasks on a single compute node in the pool. The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256."
        },
        "taskSchedulingPolicy": {
          "$ref": "#/definitions/BatchTaskSchedulingPolicy",
          "description": "How Tasks are distributed across Compute Nodes in a Pool. If not specified, the default is spread."
        },
        "userAccounts": {
          "type": "array",
          "description": "The list of user Accounts to be created on each Compute Node in the Pool.",
          "items": {
            "$ref": "#/definitions/UserAccount"
          },
          "x-ms-identifiers": []
        },
        "metadata": {
          "type": "array",
          "description": "A list of name-value pairs associated with the Pool as metadata. The Batch service does not assign any meaning to metadata; it is solely for the use of user code.",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "x-ms-identifiers": []
        },
        "mountConfiguration": {
          "type": "array",
          "description": "Mount storage using specified file system for the entire lifetime of the pool. Mount the storage using Azure fileshare, NFS, CIFS or Blobfuse based file system.",
          "items": {
            "$ref": "#/definitions/MountConfiguration"
          },
          "x-ms-identifiers": []
        },
        "targetNodeCommunicationMode": {
          "$ref": "#/definitions/BatchNodeCommunicationMode",
          "description": "The desired node communication mode for the pool. If omitted, the default value is Default."
        },
        "upgradePolicy": {
          "$ref": "#/definitions/UpgradePolicy",
          "description": "The upgrade policy for the Pool. Describes an upgrade policy - automatic, manual, or rolling."
        }
      },
      "required": [
        "id",
        "vmSize"
      ]
    },
    "BatchPoolEnableAutoScaleContent": {
      "type": "object",
      "description": "Parameters for enabling automatic scaling on an Azure Batch Pool.",
      "properties": {
        "autoScaleFormula": {
          "type": "string",
          "description": "The formula for the desired number of Compute Nodes in the Pool. The formula is checked for validity before it is applied to the Pool. If the formula is not valid, the Batch service rejects the request with detailed error information. For more information about specifying this formula, see Automatically scale Compute Nodes in an Azure Batch Pool (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling)."
        },
        "autoScaleEvaluationInterval": {
          "type": "string",
          "format": "duration",
          "description": "The time interval at which to automatically adjust the Pool size according to the autoscale formula. The default value is 15 minutes. The minimum and maximum value are 5 minutes and 168 hours respectively. If you specify a value less than 5 minutes or greater than 168 hours, the Batch service rejects the request with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request). If you specify a new interval, then the existing autoscale evaluation schedule will be stopped and a new autoscale evaluation schedule will be started, with its starting time being the time when this request was issued."
        }
      }
    },
    "BatchPoolEndpointConfiguration": {
      "type": "object",
      "description": "The endpoint configuration for a Pool.",
      "properties": {
        "inboundNATPools": {
          "type": "array",
          "description": "A list of inbound NAT Pools that can be used to address specific ports on an individual Compute Node externally. The maximum number of inbound NAT Pools per Batch Pool is 5. If the maximum number of inbound NAT Pools is exceeded the request fails with HTTP status code 400. This cannot be specified if the IPAddressProvisioningType is NoPublicIPAddresses.",
          "items": {
            "$ref": "#/definitions/InboundNatPool"
          },
          "x-ms-client-name": "inboundNatPools",
          "x-ms-identifiers": []
        }
      },
      "required": [
        "inboundNATPools"
      ]
    },
    "BatchPoolEndpointConfigurationUpdate": {
      "type": "object",
      "description": "The endpoint configuration for a Pool.",
      "properties": {
        "inboundNATPools": {
          "type": "array",
          "description": "A list of inbound NAT Pools that can be used to address specific ports on an individual Compute Node externally. The maximum number of inbound NAT Pools per Batch Pool is 5. If the maximum number of inbound NAT Pools is exceeded the request fails with HTTP status code 400. This cannot be specified if the IPAddressProvisioningType is NoPublicIPAddresses.",
          "items": {
            "$ref": "#/definitions/InboundNatPool"
          },
          "x-ms-client-name": "inboundNatPools",
          "x-ms-identifiers": []
        }
      }
    },
    "BatchPoolEvaluateAutoScaleContent": {
      "type": "object",
      "description": "Parameters for evaluating an automatic scaling formula on an Azure Batch Pool.",
      "properties": {
        "autoScaleFormula": {
          "type": "string",
          "description": "The formula for the desired number of Compute Nodes in the Pool. The formula is validated and its results calculated, but it is not applied to the Pool. To apply the formula to the Pool, 'Enable automatic scaling on a Pool'. For more information about specifying this formula, see Automatically scale Compute Nodes in an Azure Batch Pool (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling)."
        }
      },
      "required": [
        "autoScaleFormula"
      ]
    },
    "BatchPoolIdentity": {
      "type": "object",
      "description": "The identity of the Batch pool, if configured.",
      "properties": {
        "type": {
          "$ref": "#/definitions/BatchPoolIdentityType",
          "description": "The identity of the Batch pool, if configured. The list of user identities associated with the Batch pool. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
        },
        "userAssignedIdentities": {
          "type": "array",
          "description": "The list of user identities associated with the Batch account. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
          "items": {
            "$ref": "#/definitions/UserAssignedIdentity"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "type"
      ]
    },
    "BatchPoolIdentityType": {
      "type": "string",
      "description": "BatchPoolIdentityType enums",
      "enum": [
        "UserAssigned",
        "None"
      ],
      "x-ms-enum": {
        "name": "BatchPoolIdentityType",
        "modelAsString": true,
        "values": [
          {
            "name": "UserAssigned",
            "value": "UserAssigned",
            "description": "Batch pool has user assigned identities with it."
          },
          {
            "name": "None",
            "value": "None",
            "description": "Batch pool has no identity associated with it. Setting `None` in update pool will remove existing identities."
          }
        ]
      }
    },
    "BatchPoolInfo": {
      "type": "object",
      "description": "Specifies how a Job should be assigned to a Pool.",
      "properties": {
        "poolId": {
          "type": "string",
          "description": "The ID of an existing Pool. All the Tasks of the Job will run on the specified Pool. You must ensure that the Pool referenced by this property exists. If the Pool does not exist at the time the Batch service tries to schedule a Job, no Tasks for the Job will run until you create a Pool with that id. Note that the Batch service will not reject the Job request; it will simply not run Tasks until the Pool exists. You must specify either the Pool ID or the auto Pool specification, but not both."
        },
        "autoPoolSpecification": {
          "$ref": "#/definitions/BatchAutoPoolSpecification",
          "description": "Characteristics for a temporary 'auto pool'. The Batch service will create this auto Pool when the Job is submitted. If auto Pool creation fails, the Batch service moves the Job to a completed state, and the Pool creation error is set in the Job's scheduling error property. The Batch service manages the lifetime (both creation and, unless keepAlive is specified, deletion) of the auto Pool. Any user actions that affect the lifetime of the auto Pool while the Job is active will result in unexpected behavior. You must specify either the Pool ID or the auto Pool specification, but not both."
        }
      }
    },
    "BatchPoolInfoUpdate": {
      "type": "object",
      "description": "Specifies how a Job should be assigned to a Pool.",
      "properties": {
        "poolId": {
          "type": "string",
          "description": "The ID of an existing Pool. All the Tasks of the Job will run on the specified Pool. You must ensure that the Pool referenced by this property exists. If the Pool does not exist at the time the Batch service tries to schedule a Job, no Tasks for the Job will run until you create a Pool with that id. Note that the Batch service will not reject the Job request; it will simply not run Tasks until the Pool exists. You must specify either the Pool ID or the auto Pool specification, but not both."
        },
        "autoPoolSpecification": {
          "$ref": "#/definitions/BatchAutoPoolSpecificationUpdate",
          "description": "Characteristics for a temporary 'auto pool'. The Batch service will create this auto Pool when the Job is submitted. If auto Pool creation fails, the Batch service moves the Job to a completed state, and the Pool creation error is set in the Job's scheduling error property. The Batch service manages the lifetime (both creation and, unless keepAlive is specified, deletion) of the auto Pool. Any user actions that affect the lifetime of the auto Pool while the Job is active will result in unexpected behavior. You must specify either the Pool ID or the auto Pool specification, but not both."
        }
      }
    },
    "BatchPoolLifetimeOption": {
      "type": "string",
      "description": "BatchPoolLifetimeOption enums",
      "enum": [
        "jobschedule",
        "job"
      ],
      "x-ms-enum": {
        "name": "BatchPoolLifetimeOption",
        "modelAsString": true,
        "values": [
          {
            "name": "JobSchedule",
            "value": "jobschedule",
            "description": "The Pool exists for the lifetime of the Job Schedule. The Batch Service creates the Pool when it creates the first Job on the schedule. You may apply this option only to Job Schedules, not to Jobs."
          },
          {
            "name": "Job",
            "value": "job",
            "description": "The Pool exists for the lifetime of the Job to which it is dedicated. The Batch service creates the Pool when it creates the Job. If the 'job' option is applied to a Job Schedule, the Batch service creates a new auto Pool for every Job created on the schedule."
          }
        ]
      }
    },
    "BatchPoolListResult": {
      "type": "object",
      "description": "The result of listing the Pools in an Account.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of Pools.",
          "items": {
            "$ref": "#/definitions/BatchPool"
          }
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "BatchPoolListUsageMetricsResult": {
      "type": "object",
      "description": "The result of a listing the usage metrics for an Account.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Pool usage metrics data.",
          "items": {
            "$ref": "#/definitions/BatchPoolUsageMetrics"
          },
          "x-ms-identifiers": []
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "BatchPoolNodeCounts": {
      "type": "object",
      "description": "The number of Compute Nodes in each state for a Pool.",
      "properties": {
        "poolId": {
          "type": "string",
          "description": "The ID of the Pool."
        },
        "dedicated": {
          "$ref": "#/definitions/BatchNodeCounts",
          "description": "The number of dedicated Compute Nodes in each state."
        },
        "lowPriority": {
          "$ref": "#/definitions/BatchNodeCounts",
          "description": "The number of Spot/Low-priority Compute Nodes in each state."
        }
      },
      "required": [
        "poolId"
      ]
    },
    "BatchPoolNodeCountsListResult": {
      "type": "object",
      "description": "The result of listing the Compute Node counts in the Account.",
      "properties": {
        "value": {
          "type": "array",
          "description": "A list of Compute Node counts by Pool.",
          "items": {
            "$ref": "#/definitions/BatchPoolNodeCounts"
          },
          "x-ms-identifiers": []
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "BatchPoolReplaceContent": {
      "type": "object",
      "description": "Parameters for replacing properties on an Azure Batch Pool.",
      "properties": {
        "startTask": {
          "$ref": "#/definitions/BatchStartTask",
          "description": "A Task to run on each Compute Node as it joins the Pool. The Task runs when the Compute Node is added to the Pool or when the Compute Node is restarted. If this element is present, it overwrites any existing StartTask. If omitted, any existing StartTask is removed from the Pool."
        },
        "applicationPackageReferences": {
          "type": "array",
          "description": "The list of Application Packages to be installed on each Compute Node in the Pool. The list replaces any existing Application Package references on the Pool. Changes to Application Package references affect all new Compute Nodes joining the Pool, but do not affect Compute Nodes that are already in the Pool until they are rebooted or reimaged. There is a maximum of 10 Application Package references on any given Pool. If omitted, or if you specify an empty collection, any existing Application Packages references are removed from the Pool. A maximum of 10 references may be specified on a given Pool.",
          "items": {
            "$ref": "#/definitions/BatchApplicationPackageReference"
          },
          "x-ms-identifiers": []
        },
        "metadata": {
          "type": "array",
          "description": "A list of name-value pairs associated with the Pool as metadata. This list replaces any existing metadata configured on the Pool. If omitted, or if you specify an empty collection, any existing metadata is removed from the Pool.",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "x-ms-identifiers": []
        },
        "targetNodeCommunicationMode": {
          "$ref": "#/definitions/BatchNodeCommunicationMode",
          "description": "The desired node communication mode for the pool. This setting replaces any existing targetNodeCommunication setting on the Pool. If omitted, the existing setting is default."
        }
      },
      "required": [
        "applicationPackageReferences",
        "metadata"
      ]
    },
    "BatchPoolResizeContent": {
      "type": "object",
      "description": "Parameters for changing the size of an Azure Batch Pool.",
      "properties": {
        "targetDedicatedNodes": {
          "type": "integer",
          "format": "int32",
          "description": "The desired number of dedicated Compute Nodes in the Pool."
        },
        "targetLowPriorityNodes": {
          "type": "integer",
          "format": "int32",
          "description": "The desired number of Spot/Low-priority Compute Nodes in the Pool."
        },
        "resizeTimeout": {
          "type": "string",
          "format": "duration",
          "description": "The timeout for allocation of Nodes to the Pool or removal of Compute Nodes from the Pool. The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
        },
        "nodeDeallocationOption": {
          "$ref": "#/definitions/BatchNodeDeallocationOption",
          "description": "Determines what to do with a Compute Node and its running task(s) if the Pool size is decreasing. The default value is requeue."
        }
      }
    },
    "BatchPoolResourceStatistics": {
      "type": "object",
      "description": "Statistics related to resource consumption by Compute Nodes in a Pool.",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the time range covered by the statistics."
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime."
        },
        "avgCPUPercentage": {
          "type": "number",
          "format": "float",
          "description": "The average CPU usage across all Compute Nodes in the Pool (percentage per node).",
          "x-ms-client-name": "avgCpuPercentage"
        },
        "avgMemoryGiB": {
          "type": "number",
          "format": "float",
          "description": "The average memory usage in GiB across all Compute Nodes in the Pool."
        },
        "peakMemoryGiB": {
          "type": "number",
          "format": "float",
          "description": "The peak memory usage in GiB across all Compute Nodes in the Pool."
        },
        "avgDiskGiB": {
          "type": "number",
          "format": "float",
          "description": "The average used disk space in GiB across all Compute Nodes in the Pool."
        },
        "peakDiskGiB": {
          "type": "number",
          "format": "float",
          "description": "The peak used disk space in GiB across all Compute Nodes in the Pool."
        },
        "diskReadIOps": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of disk read operations across all Compute Nodes in the Pool."
        },
        "diskWriteIOps": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of disk write operations across all Compute Nodes in the Pool."
        },
        "diskReadGiB": {
          "type": "number",
          "format": "float",
          "description": "The total amount of data in GiB of disk reads across all Compute Nodes in the Pool."
        },
        "diskWriteGiB": {
          "type": "number",
          "format": "float",
          "description": "The total amount of data in GiB of disk writes across all Compute Nodes in the Pool."
        },
        "networkReadGiB": {
          "type": "number",
          "format": "float",
          "description": "The total amount of data in GiB of network reads across all Compute Nodes in the Pool."
        },
        "networkWriteGiB": {
          "type": "number",
          "format": "float",
          "description": "The total amount of data in GiB of network writes across all Compute Nodes in the Pool."
        }
      },
      "required": [
        "startTime",
        "lastUpdateTime",
        "avgCPUPercentage",
        "avgMemoryGiB",
        "peakMemoryGiB",
        "avgDiskGiB",
        "peakDiskGiB",
        "diskReadIOps",
        "diskWriteIOps",
        "diskReadGiB",
        "diskWriteGiB",
        "networkReadGiB",
        "networkWriteGiB"
      ]
    },
    "BatchPoolSpecification": {
      "type": "object",
      "description": "Specification for creating a new Pool.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The display name for the Pool. The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
        },
        "vmSize": {
          "type": "string",
          "description": "The size of the virtual machines in the Pool. All virtual machines in a Pool are the same size. For information about available sizes of virtual machines in Pools, see Choose a VM size for Compute Nodes in an Azure Batch Pool (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes)."
        },
        "virtualMachineConfiguration": {
          "$ref": "#/definitions/VirtualMachineConfiguration",
          "description": "The virtual machine configuration for the Pool. This property must be specified if the Pool needs to be created with Azure IaaS VMs. If it is not specified then the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
        },
        "taskSlotsPerNode": {
          "type": "integer",
          "format": "int32",
          "description": "The number of task slots that can be used to run concurrent tasks on a single compute node in the pool. The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256."
        },
        "taskSchedulingPolicy": {
          "$ref": "#/definitions/BatchTaskSchedulingPolicy",
          "description": "How Tasks are distributed across Compute Nodes in a Pool. If not specified, the default is spread."
        },
        "resizeTimeout": {
          "type": "string",
          "format": "duration",
          "description": "The timeout for allocation of Compute Nodes to the Pool. This timeout applies only to manual scaling; it has no effect when enableAutoScale is set to true. The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service rejects the request with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
        },
        "resourceTags": {
          "type": "string",
          "description": "The user-specified tags associated with the pool.The user-defined tags to be associated with the Azure Batch Pool. When specified, these tags are propagated to the backing Azure resources associated with the pool. This property can only be specified when the Batch account was created with the poolAllocationMode property set to 'UserSubscription'."
        },
        "targetDedicatedNodes": {
          "type": "integer",
          "format": "int32",
          "description": "The desired number of dedicated Compute Nodes in the Pool. This property must not be specified if enableAutoScale is set to true. If enableAutoScale is set to false, then you must set either targetDedicatedNodes, targetLowPriorityNodes, or both."
        },
        "targetLowPriorityNodes": {
          "type": "integer",
          "format": "int32",
          "description": "The desired number of Spot/Low-priority Compute Nodes in the Pool. This property must not be specified if enableAutoScale is set to true. If enableAutoScale is set to false, then you must set either targetDedicatedNodes, targetLowPriorityNodes, or both."
        },
        "enableAutoScale": {
          "type": "boolean",
          "description": "Whether the Pool size should automatically adjust over time. If false, at least one of targetDedicatedNodes and targetLowPriorityNodes must be specified. If true, the autoScaleFormula element is required. The Pool automatically resizes according to the formula. The default value is false."
        },
        "autoScaleFormula": {
          "type": "string",
          "description": "The formula for the desired number of Compute Nodes in the Pool. This property must not be specified if enableAutoScale is set to false. It is required if enableAutoScale is set to true. The formula is checked for validity before the Pool is created. If the formula is not valid, the Batch service rejects the request with detailed error information."
        },
        "autoScaleEvaluationInterval": {
          "type": "string",
          "format": "duration",
          "description": "The time interval at which to automatically adjust the Pool size according to the autoscale formula. The default value is 15 minutes. The minimum and maximum value are 5 minutes and 168 hours respectively. If you specify a value less than 5 minutes or greater than 168 hours, the Batch service rejects the request with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
        },
        "enableInterNodeCommunication": {
          "type": "boolean",
          "description": "Whether the Pool permits direct communication between Compute Nodes. Enabling inter-node communication limits the maximum size of the Pool due to deployment restrictions on the Compute Nodes of the Pool. This may result in the Pool not reaching its desired size. The default value is false."
        },
        "networkConfiguration": {
          "$ref": "#/definitions/NetworkConfiguration",
          "description": "The network configuration for the Pool."
        },
        "startTask": {
          "$ref": "#/definitions/BatchStartTask",
          "description": "A Task to run on each Compute Node as it joins the Pool. The Task runs when the Compute Node is added to the Pool or when the Compute Node is restarted."
        },
        "applicationPackageReferences": {
          "type": "array",
          "description": "The list of Packages to be installed on each Compute Node in the Pool. When creating a pool, the package's application ID must be fully qualified (/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications/{applicationName}). Changes to Package references affect all new Nodes joining the Pool, but do not affect Compute Nodes that are already in the Pool until they are rebooted or reimaged. There is a maximum of 10 Package references on any given Pool.",
          "items": {
            "$ref": "#/definitions/BatchApplicationPackageReference"
          },
          "x-ms-identifiers": []
        },
        "userAccounts": {
          "type": "array",
          "description": "The list of user Accounts to be created on each Compute Node in the Pool.",
          "items": {
            "$ref": "#/definitions/UserAccount"
          },
          "x-ms-identifiers": []
        },
        "metadata": {
          "type": "array",
          "description": "A list of name-value pairs associated with the Pool as metadata. The Batch service does not assign any meaning to metadata; it is solely for the use of user code.",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "x-ms-identifiers": []
        },
        "mountConfiguration": {
          "type": "array",
          "description": "A list of file systems to mount on each node in the pool. This supports Azure Files, NFS, CIFS/SMB, and Blobfuse.",
          "items": {
            "$ref": "#/definitions/MountConfiguration"
          },
          "x-ms-identifiers": []
        },
        "targetNodeCommunicationMode": {
          "$ref": "#/definitions/BatchNodeCommunicationMode",
          "description": "The desired node communication mode for the pool. If omitted, the default value is Default."
        },
        "upgradePolicy": {
          "$ref": "#/definitions/UpgradePolicy",
          "description": "The upgrade policy for the Pool. Describes an upgrade policy - automatic, manual, or rolling."
        }
      },
      "required": [
        "vmSize"
      ]
    },
    "BatchPoolSpecificationUpdate": {
      "type": "object",
      "description": "Specification for creating a new Pool.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The display name for the Pool. The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
        },
        "vmSize": {
          "type": "string",
          "description": "The size of the virtual machines in the Pool. All virtual machines in a Pool are the same size. For information about available sizes of virtual machines in Pools, see Choose a VM size for Compute Nodes in an Azure Batch Pool (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes)."
        },
        "virtualMachineConfiguration": {
          "$ref": "#/definitions/VirtualMachineConfigurationUpdate",
          "description": "The virtual machine configuration for the Pool. This property must be specified if the Pool needs to be created with Azure IaaS VMs. If it is not specified then the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
        },
        "taskSlotsPerNode": {
          "type": "integer",
          "format": "int32",
          "description": "The number of task slots that can be used to run concurrent tasks on a single compute node in the pool. The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256."
        },
        "taskSchedulingPolicy": {
          "$ref": "#/definitions/BatchTaskSchedulingPolicyUpdate",
          "description": "How Tasks are distributed across Compute Nodes in a Pool. If not specified, the default is spread."
        },
        "resizeTimeout": {
          "type": "string",
          "format": "duration",
          "description": "The timeout for allocation of Compute Nodes to the Pool. This timeout applies only to manual scaling; it has no effect when enableAutoScale is set to true. The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service rejects the request with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
        },
        "resourceTags": {
          "type": "string",
          "description": "The user-specified tags associated with the pool.The user-defined tags to be associated with the Azure Batch Pool. When specified, these tags are propagated to the backing Azure resources associated with the pool. This property can only be specified when the Batch account was created with the poolAllocationMode property set to 'UserSubscription'."
        },
        "targetDedicatedNodes": {
          "type": "integer",
          "format": "int32",
          "description": "The desired number of dedicated Compute Nodes in the Pool. This property must not be specified if enableAutoScale is set to true. If enableAutoScale is set to false, then you must set either targetDedicatedNodes, targetLowPriorityNodes, or both."
        },
        "targetLowPriorityNodes": {
          "type": "integer",
          "format": "int32",
          "description": "The desired number of Spot/Low-priority Compute Nodes in the Pool. This property must not be specified if enableAutoScale is set to true. If enableAutoScale is set to false, then you must set either targetDedicatedNodes, targetLowPriorityNodes, or both."
        },
        "enableAutoScale": {
          "type": "boolean",
          "description": "Whether the Pool size should automatically adjust over time. If false, at least one of targetDedicatedNodes and targetLowPriorityNodes must be specified. If true, the autoScaleFormula element is required. The Pool automatically resizes according to the formula. The default value is false."
        },
        "autoScaleFormula": {
          "type": "string",
          "description": "The formula for the desired number of Compute Nodes in the Pool. This property must not be specified if enableAutoScale is set to false. It is required if enableAutoScale is set to true. The formula is checked for validity before the Pool is created. If the formula is not valid, the Batch service rejects the request with detailed error information."
        },
        "autoScaleEvaluationInterval": {
          "type": "string",
          "format": "duration",
          "description": "The time interval at which to automatically adjust the Pool size according to the autoscale formula. The default value is 15 minutes. The minimum and maximum value are 5 minutes and 168 hours respectively. If you specify a value less than 5 minutes or greater than 168 hours, the Batch service rejects the request with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
        },
        "enableInterNodeCommunication": {
          "type": "boolean",
          "description": "Whether the Pool permits direct communication between Compute Nodes. Enabling inter-node communication limits the maximum size of the Pool due to deployment restrictions on the Compute Nodes of the Pool. This may result in the Pool not reaching its desired size. The default value is false."
        },
        "networkConfiguration": {
          "$ref": "#/definitions/NetworkConfigurationUpdate",
          "description": "The network configuration for the Pool."
        },
        "startTask": {
          "$ref": "#/definitions/BatchStartTaskUpdate",
          "description": "A Task to run on each Compute Node as it joins the Pool. The Task runs when the Compute Node is added to the Pool or when the Compute Node is restarted."
        },
        "applicationPackageReferences": {
          "type": "array",
          "description": "The list of Packages to be installed on each Compute Node in the Pool. When creating a pool, the package's application ID must be fully qualified (/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications/{applicationName}). Changes to Package references affect all new Nodes joining the Pool, but do not affect Compute Nodes that are already in the Pool until they are rebooted or reimaged. There is a maximum of 10 Package references on any given Pool.",
          "items": {
            "$ref": "#/definitions/BatchApplicationPackageReference"
          },
          "x-ms-identifiers": []
        },
        "userAccounts": {
          "type": "array",
          "description": "The list of user Accounts to be created on each Compute Node in the Pool.",
          "items": {
            "$ref": "#/definitions/UserAccount"
          },
          "x-ms-identifiers": []
        },
        "metadata": {
          "type": "array",
          "description": "A list of name-value pairs associated with the Pool as metadata. The Batch service does not assign any meaning to metadata; it is solely for the use of user code.",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "x-ms-identifiers": []
        },
        "mountConfiguration": {
          "type": "array",
          "description": "A list of file systems to mount on each node in the pool. This supports Azure Files, NFS, CIFS/SMB, and Blobfuse.",
          "items": {
            "$ref": "#/definitions/MountConfiguration"
          },
          "x-ms-identifiers": []
        },
        "targetNodeCommunicationMode": {
          "$ref": "#/definitions/BatchNodeCommunicationMode",
          "description": "The desired node communication mode for the pool. If omitted, the default value is Default."
        },
        "upgradePolicy": {
          "$ref": "#/definitions/UpgradePolicyUpdate",
          "description": "The upgrade policy for the Pool. Describes an upgrade policy - automatic, manual, or rolling."
        }
      }
    },
    "BatchPoolState": {
      "type": "string",
      "description": "BatchPoolState enums",
      "enum": [
        "active",
        "deleting"
      ],
      "x-ms-enum": {
        "name": "BatchPoolState",
        "modelAsString": true,
        "values": [
          {
            "name": "Active",
            "value": "active",
            "description": "The Pool is available to run Tasks subject to the availability of Compute Nodes."
          },
          {
            "name": "Deleting",
            "value": "deleting",
            "description": "The user has requested that the Pool be deleted, but the delete operation has not yet completed."
          }
        ]
      }
    },
    "BatchPoolStatistics": {
      "type": "object",
      "description": "Contains utilization and resource usage statistics for the lifetime of a Pool.",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL for the statistics."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the time range covered by the statistics."
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime."
        },
        "usageStats": {
          "$ref": "#/definitions/BatchPoolUsageStatistics",
          "description": "Statistics related to Pool usage, such as the amount of core-time used."
        },
        "resourceStats": {
          "$ref": "#/definitions/BatchPoolResourceStatistics",
          "description": "Statistics related to resource consumption by Compute Nodes in the Pool."
        }
      },
      "required": [
        "url",
        "startTime",
        "lastUpdateTime"
      ]
    },
    "BatchPoolUpdateContent": {
      "type": "object",
      "description": "Parameters for updating an Azure Batch Pool.",
      "properties": {
        "startTask": {
          "$ref": "#/definitions/BatchStartTaskUpdate",
          "description": "A Task to run on each Compute Node as it joins the Pool. The Task runs when the Compute Node is added to the Pool or when the Compute Node is restarted. If this element is present, it overwrites any existing StartTask. If omitted, any existing StartTask is left unchanged."
        },
        "applicationPackageReferences": {
          "type": "array",
          "description": "A list of Packages to be installed on each Compute Node in the Pool. Changes to Package references affect all new Nodes joining the Pool, but do not affect Compute Nodes that are already in the Pool until they are rebooted or reimaged. If this element is present, it replaces any existing Package references. If you specify an empty collection, then all Package references are removed from the Pool. If omitted, any existing Package references are left unchanged.",
          "items": {
            "$ref": "#/definitions/BatchApplicationPackageReference"
          },
          "x-ms-identifiers": []
        },
        "metadata": {
          "type": "array",
          "description": "A list of name-value pairs associated with the Pool as metadata. If this element is present, it replaces any existing metadata configured on the Pool. If you specify an empty collection, any metadata is removed from the Pool. If omitted, any existing metadata is left unchanged.",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "x-ms-identifiers": []
        },
        "targetNodeCommunicationMode": {
          "$ref": "#/definitions/BatchNodeCommunicationMode",
          "description": "The desired node communication mode for the pool. If this element is present, it replaces the existing targetNodeCommunicationMode configured on the Pool. If omitted, any existing metadata is left unchanged."
        }
      }
    },
    "BatchPoolUsageMetrics": {
      "type": "object",
      "description": "Usage metrics for a Pool across an aggregation interval.",
      "properties": {
        "poolId": {
          "type": "string",
          "description": "The ID of the Pool whose metrics are aggregated in this entry."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the aggregation interval covered by this entry."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the aggregation interval covered by this entry."
        },
        "vmSize": {
          "type": "string",
          "description": "The size of virtual machines in the Pool. All VMs in a Pool are the same size. For information about available sizes of virtual machines in Pools, see Choose a VM size for Compute Nodes in an Azure Batch Pool (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes)."
        },
        "totalCoreHours": {
          "type": "number",
          "format": "float",
          "description": "The total core hours used in the Pool during this aggregation interval."
        }
      },
      "required": [
        "poolId",
        "startTime",
        "endTime",
        "vmSize",
        "totalCoreHours"
      ]
    },
    "BatchPoolUsageStatistics": {
      "type": "object",
      "description": "Statistics related to Pool usage information.",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the time range covered by the statistics."
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime."
        },
        "dedicatedCoreTime": {
          "type": "string",
          "format": "duration",
          "description": "The aggregated wall-clock time of the dedicated Compute Node cores being part of the Pool."
        }
      },
      "required": [
        "startTime",
        "lastUpdateTime",
        "dedicatedCoreTime"
      ]
    },
    "BatchStartTask": {
      "type": "object",
      "description": "Batch will retry Tasks when a recovery operation is triggered on a Node.\nExamples of recovery operations include (but are not limited to) when an\nunhealthy Node is rebooted or a Compute Node disappeared due to host failure.\nRetries due to recovery operations are independent of and are not counted\nagainst the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal\nretry due to a recovery operation may occur. Because of this, all Tasks should\nbe idempotent. This means Tasks need to tolerate being interrupted and\nrestarted without causing any corruption or duplicate data. The best practice\nfor long running Tasks is to use some form of checkpointing. In some cases the\nStartTask may be re-run even though the Compute Node was not rebooted. Special\ncare should be taken to avoid StartTasks which create breakaway process or\ninstall/launch services from the StartTask working directory, as this will\nblock Batch from being able to re-run the StartTask.",
      "properties": {
        "commandLine": {
          "type": "string",
          "description": "The command line of the StartTask. The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)."
        },
        "containerSettings": {
          "$ref": "#/definitions/BatchTaskContainerSettings",
          "description": "The settings for the container under which the StartTask runs. When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files."
        },
        "resourceFiles": {
          "type": "array",
          "description": "A list of files that the Batch service will download to the Compute Node before running the command line.  There is a maximum size for the list of resource files. When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers. Files listed under this element are located in the Task's working directory.",
          "items": {
            "$ref": "#/definitions/ResourceFile"
          },
          "x-ms-identifiers": []
        },
        "environmentSettings": {
          "type": "array",
          "description": "A list of environment variable settings for the StartTask.",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "x-ms-identifiers": []
        },
        "userIdentity": {
          "$ref": "#/definitions/UserIdentity",
          "description": "The user identity under which the StartTask runs. If omitted, the Task runs as a non-administrative user unique to the Task."
        },
        "maxTaskRetryCount": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of times the Task may be retried. The Batch service retries a Task if its exit code is nonzero. Note that this value specifically controls the number of retries. The Batch service will try the Task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries the Task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry the Task. If the maximum retry count is -1, the Batch service retries the Task without limit, however this is not recommended for a start task or any task. The default value is 0 (no retries)."
        },
        "waitForSuccess": {
          "type": "boolean",
          "description": "Whether the Batch service should wait for the StartTask to complete successfully (that is, to exit with exit code 0) before scheduling any Tasks on the Compute Node. If true and the StartTask fails on a Node, the Batch service retries the StartTask up to its maximum retry count (maxTaskRetryCount). If the Task has still not completed successfully after all retries, then the Batch service marks the Node unusable, and will not schedule Tasks to it. This condition can be detected via the Compute Node state and failure info details. If false, the Batch service will not wait for the StartTask to complete. In this case, other Tasks can start executing on the Compute Node while the StartTask is still running; and even if the StartTask fails, new Tasks will continue to be scheduled on the Compute Node. The default is true."
        }
      },
      "required": [
        "commandLine"
      ]
    },
    "BatchStartTaskInfo": {
      "type": "object",
      "description": "Information about a StartTask running on a Compute Node.",
      "properties": {
        "state": {
          "$ref": "#/definitions/BatchStartTaskState",
          "description": "The state of the StartTask on the Compute Node."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the StartTask started running. This value is reset every time the Task is restarted or retried (that is, this is the most recent time at which the StartTask started running)."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the StartTask stopped running. This is the end time of the most recent run of the StartTask, if that run has completed (even if that run failed and a retry is pending). This element is not present if the StartTask is currently running."
        },
        "exitCode": {
          "type": "integer",
          "format": "int32",
          "description": "The exit code of the program specified on the StartTask command line. This property is set only if the StartTask is in the completed state. In general, the exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. However, if the Batch service terminates the StartTask (due to timeout, or user termination via the API) you may see an operating system-defined exit code."
        },
        "containerInfo": {
          "$ref": "#/definitions/BatchTaskContainerExecutionInfo",
          "description": "Information about the container under which the Task is executing. This property is set only if the Task runs in a container context."
        },
        "failureInfo": {
          "$ref": "#/definitions/BatchTaskFailureInfo",
          "description": "Information describing the Task failure, if any. This property is set only if the Task is in the completed state and encountered a failure."
        },
        "retryCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of times the Task has been retried by the Batch service. Task application failures (non-zero exit code) are retried, pre-processing errors (the Task could not be run) and file upload errors are not retried. The Batch service will retry the Task up to the limit specified by the constraints."
        },
        "lastRetryTime": {
          "type": "string",
          "format": "date-time",
          "description": "The most recent time at which a retry of the Task started running. This element is present only if the Task was retried (i.e. retryCount is nonzero). If present, this is typically the same as startTime, but may be different if the Task has been restarted for reasons other than retry; for example, if the Compute Node was rebooted during a retry, then the startTime is updated but the lastRetryTime is not."
        },
        "result": {
          "$ref": "#/definitions/BatchTaskExecutionResult",
          "description": "The result of the Task execution. If the value is 'failed', then the details of the failure can be found in the failureInfo property."
        }
      },
      "required": [
        "state",
        "startTime",
        "retryCount"
      ]
    },
    "BatchStartTaskState": {
      "type": "string",
      "description": "BatchStartTaskState enums",
      "enum": [
        "running",
        "completed"
      ],
      "x-ms-enum": {
        "name": "BatchStartTaskState",
        "modelAsString": true,
        "values": [
          {
            "name": "Running",
            "value": "running",
            "description": "The StartTask is currently running."
          },
          {
            "name": "Completed",
            "value": "completed",
            "description": "The StartTask has exited with exit code 0, or the StartTask has failed and the retry limit has reached, or the StartTask process did not run due to Task preparation errors (such as resource file download failures)."
          }
        ]
      }
    },
    "BatchStartTaskUpdate": {
      "type": "object",
      "description": "Batch will retry Tasks when a recovery operation is triggered on a Node.\nExamples of recovery operations include (but are not limited to) when an\nunhealthy Node is rebooted or a Compute Node disappeared due to host failure.\nRetries due to recovery operations are independent of and are not counted\nagainst the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal\nretry due to a recovery operation may occur. Because of this, all Tasks should\nbe idempotent. This means Tasks need to tolerate being interrupted and\nrestarted without causing any corruption or duplicate data. The best practice\nfor long running Tasks is to use some form of checkpointing. In some cases the\nStartTask may be re-run even though the Compute Node was not rebooted. Special\ncare should be taken to avoid StartTasks which create breakaway process or\ninstall/launch services from the StartTask working directory, as this will\nblock Batch from being able to re-run the StartTask.",
      "properties": {
        "commandLine": {
          "type": "string",
          "description": "The command line of the StartTask. The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)."
        },
        "containerSettings": {
          "$ref": "#/definitions/BatchTaskContainerSettingsUpdate",
          "description": "The settings for the container under which the StartTask runs. When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files."
        },
        "resourceFiles": {
          "type": "array",
          "description": "A list of files that the Batch service will download to the Compute Node before running the command line.  There is a maximum size for the list of resource files. When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers. Files listed under this element are located in the Task's working directory.",
          "items": {
            "$ref": "#/definitions/ResourceFile"
          },
          "x-ms-identifiers": []
        },
        "environmentSettings": {
          "type": "array",
          "description": "A list of environment variable settings for the StartTask.",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "x-ms-identifiers": []
        },
        "userIdentity": {
          "$ref": "#/definitions/UserIdentity",
          "description": "The user identity under which the StartTask runs. If omitted, the Task runs as a non-administrative user unique to the Task."
        },
        "maxTaskRetryCount": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of times the Task may be retried. The Batch service retries a Task if its exit code is nonzero. Note that this value specifically controls the number of retries. The Batch service will try the Task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries the Task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry the Task. If the maximum retry count is -1, the Batch service retries the Task without limit, however this is not recommended for a start task or any task. The default value is 0 (no retries)."
        },
        "waitForSuccess": {
          "type": "boolean",
          "description": "Whether the Batch service should wait for the StartTask to complete successfully (that is, to exit with exit code 0) before scheduling any Tasks on the Compute Node. If true and the StartTask fails on a Node, the Batch service retries the StartTask up to its maximum retry count (maxTaskRetryCount). If the Task has still not completed successfully after all retries, then the Batch service marks the Node unusable, and will not schedule Tasks to it. This condition can be detected via the Compute Node state and failure info details. If false, the Batch service will not wait for the StartTask to complete. In this case, other Tasks can start executing on the Compute Node while the StartTask is still running; and even if the StartTask fails, new Tasks will continue to be scheduled on the Compute Node. The default is true."
        }
      }
    },
    "BatchSubtask": {
      "type": "object",
      "description": "Information about an Azure Batch subtask.",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The ID of the subtask."
        },
        "nodeInfo": {
          "$ref": "#/definitions/BatchNodeInfo",
          "description": "Information about the Compute Node on which the subtask ran."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the subtask started running. If the subtask has been restarted or retried, this is the most recent time at which the subtask started running."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the subtask completed. This property is set only if the subtask is in the Completed state."
        },
        "exitCode": {
          "type": "integer",
          "format": "int32",
          "description": "The exit code of the program specified on the subtask command line. This property is set only if the subtask is in the completed state. In general, the exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. However, if the Batch service terminates the subtask (due to timeout, or user termination via the API) you may see an operating system-defined exit code."
        },
        "containerInfo": {
          "$ref": "#/definitions/BatchTaskContainerExecutionInfo",
          "description": "Information about the container under which the Task is executing. This property is set only if the Task runs in a container context."
        },
        "failureInfo": {
          "$ref": "#/definitions/BatchTaskFailureInfo",
          "description": "Information describing the Task failure, if any. This property is set only if the Task is in the completed state and encountered a failure."
        },
        "state": {
          "$ref": "#/definitions/BatchSubtaskState",
          "description": "The current state of the subtask."
        },
        "stateTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the subtask entered its current state."
        },
        "previousState": {
          "$ref": "#/definitions/BatchSubtaskState",
          "description": "The previous state of the subtask. This property is not set if the subtask is in its initial running state."
        },
        "previousStateTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the subtask entered its previous state. This property is not set if the subtask is in its initial running state."
        },
        "result": {
          "$ref": "#/definitions/BatchTaskExecutionResult",
          "description": "The result of the Task execution. If the value is 'failed', then the details of the failure can be found in the failureInfo property."
        }
      }
    },
    "BatchSubtaskState": {
      "type": "string",
      "description": "BatchSubtaskState enums",
      "enum": [
        "preparing",
        "running",
        "completed"
      ],
      "x-ms-enum": {
        "name": "BatchSubtaskState",
        "modelAsString": true,
        "values": [
          {
            "name": "Preparing",
            "value": "preparing",
            "description": "The Task has been assigned to a Compute Node, but is waiting for a required Job Preparation Task to complete on the Compute Node. If the Job Preparation Task succeeds, the Task will move to running. If the Job Preparation Task fails, the Task will return to active and will be eligible to be assigned to a different Compute Node."
          },
          {
            "name": "Running",
            "value": "running",
            "description": "The Task is running on a Compute Node. This includes task-level preparation such as downloading resource files or deploying Packages specified on the Task - it does not necessarily mean that the Task command line has started executing."
          },
          {
            "name": "Completed",
            "value": "completed",
            "description": "The Task is no longer eligible to run, usually because the Task has finished successfully, or the Task has finished unsuccessfully and has exhausted its retry limit. A Task is also marked as completed if an error occurred launching the Task, or when the Task has been terminated."
          }
        ]
      }
    },
    "BatchSupportedImage": {
      "type": "object",
      "description": "A reference to the Azure Virtual Machines Marketplace Image and additional\ninformation about the Image.",
      "properties": {
        "nodeAgentSKUId": {
          "type": "string",
          "description": "The ID of the Compute Node agent SKU which the Image supports.",
          "x-ms-client-name": "nodeAgentSkuId"
        },
        "imageReference": {
          "$ref": "#/definitions/ImageReference",
          "description": "The reference to the Azure Virtual Machine's Marketplace Image."
        },
        "osType": {
          "$ref": "#/definitions/OSType",
          "description": "The type of operating system (e.g. Windows or Linux) of the Image."
        },
        "capabilities": {
          "type": "array",
          "description": "The capabilities or features which the Image supports. Not every capability of the Image is listed. Capabilities in this list are considered of special interest and are generally related to integration with other features in the Azure Batch service.",
          "items": {
            "type": "string"
          }
        },
        "batchSupportEndOfLife": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the Azure Batch service will stop accepting create Pool requests for the Image."
        },
        "verificationType": {
          "$ref": "#/definitions/ImageVerificationType",
          "description": "Whether the Azure Batch service actively verifies that the Image is compatible with the associated Compute Node agent SKU."
        }
      },
      "required": [
        "nodeAgentSKUId",
        "imageReference",
        "osType",
        "verificationType"
      ]
    },
    "BatchTask": {
      "type": "object",
      "description": "Batch will retry Tasks when a recovery operation is triggered on a Node.\nExamples of recovery operations include (but are not limited to) when an\nunhealthy Node is rebooted or a Compute Node disappeared due to host failure.\nRetries due to recovery operations are independent of and are not counted\nagainst the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal\nretry due to a recovery operation may occur. Because of this, all Tasks should\nbe idempotent. This means Tasks need to tolerate being interrupted and\nrestarted without causing any corruption or duplicate data. The best practice\nfor long running Tasks is to use some form of checkpointing.",
      "properties": {
        "id": {
          "type": "string",
          "description": "A string that uniquely identifies the Task within the Job. The ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "A display name for the Task. The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.",
          "readOnly": true
        },
        "url": {
          "type": "string",
          "description": "The URL of the Task.",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "description": "The ETag of the Task. This is an opaque string. You can use it to detect whether the Task has changed between requests. In particular, you can be pass the ETag when updating a Task to specify that your changes should take effect only if nobody else has modified the Task in the meantime.",
          "readOnly": true
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "The last modified time of the Task.",
          "readOnly": true
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation time of the Task.",
          "readOnly": true
        },
        "exitConditions": {
          "$ref": "#/definitions/ExitConditions",
          "description": "How the Batch service should respond when the Task completes.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/BatchTaskState",
          "description": "The current state of the Task.",
          "readOnly": true
        },
        "stateTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the Task entered its current state.",
          "readOnly": true
        },
        "previousState": {
          "$ref": "#/definitions/BatchTaskState",
          "description": "The previous state of the Task. This property is not set if the Task is in its initial Active state.",
          "readOnly": true
        },
        "previousStateTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the Task entered its previous state. This property is not set if the Task is in its initial Active state.",
          "readOnly": true
        },
        "commandLine": {
          "type": "string",
          "description": "The command line of the Task. For multi-instance Tasks, the command line is executed as the primary Task, after the primary Task and all subtasks have finished executing the coordination command line. The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).",
          "readOnly": true
        },
        "containerSettings": {
          "$ref": "#/definitions/BatchTaskContainerSettings",
          "description": "The settings for the container under which the Task runs. If the Pool that will run this Task has containerConfiguration set, this must be set as well. If the Pool that will run this Task doesn't have containerConfiguration set, this must not be set. When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files.",
          "readOnly": true
        },
        "resourceFiles": {
          "type": "array",
          "description": "A list of files that the Batch service will download to the Compute Node before running the command line. For multi-instance Tasks, the resource files will only be downloaded to the Compute Node on which the primary Task is executed. There is a maximum size for the list of resource files.  When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers.",
          "items": {
            "$ref": "#/definitions/ResourceFile"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "outputFiles": {
          "type": "array",
          "description": "A list of files that the Batch service will upload from the Compute Node after running the command line. For multi-instance Tasks, the files will only be uploaded from the Compute Node on which the primary Task is executed.",
          "items": {
            "$ref": "#/definitions/OutputFile"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "environmentSettings": {
          "type": "array",
          "description": "A list of environment variable settings for the Task.",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "affinityInfo": {
          "$ref": "#/definitions/AffinityInfo",
          "description": "A locality hint that can be used by the Batch service to select a Compute Node on which to start the new Task.",
          "readOnly": true
        },
        "constraints": {
          "$ref": "#/definitions/BatchTaskConstraints",
          "description": "The execution constraints that apply to this Task."
        },
        "requiredSlots": {
          "type": "integer",
          "format": "int32",
          "description": "The number of scheduling slots that the Task requires to run. The default is 1. A Task can only be scheduled to run on a compute node if the node has enough free scheduling slots available. For multi-instance Tasks, this must be 1.",
          "readOnly": true
        },
        "userIdentity": {
          "$ref": "#/definitions/UserIdentity",
          "description": "The user identity under which the Task runs. If omitted, the Task runs as a non-administrative user unique to the Task.",
          "readOnly": true
        },
        "executionInfo": {
          "$ref": "#/definitions/BatchTaskExecutionInfo",
          "description": "Information about the execution of the Task.",
          "readOnly": true
        },
        "nodeInfo": {
          "$ref": "#/definitions/BatchNodeInfo",
          "description": "Information about the Compute Node on which the Task ran.",
          "readOnly": true
        },
        "multiInstanceSettings": {
          "$ref": "#/definitions/MultiInstanceSettings",
          "description": "An object that indicates that the Task is a multi-instance Task, and contains information about how to run the multi-instance Task.",
          "readOnly": true
        },
        "stats": {
          "$ref": "#/definitions/BatchTaskStatistics",
          "description": "Resource usage statistics for the Task.",
          "readOnly": true
        },
        "dependsOn": {
          "$ref": "#/definitions/BatchTaskDependencies",
          "description": "The Tasks that this Task depends on. This Task will not be scheduled until all Tasks that it depends on have completed successfully. If any of those Tasks fail and exhaust their retry counts, this Task will never be scheduled.",
          "readOnly": true
        },
        "applicationPackageReferences": {
          "type": "array",
          "description": "A list of Packages that the Batch service will deploy to the Compute Node before running the command line. Application packages are downloaded and deployed to a shared directory, not the Task working directory. Therefore, if a referenced package is already on the Node, and is up to date, then it is not re-downloaded; the existing copy on the Compute Node is used. If a referenced Package cannot be installed, for example because the package has been deleted or because download failed, the Task fails.",
          "items": {
            "$ref": "#/definitions/BatchApplicationPackageReference"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "authenticationTokenSettings": {
          "$ref": "#/definitions/AuthenticationTokenSettings",
          "description": "The settings for an authentication token that the Task can use to perform Batch service operations. If this property is set, the Batch service provides the Task with an authentication token which can be used to authenticate Batch service operations without requiring an Account access key. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN environment variable. The operations that the Task can carry out using the token depend on the settings. For example, a Task can request Job permissions in order to add other Tasks to the Job, or check the status of the Job or of other Tasks under the Job.",
          "readOnly": true
        }
      }
    },
    "BatchTaskAddCollectionResult": {
      "type": "object",
      "description": "The result of adding a collection of Tasks to a Job.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The results of the add Task collection operation.",
          "items": {
            "$ref": "#/definitions/BatchTaskAddResult"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "BatchTaskAddResult": {
      "type": "object",
      "description": "Result for a single Task added as part of an add Task collection operation.",
      "properties": {
        "status": {
          "$ref": "#/definitions/BatchTaskAddStatus",
          "description": "The status of the add Task request."
        },
        "taskId": {
          "type": "string",
          "description": "The ID of the Task for which this is the result."
        },
        "eTag": {
          "type": "string",
          "description": "The ETag of the Task, if the Task was successfully added. You can use this to detect whether the Task has changed between requests. In particular, you can be pass the ETag with an Update Task request to specify that your changes should take effect only if nobody else has modified the Job in the meantime."
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "The last modified time of the Task."
        },
        "location": {
          "type": "string",
          "description": "The URL of the Task, if the Task was successfully added."
        },
        "error": {
          "$ref": "#/definitions/BatchError",
          "description": "The error encountered while attempting to add the Task."
        }
      },
      "required": [
        "status",
        "taskId"
      ]
    },
    "BatchTaskAddStatus": {
      "type": "string",
      "description": "BatchTaskAddStatus enums",
      "enum": [
        "success",
        "clienterror",
        "servererror"
      ],
      "x-ms-enum": {
        "name": "BatchTaskAddStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Success",
            "value": "success",
            "description": "The Task was added successfully."
          },
          {
            "name": "ClientError",
            "value": "clienterror",
            "description": "The Task failed to add due to a client error and should not be retried without modifying the request as appropriate."
          },
          {
            "name": "ServerError",
            "value": "servererror",
            "description": "Task failed to add due to a server error and can be retried without modification."
          }
        ]
      }
    },
    "BatchTaskConstraints": {
      "type": "object",
      "description": "Execution constraints to apply to a Task.",
      "properties": {
        "maxWallClockTime": {
          "type": "string",
          "format": "duration",
          "description": "The maximum elapsed time that the Task may run, measured from the time the Task starts. If the Task does not complete within the time limit, the Batch service terminates it. If this is not specified, there is no time limit on how long the Task may run."
        },
        "retentionTime": {
          "type": "string",
          "format": "duration",
          "description": "The minimum time to retain the Task directory on the Compute Node where it ran, from the time it completes execution. After this time, the Batch service may delete the Task directory and all its contents. The default is 7 days, i.e. the Task directory will be retained for 7 days unless the Compute Node is removed or the Job is deleted."
        },
        "maxTaskRetryCount": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of times the Task may be retried. The Batch service retries a Task if its exit code is nonzero. Note that this value specifically controls the number of retries for the Task executable due to a nonzero exit code. The Batch service will try the Task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries the Task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry the Task after the first attempt. If the maximum retry count is -1, the Batch service retries the Task without limit, however this is not recommended for a start task or any task. The default value is 0 (no retries)."
        }
      }
    },
    "BatchTaskContainerExecutionInfo": {
      "type": "object",
      "description": "Contains information about the container which a Task is executing.",
      "properties": {
        "containerId": {
          "type": "string",
          "description": "The ID of the container."
        },
        "state": {
          "type": "string",
          "description": "The state of the container. This is the state of the container according to the Docker service. It is equivalent to the status field returned by \"docker inspect\"."
        },
        "error": {
          "type": "string",
          "description": "Detailed error information about the container. This is the detailed error string from the Docker service, if available. It is equivalent to the error field returned by \"docker inspect\"."
        }
      }
    },
    "BatchTaskContainerSettings": {
      "type": "object",
      "description": "The container settings for a Task.",
      "properties": {
        "containerRunOptions": {
          "type": "string",
          "description": "Additional options to the container create command. These additional options are supplied as arguments to the \"docker create\" command, in addition to those controlled by the Batch Service."
        },
        "imageName": {
          "type": "string",
          "description": "The Image to use to create the container in which the Task will run. This is the full Image reference, as would be specified to \"docker pull\". If no tag is provided as part of the Image name, the tag \":latest\" is used as a default."
        },
        "registry": {
          "$ref": "#/definitions/ContainerRegistryReference",
          "description": "The private registry which contains the container Image. This setting can be omitted if was already provided at Pool creation."
        },
        "workingDirectory": {
          "$ref": "#/definitions/ContainerWorkingDirectory",
          "description": "The location of the container Task working directory. The default is 'taskWorkingDirectory'."
        }
      },
      "required": [
        "imageName"
      ]
    },
    "BatchTaskContainerSettingsUpdate": {
      "type": "object",
      "description": "The container settings for a Task.",
      "properties": {
        "containerRunOptions": {
          "type": "string",
          "description": "Additional options to the container create command. These additional options are supplied as arguments to the \"docker create\" command, in addition to those controlled by the Batch Service."
        },
        "imageName": {
          "type": "string",
          "description": "The Image to use to create the container in which the Task will run. This is the full Image reference, as would be specified to \"docker pull\". If no tag is provided as part of the Image name, the tag \":latest\" is used as a default."
        },
        "registry": {
          "$ref": "#/definitions/ContainerRegistryReference",
          "description": "The private registry which contains the container Image. This setting can be omitted if was already provided at Pool creation."
        },
        "workingDirectory": {
          "$ref": "#/definitions/ContainerWorkingDirectory",
          "description": "The location of the container Task working directory. The default is 'taskWorkingDirectory'."
        }
      }
    },
    "BatchTaskCounts": {
      "type": "object",
      "description": "The Task counts for a Job.",
      "properties": {
        "active": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Tasks in the active state."
        },
        "running": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Tasks in the running or preparing state."
        },
        "completed": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Tasks in the completed state."
        },
        "succeeded": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Tasks which succeeded. A Task succeeds if its result (found in the executionInfo property) is 'success'."
        },
        "failed": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Tasks which failed. A Task fails if its result (found in the executionInfo property) is 'failure'."
        }
      },
      "required": [
        "active",
        "running",
        "completed",
        "succeeded",
        "failed"
      ]
    },
    "BatchTaskCountsResult": {
      "type": "object",
      "description": "The Task and TaskSlot counts for a Job.",
      "properties": {
        "taskCounts": {
          "$ref": "#/definitions/BatchTaskCounts",
          "description": "The number of Tasks per state."
        },
        "taskSlotCounts": {
          "$ref": "#/definitions/BatchTaskSlotCounts",
          "description": "The number of TaskSlots required by Tasks per state."
        }
      },
      "required": [
        "taskCounts",
        "taskSlotCounts"
      ]
    },
    "BatchTaskCreateContent": {
      "type": "object",
      "description": "Parameters for creating an Azure Batch Task.",
      "properties": {
        "id": {
          "type": "string",
          "description": "A string that uniquely identifies the Task within the Job. The ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within a Job that differ only by case)."
        },
        "displayName": {
          "type": "string",
          "description": "A display name for the Task. The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
        },
        "exitConditions": {
          "$ref": "#/definitions/ExitConditions",
          "description": "How the Batch service should respond when the Task completes."
        },
        "commandLine": {
          "type": "string",
          "description": "The command line of the Task. For multi-instance Tasks, the command line is executed as the primary Task, after the primary Task and all subtasks have finished executing the coordination command line. The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)."
        },
        "containerSettings": {
          "$ref": "#/definitions/BatchTaskContainerSettings",
          "description": "The settings for the container under which the Task runs. If the Pool that will run this Task has containerConfiguration set, this must be set as well. If the Pool that will run this Task doesn't have containerConfiguration set, this must not be set. When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files."
        },
        "resourceFiles": {
          "type": "array",
          "description": "A list of files that the Batch service will download to the Compute Node before running the command line. For multi-instance Tasks, the resource files will only be downloaded to the Compute Node on which the primary Task is executed. There is a maximum size for the list of resource files.  When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers.",
          "items": {
            "$ref": "#/definitions/ResourceFile"
          },
          "x-ms-identifiers": []
        },
        "outputFiles": {
          "type": "array",
          "description": "A list of files that the Batch service will upload from the Compute Node after running the command line. For multi-instance Tasks, the files will only be uploaded from the Compute Node on which the primary Task is executed.",
          "items": {
            "$ref": "#/definitions/OutputFile"
          },
          "x-ms-identifiers": []
        },
        "environmentSettings": {
          "type": "array",
          "description": "A list of environment variable settings for the Task.",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "x-ms-identifiers": []
        },
        "affinityInfo": {
          "$ref": "#/definitions/AffinityInfo",
          "description": "A locality hint that can be used by the Batch service to select a Compute Node on which to start the new Task."
        },
        "constraints": {
          "$ref": "#/definitions/BatchTaskConstraints",
          "description": "The execution constraints that apply to this Task. If you do not specify constraints, the maxTaskRetryCount is the maxTaskRetryCount specified for the Job, the maxWallClockTime is infinite, and the retentionTime is 7 days."
        },
        "requiredSlots": {
          "type": "integer",
          "format": "int32",
          "description": "The number of scheduling slots that the Task required to run. The default is 1. A Task can only be scheduled to run on a compute node if the node has enough free scheduling slots available. For multi-instance Tasks, this must be 1."
        },
        "userIdentity": {
          "$ref": "#/definitions/UserIdentity",
          "description": "The user identity under which the Task runs. If omitted, the Task runs as a non-administrative user unique to the Task."
        },
        "multiInstanceSettings": {
          "$ref": "#/definitions/MultiInstanceSettings",
          "description": "An object that indicates that the Task is a multi-instance Task, and contains information about how to run the multi-instance Task."
        },
        "dependsOn": {
          "$ref": "#/definitions/BatchTaskDependencies",
          "description": "The Tasks that this Task depends on. This Task will not be scheduled until all Tasks that it depends on have completed successfully. If any of those Tasks fail and exhaust their retry counts, this Task will never be scheduled. If the Job does not have usesTaskDependencies set to true, and this element is present, the request fails with error code TaskDependenciesNotSpecifiedOnJob."
        },
        "applicationPackageReferences": {
          "type": "array",
          "description": "A list of Packages that the Batch service will deploy to the Compute Node before running the command line. Application packages are downloaded and deployed to a shared directory, not the Task working directory. Therefore, if a referenced package is already on the Node, and is up to date, then it is not re-downloaded; the existing copy on the Compute Node is used. If a referenced Package cannot be installed, for example because the package has been deleted or because download failed, the Task fails.",
          "items": {
            "$ref": "#/definitions/BatchApplicationPackageReference"
          },
          "x-ms-identifiers": []
        },
        "authenticationTokenSettings": {
          "$ref": "#/definitions/AuthenticationTokenSettings",
          "description": "The settings for an authentication token that the Task can use to perform Batch service operations. If this property is set, the Batch service provides the Task with an authentication token which can be used to authenticate Batch service operations without requiring an Account access key. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN environment variable. The operations that the Task can carry out using the token depend on the settings. For example, a Task can request Job permissions in order to add other Tasks to the Job, or check the status of the Job or of other Tasks under the Job."
        }
      },
      "required": [
        "id",
        "commandLine"
      ]
    },
    "BatchTaskDependencies": {
      "type": "object",
      "description": "Specifies any dependencies of a Task. Any Task that is explicitly specified or\nwithin a dependency range must complete before the dependant Task will be\nscheduled.",
      "properties": {
        "taskIds": {
          "type": "array",
          "description": "The list of Task IDs that this Task depends on. All Tasks in this list must complete successfully before the dependent Task can be scheduled. The taskIds collection is limited to 64000 characters total (i.e. the combined length of all Task IDs). If the taskIds collection exceeds the maximum length, the Add Task request fails with error code TaskDependencyListTooLong. In this case consider using Task ID ranges instead.",
          "items": {
            "type": "string"
          }
        },
        "taskIdRanges": {
          "type": "array",
          "description": "The list of Task ID ranges that this Task depends on. All Tasks in all ranges must complete successfully before the dependent Task can be scheduled.",
          "items": {
            "$ref": "#/definitions/BatchTaskIdRange"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "BatchTaskExecutionInfo": {
      "type": "object",
      "description": "Information about the execution of a Task.",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the Task started running. 'Running' corresponds to the running state, so if the Task specifies resource files or Packages, then the start time reflects the time at which the Task started downloading or deploying these. If the Task has been restarted or retried, this is the most recent time at which the Task started running. This property is present only for Tasks that are in the running or completed state."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the Task completed. This property is set only if the Task is in the Completed state."
        },
        "exitCode": {
          "type": "integer",
          "format": "int32",
          "description": "The exit code of the program specified on the Task command line. This property is set only if the Task is in the completed state. In general, the exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. However, if the Batch service terminates the Task (due to timeout, or user termination via the API) you may see an operating system-defined exit code."
        },
        "containerInfo": {
          "$ref": "#/definitions/BatchTaskContainerExecutionInfo",
          "description": "Information about the container under which the Task is executing. This property is set only if the Task runs in a container context."
        },
        "failureInfo": {
          "$ref": "#/definitions/BatchTaskFailureInfo",
          "description": "Information describing the Task failure, if any. This property is set only if the Task is in the completed state and encountered a failure."
        },
        "retryCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of times the Task has been retried by the Batch service. Task application failures (non-zero exit code) are retried, pre-processing errors (the Task could not be run) and file upload errors are not retried. The Batch service will retry the Task up to the limit specified by the constraints."
        },
        "lastRetryTime": {
          "type": "string",
          "format": "date-time",
          "description": "The most recent time at which a retry of the Task started running. This element is present only if the Task was retried (i.e. retryCount is nonzero). If present, this is typically the same as startTime, but may be different if the Task has been restarted for reasons other than retry; for example, if the Compute Node was rebooted during a retry, then the startTime is updated but the lastRetryTime is not."
        },
        "requeueCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of times the Task has been requeued by the Batch service as the result of a user request. When the user removes Compute Nodes from a Pool (by resizing/shrinking the pool) or when the Job is being disabled, the user can specify that running Tasks on the Compute Nodes be requeued for execution. This count tracks how many times the Task has been requeued for these reasons."
        },
        "lastRequeueTime": {
          "type": "string",
          "format": "date-time",
          "description": "The most recent time at which the Task has been requeued by the Batch service as the result of a user request. This property is set only if the requeueCount is nonzero."
        },
        "result": {
          "$ref": "#/definitions/BatchTaskExecutionResult",
          "description": "The result of the Task execution. If the value is 'failed', then the details of the failure can be found in the failureInfo property."
        }
      },
      "required": [
        "retryCount",
        "requeueCount"
      ]
    },
    "BatchTaskExecutionResult": {
      "type": "string",
      "description": "BatchTaskExecutionResult enums",
      "enum": [
        "success",
        "failure"
      ],
      "x-ms-enum": {
        "name": "BatchTaskExecutionResult",
        "modelAsString": true,
        "values": [
          {
            "name": "Success",
            "value": "success",
            "description": "The Task ran successfully."
          },
          {
            "name": "Failure",
            "value": "failure",
            "description": "There was an error during processing of the Task. The failure may have occurred before the Task process was launched, while the Task process was executing, or after the Task process exited."
          }
        ]
      }
    },
    "BatchTaskFailureInfo": {
      "type": "object",
      "description": "Information about a Task failure.",
      "properties": {
        "category": {
          "$ref": "#/definitions/ErrorCategory",
          "description": "The category of the Task error."
        },
        "code": {
          "type": "string",
          "description": "An identifier for the Task error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the Task error, intended to be suitable for display in a user interface."
        },
        "details": {
          "type": "array",
          "description": "A list of additional details related to the error.",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "category"
      ]
    },
    "BatchTaskGroup": {
      "type": "object",
      "description": "A collection of Azure Batch Tasks to add.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The collection of Tasks to add. The maximum count of Tasks is 100. The total serialized size of this collection must be less than 1MB. If it is greater than 1MB (for example if each Task has 100's of resource files or environment variables), the request will fail with code 'RequestBodyTooLarge' and should be retried again with fewer Tasks.",
          "items": {
            "$ref": "#/definitions/BatchTaskCreateContent"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "BatchTaskIdRange": {
      "type": "object",
      "description": "The start and end of the range are inclusive. For example, if a range has start\n9 and end 12, then it represents Tasks '9', '10', '11' and '12'.",
      "properties": {
        "start": {
          "type": "integer",
          "format": "int32",
          "description": "The first Task ID in the range."
        },
        "end": {
          "type": "integer",
          "format": "int32",
          "description": "The last Task ID in the range."
        }
      },
      "required": [
        "start",
        "end"
      ]
    },
    "BatchTaskInfo": {
      "type": "object",
      "description": "Information about a Task running on a Compute Node.",
      "properties": {
        "taskUrl": {
          "type": "string",
          "description": "The URL of the Task."
        },
        "jobId": {
          "type": "string",
          "description": "The ID of the Job to which the Task belongs."
        },
        "taskId": {
          "type": "string",
          "description": "The ID of the Task."
        },
        "subtaskId": {
          "type": "integer",
          "format": "int32",
          "description": "The ID of the subtask if the Task is a multi-instance Task."
        },
        "taskState": {
          "$ref": "#/definitions/BatchTaskState",
          "description": "The current state of the Task."
        },
        "executionInfo": {
          "$ref": "#/definitions/BatchTaskExecutionInfo",
          "description": "Information about the execution of the Task."
        }
      },
      "required": [
        "taskState"
      ]
    },
    "BatchTaskListResult": {
      "type": "object",
      "description": "The result of listing the Tasks in a Job.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of Tasks.",
          "items": {
            "$ref": "#/definitions/BatchTask"
          }
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "BatchTaskListSubtasksResult": {
      "type": "object",
      "description": "The result of listing the subtasks of a Task.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of subtasks.",
          "items": {
            "$ref": "#/definitions/BatchSubtask"
          }
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "BatchTaskSchedulingPolicy": {
      "type": "object",
      "description": "Specifies how Tasks should be distributed across Compute Nodes.",
      "properties": {
        "nodeFillType": {
          "$ref": "#/definitions/BatchNodeFillType",
          "description": "How Tasks are distributed across Compute Nodes in a Pool. If not specified, the default is spread."
        }
      },
      "required": [
        "nodeFillType"
      ]
    },
    "BatchTaskSchedulingPolicyUpdate": {
      "type": "object",
      "description": "Specifies how Tasks should be distributed across Compute Nodes.",
      "properties": {
        "nodeFillType": {
          "$ref": "#/definitions/BatchNodeFillType",
          "description": "How Tasks are distributed across Compute Nodes in a Pool. If not specified, the default is spread."
        }
      }
    },
    "BatchTaskSlotCounts": {
      "type": "object",
      "description": "The TaskSlot counts for a Job.",
      "properties": {
        "active": {
          "type": "integer",
          "format": "int32",
          "description": "The number of TaskSlots for active Tasks."
        },
        "running": {
          "type": "integer",
          "format": "int32",
          "description": "The number of TaskSlots for running Tasks."
        },
        "completed": {
          "type": "integer",
          "format": "int32",
          "description": "The number of TaskSlots for completed Tasks."
        },
        "succeeded": {
          "type": "integer",
          "format": "int32",
          "description": "The number of TaskSlots for succeeded Tasks."
        },
        "failed": {
          "type": "integer",
          "format": "int32",
          "description": "The number of TaskSlots for failed Tasks."
        }
      },
      "required": [
        "active",
        "running",
        "completed",
        "succeeded",
        "failed"
      ]
    },
    "BatchTaskState": {
      "type": "string",
      "description": "BatchTaskState enums",
      "enum": [
        "active",
        "preparing",
        "running",
        "completed"
      ],
      "x-ms-enum": {
        "name": "BatchTaskState",
        "modelAsString": true,
        "values": [
          {
            "name": "Active",
            "value": "active",
            "description": "The Task is queued and able to run, but is not currently assigned to a Compute Node. A Task enters this state when it is created, when it is enabled after being disabled, or when it is awaiting a retry after a failed run."
          },
          {
            "name": "Preparing",
            "value": "preparing",
            "description": "The Task has been assigned to a Compute Node, but is waiting for a required Job Preparation Task to complete on the Compute Node. If the Job Preparation Task succeeds, the Task will move to running. If the Job Preparation Task fails, the Task will return to active and will be eligible to be assigned to a different Compute Node."
          },
          {
            "name": "Running",
            "value": "running",
            "description": "The Task is running on a Compute Node. This includes task-level preparation such as downloading resource files or deploying Packages specified on the Task - it does not necessarily mean that the Task command line has started executing."
          },
          {
            "name": "Completed",
            "value": "completed",
            "description": "The Task is no longer eligible to run, usually because the Task has finished successfully, or the Task has finished unsuccessfully and has exhausted its retry limit. A Task is also marked as completed if an error occurred launching the Task, or when the Task has been terminated."
          }
        ]
      }
    },
    "BatchTaskStatistics": {
      "type": "object",
      "description": "Resource usage statistics for a Task.",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL of the statistics."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the time range covered by the statistics."
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime."
        },
        "userCPUTime": {
          "type": "string",
          "format": "duration",
          "description": "The total user mode CPU time (summed across all cores and all Compute Nodes) consumed by the Task.",
          "x-ms-client-name": "userCpuTime"
        },
        "kernelCPUTime": {
          "type": "string",
          "format": "duration",
          "description": "The total kernel mode CPU time (summed across all cores and all Compute Nodes) consumed by the Task.",
          "x-ms-client-name": "kernelCpuTime"
        },
        "wallClockTime": {
          "type": "string",
          "format": "duration",
          "description": "The total wall clock time of the Task. The wall clock time is the elapsed time from when the Task started running on a Compute Node to when it finished (or to the last time the statistics were updated, if the Task had not finished by then). If the Task was retried, this includes the wall clock time of all the Task retries."
        },
        "readIOps": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of disk read operations made by the Task."
        },
        "writeIOps": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of disk write operations made by the Task."
        },
        "readIOGiB": {
          "type": "number",
          "format": "float",
          "description": "The total gibibytes read from disk by the Task."
        },
        "writeIOGiB": {
          "type": "number",
          "format": "float",
          "description": "The total gibibytes written to disk by the Task."
        },
        "waitTime": {
          "type": "string",
          "format": "duration",
          "description": "The total wait time of the Task. The wait time for a Task is defined as the elapsed time between the creation of the Task and the start of Task execution. (If the Task is retried due to failures, the wait time is the time to the most recent Task execution.)."
        }
      },
      "required": [
        "url",
        "startTime",
        "lastUpdateTime",
        "userCPUTime",
        "kernelCPUTime",
        "wallClockTime",
        "readIOps",
        "writeIOps",
        "readIOGiB",
        "writeIOGiB",
        "waitTime"
      ]
    },
    "CachingType": {
      "type": "string",
      "description": "CachingType enums",
      "enum": [
        "none",
        "readonly",
        "readwrite"
      ],
      "x-ms-enum": {
        "name": "CachingType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "none",
            "description": "The caching mode for the disk is not enabled."
          },
          {
            "name": "ReadOnly",
            "value": "readonly",
            "description": "The caching mode for the disk is read only."
          },
          {
            "name": "ReadWrite",
            "value": "readwrite",
            "description": "The caching mode for the disk is read and write."
          }
        ]
      }
    },
    "CifsMountConfiguration": {
      "type": "object",
      "description": "Information used to connect to a CIFS file system.",
      "properties": {
        "username": {
          "type": "string",
          "description": "The user to use for authentication against the CIFS file system."
        },
        "source": {
          "type": "string",
          "description": "The URI of the file system to mount."
        },
        "relativeMountPath": {
          "type": "string",
          "description": "The relative path on the compute node where the file system will be mounted. All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable."
        },
        "mountOptions": {
          "type": "string",
          "description": "Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux."
        },
        "password": {
          "type": "string",
          "format": "password",
          "description": "The password to use for authentication against the CIFS file system.",
          "x-ms-secret": true
        }
      },
      "required": [
        "username",
        "source",
        "relativeMountPath",
        "password"
      ]
    },
    "ContainerConfiguration": {
      "type": "object",
      "description": "The configuration for container-enabled Pools.",
      "properties": {
        "type": {
          "$ref": "#/definitions/ContainerType",
          "description": "The container technology to be used."
        },
        "containerImageNames": {
          "type": "array",
          "description": "The collection of container Image names. This is the full Image reference, as would be specified to \"docker pull\". An Image will be sourced from the default Docker registry unless the Image is fully qualified with an alternative registry.",
          "items": {
            "type": "string"
          }
        },
        "containerRegistries": {
          "type": "array",
          "description": "Additional private registries from which containers can be pulled. If any Images must be downloaded from a private registry which requires credentials, then those credentials must be provided here.",
          "items": {
            "$ref": "#/definitions/ContainerRegistryReference"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "type"
      ]
    },
    "ContainerConfigurationUpdate": {
      "type": "object",
      "description": "The configuration for container-enabled Pools.",
      "properties": {
        "type": {
          "$ref": "#/definitions/ContainerType",
          "description": "The container technology to be used."
        },
        "containerImageNames": {
          "type": "array",
          "description": "The collection of container Image names. This is the full Image reference, as would be specified to \"docker pull\". An Image will be sourced from the default Docker registry unless the Image is fully qualified with an alternative registry.",
          "items": {
            "type": "string"
          }
        },
        "containerRegistries": {
          "type": "array",
          "description": "Additional private registries from which containers can be pulled. If any Images must be downloaded from a private registry which requires credentials, then those credentials must be provided here.",
          "items": {
            "$ref": "#/definitions/ContainerRegistryReference"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ContainerRegistryReference": {
      "type": "object",
      "description": "A private container registry.",
      "properties": {
        "username": {
          "type": "string",
          "description": "The user name to log into the registry server."
        },
        "password": {
          "type": "string",
          "format": "password",
          "description": "The password to log into the registry server.",
          "x-ms-secret": true
        },
        "registryServer": {
          "type": "string",
          "description": "The registry URL. If omitted, the default is \"docker.io\"."
        },
        "identityReference": {
          "$ref": "#/definitions/BatchNodeIdentityReference",
          "description": "The reference to the user assigned identity to use to access an Azure Container Registry instead of username and password."
        }
      }
    },
    "ContainerType": {
      "type": "string",
      "description": "ContainerType enums",
      "enum": [
        "dockerCompatible",
        "criCompatible"
      ],
      "x-ms-enum": {
        "name": "ContainerType",
        "modelAsString": true,
        "values": [
          {
            "name": "DockerCompatible",
            "value": "dockerCompatible",
            "description": "A Docker compatible container technology will be used to launch the containers."
          },
          {
            "name": "CriCompatible",
            "value": "criCompatible",
            "description": "A CRI based technology will be used to launch the containers."
          }
        ]
      }
    },
    "ContainerWorkingDirectory": {
      "type": "string",
      "description": "ContainerWorkingDirectory enums",
      "enum": [
        "taskWorkingDirectory",
        "containerImageDefault"
      ],
      "x-ms-enum": {
        "name": "ContainerWorkingDirectory",
        "modelAsString": true,
        "values": [
          {
            "name": "TaskWorkingDirectory",
            "value": "taskWorkingDirectory",
            "description": "Use the standard Batch service Task working directory, which will contain the Task Resource Files populated by Batch."
          },
          {
            "name": "ContainerImageDefault",
            "value": "containerImageDefault",
            "description": "Use the working directory defined in the container Image. Beware that this directory will not contain the Resource Files downloaded by Batch."
          }
        ]
      }
    },
    "DataDisk": {
      "type": "object",
      "description": "Settings which will be used by the data disks associated to Compute Nodes in\nthe Pool. When using attached data disks, you need to mount and format the\ndisks from within a VM to use them.",
      "properties": {
        "lun": {
          "type": "integer",
          "format": "int32",
          "description": "The logical unit number. The logicalUnitNumber is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct logicalUnitNumber. The value must be between 0 and 63, inclusive.",
          "x-ms-client-name": "logicalUnitNumber"
        },
        "caching": {
          "$ref": "#/definitions/CachingType",
          "description": "The type of caching to be enabled for the data disks. The default value for caching is readwrite. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/."
        },
        "diskSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "The initial disk size in gigabytes.",
          "x-ms-client-name": "diskSizeGb"
        },
        "storageAccountType": {
          "$ref": "#/definitions/StorageAccountType",
          "description": "The storage Account type to be used for the data disk. If omitted, the default is \"standard_lrs\"."
        }
      },
      "required": [
        "lun",
        "diskSizeGB"
      ]
    },
    "DependencyAction": {
      "type": "string",
      "description": "DependencyAction enums",
      "enum": [
        "satisfy",
        "block"
      ],
      "x-ms-enum": {
        "name": "DependencyAction",
        "modelAsString": true,
        "values": [
          {
            "name": "Satisfy",
            "value": "satisfy",
            "description": "Satisfy tasks waiting on this task; once all dependencies are satisfied, the task will be scheduled to run."
          },
          {
            "name": "Block",
            "value": "block",
            "description": "Blocks tasks waiting on this task, preventing them from being scheduled."
          }
        ]
      }
    },
    "DiffDiskPlacement": {
      "type": "string",
      "description": "AccessDiffDiskPlacementScope enums",
      "enum": [
        "cachedisk"
      ],
      "x-ms-enum": {
        "name": "DiffDiskPlacement",
        "modelAsString": true,
        "values": [
          {
            "name": "CacheDisk",
            "value": "cachedisk",
            "description": "The Ephemeral OS Disk is stored on the VM cache."
          }
        ]
      }
    },
    "DiffDiskSettings": {
      "type": "object",
      "description": "Specifies the ephemeral Disk Settings for the operating system disk used by the\ncompute node (VM).",
      "properties": {
        "placement": {
          "$ref": "#/definitions/DiffDiskPlacement",
          "description": "Specifies the ephemeral disk placement for operating system disk for all VMs in the pool. This property can be used by user in the request to choose the location e.g., cache disk space for Ephemeral OS disk provisioning. For more information on Ephemeral OS disk size requirements, please refer to Ephemeral OS disk size requirements for Windows VMs at https://docs.microsoft.com/en-us/azure/virtual-machines/windows/ephemeral-os-disks#size-requirements and Linux VMs at https://docs.microsoft.com/en-us/azure/virtual-machines/linux/ephemeral-os-disks#size-requirements."
        }
      }
    },
    "DisableBatchJobOption": {
      "type": "string",
      "description": "DisableBatchJobOption enums",
      "enum": [
        "requeue",
        "terminate",
        "wait"
      ],
      "x-ms-enum": {
        "name": "DisableBatchJobOption",
        "modelAsString": true,
        "values": [
          {
            "name": "Requeue",
            "value": "requeue",
            "description": "Terminate running Tasks and requeue them. The Tasks will run again when the Job is enabled."
          },
          {
            "name": "Terminate",
            "value": "terminate",
            "description": "Terminate running Tasks. The Tasks will be completed with failureInfo indicating that they were terminated, and will not run again."
          },
          {
            "name": "Wait",
            "value": "wait",
            "description": "Allow currently running Tasks to complete."
          }
        ]
      }
    },
    "DiskEncryptionConfiguration": {
      "type": "object",
      "description": "The disk encryption configuration applied on compute nodes in the pool.\nDisk encryption configuration is not supported on Linux pool created with\nAzure Compute Gallery Image.",
      "properties": {
        "targets": {
          "type": "array",
          "description": "The list of disk targets Batch Service will encrypt on the compute node. If omitted, no disks on the compute nodes in the pool will be encrypted. On Linux pool, only \"TemporaryDisk\" is supported; on Windows pool, \"OsDisk\" and \"TemporaryDisk\" must be specified.",
          "items": {
            "$ref": "#/definitions/DiskEncryptionTarget"
          }
        }
      }
    },
    "DiskEncryptionTarget": {
      "type": "string",
      "description": "DiskEncryptionTarget enums",
      "enum": [
        "osdisk",
        "temporarydisk"
      ],
      "x-ms-enum": {
        "name": "DiskEncryptionTarget",
        "modelAsString": true,
        "values": [
          {
            "name": "OsDisk",
            "value": "osdisk",
            "description": "The OS Disk on the compute node is encrypted."
          },
          {
            "name": "TemporaryDisk",
            "value": "temporarydisk",
            "description": "The temporary disk on the compute node is encrypted. On Linux this encryption applies to other partitions (such as those on mounted data disks) when encryption occurs at boot time."
          }
        ]
      }
    },
    "DynamicVNetAssignmentScope": {
      "type": "string",
      "description": "DynamicVNetAssignmentScope enums",
      "enum": [
        "none",
        "job"
      ],
      "x-ms-enum": {
        "name": "DynamicVNetAssignmentScope",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "none",
            "description": "No dynamic VNet assignment is enabled."
          },
          {
            "name": "Job",
            "value": "job",
            "description": "Dynamic VNet assignment is done per-job."
          }
        ]
      }
    },
    "ElevationLevel": {
      "type": "string",
      "description": "ElevationLevel enums",
      "enum": [
        "nonadmin",
        "admin"
      ],
      "x-ms-enum": {
        "name": "ElevationLevel",
        "modelAsString": true,
        "values": [
          {
            "name": "NonAdmin",
            "value": "nonadmin",
            "description": "The user is a standard user without elevated access."
          },
          {
            "name": "Admin",
            "value": "admin",
            "description": "The user is a user with elevated access and operates with full Administrator permissions."
          }
        ]
      }
    },
    "EnvironmentSetting": {
      "type": "object",
      "description": "An environment variable to be set on a Task process.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the environment variable."
        },
        "value": {
          "type": "string",
          "description": "The value of the environment variable."
        }
      },
      "required": [
        "name"
      ]
    },
    "ErrorCategory": {
      "type": "string",
      "description": "ErrorCategory enums",
      "enum": [
        "usererror",
        "servererror"
      ],
      "x-ms-enum": {
        "name": "ErrorCategory",
        "modelAsString": true,
        "values": [
          {
            "name": "UserError",
            "value": "usererror",
            "description": "The error is due to a user issue, such as misconfiguration."
          },
          {
            "name": "ServerError",
            "value": "servererror",
            "description": "The error is due to an internal server issue."
          }
        ]
      }
    },
    "ExitCodeMapping": {
      "type": "object",
      "description": "How the Batch service should respond if a Task exits with a particular exit\ncode.",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A process exit code."
        },
        "exitOptions": {
          "$ref": "#/definitions/ExitOptions",
          "description": "How the Batch service should respond if the Task exits with this exit code."
        }
      },
      "required": [
        "code",
        "exitOptions"
      ]
    },
    "ExitCodeRangeMapping": {
      "type": "object",
      "description": "A range of exit codes and how the Batch service should respond to exit codes\nwithin that range.",
      "properties": {
        "start": {
          "type": "integer",
          "format": "int32",
          "description": "The first exit code in the range."
        },
        "end": {
          "type": "integer",
          "format": "int32",
          "description": "The last exit code in the range."
        },
        "exitOptions": {
          "$ref": "#/definitions/ExitOptions",
          "description": "How the Batch service should respond if the Task exits with an exit code in the range start to end (inclusive)."
        }
      },
      "required": [
        "start",
        "end",
        "exitOptions"
      ]
    },
    "ExitConditions": {
      "type": "object",
      "description": "Specifies how the Batch service should respond when the Task completes.",
      "properties": {
        "exitCodes": {
          "type": "array",
          "description": "A list of individual Task exit codes and how the Batch service should respond to them.",
          "items": {
            "$ref": "#/definitions/ExitCodeMapping"
          },
          "x-ms-identifiers": []
        },
        "exitCodeRanges": {
          "type": "array",
          "description": "A list of Task exit code ranges and how the Batch service should respond to them.",
          "items": {
            "$ref": "#/definitions/ExitCodeRangeMapping"
          },
          "x-ms-identifiers": []
        },
        "preProcessingError": {
          "$ref": "#/definitions/ExitOptions",
          "description": "How the Batch service should respond if the Task fails to start due to an error."
        },
        "fileUploadError": {
          "$ref": "#/definitions/ExitOptions",
          "description": "How the Batch service should respond if a file upload error occurs. If the Task exited with an exit code that was specified via exitCodes or exitCodeRanges, and then encountered a file upload error, then the action specified by the exit code takes precedence."
        },
        "default": {
          "$ref": "#/definitions/ExitOptions",
          "description": "How the Batch service should respond if the Task fails with an exit condition not covered by any of the other properties. This value is used if the Task exits with any nonzero exit code not listed in the exitCodes or exitCodeRanges collection, with a pre-processing error if the preProcessingError property is not present, or with a file upload error if the fileUploadError property is not present. If you want non-default behavior on exit code 0, you must list it explicitly using the exitCodes or exitCodeRanges collection."
        }
      }
    },
    "ExitOptions": {
      "type": "object",
      "description": "Specifies how the Batch service responds to a particular exit condition.",
      "properties": {
        "jobAction": {
          "$ref": "#/definitions/BatchJobAction",
          "description": "An action to take on the Job containing the Task, if the Task completes with the given exit condition and the Job's onTaskFailed property is 'performExitOptionsJobAction'. The default is none for exit code 0 and terminate for all other exit conditions. If the Job's onTaskFailed property is noaction, then specifying this property returns an error and the add Task request fails with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
        },
        "dependencyAction": {
          "$ref": "#/definitions/DependencyAction",
          "description": "An action that the Batch service performs on Tasks that depend on this Task. Possible values are 'satisfy' (allowing dependent tasks to progress) and 'block' (dependent tasks continue to wait). Batch does not yet support cancellation of dependent tasks."
        }
      }
    },
    "FileProperties": {
      "type": "object",
      "description": "The properties of a file on a Compute Node.",
      "properties": {
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The file creation time. The creation time is not returned for files on Linux Compute Nodes."
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the file was last modified."
        },
        "contentLength": {
          "type": "integer",
          "format": "int64",
          "description": "The length of the file."
        },
        "contentType": {
          "type": "string",
          "description": "The content type of the file."
        },
        "fileMode": {
          "type": "string",
          "description": "The file mode attribute in octal format. The file mode is returned only for files on Linux Compute Nodes."
        }
      },
      "required": [
        "lastModified",
        "contentLength"
      ]
    },
    "HttpHeader": {
      "type": "object",
      "description": "An HTTP header name-value pair",
      "properties": {
        "name": {
          "type": "string",
          "description": "The case-insensitive name of the header to be used while uploading output files."
        },
        "value": {
          "type": "string",
          "description": "The value of the header to be used while uploading output files."
        }
      },
      "required": [
        "name"
      ]
    },
    "ImageReference": {
      "type": "object",
      "description": "A reference to an Azure Virtual Machines Marketplace Image or a Azure Compute Gallery Image.\nTo get the list of all Azure Marketplace Image references verified by Azure Batch, see the\n' List Supported Images ' operation.",
      "properties": {
        "publisher": {
          "type": "string",
          "description": "The publisher of the Azure Virtual Machines Marketplace Image. For example, Canonical or MicrosoftWindowsServer."
        },
        "offer": {
          "type": "string",
          "description": "The offer type of the Azure Virtual Machines Marketplace Image. For example, UbuntuServer or WindowsServer."
        },
        "sku": {
          "type": "string",
          "description": "The SKU of the Azure Virtual Machines Marketplace Image. For example, 18.04-LTS or 2019-Datacenter."
        },
        "version": {
          "type": "string",
          "description": "The version of the Azure Virtual Machines Marketplace Image. A value of 'latest' can be specified to select the latest version of an Image. If omitted, the default is 'latest'."
        },
        "virtualMachineImageId": {
          "type": "string",
          "description": "The ARM resource identifier of the Azure Compute Gallery Image. Compute Nodes in the Pool will be created using this Image Id. This is of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageDefinitionName}/versions/{VersionId} or /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageDefinitionName} for always defaulting to the latest image version. This property is mutually exclusive with other ImageReference properties. The Azure Compute Gallery Image must have replicas in the same region and must be in the same subscription as the Azure Batch account. If the image version is not specified in the imageId, the latest version will be used. For information about the firewall settings for the Batch Compute Node agent to communicate with the Batch service see https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration."
        },
        "exactVersion": {
          "type": "string",
          "description": "The specific version of the platform image or marketplace image used to create the node. This read-only field differs from 'version' only if the value specified for 'version' when the pool was created was 'latest'.",
          "readOnly": true
        }
      }
    },
    "ImageVerificationType": {
      "type": "string",
      "description": "ImageVerificationType enums",
      "enum": [
        "verified",
        "unverified"
      ],
      "x-ms-enum": {
        "name": "ImageVerificationType",
        "modelAsString": true,
        "values": [
          {
            "name": "Verified",
            "value": "verified",
            "description": "The Image is guaranteed to be compatible with the associated Compute Node agent SKU and all Batch features have been confirmed to work as expected."
          },
          {
            "name": "Unverified",
            "value": "unverified",
            "description": "The associated Compute Node agent SKU should have binary compatibility with the Image, but specific functionality has not been verified."
          }
        ]
      }
    },
    "InboundEndpoint": {
      "type": "object",
      "description": "An inbound endpoint on a Compute Node.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the endpoint."
        },
        "protocol": {
          "$ref": "#/definitions/InboundEndpointProtocol",
          "description": "The protocol of the endpoint."
        },
        "publicIPAddress": {
          "type": "string",
          "description": "The public IP address of the Compute Node.",
          "x-ms-client-name": "publicIpAddress"
        },
        "publicFQDN": {
          "type": "string",
          "description": "The public fully qualified domain name for the Compute Node."
        },
        "frontendPort": {
          "type": "integer",
          "format": "int32",
          "description": "The public port number of the endpoint."
        },
        "backendPort": {
          "type": "integer",
          "format": "int32",
          "description": "The backend port number of the endpoint."
        }
      },
      "required": [
        "name",
        "protocol",
        "publicIPAddress",
        "publicFQDN",
        "frontendPort",
        "backendPort"
      ]
    },
    "InboundEndpointProtocol": {
      "type": "string",
      "description": "InboundEndpointProtocol enums",
      "enum": [
        "tcp",
        "udp"
      ],
      "x-ms-enum": {
        "name": "InboundEndpointProtocol",
        "modelAsString": true,
        "values": [
          {
            "name": "Tcp",
            "value": "tcp",
            "description": "Use TCP for the endpoint."
          },
          {
            "name": "Udp",
            "value": "udp",
            "description": "Use UDP for the endpoint."
          }
        ]
      }
    },
    "InboundNatPool": {
      "type": "object",
      "description": "A inbound NAT Pool that can be used to address specific ports on Compute Nodes\nin a Batch Pool externally.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the endpoint. The name must be unique within a Batch Pool, can contain letters, numbers, underscores, periods, and hyphens. Names must start with a letter or number, must end with a letter, number, or underscore, and cannot exceed 77 characters.  If any invalid values are provided the request fails with HTTP status code 400."
        },
        "protocol": {
          "$ref": "#/definitions/InboundEndpointProtocol",
          "description": "The protocol of the endpoint."
        },
        "backendPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port number on the Compute Node. This must be unique within a Batch Pool. Acceptable values are between 1 and 65535 except for 22, 3389, 29876 and 29877 as these are reserved. If any reserved values are provided the request fails with HTTP status code 400."
        },
        "frontendPortRangeStart": {
          "type": "integer",
          "format": "int32",
          "description": "The first port number in the range of external ports that will be used to provide inbound access to the backendPort on individual Compute Nodes. Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved. All ranges within a Pool must be distinct and cannot overlap. Each range must contain at least 40 ports. If any reserved or overlapping values are provided the request fails with HTTP status code 400."
        },
        "frontendPortRangeEnd": {
          "type": "integer",
          "format": "int32",
          "description": "The last port number in the range of external ports that will be used to provide inbound access to the backendPort on individual Compute Nodes. Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved by the Batch service. All ranges within a Pool must be distinct and cannot overlap. Each range must contain at least 40 ports. If any reserved or overlapping values are provided the request fails with HTTP status code 400."
        },
        "networkSecurityGroupRules": {
          "type": "array",
          "description": "A list of network security group rules that will be applied to the endpoint. The maximum number of rules that can be specified across all the endpoints on a Batch Pool is 25. If no network security group rules are specified, a default rule will be created to allow inbound access to the specified backendPort. If the maximum number of network security group rules is exceeded the request fails with HTTP status code 400.",
          "items": {
            "$ref": "#/definitions/NetworkSecurityGroupRule"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "name",
        "protocol",
        "backendPort",
        "frontendPortRangeStart",
        "frontendPortRangeEnd"
      ]
    },
    "InstanceViewStatus": {
      "type": "object",
      "description": "The instance view status.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The status code."
        },
        "displayStatus": {
          "type": "string",
          "description": "The localized label for the status."
        },
        "level": {
          "$ref": "#/definitions/StatusLevelTypes",
          "description": "Level code."
        },
        "message": {
          "type": "string",
          "description": "The detailed status message."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The time of the status."
        }
      }
    },
    "IpAddressProvisioningType": {
      "type": "string",
      "description": "IPAddressProvisioningType enums",
      "enum": [
        "batchmanaged",
        "usermanaged",
        "nopublicipaddresses"
      ],
      "x-ms-enum": {
        "name": "IpAddressProvisioningType",
        "modelAsString": true,
        "values": [
          {
            "name": "BatchManaged",
            "value": "batchmanaged",
            "description": "A public IP will be created and managed by Batch. There may be multiple public IPs depending on the size of the Pool."
          },
          {
            "name": "UserManaged",
            "value": "usermanaged",
            "description": "Public IPs are provided by the user and will be used to provision the Compute Nodes."
          },
          {
            "name": "NoPublicIpAddresses",
            "value": "nopublicipaddresses",
            "description": "No public IP Address will be created."
          }
        ]
      }
    },
    "LinuxUserConfiguration": {
      "type": "object",
      "description": "Properties used to create a user Account on a Linux Compute Node.",
      "properties": {
        "uid": {
          "type": "integer",
          "format": "int32",
          "description": "The user ID of the user Account. The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the uid."
        },
        "gid": {
          "type": "integer",
          "format": "int32",
          "description": "The group ID for the user Account. The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the gid."
        },
        "sshPrivateKey": {
          "type": "string",
          "format": "password",
          "description": "The SSH private key for the user Account. The private key must not be password protected. The private key is used to automatically configure asymmetric-key based authentication for SSH between Compute Nodes in a Linux Pool when the Pool's enableInterNodeCommunication property is true (it is ignored if enableInterNodeCommunication is false). It does this by placing the key pair into the user's .ssh directory. If not specified, password-less SSH is not configured between Compute Nodes (no modification of the user's .ssh directory is done).",
          "x-ms-secret": true
        }
      }
    },
    "LoginMode": {
      "type": "string",
      "description": "LoginMode enums",
      "enum": [
        "batch",
        "interactive"
      ],
      "x-ms-enum": {
        "name": "LoginMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Batch",
            "value": "batch",
            "description": "The LOGON32_LOGON_BATCH Win32 login mode. The batch login mode is recommended for long running parallel processes."
          },
          {
            "name": "Interactive",
            "value": "interactive",
            "description": "The LOGON32_LOGON_INTERACTIVE Win32 login mode. UAC is enabled on Windows VirtualMachineConfiguration Pools. If this option is used with an elevated user identity in a Windows VirtualMachineConfiguration Pool, the user session will not be elevated unless the application executed by the Task command line is configured to always require administrative privilege or to always require maximum privilege."
          }
        ]
      }
    },
    "ManagedDisk": {
      "type": "object",
      "description": "The managed disk parameters.",
      "properties": {
        "storageAccountType": {
          "$ref": "#/definitions/StorageAccountType",
          "description": "The storage account type for managed disk."
        }
      },
      "required": [
        "storageAccountType"
      ]
    },
    "ManagedDiskUpdate": {
      "type": "object",
      "description": "The managed disk parameters.",
      "properties": {
        "storageAccountType": {
          "$ref": "#/definitions/StorageAccountType",
          "description": "The storage account type for managed disk."
        }
      }
    },
    "MetadataItem": {
      "type": "object",
      "description": "The Batch service does not assign any meaning to this metadata; it is solely\nfor the use of user code.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the metadata item."
        },
        "value": {
          "type": "string",
          "description": "The value of the metadata item."
        }
      },
      "required": [
        "name",
        "value"
      ]
    },
    "MountConfiguration": {
      "type": "object",
      "description": "The file system to mount on each node.",
      "properties": {
        "azureBlobFileSystemConfiguration": {
          "$ref": "#/definitions/AzureBlobFileSystemConfiguration",
          "description": "The Azure Storage Container to mount using blob FUSE on each node. This property is mutually exclusive with all other properties."
        },
        "nfsMountConfiguration": {
          "$ref": "#/definitions/NfsMountConfiguration",
          "description": "The NFS file system to mount on each node. This property is mutually exclusive with all other properties."
        },
        "cifsMountConfiguration": {
          "$ref": "#/definitions/CifsMountConfiguration",
          "description": "The CIFS/SMB file system to mount on each node. This property is mutually exclusive with all other properties."
        },
        "azureFileShareConfiguration": {
          "$ref": "#/definitions/AzureFileShareConfiguration",
          "description": "The Azure File Share to mount on each node. This property is mutually exclusive with all other properties."
        }
      }
    },
    "MultiInstanceSettings": {
      "type": "object",
      "description": "Multi-instance Tasks are commonly used to support MPI Tasks. In the MPI case,\nif any of the subtasks fail (for example due to exiting with a non-zero exit\ncode) the entire multi-instance Task fails. The multi-instance Task is then\nterminated and retried, up to its retry limit.",
      "properties": {
        "numberOfInstances": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Compute Nodes required by the Task. If omitted, the default is 1."
        },
        "coordinationCommandLine": {
          "type": "string",
          "description": "The command line to run on all the Compute Nodes to enable them to coordinate when the primary runs the main Task command. A typical coordination command line launches a background service and verifies that the service is ready to process inter-node messages."
        },
        "commonResourceFiles": {
          "type": "array",
          "description": "A list of files that the Batch service will download before running the coordination command line. The difference between common resource files and Task resource files is that common resource files are downloaded for all subtasks including the primary, whereas Task resource files are downloaded only for the primary. Also note that these resource files are not downloaded to the Task working directory, but instead are downloaded to the Task root directory (one directory above the working directory).  There is a maximum size for the list of resource files.  When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers.",
          "items": {
            "$ref": "#/definitions/ResourceFile"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "coordinationCommandLine"
      ]
    },
    "NameValuePair": {
      "type": "object",
      "description": "Represents a name-value pair.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name in the name-value pair."
        },
        "value": {
          "type": "string",
          "description": "The value in the name-value pair."
        }
      }
    },
    "NetworkConfiguration": {
      "type": "object",
      "description": "The network configuration for a Pool.",
      "properties": {
        "subnetId": {
          "type": "string",
          "description": "The ARM resource identifier of the virtual network subnet which the Compute Nodes of the Pool will join. This is of the form /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}. The virtual network must be in the same region and subscription as the Azure Batch Account. The specified subnet should have enough free IP addresses to accommodate the number of Compute Nodes in the Pool. If the subnet doesn't have enough free IP addresses, the Pool will partially allocate Nodes and a resize error will occur. The 'MicrosoftAzureBatch' service principal must have the 'Classic Virtual Machine Contributor' Role-Based Access Control (RBAC) role for the specified VNet. The specified subnet must allow communication from the Azure Batch service to be able to schedule Tasks on the Nodes. This can be verified by checking if the specified VNet has any associated Network Security Groups (NSG). If communication to the Nodes in the specified subnet is denied by an NSG, then the Batch service will set the state of the Compute Nodes to unusable. For Pools created with virtualMachineConfiguration only ARM virtual networks ('Microsoft.Network/virtualNetworks') are supported. If the specified VNet has any associated Network Security Groups (NSG), then a few reserved system ports must be enabled for inbound communication. For Pools created with a virtual machine configuration, enable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for Windows. Also enable outbound connections to Azure Storage on port 443. For more details see: https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration."
        },
        "dynamicVNetAssignmentScope": {
          "$ref": "#/definitions/DynamicVNetAssignmentScope",
          "description": "The scope of dynamic vnet assignment."
        },
        "endpointConfiguration": {
          "$ref": "#/definitions/BatchPoolEndpointConfiguration",
          "description": "The configuration for endpoints on Compute Nodes in the Batch Pool. Pool endpoint configuration is only supported on Pools with the virtualMachineConfiguration property."
        },
        "publicIPAddressConfiguration": {
          "$ref": "#/definitions/PublicIpAddressConfiguration",
          "description": "The Public IPAddress configuration for Compute Nodes in the Batch Pool. Public IP configuration property is only supported on Pools with the virtualMachineConfiguration property.",
          "x-ms-client-name": "publicIpAddressConfiguration"
        },
        "enableAcceleratedNetworking": {
          "type": "boolean",
          "description": "Whether this pool should enable accelerated networking. Accelerated networking enables single root I/O virtualization (SR-IOV) to a VM, which may lead to improved networking performance. For more details, see: https://learn.microsoft.com/azure/virtual-network/accelerated-networking-overview."
        }
      }
    },
    "NetworkConfigurationUpdate": {
      "type": "object",
      "description": "The network configuration for a Pool.",
      "properties": {
        "subnetId": {
          "type": "string",
          "description": "The ARM resource identifier of the virtual network subnet which the Compute Nodes of the Pool will join. This is of the form /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}. The virtual network must be in the same region and subscription as the Azure Batch Account. The specified subnet should have enough free IP addresses to accommodate the number of Compute Nodes in the Pool. If the subnet doesn't have enough free IP addresses, the Pool will partially allocate Nodes and a resize error will occur. The 'MicrosoftAzureBatch' service principal must have the 'Classic Virtual Machine Contributor' Role-Based Access Control (RBAC) role for the specified VNet. The specified subnet must allow communication from the Azure Batch service to be able to schedule Tasks on the Nodes. This can be verified by checking if the specified VNet has any associated Network Security Groups (NSG). If communication to the Nodes in the specified subnet is denied by an NSG, then the Batch service will set the state of the Compute Nodes to unusable. For Pools created with virtualMachineConfiguration only ARM virtual networks ('Microsoft.Network/virtualNetworks') are supported. If the specified VNet has any associated Network Security Groups (NSG), then a few reserved system ports must be enabled for inbound communication. For Pools created with a virtual machine configuration, enable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for Windows. Also enable outbound connections to Azure Storage on port 443. For more details see: https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration."
        },
        "dynamicVNetAssignmentScope": {
          "$ref": "#/definitions/DynamicVNetAssignmentScope",
          "description": "The scope of dynamic vnet assignment."
        },
        "endpointConfiguration": {
          "$ref": "#/definitions/BatchPoolEndpointConfigurationUpdate",
          "description": "The configuration for endpoints on Compute Nodes in the Batch Pool. Pool endpoint configuration is only supported on Pools with the virtualMachineConfiguration property."
        },
        "publicIPAddressConfiguration": {
          "$ref": "#/definitions/PublicIpAddressConfiguration",
          "description": "The Public IPAddress configuration for Compute Nodes in the Batch Pool. Public IP configuration property is only supported on Pools with the virtualMachineConfiguration property.",
          "x-ms-client-name": "publicIpAddressConfiguration"
        },
        "enableAcceleratedNetworking": {
          "type": "boolean",
          "description": "Whether this pool should enable accelerated networking. Accelerated networking enables single root I/O virtualization (SR-IOV) to a VM, which may lead to improved networking performance. For more details, see: https://learn.microsoft.com/azure/virtual-network/accelerated-networking-overview."
        }
      }
    },
    "NetworkSecurityGroupRule": {
      "type": "object",
      "description": "A network security group rule to apply to an inbound endpoint.",
      "properties": {
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority for this rule. Priorities within a Pool must be unique and are evaluated in order of priority. The lower the number the higher the priority. For example, rules could be specified with order numbers of 150, 250, and 350. The rule with the order number of 150 takes precedence over the rule that has an order of 250. Allowed priorities are 150 to 4096. If any reserved or duplicate values are provided the request fails with HTTP status code 400."
        },
        "access": {
          "$ref": "#/definitions/NetworkSecurityGroupRuleAccess",
          "description": "The action that should be taken for a specified IP address, subnet range or tag."
        },
        "sourceAddressPrefix": {
          "type": "string",
          "description": "The source address prefix or tag to match for the rule. Valid values are a single IP address (i.e. 10.10.10.10), IP subnet (i.e. 192.168.1.0/24), default tag, or * (for all addresses).  If any other values are provided the request fails with HTTP status code 400."
        },
        "sourcePortRanges": {
          "type": "array",
          "description": "The source port ranges to match for the rule. Valid values are '*' (for all ports 0 - 65535), a specific port (i.e. 22), or a port range (i.e. 100-200). The ports must be in the range of 0 to 65535. Each entry in this collection must not overlap any other entry (either a range or an individual port). If any other values are provided the request fails with HTTP status code 400. The default value is '*'.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "priority",
        "access",
        "sourceAddressPrefix"
      ]
    },
    "NetworkSecurityGroupRuleAccess": {
      "type": "string",
      "description": "NetworkSecurityGroupRuleAccess enums",
      "enum": [
        "allow",
        "deny"
      ],
      "x-ms-enum": {
        "name": "NetworkSecurityGroupRuleAccess",
        "modelAsString": true,
        "values": [
          {
            "name": "Allow",
            "value": "allow",
            "description": "Allow access."
          },
          {
            "name": "Deny",
            "value": "deny",
            "description": "Deny access."
          }
        ]
      }
    },
    "NfsMountConfiguration": {
      "type": "object",
      "description": "Information used to connect to an NFS file system.",
      "properties": {
        "source": {
          "type": "string",
          "description": "The URI of the file system to mount."
        },
        "relativeMountPath": {
          "type": "string",
          "description": "The relative path on the compute node where the file system will be mounted. All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable."
        },
        "mountOptions": {
          "type": "string",
          "description": "Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux."
        }
      },
      "required": [
        "source",
        "relativeMountPath"
      ]
    },
    "OSDisk": {
      "type": "object",
      "description": "Settings for the operating system disk of the compute node (VM).",
      "properties": {
        "ephemeralOSDiskSettings": {
          "$ref": "#/definitions/DiffDiskSettings",
          "description": "Specifies the ephemeral Disk Settings for the operating system disk used by the compute node (VM)."
        },
        "caching": {
          "$ref": "#/definitions/CachingType",
          "description": "Specifies the caching requirements. Possible values are: None, ReadOnly, ReadWrite. The default values are: None for Standard storage. ReadOnly for Premium storage."
        },
        "diskSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "The initial disk size in GB when creating new OS disk."
        },
        "managedDisk": {
          "$ref": "#/definitions/ManagedDisk",
          "description": "The managed disk parameters."
        },
        "writeAcceleratorEnabled": {
          "type": "boolean",
          "description": "Specifies whether writeAccelerator should be enabled or disabled on the disk."
        }
      }
    },
    "OSDiskUpdate": {
      "type": "object",
      "description": "Settings for the operating system disk of the compute node (VM).",
      "properties": {
        "ephemeralOSDiskSettings": {
          "$ref": "#/definitions/DiffDiskSettings",
          "description": "Specifies the ephemeral Disk Settings for the operating system disk used by the compute node (VM)."
        },
        "caching": {
          "$ref": "#/definitions/CachingType",
          "description": "Specifies the caching requirements. Possible values are: None, ReadOnly, ReadWrite. The default values are: None for Standard storage. ReadOnly for Premium storage."
        },
        "diskSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "The initial disk size in GB when creating new OS disk."
        },
        "managedDisk": {
          "$ref": "#/definitions/ManagedDiskUpdate",
          "description": "The managed disk parameters."
        },
        "writeAcceleratorEnabled": {
          "type": "boolean",
          "description": "Specifies whether writeAccelerator should be enabled or disabled on the disk."
        }
      }
    },
    "OSType": {
      "type": "string",
      "description": "OSType enums",
      "enum": [
        "linux",
        "windows"
      ],
      "x-ms-enum": {
        "name": "OSType",
        "modelAsString": true,
        "values": [
          {
            "name": "Linux",
            "value": "linux",
            "description": "The Linux operating system."
          },
          {
            "name": "Windows",
            "value": "windows",
            "description": "The Windows operating system."
          }
        ]
      }
    },
    "OnAllBatchTasksComplete": {
      "type": "string",
      "description": "The action the Batch service should take when all Tasks in the Job are in the completed state.",
      "enum": [
        "noaction",
        "terminatejob"
      ],
      "x-ms-enum": {
        "name": "OnAllBatchTasksComplete",
        "modelAsString": true,
        "values": [
          {
            "name": "NoAction",
            "value": "noaction",
            "description": "Do nothing. The Job remains active unless terminated or disabled by some other means."
          },
          {
            "name": "TerminateJob",
            "value": "terminatejob",
            "description": "Terminate the Job. The Job's terminationReason is set to 'AllTasksComplete'."
          }
        ]
      }
    },
    "OnBatchTaskFailure": {
      "type": "string",
      "description": "OnTaskFailure enums",
      "enum": [
        "noaction",
        "performexitoptionsjobaction"
      ],
      "x-ms-enum": {
        "name": "OnBatchTaskFailure",
        "modelAsString": true,
        "values": [
          {
            "name": "NoAction",
            "value": "noaction",
            "description": "Do nothing. The Job remains active unless terminated or disabled by some other means."
          },
          {
            "name": "PerformExitOptionsJobAction",
            "value": "performexitoptionsjobaction",
            "description": "Terminate the Job. The Job's terminationReason is set to 'AllTasksComplete'."
          }
        ]
      }
    },
    "OutputFile": {
      "type": "object",
      "description": "On every file uploads, Batch service writes two log files to the compute node, 'fileuploadout.txt' and 'fileuploaderr.txt'. These log files are used to learn more about a specific failure.",
      "properties": {
        "filePattern": {
          "type": "string",
          "description": "A pattern indicating which file(s) to upload. Both relative and absolute paths are supported. Relative paths are relative to the Task working directory. The following wildcards are supported: * matches 0 or more characters (for example pattern abc* would match abc or abcdef), ** matches any directory, ? matches any single character, [abc] matches one character in the brackets, and [a-c] matches one character in the range. Brackets can include a negation to match any character not specified (for example [!abc] matches any character but a, b, or c). If a file name starts with \".\" it is ignored by default but may be matched by specifying it explicitly (for example *.gif will not match .a.gif, but .*.gif will). A simple example: **\\*.txt matches any file that does not start in '.' and ends with .txt in the Task working directory or any subdirectory. If the filename contains a wildcard character it can be escaped using brackets (for example abc[*] would match a file named abc*). Note that both \\ and / are treated as directory separators on Windows, but only / is on Linux. Environment variables (%var% on Windows or $var on Linux) are expanded prior to the pattern being applied."
        },
        "destination": {
          "$ref": "#/definitions/OutputFileDestination",
          "description": "The destination for the output file(s)."
        },
        "uploadOptions": {
          "$ref": "#/definitions/OutputFileUploadConfig",
          "description": "Additional options for the upload operation, including under what conditions to perform the upload."
        }
      },
      "required": [
        "filePattern",
        "destination",
        "uploadOptions"
      ]
    },
    "OutputFileBlobContainerDestination": {
      "type": "object",
      "description": "Specifies a file upload destination within an Azure blob storage container.",
      "properties": {
        "path": {
          "type": "string",
          "description": "The destination blob or virtual directory within the Azure Storage container. If filePattern refers to a specific file (i.e. contains no wildcards), then path is the name of the blob to which to upload that file. If filePattern contains one or more wildcards (and therefore may match multiple files), then path is the name of the blob virtual directory (which is prepended to each blob name) to which to upload the file(s). If omitted, file(s) are uploaded to the root of the container with a blob name matching their file name."
        },
        "containerUrl": {
          "type": "string",
          "description": "The URL of the container within Azure Blob Storage to which to upload the file(s). If not using a managed identity, the URL must include a Shared Access Signature (SAS) granting write permissions to the container."
        },
        "identityReference": {
          "$ref": "#/definitions/BatchNodeIdentityReference",
          "description": "The reference to the user assigned identity to use to access Azure Blob Storage specified by containerUrl. The identity must have write access to the Azure Blob Storage container."
        },
        "uploadHeaders": {
          "type": "array",
          "description": "A list of name-value pairs for headers to be used in uploading output files. These headers will be specified when uploading files to Azure Storage. Official document on allowed headers when uploading blobs: https://docs.microsoft.com/en-us/rest/api/storageservices/put-blob#request-headers-all-blob-types.",
          "items": {
            "$ref": "#/definitions/HttpHeader"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "containerUrl"
      ]
    },
    "OutputFileDestination": {
      "type": "object",
      "description": "The destination to which a file should be uploaded.",
      "properties": {
        "container": {
          "$ref": "#/definitions/OutputFileBlobContainerDestination",
          "description": "A location in Azure blob storage to which files are uploaded."
        }
      }
    },
    "OutputFileUploadCondition": {
      "type": "string",
      "description": "OutputFileUploadCondition enums",
      "enum": [
        "tasksuccess",
        "taskfailure",
        "taskcompletion"
      ],
      "x-ms-enum": {
        "name": "OutputFileUploadCondition",
        "modelAsString": true,
        "values": [
          {
            "name": "TaskSuccess",
            "value": "tasksuccess",
            "description": "Upload the file(s) only after the Task process exits with an exit code of 0."
          },
          {
            "name": "TaskFailure",
            "value": "taskfailure",
            "description": "Upload the file(s) only after the Task process exits with a nonzero exit code."
          },
          {
            "name": "TaskCompletion",
            "value": "taskcompletion",
            "description": "Upload the file(s) after the Task process exits, no matter what the exit code was."
          }
        ]
      }
    },
    "OutputFileUploadConfig": {
      "type": "object",
      "description": "Options for an output file upload operation, including under what conditions\nto perform the upload.",
      "properties": {
        "uploadCondition": {
          "$ref": "#/definitions/OutputFileUploadCondition",
          "description": "The conditions under which the Task output file or set of files should be uploaded. The default is taskcompletion."
        }
      },
      "required": [
        "uploadCondition"
      ]
    },
    "PublicIpAddressConfiguration": {
      "type": "object",
      "description": "The public IP Address configuration of the networking configuration of a Pool.",
      "properties": {
        "provision": {
          "$ref": "#/definitions/IpAddressProvisioningType",
          "description": "The provisioning type for Public IP Addresses for the Pool. The default value is BatchManaged.",
          "x-ms-client-name": "IpAddressProvisioningType"
        },
        "ipAddressIds": {
          "type": "array",
          "description": "The list of public IPs which the Batch service will use when provisioning Compute Nodes. The number of IPs specified here limits the maximum size of the Pool - 100 dedicated nodes or 100 Spot/Low-priority nodes can be allocated for each public IP. For example, a pool needing 250 dedicated VMs would need at least 3 public IPs specified. Each element of this collection is of the form: /subscriptions/{subscription}/resourceGroups/{group}/providers/Microsoft.Network/publicIPAddresses/{ip}.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RecentBatchJob": {
      "type": "object",
      "description": "Information about the most recent Job to run under the Job Schedule.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the Job."
        },
        "url": {
          "type": "string",
          "description": "The URL of the Job."
        }
      }
    },
    "ResizeError": {
      "type": "object",
      "description": "An error that occurred when resizing a Pool.",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the Pool resize error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the Pool resize error, intended to be suitable for display in a user interface."
        },
        "values": {
          "type": "array",
          "description": "A list of additional error details related to the Pool resize error.",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ResourceFile": {
      "type": "object",
      "description": "A single file or multiple files to be downloaded to a Compute Node.",
      "properties": {
        "autoStorageContainerName": {
          "type": "string",
          "description": "The storage container name in the auto storage Account. The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified."
        },
        "storageContainerUrl": {
          "type": "string",
          "description": "The URL of the blob container within Azure Blob Storage. The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. This URL must be readable and listable from compute nodes. There are three ways to get such a URL for a container in Azure storage: include a Shared Access Signature (SAS) granting read and list permissions on the container, use a managed identity with read and list permissions, or set the ACL for the container to allow public access."
        },
        "httpUrl": {
          "type": "string",
          "description": "The URL of the file to download. The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. If the URL points to Azure Blob Storage, it must be readable from compute nodes. There are three ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob, use a managed identity with read permission, or set the ACL for the blob or its container to allow public access."
        },
        "blobPrefix": {
          "type": "string",
          "description": "The blob prefix to use when downloading blobs from an Azure Storage container. Only the blobs whose names begin with the specified prefix will be downloaded. The property is valid only when autoStorageContainerName or storageContainerUrl is used. This prefix can be a partial filename or a subdirectory. If a prefix is not specified, all the files in the container will be downloaded."
        },
        "filePath": {
          "type": "string",
          "description": "The location on the Compute Node to which to download the file(s), relative to the Task's working directory. If the httpUrl property is specified, the filePath is required and describes the path which the file will be downloaded to, including the filename. Otherwise, if the autoStorageContainerName or storageContainerUrl property is specified, filePath is optional and is the directory to download the files to. In the case where filePath is used as a directory, any directory structure already associated with the input data will be retained in full and appended to the specified filePath directory. The specified relative path cannot break out of the Task's working directory (for example by using '..')."
        },
        "fileMode": {
          "type": "string",
          "description": "The file permission mode attribute in octal format. This property applies only to files being downloaded to Linux Compute Nodes. It will be ignored if it is specified for a resourceFile which will be downloaded to a Windows Compute Node. If this property is not specified for a Linux Compute Node, then a default value of 0770 is applied to the file."
        },
        "identityReference": {
          "$ref": "#/definitions/BatchNodeIdentityReference",
          "description": "The reference to the user assigned identity to use to access Azure Blob Storage specified by storageContainerUrl or httpUrl."
        }
      }
    },
    "RollingUpgradePolicy": {
      "type": "object",
      "description": "The configuration parameters used while performing a rolling upgrade.",
      "properties": {
        "enableCrossZoneUpgrade": {
          "type": "boolean",
          "description": "Allow VMSS to ignore AZ boundaries when constructing upgrade batches. Take into consideration the Update Domain and maxBatchInstancePercent to determine the batch size. This field is able to be set to true or false only when using NodePlacementConfiguration as Zonal."
        },
        "maxBatchInstancePercent": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. The value of this field should be between 5 and 100, inclusive. If both maxBatchInstancePercent and maxUnhealthyInstancePercent are assigned with value, the value of maxBatchInstancePercent should not be more than maxUnhealthyInstancePercent."
        },
        "maxUnhealthyInstancePercent": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. The value of this field should be between 5 and 100, inclusive. If both maxBatchInstancePercent and maxUnhealthyInstancePercent are assigned with value, the value of maxBatchInstancePercent should not be more than maxUnhealthyInstancePercent."
        },
        "maxUnhealthyUpgradedInstancePercent": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. The value of this field should be between 0 and 100, inclusive."
        },
        "pauseTimeBetweenBatches": {
          "type": "string",
          "format": "duration",
          "description": "The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format.."
        },
        "prioritizeUnhealthyInstances": {
          "type": "boolean",
          "description": "Upgrade all unhealthy instances in a scale set before any healthy instances."
        },
        "rollbackFailedInstancesOnPolicyBreach": {
          "type": "boolean",
          "description": "Rollback failed instances to previous model if the Rolling Upgrade policy is violated."
        }
      }
    },
    "SchedulingState": {
      "type": "string",
      "description": "SchedulingState enums",
      "enum": [
        "enabled",
        "disabled"
      ],
      "x-ms-enum": {
        "name": "SchedulingState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "enabled",
            "description": "Tasks can be scheduled on the Compute Node."
          },
          {
            "name": "Disabled",
            "value": "disabled",
            "description": "No new Tasks will be scheduled on the Compute Node. Tasks already running on the Compute Node may still run to completion. All Compute Nodes start with scheduling enabled."
          }
        ]
      }
    },
    "SecurityProfile": {
      "type": "object",
      "description": "Specifies the security profile settings for the virtual machine or virtual machine scale set.",
      "properties": {
        "encryptionAtHost": {
          "type": "boolean",
          "description": "This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself."
        },
        "securityType": {
          "$ref": "#/definitions/SecurityTypes",
          "description": "Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings."
        },
        "uefiSettings": {
          "$ref": "#/definitions/UefiSettings",
          "description": "Specifies the security settings like secure boot and vTPM used while creating the virtual machine. Specifies the security settings like secure boot and vTPM used while creating the virtual machine."
        }
      },
      "required": [
        "encryptionAtHost",
        "securityType",
        "uefiSettings"
      ]
    },
    "SecurityProfileUpdate": {
      "type": "object",
      "description": "Specifies the security profile settings for the virtual machine or virtual machine scale set.",
      "properties": {
        "encryptionAtHost": {
          "type": "boolean",
          "description": "This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself."
        },
        "securityType": {
          "$ref": "#/definitions/SecurityTypes",
          "description": "Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings."
        },
        "uefiSettings": {
          "$ref": "#/definitions/UefiSettings",
          "description": "Specifies the security settings like secure boot and vTPM used while creating the virtual machine. Specifies the security settings like secure boot and vTPM used while creating the virtual machine."
        }
      }
    },
    "SecurityTypes": {
      "type": "string",
      "description": "Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings.",
      "enum": [
        "trustedLaunch"
      ],
      "x-ms-enum": {
        "name": "SecurityTypes",
        "modelAsString": true,
        "values": [
          {
            "name": "trustedLaunch",
            "value": "trustedLaunch",
            "description": "Trusted launch protects against advanced and persistent attack techniques."
          }
        ]
      }
    },
    "ServiceArtifactReference": {
      "type": "object",
      "description": "Specifies the service artifact reference id used to set same image version\nfor all virtual machines in the scale set when using 'latest' image version.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The service artifact reference id of ServiceArtifactReference. The service artifact reference id in the form of /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/serviceArtifacts/{serviceArtifactName}/vmArtifactsProfiles/{vmArtifactsProfilesName}"
        }
      },
      "required": [
        "id"
      ]
    },
    "ServiceArtifactReferenceUpdate": {
      "type": "object",
      "description": "Specifies the service artifact reference id used to set same image version\nfor all virtual machines in the scale set when using 'latest' image version.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The service artifact reference id of ServiceArtifactReference. The service artifact reference id in the form of /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/serviceArtifacts/{serviceArtifactName}/vmArtifactsProfiles/{vmArtifactsProfilesName}"
        }
      }
    },
    "StatusLevelTypes": {
      "type": "string",
      "description": "Level code.",
      "enum": [
        "Error",
        "Info",
        "Warning"
      ],
      "x-ms-enum": {
        "name": "StatusLevelTypes",
        "modelAsString": true,
        "values": [
          {
            "name": "Error",
            "value": "Error",
            "description": "Error"
          },
          {
            "name": "Info",
            "value": "Info",
            "description": "Info"
          },
          {
            "name": "Warning",
            "value": "Warning",
            "description": "Warning"
          }
        ]
      }
    },
    "StorageAccountType": {
      "type": "string",
      "description": "StorageAccountType enums",
      "enum": [
        "standard_lrs",
        "premium_lrs",
        "standardssd_lrs"
      ],
      "x-ms-enum": {
        "name": "StorageAccountType",
        "modelAsString": true,
        "values": [
          {
            "name": "StandardLRS",
            "value": "standard_lrs",
            "description": "The data disk should use standard locally redundant storage."
          },
          {
            "name": "PremiumLRS",
            "value": "premium_lrs",
            "description": "The data disk should use premium locally redundant storage."
          },
          {
            "name": "StandardSSDLRS",
            "value": "standardssd_lrs",
            "description": "The data disk / OS disk should use standard SSD locally redundant storage."
          }
        ]
      }
    },
    "UefiSettings": {
      "type": "object",
      "description": "Specifies the security settings like secure boot and vTPM used while creating the virtual machine.",
      "properties": {
        "secureBootEnabled": {
          "type": "boolean",
          "description": "Specifies whether secure boot should be enabled on the virtual machine."
        },
        "vTpmEnabled": {
          "type": "boolean",
          "description": "Specifies whether vTPM should be enabled on the virtual machine."
        }
      }
    },
    "UpgradeMode": {
      "type": "string",
      "description": "UpgradeMode enums",
      "enum": [
        "automatic",
        "manual",
        "rolling"
      ],
      "x-ms-enum": {
        "name": "UpgradeMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Automatic",
            "value": "automatic",
            "description": "TAll virtual machines in the scale set are automatically updated at the same time."
          },
          {
            "name": "Manual",
            "value": "manual",
            "description": "You control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action."
          },
          {
            "name": "Rolling",
            "value": "rolling",
            "description": "The existing instances in a scale set are brought down in batches to be upgraded. Once the upgraded batch is complete, the instances will begin taking traffic again and the next batch will begin. This continues until all instances brought up-to-date."
          }
        ]
      }
    },
    "UpgradePolicy": {
      "type": "object",
      "description": "Describes an upgrade policy - automatic, manual, or rolling.",
      "properties": {
        "mode": {
          "$ref": "#/definitions/UpgradeMode",
          "description": "Specifies the mode of an upgrade to virtual machines in the scale set.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.<br /><br /> **Automatic** - All virtual machines in the scale set are automatically updated at the same time.<br /><br /> **Rolling** - Scale set performs updates in batches with an optional pause time in between."
        },
        "automaticOSUpgradePolicy": {
          "$ref": "#/definitions/AutomaticOsUpgradePolicy",
          "description": "Configuration parameters used for performing automatic OS Upgrade. The configuration parameters used for performing automatic OS upgrade.",
          "x-ms-client-name": "automaticOsUpgradePolicy"
        },
        "rollingUpgradePolicy": {
          "$ref": "#/definitions/RollingUpgradePolicy",
          "description": "The configuration parameters used while performing a rolling upgrade. This property is only supported on Pools with the virtualMachineConfiguration property."
        }
      },
      "required": [
        "mode"
      ]
    },
    "UpgradePolicyUpdate": {
      "type": "object",
      "description": "Describes an upgrade policy - automatic, manual, or rolling.",
      "properties": {
        "mode": {
          "$ref": "#/definitions/UpgradeMode",
          "description": "Specifies the mode of an upgrade to virtual machines in the scale set.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.<br /><br /> **Automatic** - All virtual machines in the scale set are automatically updated at the same time.<br /><br /> **Rolling** - Scale set performs updates in batches with an optional pause time in between."
        },
        "automaticOSUpgradePolicy": {
          "$ref": "#/definitions/AutomaticOsUpgradePolicy",
          "description": "Configuration parameters used for performing automatic OS Upgrade. The configuration parameters used for performing automatic OS upgrade.",
          "x-ms-client-name": "automaticOsUpgradePolicy"
        },
        "rollingUpgradePolicy": {
          "$ref": "#/definitions/RollingUpgradePolicy",
          "description": "The configuration parameters used while performing a rolling upgrade. This property is only supported on Pools with the virtualMachineConfiguration property."
        }
      }
    },
    "UploadBatchServiceLogsContent": {
      "type": "object",
      "description": "The Azure Batch service log files upload parameters for a Compute Node.",
      "properties": {
        "containerUrl": {
          "type": "string",
          "description": "The URL of the container within Azure Blob Storage to which to upload the Batch Service log file(s). If a user assigned managed identity is not being used, the URL must include a Shared Access Signature (SAS) granting write permissions to the container. The SAS duration must allow enough time for the upload to finish. The start time for SAS is optional and recommended to not be specified."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start of the time range from which to upload Batch Service log file(s). Any log file containing a log message in the time range will be uploaded. This means that the operation might retrieve more logs than have been requested since the entire log file is always uploaded, but the operation should not retrieve fewer logs than have been requested."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end of the time range from which to upload Batch Service log file(s). Any log file containing a log message in the time range will be uploaded. This means that the operation might retrieve more logs than have been requested since the entire log file is always uploaded, but the operation should not retrieve fewer logs than have been requested. If omitted, the default is to upload all logs available after the startTime."
        },
        "identityReference": {
          "$ref": "#/definitions/BatchNodeIdentityReference",
          "description": "The reference to the user assigned identity to use to access Azure Blob Storage specified by containerUrl. The identity must have write access to the Azure Blob Storage container."
        }
      },
      "required": [
        "containerUrl",
        "startTime"
      ]
    },
    "UploadBatchServiceLogsResult": {
      "type": "object",
      "description": "The result of uploading Batch service log files from a specific Compute Node.",
      "properties": {
        "virtualDirectoryName": {
          "type": "string",
          "description": "The virtual directory within Azure Blob Storage container to which the Batch Service log file(s) will be uploaded. The virtual directory name is part of the blob name for each log file uploaded, and it is built based poolId, nodeId and a unique identifier."
        },
        "numberOfFilesUploaded": {
          "type": "integer",
          "format": "int32",
          "description": "The number of log files which will be uploaded."
        }
      },
      "required": [
        "virtualDirectoryName",
        "numberOfFilesUploaded"
      ]
    },
    "UserAccount": {
      "type": "object",
      "description": "Properties used to create a user used to execute Tasks on an Azure Batch\nCompute Node.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the user Account. Names can contain any Unicode characters up to a maximum length of 20."
        },
        "password": {
          "type": "string",
          "format": "password",
          "description": "The password for the user Account.",
          "x-ms-secret": true
        },
        "elevationLevel": {
          "$ref": "#/definitions/ElevationLevel",
          "description": "The elevation level of the user Account. The default value is nonAdmin."
        },
        "linuxUserConfiguration": {
          "$ref": "#/definitions/LinuxUserConfiguration",
          "description": "The Linux-specific user configuration for the user Account. This property is ignored if specified on a Windows Pool. If not specified, the user is created with the default options."
        },
        "windowsUserConfiguration": {
          "$ref": "#/definitions/WindowsUserConfiguration",
          "description": "The Windows-specific user configuration for the user Account. This property can only be specified if the user is on a Windows Pool. If not specified and on a Windows Pool, the user is created with the default options."
        }
      },
      "required": [
        "name",
        "password"
      ]
    },
    "UserAssignedIdentity": {
      "type": "object",
      "description": "The user assigned Identity",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The ARM resource id of the user assigned identity."
        },
        "clientId": {
          "type": "string",
          "description": "The client id of the user assigned identity.",
          "readOnly": true
        },
        "principalId": {
          "type": "string",
          "description": "The principal id of the user assigned identity.",
          "readOnly": true
        }
      },
      "required": [
        "resourceId"
      ]
    },
    "UserIdentity": {
      "type": "object",
      "description": "The definition of the user identity under which the Task is run. Specify either the userName or autoUser property, but not both.",
      "properties": {
        "username": {
          "type": "string",
          "description": "The name of the user identity under which the Task is run. The userName and autoUser properties are mutually exclusive; you must specify one but not both."
        },
        "autoUser": {
          "$ref": "#/definitions/AutoUserSpecification",
          "description": "The auto user under which the Task is run. The userName and autoUser properties are mutually exclusive; you must specify one but not both."
        }
      }
    },
    "VMExtension": {
      "type": "object",
      "description": "The configuration for virtual machine extensions.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the virtual machine extension."
        },
        "publisher": {
          "type": "string",
          "description": "The name of the extension handler publisher."
        },
        "type": {
          "type": "string",
          "description": "The type of the extension."
        },
        "typeHandlerVersion": {
          "type": "string",
          "description": "The version of script handler."
        },
        "autoUpgradeMinorVersion": {
          "type": "boolean",
          "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
        },
        "enableAutomaticUpgrade": {
          "type": "boolean",
          "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available."
        },
        "settings": {
          "type": "object",
          "description": "JSON formatted public settings for the extension.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "protectedSettings": {
          "type": "object",
          "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "provisionAfterExtensions": {
          "type": "array",
          "description": "The collection of extension names. Collection of extension names after which this extension needs to be provisioned.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name",
        "publisher",
        "type"
      ]
    },
    "VMExtensionInstanceView": {
      "type": "object",
      "description": "The vm extension instance view.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the vm extension instance view."
        },
        "statuses": {
          "type": "array",
          "description": "The resource status information.",
          "items": {
            "$ref": "#/definitions/InstanceViewStatus"
          },
          "x-ms-identifiers": []
        },
        "subStatuses": {
          "type": "array",
          "description": "The resource status information.",
          "items": {
            "$ref": "#/definitions/InstanceViewStatus"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Versions": {
      "type": "string",
      "description": "The Azure Batch service version.",
      "enum": [
        "2024-02-01.19.0"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2024_02_01",
            "value": "2024-02-01.19.0",
            "description": "API Version 2024-02-01.19.0"
          }
        ]
      }
    },
    "VirtualMachineConfiguration": {
      "type": "object",
      "description": "The configuration for Compute Nodes in a Pool based on the Azure Virtual\nMachines infrastructure.",
      "properties": {
        "imageReference": {
          "$ref": "#/definitions/ImageReference",
          "description": "A reference to the Azure Virtual Machines Marketplace Image or the custom Virtual Machine Image to use."
        },
        "nodeAgentSKUId": {
          "type": "string",
          "description": "The SKU of the Batch Compute Node agent to be provisioned on Compute Nodes in the Pool. The Batch Compute Node agent is a program that runs on each Compute Node in the Pool, and provides the command-and-control interface between the Compute Node and the Batch service. There are different implementations of the Compute Node agent, known as SKUs, for different operating systems. You must specify a Compute Node agent SKU which matches the selected Image reference. To get the list of supported Compute Node agent SKUs along with their list of verified Image references, see the 'List supported Compute Node agent SKUs' operation.",
          "x-ms-client-name": "nodeAgentSkuId"
        },
        "windowsConfiguration": {
          "$ref": "#/definitions/WindowsConfiguration",
          "description": "Windows operating system settings on the virtual machine. This property must not be specified if the imageReference property specifies a Linux OS Image."
        },
        "dataDisks": {
          "type": "array",
          "description": "The configuration for data disks attached to the Compute Nodes in the Pool. This property must be specified if the Compute Nodes in the Pool need to have empty data disks attached to them. This cannot be updated. Each Compute Node gets its own disk (the disk is not a file share). Existing disks cannot be attached, each attached disk is empty. When the Compute Node is removed from the Pool, the disk and all data associated with it is also deleted. The disk is not formatted after being attached, it must be formatted before use - for more information see https://docs.microsoft.com/en-us/azure/virtual-machines/linux/classic/attach-disk#initialize-a-new-data-disk-in-linux and https://docs.microsoft.com/en-us/azure/virtual-machines/windows/attach-disk-ps#add-an-empty-data-disk-to-a-virtual-machine.",
          "items": {
            "$ref": "#/definitions/DataDisk"
          },
          "x-ms-identifiers": []
        },
        "licenseType": {
          "type": "string",
          "description": "This only applies to Images that contain the Windows operating system, and\nshould only be used when you hold valid on-premises licenses for the Compute\nNodes which will be deployed. If omitted, no on-premises licensing discount is\napplied. Values are:\n\n Windows_Server - The on-premises license is for Windows\nServer.\n Windows_Client - The on-premises license is for Windows Client.\n"
        },
        "containerConfiguration": {
          "$ref": "#/definitions/ContainerConfiguration",
          "description": "The container configuration for the Pool. If specified, setup is performed on each Compute Node in the Pool to allow Tasks to run in containers. All regular Tasks and Job manager Tasks run on this Pool must specify the containerSettings property, and all other Tasks may specify it."
        },
        "diskEncryptionConfiguration": {
          "$ref": "#/definitions/DiskEncryptionConfiguration",
          "description": "The disk encryption configuration for the pool. If specified, encryption is performed on each node in the pool during node provisioning."
        },
        "nodePlacementConfiguration": {
          "$ref": "#/definitions/BatchNodePlacementConfiguration",
          "description": "The node placement configuration for the pool. This configuration will specify rules on how nodes in the pool will be physically allocated."
        },
        "extensions": {
          "type": "array",
          "description": "The virtual machine extension for the pool. If specified, the extensions mentioned in this configuration will be installed on each node.",
          "items": {
            "$ref": "#/definitions/VMExtension"
          },
          "x-ms-identifiers": []
        },
        "osDisk": {
          "$ref": "#/definitions/OSDisk",
          "description": "Settings for the operating system disk of the Virtual Machine."
        },
        "securityProfile": {
          "$ref": "#/definitions/SecurityProfile",
          "description": "Specifies the security profile settings for the virtual machine or virtual machine scale set."
        },
        "serviceArtifactReference": {
          "$ref": "#/definitions/ServiceArtifactReference",
          "description": "Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using 'latest' image version. The service artifact reference id in the form of /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/serviceArtifacts/{serviceArtifactName}/vmArtifactsProfiles/{vmArtifactsProfilesName}"
        }
      },
      "required": [
        "imageReference",
        "nodeAgentSKUId"
      ]
    },
    "VirtualMachineConfigurationUpdate": {
      "type": "object",
      "description": "The configuration for Compute Nodes in a Pool based on the Azure Virtual\nMachines infrastructure.",
      "properties": {
        "imageReference": {
          "$ref": "#/definitions/ImageReference",
          "description": "A reference to the Azure Virtual Machines Marketplace Image or the custom Virtual Machine Image to use."
        },
        "nodeAgentSKUId": {
          "type": "string",
          "description": "The SKU of the Batch Compute Node agent to be provisioned on Compute Nodes in the Pool. The Batch Compute Node agent is a program that runs on each Compute Node in the Pool, and provides the command-and-control interface between the Compute Node and the Batch service. There are different implementations of the Compute Node agent, known as SKUs, for different operating systems. You must specify a Compute Node agent SKU which matches the selected Image reference. To get the list of supported Compute Node agent SKUs along with their list of verified Image references, see the 'List supported Compute Node agent SKUs' operation.",
          "x-ms-client-name": "nodeAgentSkuId"
        },
        "windowsConfiguration": {
          "$ref": "#/definitions/WindowsConfiguration",
          "description": "Windows operating system settings on the virtual machine. This property must not be specified if the imageReference property specifies a Linux OS Image."
        },
        "dataDisks": {
          "type": "array",
          "description": "The configuration for data disks attached to the Compute Nodes in the Pool. This property must be specified if the Compute Nodes in the Pool need to have empty data disks attached to them. This cannot be updated. Each Compute Node gets its own disk (the disk is not a file share). Existing disks cannot be attached, each attached disk is empty. When the Compute Node is removed from the Pool, the disk and all data associated with it is also deleted. The disk is not formatted after being attached, it must be formatted before use - for more information see https://docs.microsoft.com/en-us/azure/virtual-machines/linux/classic/attach-disk#initialize-a-new-data-disk-in-linux and https://docs.microsoft.com/en-us/azure/virtual-machines/windows/attach-disk-ps#add-an-empty-data-disk-to-a-virtual-machine.",
          "items": {
            "$ref": "#/definitions/DataDisk"
          },
          "x-ms-identifiers": []
        },
        "licenseType": {
          "type": "string",
          "description": "This only applies to Images that contain the Windows operating system, and\nshould only be used when you hold valid on-premises licenses for the Compute\nNodes which will be deployed. If omitted, no on-premises licensing discount is\napplied. Values are:\n\n Windows_Server - The on-premises license is for Windows\nServer.\n Windows_Client - The on-premises license is for Windows Client.\n"
        },
        "containerConfiguration": {
          "$ref": "#/definitions/ContainerConfigurationUpdate",
          "description": "The container configuration for the Pool. If specified, setup is performed on each Compute Node in the Pool to allow Tasks to run in containers. All regular Tasks and Job manager Tasks run on this Pool must specify the containerSettings property, and all other Tasks may specify it."
        },
        "diskEncryptionConfiguration": {
          "$ref": "#/definitions/DiskEncryptionConfiguration",
          "description": "The disk encryption configuration for the pool. If specified, encryption is performed on each node in the pool during node provisioning."
        },
        "nodePlacementConfiguration": {
          "$ref": "#/definitions/BatchNodePlacementConfiguration",
          "description": "The node placement configuration for the pool. This configuration will specify rules on how nodes in the pool will be physically allocated."
        },
        "extensions": {
          "type": "array",
          "description": "The virtual machine extension for the pool. If specified, the extensions mentioned in this configuration will be installed on each node.",
          "items": {
            "$ref": "#/definitions/VMExtension"
          },
          "x-ms-identifiers": []
        },
        "osDisk": {
          "$ref": "#/definitions/OSDiskUpdate",
          "description": "Settings for the operating system disk of the Virtual Machine."
        },
        "securityProfile": {
          "$ref": "#/definitions/SecurityProfileUpdate",
          "description": "Specifies the security profile settings for the virtual machine or virtual machine scale set."
        },
        "serviceArtifactReference": {
          "$ref": "#/definitions/ServiceArtifactReferenceUpdate",
          "description": "Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using 'latest' image version. The service artifact reference id in the form of /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/serviceArtifacts/{serviceArtifactName}/vmArtifactsProfiles/{vmArtifactsProfilesName}"
        }
      }
    },
    "VirtualMachineInfo": {
      "type": "object",
      "description": "Info about the current state of the virtual machine.",
      "properties": {
        "imageReference": {
          "$ref": "#/definitions/ImageReference",
          "description": "The reference to the Azure Virtual Machine's Marketplace Image."
        },
        "scaleSetVmResourceId": {
          "type": "string",
          "description": "The resource ID of the Compute Node's current Virtual Machine Scale Set VM. Only defined if the Batch Account was created with its poolAllocationMode property set to 'UserSubscription'."
        }
      }
    },
    "WindowsConfiguration": {
      "type": "object",
      "description": "Windows operating system settings to apply to the virtual machine.",
      "properties": {
        "enableAutomaticUpdates": {
          "type": "boolean",
          "description": "Whether automatic updates are enabled on the virtual machine. If omitted, the default value is true."
        }
      }
    },
    "WindowsUserConfiguration": {
      "type": "object",
      "description": "Properties used to create a user Account on a Windows Compute Node.",
      "properties": {
        "loginMode": {
          "$ref": "#/definitions/LoginMode",
          "description": "The login mode for the user. The default value for VirtualMachineConfiguration Pools is 'batch'."
        }
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
