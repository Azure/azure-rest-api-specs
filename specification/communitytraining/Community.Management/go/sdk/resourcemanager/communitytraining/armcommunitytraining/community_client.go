// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package armcommunitytraining

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/arm"
)

// CommunityClient contains the methods for the Microsoft.Community namespace.
// Don't use this type directly, use NewCommunityClient() instead.
type CommunityClient struct {
	internal *arm.Client
}

// NewCommunityClient creates a new instance of CommunityClient with the specified values.
//   - credential - used to authorize requests. Usually a credential from azidentity.
//   - options - pass nil to accept the default values.
func NewCommunityClient(credential azcore.TokenCredential, options *arm.ClientOptions) (*CommunityClient, error) {
	cl, err := arm.NewClient(moduleName, moduleVersion, credential, options)
	if err != nil {
		return nil, err
	}
	client := &CommunityClient{
		internal: cl,
	}
	return client, nil
}

// NewCommunityCommunityTrainingsClient creates a new instance of [CommunityCommunityTrainingsClient].
func (client *CommunityClient) NewCommunityCommunityTrainingsClient() *CommunityCommunityTrainingsClient {
	return &CommunityCommunityTrainingsClient{
		internal: client.internal,
	}
}

// NewCommunityOperationsClient creates a new instance of [CommunityOperationsClient].
func (client *CommunityClient) NewCommunityOperationsClient() *CommunityOperationsClient {
	return &CommunityOperationsClient{
		internal: client.internal,
	}
}
