{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft NetApp",
    "description": "Microsoft NetApp Azure Resource Provider specification",
    "version": "2017-08-15",
    "x-ms-code-generation-settings": {
      "name": "AzureNetAppFilesManagementClient"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.NetApp/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available Microsoft.NetApp Rest API operations",
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts": {
      "parameters": [
        {
          "$ref": "#/parameters/SubscriptionId"
        },
        {
          "$ref": "#/parameters/ResourceGroup"
        },
        {
          "$ref": "#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "description": "Lists all NetApp accounts in the resource group",
        "tags": [
          "NetApp Accounts"
        ],
        "operationId": "Accounts_List",
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/netAppAccountList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_List": {
            "$ref": "examples/Accounts_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}": {
      "parameters": [
        {
          "$ref": "#/parameters/SubscriptionId"
        },
        {
          "$ref": "#/parameters/ResourceGroup"
        },
        {
          "$ref": "#/parameters/AccountName"
        },
        {
          "$ref": "#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "description": "Get the NetApp account",
        "tags": [
          "NetApp Accounts"
        ],
        "operationId": "Accounts_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/netAppAccount"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_Get": {
            "$ref": "examples/Accounts_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "NetApp Accounts"
        ],
        "operationId": "Accounts_CreateOrUpdate",
        "description": "Create or update a NetApp account",
        "parameters": [
          {
            "name": "body",
            "description": "NetApp Account object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/netAppAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - account updated",
            "schema": {
              "$ref": "#/definitions/netAppAccount"
            }
          },
          "201": {
            "description": "Account created",
            "schema": {
              "$ref": "#/definitions/netAppAccount"
            }
          },
          "202": {
            "description": "Accepted -- Create request accepted; operation will complete asynchronously"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Accounts_CreateOrUpdate": {
            "$ref": "examples/Accounts_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "NetApp Accounts"
        ],
        "operationId": "Accounts_Delete",
        "description": "Delete a NetApp account",
        "responses": {
          "202": {
            "description": "Accepted -- Create or update request accepted; operation will complete asynchronously"
          },
          "204": {
            "description": "NoContent -- Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Accounts_Delete": {
            "$ref": "examples/Accounts_Delete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "NetApp Accounts"
        ],
        "operationId": "Accounts_Update",
        "description": "Patch a NetApp account",
        "parameters": [
          {
            "name": "body",
            "description": "NetApp Account object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/netAppAccountPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/netAppAccount"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_Update": {
            "$ref": "examples/Accounts_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools": {
      "parameters": [
        {
          "$ref": "#/parameters/SubscriptionId"
        },
        {
          "$ref": "#/parameters/ResourceGroup"
        },
        {
          "$ref": "#/parameters/AccountName"
        },
        {
          "$ref": "#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "description": "Lists all capacity pools in the NetApp Account",
        "tags": [
          "Capacity Pools"
        ],
        "operationId": "Pools_List",
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/capacityPoolList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "x-ms-examples": {
          "Pools_List": {
            "$ref": "examples/Pools_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}": {
      "parameters": [
        {
          "$ref": "#/parameters/SubscriptionId"
        },
        {
          "$ref": "#/parameters/ResourceGroup"
        },
        {
          "$ref": "#/parameters/AccountName"
        },
        {
          "$ref": "#/parameters/PoolName"
        },
        {
          "$ref": "#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "description": "Get a capacity pool",
        "tags": [
          "Capacity Pools"
        ],
        "operationId": "Pools_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/capacityPool"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "x-ms-examples": {
          "Pools_Get": {
            "$ref": "examples/Pools_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Capacity Pools"
        ],
        "operationId": "Pools_CreateOrUpdate",
        "description": "Create or Update a capacity pool",
        "parameters": [
          {
            "name": "body",
            "description": "Capacity pool object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/capacityPool"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - pool updated",
            "schema": {
              "$ref": "#/definitions/capacityPool"
            }
          },
          "201": {
            "description": "Pool created",
            "schema": {
              "$ref": "#/definitions/capacityPool"
            }
          },
          "202": {
            "description": "Accepted -- Create request accepted; operation will complete asynchronously"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Pools_CreateOrUpdate": {
            "$ref": "examples/Pools_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Capacity Pools"
        ],
        "operationId": "Pools_Update",
        "description": "Patch a capacity pool",
        "parameters": [
          {
            "name": "body",
            "description": "Capacity pool object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/capacityPoolPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/capacityPool"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "x-ms-examples": {
          "Pools_Update": {
            "$ref": "examples/Pools_Update.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Capacity Pools"
        ],
        "operationId": "Pools_Delete",
        "description": "Delete a capacity pool",
        "responses": {
          "202": {
            "description": "Accepted -- Create or update request accepted; operation will complete asynchronously"
          },
          "204": {
            "description": "NoContent -- Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Pools_Delete": {
            "$ref": "examples/Pools_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes": {
      "parameters": [
        {
          "$ref": "#/parameters/SubscriptionId"
        },
        {
          "$ref": "#/parameters/ResourceGroup"
        },
        {
          "$ref": "#/parameters/AccountName"
        },
        {
          "$ref": "#/parameters/PoolName"
        },
        {
          "$ref": "#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "description": "List volumes",
        "tags": [
          "Volumes"
        ],
        "operationId": "Volumes_List",
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/volumeList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_List": {
            "$ref": "examples/Volumes_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}": {
      "parameters": [
        {
          "$ref": "#/parameters/SubscriptionId"
        },
        {
          "$ref": "#/parameters/ResourceGroup"
        },
        {
          "$ref": "#/parameters/AccountName"
        },
        {
          "$ref": "#/parameters/PoolName"
        },
        {
          "$ref": "#/parameters/VolumeName"
        },
        {
          "$ref": "#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "tags": [
          "Volumes"
        ],
        "operationId": "Volumes_Get",
        "description": "Get a volume",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/volume"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_Get": {
            "$ref": "examples/Volumes_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Volumes"
        ],
        "operationId": "Volumes_CreateOrUpdate",
        "description": "Create or update a volume",
        "parameters": [
          {
            "name": "body",
            "description": "Volume object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/volume"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - volume updated",
            "schema": {
              "$ref": "#/definitions/volume"
            }
          },
          "201": {
            "description": "Volume created",
            "schema": {
              "$ref": "#/definitions/volume"
            }
          },
          "202": {
            "description": "Accepted -- Create request accepted; operation will complete asynchronously"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Volumes_CreateOrUpdate": {
            "$ref": "examples/Volumes_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Volumes"
        ],
        "operationId": "Volumes_Update",
        "description": "Patch a volume",
        "parameters": [
          {
            "name": "body",
            "description": "Volume object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/volumePatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/volume"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_Update": {
            "$ref": "examples/Volumes_Update.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Volumes"
        ],
        "operationId": "Volumes_Delete",
        "description": "Delete a volume",
        "responses": {
          "202": {
            "description": "Accepted -- Create or update request accepted; operation will complete asynchronously"
          },
          "204": {
            "description": "NoContent -- Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Volumes_Delete": {
            "$ref": "examples/Volumes_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/mountTargets": {
      "parameters": [
        {
          "$ref": "#/parameters/SubscriptionId"
        },
        {
          "$ref": "#/parameters/ResourceGroup"
        },
        {
          "$ref": "#/parameters/AccountName"
        },
        {
          "$ref": "#/parameters/PoolName"
        },
        {
          "$ref": "#/parameters/VolumeName"
        },
        {
          "$ref": "#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "tags": [
          "MountTargets"
        ],
        "operationId": "MountTargets_List",
        "description": "List mount targets",
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/mountTargetList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "x-ms-examples": {
          "MountTargets_List": {
            "$ref": "examples/MountTargets_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots": {
      "parameters": [
        {
          "$ref": "#/parameters/SubscriptionId"
        },
        {
          "$ref": "#/parameters/ResourceGroup"
        },
        {
          "$ref": "#/parameters/AccountName"
        },
        {
          "$ref": "#/parameters/PoolName"
        },
        {
          "$ref": "#/parameters/VolumeName"
        },
        {
          "$ref": "#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "tags": [
          "Snapshots"
        ],
        "operationId": "Snapshots_List",
        "description": "List snapshots",
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/snapshotsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "x-ms-examples": {
          "Snapshots_List": {
            "$ref": "examples/Snapshots_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots/{snapshotName}": {
      "parameters": [
        {
          "$ref": "#/parameters/SubscriptionId"
        },
        {
          "$ref": "#/parameters/ResourceGroup"
        },
        {
          "$ref": "#/parameters/AccountName"
        },
        {
          "$ref": "#/parameters/PoolName"
        },
        {
          "$ref": "#/parameters/VolumeName"
        },
        {
          "$ref": "#/parameters/SnapshotName"
        },
        {
          "$ref": "#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "tags": [
          "Snapshots"
        ],
        "operationId": "Snapshots_Get",
        "description": "Get a snapshot",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/snapshot"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "x-ms-examples": {
          "Snapshots_Get": {
            "$ref": "examples/Snapshots_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Snapshots"
        ],
        "operationId": "Snapshots_Create",
        "description": "Create a snapshot",
        "parameters": [
          {
            "name": "body",
            "description": "Snapshot object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/snapshot"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Snapshot created",
            "schema": {
              "$ref": "#/definitions/snapshot"
            }
          },
          "202": {
            "description": "Accepted -- Create request accepted; operation will complete asynchronously"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Snapshots_Create": {
            "$ref": "examples/Snapshots_Create.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Snapshots"
        ],
        "operationId": "Snapshots_Update",
        "description": "Patch a snapshot",
        "parameters": [
          {
            "name": "body",
            "description": "Snapshot object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/snapshotPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/snapshot"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "x-ms-examples": {
          "Snapshots_Update": {
            "$ref": "examples/Snapshots_Update.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Snapshots"
        ],
        "operationId": "Snapshots_Delete",
        "description": "Delete snapshot",
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted -- Create or update request accepted; operation will complete asynchronously"
          },
          "204": {
            "description": "NoContent -- Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Snapshots_Delete": {
            "$ref": "examples/Snapshots_Delete.json"
          }
        }
      }
    }
  },
  "definitions": {
    "OperationListResult": {
      "description": "Result of the request to list Cloud Volume operations. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "description": "List of Storage operations supported by the Storage resource provider."
        }
      }
    },
    "Operation": {
      "description": "Microsoft.NetApp REST API operation definition.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}",
          "type": "string"
        },
        "display": {
          "description": "Display metadata associated with the operation.",
          "properties": {
            "provider": {
              "description": "Service provider: Microsoft NetApp.",
              "type": "string"
            },
            "resource": {
              "description": "Resource on which the operation is performed etc.",
              "type": "string"
            },
            "operation": {
              "description": "Type of operation: get, read, delete, etc.",
              "type": "string"
            },
            "description": {
              "description": "Operation description.",
              "type": "string"
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The origin of operations."
        },
        "properties": {
          "$ref": "#/definitions/OperationProperties",
          "description": "Properties of operation, include metric specifications.",
          "x-ms-client-flatten": true
        }
      }
    },
    "OperationProperties": {
      "description": "Properties of operation, include metric specifications.",
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/ServiceSpecification",
          "description": "One property of operation, include metric specifications."
        }
      }
    },
    "ServiceSpecification": {
      "description": "One property of operation, include metric specifications.",
      "properties": {
        "metricSpecifications": {
          "description": "Metric specifications of operation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricSpecification"
          }
        }
      }
    },
    "MetricSpecification": {
      "description": "Metric specification of operation.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of metric specification."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of metric specification."
        },
        "displayDescription": {
          "type": "string",
          "description": "Display description of metric specification."
        },
        "unit": {
          "type": "string",
          "description": "Unit could be Bytes or Count."
        },
        "dimensions": {
          "description": "Dimensions of blobs, including blob type and access tier.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dimension"
          }
        },
        "aggregationType": {
          "type": "string",
          "description": "Aggregation type could be Average."
        },
        "fillGapWithZero": {
          "type": "boolean",
          "description": "The property to decide fill gap with zero or not."
        },
        "category": {
          "type": "string",
          "description": "The category this metric specification belong to, could be Capacity."
        },
        "resourceIdDimensionNameOverride": {
          "type": "string",
          "description": "Account Resource Id."
        }
      }
    },
    "Dimension": {
      "description": "Dimension of blobs, possibly be blob type or access tier.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Display name of dimension."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of dimension."
        }
      }
    },
    "netAppAccountList": {
      "description": "List of NetApp account resources",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "Multiple NetApp accounts",
          "items": {
            "$ref": "#/definitions/netAppAccount"
          }
        }
      }
    },
    "netAppAccount": {
      "description": "NetApp account resource",
      "type": "object",
      "x-ms-azure-resource": true,
      "required": [
        "location",
        "properties"
      ],
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "description": "NetApp Account properties",
          "$ref": "#/definitions/accountProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "netAppAccountPatch": {
      "description": "NetApp account patch resource",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "description": "NetApp Account properties",
          "$ref": "#/definitions/accountProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "accountProperties": {
      "description": "NetApp account properties",
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Azure lifecycle management"
        },
        "activeDirectories": {
          "description": "Active Directories",
          "type": "array",
          "items": {
            "$ref": "#/definitions/activeDirectory"
          }
        }
      }
    },
    "activeDirectory": {
      "description": "Active Directory",
      "type": "object",
      "properties": {
        "activeDirectoryId": {
          "type": "string",
          "description": "Id of the Active Directory"
        },
        "username": {
          "type": "string",
          "description": "Username of Active Directory domain administrator"
        },
        "password": {
          "type": "string",
          "description": "Plain text password of Active Directory domain administrator"
        },
        "domain": {
          "type": "string",
          "description": "Name of the Active Directory domain"
        },
        "dNS": {
          "type": "string",
          "description": "Comma separated list of DNS server IP addresses for the Active Directory domain"
        },
        "status": {
          "type": "string",
          "description": "Status of the Active Directory"
        },
        "sMBServerName": {
          "type": "string",
          "description": "NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes"
        },
        "organizationalUnit": {
          "type": "string",
          "description": "The Organizational Unit (OU) within the Windows Active Directory"
        }
      }
    },
    "capacityPoolList": {
      "description": "List of capacity pool resources",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of Capacity pools",
          "type": "array",
          "items": {
            "$ref": "#/definitions/capacityPool"
          }
        }
      }
    },
    "capacityPool": {
      "description": "Capacity pool resource",
      "type": "object",
      "x-ms-azure-resource": true,
      "required": [
        "location",
        "properties"
      ],
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "description": "Capacity pool properties",
          "$ref": "#/definitions/poolProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "poolProperties": {
      "description": "Pool properties",
      "type": "object",
      "properties": {
        "poolId": {
          "title": "poolId",
          "type": "string",
          "readOnly": true,
          "description": "UUID v4 used to identify the Pool",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "maxLength": 36,
          "minLength": 36,
          "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
        },
        "size": {
          "title": "size",
          "type": "integer",
          "format": "int64",
          "description": "Provisioned size of the pool (in bytes). Allowed values are in 4TiB chunks (value must be multiply of 4398046511104).",
          "minimum": 4398046511104,
          "maximum": 549755813888000,
          "default": 4398046511104
        },
        "serviceLevel": {
          "title": "serviceLevel",
          "type": "string",
          "description": "The service level of the file system",
          "enum": [
            "Standard",
            "Premium",
            "Ultra"
          ],
          "x-ms-enum": {
            "name": "ServiceLevel",
            "modelAsString": true,
            "values": [
              {
                "value": "Standard",
                "description": "Standard service level"
              },
              {
                "value": "Premium",
                "description": "Premium service level"
              },
              {
                "value": "Ultra",
                "description": "Ultra service level"
              }
            ]
          },
          "example": "Ultra",
          "default": "Premium"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Azure lifecycle management"
        }
      }
    },
    "capacityPoolPatch": {
      "description": "Capacity pool patch resource",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "description": "Capacity pool properties",
          "$ref": "#/definitions/poolPatchProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "poolPatchProperties": {
      "description": "Patchable pool properties",
      "type": "object",
      "properties": {
        "size": {
          "title": "size",
          "type": "integer",
          "format": "int64",
          "description": "Provisioned size of the pool (in bytes). Allowed values are in 4TiB chunks (value must be multiply of 4398046511104).",
          "minimum": 4398046511104,
          "maximum": 549755813888000,
          "default": 4398046511104
        },
        "serviceLevel": {
          "title": "serviceLevel",
          "type": "string",
          "description": "The service level of the file system",
          "enum": [
            "Standard",
            "Premium",
            "Ultra"
          ],
          "x-ms-enum": {
            "name": "ServiceLevel",
            "modelAsString": true,
            "values": [
              {
                "value": "Standard",
                "description": "Standard service level"
              },
              {
                "value": "Premium",
                "description": "Premium service level"
              },
              {
                "value": "Ultra",
                "description": "Ultra service level"
              }
            ]
          },
          "example": "Ultra",
          "default": "Premium"
        }
      }
    },
    "volumeList": {
      "description": "List of volume resources",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of volumes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/volume"
          }
        }
      }
    },
    "volume": {
      "description": "Volume resource",
      "type": "object",
      "x-ms-azure-resource": true,
      "required": [
        "location",
        "properties"
      ],
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "description": "Volume properties",
          "$ref": "#/definitions/volumeProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "resourceTags": {
      "description": "Resource tags",
      "type": "object"
    },
    "volumeProperties": {
      "description": "Volume properties",
      "type": "object",
      "required": [
        "creationToken",
        "serviceLevel"
      ],
      "properties": {
        "fileSystemId": {
          "title": "FileSystem ID",
          "type": "string",
          "readOnly": true,
          "description": "Unique FileSystem Identifier.",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "maxLength": 36,
          "minLength": 36,
          "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
        },
        "creationToken": {
          "title": "Creation Token or File Path",
          "type": "string",
          "description": "A unique file path for the volume. Used when creating mount targets",
          "minimum": 16,
          "maximum": 40,
          "example": "some-amazing-filepath"
        },
        "serviceLevel": {
          "title": "serviceLevel",
          "type": "string",
          "description": "The service level of the file system",
          "enum": [
            "Standard",
            "Premium",
            "Ultra"
          ],
          "x-ms-enum": {
            "name": "ServiceLevel",
            "modelAsString": true,
            "values": [
              {
                "value": "Standard",
                "description": "Standard service level"
              },
              {
                "value": "Premium",
                "description": "Premium service level"
              },
              {
                "value": "Ultra",
                "description": "Ultra service level"
              }
            ]
          },
          "example": "Ultra",
          "default": "Premium"
        },
        "usageThreshold": {
          "title": "usageThreshold",
          "type": "integer",
          "format": "int64",
          "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB.",
          "minimum": 107374182400,
          "maximum": 109951162777600,
          "default": 107374182400,
          "example": 107374182400
        },
        "exportPolicy": {
          "description": "Export policy rule",
          "properties": {
            "rules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/exportPolicyRule"
              }
            }
          }
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Azure lifecycle management"
        },
        "subnetId": {
          "type": "string",
          "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"
        }
      }
    },
    "exportPolicyRule": {
      "description": "Volume Export Policy Rule",
      "type": "object",
      "properties": {
        "ruleIndex": {
          "type": "integer",
          "description": "Order index"
        },
        "unixReadOnly": {
          "type": "boolean",
          "description": "Read only access"
        },
        "unixReadWrite": {
          "type": "boolean",
          "description": "Read and write access"
        },
        "cifs": {
          "type": "boolean",
          "description": "Allows CIFS protocol"
        },
        "nfsv3": {
          "type": "boolean",
          "description": "Allows NFSv3 protocol"
        },
        "nfsv4": {
          "type": "boolean",
          "description": "Allows NFSv4 protocol"
        },
        "allowedClients": {
          "type": "string",
          "description": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"
        }
      }
    },
    "volumePatch": {
      "description": "Volume patch resource",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "description": "Patchable volume properties",
          "$ref": "#/definitions/volumePatchProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "volumePatchProperties": {
      "description": "Patchable volume properties",
      "type": "object",
      "properties": {
        "serviceLevel": {
          "title": "serviceLevel",
          "type": "string",
          "description": "The service level of the file system",
          "enum": [
            "Standard",
            "Premium",
            "Ultra"
          ],
          "x-ms-enum": {
            "name": "ServiceLevel",
            "modelAsString": true,
            "values": [
              {
                "value": "Standard",
                "description": "Standard service level"
              },
              {
                "value": "Premium",
                "description": "Premium service level"
              },
              {
                "value": "Ultra",
                "description": "Ultra service level"
              }
            ]
          },
          "example": "Ultra",
          "default": "Premium"
        },
        "usageThreshold": {
          "title": "usageThreshold",
          "type": "integer",
          "format": "int64",
          "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB.",
          "minimum": 107374182400,
          "maximum": 109951162777600,
          "default": 107374182400,
          "example": 107374182400
        },
        "exportPolicy": {
          "description": "Export policy rule",
          "properties": {
            "rules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/exportPolicyRule"
              }
            }
          }
        }
      }
    },
    "mountTargetList": {
      "description": "List of Mount Targets",
      "type": "object",
      "properties": {
        "value": {
          "description": "A list of Mount targets",
          "type": "array",
          "items": {
            "$ref": "#/definitions/mountTarget"
          }
        }
      }
    },
    "mountTarget": {
      "description": "Mount Target",
      "type": "object",
      "required": [
        "location",
        "properties"
      ],
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "tags": {
          "description": "Resource tags",
          "$ref": "#/definitions/resourceTags",
          "x-ms-client-flatten": true
        },
        "properties": {
          "description": "Mount Target Properties",
          "$ref": "#/definitions/mountTargetProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "mountTargetProperties": {
      "description": "Mount target properties",
      "type": "object",
      "required": [
        "fileSystemId"
      ],
      "properties": {
        "mountTargetId": {
          "title": "mountTargetId",
          "type": "string",
          "readOnly": true,
          "description": "UUID v4 used to identify the MountTarget",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "maxLength": 36,
          "minLength": 36,
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "fileSystemId": {
          "title": "fileSystemId",
          "type": "string",
          "description": "UUID v4 used to identify the MountTarget",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "maxLength": 36,
          "minLength": 36,
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "ipAddress": {
          "title": "ipAddress",
          "description": "The mount target's IPv4 address",
          "type": "string",
          "readOnly": true,
          "example": "1.2.3.4"
        },
        "subnet": {
          "title": "subnet",
          "type": "string",
          "description": "The subnet",
          "example": "1.2.3.4"
        },
        "startIp": {
          "title": "startIp",
          "description": "The start of IPv4 address range to use when creating a new mount target",
          "type": "string",
          "example": "1.2.3.4"
        },
        "endIp": {
          "title": "endIp",
          "description": "The end of IPv4 address range to use when creating a new mount target",
          "type": "string",
          "example": "1.2.3.4"
        },
        "gateway": {
          "title": "gateway",
          "description": "The gateway of the IPv4 address range to use when creating a new mount target",
          "type": "string",
          "example": "1.2.3.4"
        },
        "netmask": {
          "title": "netmask",
          "description": "The netmask of the IPv4 address range to use when creating a new mount target",
          "type": "string",
          "example": "255.255.255.0"
        },
        "smbServerFqdn": {
          "title": "smbServerFQDN",
          "description": "The SMB server's Fully Qualified Domain Name, FQDN",
          "type": "string",
          "example": "fullyqualified.domainname.com"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Azure lifecycle management"
        }
      }
    },
    "snapshotsList": {
      "description": "List of Snapshots",
      "type": "object",
      "properties": {
        "value": {
          "description": "A list of Snapshots",
          "type": "array",
          "items": {
            "$ref": "#/definitions/snapshot"
          }
        }
      }
    },
    "snapshot": {
      "description": "Snapshot of a Volume",
      "type": "object",
      "x-ms-azure-resource": true,
      "required": [
        "location",
        "properties"
      ],
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "$ref": "#/definitions/resourceTags",
          "x-ms-client-flatten": true
        },
        "properties": {
          "description": "Snapshot Properties",
          "$ref": "#/definitions/snapshotProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "snapshotPatch": {
      "description": "Snapshot patch",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "tags": {
          "description": "Resource tags",
          "$ref": "#/definitions/resourceTags",
          "x-ms-client-flatten": true
        }
      }
    },
    "snapshotProperties": {
      "description": "Snapshot properties",
      "type": "object",
      "required": [
        "fileSystemId"
      ],
      "properties": {
        "snapshotId": {
          "title": "snapshotId",
          "type": "string",
          "readOnly": true,
          "description": "UUID v4 used to identify the Snapshot",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "maxLength": 36,
          "minLength": 36,
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "fileSystemId": {
          "title": "fileSystemId",
          "type": "string",
          "description": "UUID v4 used to identify the FileSystem",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "maxLength": 36,
          "minLength": 36,
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "creationDate": {
          "title": "name",
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The creation date of the snapshot",
          "example": "2017-08-15 13:23:33"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Azure lifecycle management"
        }
      }
    },
    "error": {
      "description": "Error response describing why the operation failed.",
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code",
          "example": "ErrorCode"
        },
        "message": {
          "type": "string",
          "description": "Detailed error message",
          "example": "Detailed error message"
        }
      }
    }
  },
  "parameters": {
    "SubscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ResourceGroup": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "AccountName": {
      "name": "accountName",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "The name of the NetApp account",
      "x-ms-parameter-location": "method"
    },
    "PoolName": {
      "name": "poolName",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "The name of the capacity pool",
      "x-ms-parameter-location": "method"
    },
    "VolumeName": {
      "name": "volumeName",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "The name of the volume",
      "x-ms-parameter-location": "method"
    },
    "MountTargetName": {
      "name": "mountTargetName",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "The name of the mount target",
      "x-ms-parameter-location": "method"
    },
    "SnapshotName": {
      "name": "snapshotName",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "The name of the mount target",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "description": "Version of the API to be used with the client request.",
      "in": "query",
      "type": "string",
      "required": true,
      "default": "2017-08-15"
    }
  }
}
