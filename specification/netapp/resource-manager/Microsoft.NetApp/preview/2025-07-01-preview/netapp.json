{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft NetApp",
    "version": "2025-07-01-preview",
    "description": "Microsoft NetApp Files Azure Resource Provider specification",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "SubscriptionQuotaItems"
    },
    {
      "name": "NetAppResourceQuotaLimitsAccount"
    },
    {
      "name": "RegionInfoResources"
    },
    {
      "name": "VolumeGroups"
    },
    {
      "name": "NetAppAccounts"
    },
    {
      "name": "CapacityPools"
    },
    {
      "name": "Backups"
    },
    {
      "name": "Volumes"
    },
    {
      "name": "Snapshots"
    },
    {
      "name": "SnapshotPolicies"
    },
    {
      "name": "BackupPolicies"
    },
    {
      "name": "VolumeQuotaRules"
    },
    {
      "name": "SubvolumeInfos"
    },
    {
      "name": "BackupVaults"
    },
    {
      "name": "Buckets"
    }
  ],
  "paths": {
    "/providers/Microsoft.NetApp/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "OperationList": {
            "$ref": "./examples/OperationList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/checkFilePathAvailability": {
      "post": {
        "operationId": "NetAppResource_CheckFilePathAvailability",
        "summary": "Check file path availability",
        "description": "Check if a file path is available.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilePathAvailabilityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CheckFilePathAvailability": {
            "$ref": "./examples/CheckFilePathAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/checkNameAvailability": {
      "post": {
        "operationId": "NetAppResource_CheckNameAvailability",
        "summary": "Check resource name availability",
        "description": "Check if a resource name is available.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceNameAvailabilityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CheckNameAvailability": {
            "$ref": "./examples/CheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/checkQuotaAvailability": {
      "post": {
        "operationId": "NetAppResource_CheckQuotaAvailability",
        "summary": "Check quota availability",
        "description": "Check if a quota is available.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuotaAvailabilityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CheckQuotaAvailability": {
            "$ref": "./examples/CheckQuotaAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/queryNetworkSiblingSet": {
      "post": {
        "operationId": "NetAppResource_QueryNetworkSiblingSet",
        "summary": "Describe a network sibling set",
        "description": "Get details of the specified network sibling set.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryNetworkSiblingSetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NetworkSiblingSet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkSiblingSet_Query": {
            "$ref": "./examples/NetworkSiblingSet_Query.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/quotaLimits": {
      "get": {
        "operationId": "NetAppResourceQuotaLimits_List",
        "tags": [
          "SubscriptionQuotaItems"
        ],
        "description": "Get the default and current limits for quotas",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/QuotaItemList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "QuotaLimits": {
            "$ref": "./examples/QuotaLimits_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/quotaLimits/{quotaLimitName}": {
      "get": {
        "operationId": "NetAppResourceQuotaLimits_Get",
        "tags": [
          "SubscriptionQuotaItems"
        ],
        "description": "Get the default and current quota limit",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
          },
          {
            "name": "quotaLimitName",
            "in": "path",
            "description": "The name of the Quota Limit",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/QuotaItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "QuotaLimits": {
            "$ref": "./examples/QuotaLimits_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/regionInfo": {
      "get": {
        "operationId": "NetAppResource_QueryRegionInfo",
        "summary": "Describes region specific information.",
        "description": "Provides storage to network proximity and logical zone mapping information.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/RegionInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegionInfo_Query": {
            "$ref": "./examples/RegionInfo.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/regionInfos": {
      "get": {
        "operationId": "NetAppResourceRegionInfos_List",
        "tags": [
          "RegionInfoResources"
        ],
        "description": "Provides region specific information.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RegionInfosList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegionInfos_List": {
            "$ref": "./examples/RegionInfos_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/regionInfos/default": {
      "get": {
        "operationId": "NetAppResourceRegionInfos_Get",
        "tags": [
          "RegionInfoResources"
        ],
        "description": "Provides storage to network proximity and logical zone mapping information.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RegionInfoResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegionInfos_Get": {
            "$ref": "./examples/RegionInfos_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/updateNetworkSiblingSet": {
      "post": {
        "operationId": "NetAppResource_UpdateNetworkSiblingSet",
        "summary": "Update the network features of a network sibling set",
        "description": "Update the network features of the specified network sibling set.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateNetworkSiblingSetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NetworkSiblingSet"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFeatures_Update": {
            "$ref": "./examples/NetworkSiblingSet_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/NetworkSiblingSet"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/usages": {
      "get": {
        "operationId": "NetAppResourceUsages_List",
        "summary": "Get usages",
        "description": "Get current subscription usages",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/UsagesListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Usages_List": {
            "$ref": "./examples/Usages_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/usages/{usageType}": {
      "get": {
        "operationId": "NetAppResourceUsages_Get",
        "summary": "Get specific type of usage",
        "description": "Get current subscription usage of the specific type",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
          },
          {
            "name": "usageType",
            "in": "path",
            "description": "The type of usage",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UsageResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Usages_Get": {
            "$ref": "./examples/Usages_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/netAppAccounts": {
      "get": {
        "operationId": "Accounts_ListBySubscription",
        "tags": [
          "NetAppAccounts"
        ],
        "description": "List and describe all NetApp accounts in the subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetAppAccountList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_List": {
            "$ref": "./examples/Accounts_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts": {
      "get": {
        "operationId": "Accounts_List",
        "tags": [
          "NetAppAccounts"
        ],
        "description": "List and describe all NetApp accounts in the resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetAppAccountList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_List": {
            "$ref": "./examples/Accounts_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}": {
      "get": {
        "operationId": "Accounts_Get",
        "tags": [
          "NetAppAccounts"
        ],
        "description": "Get the NetApp account",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetAppAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_Get": {
            "$ref": "./examples/Accounts_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Accounts_CreateOrUpdate",
        "tags": [
          "NetAppAccounts"
        ],
        "description": "Create or update the specified NetApp account within the resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "NetApp Account object supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetAppAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NetAppAccount' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NetAppAccount"
            }
          },
          "201": {
            "description": "Resource 'NetAppAccount' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/NetAppAccount"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_CreateOrUpdate": {
            "$ref": "./examples/Accounts_CreateOrUpdate.json"
          },
          "Accounts_CreateOrUpdateWithActiveDirectory": {
            "$ref": "./examples/Accounts_CreateOrUpdateAD.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/NetAppAccount"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Accounts_Update",
        "tags": [
          "NetAppAccounts"
        ],
        "description": "Patch the specified NetApp account",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "NetApp Account object supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetAppAccountPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetAppAccount"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/NetAppAccount"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_Update": {
            "$ref": "./examples/Accounts_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/NetAppAccount"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Accounts_Delete",
        "tags": [
          "NetAppAccounts"
        ],
        "description": "Delete the specified NetApp account",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_Delete": {
            "$ref": "./examples/Accounts_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/backupPolicies": {
      "get": {
        "operationId": "BackupPolicies_List",
        "tags": [
          "BackupPolicies"
        ],
        "description": "List backup policies for Netapp Account",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupPoliciesList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupPolicies_List": {
            "$ref": "./examples/BackupPolicies_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/backupPolicies/{backupPolicyName}": {
      "get": {
        "operationId": "BackupPolicies_Get",
        "tags": [
          "BackupPolicies"
        ],
        "description": "Get a particular backup Policy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupPolicyName",
            "in": "path",
            "description": "Backup policy Name which uniquely identify backup policy.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Backups_Get": {
            "$ref": "./examples/BackupPolicies_Get.json"
          }
        }
      },
      "put": {
        "operationId": "BackupPolicies_Create",
        "tags": [
          "BackupPolicies"
        ],
        "description": "Create a backup policy for Netapp Account",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupPolicyName",
            "in": "path",
            "description": "Backup policy Name which uniquely identify backup policy.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Backup policy object supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BackupPolicy' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/BackupPolicy"
            }
          },
          "201": {
            "description": "Resource 'BackupPolicy' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/BackupPolicy"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupPolicies_Create": {
            "$ref": "./examples/BackupPolicies_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/BackupPolicy"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "BackupPolicies_Update",
        "tags": [
          "BackupPolicies"
        ],
        "description": "Patch a backup policy for Netapp Account",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupPolicyName",
            "in": "path",
            "description": "Backup policy Name which uniquely identify backup policy.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Backup policy object supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupPolicyPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupPolicy"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/BackupPolicy"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupPolicies_Update": {
            "$ref": "./examples/BackupPolicies_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/BackupPolicy"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "BackupPolicies_Delete",
        "tags": [
          "BackupPolicies"
        ],
        "description": "Delete backup policy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupPolicyName",
            "in": "path",
            "description": "Backup policy Name which uniquely identify backup policy.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupPolicies_Delete": {
            "$ref": "./examples/BackupPolicies_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/backupVaults": {
      "get": {
        "operationId": "BackupVaults_ListByNetAppAccount",
        "tags": [
          "BackupVaults"
        ],
        "description": "List and describe all Backup Vaults in the NetApp account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupVaultsList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupVaults_List": {
            "$ref": "./examples/BackupVaults_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/backupVaults/{backupVaultName}": {
      "get": {
        "operationId": "BackupVaults_Get",
        "tags": [
          "BackupVaults"
        ],
        "description": "Get the Backup Vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "description": "The name of the Backup Vault",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupVault"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupVaults_Get": {
            "$ref": "./examples/BackupVaults_Get.json"
          }
        }
      },
      "put": {
        "operationId": "BackupVaults_CreateOrUpdate",
        "tags": [
          "BackupVaults"
        ],
        "description": "Create or update the specified Backup Vault in the NetApp account",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "description": "The name of the Backup Vault",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "BackupVault object supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupVault"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BackupVault' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/BackupVault"
            }
          },
          "201": {
            "description": "Resource 'BackupVault' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/BackupVault"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupVault_CreateOrUpdate": {
            "$ref": "./examples/BackupVaults_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/BackupVault"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "BackupVaults_Update",
        "tags": [
          "BackupVaults"
        ],
        "description": "Patch the specified NetApp Backup Vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "description": "The name of the Backup Vault",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Backup Vault object supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupVaultPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupVault"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/BackupVault"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupVaults_Update": {
            "$ref": "./examples/BackupVaults_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/BackupVault"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "BackupVaults_Delete",
        "tags": [
          "BackupVaults"
        ],
        "description": "Delete the specified Backup Vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "description": "The name of the Backup Vault",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupVaults_Delete": {
            "$ref": "./examples/BackupVaults_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/backupVaults/{backupVaultName}/backups": {
      "get": {
        "operationId": "Backups_ListByVault",
        "tags": [
          "Backups"
        ],
        "description": "List all backups Under a Backup Vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "description": "The name of the Backup Vault",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An option to specify the VolumeResourceId. If present, then only returns the backups under the specified volume",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupsList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Backups_List": {
            "$ref": "./examples/BackupsUnderBackupVault_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/backupVaults/{backupVaultName}/backups/{backupName}": {
      "get": {
        "operationId": "Backups_Get",
        "tags": [
          "Backups"
        ],
        "description": "Get the specified Backup under Backup Vault.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "description": "The name of the Backup Vault",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "backupName",
            "in": "path",
            "description": "The name of the backup",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_.]{0,255}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Backup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupsUnderBackupVault_Get": {
            "$ref": "./examples/BackupsUnderBackupVault_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Backups_Create",
        "tags": [
          "Backups"
        ],
        "description": "Create a backup under the Backup Vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "description": "The name of the Backup Vault",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "backupName",
            "in": "path",
            "description": "The name of the backup",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_.]{0,255}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Backup object supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Backup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Backup' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Backup"
            }
          },
          "201": {
            "description": "Resource 'Backup' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Backup"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupsUnderBackupVault_Create": {
            "$ref": "./examples/BackupsUnderBackupVault_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/Backup"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Backups_Update",
        "tags": [
          "Backups"
        ],
        "description": "Patch a Backup under the Backup Vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "description": "The name of the Backup Vault",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "backupName",
            "in": "path",
            "description": "The name of the backup",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_.]{0,255}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Backup object supplied in the body of the operation.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BackupPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Backup"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/Backup"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupsUnderBackupVault_Update": {
            "$ref": "./examples/BackupsUnderBackupVault_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/Backup"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Backups_Delete",
        "tags": [
          "Backups"
        ],
        "description": "Delete a Backup under the Backup Vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "description": "The name of the Backup Vault",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "backupName",
            "in": "path",
            "description": "The name of the backup",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_.]{0,255}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupsUnderBackupVault_Delete": {
            "$ref": "./examples/BackupsUnderBackupVault_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/backupVaults/{backupVaultName}/backups/{backupName}/restoreFiles": {
      "post": {
        "operationId": "BackupsUnderBackupVault_RestoreFiles",
        "tags": [
          "Backups"
        ],
        "description": "Restore the specified files from the specified backup to the active filesystem",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "description": "The name of the Backup Vault",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "backupName",
            "in": "path",
            "description": "The name of the backup",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_.]{0,255}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Restore payload supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupRestoreFiles"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Backups_SingleFileRestore": {
            "$ref": "./examples/BackupsUnderBackupVault_SingleFileRestore.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools": {
      "get": {
        "operationId": "Pools_List",
        "tags": [
          "CapacityPools"
        ],
        "description": "List all capacity pools in the NetApp Account",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CapacityPoolList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_List": {
            "$ref": "./examples/Pools_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}": {
      "get": {
        "operationId": "Pools_Get",
        "tags": [
          "CapacityPools"
        ],
        "description": "Get details of the specified capacity pool",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CapacityPool"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_Get": {
            "$ref": "./examples/Pools_Get.json"
          },
          "Pools_Get_CustomThroughput": {
            "$ref": "./examples/Pools_Get_CustomThroughput.json"
          }
        }
      },
      "put": {
        "operationId": "Pools_CreateOrUpdate",
        "tags": [
          "CapacityPools"
        ],
        "description": "Create or Update a capacity pool",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Capacity pool object supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CapacityPool"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CapacityPool' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/CapacityPool"
            }
          },
          "201": {
            "description": "Resource 'CapacityPool' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/CapacityPool"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_CreateOrUpdate": {
            "$ref": "./examples/Pools_CreateOrUpdate.json"
          },
          "Pools_CreateOrUpdate_CustomThroughput": {
            "$ref": "./examples/Pools_CreateOrUpdate_CustomThroughput.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/CapacityPool"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Pools_Update",
        "tags": [
          "CapacityPools"
        ],
        "description": "Patch the specified capacity pool",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Capacity pool object supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CapacityPoolPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CapacityPool"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_Update": {
            "$ref": "./examples/Pools_Update.json"
          },
          "Pools_Update_CustomThroughput": {
            "$ref": "./examples/Pools_Update_CustomThroughput.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/CapacityPool"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Pools_Delete",
        "tags": [
          "CapacityPools"
        ],
        "description": "Delete the specified capacity pool",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_Delete": {
            "$ref": "./examples/Pools_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes": {
      "get": {
        "operationId": "Volumes_List",
        "tags": [
          "Volumes"
        ],
        "description": "List all volumes within the capacity pool",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VolumeList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_List": {
            "$ref": "./examples/Volumes_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}": {
      "get": {
        "operationId": "Volumes_Get",
        "tags": [
          "Volumes"
        ],
        "description": "Get the details of the specified volume",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Volume"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_Get": {
            "$ref": "./examples/Volumes_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Volumes_CreateOrUpdate",
        "tags": [
          "Volumes"
        ],
        "description": "Create or update the specified volume within the capacity pool",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Volume object supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Volume"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Volume' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Volume"
            }
          },
          "201": {
            "description": "Resource 'Volume' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Volume"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_CreateOrUpdate": {
            "$ref": "./examples/Volumes_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/Volume"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Volumes_Update",
        "tags": [
          "Volumes"
        ],
        "description": "Patch the specified volume",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Volume object supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VolumePatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Volume"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_Update": {
            "$ref": "./examples/Volumes_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/Volume"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Volumes_Delete",
        "tags": [
          "Volumes"
        ],
        "description": "Delete the specified volume",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "forceDelete",
            "in": "query",
            "description": "An option to force delete the volume. Will cleanup resources connected to the particular volume",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_Delete": {
            "$ref": "./examples/Volumes_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/authorizeExternalReplication": {
      "post": {
        "operationId": "Volumes_AuthorizeExternalReplication",
        "tags": [
          "Volumes"
        ],
        "description": "Starts SVM peering and returns a command to be run on the external ONTAP to accept it.  Once the SVM have been peered a SnapMirror will be created",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SvmPeerCommandResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_AuthorizeExternalReplication": {
            "$ref": "./examples/Volumes_AuthorizeExternalReplication.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/SvmPeerCommandResponse"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/authorizeReplication": {
      "post": {
        "operationId": "Volumes_AuthorizeReplication",
        "tags": [
          "Volumes"
        ],
        "description": "Authorize the replication connection on the source volume",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Authorize request object supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthorizeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_AuthorizeReplication": {
            "$ref": "./examples/Volumes_AuthorizeReplication.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/breakFileLocks": {
      "post": {
        "operationId": "Volumes_BreakFileLocks",
        "tags": [
          "Volumes"
        ],
        "description": "Break all the file locks on a volume",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Optional body to provide the ability to clear file locks with selected options",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BreakFileLocksRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_BreakFileLocks": {
            "$ref": "./examples/Volumes_BreakFileLocks.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/breakReplication": {
      "post": {
        "operationId": "Volumes_BreakReplication",
        "tags": [
          "Volumes"
        ],
        "description": "Break the replication connection on the destination volume",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Optional body to force break the replication.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BreakReplicationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_BreakReplication": {
            "$ref": "./examples/Volumes_BreakReplication.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/buckets": {
      "get": {
        "operationId": "Buckets_List",
        "tags": [
          "Buckets"
        ],
        "description": "Describes all buckets belonging to a volume. Buckets allow additional services, such as AI services, connect to the volume data contained in those buckets.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BucketList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Buckets_List": {
            "$ref": "./examples/Buckets_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/buckets/{bucketName}": {
      "get": {
        "operationId": "Buckets_Get",
        "tags": [
          "Buckets"
        ],
        "description": "Get the details of the specified volume's bucket. A bucket allows additional services, such as AI services, connect to the volume data contained in those buckets.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "bucketName",
            "in": "path",
            "description": "The name of the bucket",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^([a-z]|(\\d(?!\\d{0,2}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})))([a-z\\d]|(\\.(?!(\\.|-)))|(-(?!\\.))){1,61}[a-z\\d]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Bucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Buckets_Get": {
            "$ref": "./examples/Buckets_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Buckets_CreateOrUpdate",
        "tags": [
          "Buckets"
        ],
        "description": "Creates or updates a bucket for a volume. A bucket allows additional services, such as AI services, connect to the volume data contained in those buckets.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "bucketName",
            "in": "path",
            "description": "The name of the bucket",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^([a-z]|(\\d(?!\\d{0,2}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})))([a-z\\d]|(\\.(?!(\\.|-)))|(-(?!\\.))){1,61}[a-z\\d]$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The bucket details including user details, and the volume path that should be mounted inside the bucket.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Bucket"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Bucket' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Bucket"
            }
          },
          "201": {
            "description": "Resource 'Bucket' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Bucket"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Buckets_CreateOrUpdate": {
            "$ref": "./examples/Buckets_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/Bucket"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Buckets_Update",
        "tags": [
          "Buckets"
        ],
        "description": "Updates the details of a volume bucket.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "bucketName",
            "in": "path",
            "description": "The name of the bucket",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^([a-z]|(\\d(?!\\d{0,2}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})))([a-z\\d]|(\\.(?!(\\.|-)))|(-(?!\\.))){1,61}[a-z\\d]$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The bucket details including user details, and the volume path that should be mounted inside the bucket.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BucketPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Bucket"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Buckets_Update": {
            "$ref": "./examples/Buckets_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/Bucket"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Buckets_Delete",
        "tags": [
          "Buckets"
        ],
        "description": "Delete a volume's bucket.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "bucketName",
            "in": "path",
            "description": "The name of the bucket",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^([a-z]|(\\d(?!\\d{0,2}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})))([a-z\\d]|(\\.(?!(\\.|-)))|(-(?!\\.))){1,61}[a-z\\d]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Buckets_Delete": {
            "$ref": "./examples/Buckets_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/buckets/{bucketName}/generateCredentials": {
      "post": {
        "operationId": "Buckets_GenerateCredentials",
        "tags": [
          "Buckets"
        ],
        "description": "Generate the access key and secret key used for accessing the specified volume bucket. Also return expiry date and time of key pair (in UTC).",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "bucketName",
            "in": "path",
            "description": "The name of the bucket",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^([a-z]|(\\d(?!\\d{0,2}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})))([a-z\\d]|(\\.(?!(\\.|-)))|(-(?!\\.))){1,61}[a-z\\d]$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The bucket's Access and Secret key pair expiry time expressed as the number of days from now.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BucketCredentialsExpiry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BucketGenerateCredentials"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Buckets_GenerateCredentials": {
            "$ref": "./examples/Buckets_GenerateCredentials.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/deleteReplication": {
      "post": {
        "operationId": "Volumes_DeleteReplication",
        "tags": [
          "Volumes"
        ],
        "description": "Delete the replication connection on the destination volume, and send release to the source replication",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_DeleteReplication": {
            "$ref": "./examples/Volumes_DeleteReplication.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/finalizeExternalReplication": {
      "post": {
        "operationId": "Volumes_FinalizeExternalReplication",
        "tags": [
          "Volumes"
        ],
        "description": "Finalizes the migration of an external volume by releasing the replication and breaking the external cluster peering if no other migration is active.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_FinalizeExternalReplication": {
            "$ref": "./examples/Volumes_FinalizeExternalReplication.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/finalizeRelocation": {
      "post": {
        "operationId": "Volumes_FinalizeRelocation",
        "tags": [
          "Volumes"
        ],
        "description": "Finalizes the relocation of the volume and cleans up the old volume.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_FinalizeRelocation": {
            "$ref": "./examples/Volumes_FinalizeRelocation.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/getGroupIdListForLdapUser": {
      "post": {
        "operationId": "Volumes_ListGetGroupIdListForLdapUser",
        "tags": [
          "Volumes"
        ],
        "description": "Returns the list of group Ids for a specific LDAP User",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Returns group Id list for a specific LDAP user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetGroupIdListForLdapUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GetGroupIdListForLdapUserResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetGroupIdListForUser": {
            "$ref": "./examples/GroupIdListForLDAPUser.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/GetGroupIdListForLdapUserResponse"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/latestBackupStatus/current": {
      "get": {
        "operationId": "Backups_GetLatestStatus",
        "tags": [
          "Volumes"
        ],
        "description": "Get the latest status of the backup for a volume",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_BackupStatus": {
            "$ref": "./examples/Volumes_LatestBackupStatus.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/latestRestoreStatus/current": {
      "get": {
        "operationId": "Backups_GetVolumeLatestRestoreStatus",
        "tags": [
          "Volumes"
        ],
        "description": "Get the latest status of the restore for a volume",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RestoreStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_RestoreStatus": {
            "$ref": "./examples/Volumes_LatestRestoreStatus.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/listQuotaReport": {
      "post": {
        "operationId": "Volumes_ListQuotaReport",
        "tags": [
          "Volumes"
        ],
        "description": "A long-running resource action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ListQuotaReportResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListQuotaReport": {
            "$ref": "./examples/Volumes_ListQuotaReport.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ListQuotaReportResponse"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/listReplications": {
      "post": {
        "operationId": "Volumes_ListReplications",
        "tags": [
          "Volumes"
        ],
        "description": "List all replications for a specified volume",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ListReplications"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_ListReplications": {
            "$ref": "./examples/Volumes_ListReplications.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/migrateBackups": {
      "post": {
        "operationId": "BackupsUnderVolume_MigrateBackups",
        "tags": [
          "Volumes"
        ],
        "description": "Migrate the backups under volume to backup vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Migrate backups under volume payload supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupsMigrationRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupsUnderVolume_Migrate": {
            "$ref": "./examples/BackupsUnderVolume_Migrate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/peerExternalCluster": {
      "post": {
        "operationId": "Volumes_PeerExternalCluster",
        "tags": [
          "Volumes"
        ],
        "description": "Starts peering the external cluster for this migration volume",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Cluster peer request object supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PeerClusterForVolumeMigrationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ClusterPeerCommandResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_PeerExternalCluster": {
            "$ref": "./examples/Volumes_PeerExternalCluster.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ClusterPeerCommandResponse"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/performReplicationTransfer": {
      "post": {
        "operationId": "Volumes_PerformReplicationTransfer",
        "tags": [
          "Volumes"
        ],
        "description": "Performs an adhoc replication transfer on a volume with volumeType Migration",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_PerformReplicationTransfer": {
            "$ref": "./examples/Volumes_PerformReplicationTransfer.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/poolChange": {
      "post": {
        "operationId": "Volumes_PoolChange",
        "tags": [
          "Volumes"
        ],
        "description": "Moves volume to another pool",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Move volume to the pool supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PoolChangeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_AuthorizeReplication": {
            "$ref": "./examples/Volumes_PoolChange.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/populateAvailabilityZone": {
      "post": {
        "operationId": "Volumes_PopulateAvailabilityZone",
        "tags": [
          "Volumes"
        ],
        "description": "This operation will populate availability zone information for a volume",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Volume"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_PopulateAvailabilityZones": {
            "$ref": "./examples/Volumes_PopulateAvailabilityZones.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/Volume"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/reestablishReplication": {
      "post": {
        "operationId": "Volumes_ReestablishReplication",
        "tags": [
          "Volumes"
        ],
        "description": "Re-establish a previously deleted replication between 2 volumes that have a common ad-hoc or policy-based snapshots",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "body for the id of the source volume.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReestablishReplicationRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_ReestablishReplication": {
            "$ref": "./examples/Volumes_ReestablishReplication.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/reinitializeReplication": {
      "post": {
        "operationId": "Volumes_ReInitializeReplication",
        "tags": [
          "Volumes"
        ],
        "description": "Re-Initializes the replication connection on the destination volume",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_ReInitializeReplication": {
            "$ref": "./examples/Volumes_ReInitializeReplication.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/relocate": {
      "post": {
        "operationId": "Volumes_Relocate",
        "tags": [
          "Volumes"
        ],
        "description": "Relocates volume to a new stamp",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Relocate volume request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RelocateVolumeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_Relocate": {
            "$ref": "./examples/Volumes_Relocate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/replicationStatus": {
      "get": {
        "operationId": "Volumes_ReplicationStatus",
        "tags": [
          "Volumes"
        ],
        "description": "Get the status of the replication",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ReplicationStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_ReplicationStatus": {
            "$ref": "./examples/Volumes_ReplicationStatus.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/resetCifsPassword": {
      "post": {
        "operationId": "Volumes_ResetCifsPassword",
        "tags": [
          "Volumes"
        ],
        "description": "Reset cifs password from volume",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_ResetCifsPassword": {
            "$ref": "./examples/Volumes_ResetCifsPassword.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/resyncReplication": {
      "post": {
        "operationId": "Volumes_ResyncReplication",
        "tags": [
          "Volumes"
        ],
        "description": "Resync the connection on the destination volume. If the operation is ran on the source volume it will reverse-resync the connection and sync from destination to source.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_ResyncReplication": {
            "$ref": "./examples/Volumes_ResyncReplication.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/revert": {
      "post": {
        "operationId": "Volumes_Revert",
        "tags": [
          "Volumes"
        ],
        "description": "Revert a volume to the snapshot specified in the body",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Object for snapshot to revert supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VolumeRevert"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_Revert": {
            "$ref": "./examples/Volumes_Revert.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/revertRelocation": {
      "post": {
        "operationId": "Volumes_RevertRelocation",
        "tags": [
          "Volumes"
        ],
        "description": "Reverts the volume relocation process, cleans up the new volume and starts using the former-existing volume.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_RevertRelocation": {
            "$ref": "./examples/Volumes_RevertRelocation.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots": {
      "get": {
        "operationId": "Snapshots_List",
        "tags": [
          "Snapshots"
        ],
        "description": "List all snapshots associated with the volume",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SnapshotsList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Snapshots_List": {
            "$ref": "./examples/Snapshots_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots/{snapshotName}": {
      "get": {
        "operationId": "Snapshots_Get",
        "tags": [
          "Snapshots"
        ],
        "description": "Get details of the specified snapshot",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "snapshotName",
            "in": "path",
            "description": "The name of the snapshot",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Snapshot"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Snapshots_Get": {
            "$ref": "./examples/Snapshots_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Snapshots_Create",
        "tags": [
          "Snapshots"
        ],
        "description": "Create the specified snapshot within the given volume",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "snapshotName",
            "in": "path",
            "description": "The name of the snapshot",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Snapshot object supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Snapshot"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Resource 'Snapshot' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Snapshot"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Snapshots_Create": {
            "$ref": "./examples/Snapshots_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/Snapshot"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Snapshots_Update",
        "tags": [
          "Snapshots"
        ],
        "description": "Patch a snapshot",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "snapshotName",
            "in": "path",
            "description": "The name of the snapshot",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Snapshot object supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Snapshot"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Snapshots_Update": {
            "$ref": "./examples/Snapshots_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/Snapshot"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Snapshots_Delete",
        "tags": [
          "Snapshots"
        ],
        "description": "Delete snapshot",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "snapshotName",
            "in": "path",
            "description": "The name of the snapshot",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Snapshots_Delete": {
            "$ref": "./examples/Snapshots_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots/{snapshotName}/restoreFiles": {
      "post": {
        "operationId": "Snapshots_RestoreFiles",
        "tags": [
          "Snapshots"
        ],
        "description": "Restore the specified files from the specified snapshot to the active filesystem",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "snapshotName",
            "in": "path",
            "description": "The name of the snapshot",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Restore payload supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotRestoreFiles"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Snapshots_SingleFileRestore": {
            "$ref": "./examples/Snapshots_SingleFileRestore.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/splitCloneFromParent": {
      "post": {
        "operationId": "Volumes_SplitCloneFromParent",
        "tags": [
          "Volumes"
        ],
        "description": "Split operation to convert clone volume to an independent volume.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Volume"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_SplitClone": {
            "$ref": "./examples/Volumes_SplitClone.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/Volume"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/subvolumes": {
      "get": {
        "operationId": "Subvolumes_ListByVolume",
        "tags": [
          "SubvolumeInfos"
        ],
        "description": "Returns a list of the subvolumes in the volume",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SubvolumesList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Subvolumes_List": {
            "$ref": "./examples/Subvolumes_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/subvolumes/{subvolumeName}": {
      "get": {
        "operationId": "Subvolumes_Get",
        "tags": [
          "SubvolumeInfos"
        ],
        "description": "Returns the path associated with the subvolumeName provided",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "subvolumeName",
            "in": "path",
            "description": "The name of the subvolume.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SubvolumeInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Subvolumes_Get": {
            "$ref": "./examples/Subvolumes_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Subvolumes_Create",
        "tags": [
          "SubvolumeInfos"
        ],
        "description": "Creates a subvolume in the path or clones the subvolume mentioned in the parentPath",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "subvolumeName",
            "in": "path",
            "description": "The name of the subvolume.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Subvolume object supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubvolumeInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SubvolumeInfo' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SubvolumeInfo"
            }
          },
          "201": {
            "description": "Resource 'SubvolumeInfo' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SubvolumeInfo"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Subvolumes_Create": {
            "$ref": "./examples/Subvolumes_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/SubvolumeInfo"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Subvolumes_Update",
        "tags": [
          "SubvolumeInfos"
        ],
        "description": "Patch a subvolume",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "subvolumeName",
            "in": "path",
            "description": "The name of the subvolume.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Subvolume object supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubvolumePatchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SubvolumeInfo"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Subvolumes_Update": {
            "$ref": "./examples/Subvolumes_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/SubvolumeInfo"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Subvolumes_Delete",
        "tags": [
          "SubvolumeInfos"
        ],
        "description": "Delete subvolume",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "subvolumeName",
            "in": "path",
            "description": "The name of the subvolume.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Subvolumes_Delete": {
            "$ref": "./examples/Subvolumes_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/subvolumes/{subvolumeName}/getMetadata": {
      "post": {
        "operationId": "Subvolumes_GetMetadata",
        "tags": [
          "SubvolumeInfos"
        ],
        "description": "Get details of the specified subvolume",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "subvolumeName",
            "in": "path",
            "description": "The name of the subvolume.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SubvolumeModel"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Subvolumes_Metadata": {
            "$ref": "./examples/Subvolumes_Metadata.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/SubvolumeModel"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/volumeQuotaRules": {
      "get": {
        "operationId": "VolumeQuotaRules_ListByVolume",
        "tags": [
          "VolumeQuotaRules"
        ],
        "description": "List all quota rules associated with the volume",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VolumeQuotaRulesList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VolumeQuotaRules_List": {
            "$ref": "./examples/VolumeQuotaRules_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/volumeQuotaRules/{volumeQuotaRuleName}": {
      "get": {
        "operationId": "VolumeQuotaRules_Get",
        "tags": [
          "VolumeQuotaRules"
        ],
        "description": "Get details of the specified quota rule",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeQuotaRuleName",
            "in": "path",
            "description": "The name of volume quota rule",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VolumeQuotaRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VolumeQuotaRules_Get": {
            "$ref": "./examples/VolumeQuotaRules_Get.json"
          }
        }
      },
      "put": {
        "operationId": "VolumeQuotaRules_Create",
        "tags": [
          "VolumeQuotaRules"
        ],
        "description": "Create the specified quota rule within the given volume",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeQuotaRuleName",
            "in": "path",
            "description": "The name of volume quota rule",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Quota rule object supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VolumeQuotaRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'VolumeQuotaRule' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/VolumeQuotaRule"
            }
          },
          "201": {
            "description": "Resource 'VolumeQuotaRule' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/VolumeQuotaRule"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VolumeQuotaRules_Create": {
            "$ref": "./examples/VolumeQuotaRules_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/VolumeQuotaRule"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "VolumeQuotaRules_Update",
        "tags": [
          "VolumeQuotaRules"
        ],
        "description": "Patch a quota rule",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeQuotaRuleName",
            "in": "path",
            "description": "The name of volume quota rule",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Quota rule object supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VolumeQuotaRulePatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VolumeQuotaRule"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VolumeQuotaRules_Update": {
            "$ref": "./examples/VolumeQuotaRules_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/VolumeQuotaRule"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "VolumeQuotaRules_Delete",
        "tags": [
          "VolumeQuotaRules"
        ],
        "description": "Delete quota rule",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "The name of the capacity pool",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The name of the volume",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "volumeQuotaRuleName",
            "in": "path",
            "description": "The name of volume quota rule",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VolumeQuotaRules_Delete": {
            "$ref": "./examples/VolumeQuotaRules_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/changeKeyVault": {
      "post": {
        "operationId": "Accounts_ChangeKeyVault",
        "tags": [
          "NetAppAccounts"
        ],
        "description": "Affects existing volumes that are encrypted with Key Vault/Managed HSM, and new volumes. Supports HSM to Key Vault, Key Vault to HSM, HSM to HSM and Key Vault to Key Vault.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The required parameters to perform encryption migration.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ChangeKeyVault"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_ChangeKeyVault": {
            "$ref": "./examples/Accounts_ChangeKeyVault.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/getKeyVaultStatus": {
      "post": {
        "operationId": "Accounts_GetChangeKeyVaultInformation",
        "tags": [
          "NetAppAccounts"
        ],
        "description": "Contains data from encryption.keyVaultProperties as well as information about which private endpoint is used by each encryption sibling set. Response from this endpoint can be modified and used as request body for POST request.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GetKeyVaultStatusResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_GetChangeKeyVaultInformation": {
            "$ref": "./examples/Accounts_GetChangeKeyVaultInformation.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/GetKeyVaultStatusResponse"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/migrateBackups": {
      "post": {
        "operationId": "BackupsUnderAccount_MigrateBackups",
        "tags": [
          "NetAppAccounts"
        ],
        "description": "Migrate the backups under a NetApp account to backup vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Migrate backups under an account payload supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupsMigrationRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BackupsUnderAccount_Migrate": {
            "$ref": "./examples/BackupsUnderAccount_Migrate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/quotaLimits": {
      "get": {
        "operationId": "NetAppResourceQuotaLimitsAccount_List",
        "tags": [
          "NetAppResourceQuotaLimitsAccount"
        ],
        "description": "Gets a list of quota limits for all quotas that are under account. Currently PoolsPerAccount is the only one.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/QuotaItemList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "QuotaLimitsAccount_List": {
            "$ref": "./examples/QuotaLimitsAccount_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/quotaLimits/{quotaLimitName}": {
      "get": {
        "operationId": "NetAppResourceQuotaLimitsAccount_Get",
        "tags": [
          "NetAppResourceQuotaLimitsAccount"
        ],
        "description": "Get the default, current and usages account quota limit",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "quotaLimitName",
            "in": "path",
            "description": "The name of the Quota Limit",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/QuotaItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Volumes_RestoreStatus": {
            "$ref": "./examples/QuotaLimitsAccount_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/renewCredentials": {
      "post": {
        "operationId": "Accounts_RenewCredentials",
        "tags": [
          "NetAppAccounts"
        ],
        "description": "Renew identity credentials that are used to authenticate to key vault, for customer-managed key encryption. If encryption.identity.principalId does not match identity.principalId, running this operation will fix it.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_RenewCredentials": {
            "$ref": "./examples/Accounts_RenewCredentials.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies": {
      "get": {
        "operationId": "SnapshotPolicies_List",
        "tags": [
          "SnapshotPolicies"
        ],
        "description": "List snapshot policy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SnapshotPoliciesList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SnapshotPolicies_List": {
            "$ref": "./examples/SnapshotPolicies_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies/{snapshotPolicyName}": {
      "get": {
        "operationId": "SnapshotPolicies_Get",
        "tags": [
          "SnapshotPolicies"
        ],
        "description": "Get a snapshot Policy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "snapshotPolicyName",
            "in": "path",
            "description": "The name of the snapshot policy",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SnapshotPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SnapshotPolicies_Get": {
            "$ref": "./examples/SnapshotPolicies_Get.json"
          }
        }
      },
      "put": {
        "operationId": "SnapshotPolicies_Create",
        "tags": [
          "SnapshotPolicies"
        ],
        "description": "Create a snapshot policy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "snapshotPolicyName",
            "in": "path",
            "description": "The name of the snapshot policy",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Snapshot policy object supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SnapshotPolicy' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SnapshotPolicy"
            }
          },
          "201": {
            "description": "Resource 'SnapshotPolicy' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SnapshotPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SnapshotPolicies_Create": {
            "$ref": "./examples/SnapshotPolicies_Create.json"
          }
        }
      },
      "patch": {
        "operationId": "SnapshotPolicies_Update",
        "tags": [
          "SnapshotPolicies"
        ],
        "description": "Patch a snapshot policy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "snapshotPolicyName",
            "in": "path",
            "description": "The name of the snapshot policy",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Snapshot policy object supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotPolicyPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SnapshotPolicy"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/SnapshotPolicy"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SnapshotPolicies_Update": {
            "$ref": "./examples/SnapshotPolicies_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/SnapshotPolicy"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "SnapshotPolicies_Delete",
        "tags": [
          "SnapshotPolicies"
        ],
        "description": "Delete snapshot policy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "snapshotPolicyName",
            "in": "path",
            "description": "The name of the snapshot policy",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SnapshotPolicies_Delete": {
            "$ref": "./examples/SnapshotPolicies_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies/{snapshotPolicyName}/volumes": {
      "get": {
        "operationId": "SnapshotPolicies_ListVolumes",
        "tags": [
          "SnapshotPolicies"
        ],
        "description": "Get volumes associated with snapshot policy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "snapshotPolicyName",
            "in": "path",
            "description": "The name of the snapshot policy",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SnapshotPolicyVolumeList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SnapshotPolicies_ListVolumes": {
            "$ref": "./examples/SnapshotPolicies_ListVolumes.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/transitiontocmk": {
      "post": {
        "operationId": "Accounts_TransitionToCmk",
        "tags": [
          "NetAppAccounts"
        ],
        "description": "Transitions all volumes in a VNet to a different encryption key source (Microsoft-managed key or Azure Key Vault). Operation fails if targeted volumes share encryption sibling set with volumes from another account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The required parameters to perform encryption transition.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EncryptionTransitionRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_MigrateEncryptionKey": {
            "$ref": "./examples/Accounts_TransitionEncryptionKey.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/volumeGroups": {
      "get": {
        "operationId": "VolumeGroups_ListByNetAppAccount",
        "tags": [
          "NetAppAccounts"
        ],
        "description": "List all volume groups for given account",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VolumeGroupList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VolumeGroups_List_Oracle": {
            "$ref": "./examples/VolumeGroups_List_Oracle.json"
          },
          "VolumeGroups_List_SapHana": {
            "$ref": "./examples/VolumeGroups_List_SapHana.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/volumeGroups/{volumeGroupName}": {
      "get": {
        "operationId": "VolumeGroups_Get",
        "tags": [
          "VolumeGroups"
        ],
        "description": "Get details of the specified volume group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "volumeGroupName",
            "in": "path",
            "description": "The name of the volumeGroup",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VolumeGroupDetails"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VolumeGroups_Get_Oracle": {
            "$ref": "./examples/VolumeGroups_Get_Oracle.json"
          },
          "VolumeGroups_Get_SapHana": {
            "$ref": "./examples/VolumeGroups_Get_SapHana.json"
          }
        }
      },
      "put": {
        "operationId": "VolumeGroups_Create",
        "tags": [
          "VolumeGroups"
        ],
        "description": "Create a volume group along with specified volumes",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "volumeGroupName",
            "in": "path",
            "description": "The name of the volumeGroup",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Volume Group object supplied in the body of the operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VolumeGroupDetails"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Resource 'VolumeGroupDetails' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/VolumeGroupDetails"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VolumeGroups_Create_Oracle": {
            "$ref": "./examples/VolumeGroups_Create_Oracle.json"
          },
          "VolumeGroups_Create_SapHana": {
            "$ref": "./examples/VolumeGroups_Create_SapHana.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/VolumeGroupDetails"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "VolumeGroups_Delete",
        "tags": [
          "VolumeGroups"
        ],
        "description": "Delete the specified volume group only if there are no volumes under volume group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the NetApp account",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$"
          },
          {
            "name": "volumeGroupName",
            "in": "path",
            "description": "The name of the volumeGroup",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VolumeGroups_Delete": {
            "$ref": "./examples/VolumeGroups_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AcceptGrowCapacityPoolForShortTermCloneSplit": {
      "type": "string",
      "description": "While auto splitting the short term clone volume, if the parent pool does not have enough space to accommodate the volume after split, it will be automatically resized, which will lead to increased billing. To accept capacity pool size auto grow and create a short term clone volume, set the property as accepted.",
      "enum": [
        "Accepted",
        "Declined"
      ],
      "x-ms-enum": {
        "name": "AcceptGrowCapacityPoolForShortTermCloneSplit",
        "modelAsString": true,
        "values": [
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Auto grow capacity pool for short term clone split is accepted."
          },
          {
            "name": "Declined",
            "value": "Declined",
            "description": "Auto grow capacity pool for short term clone split is declined. Short term clone volume creation will not be allowed, to create short term clone volume accept auto grow capacity pool."
          }
        ]
      }
    },
    "AccountEncryption": {
      "type": "object",
      "description": "Encryption settings",
      "properties": {
        "keySource": {
          "type": "string",
          "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.NetApp, Microsoft.KeyVault",
          "default": "Microsoft.NetApp",
          "enum": [
            "Microsoft.NetApp",
            "Microsoft.KeyVault"
          ],
          "x-ms-enum": {
            "name": "KeySource",
            "modelAsString": true,
            "values": [
              {
                "name": "Microsoft.NetApp",
                "value": "Microsoft.NetApp",
                "description": "Microsoft-managed key encryption"
              },
              {
                "name": "Microsoft.KeyVault",
                "value": "Microsoft.KeyVault",
                "description": "Customer-managed key encryption"
              }
            ]
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Properties provided by KeVault. Applicable if keySource is 'Microsoft.KeyVault'."
        },
        "identity": {
          "$ref": "#/definitions/EncryptionIdentity",
          "description": "Identity used to authenticate to KeyVault. Applicable if keySource is 'Microsoft.KeyVault'."
        }
      }
    },
    "AccountProperties": {
      "type": "object",
      "description": "NetApp account properties",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Azure lifecycle management",
          "readOnly": true
        },
        "activeDirectories": {
          "type": "array",
          "description": "Active Directories",
          "items": {
            "$ref": "#/definitions/ActiveDirectory"
          },
          "x-ms-identifiers": [
            "activeDirectoryId"
          ]
        },
        "encryption": {
          "$ref": "#/definitions/AccountEncryption",
          "description": "Encryption settings"
        },
        "disableShowmount": {
          "type": "boolean",
          "description": "Shows the status of disableShowmount for all volumes under the subscription, null equals false",
          "x-nullable": true,
          "readOnly": true
        },
        "nfsV4IDDomain": {
          "$ref": "#/definitions/VfsV4IDDomain",
          "description": "Domain for NFSv4 user ID mapping. This property will be set for all NetApp accounts in the subscription and region and only affect non ldap NFSv4 volumes.",
          "x-nullable": true
        },
        "multiAdStatus": {
          "$ref": "#/definitions/MultiAdStatus",
          "description": "MultiAD Status for the account",
          "readOnly": true
        },
        "ldapConfiguration": {
          "$ref": "#/definitions/LdapConfiguration",
          "description": "LDAP Configuration for the account."
        }
      }
    },
    "ActiveDirectory": {
      "type": "object",
      "description": "Active Directory",
      "properties": {
        "activeDirectoryId": {
          "type": "string",
          "description": "Id of the Active Directory",
          "x-nullable": true
        },
        "username": {
          "type": "string",
          "description": "A domain user account with permission to create machine accounts"
        },
        "password": {
          "type": "string",
          "format": "password",
          "description": "Plain text password of Active Directory domain administrator, value is masked in the response",
          "maxLength": 64,
          "x-ms-secret": true
        },
        "domain": {
          "type": "string",
          "description": "Name of the Active Directory domain"
        },
        "dns": {
          "type": "string",
          "description": "Comma separated list of DNS server IP addresses (IPv4 only) for the Active Directory domain",
          "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$"
        },
        "status": {
          "$ref": "#/definitions/ActiveDirectoryStatus",
          "description": "Status of the Active Directory",
          "readOnly": true
        },
        "statusDetails": {
          "type": "string",
          "description": "Any details in regards to the Status of the Active Directory",
          "readOnly": true
        },
        "smbServerName": {
          "type": "string",
          "description": "NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes"
        },
        "organizationalUnit": {
          "type": "string",
          "description": "The Organizational Unit (OU) within the Windows Active Directory",
          "default": "CN=Computers"
        },
        "site": {
          "type": "string",
          "description": "The Active Directory site the service will limit Domain Controller discovery to"
        },
        "backupOperators": {
          "type": "array",
          "description": "Users to be added to the Built-in Backup Operator active directory group. A list of unique usernames without domain specifier",
          "items": {
            "$ref": "#/definitions/UserName"
          }
        },
        "administrators": {
          "type": "array",
          "description": "Users to be added to the Built-in Administrators active directory group. A list of unique usernames without domain specifier",
          "items": {
            "$ref": "#/definitions/UserName"
          }
        },
        "kdcIP": {
          "type": "string",
          "description": "kdc server IP address for the active directory machine. This optional parameter is used only while creating kerberos volume.",
          "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
        },
        "adName": {
          "type": "string",
          "description": "Name of the active directory machine. This optional parameter is used only while creating kerberos volume",
          "minLength": 1,
          "maxLength": 64
        },
        "serverRootCACertificate": {
          "type": "string",
          "format": "password",
          "description": "When LDAP over SSL/TLS is enabled, the LDAP client is required to have base64 encoded Active Directory Certificate Service's self-signed root CA certificate, this optional parameter is used only for dual protocol with LDAP user-mapping volumes.",
          "minLength": 1,
          "maxLength": 10240,
          "x-ms-secret": true
        },
        "aesEncryption": {
          "type": "boolean",
          "description": "If enabled, AES encryption will be enabled for SMB communication."
        },
        "ldapSigning": {
          "type": "boolean",
          "description": "Specifies whether or not the LDAP traffic needs to be signed."
        },
        "securityOperators": {
          "type": "array",
          "description": "Domain Users in the Active directory to be given SeSecurityPrivilege privilege (Needed for SMB Continuously available shares for SQL). A list of unique usernames without domain specifier",
          "items": {
            "$ref": "#/definitions/UserName"
          }
        },
        "ldapOverTLS": {
          "type": "boolean",
          "description": "Specifies whether or not the LDAP traffic needs to be secured via TLS."
        },
        "allowLocalNfsUsersWithLdap": {
          "type": "boolean",
          "description": "If enabled, NFS client local users can also (in addition to LDAP users) access the NFS volumes."
        },
        "encryptDCConnections": {
          "type": "boolean",
          "description": "If enabled, Traffic between the SMB server to Domain Controller (DC) will be encrypted."
        },
        "ldapSearchScope": {
          "$ref": "#/definitions/LdapSearchScopeOpt",
          "description": "LDAP Search scope options"
        },
        "preferredServersForLdapClient": {
          "type": "string",
          "description": "Comma separated list of IPv4 addresses of preferred servers for LDAP client. At most two comma separated IPv4 addresses can be passed.",
          "maxLength": 32,
          "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))?)?$"
        }
      }
    },
    "ActiveDirectoryStatus": {
      "type": "string",
      "description": "Status of the Active Directory",
      "enum": [
        "Created",
        "InUse",
        "Deleted",
        "Error",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "ActiveDirectoryStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Created",
            "value": "Created",
            "description": "Active Directory created but not in use"
          },
          {
            "name": "InUse",
            "value": "InUse",
            "description": "Active Directory in use by SMB Volume"
          },
          {
            "name": "Deleted",
            "value": "Deleted",
            "description": "Active Directory Deleted"
          },
          {
            "name": "Error",
            "value": "Error",
            "description": "Error with the Active Directory"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Active Directory Updating"
          }
        ]
      }
    },
    "ApplicationType": {
      "type": "string",
      "description": "Application Type",
      "enum": [
        "SAP-HANA",
        "ORACLE"
      ],
      "x-ms-enum": {
        "name": "ApplicationType",
        "modelAsString": true,
        "values": [
          {
            "name": "SAP-HANA",
            "value": "SAP-HANA"
          },
          {
            "name": "ORACLE",
            "value": "ORACLE"
          }
        ]
      }
    },
    "AuthorizeRequest": {
      "type": "object",
      "description": "Authorize request",
      "properties": {
        "remoteVolumeResourceId": {
          "type": "string",
          "description": "Resource id of the remote volume"
        }
      }
    },
    "Backup": {
      "type": "object",
      "description": "Backup under a Backup Vault",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupProperties",
          "description": "Backup Properties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BackupPatch": {
      "type": "object",
      "description": "Backup patch",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupPatchProperties",
          "description": "Backup Patch Properties",
          "x-ms-client-flatten": true
        }
      }
    },
    "BackupPatchProperties": {
      "type": "object",
      "description": "Backup patch properties",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label for backup"
        }
      }
    },
    "BackupPoliciesList": {
      "type": "object",
      "description": "List of Backup Policies",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BackupPolicy items on this page",
          "items": {
            "$ref": "#/definitions/BackupPolicy"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BackupPolicy": {
      "type": "object",
      "description": "Backup policy information",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupPolicyProperties",
          "description": "Backup policy Properties",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "\"If etag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.\")",
          "readOnly": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "BackupPolicyPatch": {
      "type": "object",
      "description": "Backup policy Details for create and update",
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "description": "Resource Id",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Resource name",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Resource type",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/BackupPolicyProperties",
          "description": "Backup policy Properties",
          "x-ms-client-flatten": true
        }
      }
    },
    "BackupPolicyProperties": {
      "type": "object",
      "description": "Backup policy properties",
      "properties": {
        "backupPolicyId": {
          "type": "string",
          "description": "Backup Policy GUID ID",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "description": "Azure lifecycle management",
          "readOnly": true
        },
        "dailyBackupsToKeep": {
          "type": "integer",
          "format": "int32",
          "description": "Daily backups count to keep"
        },
        "weeklyBackupsToKeep": {
          "type": "integer",
          "format": "int32",
          "description": "Weekly backups count to keep"
        },
        "monthlyBackupsToKeep": {
          "type": "integer",
          "format": "int32",
          "description": "Monthly backups count to keep"
        },
        "volumesAssigned": {
          "type": "integer",
          "format": "int32",
          "description": "Volumes using current backup policy",
          "readOnly": true
        },
        "enabled": {
          "type": "boolean",
          "description": "The property to decide policy is enabled or not"
        },
        "volumeBackups": {
          "type": "array",
          "description": "A list of volumes assigned to this policy",
          "items": {
            "$ref": "#/definitions/VolumeBackups"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "volumeName"
          ]
        }
      }
    },
    "BackupProperties": {
      "type": "object",
      "description": "Backup properties",
      "properties": {
        "backupId": {
          "type": "string",
          "description": "UUID v4 used to identify the Backup",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date of the backup",
          "readOnly": true
        },
        "snapshotCreationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The snapshot creation date of the backup",
          "x-nullable": true,
          "readOnly": true
        },
        "completionDate": {
          "type": "string",
          "format": "date-time",
          "description": "The completion date of the backup",
          "x-nullable": true,
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "description": "Azure lifecycle management",
          "readOnly": true
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Size of backup in bytes",
          "readOnly": true
        },
        "label": {
          "type": "string",
          "description": "Label for backup"
        },
        "backupType": {
          "$ref": "#/definitions/BackupType",
          "description": "Type of backup Manual or Scheduled",
          "readOnly": true
        },
        "failureReason": {
          "type": "string",
          "description": "Failure reason",
          "readOnly": true
        },
        "volumeResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "ResourceId used to identify the Volume",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
              }
            ]
          }
        },
        "useExistingSnapshot": {
          "type": "boolean",
          "description": "Manual backup an already existing snapshot. This will always be false for scheduled backups and true/false for manual backups",
          "default": false,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "snapshotName": {
          "type": "string",
          "description": "The name of the snapshot",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "backupPolicyResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "ResourceId used to identify the backup policy",
          "readOnly": true,
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
              }
            ]
          }
        },
        "isLargeVolume": {
          "type": "boolean",
          "description": "Specifies if the backup is for a large volume.",
          "readOnly": true
        }
      },
      "required": [
        "volumeResourceId"
      ]
    },
    "BackupRestoreFiles": {
      "type": "object",
      "description": "Restore payload for Single File Backup Restore",
      "properties": {
        "fileList": {
          "type": "array",
          "description": "List of files to be restored",
          "minItems": 1,
          "maxItems": 8,
          "items": {
            "$ref": "#/definitions/FileName"
          }
        },
        "restoreFilePath": {
          "type": "string",
          "description": "Destination folder where the files will be restored. The path name should start with a forward slash. If it is omitted from request then restore is done at the root folder of the destination volume by default",
          "pattern": "^\\/.*$"
        },
        "destinationVolumeId": {
          "type": "string",
          "description": "Resource Id of the destination volume on which the files need to be restored"
        }
      },
      "required": [
        "fileList",
        "destinationVolumeId"
      ]
    },
    "BackupStatus": {
      "type": "object",
      "description": "Backup status",
      "properties": {
        "healthy": {
          "type": "boolean",
          "description": "Backup health status",
          "readOnly": true
        },
        "relationshipStatus": {
          "$ref": "#/definitions/VolumeBackupRelationshipStatus",
          "description": "Status of the backup mirror relationship",
          "readOnly": true
        },
        "mirrorState": {
          "$ref": "#/definitions/MirrorState",
          "description": "The status of the backup",
          "readOnly": true
        },
        "unhealthyReason": {
          "type": "string",
          "description": "Reason for the unhealthy backup relationship",
          "readOnly": true
        },
        "errorMessage": {
          "type": "string",
          "description": "Displays error message if the backup is in an error state",
          "readOnly": true
        },
        "lastTransferSize": {
          "type": "integer",
          "format": "int64",
          "description": "Displays the last transfer size",
          "readOnly": true
        },
        "lastTransferType": {
          "type": "string",
          "description": "Displays the last transfer type",
          "readOnly": true
        },
        "totalTransferBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Displays the total bytes transferred",
          "readOnly": true
        },
        "transferProgressBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Displays the total number of bytes transferred for the ongoing operation",
          "readOnly": true
        }
      }
    },
    "BackupType": {
      "type": "string",
      "description": "Type of backup Manual or Scheduled",
      "enum": [
        "Manual",
        "Scheduled"
      ],
      "x-ms-enum": {
        "name": "BackupType",
        "modelAsString": true,
        "values": [
          {
            "name": "Manual",
            "value": "Manual",
            "description": "Manual backup"
          },
          {
            "name": "Scheduled",
            "value": "Scheduled",
            "description": "Scheduled backup"
          }
        ]
      }
    },
    "BackupVault": {
      "type": "object",
      "description": "Backup Vault information",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupVaultProperties",
          "description": "Backup Vault Properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "BackupVaultPatch": {
      "type": "object",
      "description": "Backup Vault information",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "BackupVaultProperties": {
      "type": "object",
      "description": "Backup Vault properties",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Azure lifecycle management",
          "readOnly": true
        }
      }
    },
    "BackupVaultsList": {
      "type": "object",
      "description": "List of Backup Vaults",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BackupVault items on this page",
          "items": {
            "$ref": "#/definitions/BackupVault"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BackupsList": {
      "type": "object",
      "description": "List of Backups",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Backup items on this page",
          "items": {
            "$ref": "#/definitions/Backup"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BackupsMigrationRequest": {
      "type": "object",
      "description": "Migrate Backups Request",
      "properties": {
        "backupVaultId": {
          "type": "string",
          "format": "arm-id",
          "description": "The ResourceId of the Backup Vault",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
              }
            ]
          }
        }
      },
      "required": [
        "backupVaultId"
      ]
    },
    "BreakFileLocksRequest": {
      "type": "object",
      "description": "Break file locks request",
      "properties": {
        "clientIp": {
          "type": "string",
          "description": "To clear file locks on a volume for a particular client",
          "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
        },
        "confirmRunningDisruptiveOperation": {
          "type": "boolean",
          "description": "Break File locks could be a disruptive operation for application as locks on the volume will be broken, if want to process, set to true.",
          "default": false
        }
      }
    },
    "BreakReplicationRequest": {
      "type": "object",
      "description": "Break replication request",
      "properties": {
        "forceBreakReplication": {
          "type": "boolean",
          "description": "If replication is in status transferring and you want to force break the replication, set to true"
        }
      }
    },
    "Bucket": {
      "type": "object",
      "description": "Bucket resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BucketProperties",
          "description": "Bucket properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BucketCredentialsExpiry": {
      "type": "object",
      "description": "The bucket's Access and Secret key pair Expiry Time expressed as the number of days from now.",
      "properties": {
        "keyPairExpiryDays": {
          "type": "integer",
          "format": "int32",
          "description": "The number of days from now until the newly generated Access and Secret key pair will expire.",
          "minimum": 1
        }
      }
    },
    "BucketGenerateCredentials": {
      "type": "object",
      "description": "Bucket Access Key, Secret Key, and Expiry date and time of the key pair",
      "properties": {
        "accessKey": {
          "type": "string",
          "description": "The Access Key that is required along with the Secret Key to access the bucket.",
          "readOnly": true
        },
        "secretKey": {
          "type": "string",
          "description": "The Secret Key that is required along with the Access Key to access the bucket.",
          "readOnly": true
        },
        "keyPairExpiry": {
          "type": "string",
          "format": "date-time",
          "description": "The bucket's Access and Secret key pair expiry date and time (in UTC).",
          "readOnly": true
        }
      }
    },
    "BucketList": {
      "type": "object",
      "description": "List of volume bucket resources",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Bucket items on this page",
          "items": {
            "$ref": "#/definitions/Bucket"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BucketPatch": {
      "type": "object",
      "description": "Bucket resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BucketPatchProperties",
          "description": "Bucket properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BucketPatchPermissions": {
      "type": "string",
      "description": "Access permissions for the bucket. Either ReadOnly or ReadWrite.",
      "enum": [
        "ReadOnly",
        "ReadWrite"
      ],
      "x-ms-enum": {
        "name": "BucketPatchPermissions",
        "modelAsString": true,
        "values": [
          {
            "name": "ReadOnly",
            "value": "ReadOnly",
            "description": "Read-only access to bucket."
          },
          {
            "name": "ReadWrite",
            "value": "ReadWrite",
            "description": "Read-write access to bucket."
          }
        ]
      }
    },
    "BucketPatchProperties": {
      "type": "object",
      "description": "Bucket resource properties for a Patch operation",
      "properties": {
        "path": {
          "type": "string",
          "description": "The volume path mounted inside the bucket."
        },
        "fileSystemUser": {
          "$ref": "#/definitions/FileSystemUser",
          "description": "File System user having access to volume data. For Unix, this is the user's uid and gid. For Windows, this is the user's username. Note that the Unix and Windows user details are mutually exclusive, meaning one or other must be supplied, but not both."
        },
        "provisioningState": {
          "$ref": "#/definitions/NetAppProvisioningState",
          "description": "Provisioning state of the resource",
          "readOnly": true
        },
        "server": {
          "$ref": "#/definitions/BucketServerPatchProperties",
          "description": "Properties of the server managing the lifecycle of volume buckets"
        },
        "permissions": {
          "$ref": "#/definitions/BucketPatchPermissions",
          "description": "Access permissions for the bucket. Either ReadOnly or ReadWrite."
        }
      }
    },
    "BucketProperties": {
      "type": "object",
      "description": "Bucket resource properties",
      "properties": {
        "path": {
          "type": "string",
          "description": "The volume path mounted inside the bucket. The default is the root path '/' if no value is provided when the bucket is created.",
          "default": "/"
        },
        "fileSystemUser": {
          "$ref": "#/definitions/FileSystemUser",
          "description": "File System user having access to volume data. For Unix, this is the user's uid and gid. For Windows, this is the user's username. Note that the Unix and Windows user details are mutually exclusive, meaning one or other must be supplied, but not both."
        },
        "provisioningState": {
          "$ref": "#/definitions/NetAppProvisioningState",
          "description": "Provisioning state of the resource",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/CredentialsStatus",
          "description": "The bucket credentials status. There states:\n\n\"NoCredentialsSet\": Access and Secret key pair have not been generated.\n\"CredentialsExpired\": Access and Secret key pair have expired.\n\"Active\": The certificate has been installed and credentials are unexpired.",
          "readOnly": true
        },
        "server": {
          "$ref": "#/definitions/BucketServerProperties",
          "description": "Properties of the server managing the lifecycle of volume buckets"
        },
        "permissions": {
          "type": "string",
          "description": "Access permissions for the bucket. Either ReadOnly or ReadWrite. The default is ReadOnly if no value is provided during bucket creation.",
          "default": "ReadOnly",
          "enum": [
            "ReadOnly",
            "ReadWrite"
          ],
          "x-ms-enum": {
            "name": "BucketPermissions",
            "modelAsString": true,
            "values": [
              {
                "name": "ReadOnly",
                "value": "ReadOnly",
                "description": "Read-only access to bucket."
              },
              {
                "name": "ReadWrite",
                "value": "ReadWrite",
                "description": "Read-write access to bucket."
              }
            ]
          }
        }
      }
    },
    "BucketServerPatchProperties": {
      "type": "object",
      "description": "Properties of the server managing the lifecycle of volume buckets",
      "properties": {
        "fqdn": {
          "type": "string",
          "description": "The host part of the bucket URL, resolving to the bucket IP address and allowed by the server certificate."
        },
        "certificateObject": {
          "type": "string",
          "description": "A base64-encoded PEM file, which includes both the bucket server's certificate and private key. It is used to authenticate the user and allows access to volume data in a read-only manner.",
          "minLength": 1,
          "maxLength": 10240,
          "x-ms-mutability": [
            "update",
            "create"
          ]
        }
      }
    },
    "BucketServerProperties": {
      "type": "object",
      "description": "Properties of the server managing the lifecycle of volume buckets",
      "properties": {
        "fqdn": {
          "type": "string",
          "description": "The host part of the bucket URL, resolving to the bucket IP address and allowed by the server certificate."
        },
        "certificateCommonName": {
          "type": "string",
          "description": "Certificate Common Name taken from the certificate installed on the bucket server",
          "minLength": 1,
          "maxLength": 64,
          "readOnly": true
        },
        "certificateExpiryDate": {
          "type": "string",
          "format": "date-time",
          "description": "The bucket server's certificate expiry date.",
          "readOnly": true
        },
        "ipAddress": {
          "type": "string",
          "description": "The bucket server's IPv4 address",
          "readOnly": true
        },
        "certificateObject": {
          "type": "string",
          "description": "A base64-encoded PEM file, which includes both the bucket server's certificate and private key. It is used to authenticate the user and allows access to volume data in a read-only manner.",
          "minLength": 1,
          "maxLength": 10240,
          "x-ms-mutability": [
            "update",
            "create"
          ]
        }
      }
    },
    "CapacityPool": {
      "type": "object",
      "description": "Capacity pool resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PoolProperties",
          "description": "Capacity pool properties",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "\"If etag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.\")",
          "readOnly": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "CapacityPoolList": {
      "type": "object",
      "description": "List of capacity pool resources",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CapacityPool items on this page",
          "items": {
            "$ref": "#/definitions/CapacityPool"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CapacityPoolPatch": {
      "type": "object",
      "description": "Capacity pool patch resource",
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "id": {
          "type": "string",
          "description": "Resource Id",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Resource name",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Resource type",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/PoolPatchProperties",
          "description": "Capacity pool properties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ChangeKeyVault": {
      "type": "object",
      "description": "Change key vault request",
      "properties": {
        "keyVaultUri": {
          "type": "string",
          "format": "uri",
          "description": "The URI of the key vault/managed HSM that should be used for encryption."
        },
        "keyName": {
          "type": "string",
          "description": "The name of the key that should be used for encryption."
        },
        "keyVaultResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Azure resource ID of the key vault/managed HSM that should be used for encryption.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.KeyVault/vaults"
              }
            ]
          }
        },
        "keyVaultPrivateEndpoints": {
          "type": "array",
          "description": "Pairs of virtual network ID and private endpoint ID. Every virtual network that has volumes encrypted with customer-managed keys needs its own key vault private endpoint.",
          "items": {
            "$ref": "#/definitions/KeyVaultPrivateEndpoint"
          },
          "x-ms-identifiers": [
            "virtualNetworkId"
          ]
        }
      },
      "required": [
        "keyVaultUri",
        "keyName",
        "keyVaultPrivateEndpoints"
      ]
    },
    "CheckAvailabilityResponse": {
      "type": "object",
      "description": "Information regarding availability of a resource.",
      "properties": {
        "isAvailable": {
          "type": "boolean",
          "description": "<code>true</code> indicates name is valid and available. <code>false</code> indicates the name is invalid, unavailable, or both."
        },
        "reason": {
          "$ref": "#/definitions/InAvailabilityReasonType",
          "description": "<code>Invalid</code> indicates the name provided does not match Azure App Service naming requirements. <code>AlreadyExists</code> indicates that the name is already in use and is therefore unavailable."
        },
        "message": {
          "type": "string",
          "description": "If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming requirements so that the user can select a valid name. If reason == AlreadyExists, explain that resource name is already in use, and direct them to select a different name."
        }
      }
    },
    "CheckNameResourceTypes": {
      "type": "string",
      "description": "Resource type used for verification.",
      "enum": [
        "Microsoft.NetApp/netAppAccounts",
        "Microsoft.NetApp/netAppAccounts/capacityPools",
        "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",
        "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
      ],
      "x-ms-enum": {
        "name": "CheckNameResourceTypes",
        "modelAsString": true,
        "values": [
          {
            "name": "Microsoft.NetApp/netAppAccounts",
            "value": "Microsoft.NetApp/netAppAccounts"
          },
          {
            "name": "Microsoft.NetApp/netAppAccounts/capacityPools",
            "value": "Microsoft.NetApp/netAppAccounts/capacityPools"
          },
          {
            "name": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",
            "value": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
          },
          {
            "name": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots",
            "value": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
          }
        ]
      }
    },
    "CheckQuotaNameResourceTypes": {
      "type": "string",
      "description": "Resource type used for verification.",
      "enum": [
        "Microsoft.NetApp/netAppAccounts",
        "Microsoft.NetApp/netAppAccounts/capacityPools",
        "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",
        "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
      ],
      "x-ms-enum": {
        "name": "CheckQuotaNameResourceTypes",
        "modelAsString": true,
        "values": [
          {
            "name": "Microsoft.NetApp/netAppAccounts",
            "value": "Microsoft.NetApp/netAppAccounts"
          },
          {
            "name": "Microsoft.NetApp/netAppAccounts/capacityPools",
            "value": "Microsoft.NetApp/netAppAccounts/capacityPools"
          },
          {
            "name": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",
            "value": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
          },
          {
            "name": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots",
            "value": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
          }
        ]
      }
    },
    "CifsUser": {
      "type": "object",
      "description": "The effective CIFS username when accessing the volume data.",
      "properties": {
        "username": {
          "type": "string",
          "description": "The CIFS user's username"
        }
      }
    },
    "ClusterPeerCommandResponse": {
      "type": "object",
      "description": "Information about cluster peering process",
      "properties": {
        "peerAcceptCommand": {
          "type": "string",
          "description": "A command that needs to be run on the external ONTAP to accept cluster peering.  Will only be present if <code>clusterPeeringStatus</code> is <code>pending</code>"
        }
      }
    },
    "CoolAccessRetrievalPolicy": {
      "type": "string",
      "description": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are:\nDefault - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.\nOnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.\nNever - No client-driven data is pulled from cool tier to standard storage.",
      "enum": [
        "Default",
        "OnRead",
        "Never"
      ],
      "x-ms-enum": {
        "name": "CoolAccessRetrievalPolicy",
        "modelAsString": true,
        "values": [
          {
            "name": "Default",
            "value": "Default"
          },
          {
            "name": "OnRead",
            "value": "OnRead"
          },
          {
            "name": "Never",
            "value": "Never"
          }
        ]
      }
    },
    "CoolAccessTieringPolicy": {
      "type": "string",
      "description": "coolAccessTieringPolicy determines which cold data blocks are moved to cool tier. The possible values for this field are: Auto - Moves cold user data blocks in both the Snapshot copies and the active file system to the cool tier tier. This policy is the default. SnapshotOnly - Moves user data blocks of the Volume Snapshot copies that are not associated with the active file system to the cool tier.",
      "enum": [
        "Auto",
        "SnapshotOnly"
      ],
      "x-ms-enum": {
        "name": "CoolAccessTieringPolicy",
        "modelAsString": true,
        "values": [
          {
            "name": "Auto",
            "value": "Auto"
          },
          {
            "name": "SnapshotOnly",
            "value": "SnapshotOnly"
          }
        ]
      }
    },
    "CredentialsStatus": {
      "type": "string",
      "description": "The bucket credentials status. There states:\n\n\"NoCredentialsSet\": Access and Secret key pair have not been generated.\n\"CredentialsExpired\": Access and Secret key pair have expired.\n\"Active\": The certificate has been installed and credentials are unexpired.",
      "enum": [
        "NoCredentialsSet",
        "CredentialsExpired",
        "Active"
      ],
      "x-ms-enum": {
        "name": "CredentialsStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "NoCredentialsSet",
            "value": "NoCredentialsSet",
            "description": "Access and Secret key pair have not been generated."
          },
          {
            "name": "CredentialsExpired",
            "value": "CredentialsExpired",
            "description": "Access and Secret key pair have expired."
          },
          {
            "name": "Active",
            "value": "Active",
            "description": "The certificate has been installed on the bucket server and the bucket credentials are unexpired."
          }
        ]
      }
    },
    "DailySchedule": {
      "type": "object",
      "description": "Daily Schedule properties",
      "properties": {
        "snapshotsToKeep": {
          "type": "integer",
          "format": "int32",
          "description": "Daily snapshot count to keep"
        },
        "hour": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates which hour in UTC timezone a snapshot should be taken"
        },
        "minute": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates which minute snapshot should be taken"
        },
        "usedBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Resource size in bytes, current storage usage for the volume in bytes"
        }
      }
    },
    "DestinationReplication": {
      "type": "object",
      "description": "Destination replication properties",
      "properties": {
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The resource ID of the remote volume",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
              }
            ]
          }
        },
        "replicationType": {
          "$ref": "#/definitions/ReplicationType",
          "description": "Indicates whether the replication is cross zone or cross region."
        },
        "region": {
          "type": "string",
          "description": "The remote region for the destination volume."
        },
        "zone": {
          "type": "string",
          "description": "The remote zone for the destination volume."
        }
      }
    },
    "Dimension": {
      "type": "object",
      "description": "Dimension of blobs, possibly be blob type or access tier.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Display name of dimension."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of dimension."
        }
      }
    },
    "EncryptionIdentity": {
      "type": "object",
      "description": "Identity used to authenticate with key vault.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal ID (object ID) of the identity used to authenticate with key vault. Read-only.",
          "readOnly": true
        },
        "userAssignedIdentity": {
          "type": "string",
          "description": "The ARM resource identifier of the user assigned identity used to authenticate with key vault. Applicable if identity.type has 'UserAssigned'. It should match key of identity.userAssignedIdentities."
        },
        "federatedClientId": {
          "type": "string",
          "description": "ClientId of the multi-tenant AAD Application. Used to access cross-tenant keyvaults."
        }
      }
    },
    "EncryptionTransitionRequest": {
      "type": "object",
      "description": "Encryption transition request",
      "properties": {
        "virtualNetworkId": {
          "type": "string",
          "format": "arm-id",
          "description": "Identifier for the virtual network",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks"
              }
            ]
          }
        },
        "privateEndpointId": {
          "type": "string",
          "format": "arm-id",
          "description": "Identifier of the private endpoint to reach the Azure Key Vault",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/privateEndpoints"
              }
            ]
          }
        }
      },
      "required": [
        "virtualNetworkId",
        "privateEndpointId"
      ]
    },
    "EndpointType": {
      "type": "string",
      "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
      "enum": [
        "src",
        "dst"
      ],
      "x-ms-enum": {
        "name": "EndpointType",
        "modelAsString": true,
        "values": [
          {
            "name": "src",
            "value": "src"
          },
          {
            "name": "dst",
            "value": "dst"
          }
        ]
      }
    },
    "ExportPolicyRule": {
      "type": "object",
      "description": "Volume Export Policy Rule",
      "properties": {
        "ruleIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Order index"
        },
        "unixReadOnly": {
          "type": "boolean",
          "description": "Read only access"
        },
        "unixReadWrite": {
          "type": "boolean",
          "description": "Read and write access"
        },
        "kerberos5ReadOnly": {
          "type": "boolean",
          "description": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later",
          "default": false
        },
        "kerberos5ReadWrite": {
          "type": "boolean",
          "description": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later",
          "default": false
        },
        "kerberos5iReadOnly": {
          "type": "boolean",
          "description": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later",
          "default": false,
          "x-ms-client-name": "kerberos5IReadOnly"
        },
        "kerberos5iReadWrite": {
          "type": "boolean",
          "description": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later",
          "default": false,
          "x-ms-client-name": "kerberos5IReadWrite"
        },
        "kerberos5pReadOnly": {
          "type": "boolean",
          "description": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later",
          "default": false,
          "x-ms-client-name": "kerberos5PReadOnly"
        },
        "kerberos5pReadWrite": {
          "type": "boolean",
          "description": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later",
          "default": false,
          "x-ms-client-name": "kerberos5PReadWrite"
        },
        "cifs": {
          "type": "boolean",
          "description": "Allows CIFS protocol"
        },
        "nfsv3": {
          "type": "boolean",
          "description": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes"
        },
        "nfsv41": {
          "type": "boolean",
          "description": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"
        },
        "allowedClients": {
          "type": "string",
          "description": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"
        },
        "hasRootAccess": {
          "type": "boolean",
          "description": "Has root access to volume",
          "default": true
        },
        "chownMode": {
          "type": "string",
          "description": "This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.",
          "default": "Restricted",
          "enum": [
            "Restricted",
            "Unrestricted"
          ],
          "x-ms-enum": {
            "name": "ChownMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Restricted",
                "value": "Restricted"
              },
              {
                "name": "Unrestricted",
                "value": "Unrestricted"
              }
            ]
          }
        }
      }
    },
    "ExternalReplicationSetupStatus": {
      "type": "string",
      "description": "Property that only applies to external replications. Provides a machine-readable value for the status of the external replication setup.",
      "enum": [
        "ClusterPeerRequired",
        "ClusterPeerPending",
        "VServerPeerRequired",
        "ReplicationCreateRequired",
        "NoActionRequired"
      ],
      "x-ms-enum": {
        "name": "ExternalReplicationSetupStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "ClusterPeerRequired",
            "value": "ClusterPeerRequired",
            "description": "Your cluster needs to be peered by using the 'peerExternalCluster' action"
          },
          {
            "name": "ClusterPeerPending",
            "value": "ClusterPeerPending",
            "description": "The peering needs to be accepted on your cluster before the setup can proceed"
          },
          {
            "name": "VServerPeerRequired",
            "value": "VServerPeerRequired",
            "description": "Need to call 'authorizeExternalReplication' and accept the returned 'vserver peer accept' command on your cluster to finish setting up the external replication"
          },
          {
            "name": "ReplicationCreateRequired",
            "value": "ReplicationCreateRequired",
            "description": "Need to call 'authorizeExternalReplication' to finish setting up the external replication"
          },
          {
            "name": "NoActionRequired",
            "value": "NoActionRequired",
            "description": "External Replication setup is complete, you can now monitor the 'mirrorState' in the replication status for the health of the replication"
          }
        ]
      }
    },
    "FileName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 1024
    },
    "FilePathAvailabilityRequest": {
      "type": "object",
      "description": "File path availability request content - availability is based on the name and the subnetId.",
      "properties": {
        "name": {
          "type": "string",
          "description": "File path to verify."
        },
        "subnetId": {
          "type": "string",
          "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"
        },
        "availabilityZone": {
          "type": "string",
          "description": "The Azure Resource logical availability zone which is used within zone mapping lookup for the subscription and region. The lookup will retrieve the physical zone where volume is placed.",
          "x-nullable": true
        }
      },
      "required": [
        "name",
        "subnetId"
      ]
    },
    "FileSystemUser": {
      "type": "object",
      "description": "File System user having access to volume data. For Unix, this is the user's uid and gid. For Windows, this is the user's username. Note that the Unix and Windows user details are mutually exclusive, meaning one or other must be supplied, but not both.",
      "properties": {
        "nfsUser": {
          "$ref": "#/definitions/NfsUser",
          "description": "The effective NFS User ID and Group ID when accessing the volume data."
        },
        "cifsUser": {
          "$ref": "#/definitions/CifsUser",
          "description": "The effective CIFS username when accessing the volume data."
        }
      }
    },
    "GetGroupIdListForLdapUserRequest": {
      "type": "object",
      "description": "Get group Id list for LDAP User request",
      "properties": {
        "username": {
          "type": "string",
          "description": "username is required to fetch the group to which user is part of",
          "minLength": 1,
          "maxLength": 255
        }
      },
      "required": [
        "username"
      ]
    },
    "GetGroupIdListForLdapUserResponse": {
      "type": "object",
      "description": "Group Id list for Ldap user",
      "properties": {
        "groupIdsForLdapUser": {
          "type": "array",
          "description": "Group Id list",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetKeyVaultStatusResponse": {
      "type": "object",
      "description": "Result of getKeyVaultStatus with information about how volumes under NetApp account are encrypted.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GetKeyVaultStatusResponseProperties",
          "description": "Represents the properties of the getKeyVaultStatus.",
          "x-ms-client-flatten": true
        }
      }
    },
    "GetKeyVaultStatusResponseProperties": {
      "type": "object",
      "description": "Properties which represents Change key vault status.",
      "properties": {
        "keyVaultUri": {
          "type": "string",
          "format": "uri",
          "description": "The URI of the key vault/managed HSM that should be used for encryption."
        },
        "keyName": {
          "type": "string",
          "description": "The name of the key that should be used for encryption."
        },
        "keyVaultResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Azure resource ID of the key vault/managed HSM that should be used for encryption.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.KeyVault/vaults"
              }
            ]
          }
        },
        "keyVaultPrivateEndpoints": {
          "type": "array",
          "description": "Pairs of virtual network ID and private endpoint ID. Every virtual network that has volumes encrypted with customer-managed keys needs its own key vault private endpoint.",
          "items": {
            "$ref": "#/definitions/KeyVaultPrivateEndpoint"
          },
          "x-ms-identifiers": [
            "virtualNetworkId"
          ]
        }
      }
    },
    "HourlySchedule": {
      "type": "object",
      "description": "Hourly Schedule properties",
      "properties": {
        "snapshotsToKeep": {
          "type": "integer",
          "format": "int32",
          "description": "Hourly snapshot count to keep"
        },
        "minute": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates which minute snapshot should be taken"
        },
        "usedBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Resource size in bytes, current storage usage for the volume in bytes"
        }
      }
    },
    "InAvailabilityReasonType": {
      "type": "string",
      "description": "<code>Invalid</code> indicates the name provided does not match Azure App Service naming requirements. <code>AlreadyExists</code> indicates that the name is already in use and is therefore unavailable.",
      "enum": [
        "Invalid",
        "AlreadyExists"
      ],
      "x-ms-enum": {
        "name": "InAvailabilityReasonType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "AlreadyExists",
            "value": "AlreadyExists"
          }
        ]
      }
    },
    "KeyVaultPrivateEndpoint": {
      "type": "object",
      "description": "Pairs of virtual network ID and private endpoint ID. Every virtual network that has volumes encrypted with customer-managed keys needs its own key vault private endpoint.",
      "properties": {
        "virtualNetworkId": {
          "type": "string",
          "format": "arm-id",
          "description": "Identifier for the virtual network id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks"
              }
            ]
          }
        },
        "privateEndpointId": {
          "type": "string",
          "format": "arm-id",
          "description": "Identifier of the private endpoint to reach the Azure Key Vault",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/privateEndpoints"
              }
            ]
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "description": "Properties of key vault.",
      "properties": {
        "keyVaultId": {
          "type": "string",
          "description": "UUID v4 used to identify the Azure Key Vault configuration",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true
        },
        "keyVaultUri": {
          "type": "string",
          "format": "uri",
          "description": "The Uri of KeyVault."
        },
        "keyName": {
          "type": "string",
          "description": "The name of KeyVault key."
        },
        "keyVaultResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The resource ID of KeyVault.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.KeyVault/vaults"
              }
            ]
          }
        },
        "status": {
          "$ref": "#/definitions/KeyVaultStatus",
          "description": "Status of the KeyVault connection.",
          "readOnly": true
        }
      },
      "required": [
        "keyVaultUri",
        "keyName"
      ]
    },
    "KeyVaultStatus": {
      "type": "string",
      "description": "Status of the KeyVault connection.",
      "enum": [
        "Created",
        "InUse",
        "Deleted",
        "Error",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "KeyVaultStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Created",
            "value": "Created",
            "description": "KeyVault connection created but not in use"
          },
          {
            "name": "InUse",
            "value": "InUse",
            "description": "KeyVault connection in use by SMB Volume"
          },
          {
            "name": "Deleted",
            "value": "Deleted",
            "description": "KeyVault connection Deleted"
          },
          {
            "name": "Error",
            "value": "Error",
            "description": "Error with the KeyVault connection"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "KeyVault connection Updating"
          }
        ]
      }
    },
    "LdapConfiguration": {
      "type": "object",
      "description": "LDAP configuration",
      "properties": {
        "domain": {
          "type": "string",
          "description": "Name of the LDAP configuration domain",
          "maxLength": 255,
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.-]{0,253}[a-zA-Z0-9]$"
        },
        "ldapServers": {
          "type": "array",
          "description": "List of LDAP server IP addresses (IPv4 only) for the LDAP domain.",
          "items": {
            "type": "string"
          }
        },
        "ldapOverTLS": {
          "type": "boolean",
          "description": "Specifies whether or not the LDAP traffic needs to be secured via TLS."
        },
        "serverCACertificate": {
          "type": "string",
          "format": "password",
          "description": "When LDAP over SSL/TLS is enabled, the LDAP client is required to have base64 encoded ldap servers CA certificate.",
          "minLength": 1,
          "maxLength": 10240,
          "x-ms-secret": true
        },
        "certificateCNHost": {
          "type": "string",
          "description": "The CN host name used while generating the certificate, LDAP Over TLS requires the CN host name to create DNS host entry.",
          "x-nullable": true
        }
      }
    },
    "LdapSearchScopeOpt": {
      "type": "object",
      "description": "LDAP search scope",
      "properties": {
        "userDN": {
          "type": "string",
          "description": "This specifies the user DN, which overrides the base DN for user lookups.",
          "maxLength": 255
        },
        "groupDN": {
          "type": "string",
          "description": "This specifies the group DN, which overrides the base DN for group lookups.",
          "maxLength": 255
        },
        "groupMembershipFilter": {
          "type": "string",
          "description": "This specifies the custom LDAP search filter to be used when looking up group membership from LDAP server.",
          "maxLength": 255
        }
      }
    },
    "LdapServerType": {
      "type": "string",
      "description": "The type of the LDAP server",
      "enum": [
        "ActiveDirectory",
        "OpenLDAP"
      ],
      "x-ms-enum": {
        "name": "LdapServerType",
        "modelAsString": true,
        "values": [
          {
            "name": "ActiveDirectory",
            "value": "ActiveDirectory",
            "description": "The volume should use Active Directory for LDAP connections."
          },
          {
            "name": "OpenLDAP",
            "value": "OpenLDAP",
            "description": "The volume should use OpenLDAP for LDAP connections."
          }
        ]
      }
    },
    "ListQuotaReportResponse": {
      "type": "object",
      "description": "Quota Report for volume",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of quota reports",
          "items": {
            "$ref": "#/definitions/QuotaReport"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ListReplications": {
      "type": "object",
      "description": "List Replications",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Replication items on this page",
          "items": {
            "$ref": "#/definitions/Replication"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "LogSpecification": {
      "type": "object",
      "description": "Log Definition of a single resource metric.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of log specification."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of log specification."
        }
      }
    },
    "MetricAggregationType": {
      "type": "string",
      "enum": [
        "Average"
      ],
      "x-ms-enum": {
        "name": "MetricAggregationType",
        "modelAsString": true,
        "values": [
          {
            "name": "Average",
            "value": "Average"
          }
        ]
      }
    },
    "MetricSpecification": {
      "type": "object",
      "description": "Metric specification of operation.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of metric specification."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of metric specification."
        },
        "displayDescription": {
          "type": "string",
          "description": "Display description of metric specification."
        },
        "unit": {
          "type": "string",
          "description": "Unit could be Bytes or Count."
        },
        "supportedAggregationTypes": {
          "type": "array",
          "description": "Support metric aggregation type.",
          "items": {
            "$ref": "#/definitions/MetricAggregationType"
          }
        },
        "supportedTimeGrainTypes": {
          "type": "array",
          "description": "The supported time grain types for the metrics.",
          "items": {
            "type": "string"
          }
        },
        "internalMetricName": {
          "type": "string",
          "description": "The internal metric name."
        },
        "enableRegionalMdmAccount": {
          "type": "boolean",
          "description": "Whether or not the service is using regional MDM accounts."
        },
        "sourceMdmAccount": {
          "type": "string",
          "description": "The source MDM account."
        },
        "sourceMdmNamespace": {
          "type": "string",
          "description": "The source MDM namespace."
        },
        "dimensions": {
          "type": "array",
          "description": "Dimensions of blobs, including blob type and access tier.",
          "items": {
            "$ref": "#/definitions/Dimension"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "aggregationType": {
          "type": "string",
          "description": "Aggregation type could be Average."
        },
        "fillGapWithZero": {
          "type": "boolean",
          "description": "The property to decide fill gap with zero or not."
        },
        "category": {
          "type": "string",
          "description": "The category this metric specification belong to, could be Capacity."
        },
        "resourceIdDimensionNameOverride": {
          "type": "string",
          "description": "Account Resource Id."
        },
        "isInternal": {
          "type": "boolean",
          "description": "Whether the metric is internal."
        }
      }
    },
    "MirrorState": {
      "type": "string",
      "description": "The status of the replication",
      "enum": [
        "Uninitialized",
        "Mirrored",
        "Broken"
      ],
      "x-ms-enum": {
        "name": "MirrorState",
        "modelAsString": true,
        "values": [
          {
            "name": "Uninitialized",
            "value": "Uninitialized"
          },
          {
            "name": "Mirrored",
            "value": "Mirrored"
          },
          {
            "name": "Broken",
            "value": "Broken"
          }
        ]
      }
    },
    "MonthlySchedule": {
      "type": "object",
      "description": "Monthly Schedule properties",
      "properties": {
        "snapshotsToKeep": {
          "type": "integer",
          "format": "int32",
          "description": "Monthly snapshot count to keep"
        },
        "daysOfMonth": {
          "type": "string",
          "description": "Indicates which days of the month snapshot should be taken. A comma delimited string."
        },
        "hour": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates which hour in UTC timezone a snapshot should be taken"
        },
        "minute": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates which minute snapshot should be taken"
        },
        "usedBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Resource size in bytes, current storage usage for the volume in bytes"
        }
      }
    },
    "MountTargetProperties": {
      "type": "object",
      "description": "Mount target properties",
      "properties": {
        "mountTargetId": {
          "type": "string",
          "description": "UUID v4 used to identify the MountTarget",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true
        },
        "fileSystemId": {
          "type": "string",
          "description": "UUID v4 used to identify the MountTarget",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "ipAddress": {
          "type": "string",
          "description": "The mount target's IPv4 address",
          "readOnly": true
        },
        "smbServerFqdn": {
          "type": "string",
          "description": "The SMB server's Fully Qualified Domain Name, FQDN"
        }
      },
      "required": [
        "fileSystemId"
      ]
    },
    "MultiAdStatus": {
      "type": "string",
      "description": "MultiAD Status for the account",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "MultiAdStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Account is MultiAD disabled, Means its a SharedAD or SingleAD account."
          },
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Account is MultiAD enabled"
          }
        ]
      }
    },
    "NetAppAccount": {
      "type": "object",
      "description": "NetApp account resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AccountProperties",
          "description": "NetApp Account properties",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "\"If etag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.\")",
          "readOnly": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v6/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "NetAppAccountList": {
      "type": "object",
      "description": "List of NetApp account resources",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NetAppAccount items on this page",
          "items": {
            "$ref": "#/definitions/NetAppAccount"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NetAppAccountPatch": {
      "type": "object",
      "description": "NetApp account patch resource",
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "id": {
          "type": "string",
          "description": "Resource Id",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Resource name",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Resource type",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/AccountProperties",
          "description": "NetApp Account properties",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v6/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The identity used for the resource."
        }
      }
    },
    "NetAppProvisioningState": {
      "type": "string",
      "description": "Gets the status of the VolumeQuotaRule at the time the operation was called.",
      "enum": [
        "Accepted",
        "Creating",
        "Patching",
        "Deleting",
        "Moving",
        "Failed",
        "Succeeded"
      ],
      "x-ms-enum": {
        "name": "NetAppProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Accepted"
          },
          {
            "name": "Creating",
            "value": "Creating",
            "description": "Creating"
          },
          {
            "name": "Patching",
            "value": "Patching",
            "description": "Patching"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Deleting"
          },
          {
            "name": "Moving",
            "value": "Moving",
            "description": "Moving"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Failed"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Succeeded"
          }
        ]
      },
      "readOnly": true
    },
    "NetworkSiblingSet": {
      "type": "object",
      "description": "Describes the contents of a network sibling set.",
      "properties": {
        "networkSiblingSetId": {
          "type": "string",
          "description": "Network Sibling Set ID for a group of volumes sharing networking resources in a subnet.",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "subnetId": {
          "type": "string",
          "format": "arm-id",
          "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes. Example /subscriptions/subscriptionId/resourceGroups/resourceGroup/providers/Microsoft.Network/virtualNetworks/testVnet/subnets/{mySubnet}",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks/subnets"
              }
            ]
          }
        },
        "networkSiblingSetStateId": {
          "type": "string",
          "description": "Network sibling set state Id identifying the current state of the sibling set."
        },
        "networkFeatures": {
          "type": "string",
          "description": "Network features available to the volume, or current state of update.",
          "default": "Basic",
          "enum": [
            "Basic",
            "Standard",
            "Basic_Standard",
            "Standard_Basic"
          ],
          "x-ms-enum": {
            "name": "NetworkFeatures",
            "modelAsString": true,
            "values": [
              {
                "name": "Basic",
                "value": "Basic",
                "description": "Basic network features."
              },
              {
                "name": "Standard",
                "value": "Standard",
                "description": "Standard network features."
              },
              {
                "name": "Basic_Standard",
                "value": "Basic_Standard",
                "description": "Updating from Basic to Standard network features."
              },
              {
                "name": "Standard_Basic",
                "value": "Standard_Basic",
                "description": "Updating from Standard to Basic network features."
              }
            ]
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/NetworkSiblingSetProvisioningState",
          "description": "Gets the status of the NetworkSiblingSet at the time the operation was called.",
          "readOnly": true
        },
        "nicInfoList": {
          "type": "array",
          "description": "List of NIC information",
          "items": {
            "$ref": "#/definitions/NicInfo"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "NetworkSiblingSetProvisioningState": {
      "type": "string",
      "description": "Gets the status of the NetworkSiblingSet at the time the operation was called.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "NetworkSiblingSetProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "Canceled",
            "value": "Canceled"
          },
          {
            "name": "Updating",
            "value": "Updating"
          }
        ]
      },
      "readOnly": true
    },
    "NfsUser": {
      "type": "object",
      "description": "The effective NFS User ID and Group ID when accessing the volume data.",
      "properties": {
        "userId": {
          "type": "integer",
          "format": "int64",
          "description": "The NFS user's UID"
        },
        "groupId": {
          "type": "integer",
          "format": "int64",
          "description": "The NFS user's GID"
        }
      }
    },
    "NicInfo": {
      "type": "object",
      "description": "NIC information and list of volumes for which the NIC has the primary mount ip address.",
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "ipAddress",
          "readOnly": true
        },
        "volumeResourceIds": {
          "type": "array",
          "description": "Volume resource Ids",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                }
              ]
            }
          }
        }
      }
    },
    "Operation": {
      "type": "object",
      "description": "Microsoft.NetApp REST API operation definition.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Operation name: {provider}/{resource}/{operation}"
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay",
          "description": "Display metadata associated with the operation."
        },
        "origin": {
          "type": "string",
          "description": "The origin of operations."
        },
        "properties": {
          "$ref": "#/definitions/OperationProperties",
          "description": "Properties of operation, include metric specifications.",
          "x-ms-client-flatten": true
        }
      }
    },
    "OperationDisplay": {
      "type": "object",
      "description": "Display metadata associated with the operation.",
      "properties": {
        "provider": {
          "type": "string",
          "description": "Service provider: Microsoft NetApp."
        },
        "resource": {
          "type": "string",
          "description": "Resource on which the operation is performed etc."
        },
        "operation": {
          "type": "string",
          "description": "Type of operation: get, read, delete, etc."
        },
        "description": {
          "type": "string",
          "description": "Operation description."
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Operation items on this page",
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "OperationProperties": {
      "type": "object",
      "description": "Properties of operation, include metric specifications.",
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/ServiceSpecification",
          "description": "One property of operation, include metric specifications."
        }
      }
    },
    "PeerClusterForVolumeMigrationRequest": {
      "type": "object",
      "description": "Source Cluster properties for a cluster peer request",
      "properties": {
        "peerIpAddresses": {
          "type": "array",
          "description": "A list of IC-LIF IPs that can be used to connect to the On-prem cluster",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "peerIpAddresses"
      ]
    },
    "PlacementKeyValuePairs": {
      "type": "object",
      "description": "Application specific parameters for the placement of volumes in the volume group",
      "properties": {
        "key": {
          "type": "string",
          "description": "Key for an application specific parameter for the placement of volumes in the volume group"
        },
        "value": {
          "type": "string",
          "description": "Value for an application specific parameter for the placement of volumes in the volume group"
        }
      },
      "required": [
        "key",
        "value"
      ]
    },
    "PoolChangeRequest": {
      "type": "object",
      "description": "Pool change request",
      "properties": {
        "newPoolResourceId": {
          "type": "string",
          "description": "Resource id of the pool to move volume to"
        }
      },
      "required": [
        "newPoolResourceId"
      ]
    },
    "PoolPatchProperties": {
      "type": "object",
      "description": "Patchable pool properties",
      "properties": {
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Provisioned size of the pool (in bytes). Allowed values are in 1TiB chunks (value must be multiple of 1099511627776).",
          "default": 4398046511104
        },
        "qosType": {
          "type": "string",
          "description": "The qos type of the pool",
          "default": "Auto",
          "enum": [
            "Auto",
            "Manual"
          ],
          "x-ms-enum": {
            "name": "QosType",
            "modelAsString": true,
            "values": [
              {
                "name": "Auto",
                "value": "Auto",
                "description": "qos type Auto"
              },
              {
                "name": "Manual",
                "value": "Manual",
                "description": "qos type Manual"
              }
            ]
          }
        },
        "coolAccess": {
          "type": "boolean",
          "description": "If enabled (true) the pool can contain cool Access enabled volumes."
        },
        "customThroughputMibps": {
          "type": "number",
          "format": "float",
          "description": "Maximum throughput in MiB/s that can be achieved by this pool and this will be accepted as input only for manual qosType pool with Flexible service level",
          "x-nullable": true
        }
      }
    },
    "PoolProperties": {
      "type": "object",
      "description": "Pool properties",
      "properties": {
        "poolId": {
          "type": "string",
          "description": "UUID v4 used to identify the Pool",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Provisioned size of the pool (in bytes). Allowed values are in 1TiB chunks (value must be multiple of 1099511627776).",
          "default": 4398046511104
        },
        "serviceLevel": {
          "type": "string",
          "description": "The service level of the file system",
          "default": "Premium",
          "enum": [
            "Standard",
            "Premium",
            "Ultra",
            "StandardZRS",
            "Flexible"
          ],
          "x-ms-enum": {
            "name": "ServiceLevel",
            "modelAsString": true,
            "values": [
              {
                "name": "Standard",
                "value": "Standard",
                "description": "Standard service level"
              },
              {
                "name": "Premium",
                "value": "Premium",
                "description": "Premium service level"
              },
              {
                "name": "Ultra",
                "value": "Ultra",
                "description": "Ultra service level"
              },
              {
                "name": "StandardZRS",
                "value": "StandardZRS",
                "description": "Zone redundant storage service level. This will be deprecated soon."
              },
              {
                "name": "Flexible",
                "value": "Flexible",
                "description": "Flexible service level"
              }
            ]
          }
        },
        "provisioningState": {
          "type": "string",
          "description": "Azure lifecycle management",
          "readOnly": true
        },
        "totalThroughputMibps": {
          "type": "number",
          "format": "float",
          "description": "Total throughput of pool in MiB/s",
          "readOnly": true
        },
        "utilizedThroughputMibps": {
          "type": "number",
          "format": "float",
          "description": "Utilized throughput of pool in MiB/s",
          "readOnly": true
        },
        "customThroughputMibps": {
          "type": "number",
          "format": "float",
          "description": "Maximum throughput in MiB/s that can be achieved by this pool and this will be accepted as input only for manual qosType pool with Flexible service level",
          "x-nullable": true
        },
        "qosType": {
          "type": "string",
          "description": "The qos type of the pool",
          "default": "Auto",
          "enum": [
            "Auto",
            "Manual"
          ],
          "x-ms-enum": {
            "name": "QosType",
            "modelAsString": true,
            "values": [
              {
                "name": "Auto",
                "value": "Auto",
                "description": "qos type Auto"
              },
              {
                "name": "Manual",
                "value": "Manual",
                "description": "qos type Manual"
              }
            ]
          }
        },
        "coolAccess": {
          "type": "boolean",
          "description": "If enabled (true) the pool can contain cool Access enabled volumes.",
          "default": false
        },
        "encryptionType": {
          "type": "string",
          "description": "Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it. This value can only be set when creating new pool.",
          "default": "Single",
          "enum": [
            "Single",
            "Double"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "values": [
              {
                "name": "Single",
                "value": "Single",
                "description": "EncryptionType Single, volumes will use single encryption at rest"
              },
              {
                "name": "Double",
                "value": "Double",
                "description": "EncryptionType Double, volumes will use double encryption at rest"
              }
            ]
          },
          "x-nullable": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "size",
        "serviceLevel"
      ]
    },
    "QueryNetworkSiblingSetRequest": {
      "type": "object",
      "description": "Network sibling set query.",
      "properties": {
        "networkSiblingSetId": {
          "type": "string",
          "description": "Network Sibling Set ID for a group of volumes sharing networking resources in a subnet.",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "subnetId": {
          "type": "string",
          "format": "arm-id",
          "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes. Example /subscriptions/subscriptionId/resourceGroups/resourceGroup/providers/Microsoft.Network/virtualNetworks/testVnet/subnets/{mySubnet}",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks/subnets"
              }
            ]
          }
        }
      },
      "required": [
        "networkSiblingSetId",
        "subnetId"
      ]
    },
    "QuotaAvailabilityRequest": {
      "type": "object",
      "description": "Quota availability request content.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the resource to verify."
        },
        "type": {
          "$ref": "#/definitions/CheckQuotaNameResourceTypes",
          "description": "Resource type used for verification."
        },
        "resourceGroup": {
          "type": "string",
          "description": "Resource group name."
        }
      },
      "required": [
        "name",
        "type",
        "resourceGroup"
      ]
    },
    "QuotaItem": {
      "type": "object",
      "description": "Information regarding Quota Item.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/QuotaItemProperties",
          "description": "QuotaItem properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "QuotaItemList": {
      "type": "object",
      "description": "List of Quota Items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The QuotaItem items on this page",
          "items": {
            "$ref": "#/definitions/QuotaItem"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "QuotaItemProperties": {
      "type": "object",
      "description": "QuotaItem Properties",
      "properties": {
        "current": {
          "type": "integer",
          "format": "int32",
          "description": "The current quota value.",
          "readOnly": true
        },
        "default": {
          "type": "integer",
          "format": "int32",
          "description": "The default quota value.",
          "readOnly": true
        },
        "usage": {
          "type": "integer",
          "format": "int32",
          "description": "The usage quota value.",
          "x-nullable": true,
          "readOnly": true
        }
      }
    },
    "QuotaReport": {
      "type": "object",
      "description": "Quota report record properties",
      "properties": {
        "quotaType": {
          "$ref": "#/definitions/Type",
          "description": "Type of quota"
        },
        "quotaTarget": {
          "type": "string",
          "description": "UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>"
        },
        "quotaLimitUsedInKiBs": {
          "type": "integer",
          "format": "int64",
          "description": "Specifies the current usage in kibibytes for the user/group quota."
        },
        "quotaLimitTotalInKiBs": {
          "type": "integer",
          "format": "int64",
          "description": "Specifies the total size limit in kibibytes for the user/group quota."
        },
        "percentageUsed": {
          "type": "number",
          "format": "float",
          "description": "Percentage of used size compared to total size."
        },
        "isDerivedQuota": {
          "type": "boolean",
          "description": "Flag to indicate whether the quota is derived from default quota."
        }
      }
    },
    "ReestablishReplicationRequest": {
      "type": "object",
      "description": "Re-establish request object supplied in the body of the operation.",
      "properties": {
        "sourceVolumeId": {
          "type": "string",
          "description": "Resource id of the source volume for the replication"
        }
      }
    },
    "RegionInfo": {
      "type": "object",
      "description": "Provides region specific information.",
      "properties": {
        "storageToNetworkProximity": {
          "$ref": "#/definitions/RegionStorageToNetworkProximity",
          "description": "Provides storage to network proximity information in the region."
        },
        "availabilityZoneMappings": {
          "type": "array",
          "description": "Provides logical availability zone mappings for the subscription for a region.",
          "items": {
            "$ref": "#/definitions/RegionInfoAvailabilityZoneMappingsItem"
          },
          "x-ms-identifiers": [
            "availabilityZone"
          ]
        }
      }
    },
    "RegionInfoAvailabilityZoneMappingsItem": {
      "type": "object",
      "properties": {
        "availabilityZone": {
          "type": "string",
          "description": "Logical availability zone."
        },
        "isAvailable": {
          "type": "boolean",
          "description": "Available availability zone"
        }
      }
    },
    "RegionInfoResource": {
      "type": "object",
      "description": "Information regarding regionInfo Item.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RegionInfo",
          "description": "regionInfo properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "RegionInfosList": {
      "type": "object",
      "description": "List of regionInfo resources",
      "properties": {
        "value": {
          "type": "array",
          "description": "The RegionInfoResource items on this page",
          "items": {
            "$ref": "#/definitions/RegionInfoResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "RegionStorageToNetworkProximity": {
      "type": "string",
      "description": "Provides storage to network proximity information in the region.",
      "enum": [
        "Default",
        "T1",
        "T2",
        "AcrossT2",
        "T1AndT2",
        "T1AndAcrossT2",
        "T2AndAcrossT2",
        "T1AndT2AndAcrossT2"
      ],
      "x-ms-enum": {
        "name": "RegionStorageToNetworkProximity",
        "modelAsString": true,
        "values": [
          {
            "name": "Default",
            "value": "Default",
            "description": "Basic network connectivity."
          },
          {
            "name": "T1",
            "value": "T1",
            "description": "Standard T1 network connectivity."
          },
          {
            "name": "T2",
            "value": "T2",
            "description": "Standard T2 network connectivity."
          },
          {
            "name": "AcrossT2",
            "value": "AcrossT2",
            "description": "Standard AcrossT2 network connectivity."
          },
          {
            "name": "T1AndT2",
            "value": "T1AndT2",
            "description": "Standard T1 and T2 network connectivity."
          },
          {
            "name": "T1AndAcrossT2",
            "value": "T1AndAcrossT2",
            "description": "Standard T1 and AcrossT2 network connectivity."
          },
          {
            "name": "T2AndAcrossT2",
            "value": "T2AndAcrossT2",
            "description": "Standard T2 and AcrossT2 network connectivity."
          },
          {
            "name": "T1AndT2AndAcrossT2",
            "value": "T1AndT2AndAcrossT2",
            "description": "Standard T1, T2 and AcrossT2 network connectivity."
          }
        ]
      }
    },
    "RelocateVolumeRequest": {
      "type": "object",
      "description": "Relocate volume request",
      "properties": {
        "creationToken": {
          "type": "string",
          "description": "New creation token for the volume that controls the mount point name"
        }
      }
    },
    "RemotePath": {
      "type": "object",
      "description": "The full path to a volume that is to be migrated into ANF. Required for Migration volumes",
      "properties": {
        "externalHostName": {
          "type": "string",
          "description": "The Path to a ONTAP Host"
        },
        "serverName": {
          "type": "string",
          "description": "The name of a server on the ONTAP Host"
        },
        "volumeName": {
          "type": "string",
          "description": "The name of a volume on the server"
        }
      },
      "required": [
        "externalHostName",
        "serverName",
        "volumeName"
      ]
    },
    "Replication": {
      "type": "object",
      "description": "Replication properties",
      "properties": {
        "replicationId": {
          "type": "string",
          "description": "UUID v4 used to identify the replication.",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true
        },
        "endpointType": {
          "$ref": "#/definitions/EndpointType",
          "description": "Indicates whether the local volume is the source or destination for the Volume Replication"
        },
        "replicationSchedule": {
          "$ref": "#/definitions/ReplicationSchedule",
          "description": "Schedule"
        },
        "remoteVolumeResourceId": {
          "type": "string",
          "description": "The resource ID of the remote volume."
        },
        "remoteVolumeRegion": {
          "type": "string",
          "description": "The remote region for the other end of the Volume Replication."
        }
      },
      "required": [
        "remoteVolumeResourceId"
      ]
    },
    "ReplicationObject": {
      "type": "object",
      "description": "Replication properties",
      "properties": {
        "replicationId": {
          "type": "string",
          "description": "Id",
          "readOnly": true
        },
        "endpointType": {
          "$ref": "#/definitions/EndpointType",
          "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
          "readOnly": true
        },
        "replicationSchedule": {
          "$ref": "#/definitions/ReplicationSchedule",
          "description": "Schedule"
        },
        "remoteVolumeResourceId": {
          "type": "string",
          "description": "The resource ID of the remote volume. Required for cross region and cross zone replication",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "remotePath": {
          "$ref": "#/definitions/RemotePath",
          "description": "The full path to a volume that is to be migrated into ANF. Required for Migration volumes",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "remoteVolumeRegion": {
          "type": "string",
          "description": "The remote region for the other end of the Volume Replication."
        },
        "destinationReplications": {
          "type": "array",
          "description": "A list of destination replications",
          "items": {
            "$ref": "#/definitions/DestinationReplication"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "resourceId"
          ]
        },
        "externalReplicationSetupStatus": {
          "$ref": "#/definitions/ExternalReplicationSetupStatus",
          "description": "Property that only applies to external replications. Provides a machine-readable value for the status of the external replication setup.",
          "readOnly": true
        },
        "externalReplicationSetupInfo": {
          "type": "string",
          "description": "Contains human-readable instructions on what the next step is to finish the external replication setup.",
          "readOnly": true
        },
        "mirrorState": {
          "$ref": "#/definitions/MirrorState",
          "description": "The mirror state property describes the current status of data replication for a replication. It provides insight into whether the data is actively being mirrored, if the replication process has been paused, or if it has yet to be initialized.",
          "readOnly": true
        },
        "relationshipStatus": {
          "$ref": "#/definitions/VolumeReplicationRelationshipStatus",
          "description": "The status of the Volume Replication",
          "readOnly": true
        }
      }
    },
    "ReplicationSchedule": {
      "type": "string",
      "description": "Schedule",
      "enum": [
        "_10minutely",
        "hourly",
        "daily"
      ],
      "x-ms-enum": {
        "name": "ReplicationSchedule",
        "modelAsString": true,
        "values": [
          {
            "name": "_10minutely",
            "value": "_10minutely"
          },
          {
            "name": "hourly",
            "value": "hourly"
          },
          {
            "name": "daily",
            "value": "daily"
          }
        ]
      }
    },
    "ReplicationStatus": {
      "type": "object",
      "description": "Replication status",
      "properties": {
        "healthy": {
          "type": "boolean",
          "description": "Replication health check"
        },
        "relationshipStatus": {
          "$ref": "#/definitions/VolumeReplicationRelationshipStatus",
          "description": "Status of the mirror relationship"
        },
        "mirrorState": {
          "$ref": "#/definitions/MirrorState",
          "description": "The status of the replication"
        },
        "totalProgress": {
          "type": "string",
          "description": "The progress of the replication"
        },
        "errorMessage": {
          "type": "string",
          "description": "Displays error message if the replication is in an error state"
        }
      }
    },
    "ReplicationType": {
      "type": "string",
      "description": "Indicates whether the replication is cross zone or cross region.",
      "enum": [
        "CrossRegionReplication",
        "CrossZoneReplication"
      ],
      "x-ms-enum": {
        "name": "ReplicationType",
        "modelAsString": true,
        "values": [
          {
            "name": "CrossRegionReplication",
            "value": "CrossRegionReplication",
            "description": "Cross region replication"
          },
          {
            "name": "CrossZoneReplication",
            "value": "CrossZoneReplication",
            "description": "Cross zone replication"
          }
        ]
      }
    },
    "ResourceNameAvailabilityRequest": {
      "type": "object",
      "description": "Resource name availability request content.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Resource name to verify."
        },
        "type": {
          "$ref": "#/definitions/CheckNameResourceTypes",
          "description": "Resource type used for verification."
        },
        "resourceGroup": {
          "type": "string",
          "description": "Resource group name."
        }
      },
      "required": [
        "name",
        "type",
        "resourceGroup"
      ]
    },
    "RestoreStatus": {
      "type": "object",
      "description": "Restore status",
      "properties": {
        "healthy": {
          "type": "boolean",
          "description": "Restore health status",
          "readOnly": true
        },
        "relationshipStatus": {
          "$ref": "#/definitions/VolumeRestoreRelationshipStatus",
          "description": "Status of the restore SnapMirror relationship",
          "readOnly": true
        },
        "mirrorState": {
          "$ref": "#/definitions/MirrorState",
          "description": "The status of the restore",
          "readOnly": true
        },
        "unhealthyReason": {
          "type": "string",
          "description": "Reason for the unhealthy restore relationship",
          "readOnly": true
        },
        "errorMessage": {
          "type": "string",
          "description": "Displays error message if the restore is in an error state",
          "readOnly": true
        },
        "totalTransferBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Displays the total bytes transferred",
          "readOnly": true
        }
      }
    },
    "ServiceSpecification": {
      "type": "object",
      "description": "One property of operation, include metric specifications.",
      "properties": {
        "metricSpecifications": {
          "type": "array",
          "description": "Metric specifications of operation.",
          "items": {
            "$ref": "#/definitions/MetricSpecification"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "logSpecifications": {
          "type": "array",
          "description": "Log specification of operation.",
          "items": {
            "$ref": "#/definitions/LogSpecification"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "SmbAccessBasedEnumeration": {
      "type": "string",
      "description": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "SmbAccessBasedEnumeration",
        "modelAsString": true,
        "values": [
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "smbAccessBasedEnumeration share setting is disabled"
          },
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "smbAccessBasedEnumeration share setting is enabled"
          }
        ]
      }
    },
    "SmbNonBrowsable": {
      "type": "string",
      "description": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "SmbNonBrowsable",
        "modelAsString": true,
        "values": [
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "smbNonBrowsable share setting is disabled"
          },
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "smbNonBrowsable share setting is enabled"
          }
        ]
      }
    },
    "Snapshot": {
      "type": "object",
      "description": "Snapshot of a Volume",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SnapshotProperties",
          "description": "Snapshot Properties",
          "x-ms-client-flatten": true
        },
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SnapshotPatch": {
      "type": "object",
      "description": "Snapshot of a Volume"
    },
    "SnapshotPoliciesList": {
      "type": "object",
      "description": "List of Snapshot Policies",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SnapshotPolicy items on this page",
          "items": {
            "$ref": "#/definitions/SnapshotPolicy"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SnapshotPolicy": {
      "type": "object",
      "description": "Snapshot policy information",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SnapshotPolicyProperties",
          "description": "Snapshot policy Properties",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "\"If etag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.\")",
          "readOnly": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "SnapshotPolicyPatch": {
      "type": "object",
      "description": "Snapshot policy Details for create and update",
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "id": {
          "type": "string",
          "description": "Resource Id",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Resource name",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Resource type",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/SnapshotPolicyProperties",
          "description": "Snapshot Policy properties",
          "x-ms-client-flatten": true
        }
      }
    },
    "SnapshotPolicyProperties": {
      "type": "object",
      "description": "Snapshot policy properties",
      "properties": {
        "hourlySchedule": {
          "$ref": "#/definitions/HourlySchedule",
          "description": "Schedule for hourly snapshots"
        },
        "dailySchedule": {
          "$ref": "#/definitions/DailySchedule",
          "description": "Schedule for daily snapshots"
        },
        "weeklySchedule": {
          "$ref": "#/definitions/WeeklySchedule",
          "description": "Schedule for weekly snapshots"
        },
        "monthlySchedule": {
          "$ref": "#/definitions/MonthlySchedule",
          "description": "Schedule for monthly snapshots"
        },
        "enabled": {
          "type": "boolean",
          "description": "The property to decide policy is enabled or not"
        },
        "provisioningState": {
          "type": "string",
          "description": "Azure lifecycle management",
          "readOnly": true
        }
      }
    },
    "SnapshotPolicyVolumeList": {
      "type": "object",
      "description": "Volumes associated with snapshot policy",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Volume items on this page",
          "items": {
            "$ref": "#/definitions/Volume"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SnapshotProperties": {
      "type": "object",
      "description": "Snapshot properties",
      "properties": {
        "snapshotId": {
          "type": "string",
          "description": "UUID v4 used to identify the Snapshot",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date of the snapshot",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "description": "Azure lifecycle management",
          "readOnly": true
        }
      }
    },
    "SnapshotRestoreFiles": {
      "type": "object",
      "description": "Restore payload for Single File Snapshot Restore",
      "properties": {
        "filePaths": {
          "type": "array",
          "description": "List of files to be restored",
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/FileName"
          }
        },
        "destinationPath": {
          "type": "string",
          "description": "Destination folder where the files will be restored"
        }
      },
      "required": [
        "filePaths"
      ]
    },
    "SnapshotsList": {
      "type": "object",
      "description": "List of Snapshots",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Snapshot items on this page",
          "items": {
            "$ref": "#/definitions/Snapshot"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SubvolumeInfo": {
      "type": "object",
      "description": "Subvolume Information properties",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SubvolumeProperties",
          "description": "Subvolume Properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SubvolumeModel": {
      "type": "object",
      "description": "Result of the post subvolume and action is to get metadata of the subvolume.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource Id",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Resource name",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Resource type",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/SubvolumeModelProperties",
          "description": "It represents the minimal properties of the subvolume.",
          "x-ms-client-flatten": true
        }
      }
    },
    "SubvolumeModelProperties": {
      "type": "object",
      "description": "Properties which represents actual subvolume model which is stored as a file in the system.",
      "properties": {
        "path": {
          "type": "string",
          "description": "Path to the subvolume"
        },
        "parentPath": {
          "type": "string",
          "description": "Path to the parent subvolume"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Size of subvolume"
        },
        "bytesUsed": {
          "type": "integer",
          "format": "int64",
          "description": "Bytes used"
        },
        "permissions": {
          "type": "string",
          "description": "Permissions of the subvolume"
        },
        "creationTimeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "Creation time and date"
        },
        "accessedTimeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "Most recent access time and date"
        },
        "modifiedTimeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "Most recent modification time and date"
        },
        "changedTimeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "Most recent change time and date"
        },
        "provisioningState": {
          "type": "string",
          "description": "Azure lifecycle management"
        }
      }
    },
    "SubvolumePatchParams": {
      "type": "object",
      "description": "Parameters with which a subvolume can be updated",
      "properties": {
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Truncate subvolume to the provided size in bytes",
          "x-nullable": true
        },
        "path": {
          "type": "string",
          "description": "path to the subvolume"
        }
      }
    },
    "SubvolumePatchRequest": {
      "type": "object",
      "description": "Subvolume Patch Request properties",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SubvolumePatchParams",
          "description": "Subvolume Properties",
          "x-ms-client-flatten": true
        }
      }
    },
    "SubvolumeProperties": {
      "type": "object",
      "description": "This represents path associated with the subvolume",
      "properties": {
        "path": {
          "type": "string",
          "description": "Path to the subvolume"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Truncate subvolume to the provided size in bytes",
          "x-nullable": true
        },
        "parentPath": {
          "type": "string",
          "description": "parent path to the subvolume",
          "x-nullable": true
        },
        "provisioningState": {
          "type": "string",
          "description": "Azure lifecycle management",
          "readOnly": true
        }
      }
    },
    "SubvolumesList": {
      "type": "object",
      "description": "List of Subvolumes",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SubvolumeInfo items on this page",
          "items": {
            "$ref": "#/definitions/SubvolumeInfo"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SvmPeerCommandResponse": {
      "type": "object",
      "description": "Information about svm peering process",
      "properties": {
        "svmPeeringCommand": {
          "type": "string",
          "description": "A command that needs to be run on the external ONTAP to accept svm peering.  Will only be present if <code>svmPeeringStatus</code> is <code>pending</code>"
        }
      }
    },
    "Type": {
      "type": "string",
      "description": "Type of quota",
      "enum": [
        "DefaultUserQuota",
        "DefaultGroupQuota",
        "IndividualUserQuota",
        "IndividualGroupQuota"
      ],
      "x-ms-enum": {
        "name": "Type",
        "modelAsString": true,
        "values": [
          {
            "name": "DefaultUserQuota",
            "value": "DefaultUserQuota",
            "description": "Default user quota"
          },
          {
            "name": "DefaultGroupQuota",
            "value": "DefaultGroupQuota",
            "description": "Default group quota"
          },
          {
            "name": "IndividualUserQuota",
            "value": "IndividualUserQuota",
            "description": "Individual user quota"
          },
          {
            "name": "IndividualGroupQuota",
            "value": "IndividualGroupQuota",
            "description": "Individual group quota"
          }
        ]
      }
    },
    "UnixPermissions": {
      "type": "string",
      "minLength": 4,
      "maxLength": 4
    },
    "UpdateNetworkSiblingSetRequest": {
      "type": "object",
      "description": "Network sibling set update.",
      "properties": {
        "networkSiblingSetId": {
          "type": "string",
          "description": "Network Sibling Set ID for a group of volumes sharing networking resources in a subnet.",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "subnetId": {
          "type": "string",
          "format": "arm-id",
          "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes. Example /subscriptions/subscriptionId/resourceGroups/resourceGroup/providers/Microsoft.Network/virtualNetworks/testVnet/subnets/{mySubnet}",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks/subnets"
              }
            ]
          }
        },
        "networkSiblingSetStateId": {
          "type": "string",
          "description": "Network sibling set state Id identifying the current state of the sibling set."
        },
        "networkFeatures": {
          "type": "string",
          "description": "Network features available to the volume.",
          "default": "Basic",
          "enum": [
            "Basic",
            "Standard",
            "Basic_Standard",
            "Standard_Basic"
          ],
          "x-ms-enum": {
            "name": "NetworkFeatures",
            "modelAsString": true,
            "values": [
              {
                "name": "Basic",
                "value": "Basic",
                "description": "Basic network features."
              },
              {
                "name": "Standard",
                "value": "Standard",
                "description": "Standard network features."
              },
              {
                "name": "Basic_Standard",
                "value": "Basic_Standard",
                "description": "Updating from Basic to Standard network features."
              },
              {
                "name": "Standard_Basic",
                "value": "Standard_Basic",
                "description": "Updating from Standard to Basic network features."
              }
            ]
          }
        }
      },
      "required": [
        "networkSiblingSetId",
        "subnetId",
        "networkSiblingSetStateId",
        "networkFeatures"
      ]
    },
    "UsageName": {
      "type": "object",
      "description": "The name of the usage.",
      "properties": {
        "value": {
          "type": "string",
          "description": "The name of the usage."
        },
        "localizedValue": {
          "type": "string",
          "description": "The localized name of the usage."
        }
      }
    },
    "UsageProperties": {
      "type": "object",
      "description": "Usage properties",
      "properties": {
        "currentValue": {
          "type": "integer",
          "format": "int32",
          "description": "The current usage value for the subscription.",
          "readOnly": true
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "The limit of the usage.",
          "readOnly": true
        },
        "unit": {
          "type": "string",
          "description": "The unit of the usage.",
          "readOnly": true
        }
      }
    },
    "UsageResult": {
      "type": "object",
      "description": "Usages entity model",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the usage.",
          "readOnly": true
        },
        "name": {
          "$ref": "#/definitions/UsageName",
          "description": "The name of the usage.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/UsageProperties",
          "description": "Usage properties",
          "x-ms-client-flatten": true
        }
      }
    },
    "UsagesListResult": {
      "type": "object",
      "description": "Usages result",
      "properties": {
        "value": {
          "type": "array",
          "description": "The UsageResult items on this page",
          "items": {
            "$ref": "#/definitions/UsageResult"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "UserName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255
    },
    "VfsV4IDDomain": {
      "type": "string",
      "maxLength": 255,
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.-]{0,253}[a-zA-Z0-9]$"
    },
    "Volume": {
      "type": "object",
      "description": "Volume resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VolumeProperties",
          "description": "Volume properties",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "\"If etag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.\")",
          "readOnly": true
        },
        "zones": {
          "type": "array",
          "description": "The availability zones.",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "VolumeBackupProperties": {
      "type": "object",
      "description": "Volume Backup Properties",
      "properties": {
        "backupPolicyId": {
          "type": "string",
          "format": "arm-id",
          "description": "Backup Policy Resource ID",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
              }
            ]
          }
        },
        "policyEnforced": {
          "type": "boolean",
          "description": "Policy Enforced"
        },
        "backupVaultId": {
          "type": "string",
          "format": "arm-id",
          "description": "Backup Vault Resource ID",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
              }
            ]
          }
        }
      }
    },
    "VolumeBackupRelationshipStatus": {
      "type": "string",
      "description": "Status of the volume backup relationship",
      "enum": [
        "Idle",
        "Transferring",
        "Failed",
        "Unknown"
      ],
      "x-ms-enum": {
        "name": "VolumeBackupRelationshipStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Idle",
            "value": "Idle"
          },
          {
            "name": "Transferring",
            "value": "Transferring"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "Unknown",
            "value": "Unknown"
          }
        ]
      }
    },
    "VolumeBackups": {
      "type": "object",
      "description": "Volume details using the backup policy",
      "properties": {
        "volumeName": {
          "type": "string",
          "description": "Volume name"
        },
        "volumeResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "ResourceId used to identify the Volume",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
              }
            ]
          }
        },
        "backupsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total count of backups for volume"
        },
        "policyEnabled": {
          "type": "boolean",
          "description": "Policy enabled"
        }
      }
    },
    "VolumeGroup": {
      "type": "object",
      "description": "Volume group resource",
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "description": "Resource Id",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Resource name",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Resource type",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/VolumeGroupListProperties",
          "description": "Volume group properties",
          "x-ms-client-flatten": true
        }
      }
    },
    "VolumeGroupDetails": {
      "type": "object",
      "description": "Volume group resource for create",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VolumeGroupProperties",
          "description": "Volume group properties",
          "x-ms-client-flatten": true
        },
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "VolumeGroupList": {
      "type": "object",
      "description": "List of volume group resources",
      "properties": {
        "value": {
          "type": "array",
          "description": "The VolumeGroup items on this page",
          "items": {
            "$ref": "#/definitions/VolumeGroup"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "VolumeGroupListProperties": {
      "type": "object",
      "description": "Volume group properties",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Azure lifecycle management",
          "readOnly": true
        },
        "groupMetaData": {
          "$ref": "#/definitions/VolumeGroupMetaData",
          "description": "Volume group details"
        }
      }
    },
    "VolumeGroupMetaData": {
      "type": "object",
      "description": "Volume group properties",
      "properties": {
        "groupDescription": {
          "type": "string",
          "description": "Group Description"
        },
        "applicationType": {
          "$ref": "#/definitions/ApplicationType",
          "description": "Application Type"
        },
        "applicationIdentifier": {
          "type": "string",
          "description": "Application specific identifier"
        },
        "globalPlacementRules": {
          "type": "array",
          "description": "Application specific placement rules for the volume group",
          "items": {
            "$ref": "#/definitions/PlacementKeyValuePairs"
          },
          "x-ms-identifiers": [
            "key"
          ]
        },
        "volumesCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of volumes in volume group",
          "readOnly": true
        }
      }
    },
    "VolumeGroupProperties": {
      "type": "object",
      "description": "Volume group properties",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Azure lifecycle management",
          "readOnly": true
        },
        "groupMetaData": {
          "$ref": "#/definitions/VolumeGroupMetaData",
          "description": "Volume group details"
        },
        "volumes": {
          "type": "array",
          "description": "List of volumes from group",
          "items": {
            "$ref": "#/definitions/VolumeGroupVolumeProperties"
          }
        }
      }
    },
    "VolumeGroupVolumeProperties": {
      "type": "object",
      "description": "Volume resource",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource Id",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "description": "Resource type",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags",
          "additionalProperties": {
            "type": "string"
          }
        },
        "zones": {
          "type": "array",
          "description": "Availability Zone",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "$ref": "#/definitions/VolumeProperties",
          "description": "Volume properties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ]
    },
    "VolumeLanguage": {
      "type": "string",
      "description": "Language supported for volume.",
      "enum": [
        "c.utf-8",
        "utf8mb4",
        "ar",
        "ar.utf-8",
        "hr",
        "hr.utf-8",
        "cs",
        "cs.utf-8",
        "da",
        "da.utf-8",
        "nl",
        "nl.utf-8",
        "en",
        "en.utf-8",
        "fi",
        "fi.utf-8",
        "fr",
        "fr.utf-8",
        "de",
        "de.utf-8",
        "he",
        "he.utf-8",
        "hu",
        "hu.utf-8",
        "it",
        "it.utf-8",
        "ja",
        "ja.utf-8",
        "ja-v1",
        "ja-v1.utf-8",
        "ja-jp.pck",
        "ja-jp.pck.utf-8",
        "ja-jp.932",
        "ja-jp.932.utf-8",
        "ja-jp.pck-v2",
        "ja-jp.pck-v2.utf-8",
        "ko",
        "ko.utf-8",
        "no",
        "no.utf-8",
        "pl",
        "pl.utf-8",
        "pt",
        "pt.utf-8",
        "c",
        "ro",
        "ro.utf-8",
        "ru",
        "ru.utf-8",
        "zh",
        "zh.utf-8",
        "zh.gbk",
        "zh.gbk.utf-8",
        "zh-tw.big5",
        "zh-tw.big5.utf-8",
        "zh-tw",
        "zh-tw.utf-8",
        "sk",
        "sk.utf-8",
        "sl",
        "sl.utf-8",
        "es",
        "es.utf-8",
        "sv",
        "sv.utf-8",
        "tr",
        "tr.utf-8",
        "en-us",
        "en-us.utf-8"
      ],
      "x-ms-enum": {
        "name": "VolumeLanguage",
        "modelAsString": true,
        "values": [
          {
            "name": "c.utf-8",
            "value": "c.utf-8",
            "description": "Posix with UTF-8"
          },
          {
            "name": "utf8mb4",
            "value": "utf8mb4",
            "description": "UTF-8 with 4 byte character support"
          },
          {
            "name": "ar",
            "value": "ar",
            "description": "Arabic - Deprecated"
          },
          {
            "name": "ar.utf-8",
            "value": "ar.utf-8",
            "description": "Arabic with UTF-8"
          },
          {
            "name": "hr",
            "value": "hr",
            "description": "Croatian - Deprecated"
          },
          {
            "name": "hr.utf-8",
            "value": "hr.utf-8",
            "description": "Croatian with UTF-8"
          },
          {
            "name": "cs",
            "value": "cs",
            "description": "Czech - Deprecated"
          },
          {
            "name": "cs.utf-8",
            "value": "cs.utf-8",
            "description": "Czech with UTF-8"
          },
          {
            "name": "da",
            "value": "da",
            "description": "Danish - Deprecated"
          },
          {
            "name": "da.utf-8",
            "value": "da.utf-8",
            "description": "Danish with UTF-8"
          },
          {
            "name": "nl",
            "value": "nl",
            "description": "Dutch - Deprecated"
          },
          {
            "name": "nl.utf-8",
            "value": "nl.utf-8",
            "description": "Dutch with UTF-8"
          },
          {
            "name": "en",
            "value": "en",
            "description": "English - Deprecated"
          },
          {
            "name": "en.utf-8",
            "value": "en.utf-8",
            "description": "English with UTF-8"
          },
          {
            "name": "fi",
            "value": "fi",
            "description": "Finnish - Deprecated"
          },
          {
            "name": "fi.utf-8",
            "value": "fi.utf-8",
            "description": "Finnish with UTF-8"
          },
          {
            "name": "fr",
            "value": "fr",
            "description": "French - Deprecated"
          },
          {
            "name": "fr.utf-8",
            "value": "fr.utf-8",
            "description": "French with UTF-8"
          },
          {
            "name": "de",
            "value": "de",
            "description": "German - Deprecated"
          },
          {
            "name": "de.utf-8",
            "value": "de.utf-8",
            "description": "German with UTF-8"
          },
          {
            "name": "he",
            "value": "he",
            "description": "Hebrew - Deprecated"
          },
          {
            "name": "he.utf-8",
            "value": "he.utf-8",
            "description": "Hebrew with UTF-8"
          },
          {
            "name": "hu",
            "value": "hu",
            "description": "Hungarian - Deprecated"
          },
          {
            "name": "hu.utf-8",
            "value": "hu.utf-8",
            "description": "Hungarian with UTF-8"
          },
          {
            "name": "it",
            "value": "it",
            "description": "Italian - Deprecated"
          },
          {
            "name": "it.utf-8",
            "value": "it.utf-8",
            "description": "Italian with UTF-8"
          },
          {
            "name": "ja",
            "value": "ja",
            "description": "Japanese euc-j - Deprecated"
          },
          {
            "name": "ja.utf-8",
            "value": "ja.utf-8",
            "description": "Japanese euc-j with UTF-8"
          },
          {
            "name": "ja-v1",
            "value": "ja-v1",
            "description": "Japanese euc-j - Deprecated"
          },
          {
            "name": "ja-v1.utf-8",
            "value": "ja-v1.utf-8",
            "description": "Japanese euc-j with UTF-8"
          },
          {
            "name": "ja-jp.pck",
            "value": "ja-jp.pck",
            "description": "Japanese pck"
          },
          {
            "name": "ja-jp.pck.utf-8",
            "value": "ja-jp.pck.utf-8",
            "description": "Japanese pck with UTF-8 - Deprecated"
          },
          {
            "name": "ja-jp.932",
            "value": "ja-jp.932",
            "description": "Japanese cp932"
          },
          {
            "name": "ja-jp.932.utf-8",
            "value": "ja-jp.932.utf-8",
            "description": "Japanese cp932 with UTF-8 - Deprecated"
          },
          {
            "name": "ja-jp.pck-v2",
            "value": "ja-jp.pck-v2",
            "description": "Japanese pck - sjis"
          },
          {
            "name": "ja-jp.pck-v2.utf-8",
            "value": "ja-jp.pck-v2.utf-8",
            "description": "Japanese pck - sjis with UTF-8 - Deprecated"
          },
          {
            "name": "ko",
            "value": "ko",
            "description": "Korean - Deprecated"
          },
          {
            "name": "ko.utf-8",
            "value": "ko.utf-8",
            "description": "Korean with UTF-8"
          },
          {
            "name": "no",
            "value": "no",
            "description": "Norwegian - Deprecated"
          },
          {
            "name": "no.utf-8",
            "value": "no.utf-8",
            "description": "Norwegian with UTF-8"
          },
          {
            "name": "pl",
            "value": "pl",
            "description": "Polish - Deprecated"
          },
          {
            "name": "pl.utf-8",
            "value": "pl.utf-8",
            "description": "Polish with UTF-8"
          },
          {
            "name": "pt",
            "value": "pt",
            "description": "Portuguese - Deprecated"
          },
          {
            "name": "pt.utf-8",
            "value": "pt.utf-8",
            "description": "Portuguese with UTF-8"
          },
          {
            "name": "c",
            "value": "c",
            "description": "Posix - Deprecated"
          },
          {
            "name": "ro",
            "value": "ro",
            "description": "Romanian - Deprecated"
          },
          {
            "name": "ro.utf-8",
            "value": "ro.utf-8",
            "description": "Romanian with UTF-8"
          },
          {
            "name": "ru",
            "value": "ru",
            "description": "Russian - Deprecated"
          },
          {
            "name": "ru.utf-8",
            "value": "ru.utf-8",
            "description": "Russian with UTF-8"
          },
          {
            "name": "zh",
            "value": "zh",
            "description": "Simplified Chinese - Deprecated"
          },
          {
            "name": "zh.utf-8",
            "value": "zh.utf-8",
            "description": "Simplified Chinese with UTF-8"
          },
          {
            "name": "zh.gbk",
            "value": "zh.gbk",
            "description": "Simplified gbk Chinese"
          },
          {
            "name": "zh.gbk.utf-8",
            "value": "zh.gbk.utf-8",
            "description": "Simplified gbk Chinese with UTF-8 - Deprecated"
          },
          {
            "name": "zh-tw.big5",
            "value": "zh-tw.big5",
            "description": "Traditional Chinese BIG 5"
          },
          {
            "name": "zh-tw.big5.utf-8",
            "value": "zh-tw.big5.utf-8",
            "description": "Traditional Chinese BIG 5 with UTF-8 - Deprecated"
          },
          {
            "name": "zh-tw",
            "value": "zh-tw",
            "description": "Traditional Chinese EUC-TW"
          },
          {
            "name": "zh-tw.utf-8",
            "value": "zh-tw.utf-8",
            "description": "Traditional Chinese EUC-TW with UTF-8 - Deprecated"
          },
          {
            "name": "sk",
            "value": "sk",
            "description": "Slovak - Deprecated"
          },
          {
            "name": "sk.utf-8",
            "value": "sk.utf-8",
            "description": "Slovak with UTF-8"
          },
          {
            "name": "sl",
            "value": "sl",
            "description": "Slovenian - Deprecated"
          },
          {
            "name": "sl.utf-8",
            "value": "sl.utf-8",
            "description": "Slovenian with UTF-8"
          },
          {
            "name": "es",
            "value": "es",
            "description": "Spanish - Deprecated"
          },
          {
            "name": "es.utf-8",
            "value": "es.utf-8",
            "description": "Spanish with UTF-8"
          },
          {
            "name": "sv",
            "value": "sv",
            "description": "Swedish - Deprecated"
          },
          {
            "name": "sv.utf-8",
            "value": "sv.utf-8",
            "description": "Swedish with UTF-8"
          },
          {
            "name": "tr",
            "value": "tr",
            "description": "Turkish - Deprecated"
          },
          {
            "name": "tr.utf-8",
            "value": "tr.utf-8",
            "description": "Turkish with UTF-8"
          },
          {
            "name": "en-us",
            "value": "en-us",
            "description": "US English - Deprecated"
          },
          {
            "name": "en-us.utf-8",
            "value": "en-us.utf-8",
            "description": "US English with UTF-8"
          }
        ]
      }
    },
    "VolumeList": {
      "type": "object",
      "description": "List of volume resources",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Volume items on this page",
          "items": {
            "$ref": "#/definitions/Volume"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "VolumePatch": {
      "type": "object",
      "description": "Volume patch resource",
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "id": {
          "type": "string",
          "description": "Resource Id",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Resource name",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Resource type",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/VolumePatchProperties",
          "description": "Patchable volume properties",
          "x-ms-client-flatten": true
        }
      }
    },
    "VolumePatchProperties": {
      "type": "object",
      "description": "Patchable volume properties",
      "properties": {
        "serviceLevel": {
          "type": "string",
          "description": "The service level of the file system",
          "default": "Premium",
          "enum": [
            "Standard",
            "Premium",
            "Ultra",
            "StandardZRS",
            "Flexible"
          ],
          "x-ms-enum": {
            "name": "ServiceLevel",
            "modelAsString": true,
            "values": [
              {
                "name": "Standard",
                "value": "Standard",
                "description": "Standard service level"
              },
              {
                "name": "Premium",
                "value": "Premium",
                "description": "Premium service level"
              },
              {
                "name": "Ultra",
                "value": "Ultra",
                "description": "Ultra service level"
              },
              {
                "name": "StandardZRS",
                "value": "StandardZRS",
                "description": "Zone redundant storage service level. This will be deprecated soon."
              },
              {
                "name": "Flexible",
                "value": "Flexible",
                "description": "Flexible service level"
              }
            ]
          }
        },
        "usageThreshold": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. For regular volumes, valid values are in the range 50GiB to 100TiB. For large volumes, valid values are in the range 100TiB to 500TiB, and on an exceptional basis, from to 2400GiB to 2400TiB. Values expressed in bytes as multiples of 1 GiB.",
          "default": 107374182400,
          "minimum": 53687091200,
          "maximum": 2638827906662400
        },
        "exportPolicy": {
          "$ref": "#/definitions/VolumePatchPropertiesExportPolicy",
          "description": "Set of export policy rules"
        },
        "protocolTypes": {
          "type": "array",
          "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
          "items": {
            "type": "string"
          }
        },
        "throughputMibps": {
          "type": "number",
          "format": "float",
          "description": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume"
        },
        "dataProtection": {
          "$ref": "#/definitions/VolumePatchPropertiesDataProtection",
          "description": "DataProtection type volumes include an object containing details of the replication"
        },
        "isDefaultQuotaEnabled": {
          "type": "boolean",
          "description": "Specifies if default quota is enabled for the volume.",
          "default": false
        },
        "defaultUserQuotaInKiBs": {
          "type": "integer",
          "format": "int64",
          "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
          "default": 0
        },
        "defaultGroupQuotaInKiBs": {
          "type": "integer",
          "format": "int64",
          "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
          "default": 0
        },
        "unixPermissions": {
          "$ref": "#/definitions/UnixPermissions",
          "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
          "x-nullable": true
        },
        "coolAccess": {
          "type": "boolean",
          "description": "Specifies whether Cool Access(tiering) is enabled for the volume."
        },
        "coolnessPeriod": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
          "minimum": 2,
          "maximum": 183
        },
        "coolAccessRetrievalPolicy": {
          "$ref": "#/definitions/CoolAccessRetrievalPolicy",
          "description": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are:\nDefault - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.\nOnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.\nNever - No client-driven data is pulled from cool tier to standard storage."
        },
        "coolAccessTieringPolicy": {
          "$ref": "#/definitions/CoolAccessTieringPolicy",
          "description": "coolAccessTieringPolicy determines which cold data blocks are moved to cool tier. The possible values for this field are: Auto - Moves cold user data blocks in both the Snapshot copies and the active file system to the cool tier tier. This policy is the default. SnapshotOnly - Moves user data blocks of the Volume Snapshot copies that are not associated with the active file system to the cool tier."
        },
        "snapshotDirectoryVisible": {
          "type": "boolean",
          "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots."
        },
        "smbAccessBasedEnumeration": {
          "$ref": "#/definitions/SmbAccessBasedEnumeration",
          "description": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume",
          "x-nullable": true
        },
        "smbNonBrowsable": {
          "$ref": "#/definitions/SmbNonBrowsable",
          "description": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume"
        }
      }
    },
    "VolumePatchPropertiesDataProtection": {
      "type": "object",
      "description": "DataProtection type volumes include an object containing details of the replication",
      "properties": {
        "backup": {
          "$ref": "#/definitions/VolumeBackupProperties",
          "description": "Backup Properties"
        },
        "snapshot": {
          "$ref": "#/definitions/VolumeSnapshotProperties",
          "description": "Snapshot properties."
        }
      }
    },
    "VolumePatchPropertiesExportPolicy": {
      "type": "object",
      "description": "Set of export policy rules",
      "properties": {
        "rules": {
          "type": "array",
          "description": "Export policy rule",
          "items": {
            "$ref": "#/definitions/ExportPolicyRule"
          },
          "x-ms-identifiers": [
            "ruleIndex"
          ]
        }
      }
    },
    "VolumeProperties": {
      "type": "object",
      "description": "Volume properties",
      "properties": {
        "fileSystemId": {
          "type": "string",
          "description": "Unique FileSystem Identifier.",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true
        },
        "creationToken": {
          "type": "string",
          "description": "A unique file path for the volume. Used when creating mount targets",
          "minLength": 1,
          "maxLength": 80,
          "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "serviceLevel": {
          "type": "string",
          "description": "The service level of the file system",
          "default": "Premium",
          "enum": [
            "Standard",
            "Premium",
            "Ultra",
            "StandardZRS",
            "Flexible"
          ],
          "x-ms-enum": {
            "name": "ServiceLevel",
            "modelAsString": true,
            "values": [
              {
                "name": "Standard",
                "value": "Standard",
                "description": "Standard service level"
              },
              {
                "name": "Premium",
                "value": "Premium",
                "description": "Premium service level"
              },
              {
                "name": "Ultra",
                "value": "Ultra",
                "description": "Ultra service level"
              },
              {
                "name": "StandardZRS",
                "value": "StandardZRS",
                "description": "Zone redundant storage service level. This will be deprecated soon."
              },
              {
                "name": "Flexible",
                "value": "Flexible",
                "description": "Flexible service level"
              }
            ]
          }
        },
        "usageThreshold": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. For regular volumes, valid values are in the range 50GiB to 100TiB. For large volumes, valid values are in the range 100TiB to 500TiB, and on an exceptional basis, from to 2400GiB to 2400TiB. Values expressed in bytes as multiples of 1 GiB.",
          "default": 107374182400,
          "minimum": 53687091200,
          "maximum": 2638827906662400
        },
        "exportPolicy": {
          "$ref": "#/definitions/VolumePropertiesExportPolicy",
          "description": "Set of export policy rules"
        },
        "protocolTypes": {
          "type": "array",
          "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "type": "string",
          "description": "Azure lifecycle management",
          "readOnly": true
        },
        "snapshotId": {
          "type": "string",
          "format": "arm-id",
          "description": "Resource identifier used to identify the Snapshot.",
          "x-nullable": true,
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
              }
            ]
          }
        },
        "deleteBaseSnapshot": {
          "type": "boolean",
          "description": "If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false"
        },
        "backupId": {
          "type": "string",
          "format": "arm-id",
          "description": "Resource identifier used to identify the Backup.",
          "x-nullable": true,
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/backupVaults/backups"
              }
            ]
          }
        },
        "baremetalTenantId": {
          "type": "string",
          "description": "Unique Baremetal Tenant Identifier.",
          "readOnly": true
        },
        "subnetId": {
          "type": "string",
          "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"
        },
        "networkFeatures": {
          "type": "string",
          "description": "The original value of the network features type available to the volume at the time it was created.",
          "default": "Basic",
          "enum": [
            "Basic",
            "Standard",
            "Basic_Standard",
            "Standard_Basic"
          ],
          "x-ms-enum": {
            "name": "NetworkFeatures",
            "modelAsString": true,
            "values": [
              {
                "name": "Basic",
                "value": "Basic",
                "description": "Basic network features."
              },
              {
                "name": "Standard",
                "value": "Standard",
                "description": "Standard network features."
              },
              {
                "name": "Basic_Standard",
                "value": "Basic_Standard",
                "description": "Updating from Basic to Standard network features."
              },
              {
                "name": "Standard_Basic",
                "value": "Standard_Basic",
                "description": "Updating from Standard to Basic network features."
              }
            ]
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "effectiveNetworkFeatures": {
          "type": "string",
          "description": "The effective value of the network features type available to the volume, or current effective state of update.",
          "default": "Basic",
          "enum": [
            "Basic",
            "Standard",
            "Basic_Standard",
            "Standard_Basic"
          ],
          "x-ms-enum": {
            "name": "NetworkFeatures",
            "modelAsString": true,
            "values": [
              {
                "name": "Basic",
                "value": "Basic",
                "description": "Basic network features."
              },
              {
                "name": "Standard",
                "value": "Standard",
                "description": "Standard network features."
              },
              {
                "name": "Basic_Standard",
                "value": "Basic_Standard",
                "description": "Updating from Basic to Standard network features."
              },
              {
                "name": "Standard_Basic",
                "value": "Standard_Basic",
                "description": "Updating from Standard to Basic network features."
              }
            ]
          },
          "readOnly": true
        },
        "networkSiblingSetId": {
          "type": "string",
          "description": "Network Sibling Set ID for the the group of volumes sharing networking resources.",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "readOnly": true
        },
        "storageToNetworkProximity": {
          "$ref": "#/definitions/VolumeStorageToNetworkProximity",
          "description": "Provides storage to network proximity information for the volume.",
          "readOnly": true
        },
        "mountTargets": {
          "type": "array",
          "description": "List of mount targets",
          "items": {
            "$ref": "#/definitions/MountTargetProperties"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "fileSystemId"
          ]
        },
        "volumeType": {
          "type": "string",
          "description": "What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection. For creating clone volume, set type to ShortTermClone",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "dataProtection": {
          "$ref": "#/definitions/VolumePropertiesDataProtection",
          "description": "DataProtection type volumes include an object containing details of the replication"
        },
        "acceptGrowCapacityPoolForShortTermCloneSplit": {
          "$ref": "#/definitions/AcceptGrowCapacityPoolForShortTermCloneSplit",
          "description": "While auto splitting the short term clone volume, if the parent pool does not have enough space to accommodate the volume after split, it will be automatically resized, which will lead to increased billing. To accept capacity pool size auto grow and create a short term clone volume, set the property as accepted.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "isRestoring": {
          "type": "boolean",
          "description": "Restoring",
          "readOnly": true
        },
        "snapshotDirectoryVisible": {
          "type": "boolean",
          "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (defaults to true).",
          "default": true
        },
        "kerberosEnabled": {
          "type": "boolean",
          "description": "Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later",
          "default": false,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "securityStyle": {
          "type": "string",
          "description": "The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol",
          "default": "unix",
          "enum": [
            "ntfs",
            "unix"
          ],
          "x-ms-enum": {
            "name": "SecurityStyle",
            "modelAsString": true,
            "values": [
              {
                "name": "ntfs",
                "value": "ntfs"
              },
              {
                "name": "unix",
                "value": "unix"
              }
            ]
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "smbEncryption": {
          "type": "boolean",
          "description": "Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later",
          "default": false
        },
        "smbAccessBasedEnumeration": {
          "$ref": "#/definitions/SmbAccessBasedEnumeration",
          "description": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume",
          "x-nullable": true
        },
        "smbNonBrowsable": {
          "$ref": "#/definitions/SmbNonBrowsable",
          "description": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume"
        },
        "smbContinuouslyAvailable": {
          "type": "boolean",
          "description": "Enables continuously available share property for smb volume. Only applicable for SMB volume",
          "default": false
        },
        "throughputMibps": {
          "type": "number",
          "format": "float",
          "description": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
          "x-nullable": true
        },
        "actualThroughputMibps": {
          "type": "number",
          "format": "float",
          "description": "Actual throughput in MiB/s for auto qosType volumes calculated based on size and serviceLevel",
          "readOnly": true
        },
        "encryptionKeySource": {
          "type": "string",
          "description": "Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'",
          "default": "Microsoft.NetApp",
          "enum": [
            "Microsoft.NetApp",
            "Microsoft.KeyVault"
          ],
          "x-ms-enum": {
            "name": "EncryptionKeySource",
            "modelAsString": true,
            "values": [
              {
                "name": "Microsoft.NetApp",
                "value": "Microsoft.NetApp",
                "description": "Microsoft-managed key encryption"
              },
              {
                "name": "Microsoft.KeyVault",
                "value": "Microsoft.KeyVault",
                "description": "Customer-managed key encryption"
              }
            ]
          }
        },
        "keyVaultPrivateEndpointResourceId": {
          "type": "string",
          "description": "The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'."
        },
        "ldapEnabled": {
          "type": "boolean",
          "description": "Specifies whether LDAP is enabled or not for a given NFS volume.",
          "default": false,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "ldapServerType": {
          "$ref": "#/definitions/LdapServerType",
          "description": "Specifies the type of LDAP server for a given NFS volume.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "coolAccess": {
          "type": "boolean",
          "description": "Specifies whether Cool Access(tiering) is enabled for the volume.",
          "default": false
        },
        "coolnessPeriod": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
          "minimum": 2,
          "maximum": 183
        },
        "coolAccessRetrievalPolicy": {
          "$ref": "#/definitions/CoolAccessRetrievalPolicy",
          "description": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are:\nDefault - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.\nOnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.\nNever - No client-driven data is pulled from cool tier to standard storage."
        },
        "coolAccessTieringPolicy": {
          "$ref": "#/definitions/CoolAccessTieringPolicy",
          "description": "coolAccessTieringPolicy determines which cold data blocks are moved to cool tier. The possible values for this field are: Auto - Moves cold user data blocks in both the Snapshot copies and the active file system to the cool tier tier. This policy is the default. SnapshotOnly - Moves user data blocks of the Volume Snapshot copies that are not associated with the active file system to the cool tier."
        },
        "unixPermissions": {
          "$ref": "#/definitions/UnixPermissions",
          "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
          "x-nullable": true
        },
        "cloneProgress": {
          "type": "integer",
          "format": "int32",
          "description": "When a volume is being restored from another volume's snapshot, will show the percentage completion of this cloning process. When this value is empty/null there is no cloning process currently happening on this volume. This value will update every 5 minutes during cloning.",
          "x-nullable": true,
          "readOnly": true
        },
        "fileAccessLogs": {
          "type": "string",
          "description": "Flag indicating whether file access logs are enabled for the volume, based on active diagnostic settings present on the volume.",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FileAccessLogs",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "fileAccessLogs are enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "fileAccessLogs are not enabled"
              }
            ]
          },
          "readOnly": true
        },
        "avsDataStore": {
          "type": "string",
          "description": "Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "AvsDataStore",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "avsDataStore is enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "avsDataStore is disabled"
              }
            ]
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "dataStoreResourceId": {
          "type": "array",
          "description": "Data store resource unique identifier",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "isDefaultQuotaEnabled": {
          "type": "boolean",
          "description": "Specifies if default quota is enabled for the volume.",
          "default": false
        },
        "defaultUserQuotaInKiBs": {
          "type": "integer",
          "format": "int64",
          "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
          "default": 0
        },
        "defaultGroupQuotaInKiBs": {
          "type": "integer",
          "format": "int64",
          "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
          "default": 0
        },
        "maximumNumberOfFiles": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of files allowed. Needs a service request in order to be changed. Only allowed to be changed if volume quota is more than 4TiB.",
          "readOnly": true
        },
        "volumeGroupName": {
          "type": "string",
          "description": "Volume Group Name",
          "readOnly": true
        },
        "capacityPoolResourceId": {
          "type": "string",
          "description": "Pool Resource Id used in case of creating a volume through volume group"
        },
        "proximityPlacementGroup": {
          "type": "string",
          "description": "Proximity placement group associated with the volume"
        },
        "t2Network": {
          "type": "string",
          "description": "T2 network information",
          "readOnly": true
        },
        "volumeSpecName": {
          "type": "string",
          "description": "Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log"
        },
        "encrypted": {
          "type": "boolean",
          "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
          "readOnly": true
        },
        "placementRules": {
          "type": "array",
          "description": "Application specific placement rules for the particular volume",
          "items": {
            "$ref": "#/definitions/PlacementKeyValuePairs"
          },
          "x-ms-identifiers": [
            "key"
          ]
        },
        "enableSubvolumes": {
          "type": "string",
          "description": "Flag indicating whether subvolume operations are enabled on the volume",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "EnableSubvolumes",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "subvolumes are enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "subvolumes are not enabled"
              }
            ]
          }
        },
        "provisionedAvailabilityZone": {
          "type": "string",
          "description": "The availability zone where the volume is provisioned. This refers to the logical availability zone where the volume resides.",
          "x-nullable": true,
          "readOnly": true
        },
        "isLargeVolume": {
          "type": "boolean",
          "description": "Specifies whether volume is a Large Volume or Regular Volume.",
          "default": false,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "originatingResourceId": {
          "type": "string",
          "description": "Id of the snapshot or backup that the volume is restored from.",
          "x-nullable": true,
          "readOnly": true
        },
        "inheritedSizeInBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Space shared by short term clone volume with parent volume in bytes.",
          "x-nullable": true,
          "readOnly": true
        },
        "language": {
          "$ref": "#/definitions/VolumeLanguage",
          "description": "Language supported for volume."
        }
      },
      "required": [
        "creationToken",
        "usageThreshold",
        "subnetId"
      ]
    },
    "VolumePropertiesDataProtection": {
      "type": "object",
      "description": "DataProtection type volumes include an object containing details of the replication",
      "properties": {
        "backup": {
          "$ref": "#/definitions/VolumeBackupProperties",
          "description": "Backup Properties"
        },
        "replication": {
          "$ref": "#/definitions/ReplicationObject",
          "description": "Replication properties"
        },
        "snapshot": {
          "$ref": "#/definitions/VolumeSnapshotProperties",
          "description": "Snapshot properties."
        },
        "volumeRelocation": {
          "$ref": "#/definitions/VolumeRelocationProperties",
          "description": "VolumeRelocation properties"
        }
      }
    },
    "VolumePropertiesExportPolicy": {
      "type": "object",
      "description": "Set of export policy rules",
      "properties": {
        "rules": {
          "type": "array",
          "description": "Export policy rule",
          "items": {
            "$ref": "#/definitions/ExportPolicyRule"
          },
          "x-ms-identifiers": [
            "ruleIndex"
          ]
        }
      }
    },
    "VolumeQuotaRule": {
      "type": "object",
      "description": "Quota Rule of a Volume",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VolumeQuotaRulesProperties",
          "description": "Volume Quota Rule Properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "VolumeQuotaRulePatch": {
      "type": "object",
      "description": "Patchable Quota Rule of a Volume",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/VolumeQuotaRulesProperties",
          "description": "Volume Quota Rule Properties",
          "x-ms-client-flatten": true
        }
      }
    },
    "VolumeQuotaRulesList": {
      "type": "object",
      "description": "List of Volume Quota Rules",
      "properties": {
        "value": {
          "type": "array",
          "description": "The VolumeQuotaRule items on this page",
          "items": {
            "$ref": "#/definitions/VolumeQuotaRule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "VolumeQuotaRulesProperties": {
      "type": "object",
      "description": "Volume Quota Rule properties",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/NetAppProvisioningState",
          "description": "Gets the status of the VolumeQuotaRule at the time the operation was called.",
          "readOnly": true
        },
        "quotaSizeInKiBs": {
          "type": "integer",
          "format": "int64",
          "description": "Size of quota"
        },
        "quotaType": {
          "$ref": "#/definitions/Type",
          "description": "Type of quota",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "quotaTarget": {
          "type": "string",
          "description": "UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "VolumeRelocationProperties": {
      "type": "object",
      "description": "Volume relocation properties",
      "properties": {
        "relocationRequested": {
          "type": "boolean",
          "description": "Has relocation been requested for this volume"
        },
        "readyToBeFinalized": {
          "type": "boolean",
          "description": "Has relocation finished and is ready to be cleaned up",
          "readOnly": true
        }
      }
    },
    "VolumeReplicationRelationshipStatus": {
      "type": "string",
      "description": "Status of the volume replication relationship",
      "enum": [
        "Idle",
        "Transferring"
      ],
      "x-ms-enum": {
        "name": "VolumeReplicationRelationshipStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Idle",
            "value": "Idle"
          },
          {
            "name": "Transferring",
            "value": "Transferring"
          }
        ]
      }
    },
    "VolumeRestoreRelationshipStatus": {
      "type": "string",
      "description": "Status of the volume restore relationship",
      "enum": [
        "Idle",
        "Transferring",
        "Failed",
        "Unknown"
      ],
      "x-ms-enum": {
        "name": "VolumeRestoreRelationshipStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Idle",
            "value": "Idle"
          },
          {
            "name": "Transferring",
            "value": "Transferring"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "Unknown",
            "value": "Unknown"
          }
        ]
      }
    },
    "VolumeRevert": {
      "type": "object",
      "description": "revert a volume to the snapshot",
      "properties": {
        "snapshotId": {
          "type": "string",
          "format": "arm-id",
          "description": "Resource id of the snapshot",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
              }
            ]
          }
        }
      }
    },
    "VolumeSnapshotProperties": {
      "type": "object",
      "description": "Volume Snapshot Properties",
      "properties": {
        "snapshotPolicyId": {
          "type": "string",
          "description": "Snapshot Policy ResourceId"
        }
      }
    },
    "VolumeStorageToNetworkProximity": {
      "type": "string",
      "description": "Provides storage to network proximity information for the volume.",
      "enum": [
        "Default",
        "T1",
        "T2",
        "AcrossT2"
      ],
      "x-ms-enum": {
        "name": "VolumeStorageToNetworkProximity",
        "modelAsString": true,
        "values": [
          {
            "name": "Default",
            "value": "Default",
            "description": "Basic storage to network connectivity."
          },
          {
            "name": "T1",
            "value": "T1",
            "description": "Standard T1 storage to network connectivity."
          },
          {
            "name": "T2",
            "value": "T2",
            "description": "Standard T2 storage to network connectivity."
          },
          {
            "name": "AcrossT2",
            "value": "AcrossT2",
            "description": "Standard AcrossT2 storage to network connectivity."
          }
        ]
      }
    },
    "WeeklySchedule": {
      "type": "object",
      "description": "Weekly Schedule properties, make a snapshot every week at a specific day or days",
      "properties": {
        "snapshotsToKeep": {
          "type": "integer",
          "format": "int32",
          "description": "Weekly snapshot count to keep"
        },
        "day": {
          "type": "string",
          "description": "Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english"
        },
        "hour": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates which hour in UTC timezone a snapshot should be taken"
        },
        "minute": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates which minute snapshot should be taken"
        },
        "usedBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Resource size in bytes, current storage usage for the volume in bytes"
        }
      }
    }
  },
  "parameters": {}
}
