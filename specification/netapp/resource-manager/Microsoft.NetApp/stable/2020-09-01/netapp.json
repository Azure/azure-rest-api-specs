{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft NetApp",
    "description": "Microsoft NetApp Azure Resource Provider specification",
    "version": "2020-09-01",
    "x-ms-code-generation-settings": {
      "name": "AzureNetAppFilesManagementClient"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.NetApp/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "Describes the Resource Provider",
        "description": "Lists all of the available Microsoft.NetApp Rest API operations",
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/checkNameAvailability": {
      "post": {
        "tags": [
          "NetApp Resource"
        ],
        "summary": "Check resource name availability",
        "description": "Check if a resource name is available.",
        "operationId": "NetAppResource_CheckNameAvailability",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Name availability request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceNameAvailabilityRequest"
            },
            "x-ms-client-flatten": true
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/location"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "CheckNameAvailability": {
            "$ref": "examples/CheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/checkFilePathAvailability": {
      "post": {
        "tags": [
          "NetApp Resource"
        ],
        "summary": "Check file path availability",
        "description": "Check if a file path is available.",
        "operationId": "NetAppResource_CheckFilePathAvailability",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "File path availability request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceNameAvailabilityRequest"
            },
            "x-ms-client-flatten": true
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/location"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "CheckFilePathAvailability": {
            "$ref": "examples/CheckFilePathAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/checkQuotaAvailability": {
      "post": {
        "tags": [
          "NetApp Resource"
        ],
        "summary": "Check quota availability",
        "description": "Check if a quota is available.",
        "operationId": "NetAppResource_CheckQuotaAvailability",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Quota availability request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuotaAvailabilityRequest"
            },
            "x-ms-client-flatten": true
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/location"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "CheckQuotaAvailability": {
            "$ref": "examples/CheckQuotaAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts": {
      "get": {
        "summary": "Describe all NetApp Accounts in a resource group",
        "description": "List and describe all NetApp accounts in the resource group.",
        "tags": [
          "NetApp Accounts"
        ],
        "operationId": "Accounts_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/netAppAccountList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "Accounts_List": {
            "$ref": "examples/Accounts_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}": {
      "get": {
        "summary": "Describe a NetApp Account",
        "description": "Get the NetApp account",
        "tags": [
          "NetApp Accounts"
        ],
        "operationId": "Accounts_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/netAppAccount"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "Accounts_Get": {
            "$ref": "examples/Accounts_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "NetApp Accounts"
        ],
        "operationId": "Accounts_CreateOrUpdate",
        "summary": "Create or update a NetApp account",
        "description": "Create or update the specified NetApp account within the resource group",
        "parameters": [
          {
            "name": "body",
            "description": "NetApp Account object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/netAppAccount"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - account updated",
            "schema": {
              "$ref": "#/definitions/netAppAccount"
            }
          },
          "201": {
            "description": "Account created",
            "schema": {
              "$ref": "#/definitions/netAppAccount"
            }
          },
          "202": {
            "description": "Accepted -- Create, update or delete request accepted; operation will complete asynchronously"
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Accounts_CreateOrUpdate": {
            "$ref": "examples/Accounts_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "NetApp Accounts"
        ],
        "operationId": "Accounts_Delete",
        "summary": "Delete a NetApp account",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "description": "Delete the specified NetApp account",
        "responses": {
          "202": {
            "description": "Accepted -- Create, update or delete request accepted; operation will complete asynchronously"
          },
          "204": {
            "description": "NoContent -- Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Accounts_Delete": {
            "$ref": "examples/Accounts_Delete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "NetApp Accounts"
        ],
        "operationId": "Accounts_Update",
        "summary": "Update a NetApp account",
        "description": "Patch the specified NetApp account",
        "parameters": [
          {
            "name": "body",
            "description": "NetApp Account object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/netAppAccountPatch"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - account updated",
            "schema": {
              "$ref": "#/definitions/netAppAccount"
            }
          },
          "201": {
            "description": "OK - account created",
            "schema": {
              "$ref": "#/definitions/netAppAccount"
            }
          },
          "202": {
            "description": "Accepted -- Create, update or delete request accepted; operation will complete asynchronously"
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Accounts_Update": {
            "$ref": "examples/Accounts_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools": {
      "get": {
        "summary": "Describe all Capacity Pools",
        "description": "List all capacity pools in the NetApp Account",
        "tags": [
          "Capacity Pools"
        ],
        "operationId": "Pools_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/capacityPoolList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "Pools_List": {
            "$ref": "examples/Pools_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}": {
      "get": {
        "summary": "Describe a Capacity Pool",
        "description": "Get details of the specified capacity pool",
        "tags": [
          "Capacity Pools"
        ],
        "operationId": "Pools_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/PoolName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/capacityPool"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "Pools_Get": {
            "$ref": "examples/Pools_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Capacity Pools"
        ],
        "operationId": "Pools_CreateOrUpdate",
        "summary": "Create or Update the specified capacity pool within the resource group",
        "description": "Create or Update a capacity pool",
        "parameters": [
          {
            "name": "body",
            "description": "Capacity pool object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/capacityPool"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/PoolName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - pool updated",
            "schema": {
              "$ref": "#/definitions/capacityPool"
            }
          },
          "201": {
            "description": "Pool created",
            "schema": {
              "$ref": "#/definitions/capacityPool"
            }
          },
          "202": {
            "description": "Accepted -- Create, update or delete request accepted; operation will complete asynchronously"
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Pools_CreateOrUpdate": {
            "$ref": "examples/Pools_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Capacity Pools"
        ],
        "operationId": "Pools_Update",
        "summary": "Update a capacity pool",
        "description": "Patch the specified capacity pool",
        "parameters": [
          {
            "name": "body",
            "description": "Capacity pool object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/capacityPoolPatch"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/PoolName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/capacityPool"
            }
          },
          "202": {
            "description": "Accepted -- Create, update or delete request accepted; operation will complete asynchronously"
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Pools_Update": {
            "$ref": "examples/Pools_Update.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Capacity Pools"
        ],
        "operationId": "Pools_Delete",
        "summary": "Delete a capacity pool",
        "description": "Delete the specified capacity pool",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/PoolName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted -- Create, update or delete request accepted; operation will complete asynchronously"
          },
          "204": {
            "description": "NoContent -- Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Pools_Delete": {
            "$ref": "examples/Pools_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes": {
      "get": {
        "summary": "Describe all volumes",
        "description": "List all volumes within the capacity pool",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/PoolName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "tags": [
          "Volumes"
        ],
        "operationId": "Volumes_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/volumeList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "Volumes_List": {
            "$ref": "examples/Volumes_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}": {
      "get": {
        "tags": [
          "Volumes"
        ],
        "operationId": "Volumes_Get",
        "summary": "Describe a volume",
        "description": "Get the details of the specified volume",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/PoolName"
          },
          {
            "$ref": "#/parameters/VolumeName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/volume"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "Volumes_Get": {
            "$ref": "examples/Volumes_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Volumes"
        ],
        "operationId": "Volumes_CreateOrUpdate",
        "summary": "Create or Update a volume",
        "description": "Create or update the specified volume within the capacity pool",
        "parameters": [
          {
            "name": "body",
            "description": "Volume object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/volume"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/PoolName"
          },
          {
            "$ref": "#/parameters/VolumeName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - volume updated",
            "schema": {
              "$ref": "#/definitions/volume"
            }
          },
          "201": {
            "description": "Volume created",
            "schema": {
              "$ref": "#/definitions/volume"
            }
          },
          "202": {
            "description": "Accepted -- Create request accepted; operation will complete asynchronously"
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Volumes_CreateOrUpdate": {
            "$ref": "examples/Volumes_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Volumes"
        ],
        "operationId": "Volumes_Update",
        "summary": "Update a volume",
        "description": "Patch the specified volume",
        "parameters": [
          {
            "name": "body",
            "description": "Volume object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/volumePatch"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/PoolName"
          },
          {
            "$ref": "#/parameters/VolumeName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/volume"
            }
          },
          "202": {
            "description": "Accepted -- Create, update or delete request accepted; operation will complete asynchronously"
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Volumes_Update": {
            "$ref": "examples/Volumes_Update.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Volumes"
        ],
        "operationId": "Volumes_Delete",
        "summary": "Delete a volume",
        "description": "Delete the specified volume",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/PoolName"
          },
          {
            "$ref": "#/parameters/VolumeName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted -- Create, update or delete request accepted; operation will complete asynchronously"
          },
          "204": {
            "description": "NoContent -- Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Volumes_Delete": {
            "$ref": "examples/Volumes_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/revert": {
      "post": {
        "tags": [
          "Volumes Revert"
        ],
        "summary": "Revert a volume to one of its snapshots",
        "description": "Revert a volume to the snapshot specified in the body",
        "operationId": "Volumes_Revert",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/PoolName"
          },
          {
            "$ref": "#/parameters/VolumeName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "body",
            "description": "Object for snapshot to revert supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/volumeRevert"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - terminal state"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Volumes_Revert": {
            "$ref": "examples/Volumes_Revert.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/breakReplication": {
      "post": {
        "tags": [
          "Volumes Replication"
        ],
        "summary": "Break volume replication",
        "description": "Break the replication connection on the destination volume",
        "operationId": "Volumes_BreakReplication",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/PoolName"
          },
          {
            "$ref": "#/parameters/VolumeName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "body",
            "description": "Optional body to force break the replication.",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/breakReplicationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - terminal state"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Volumes_BreakReplication": {
            "$ref": "examples/Volumes_BreakReplication.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/replicationStatus": {
      "get": {
        "tags": [
          "Volumes Replication"
        ],
        "summary": "Get volume replication status",
        "description": "Get the status of the replication",
        "operationId": "Volumes_ReplicationStatus",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/PoolName"
          },
          {
            "$ref": "#/parameters/VolumeName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/replicationStatus"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "Volumes_ReplicationStatus": {
            "$ref": "examples/Volumes_ReplicationStatus.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/resyncReplication": {
      "post": {
        "tags": [
          "Volumes Replication"
        ],
        "summary": "Resync volume replication",
        "description": "Resync the connection on the destination volume. If the operation is ran on the source volume it will reverse-resync the connection and sync from destination to source.",
        "operationId": "Volumes_ResyncReplication",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/PoolName"
          },
          {
            "$ref": "#/parameters/VolumeName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - terminal state"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Volumes_ResyncReplication": {
            "$ref": "examples/Volumes_ResyncReplication.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/deleteReplication": {
      "post": {
        "tags": [
          "Volumes Replication"
        ],
        "summary": "Delete volume replication",
        "description": "Delete the replication connection on the destination volume, and send release to the source replication",
        "operationId": "Volumes_DeleteReplication",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/PoolName"
          },
          {
            "$ref": "#/parameters/VolumeName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - terminal state"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Volumes_DeleteReplication": {
            "$ref": "examples/Volumes_DeleteReplication.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/authorizeReplication": {
      "post": {
        "tags": [
          "Volumes Replication"
        ],
        "summary": "Authorize source volume replication",
        "description": "Authorize the replication connection on the source volume",
        "operationId": "Volumes_AuthorizeReplication",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/PoolName"
          },
          {
            "$ref": "#/parameters/VolumeName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "body",
            "description": "Authorize request object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/authorizeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - terminal state"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Volumes_AuthorizeReplication": {
            "$ref": "examples/Volumes_AuthorizeReplication.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/reinitializeReplication": {
      "post": {
        "tags": [
          "Volumes Replication"
        ],
        "summary": "ReInitialize volume replication",
        "description": "Re-Initializes the replication connection on the destination volume",
        "operationId": "Volumes_ReInitializeReplication",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/PoolName"
          },
          {
            "$ref": "#/parameters/VolumeName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - terminal state"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Volumes_ReInitializeReplication": {
            "$ref": "examples/Volumes_ReInitializeReplication.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/poolChange": {
      "post": {
        "tags": [
          "Pool Change"
        ],
        "summary": "Change pool for volume",
        "description": "Moves volume to another pool",
        "operationId": "Volumes_PoolChange",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/PoolName"
          },
          {
            "$ref": "#/parameters/VolumeName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "body",
            "description": "Move volume to the pool supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/poolChangeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - terminal state"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Volumes_AuthorizeReplication": {
            "$ref": "examples/Volumes_PoolChange.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots": {
      "get": {
        "tags": [
          "Snapshots"
        ],
        "operationId": "Snapshots_List",
        "summary": "Describe all snapshots",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/PoolName"
          },
          {
            "$ref": "#/parameters/VolumeName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "description": "List all snapshots associated with the volume",
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/snapshotsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "Snapshots_List": {
            "$ref": "examples/Snapshots_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots/{snapshotName}": {
      "get": {
        "tags": [
          "Snapshots"
        ],
        "operationId": "Snapshots_Get",
        "summary": "Describe a snapshot",
        "description": "Get details of the specified snapshot",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/PoolName"
          },
          {
            "$ref": "#/parameters/VolumeName"
          },
          {
            "$ref": "#/parameters/SnapshotName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/snapshot"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "Snapshots_Get": {
            "$ref": "examples/Snapshots_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Snapshots"
        ],
        "operationId": "Snapshots_Create",
        "summary": "Create a snapshot",
        "description": "Create the specified snapshot within the given volume",
        "parameters": [
          {
            "name": "body",
            "description": "Snapshot object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/snapshot"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/PoolName"
          },
          {
            "$ref": "#/parameters/VolumeName"
          },
          {
            "$ref": "#/parameters/SnapshotName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Snapshot created",
            "schema": {
              "$ref": "#/definitions/snapshot"
            }
          },
          "202": {
            "description": "Accepted -- Create request accepted; operation will complete asynchronously"
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Snapshots_Create": {
            "$ref": "examples/Snapshots_Create.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Snapshots"
        ],
        "operationId": "Snapshots_Update",
        "summary": "Update a snapshot",
        "description": "Patch a snapshot",
        "parameters": [
          {
            "name": "body",
            "description": "Snapshot object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/snapshotPatch"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/PoolName"
          },
          {
            "$ref": "#/parameters/VolumeName"
          },
          {
            "$ref": "#/parameters/SnapshotName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/snapshot"
            }
          },
          "202": {
            "description": "Accepted -- Update request accepted; operation will complete asynchronously"
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Snapshots_Update": {
            "$ref": "examples/Snapshots_Update.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Snapshots"
        ],
        "operationId": "Snapshots_Delete",
        "summary": "Delete a snapshot",
        "description": "Delete snapshot",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/PoolName"
          },
          {
            "$ref": "#/parameters/VolumeName"
          },
          {
            "$ref": "#/parameters/SnapshotName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted -- Create, update or delete request accepted; operation will complete asynchronously"
          },
          "204": {
            "description": "NoContent -- Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Snapshots_Delete": {
            "$ref": "examples/Snapshots_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies": {
      "parameters": [
        {
          "$ref": "#/parameters/SubscriptionId"
        },
        {
          "$ref": "#/parameters/ResourceGroup"
        },
        {
          "$ref": "#/parameters/AccountName"
        },
        {
          "$ref": "#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "tags": [
          "Snapshot Policy"
        ],
        "operationId": "SnapshotPolicies_List",
        "description": "List snapshot policy",
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/snapshotPoliciesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "SnapshotPolicies_List": {
            "$ref": "examples/SnapshotPolicies_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies/{snapshotPolicyName}": {
      "parameters": [
        {
          "$ref": "#/parameters/SubscriptionId"
        },
        {
          "$ref": "#/parameters/ResourceGroup"
        },
        {
          "$ref": "#/parameters/AccountName"
        },
        {
          "$ref": "#/parameters/SnapshotPolicyName"
        },
        {
          "$ref": "#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "tags": [
          "Snapshot Policy"
        ],
        "operationId": "SnapshotPolicies_Get",
        "description": "Get a snapshot Policy",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/snapshotPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "SnapshotPolicies_Get": {
            "$ref": "examples/SnapshotPolicies_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Snapshot Policy"
        ],
        "operationId": "SnapshotPolicies_Create",
        "description": "Create a snapshot policy",
        "parameters": [
          {
            "name": "body",
            "description": "Snapshot policy object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/snapshotPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - snapshot Policy updated",
            "schema": {
              "$ref": "#/definitions/snapshotPolicy"
            }
          },
          "201": {
            "description": "Snapshot Policy created",
            "schema": {
              "$ref": "#/definitions/snapshotPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-long-running-operation": false,
        "x-ms-examples": {
          "SnapshotPolicies_Create": {
            "$ref": "examples/SnapshotPolicies_Create.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Snapshot Policy"
        ],
        "operationId": "SnapshotPolicies_Update",
        "description": "Patch a snapshot policy",
        "parameters": [
          {
            "name": "body",
            "description": "Snapshot policy object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/snapshotPolicyPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/snapshotPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "SnapshotPolicies_Update": {
            "$ref": "examples/SnapshotPolicies_Update.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Snapshot Policy"
        ],
        "operationId": "SnapshotPolicies_Delete",
        "description": "Delete snapshot policy",
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted -- Create or update request accepted; operation will complete asynchronously"
          },
          "204": {
            "description": "NoContent -- Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "SnapshotPolicies_Delete": {
            "$ref": "examples/SnapshotPolicies_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies/{snapshotPolicyName}/listVolumes": {
      "get": {
        "tags": [
          "Snapshot Policy List Volumes"
        ],
        "summary": "Get volumes for snapshot policy",
        "description": "Get volumes associated with snapshot policy",
        "operationId": "SnapshotPolicies_ListVolumes",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/SnapshotPolicyName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/snapshotPolicyVolumeList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "SnapshotPolicies_ListVolumes": {
            "$ref": "examples/SnapshotPolicies_ListVolumes.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/accountBackups": {
      "get": {
        "tags": [
          "Backups"
        ],
        "summary": "List Backups for a Netapp Account",
        "description": "List all Backups for a Netapp Account",
        "operationId": "AccountBackups_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/backupsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "AccountBackups_List": {
            "$ref": "examples/Backups_Account_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/accountBackups/{backupName}": {
      "get": {
        "tags": [
          "Backups"
        ],
        "summary": "Get Backup for a Netapp Account",
        "description": "Get Backup for a Netapp Account",
        "operationId": "AccountBackups_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/BackupName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/backup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "AccountBackups_Get": {
            "$ref": "examples/Backups_Account_Get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Backups"
        ],
        "summary": "Delete Backup for a Netapp Account",
        "description": "Delete Backup for a Netapp Account",
        "operationId": "AccountBackups_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/BackupName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted -- Create or update request accepted; operation will complete asynchronously"
          },
          "204": {
            "description": "NoContent -- Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "AccountBackups_Delete": {
            "$ref": "examples/Backups_Account_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/backups": {
      "get": {
        "tags": [
          "Backups"
        ],
        "summary": "List Backups",
        "description": "List all backups for a volume",
        "operationId": "Backups_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/PoolName"
          },
          {
            "$ref": "#/parameters/VolumeName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/backupsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "Backups_List": {
            "$ref": "examples/Backups_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/backups/{backupName}": {
      "get": {
        "tags": [
          "Backups"
        ],
        "summary": "Get a backup",
        "description": "Get a particular backup of the volume",
        "operationId": "Backups_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/PoolName"
          },
          {
            "$ref": "#/parameters/VolumeName"
          },
          {
            "$ref": "#/parameters/BackupName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/backup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "Backups_Get": {
            "$ref": "examples/Backups_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Backups"
        ],
        "summary": "Create a backup",
        "description": "Create a backup for the volume",
        "operationId": "Backups_Create",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/PoolName"
          },
          {
            "$ref": "#/parameters/VolumeName"
          },
          {
            "$ref": "#/parameters/BackupName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "body",
            "description": "Backup object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/backup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK created",
            "schema": {
              "$ref": "#/definitions/backup"
            }
          },
          "201": {
            "description": "Backup created",
            "schema": {
              "$ref": "#/definitions/backup"
            }
          },
          "202": {
            "description": "Accepted -- Create request accepted; operation will complete asynchronously"
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Backups_Create": {
            "$ref": "examples/Backups_Create.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Backups"
        ],
        "summary": "Patch a backup",
        "description": "Patch a backup for the volume",
        "operationId": "Backups_Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/PoolName"
          },
          {
            "$ref": "#/parameters/VolumeName"
          },
          {
            "$ref": "#/parameters/BackupName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "body",
            "description": "Backup object supplied in the body of the operation.",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/backupPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/backup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "Backups_Update": {
            "$ref": "examples/Backups_Update.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Backups"
        ],
        "summary": "Delete backup",
        "description": "Delete a backup of the volume",
        "operationId": "Backups_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/PoolName"
          },
          {
            "$ref": "#/parameters/VolumeName"
          },
          {
            "$ref": "#/parameters/BackupName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted -- Create or update request accepted; operation will complete asynchronously"
          },
          "204": {
            "description": "NoContent -- Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Backups_Delete": {
            "$ref": "examples/Backups_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/backupPolicies": {
      "get": {
        "tags": [
          "Backup Policy"
        ],
        "summary": "List backup policies",
        "description": "List backup policies for Netapp Account",
        "operationId": "BackupPolicies_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/backupPoliciesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "Backups_List": {
            "$ref": "examples/BackupPolicies_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/backupPolicies/{backupPolicyName}": {
      "get": {
        "tags": [
          "Backup Policy"
        ],
        "summary": "Get a backup Policy",
        "description": "Get a particular backup Policy",
        "operationId": "BackupPolicies_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/BackupPolicyName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/backupPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "Backups_Get": {
            "$ref": "examples/BackupPolicies_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Backup Policy"
        ],
        "summary": "Create a backup policy",
        "description": "Create a backup policy for Netapp Account",
        "operationId": "BackupPolicies_Create",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/BackupPolicyName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "body",
            "description": "Backup policy object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/backupPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Backup Policy created",
            "schema": {
              "$ref": "#/definitions/backupPolicy"
            }
          },
          "201": {
            "description": "Backup created",
            "schema": {
              "$ref": "#/definitions/backupPolicy"
            }
          },
          "202": {
            "description": "Accepted -- Create request accepted; operation will complete asynchronously"
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "BackupPolicies_Create": {
            "$ref": "examples/BackupPolicies_Create.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Backup Policy"
        ],
        "summary": "Patch a backup policy",
        "description": "Patch a backup policy for Netapp Account",
        "operationId": "BackupPolicies_Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/BackupPolicyName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "body",
            "description": "Backup policy object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/backupPolicyPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/backupPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "BackupPolicies_Update": {
            "$ref": "examples/BackupPolicies_Update.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Backup Policy"
        ],
        "summary": "Delete a backup policy",
        "description": "Delete backup policy",
        "operationId": "BackupPolicies_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/BackupPolicyName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted -- Create or update request accepted; operation will complete asynchronously"
          },
          "204": {
            "description": "NoContent -- Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Backups_Delete": {
            "$ref": "examples/BackupPolicies_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/vaults": {
      "get": {
        "tags": [
          "Vaults"
        ],
        "summary": "List vaults",
        "description": "List vaults for a Netapp Account",
        "operationId": "Vaults_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroup"
          },
          {
            "$ref": "#/parameters/AccountName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/vaultList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "Vaults_List": {
            "$ref": "examples/Vaults_List.json"
          }
        }
      }
    }
  },
  "definitions": {
    "OperationListResult": {
      "description": "Result of the request to list Cloud Volume operations. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "description": "List of Storage operations supported by the Storage resource provider."
        }
      }
    },
    "Operation": {
      "description": "Microsoft.NetApp REST API operation definition.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}",
          "type": "string"
        },
        "display": {
          "description": "Display metadata associated with the operation.",
          "properties": {
            "provider": {
              "description": "Service provider: Microsoft NetApp.",
              "type": "string"
            },
            "resource": {
              "description": "Resource on which the operation is performed etc.",
              "type": "string"
            },
            "operation": {
              "description": "Type of operation: get, read, delete, etc.",
              "type": "string"
            },
            "description": {
              "description": "Operation description.",
              "type": "string"
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The origin of operations."
        },
        "properties": {
          "$ref": "#/definitions/OperationProperties",
          "description": "Properties of operation, include metric specifications.",
          "x-ms-client-flatten": true
        }
      }
    },
    "OperationProperties": {
      "description": "Properties of operation, include metric specifications.",
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/ServiceSpecification",
          "description": "One property of operation, include metric specifications."
        }
      }
    },
    "ServiceSpecification": {
      "description": "One property of operation, include metric specifications.",
      "properties": {
        "metricSpecifications": {
          "description": "Metric specifications of operation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricSpecification"
          }
        }
      }
    },
    "MetricSpecification": {
      "description": "Metric specification of operation.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of metric specification."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of metric specification."
        },
        "displayDescription": {
          "type": "string",
          "description": "Display description of metric specification."
        },
        "unit": {
          "type": "string",
          "description": "Unit could be Bytes or Count."
        },
        "dimensions": {
          "description": "Dimensions of blobs, including blob type and access tier.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dimension"
          }
        },
        "aggregationType": {
          "type": "string",
          "description": "Aggregation type could be Average."
        },
        "fillGapWithZero": {
          "type": "boolean",
          "description": "The property to decide fill gap with zero or not."
        },
        "category": {
          "type": "string",
          "description": "The category this metric specification belong to, could be Capacity."
        },
        "resourceIdDimensionNameOverride": {
          "type": "string",
          "description": "Account Resource Id."
        }
      }
    },
    "Dimension": {
      "description": "Dimension of blobs, possibly be blob type or access tier.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Display name of dimension."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of dimension."
        }
      }
    },
    "CheckAvailabilityResponse": {
      "description": "Information regarding availability of a resource.",
      "type": "object",
      "properties": {
        "isAvailable": {
          "description": "<code>true</code> indicates name is valid and available. <code>false</code> indicates the name is invalid, unavailable, or both.",
          "type": "boolean"
        },
        "reason": {
          "description": "<code>Invalid</code> indicates the name provided does not match Azure App Service naming requirements. <code>AlreadyExists</code> indicates that the name is already in use and is therefore unavailable.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InAvailabilityReasonType",
            "modelAsString": true
          }
        },
        "message": {
          "description": "If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming requirements so that the user can select a valid name. If reason == AlreadyExists, explain that resource name is already in use, and direct them to select a different name.",
          "type": "string"
        }
      }
    },
    "ResourceNameAvailabilityRequest": {
      "description": "Resource name availability request content.",
      "required": [
        "name",
        "type",
        "resourceGroup"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name to verify.",
          "type": "string"
        },
        "type": {
          "description": "Resource type used for verification.",
          "enum": [
            "Microsoft.NetApp/netAppAccounts",
            "Microsoft.NetApp/netAppAccounts/capacityPools",
            "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",
            "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CheckNameResourceTypes",
            "modelAsString": true
          }
        },
        "resourceGroup": {
          "description": "Resource group name.",
          "type": "string"
        }
      }
    },
    "QuotaAvailabilityRequest": {
      "description": "Quota availability request content.",
      "required": [
        "name",
        "type",
        "resourceGroup"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the resource to verify.",
          "type": "string"
        },
        "type": {
          "description": "Resource type used for verification.",
          "enum": [
            "Microsoft.NetApp/netAppAccounts",
            "Microsoft.NetApp/netAppAccounts/capacityPools",
            "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",
            "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CheckQuotaNameResourceTypes",
            "modelAsString": true
          }
        },
        "resourceGroup": {
          "description": "Resource group name.",
          "type": "string"
        }
      }
    },
    "netAppAccountList": {
      "description": "List of NetApp account resources",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "Multiple NetApp accounts",
          "items": {
            "$ref": "#/definitions/netAppAccount"
          }
        }
      }
    },
    "netAppAccount": {
      "description": "NetApp account resource",
      "type": "object",
      "x-ms-azure-resource": true,
      "required": [
        "location"
      ],
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "description": "NetApp Account properties",
          "$ref": "#/definitions/accountProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "netAppAccountPatch": {
      "description": "NetApp account patch resource",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "description": "NetApp Account properties",
          "$ref": "#/definitions/accountProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "accountProperties": {
      "description": "NetApp account properties",
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Azure lifecycle management"
        },
        "activeDirectories": {
          "description": "Active Directories",
          "type": "array",
          "items": {
            "$ref": "#/definitions/activeDirectory"
          }
        }
      }
    },
    "activeDirectory": {
      "description": "Active Directory",
      "type": "object",
      "properties": {
        "activeDirectoryId": {
          "type": "string",
          "default": "guid id",
          "description": "Id of the Active Directory"
        },
        "username": {
          "type": "string",
          "description": "Username of Active Directory domain administrator"
        },
        "password": {
          "type": "string",
          "description": "Plain text password of Active Directory domain administrator, value is masked in the response"
        },
        "domain": {
          "type": "string",
          "description": "Name of the Active Directory domain"
        },
        "dns": {
          "type": "string",
          "description": "Comma separated list of DNS server IP addresses (IPv4 only) for the Active Directory domain",
          "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$",
          "example": "101.102.103.104,101.102.103.105"
        },
        "status": {
          "type": "string",
          "description": "Status of the Active Directory",
          "readOnly": true,
          "enum": [
            "Created",
            "Updating",
            "InUse",
            "Deleted",
            "Error"
          ],
          "x-ms-enum": {
            "name": "ActiveDirectoryStatus",
            "modelAsString": true,
            "values": [
              {
                "value": "Created",
                "description": "Active Directory created but not in use"
              },
              {
                "value": "InUse",
                "description": "Active Directory in use by SMB Volume"
              },
              {
                "value": "Deleted",
                "description": "Active Directory Deleted"
              },
              {
                "value": "Error",
                "description": "Error with the Active Directory"
              },
              {
                "value": "Updating",
                "description": "Active Directory Updating"
              }
            ]
          }
        },
        "statusDetails": {
          "type": "string",
          "description": "Any details in regards to the Status of the Active Directory",
          "readOnly": true
        },
        "smbServerName": {
          "type": "string",
          "description": "NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes"
        },
        "organizationalUnit": {
          "type": "string",
          "default": "CN=Computers",
          "description": "The Organizational Unit (OU) within the Windows Active Directory"
        },
        "site": {
          "type": "string",
          "description": "The Active Directory site the service will limit Domain Controller discovery to"
        },
        "backupOperators": {
          "description": "Users to be added to the Built-in Backup Operator active directory group. A list of unique usernames without domain specifier",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "example": [
              "user1",
              "user2"
            ]
          }
        },
        "kdcIP": {
          "type": "string",
          "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$",
          "description": "kdc server IP addresses for the active directory machine. This optional parameter is used only while creating kerberos volume.",
          "example": "101.102.103.104"
        },
        "adName": {
          "type": "string",
          "maxLength": 64,
          "minLength": 1,
          "description": "Name of the active directory machine. This optional parameter is used only while creating kerberos volume",
          "example": "ADServerName"
        },
        "serverRootCACertificate": {
          "type": "string",
          "maxLength": 10240,
          "minLength": 1,
          "description": "When LDAP over SSL/TLS is enabled, the LDAP client is required to have base64 encoded Active Directory Certificate Service's self-signed root CA certificate, this optional parameter is used only for dual protocol with LDAP user-mapping volumes.",
          "example": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuVENDQW9XZ0F3SUJBZ0lRR3FXdnRxeHBvSTFJV3Z4VGdJbElWREFOQmdrcWhraUc5dzBCQVFzRkFEQlYKTVJNd0VRWUtDWkltaVpQeUxHUUJHUllEWTI5dE1SY3dGUVlLQ1pJbWlaUHlMR1FCR1JZSGFHRnlhV3R5WWpFbApNQ01HQTFVRUF4TWNhR0Z5YVd0eVlpMVhTVTR0TWtKUFZrRkZTMEkwTkVJdFEwRXRNakFlRncweU1EQTFNRFV3Ck56TTVORGxhRncweU1EQTFNRFl3TnpRNU5EaGFNRlV4RXpBUkJnb0praWFKay9Jc1pBRVpGZ05qYjIweEZ6QVYKQmdvSmtpYUprL0lzWkFFWkZnZG9ZWEpwYTNKaU1TVXdJd1lEVlFRREV4eG9ZWEpwYTNKaUxWZEpUaTB5UWs5VwpRVVZMUWpRMFFpMURRUzB5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFqMHByCnhaaXpNaDBqYnRwN1ZOc0JrRVJ2MVpZT0MzMEtqaGRWdEExRm1MeFM2cXlycmpMZUdXOXRSd2ZnUkR0eVBodTIKZVJTcVpTUjF6Z1hZR0s0Nys3Y3F0YnB2UElOektCb0dOWERIVTNxVWlleXJWSjFDVzRKNjJodUdrbUV1VVVkMApKMXBxNTVxbjk1SmRUbWh1dmZlTUxxeHB5c01nbGVnY281ZFhoN0hsQkhwaTNKMFN4ZnhVWmxKMVZiOFJZVEZhCkJiMGFlTVZaRzRKeVREaktiMlR1TmFXOG1aUE5vOFBMRDRocjdndFNZUEQvQ1dVVGV5QlpoZC9LTzNPczlWVEIKYmpLUGtWd0J2WEs2SlFMSGprNFBHS3VYZDhaWVFyajBtOWNIZDNmcWNYTXlQUnQ2TlJ4ak0yMTUxckFzSkVhNgpWZC9ta056akpXalBrT2VZUVFJREFRQUJvMmt3WnpBVEJna3JCZ0VFQVlJM0ZBSUVCaDRFQUVNQVFUQU9CZ05WCkhROEJBZjhFQkFNQ0FZWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVDVEc2ODJSay9kMysKWGtHa0VMakRFMjI4ZjNnd0VBWUpLd1lCQkFHQ054VUJCQU1DQVFBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQgpBR1RjTTNnWExIU05wS014RHEvUFpZbWZCMmNlN3VhMmxxbXpzZSt4QmthSTE0WXdzZE5ZQjZBVTNFWDM3QWpZCjd3bm9xQzY1N0U2RVhTODVDckoyNXJNTHo4OEtONGI3cUg5RUowSS9XVHg5YTdUT0ZENENWQThuL0xwNGh1Ym4KNlBFalY5NFlZWXBXTG1hTkkvbGFReWsxSHVJbDFSTCttVDFnSWQ4ZWZXZ1UvNmlVVEw3eGMrdjkyNHBuTHhISwpOSnNTV3c0NFk5a0R5SU9KOXFjWUlBN1lhTkxPZTRjSysvQlRvdDh0dVVKT1hHLzdBRmtxR2EyQVA4MmFZOStKCnkwSmU2OG5nTHJ1dVU4VHpneVpqdkFHcTRrVEVOdWFoaFdHVC9KWkEzOXhSNUV4MmNMUUplcE5NdnlZbUZ3Z1UKME8zYlA0OWNBVFVCMXoyQ3Y5aTRQbVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
        },
        "aesEncryption": {
          "type": "boolean",
          "description": "If enabled, AES encryption will be enabled for SMB communication."
        },
        "ldapSigning": {
          "type": "boolean",
          "description": "Specifies whether or not the LDAP traffic needs to be signed."
        },
        "securityOperators": {
          "type": "array",
          "description": "Domain Users in the Active directory to be given SeSecurityPrivilege privilege (Needed for SMB Continuously available shares for SQL). A list of unique usernames without domain specifier",
          "items": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "example": [
              "user1",
              "user2"
            ]
          }
        }
      }
    },
    "capacityPoolList": {
      "description": "List of capacity pool resources",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of Capacity pools",
          "type": "array",
          "items": {
            "$ref": "#/definitions/capacityPool"
          }
        }
      }
    },
    "capacityPool": {
      "description": "Capacity pool resource",
      "type": "object",
      "x-ms-azure-resource": true,
      "required": [
        "location",
        "properties"
      ],
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "description": "Capacity pool properties",
          "$ref": "#/definitions/poolProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "poolProperties": {
      "description": "Pool properties",
      "type": "object",
      "required": [
        "size",
        "serviceLevel"
      ],
      "properties": {
        "poolId": {
          "title": "poolId",
          "type": "string",
          "readOnly": true,
          "description": "UUID v4 used to identify the Pool",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "maxLength": 36,
          "minLength": 36,
          "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
        },
        "size": {
          "title": "size",
          "type": "integer",
          "format": "int64",
          "description": "Provisioned size of the pool (in bytes). Allowed values are in 4TiB chunks (value must be multiply of 4398046511104).",
          "minimum": 4398046511104,
          "maximum": 549755813888000
        },
        "serviceLevel": {
          "title": "serviceLevel",
          "type": "string",
          "description": "The service level of the file system",
          "enum": [
            "Standard",
            "Premium",
            "Ultra"
          ],
          "x-ms-enum": {
            "name": "ServiceLevel",
            "modelAsString": true,
            "values": [
              {
                "value": "Standard",
                "description": "Standard service level"
              },
              {
                "value": "Premium",
                "description": "Premium service level"
              },
              {
                "value": "Ultra",
                "description": "Ultra service level"
              }
            ]
          },
          "example": "Ultra",
          "default": "Premium"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Azure lifecycle management"
        },
        "totalThroughputMibps": {
          "type": "number",
          "description": "Total throughput of pool in Mibps",
          "example": 164.221,
          "readOnly": true
        },
        "utilizedThroughputMibps": {
          "type": "number",
          "description": "Utilized throughput of pool in Mibps",
          "example": 164.221,
          "readOnly": true
        },
        "qosType": {
          "title": "qosType",
          "type": "string",
          "description": "The qos type of the pool",
          "enum": [
            "Auto",
            "Manual"
          ],
          "x-ms-enum": {
            "name": "qosType",
            "modelAsString": true,
            "values": [
              {
                "value": "Auto",
                "description": "qos type Auto"
              },
              {
                "value": "Manual",
                "description": "qos type Manual"
              }
            ]
          },
          "example": "Manual",
          "default": "Auto"
        }
      }
    },
    "capacityPoolPatch": {
      "description": "Capacity pool patch resource",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "description": "Capacity pool properties",
          "$ref": "#/definitions/poolPatchProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "poolPatchProperties": {
      "description": "Patchable pool properties",
      "type": "object",
      "properties": {
        "size": {
          "title": "size",
          "type": "integer",
          "format": "int64",
          "description": "Provisioned size of the pool (in bytes). Allowed values are in 4TiB chunks (value must be multiply of 4398046511104).",
          "minimum": 4398046511104,
          "maximum": 549755813888000,
          "default": 4398046511104
        },
        "qosType": {
          "title": "qosType",
          "type": "string",
          "description": "The qos type of the pool",
          "enum": [
            "Auto",
            "Manual"
          ],
          "x-ms-enum": {
            "name": "qosType",
            "modelAsString": true,
            "values": [
              {
                "value": "Auto",
                "description": "qos type Auto"
              },
              {
                "value": "Manual",
                "description": "qos type Manual"
              }
            ]
          },
          "example": "Manual",
          "default": "Auto"
        }
      }
    },
    "volumeList": {
      "description": "List of volume resources",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of volumes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/volume"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      }
    },
    "volume": {
      "description": "Volume resource",
      "type": "object",
      "x-ms-azure-resource": true,
      "required": [
        "location",
        "properties"
      ],
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "description": "Volume properties",
          "$ref": "#/definitions/volumeProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "resourceTags": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "description": "Tags are a list of key-value pairs that describe the resource"
    },
    "volumeProperties": {
      "description": "Volume properties",
      "type": "object",
      "required": [
        "creationToken",
        "usageThreshold",
        "subnetId"
      ],
      "properties": {
        "fileSystemId": {
          "title": "FileSystem ID",
          "type": "string",
          "readOnly": true,
          "description": "Unique FileSystem Identifier.",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "maxLength": 36,
          "minLength": 36,
          "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
        },
        "creationToken": {
          "title": "Creation Token or File Path",
          "type": "string",
          "description": "A unique file path for the volume. Used when creating mount targets",
          "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$",
          "minLength": 1,
          "maxLength": 80,
          "example": "some-amazing-filepath"
        },
        "serviceLevel": {
          "title": "serviceLevel",
          "type": "string",
          "description": "The service level of the file system",
          "enum": [
            "Standard",
            "Premium",
            "Ultra"
          ],
          "x-ms-enum": {
            "name": "ServiceLevel",
            "modelAsString": true,
            "values": [
              {
                "value": "Standard",
                "description": "Standard service level"
              },
              {
                "value": "Premium",
                "description": "Premium service level"
              },
              {
                "value": "Ultra",
                "description": "Ultra service level"
              }
            ]
          },
          "example": "Ultra",
          "default": "Premium"
        },
        "usageThreshold": {
          "title": "usageThreshold",
          "type": "integer",
          "format": "int64",
          "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.",
          "minimum": 107374182400,
          "maximum": 109951162777600,
          "default": 107374182400,
          "example": 107374182400
        },
        "exportPolicy": {
          "title": "exportPolicy",
          "description": "Set of export policy rules",
          "properties": {
            "rules": {
              "title": "Export policy rule",
              "description": "Export policy rule",
              "type": "array",
              "items": {
                "$ref": "#/definitions/exportPolicyRule"
              }
            }
          }
        },
        "protocolTypes": {
          "title": "protocolTypes",
          "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "NFSv4.1"
          ]
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Azure lifecycle management"
        },
        "snapshotId": {
          "title": "Snapshot ID",
          "type": "string",
          "x-nullable": true,
          "description": "UUID v4 or resource identifier used to identify the Snapshot.",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
          "maxLength": 36,
          "minLength": 36,
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "backupId": {
          "title": "Backup ID",
          "type": "string",
          "description": "UUID v4 or resource identifier used to identify the Backup.",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
          "maxLength": 36,
          "minLength": 36,
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "baremetalTenantId": {
          "title": "Baremetal Tenant ID",
          "type": "string",
          "readOnly": true,
          "description": "Unique Baremetal Tenant Identifier.",
          "example": "9560acf5-4e3a-12e7-9bdb-02007cca7779"
        },
        "subnetId": {
          "type": "string",
          "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"
        },
        "mountTargets": {
          "title": "mountTargets",
          "type": "array",
          "readOnly": true,
          "description": "List of mount targets",
          "items": {
            "$ref": "#/definitions/mountTargetProperties"
          }
        },
        "volumeType": {
          "type": "string",
          "description": "What type of volume is this",
          "example": "DataProtection"
        },
        "dataProtection": {
          "title": "DataProtection",
          "description": "DataProtection type volumes include an object containing details of the replication",
          "properties": {
            "backup": {
              "title": "Backup",
              "description": "Backup Properties",
              "type": "object",
              "$ref": "#/definitions/volumeBackupProperties"
            },
            "replication": {
              "title": "Replication",
              "description": "Replication properties",
              "type": "object",
              "$ref": "#/definitions/replicationObject"
            },
            "snapshot": {
              "title": "Snapshot",
              "description": "Snapshot properties.",
              "$ref": "#/definitions/volumeSnapshotProperties"
            }
          }
        },
        "isRestoring": {
          "type": "boolean",
          "description": "Restoring"
        },
        "snapshotDirectoryVisible": {
          "type": "boolean",
          "default": true,
          "description": "If enabled (true) the volume will contain a read-only .snapshot directory which provides access to each of the volume's snapshots (default to true)."
        },
        "kerberosEnabled": {
          "type": "boolean",
          "description": "Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later",
          "example": false,
          "default": false
        },
        "securityStyle": {
          "type": "string",
          "description": "The security style of volume, default unix, ntfs for dual protocol or CIFS protocol",
          "default": "unix",
          "enum": [
            "ntfs",
            "unix"
          ],
          "x-ms-enum": {
            "name": "SecurityStyle",
            "modelAsString": true
          }
        },
        "smbEncryption": {
          "type": "boolean",
          "description": "Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later",
          "example": false,
          "default": false
        },
        "smbContinuouslyAvailable": {
          "type": "boolean",
          "description": "Enables continuously available share property for smb volume. Only applicable for SMB volume",
          "example": false,
          "default": false
        },
        "throughputMibps": {
          "title": "Maximum throughput in Mibps that can be achieved by this volume",
          "type": "number",
          "default": 0.0,
          "example": 128.22,
          "maximum": 4500,
          "minimum": 0,
          "multipleOf": 0.001
        }
      }
    },
    "exportPolicyRule": {
      "description": "Volume Export Policy Rule",
      "type": "object",
      "properties": {
        "ruleIndex": {
          "type": "integer",
          "description": "Order index",
          "format": "int32"
        },
        "unixReadOnly": {
          "type": "boolean",
          "description": "Read only access"
        },
        "unixReadWrite": {
          "type": "boolean",
          "description": "Read and write access"
        },
        "kerberos5ReadOnly": {
          "type": "boolean",
          "description": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later",
          "example": false,
          "default": false
        },
        "kerberos5ReadWrite": {
          "type": "boolean",
          "description": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later",
          "example": true,
          "default": false
        },
        "kerberos5iReadOnly": {
          "type": "boolean",
          "description": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later",
          "example": false,
          "default": false
        },
        "kerberos5iReadWrite": {
          "type": "boolean",
          "description": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later",
          "example": true,
          "default": false
        },
        "kerberos5pReadOnly": {
          "type": "boolean",
          "description": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later",
          "example": false,
          "default": false
        },
        "kerberos5pReadWrite": {
          "type": "boolean",
          "description": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later",
          "example": true,
          "default": false
        },
        "cifs": {
          "type": "boolean",
          "default": false,
          "description": "Allows CIFS protocol"
        },
        "nfsv3": {
          "type": "boolean",
          "description": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes"
        },
        "nfsv41": {
          "type": "boolean",
          "description": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"
        },
        "allowedClients": {
          "type": "string",
          "description": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"
        },
        "hasRootAccess": {
          "type": "boolean",
          "description": "Has root access to volume",
          "example": true,
          "default": true
        }
      }
    },
    "volumeBackupProperties": {
      "description": "Volume Backup Properties",
      "type": "object",
      "properties": {
        "backupPolicyId": {
          "type": "string",
          "description": "Backup Policy Resource ID"
        },
        "policyEnforced": {
          "type": "boolean",
          "description": "Policy Enforced"
        },
        "vaultId": {
          "type": "string",
          "description": "Vault Resource ID"
        },
        "backupEnabled": {
          "type": "boolean",
          "description": "Backup Enabled"
        }
      }
    },
    "replicationObject": {
      "description": "Replication properties",
      "type": "object",
      "required": [
        "replicationSchedule",
        "remoteVolumeResourceId"
      ],
      "properties": {
        "replicationId": {
          "type": "string",
          "description": "Id"
        },
        "endpointType": {
          "type": "string",
          "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
          "enum": [
            "src",
            "dst"
          ],
          "x-ms-enum": {
            "name": "EndpointType",
            "modelAsString": true
          }
        },
        "replicationSchedule": {
          "type": "string",
          "description": "Schedule",
          "enum": [
            "_10minutely",
            "hourly",
            "daily"
          ],
          "x-ms-enum": {
            "name": "ReplicationSchedule",
            "modelAsString": true
          }
        },
        "remoteVolumeResourceId": {
          "type": "string",
          "description": "The resource ID of the remote volume."
        },
        "remoteVolumeRegion": {
          "type": "string",
          "description": "The remote region for the other end of the Volume Replication."
        }
      }
    },
    "volumeSnapshotProperties": {
      "description": "Volume Snapshot Properties",
      "type": "object",
      "properties": {
        "snapshotPolicyId": {
          "type": "string",
          "description": "Snapshot Policy ResourceId"
        }
      }
    },
    "replicationStatus": {
      "description": "Replication status",
      "type": "object",
      "properties": {
        "healthy": {
          "type": "boolean",
          "description": "Replication health check"
        },
        "relationshipStatus": {
          "type": "string",
          "description": "Status of the mirror relationship",
          "enum": [
            "Idle",
            "Transferring"
          ],
          "x-ms-enum": {
            "name": "RelationshipStatus",
            "modelAsString": true
          }
        },
        "mirrorState": {
          "type": "string",
          "description": "The status of the replication",
          "enum": [
            "Uninitialized",
            "Mirrored",
            "Broken"
          ],
          "x-ms-enum": {
            "name": "MirrorState",
            "modelAsString": true
          }
        },
        "totalProgress": {
          "type": "string",
          "description": "The progress of the replication"
        },
        "errorMessage": {
          "type": "string",
          "description": "Displays error message if the replication is in an error state"
        }
      }
    },
    "volumePatch": {
      "description": "Volume patch resource",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "description": "Patchable volume properties",
          "$ref": "#/definitions/volumePatchProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "volumePatchProperties": {
      "description": "Patchable volume properties",
      "type": "object",
      "properties": {
        "serviceLevel": {
          "title": "serviceLevel",
          "type": "string",
          "description": "The service level of the file system",
          "enum": [
            "Standard",
            "Premium",
            "Ultra"
          ],
          "x-ms-enum": {
            "name": "ServiceLevel",
            "modelAsString": true,
            "values": [
              {
                "value": "Standard",
                "description": "Standard service level"
              },
              {
                "value": "Premium",
                "description": "Premium service level"
              },
              {
                "value": "Ultra",
                "description": "Ultra service level"
              }
            ]
          },
          "example": "Ultra",
          "default": "Premium"
        },
        "usageThreshold": {
          "title": "usageThreshold",
          "type": "integer",
          "format": "int64",
          "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.",
          "minimum": 107374182400,
          "maximum": 109951162777600,
          "default": 107374182400,
          "example": 107374182400
        },
        "exportPolicy": {
          "title": "exportPolicy",
          "description": "Set of export policy rules",
          "properties": {
            "rules": {
              "title": "Export policy rule",
              "description": "Export policy rule",
              "type": "array",
              "items": {
                "$ref": "#/definitions/exportPolicyRule"
              }
            }
          }
        },
        "throughputMibps": {
          "title": "Maximum throughput in Mibps that can be achieved by this volume",
          "type": "number",
          "example": "128.22",
          "maximum": 4500,
          "minimum": 1,
          "multipleOf": 0.001
        },
        "dataProtection": {
          "title": "DataProtection",
          "description": "DataProtection type volumes include an object containing details of the replication",
          "properties": {
            "backup": {
              "title": "Backup",
              "description": "Backup Properties",
              "type": "object",
              "$ref": "#/definitions/volumeBackupProperties"
            }
          }
        }
      }
    },
    "mountTarget": {
      "description": "Mount Target",
      "type": "object",
      "required": [
        "location",
        "properties"
      ],
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "$ref": "#/definitions/resourceTags",
          "x-ms-client-flatten": true
        },
        "properties": {
          "description": "Mount Target Properties",
          "$ref": "#/definitions/mountTargetProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "mountTargetProperties": {
      "description": "Mount target properties",
      "type": "object",
      "required": [
        "fileSystemId"
      ],
      "properties": {
        "mountTargetId": {
          "title": "mountTargetId",
          "type": "string",
          "readOnly": true,
          "description": "UUID v4 used to identify the MountTarget",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "maxLength": 36,
          "minLength": 36,
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "fileSystemId": {
          "title": "fileSystemId",
          "type": "string",
          "description": "UUID v4 used to identify the MountTarget",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "maxLength": 36,
          "minLength": 36,
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "ipAddress": {
          "title": "ipAddress",
          "description": "The mount target's IPv4 address",
          "type": "string",
          "readOnly": true,
          "example": "1.2.3.4"
        },
        "smbServerFqdn": {
          "title": "smbServerFQDN",
          "description": "The SMB server's Fully Qualified Domain Name, FQDN",
          "type": "string",
          "example": "fullyqualified.domainname.com"
        }
      }
    },
    "snapshotsList": {
      "description": "List of Snapshots",
      "type": "object",
      "properties": {
        "value": {
          "description": "A list of Snapshots",
          "type": "array",
          "items": {
            "$ref": "#/definitions/snapshot"
          }
        }
      }
    },
    "snapshot": {
      "description": "Snapshot of a Volume",
      "type": "object",
      "x-ms-azure-resource": true,
      "required": [
        "location"
      ],
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "properties": {
          "description": "Snapshot Properties",
          "$ref": "#/definitions/snapshotProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "snapshotPatch": {
      "description": "Snapshot patch",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {}
    },
    "snapshotProperties": {
      "description": "Snapshot properties",
      "type": "object",
      "properties": {
        "snapshotId": {
          "title": "snapshotId",
          "type": "string",
          "readOnly": true,
          "description": "UUID v4 used to identify the Snapshot",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "maxLength": 36,
          "minLength": 36,
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "created": {
          "title": "name",
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The creation date of the snapshot",
          "example": "2017-08-15 13:23:33"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Azure lifecycle management"
        }
      }
    },
    "snapshotPolicyProperties": {
      "description": "Snapshot policy properties",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Snapshot policy name"
        },
        "hourlySchedule": {
          "title": "hourlySchedule",
          "description": "Schedule for hourly snapshots",
          "type": "object",
          "$ref": "#/definitions/hourlySchedule"
        },
        "dailySchedule": {
          "title": "dailySchedule",
          "description": "Schedule for daily snapshots",
          "type": "object",
          "$ref": "#/definitions/dailySchedule"
        },
        "weeklySchedule": {
          "title": "weeklySchedule",
          "description": "Schedule for weekly snapshots",
          "type": "object",
          "$ref": "#/definitions/weeklySchedule"
        },
        "monthlySchedule": {
          "title": "monthlySchedule",
          "description": "Schedule for monthly snapshots",
          "type": "object",
          "$ref": "#/definitions/monthlySchedule"
        },
        "enabled": {
          "type": "boolean",
          "description": "The property to decide policy is enabled or not"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Azure lifecycle management"
        }
      }
    },
    "snapshotPolicy": {
      "description": "Snapshot policy information",
      "type": "object",
      "x-ms-azure-resource": true,
      "required": [
        "location",
        "properties"
      ],
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "description": "Snapshot policy Properties",
          "$ref": "#/definitions/snapshotPolicyProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "snapshotPoliciesList": {
      "description": "List of Snapshot Policies",
      "type": "object",
      "properties": {
        "value": {
          "description": "A list of snapshot policies",
          "type": "array",
          "items": {
            "$ref": "#/definitions/snapshotPolicy"
          }
        }
      }
    },
    "snapshotPolicyDetails": {
      "description": "Snapshot policy properties",
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "description": "Snapshot policy Properties",
          "$ref": "#/definitions/snapshotPolicyProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "snapshotPolicyPatch": {
      "description": "Snapshot policy Details for create and update",
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "description": "Snapshot Policy properties",
          "$ref": "#/definitions/snapshotPolicyProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "snapshotPolicyVolumeList": {
      "description": "Volumes associated with snapshot policy",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of volumes",
          "type": "array",
          "items": {
            "type": "object",
            "readOnly": true,
            "description": "Associated volume resource Id"
          }
        }
      }
    },
    "hourlySchedule": {
      "description": "Hourly Schedule properties",
      "type": "object",
      "properties": {
        "snapshotsToKeep": {
          "type": "integer",
          "description": "Hourly snapshot count to keep",
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "description": "Indicates which minute snapshot should be taken",
          "example": 30,
          "format": "int32"
        },
        "usedBytes": {
          "type": "integer",
          "description": "Resource size in bytes, current storage usage for the volume in bytes",
          "format": "int64"
        }
      }
    },
    "dailySchedule": {
      "description": "Daily Schedule properties",
      "type": "object",
      "properties": {
        "snapshotsToKeep": {
          "type": "integer",
          "description": "Daily snapshot count to keep",
          "format": "int32"
        },
        "hour": {
          "type": "integer",
          "description": "Indicates which hour in UTC timezone a snapshot should be taken",
          "example": 11,
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "description": "Indicates which minute snapshot should be taken",
          "example": 30,
          "format": "int32"
        },
        "usedBytes": {
          "type": "integer",
          "description": "Resource size in bytes, current storage usage for the volume in bytes",
          "format": "int64"
        }
      }
    },
    "weeklySchedule": {
      "description": "Weekly Schedule properties, make a snapshot every week at a specific day or days",
      "type": "object",
      "properties": {
        "snapshotsToKeep": {
          "type": "integer",
          "description": "Weekly snapshot count to keep",
          "format": "int32"
        },
        "day": {
          "type": "string",
          "description": "Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english",
          "example": "Sunday,Monday"
        },
        "hour": {
          "type": "integer",
          "description": "Indicates which hour in UTC timezone a snapshot should be taken",
          "example": 11,
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "description": "Indicates which minute snapshot should be taken",
          "example": 30,
          "format": "int32"
        },
        "usedBytes": {
          "type": "integer",
          "description": "Resource size in bytes, current storage usage for the volume in bytes",
          "format": "int64"
        }
      }
    },
    "monthlySchedule": {
      "description": "Monthly Schedule properties",
      "type": "object",
      "properties": {
        "snapshotsToKeep": {
          "type": "integer",
          "description": "Monthly snapshot count to keep",
          "format": "int32"
        },
        "daysOfMonth": {
          "type": "string",
          "description": "Indicates which days of the month snapshot should be taken. A comma delimited string.",
          "example": "1,11,21"
        },
        "hour": {
          "type": "integer",
          "description": "Indicates which hour in UTC timezone a snapshot should be taken",
          "example": 11,
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "description": "Indicates which minute snapshot should be taken",
          "example": 30,
          "format": "int32"
        },
        "usedBytes": {
          "type": "integer",
          "description": "Resource size in bytes, current storage usage for the volume in bytes",
          "format": "int64"
        }
      }
    },
    "volumeRevert": {
      "description": "revert a volume to the snapshot",
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string",
          "description": "Resource id of the snapshot"
        }
      }
    },
    "authorizeRequest": {
      "description": "Authorize request",
      "type": "object",
      "properties": {
        "remoteVolumeResourceId": {
          "type": "string",
          "description": "Resource id of the remote volume"
        }
      }
    },
    "breakReplicationRequest": {
      "description": "Break replication request",
      "type": "object",
      "properties": {
        "forceBreakReplication": {
          "type": "boolean",
          "description": "If replication is in status transferring and you want to force break the replication, set to true"
        }
      }
    },
    "poolChangeRequest": {
      "description": "Pool change request",
      "type": "object",
      "required": [
        "newPoolResourceId"
      ],
      "properties": {
        "newPoolResourceId": {
          "type": "string",
          "description": "Resource id of the pool to move volume to"
        }
      }
    },
    "backupsList": {
      "description": "List of Backups",
      "type": "object",
      "properties": {
        "value": {
          "description": "A list of Backups",
          "type": "array",
          "items": {
            "$ref": "#/definitions/backup"
          }
        }
      }
    },
    "backup": {
      "description": "Backup of a Volume",
      "type": "object",
      "x-ms-azure-resource": true,
      "required": [
        "location",
        "properties"
      ],
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "properties": {
          "description": "Backup Properties",
          "$ref": "#/definitions/backupProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "backupPatch": {
      "description": "Backup patch",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "tags": {
          "description": "Resource tags",
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "description": "Backup Properties",
          "$ref": "#/definitions/backupProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "backupProperties": {
      "description": "Backup properties",
      "type": "object",
      "properties": {
        "backupId": {
          "title": "backupId",
          "type": "string",
          "readOnly": true,
          "description": "UUID v4 used to identify the Backup",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "maxLength": 36,
          "minLength": 36,
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "creationDate": {
          "title": "name",
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The creation date of the backup",
          "example": "2017-08-15 13:23:33"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Azure lifecycle management"
        },
        "size": {
          "type": "integer",
          "readOnly": true,
          "description": "Size of backup",
          "format": "int64"
        },
        "label": {
          "type": "string",
          "description": "Label for backup"
        },
        "backupType": {
          "type": "string",
          "readOnly": true,
          "description": "Type of backup adhoc or scheduled"
        }
      }
    },
    "backupPolicyProperties": {
      "description": "Backup policy properties",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Name of backup policy"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Azure lifecycle management"
        },
        "dailyBackupsToKeep": {
          "type": "integer",
          "description": "Daily backups count to keep",
          "format": "int32"
        },
        "weeklyBackupsToKeep": {
          "type": "integer",
          "description": "Weekly backups count to keep",
          "format": "int32"
        },
        "monthlyBackupsToKeep": {
          "type": "integer",
          "description": "Monthly backups count to keep",
          "format": "int32"
        },
        "yearlyBackupsToKeep": {
          "type": "integer",
          "description": "Yearly backups count to keep",
          "format": "int32"
        },
        "volumesAssigned": {
          "type": "integer",
          "description": "Volumes using current backup policy",
          "format": "int32"
        },
        "enabled": {
          "type": "boolean",
          "description": "The property to decide policy is enabled or not"
        },
        "volumeBackups": {
          "description": "A list of volumes assigned to this policy",
          "type": "array",
          "items": {
            "$ref": "#/definitions/volumeBackups"
          }
        }
      }
    },
    "backupPolicy": {
      "description": "Backup policy information",
      "type": "object",
      "x-ms-azure-resource": true,
      "required": [
        "location",
        "properties"
      ],
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "description": "Backup policy Properties",
          "$ref": "#/definitions/backupPolicyProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "backupPoliciesList": {
      "description": "List of Backup Policies",
      "type": "object",
      "properties": {
        "value": {
          "description": "A list of backup policies",
          "type": "array",
          "items": {
            "$ref": "#/definitions/backupPolicy"
          }
        }
      }
    },
    "backupPolicyDetails": {
      "description": "Backup policy properties",
      "x-ms-azure-resource": true,
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "description": "Backup policy Properties",
          "$ref": "#/definitions/backupPolicyProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "backupPolicyPatch": {
      "description": "Backup policy Details for create and update",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "$ref": "#/definitions/resourceTags"
        },
        "properties": {
          "description": "Backup policy Properties",
          "$ref": "#/definitions/backupPolicyProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "volumeBackups": {
      "description": "Volume details using the backup policy",
      "type": "object",
      "readOnly": true,
      "properties": {
        "volumeName": {
          "type": "string",
          "description": "Volume name"
        },
        "backupsCount": {
          "type": "integer",
          "description": "Total count of backups for volume",
          "format": "int32"
        },
        "policyEnabled": {
          "type": "boolean",
          "description": "Policy enabled"
        }
      }
    },
    "vaultList": {
      "description": "List of Vaults",
      "type": "object",
      "properties": {
        "value": {
          "description": "A list of vaults",
          "type": "array",
          "items": {
            "$ref": "#/definitions/vault"
          }
        }
      }
    },
    "vault": {
      "description": "Vault information",
      "type": "object",
      "x-ms-azure-resource": true,
      "required": [
        "location",
        "properties"
      ],
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "properties": {
          "description": "Vault Properties",
          "$ref": "#/definitions/vaultProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "vaultProperties": {
      "description": "Vault properties",
      "type": "object",
      "properties": {
        "vaultName": {
          "type": "string",
          "readOnly": false,
          "description": "Vault Name"
        }
      }
    }
  },
  "parameters": {
    "SubscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "location": {
      "name": "location",
      "description": "The location",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroup": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "AccountName": {
      "name": "accountName",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "The name of the NetApp account",
      "x-ms-parameter-location": "method"
    },
    "PoolName": {
      "name": "poolName",
      "type": "string",
      "in": "path",
      "required": true,
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
      "minLength": 1,
      "maxLength": 64,
      "description": "The name of the capacity pool",
      "x-ms-parameter-location": "method"
    },
    "VolumeName": {
      "name": "volumeName",
      "type": "string",
      "in": "path",
      "required": true,
      "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
      "minLength": 1,
      "maxLength": 64,
      "description": "The name of the volume",
      "x-ms-parameter-location": "method"
    },
    "MountTargetName": {
      "name": "mountTargetName",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "The name of the mount target",
      "x-ms-parameter-location": "method"
    },
    "SnapshotName": {
      "name": "snapshotName",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "The name of the mount target",
      "x-ms-parameter-location": "method"
    },
    "SnapshotPolicyName": {
      "name": "snapshotPolicyName",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "The name of the snapshot policy target",
      "x-ms-parameter-location": "method"
    },
    "BackupName": {
      "name": "backupName",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "The name of the backup",
      "x-ms-parameter-location": "method"
    },
    "BackupPolicyName": {
      "name": "backupPolicyName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Backup policy Name which uniquely identify backup policy.",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "description": "Version of the API to be used with the client request.",
      "in": "query",
      "type": "string",
      "required": true,
      "default": "2020-09-01"
    }
  }
}
