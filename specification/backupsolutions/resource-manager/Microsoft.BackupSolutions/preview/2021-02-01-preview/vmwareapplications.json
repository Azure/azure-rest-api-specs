{
  "swagger": "2.0",
  "info": {
    "title": "ApplicationClient",
    "version": "2021-02-01-preview",
    "description": "ARM VMwareApplications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.BackupSolutions/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "ListOperations",
        "description": "Lists all of the available Microsoft.BackupSolutions REST API operations.",
        "x-ms-examples": {
          "List Solutions operations": {
            "$ref": "./examples/listSolutionsOperations.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BackupSolutions/vmwareApplications/{applicationName}": {
      "get": {
        "tags": [
          "VMwareApplications"
        ],
        "operationId": "VMwareApplications_Get",
        "description": "Gets the managed application.",
        "x-ms-examples": {
          "Get a managed application": {
            "$ref": "./examples/getApplication.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the managed application.",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VMwareApplications"
        ],
        "operationId": "VMwareApplications_Delete",
        "description": "Deletes the managed application.",
        "x-ms-examples": {
          "Delete managed application": {
            "$ref": "./examples/deleteApplication.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "200": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "put": {
        "tags": [
          "VMwareApplications"
        ],
        "operationId": "VMwareApplications_CreateOrUpdate",
        "description": "Creates a new managed application.",
        "x-ms-examples": {
          "Create or update managed application": {
            "$ref": "./examples/createOrUpdateApplication.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Application"
            },
            "description": "Parameters supplied to the create or update a managed application."
          }
        ],
        "responses": {
          "200": {
            "description": "Created - Returns information about the managed application, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          },
          "201": {
            "description": "Created - Returns information about the managed application, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "VMwareApplications"
        ],
        "operationId": "VMwareApplications_Update",
        "description": "Updates an existing managed application. The only value that can be updated via PATCH currently is the tags.",
        "x-ms-examples": {
          "Update managed application": {
            "$ref": "./examples/updateApplication.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ApplicationPatchable"
            },
            "description": "Parameters supplied to update an existing managed application."
          }
        ],
        "responses": {
          "200": {
            "description": "Created - Returns information about the managed application, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BackupSolutions/vmwareApplications": {
      "get": {
        "tags": [
          "VMwareApplications"
        ],
        "operationId": "VMwareApplications_ListByResourceGroup",
        "description": "Gets all the VMwareApplications within a resource group.",
        "x-ms-examples": {
          "Lists VMwareApplications by resource group": {
            "$ref": "./examples/listVMWareApplicationsResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of VMwareApplications.",
            "schema": {
              "$ref": "#/definitions/ApplicationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.BackupSolutions/vmwareApplications": {
      "get": {
        "tags": [
          "VMwareApplications"
        ],
        "operationId": "VMwareApplications_ListBySubscription",
        "description": "Gets all the VMwareApplications within a subscription.",
        "x-ms-examples": {
          "Lists VMwareApplications": {
            "$ref": "./examples/listVMWareApplicationsResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of VMwareApplications.",
            "schema": {
              "$ref": "#/definitions/ApplicationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BackupSolutions/vmwareApplications/{applicationName}/refreshPermissions": {
      "post": {
        "tags": [
          "VMwareApplications"
        ],
        "operationId": "VMwareApplications_RefreshPermissions",
        "description": "Refresh Permissions for application.",
        "x-ms-examples": {
          "Refresh managed application permissions": {
            "$ref": "./examples/refreshApplicationPermissions.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BackupSolutions/vmwareApplications/{applicationName}/listAllowedUpgradePlans": {
      "post": {
        "tags": [
          "VMwareApplications"
        ],
        "operationId": "VMwareApplications_ListAllowedUpgradePlans",
        "description": "List allowed upgrade plans for application.",
        "x-ms-examples": {
          "List allowed upgrade plans for VMware application": {
            "$ref": "./examples/listAllowedUpgradePlans.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Application": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationProperties",
          "description": "The managed application properties."
        },
        "plan": {
          "$ref": "#/definitions/Plan",
          "description": "The plan information."
        },
        "kind": {
          "type": "string",
          "description": "The kind of the managed application. Allowed values are MarketPlace and ServiceCatalog.",
          "pattern": "^[-\\w\\._,\\(\\)]+$"
        },
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "The identity of the resource."
        }
      },
      "required": [
        "properties",
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/GenericResource"
        }
      ],
      "description": "Information about managed application."
    },
    "ApplicationPatchable": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationProperties",
          "description": "The managed application properties."
        },
        "plan": {
          "$ref": "#/definitions/PlanPatchable",
          "description": "The plan information."
        },
        "kind": {
          "type": "string",
          "description": "The kind of the managed application. Allowed values are MarketPlace and ServiceCatalog.",
          "pattern": "^[-\\w\\._,\\(\\)]+$"
        },
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "The identity of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/GenericResource"
        }
      ],
      "description": "Information about managed application."
    },
    "ApplicationProperties": {
      "type": "object",
      "properties": {
        "managedResourceGroupId": {
          "type": "string",
          "description": "The managed resource group Id."
        },
        "parameters": {
          "type": "object",
          "description": "Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string."
        },
        "outputs": {
          "readOnly": true,
          "type": "object",
          "description": "Name and value pairs that define the managed application outputs."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The managed application provisioning state."
        },
        "billingDetails": {
          "readOnly": true,
          "$ref": "#/definitions/ApplicationBillingDetailsDefinition",
          "description": "The managed application billing details."
        },
        "jitAccessPolicy": {
          "$ref": "#/definitions/ApplicationJitAccessPolicy",
          "description": "The managed application Jit access policy."
        },
        "publisherTenantId": {
          "type": "string",
          "description": "The publisher tenant Id.",
          "readOnly": true
        },
        "authorizations": {
          "description": "The  read-only authorizations property that is retrieved from the application package.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationAuthorization"
          },
          "readOnly": true
        },
        "managementMode": {
          "$ref": "#/definitions/ApplicationManagementMode",
          "description": "The managed application management mode.",
          "readOnly": true
        },
        "customerSupport": {
          "$ref": "#/definitions/ApplicationPackageContact",
          "description": "The read-only customer support property that is retrieved from the application package.",
          "readOnly": true
        },
        "supportUrls": {
          "$ref": "#/definitions/ApplicationPackageSupportUrls",
          "description": "The read-only support URLs property that is retrieved from the application package.",
          "readOnly": true
        },
        "artifacts": {
          "description": "The collection of managed application artifacts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationArtifact"
          },
          "readOnly": true
        },
        "createdBy": {
          "readOnly": true,
          "$ref": "#/definitions/ApplicationClientDetails",
          "description": "The client entity that created the JIT request."
        },
        "updatedBy": {
          "readOnly": true,
          "$ref": "#/definitions/ApplicationClientDetails",
          "description": "The client entity that last updated the JIT request."
        }
      },
      "description": "The managed application properties."
    },
    "ApplicationPropertiesPatchable": {
      "type": "object",
      "properties": {
        "managedResourceGroupId": {
          "type": "string",
          "description": "The managed resource group Id."
        },
        "parameters": {
          "type": "object",
          "description": "Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string."
        },
        "outputs": {
          "readOnly": true,
          "type": "object",
          "description": "Name and value pairs that define the managed application outputs."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The managed application provisioning state."
        }
      },
      "description": "The managed application properties."
    },
    "Plan": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The plan name."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher ID."
        },
        "product": {
          "type": "string",
          "description": "The product code."
        },
        "promotionCode": {
          "type": "string",
          "description": "The promotion code."
        },
        "version": {
          "type": "string",
          "description": "The plan's version."
        }
      },
      "required": [
        "name",
        "publisher",
        "product",
        "version"
      ],
      "description": "Plan for the managed application."
    },
    "PlanPatchable": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The plan name."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher ID."
        },
        "product": {
          "type": "string",
          "description": "The product code."
        },
        "promotionCode": {
          "type": "string",
          "description": "The promotion code."
        },
        "version": {
          "type": "string",
          "description": "The plan's version."
        }
      },
      "description": "Plan for the managed application."
    },
    "GenericResource": {
      "type": "object",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "ID of the resource that manages this resource."
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Resource information."
    },
    "Sku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The SKU name."
        },
        "tier": {
          "type": "string",
          "description": "The SKU tier."
        },
        "size": {
          "type": "string",
          "description": "The SKU size."
        },
        "family": {
          "type": "string",
          "description": "The SKU family."
        },
        "model": {
          "type": "string",
          "description": "The SKU model."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "The SKU capacity."
        }
      },
      "required": [
        "name"
      ],
      "description": "SKU for the resource."
    },
    "Identity": {
      "type": "object",
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal ID of resource identity."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant ID of resource."
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned",
            "None"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        },
        "userAssignedIdentities": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/userAssignedResourceIdentity"
          },
          "description": "The list of user identities associated with the resource. The user identity dictionary key references will be resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
        }
      },
      "description": "Identity for the resource."
    },
    "userAssignedResourceIdentity": {
      "type": "object",
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal id of user assigned identity."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant id of user assigned identity."
        }
      },
      "description": "Represents the user assigned identity that is contained within the UserAssignedIdentities dictionary on ResourceIdentity"
    },
    "Resource": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        }
      },
      "description": "Resource information.",
      "x-ms-azure-resource": true
    },
    "ApplicationListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Application"
          },
          "description": "The array of managed VMwareApplications."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "List of managed VMwareApplications."
    },
    "ProvisioningState": {
      "description": "Provisioning status of the managed application.",
      "readOnly": true,
      "enum": [
        "NotSpecified",
        "Accepted",
        "Running",
        "Ready",
        "Creating",
        "Created",
        "Deleting",
        "Deleted",
        "Canceled",
        "Failed",
        "Succeeded",
        "Updating"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "ApplicationLockLevel": {
      "description": "The managed application lock level.",
      "enum": [
        "CanNotDelete",
        "ReadOnly",
        "None"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ApplicationLockLevel",
        "modelAsString": false
      }
    },
    "ApplicationArtifactType": {
      "description": "The managed application artifact type.",
      "enum": [
        "NotSpecified",
        "Template",
        "Custom"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ApplicationArtifactType",
        "modelAsString": false
      }
    },
    "ApplicationArtifactName": {
      "description": "The managed application artifact name.",
      "enum": [
        "NotSpecified",
        "ViewDefinition",
        "Authorizations",
        "CustomRoleDefinition"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ApplicationArtifactName",
        "modelAsString": true
      }
    },
    "ApplicationArtifact": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/ApplicationArtifactName",
          "description": "The managed application artifact name."
        },
        "uri": {
          "type": "string",
          "description": "The managed application artifact blob uri."
        },
        "type": {
          "$ref": "#/definitions/ApplicationArtifactType",
          "description": "The managed application artifact type."
        }
      },
      "required": [
        "name",
        "type",
        "uri"
      ],
      "description": "Managed application artifact."
    },
    "ApplicationNotificationPolicy": {
      "type": "object",
      "properties": {
        "notificationEndpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationNotificationEndpoint"
          },
          "description": "The managed application notification endpoint."
        }
      },
      "required": [
        "notificationEndpoints"
      ],
      "description": "Managed application notification policy."
    },
    "ApplicationNotificationEndpoint": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "The managed application notification endpoint uri."
        }
      },
      "required": [
        "uri"
      ],
      "description": "Managed application notification endpoint."
    },
    "ApplicationPackageLockingPolicyDefinition": {
      "type": "object",
      "properties": {
        "allowedActions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The deny assignment excluded actions."
        }
      },
      "description": "Managed application locking policy."
    },
    "ApplicationDeploymentPolicy": {
      "type": "object",
      "properties": {
        "deploymentMode": {
          "$ref": "#/definitions/DeploymentMode",
          "description": "The managed application deployment mode."
        }
      },
      "required": [
        "deploymentMode"
      ],
      "description": "Managed application deployment policy."
    },
    "ApplicationManagementPolicy": {
      "type": "object",
      "properties": {
        "mode": {
          "$ref": "#/definitions/ApplicationManagementMode",
          "description": "The managed application management mode."
        }
      },
      "description": "Managed application management policy."
    },
    "ApplicationPolicy": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The policy name"
        },
        "policyDefinitionId": {
          "type": "string",
          "description": "The policy definition Id."
        },
        "parameters": {
          "type": "string",
          "description": "The policy parameters."
        }
      },
      "description": "Managed application policy."
    },
    "ApplicationAuthorization": {
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The provider's principal identifier. This is the identity that the provider will use to call ARM to manage the managed application resources."
        },
        "roleDefinitionId": {
          "type": "string",
          "description": "The provider's role definition identifier. This role will define all the permissions that the provider must have on the managed application's container resource group. This role definition cannot have permission to delete the resource group."
        }
      },
      "required": [
        "principalId",
        "roleDefinitionId"
      ],
      "description": "The managed application provider authorization."
    },
    "ApplicationPackageContact": {
      "type": "object",
      "properties": {
        "contactName": {
          "type": "string",
          "description": "The contact name."
        },
        "email": {
          "type": "string",
          "description": "The contact email."
        },
        "phone": {
          "type": "string",
          "description": "The contact phone number."
        }
      },
      "required": [
        "email",
        "phone"
      ],
      "description": "The application package contact information."
    },
    "ApplicationPackageSupportUrls": {
      "type": "object",
      "properties": {
        "publicAzure": {
          "type": "string",
          "description": "The public azure support URL."
        },
        "governmentCloud": {
          "type": "string",
          "description": "The government cloud support URL."
        }
      },
      "description": "The appliance package support URLs."
    },
    "ApplicationBillingDetailsDefinition": {
      "type": "object",
      "properties": {
        "resourceUsageId": {
          "type": "string",
          "description": "The managed application resource usage Id."
        }
      },
      "description": "Managed application billing details definition."
    },
    "ApplicationJitAccessPolicy": {
      "type": "object",
      "properties": {
        "jitAccessEnabled": {
          "type": "boolean",
          "description": "Whether the JIT access is enabled."
        },
        "jitApprovalMode": {
          "$ref": "#/definitions/JitApprovalMode",
          "description": "JIT approval mode."
        },
        "jitApprovers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JitApproverDefinition"
          },
          "description": "The JIT approvers"
        },
        "maximumJitAccessDuration": {
          "type": "string",
          "description": "The maximum duration JIT access is granted. This is an ISO8601 time period value."
        }
      },
      "required": [
        "jitAccessEnabled"
      ],
      "description": "Managed application Jit access policy."
    },
    "JitApprovalMode": {
      "description": "The Jit approval mode.",
      "enum": [
        "NotSpecified",
        "AutoApprove",
        "ManualApprove"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "JitApprovalMode",
        "modelAsString": true
      }
    },
    "JitApproverDefinition": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The approver service principal Id."
        },
        "type": {
          "type": "string",
          "description": "The approver type.",
          "enum": [
            "user",
            "group"
          ],
          "x-ms-enum": {
            "name": "JitApproverType",
            "modelAsString": true
          }
        },
        "displayName": {
          "type": "string",
          "description": "The approver display name."
        }
      },
      "required": [
        "id"
      ],
      "description": "JIT approver definition."
    },
    "ApplicationClientDetails": {
      "type": "object",
      "readOnly": true,
      "properties": {
        "oid": {
          "type": "string",
          "description": "The client Oid."
        },
        "puid": {
          "type": "string",
          "description": "The client Puid"
        },
        "applicationId": {
          "type": "string",
          "description": "The client application Id."
        }
      },
      "description": "The application client details to track the entity creating/updating the managed app resource."
    },
    "Operation": {
      "description": "Microsoft.BackupSolutions operation",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}",
          "type": "string"
        },
        "isDataAction": {
          "description": "Indicates whether the operation is a data action",
          "type": "boolean"
        },
        "display": {
          "type": "object",
          "description": "The object that represents the operation.",
          "properties": {
            "provider": {
              "description": "Service provider: Microsoft.BackupSolutions",
              "type": "string"
            },
            "resource": {
              "description": "Resource on which the operation is performed: Application, JitRequest, etc.",
              "type": "string"
            },
            "operation": {
              "description": "Operation type: Read, write, delete, etc.",
              "type": "string"
            },
            "description": {
              "description": "Localized friendly description for the operation",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "OperationListResult": {
      "description": "Result of the request to list Microsoft.BackupSolutions operations. It contains a list of operations and a URL link to get the next set of results.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "description": "List of Microsoft.BackupSolutions operations."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "DeploymentMode": {
      "description": "The deployment mode.",
      "enum": [
        "NotSpecified",
        "Incremental",
        "Complete"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "DeploymentMode",
        "modelAsString": true
      }
    },
    "ApplicationManagementMode": {
      "description": "The management mode.",
      "enum": [
        "NotSpecified",
        "Unmanaged",
        "Managed"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ApplicationManagementMode",
        "modelAsString": true
      }
    }
  },
  "parameters": {
    "ApplicationNameParameter": {
      "name": "applicationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the managed application.",
      "minLength": 3,
      "maxLength": 64,
      "x-ms-parameter-location": "method"
    }
  }
}
