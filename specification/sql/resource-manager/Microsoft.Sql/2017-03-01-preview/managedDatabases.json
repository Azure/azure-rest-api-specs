{
  "swagger": "2.0",
  "info": {
    "version": "2017-03-01-preview",
    "title": "SqlManagementClient",
    "description": "The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/managedDatabaseRestoreAzureAsyncOperation/{operationId}/completeRestore": {
      "post": {
        "tags": [
          "ManagedDatabases"
        ],
        "description": "Completes the restore operation on a managed database.",
        "operationId": "ManagedDatabases_CompleteRestore",
        "parameters": [
          {
            "name": "locationName",
            "in": "path",
            "description": "The name of the region where the resource is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Management operation id that this request tries to complete.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The definition for completing the restore of this managed database.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedDatabase"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully issued complete restore request."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidDatabaseCompleteRestoreRequest - The complete database restore request is invalid\n\n * 400 InvalidDatabaseCompleteRestoreRequestLastBackupName - The last backup name is invalid\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 UnsupportedServiceName - The specified name is an invalid name because it contains one or more unsupported unicode characters.\n\n * 400 SourceDatabaseNotFound - The source database does not exist.\n\n * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character."
          },
          "202": {
            "description": "Accepted"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Completes a managed database restore": {
            "$ref": "./examples/CompleteManagedRestore.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}": {
      "put": {
        "tags": [
          "ManagedDatabases"
        ],
        "description": "Creates a new database or updates an existing database.",
        "operationId": "ManagedDatabases_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ManagedInstanceNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The requested database resource state.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedDatabase"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the database.",
            "schema": {
              "$ref": "#/definitions/ManagedDatabase"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
          },
          "202": {
            "description": "Accepted"
          },
          "201": {
            "description": "Successfully created the database.",
            "schema": {
              "$ref": "#/definitions/ManagedDatabase"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Creates a new managed database by restoring from an external backup": {
            "$ref": "./examples/ManagedDatabaseCreateRestoreExternalBackup.json"
          },
          "Creates a new managed database with minimal properties": {
            "$ref": "./examples/ManagedDatabaseCreateMin.json"
          },
          "Creates a new managed database using point in time restore": {
            "$ref": "./examples/ManagedDatabaseCreatePointInTimeRestore.json"
          },
          "Creates a new managed database with maximal properties": {
            "$ref": "./examples/ManagedDatabaseCreateMax.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ManagedDatabases"
        ],
        "description": "Deletes the managed database.",
        "operationId": "ManagedDatabases_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ManagedInstanceNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the managed database."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 CannotMoveOrDropJobAccountDatabase - Cannot drop database associated with job account.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 400 CannotMoveOrDropSyncMetadataDatabase - Cannot drop database used as sync metadata database.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 429 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation."
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "The specified managed database does not exist."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete managed database": {
            "$ref": "./examples/ManagedDatabaseDelete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "ManagedDatabases"
        ],
        "description": "Updates an existing database.",
        "operationId": "ManagedDatabases_Update",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ManagedInstanceNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The requested database resource state.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedDatabaseUpdate"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the database.",
            "schema": {
              "$ref": "#/definitions/ManagedDatabase"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
          },
          "202": {
            "description": "Accepted"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Updates a managed database with minimal properties": {
            "$ref": "./examples/ManagedDatabaseUpdateMin.json"
          },
          "Updates a managed database with maximal properties": {
            "$ref": "./examples/ManagedDatabaseUpdateMax.json"
          }
        }
      }
    }
  },
  "definitions": {
    "ManagedDatabaseProperties": {
      "description": "The managed database's properties.",
      "type": "object",
      "properties": {
        "collation": {
          "description": "Collation of the managed database.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "status": {
          "description": "Status for the database.",
          "enum": [
            "Online",
            "Offline",
            "Shutdown",
            "Creating",
            "Inaccessible"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ManagedDatabaseStatus",
            "modelAsString": true
          }
        },
        "creationDate": {
          "format": "date-time",
          "description": "Creation date of the database.",
          "type": "string",
          "readOnly": true
        },
        "pointInTime": {
          "format": "date-time",
          "description": "Conditional. If createMode is PointInTimeRestore, this value is required. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.",
          "type": "string",
          "readOnly": true
        },
        "defaultSecondaryLocation": {
          "description": "Geo pared region.",
          "type": "string",
          "readOnly": true
        },
        "catalogCollation": {
          "description": "Collation of the metadata catalog.",
          "enum": [
            "DATABASE_DEFAULT",
            "SQL_Latin1_General_CP1_CI_AS"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CatalogCollationType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "createMode": {
          "description": "Managed database create mode. PointInTimeRestore: Create a database by restoring a point in time backup of an existing database. SourceDatabaseName, SourceManagedInstanceName and PointInTime must be specified. RestoreExternalBackup: Create a database by restoring from external backup files. Collation, StorageContainerUri and StorageContainerSasToken must be specified.",
          "enum": [
            "Default",
            "RestoreExternalBackup",
            "PointInTimeRestore"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ManagedDatabaseCreateMode",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create"
          ]
        },
        "sourceDatabaseName": {
          "description": "Conditional. If createMode is PointInTimeRestore, this value is required. Specifies the name of a database that will be used as a source.",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ]
        },
        "sourceManagedInstanceName": {
          "description": "Conditional. If createMode is PointInTimeRestore, this value is required. Specifies the name of a managed instance where source database is located.",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ]
        },
        "storageContainerUri": {
          "description": "Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the uri of the storage container where backups for this restore are stored.",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ]
        },
        "storageContainerSasToken": {
          "description": "Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the storage container sas token.",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ]
        },
        "lastBackupName": {
          "description": "Conditional. Only used for complete managed database restore request. Specifies the last backup file name for complete managed database restore.",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ]
        }
      }
    },
    "Resource": {
      "description": "ARM resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Resource type.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "TrackedResource": {
      "description": "ARM tracked top level resource.",
      "required": [
        "location"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "location": {
          "description": "Resource location.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ManagedDatabase": {
      "description": "A managed database resource.",
      "required": [
        "location"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ManagedDatabaseProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ManagedDatabaseListResult": {
      "description": "A list of managed databases.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedDatabase"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ManagedDatabaseUpdate": {
      "description": "An managed database update.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ManagedDatabaseProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The subscription ID that identifies an Azure subscription.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for the request.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client"
    },
    "ResourceGroupParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ServerNameParameter": {
      "name": "serverName",
      "in": "path",
      "description": "The name of the server.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ManagedInstanceNameParameter": {
      "name": "managedInstanceName",
      "in": "path",
      "description": "The name of the managed instance.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "DatabaseNameParameter": {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SqlVirtualMachineInstanceNameParameter": {
      "name": "sqlVirtualMachineInstanceName",
      "in": "path",
      "description": "The name of the SqlVirtualMachineInstance.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SqlVirtualMachineContainerNameParameter": {
      "name": "sqlVirtualMachineContainerName",
      "in": "path",
      "description": "The name of the SqlVirtualMachineContainer.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "VirtualClusterNameParameter": {
      "name": "virtualClusterName",
      "in": "path",
      "description": "The name of the virtual cluster.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  }
}