{
  "swagger": "2.0",
  "info": {
    "version": "2017-03-01-preview",
    "title": "SqlManagementClient",
    "description": "The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/export": {
      "post": {
        "tags": [
          "Databases"
        ],
        "description": "Exports a database.",
        "operationId": "Databases_Export",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The database export request parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImportExportDatabaseDefinition"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully exported the database."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 MissingImportExportInputParameters - Missing ImportExport input parameters.\n\n * 400 PolybaseImportAuthenticationTypeNotSupported - Authentication type parameter is not support for PolybaseImport operation.\n\n * 400 InvalidOperationType - Provide a valid operation type.\n\n * 404 ImportExportOperationIdNotFound - The operation Id for import or export cannot be found.\n\n * 404 ResourceNotFound - Invalid request specifying a non-existent resource.\n\n * 409 ImportExportOperationInProgress - There is an import or export operation in progress on the database."
          }
        },
        "x-ms-examples": {
          "Exports a database.": {
            "$ref": "./examples/ExportDatabase.json"
          }
        }
      }
    },
  },
  "definitions": {
    "DatabaseListResult": {
      "description": "A list of databases.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Database"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ArmSku": {
      "description": "An ARM Resource SKU.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the SKU, typically, a letter + Number code, e.g. P3.",
          "type": "string"
        },
        "tier": {
          "description": "The tier of the particular SKU, e.g. Basic, Premium.",
          "type": "string"
        },
        "size": {
          "description": "Size of the particular SKU",
          "type": "string"
        },
        "family": {
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here.",
          "type": "string"
        },
        "capacity": {
          "format": "int32",
          "description": "Capacity of the particular SKU.",
          "type": "integer"
        }
      }
    },
    "DatabaseProperties": {
      "description": "The database's properties.",
      "type": "object",
      "properties": {
        "createMode": {
          "description": "Specifies the mode of database creation.\r\n\r\nDefault: regular database creation.\r\n\r\nCopy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.\r\n\r\nSecondary: creates a database as a secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.\r\n\r\nPointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.\r\n\r\nRecovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.\r\n\r\nRestore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.\r\n\r\nRestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.\r\n\r\nCopy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.",
          "enum": [
            "Default",
            "Copy",
            "Secondary",
            "PointInTimeRestore",
            "Restore",
            "Recovery",
            "RestoreExternalBackup",
            "RestoreExternalBackupSecondary",
            "RestoreLongTermRetentionBackup"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create"
          ]
        },
        "collation": {
          "description": "The collation of the database.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "maxSizeBytes": {
          "format": "int64",
          "description": "The max size of the database expressed in bytes.",
          "type": "integer"
        },
        "sampleName": {
          "description": "The name of the sample schema to apply when creating this database.",
          "enum": [
            "AdventureWorksLT",
            "WideWorldImportersStd",
            "WideWorldImportersFull"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SampleName",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create"
          ]
        },
        "elasticPoolId": {
          "description": "The resource identifier of the elastic pool containing this database.",
          "type": "string"
        },
        "sourceDatabaseId": {
          "description": "The resource identifier of the source database associated with create operation of this database.",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ]
        },
        "status": {
          "description": "The status of the database.",
          "enum": [
            "Online",
            "Restoring",
            "RecoveryPending",
            "Recovering",
            "Suspect",
            "Offline",
            "Standby",
            "Shutdown",
            "EmergencyMode",
            "AutoClosed",
            "Copying",
            "Creating",
            "Inaccessible",
            "OfflineSecondary",
            "Pausing",
            "Paused",
            "Resuming",
            "Scaling"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": true
          }
        },
        "databaseId": {
          "format": "uuid",
          "description": "The ID of the database.",
          "type": "string",
          "readOnly": true
        },
        "creationDate": {
          "format": "date-time",
          "description": "The creation date of the database (ISO8601 format).",
          "type": "string",
          "readOnly": true
        },
        "currentServiceObjectiveName": {
          "description": "The current service level objective name of the database.",
          "type": "string",
          "readOnly": true
        },
        "defaultSecondaryLocation": {
          "description": "The default secondary region for this database.",
          "type": "string",
          "readOnly": true
        },
        "failoverGroupId": {
          "description": "Failover Group resource identifier that this database belongs to.",
          "type": "string",
          "readOnly": true
        },
        "recoveryServicesRecoveryPointId": {
          "description": "The resource identifier of the recovery point associated with create operation of this database.",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ]
        },
        "longTermRetentionBackupResourceId": {
          "description": "The resource identifier of the long term retention backup associated with create operation of this database.",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ]
        },
        "recoverableDatabaseId": {
          "description": "The resource identifier of the recoverable database associated with create operation of this database.",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ]
        },
        "restorableDroppedDatabaseId": {
          "description": "The resource identifier of the restorable dropped database associated with create operation of this database.",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ]
        },
        "catalogCollation": {
          "description": "Collation of the metadata catalog.",
          "enum": [
            "DATABASE_DEFAULT",
            "SQL_Latin1_General_CP1_CI_AS"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CatalogCollationType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "zoneRedundant": {
          "description": "Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.",
          "type": "boolean"
        }
      }
    },
    "Resource": {
      "description": "ARM resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Resource type.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "TrackedResource": {
      "description": "ARM tracked top level resource.",
      "required": [
        "location"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "location": {
          "description": "Resource location.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Database": {
      "description": "A database resource.",
      "required": [
        "location"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "sku": {
          "$ref": "#/definitions/ArmSku",
          "description": "The name and tier of the SKU."
        },
        "kind": {
          "description": "Kind of database. This is metadata used for the Azure portal experience.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/DatabaseProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "DatabaseUpdate": {
      "description": "A database resource.",
      "type": "object",
      "properties": {
        "sku": {
          "$ref": "#/definitions/ArmSku",
          "description": "The name and tier of the SKU."
        },
        "properties": {
          "$ref": "#/definitions/DatabaseProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "DatabaseOperationListResult": {
      "description": "The response to a list database operations request",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatabaseOperation"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DatabaseOperationProperties": {
      "description": "The properties of a database operation.",
      "type": "object",
      "properties": {
        "databaseName": {
          "description": "The name of the database the operation is being performed on.",
          "type": "string",
          "readOnly": true
        },
        "operation": {
          "description": "The name of operation.",
          "type": "string",
          "readOnly": true
        },
        "operationFriendlyName": {
          "description": "The friendly name of operation.",
          "type": "string",
          "readOnly": true
        },
        "percentComplete": {
          "format": "int32",
          "description": "The percentage of the operation completed.",
          "type": "integer",
          "readOnly": true
        },
        "serverName": {
          "description": "The name of the server.",
          "type": "string",
          "readOnly": true
        },
        "startTime": {
          "format": "date-time",
          "description": "The operation start time.",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "description": "The operation state.",
          "enum": [
            "Pending",
            "InProgress",
            "Succeeded",
            "Failed",
            "CancelInProgress",
            "Cancelled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ManagementOperationState",
            "modelAsString": true
          }
        },
        "errorCode": {
          "format": "int32",
          "description": "The operation error code.",
          "type": "integer",
          "readOnly": true
        },
        "errorDescription": {
          "description": "The operation error description.",
          "type": "string",
          "readOnly": true
        },
        "errorSeverity": {
          "format": "int32",
          "description": "The operation error severity.",
          "type": "integer",
          "readOnly": true
        },
        "isUserError": {
          "description": "Whether or not the error is a user error.",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "ProxyResource": {
      "description": "ARM proxy resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {}
    },
    "DatabaseOperation": {
      "description": "A database operation.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DatabaseOperationProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ImportExportDatabaseDefinition": {
      "description": "Contains the information necessary to perform import/export operation.",
      "required": [
        "storageKeyType",
        "storageKey",
        "storageUri",
        "administratorLogin",
        "administratorLoginPassword"
      ],
      "type": "object",
      "properties": {
        "databaseName": {
          "description": "Name of the import database.",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ]
        },
        "edition": {
          "description": "Edition of the import database.",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ]
        },
        "serviceObjectiveName": {
          "description": "Service level objective name of the import database.",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ]
        },
        "maxSizeBytes": {
          "description": "Max size in bytes for the import database.",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ]
        },
        "storageKeyType": {
          "description": "Storage key type.",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ]
        },
        "storageKey": {
          "description": "Storage key.",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ]
        },
        "storageUri": {
          "description": "Storage Uri.",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ]
        },
        "administratorLogin": {
          "description": "Administrator login name.",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ]
        },
        "administratorLoginPassword": {
          "description": "Administrator login password.",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ]
        },
        "authenticationType": {
          "description": "Authentication type.",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ]
        }
      }
    },
    "ResourceMoveDefinition": {
      "description": "Contains the information necessary to perform a resource move (rename).",
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The target ID for the resource",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The subscription ID that identifies an Azure subscription.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for the request.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client"
    },
    "ResourceGroupParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ServerNameParameter": {
      "name": "serverName",
      "in": "path",
      "description": "The name of the server.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ManagedInstanceNameParameter": {
      "name": "managedInstanceName",
      "in": "path",
      "description": "The name of the managed instance.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "DatabaseNameParameter": {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SqlVirtualMachineInstanceNameParameter": {
      "name": "sqlVirtualMachineInstanceName",
      "in": "path",
      "description": "The name of the SqlVirtualMachineInstance.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SqlVirtualMachineContainerNameParameter": {
      "name": "sqlVirtualMachineContainerName",
      "in": "path",
      "description": "The name of the SqlVirtualMachineContainer.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "VirtualClusterNameParameter": {
      "name": "virtualClusterName",
      "in": "path",
      "description": "The name of the virtual cluster.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  }
}