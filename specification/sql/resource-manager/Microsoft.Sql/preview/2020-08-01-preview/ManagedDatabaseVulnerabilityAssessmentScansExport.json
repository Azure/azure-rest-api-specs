{
  "swagger": "2.0",
  "info": {
    "version": "2020-08-01-preview",
    "title": "SqlManagementClient",
    "description": "The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans/{scanId}/export": {
      "post": {
        "tags": [
          "ManagedDatabaseVulnerabilityAssessmentScansExport"
        ],
        "description": "Convert an existing scan result to a human readable format. If already exists nothing happens",
        "operationId": "ManagedDatabaseVulnerabilityAssessmentScans_Export",
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/parameters/ResourceGroupParameter"
          },
          {
            "name": "managedInstanceName",
            "in": "path",
            "description": "The name of the managed instance.",
            "required": true,
            "type": "string"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the scanned database.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vulnerabilityAssessmentName",
            "in": "path",
            "description": "The name of the vulnerability assessment.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "VulnerabilityAssessmentName",
              "modelAsString": true
            }
          },
          {
            "name": "scanId",
            "in": "path",
            "description": "The vulnerability assessment scan Id.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../common/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Scan result was converted successfully.",
            "schema": {
              "$ref": "#/definitions/DatabaseVulnerabilityAssessmentScansExport"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidStorageAccountName - The provided storage account is not valid or does not exist.\n\n * 400 InvalidStorageAccountCredentials - The provided storage account shared access signature or account storage key is not valid.\n\n * 400 VulnerabilityAssessmentInvalidPolicy - Vulnerability Assessment settings don't exist or invalid storage specified in settings. \n\n * 400 VulnerabilityAssessmentADSIsDisabled - Advanced Data Security should be enabled in order to use Vulnerability Assessment.\n\n * 400 DatabaseVulnerabilityAssessmentMissingStorageContainerPath - Storage container path must be provided if it isn't set in server level policy\n\n * 400 VulnerabilityAssessmentDatawarehouseDatabaseIsDeactivated - Could not execute Vulnerability Assessment operation because the database is paused. Please resume it.\n\n * 400 InvalidVulnerabilityAssessmentOperationRequest - The vulnerability assessment operation request does not exist or has no properties object.\n\n * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 409 DatabaseVulnerabilityAssessmentScanIsAlreadyInProgress - Vulnerability Assessment scan is already in progress.\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later."
          },
          "201": {
            "description": "Scan result was converted successfully.",
            "schema": {
              "$ref": "#/definitions/DatabaseVulnerabilityAssessmentScansExport"
            }
          }
        },
        "x-ms-examples": {
          "Export a database's vulnerability assessment scan results.": {
            "$ref": "./examples/ManagedDatabaseVulnerabilityAssessmentScanExport.json"
          }
        }
      }
    }
  },
  "definitions": {
    "DatabaseVulnerabilityAssessmentScanExportProperties": {
      "description": "Properties of the export operation's result.",
      "type": "object",
      "properties": {
        "exportedReportLocation": {
          "description": "Location of the exported report (e.g. https://myStorage.blob.core.windows.net/VaScans/scans/serverName/databaseName/scan_scanId.xlsx).",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DatabaseVulnerabilityAssessmentScansExport": {
      "description": "A database Vulnerability Assessment scan export resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../common/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DatabaseVulnerabilityAssessmentScanExportProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      }
    }
  },
  "parameters": {},
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  }
}
