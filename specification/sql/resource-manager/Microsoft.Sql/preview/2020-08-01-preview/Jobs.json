{
  "swagger": "2.0",
  "info": {
    "version": "2020-08-01-preview",
    "title": "SqlManagementClient",
    "description": "The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "description": "Gets a list of jobs.",
        "operationId": "Jobs_ListByAgent",
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "jobAgentName",
            "in": "path",
            "description": "The name of the job agent.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../common/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of jobs.",
            "schema": {
              "$ref": "#/definitions/JobListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription."
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List jobs in a job agent": {
            "$ref": "./examples/ListJobsByAgent.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "description": "Gets a job.",
        "operationId": "Jobs_Get",
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "jobAgentName",
            "in": "path",
            "description": "The name of the job agent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "The name of the job to get.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../common/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the job.",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 ResourceNotFound - The requested resource was not found."
          }
        },
        "x-ms-examples": {
          "Get a job": {
            "$ref": "./examples/GetJob.json"
          }
        }
      },
      "put": {
        "tags": [
          "Jobs"
        ],
        "description": "Creates or updates a job.",
        "operationId": "Jobs_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "jobAgentName",
            "in": "path",
            "description": "The name of the job agent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "The name of the job to get.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The requested job state.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          {
            "$ref": "../../../common/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the job.",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.\n\n * 400 InvalidDuration - Invalid duration.\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription."
          },
          "201": {
            "description": "Successfully created the job.",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "x-ms-examples": {
          "Create a job with default properties": {
            "$ref": "./examples/CreateOrUpdateJobMin.json"
          },
          "Create a job with all properties specified": {
            "$ref": "./examples/CreateOrUpdateJobMax.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Jobs"
        ],
        "description": "Deletes a job.",
        "operationId": "Jobs_Delete",
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "jobAgentName",
            "in": "path",
            "description": "The name of the job agent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "The name of the job to delete.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../common/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the job."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 ResourceNotFound - The requested resource was not found."
          },
          "204": {
            "description": "The specified job does not exist."
          }
        },
        "x-ms-examples": {
          "Delete a job": {
            "$ref": "./examples/DeleteJob.json"
          }
        }
      }
    }
  },
  "definitions": {
    "JobListResult": {
      "description": "A list of jobs.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Job"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "JobProperties": {
      "description": "Properties of a job.",
      "type": "object",
      "properties": {
        "description": {
          "description": "User-defined description of the job.",
          "default": "",
          "type": "string"
        },
        "version": {
          "format": "int32",
          "description": "The job version number.",
          "type": "integer",
          "readOnly": true
        },
        "schedule": {
          "$ref": "#/definitions/JobSchedule",
          "description": "Schedule properties of the job."
        }
      }
    },
    "JobSchedule": {
      "description": "Scheduling properties of a job.",
      "type": "object",
      "properties": {
        "startTime": {
          "format": "date-time",
          "description": "Schedule start time.",
          "default": "0001-01-01T00:00:00+00:00",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "Schedule end time.",
          "default": "9999-12-31T11:59:59+00:00",
          "type": "string"
        },
        "type": {
          "description": "Schedule interval type",
          "default": "Once",
          "enum": [
            "Once",
            "Recurring"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "JobScheduleType",
            "modelAsString": false
          }
        },
        "enabled": {
          "description": "Whether or not the schedule is enabled.",
          "type": "boolean"
        },
        "interval": {
          "description": "Value of the schedule's recurring interval, if the ScheduleType is recurring. ISO8601 duration format.",
          "type": "string"
        }
      }
    },
    "Job": {
      "description": "A job.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../common/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      }
    }
  },
  "parameters": {
    "ServerNameParameter": {
      "name": "serverName",
      "in": "path",
      "description": "The name of the server.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  }
}
