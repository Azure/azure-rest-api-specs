{
  "swagger": "2.0",
  "info": {
    "version": "2021-01-15",
    "title": "CertificateOrdersDiagnostics API Client"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/detectors": {
      "get": {
        "tags": [
          "CertificateOrdersDiagnostics"
        ],
        "summary": "Microsoft.CertificateRegistration to get the list of detectors for this RP.",
        "description": "Description for Microsoft.CertificateRegistration to get the list of detectors for this RP.",
        "operationId": "CertificateOrdersDiagnostics_ListAppServiceCertificateOrderDetectorResponse",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "certificateOrderName",
            "in": "path",
            "description": "The certificate order name for which the response is needed.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../../../Microsoft.Web/stable/2021-01-15/CommonDefinitions.json#/definitions/DetectorResponseCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "../../../Microsoft.Web/stable/2021-01-15/CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List app service certificate detector response": {
            "$ref": "./examples/Diagnostics_ListAppServiceCertificateOrderDetectorResponse.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/detectors/{detectorName}": {
      "get": {
        "tags": [
          "CertificateOrdersDiagnostics"
        ],
        "summary": "Microsoft.CertificateRegistration call to get a detector response from App Lens.",
        "description": "Description for Microsoft.CertificateRegistration call to get a detector response from App Lens.",
        "operationId": "CertificateOrdersDiagnostics_GetAppServiceCertificateOrderDetectorResponse",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "certificateOrderName",
            "in": "path",
            "description": "The certificate order name for which the response is needed.",
            "required": true,
            "type": "string"
          },
          {
            "name": "detectorName",
            "in": "path",
            "description": "The detector name which needs to be run.",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "The start time for detector response.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "The end time for the detector response.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeGrain",
            "in": "query",
            "description": "The time grain for the detector response.",
            "type": "string",
            "pattern": "PT[1-9][0-9]+[SMH]"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../../../Microsoft.Web/stable/2021-01-15/CommonDefinitions.json#/definitions/DetectorResponse"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "../../../Microsoft.Web/stable/2021-01-15/CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get app service certificate order detector response": {
            "$ref": "./examples/Diagnostics_GetAppServiceCertificateOrderDetectorResponse.json"
          }
        }
      }
    }
  },
  "definitions": {},
  "parameters": {
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
      "required": true,
      "type": "string"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "Name of the resource group to which the resource belongs.",
      "required": true,
      "type": "string",
      "maxLength": 90,
      "minLength": 1,
      "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
      "x-ms-parameter-location": "method"
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "API Version",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}
