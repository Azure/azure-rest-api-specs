{
  "swagger": "2.0",
  "info": {
    "title": "LogicAppsManagementClient",
    "version": "2015-08-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [ "https" ],
  "consumes": [
    "application/json",
    "text/json"
  ],
  "produces": [
    "application/json",
    "text/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/locations/{location}/managedApis": {
      "get": {
        "tags": [ "Managed Apis" ],
        "summary": "List managed Apis",
        "operationId": "ManagedApis_List",
        "description": "Gets a list of managed APIs.",
        "parameters": [
          {
            "name": "location",
            "description": "The location.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApisCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/locations/{location}/managedApis/{apiName}": {
      "get": {
        "tags": [ "Managed Apis" ],
        "summary": "Get managed API",
        "operationId": "ManagedApis_Get",
        "description": "Gets a managed API.",
        "parameters": [
          {
            "name": "location",
            "description": "The location.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "apiName",
            "description": "The managed API name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "export",
            "in": "query",
            "description": "flag showing whether to export API definition in format specified by Accept header.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiEntity"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connections": {
      "get": {
        "tags": [ "Connections" ],
        "summary": "Get Connections",
        "operationId": "Connections_List",
        "description": "Gets a list of connections.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource Group Name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$top",
            "description": "The number of items to be included in the result.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "description": "The filter to apply on the operation.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConnectionCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/Connection"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connections/{connectionName}": {
      "get": {
        "tags": [ "Connections" ],
        "operationId": "Connections_Get",
        "description": "Gets a connection.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionName",
            "description": "The connection name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Connection"
            }
          }
        }
      },
      "put": {
        "tags": [ "Connections" ],
        "operationId": "Connections_CreateOrUpdate",
        "description": "Creates or updates a connection.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionName",
            "description": "The connection name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "connection",
            "description": "The connection.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Connection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Connection"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Connection"
            }
          }
        }
      },
      "delete": {
        "tags": [ "Connections" ],
        "operationId": "Connections_Delete",
        "description": "Deletes a connection.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionName",
            "description": "The connection name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connections/{connectionName}/listConsentLinks": {
      "post": {
        "tags": [ "Connections" ],
        "operationId": "Connections_ListConsentLinks",
        "description": "Lists consent links of a connection.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionName",
            "description": "The connection name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "content",
            "description": "The content.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConsentLinkInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConsentLinkPayload"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connections/{connectionName}/confirmConsentCode": {
      "post": {
        "tags": [ "Connections" ],
        "operationId": "Connections_ConfirmConsentCode",
        "description": "Confirms consent code of a connection.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionName",
            "description": "The connection name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "content",
            "description": "The content.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfirmConsentCodeInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Connection"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connections/{connectionName}/listConnectionKeys": {
      "post": {
        "tags": [ "Connections" ],
        "operationId": "Connections_ListConnectionKeys",
        "description": "Lists connection keys.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionName",
            "description": "The connection name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "content",
            "description": "The content.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListConnectionKeysInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConnectionSecrets"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApisCollection": {
      "description": "Collection of Apis",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiEntity"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources",
          "type": "string"
        }
      }
    },
    "ApiEntity": {
      "description": "API Management",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "properties": {
            "name": {
              "description": "Name of the API\r\n            the URL path of this API when exposed via APIM",
              "type": "string"
            },
            "generalInformation": {
              "$ref": "#/definitions/GeneralApiInformation",
              "description": "the URL path of this API when exposed via APIM"
            },
            "path": {
              "description": "the URL path of this API when exposed via APIM",
              "type": "string"
            },
            "runtimeUrls": {
              "description": "Read only property returning the runtime endpoints where the API can be called",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "protocols": {
              "description": "Protocols supported by the front end - http/https",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "policies": {
              "$ref": "#/definitions/ApiPolicies",
              "description": "API policies"
            },
            "backendService": {
              "$ref": "#/definitions/BackendServiceDefinition",
              "description": "Backend service definition"
            },
            "apiDefinitionUrl": {
              "description": "API definition Url - url where the swagger can be downloaded from",
              "type": "string"
            },
            "metadata": {
              "$ref": "#/definitions/Object",
              "description": "Free form object for the data caller wants to store"
            },
            "capabilities": {
              "description": "Capabilities",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "connectionParameters": {
              "description": "Connection parameters",
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ConnectionParameter"
              }
            },
            "createdTime": {
              "format": "date-time",
              "description": "Timestamp of the connection creation",
              "type": "string"
            },
            "changedTime": {
              "format": "date-time",
              "description": "Timestamp of last connection change.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "GeneralApiInformation": {
      "description": "General API information",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "properties": {
            "iconUrl": {
              "description": "Icon Url",
              "type": "string"
            },
            "displayName": {
              "description": "Display Name",
              "type": "string"
            },
            "description": {
              "description": "Description",
              "type": "string"
            },
            "termsOfUseUrl": {
              "description": "a public accessible url of the Terms Of Use Url of this API",
              "type": "string"
            },
            "connectionDisplayName": {
              "description": "DefaultConnectionNameTemplate",
              "type": "string"
            },
            "connectionPortalUrl": {
              "$ref": "#/definitions/Object",
              "description": "ConnectionPortalUrl"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ApiPolicies": {
      "description": "API policies",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "properties": {
            "content": {
              "description": "Content of xml policy",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "BackendServiceDefinition": {
      "description": "API definitions with backend urls",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "properties": {
            "serviceUrl": {
              "description": "Url from which the swagger payload will be fetched",
              "type": "string"
            },
            "hostingEnvironmentServiceUrls": {
              "description": "Service Urls per Hosting environment",
              "type": "array",
              "items": {
                "$ref": "#/definitions/HostingEnvironmentServiceDescriptions"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Object": {
      "type": "object",
      "properties": {
      }
    },
    "ConnectionParameter": {
      "description": "connection provider parameters",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of the parameter",
          "enum": [
            "string",
            "securestring",
            "secureobject",
            "int",
            "bool",
            "object",
            "array",
            "oauthSetting",
            "connection"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ConnectionParameterType",
            "modelAsString": false
          }
        },
        "defaultValue": {
          "$ref": "#/definitions/Object",
          "description": "Default parameter value"
        },
        "oAuthSettings": {
          "$ref": "#/definitions/ApiOAuthSettings",
          "description": "Settings defining OAuth flow for the back end provider"
        },
        "uiDefinition": {
          "$ref": "#/definitions/Object",
          "description": "UI definitions"
        }
      }
    },
    "HostingEnvironmentServiceDescriptions": {
      "description": "Back end service per ASE",
      "type": "object",
      "properties": {
        "hostingEnvironmentId": {
          "description": "Hosting environment Id",
          "type": "string"
        },
        "hostId": {
          "description": "Host Id",
          "type": "string"
        },
        "serviceUrl": {
          "description": "service url to use",
          "type": "string"
        },
        "useInternalRouting": {
          "description": "When the backend url is in same ASE, for performance reason this flag can be set to true\r\n            If WebApp.DisableHostNames is also set it improves the security by making the back end accessible only \r\n            via API calls\r\n            Note: calls will fail if this option is used but back end is not on the same ASE",
          "type": "boolean"
        }
      }
    },
    "ApiOAuthSettings": {
      "description": "OAuth settings for the connection provider",
      "type": "object",
      "properties": {
        "identityProvider": {
          "description": "Identity provider",
          "type": "string"
        },
        "clientId": {
          "description": "Resource provider client id",
          "type": "string"
        },
        "clientSecret": {
          "description": "Client Secret needed for OAuth",
          "type": "string"
        },
        "scopes": {
          "description": "OAuth scopes",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "redirectUrl": {
          "description": "Url",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/Object",
          "description": "Read only properties for this oauth setting."
        },
        "customParameters": {
          "description": "OAuth parameters key is the name of parameter",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ApiOAuthSettingsParameter"
          }
        }
      }
    },
    "ApiOAuthSettingsParameter": {
      "description": "OAuth Settings Parameter",
      "type": "object",
      "properties": {
        "value": {
          "description": "Value",
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/Object",
          "description": "Read only: Options available to this parameter"
        },
        "uiDefinition": {
          "$ref": "#/definitions/Object",
          "description": "UI definitions per culture as caller can specify the culture"
        }
      }
    },
    "ConnectionCollection": {
      "description": "Collection of connections",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Connection"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources",
          "type": "string"
        }
      }
    },
    "Connection": {
      "description": "API Connection",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "properties": {
            "name": {
              "description": "connection name",
              "type": "string"
            },
            "displayName": {
              "description": "display name",
              "type": "string"
            },
            "statuses": {
              "description": "Status of the connection",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ConnectionStatus"
              }
            },
            "customParameterValues": {
              "description": "Custom login setting values.",
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ParameterCustomLoginSettingValues"
              }
            },
            "tenantId": {
              "description": "",
              "type": "string"
            },
            "parameterValues": {
              "description": "Tokens/Claim",
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/Object"
              }
            },
            "nonSecretParameterValues": {
              "description": "Tokens/Claim",
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/Object"
              }
            },
            "metadata": {
              "$ref": "#/definitions/Object",
              "description": ""
            },
            "firstExpirationTime": {
              "format": "date-time",
              "description": "Time in UTC when the first expiration of OAuth tokens",
              "type": "string"
            },
            "keywords": {
              "description": "List of Keywords that tag the acl",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "createdTime": {
              "format": "date-time",
              "description": "Timestamp of the connection creation",
              "type": "string"
            },
            "changedTime": {
              "format": "date-time",
              "description": "Timestamp of last connection change.",
              "type": "string"
            },
            "api": {
              "$ref": "#/definitions/ExpandedParent[ApiEntity]",
              "description": "expanded connection provider name"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ConnectionStatus": {
      "description": "Connection status",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "properties": {
            "status": {
              "description": "Status",
              "type": "string"
            },
            "target": {
              "description": "Target of the error",
              "type": "string"
            },
            "error": {
              "$ref": "#/definitions/ConnectionError",
              "description": "Error details"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ParameterCustomLoginSettingValues": {
      "description": "Custom logging setting values",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "properties": {
            "customParameters": {
              "description": "Custom parameters.",
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/CustomLoginSettingValue"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ExpandedParent[ApiEntity]": {
      "description": "expanded parent object for expansion",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "properties": {
            "id": {
              "description": "Id of connection provider",
              "type": "string"
            },
            "entity": {
              "$ref": "#/definitions/ResponseMessageEnvelope[ApiEntity]",
              "description": "Id of connection provider"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ConnectionError": {
      "description": "Connection error",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "properties": {
            "code": {
              "description": "code of the status",
              "type": "string"
            },
            "message": {
              "description": "Description of the status",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "CustomLoginSettingValue": {
      "description": "Custom logging setting value",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "properties": {
            "option": {
              "description": "Option selected for this custom login setting value",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ResponseMessageEnvelope[ApiEntity]": {
      "description": "Message envelope that contains the common Azure resource manager properties and the resource provider specific content",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource Id. Typically id is populated only for responses to GET requests. Caller is responsible for passing in this\r\n            value for GET requests only.\r\n            For example: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupId}/providers/Microsoft.Web/sites/{sitename}",
          "type": "string"
        },
        "name": {
          "description": "Name of resource",
          "type": "string"
        },
        "type": {
          "description": "Type of resource e.g Microsoft.Web/sites",
          "type": "string"
        },
        "location": {
          "description": "Geo region resource belongs to e.g. SouthCentralUS, SouthEastAsia",
          "type": "string"
        },
        "tags": {
          "description": "Tags associated with resource",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "plan": {
          "$ref": "#/definitions/ArmPlan",
          "description": "Azure resource manager plan"
        },
        "properties": {
          "$ref": "#/definitions/ApiEntity",
          "description": "Resource specific properties"
        },
        "sku": {
          "$ref": "#/definitions/SkuDescription",
          "description": "Sku description of the resource"
        }
      }
    },
    "ArmPlan": {
      "description": "The plan object in an ARM, represents a marketplace plan",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "publisher": {
          "description": "The publisher",
          "type": "string"
        },
        "product": {
          "description": "The product",
          "type": "string"
        },
        "promotionCode": {
          "description": "The promotion code",
          "type": "string"
        },
        "version": {
          "description": "Version of product",
          "type": "string"
        }
      }
    },
    "SkuDescription": {
      "description": "Describes a sku for a scalable resource",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the resource sku",
          "type": "string"
        },
        "tier": {
          "description": "Service Tier of the resource sku",
          "type": "string"
        },
        "size": {
          "description": "Size specifier of the resource sku",
          "type": "string"
        },
        "family": {
          "description": "Family code of the resource sku",
          "type": "string"
        },
        "capacity": {
          "format": "int32",
          "description": "Current number of instances assigned to the resource",
          "type": "integer"
        }
      }
    },
    "ConsentLinkInput": {
      "description": "Connection Consent Link payload",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "properties": {
            "parameters": {
              "description": "Array of links",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ConsentLinkInputParameter"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ConsentLinkInputParameter": {
      "description": "",
      "type": "object",
      "properties": {
        "principalType": {
          "description": "Principal type",
          "enum": [
            "ActiveDirectory",
            "Connection",
            "MicrosoftAccount"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PrincipalType",
            "modelAsString": false
          }
        },
        "tenantId": {
          "description": "Tenant Id",
          "type": "string"
        },
        "objectId": {
          "description": "AAD OID (user or group) if the principal type is ActiveDirectory.\r\n            MSA PUID if the principal type is MicrosoftAccount.",
          "type": "string"
        },
        "parameterName": {
          "description": "Name of the parameter in the connection provider's oauthSettings",
          "type": "string"
        },
        "redirectUrl": {
          "description": "Name of the parameter in the connection provider's oauthSettings",
          "type": "string"
        }
      }
    },
    "ConsentLinkPayload": {
      "description": "Collection of consent links",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsentLink"
          }
        }
      }
    },
    "ConsentLink": {
      "description": "",
      "type": "object",
      "properties": {
        "link": {
          "description": "Uri for the consent link",
          "type": "string"
        },
        "firstPartyLoginUri": {
          "description": "Uri for first party login",
          "type": "string"
        },
        "displayName": {
          "description": "Display Name of the parameter in the connection provider's oauthSettings",
          "type": "string"
        },
        "status": {
          "description": "Status of the link",
          "enum": [
            "Unauthenticated",
            "Authenticated",
            "Error"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LinkState",
            "modelAsString": false
          }
        }
      }
    },
    "ListConnectionKeysInput": {
      "description": "List Connection Keys Input payload",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "properties": {
            "validityTimeSpan": {
              "description": "time span for how long the keys will be valid",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ConnectionSecrets": {
      "description": "",
      "type": "object",
      "properties": {
        "parameterValues": {
          "description": "Tokens/Claim",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Object"
          }
        },
        "connectionKey": {
          "description": "Connection Key",
          "type": "string"
        }
      }
    },
    "ConfirmConsentCodeInput": {
      "description": "Confirm Consent Code Input payload",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "properties": {
            "principalType": {
              "description": "Principal type",
              "enum": [
                "ActiveDirectory",
                "Connection",
                "MicrosoftAccount"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PrincipalType",
                "modelAsString": false
              }
            },
            "tenantId": {
              "description": "Tenant Id",
              "type": "string"
            },
            "objectId": {
              "description": "AAD object ID. This is userId",
              "type": "string"
            },
            "code": {
              "description": "Code that was returned during consent flow",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Resource": {
      "required": [ "location" ],
      "properties": {
        "id": {
          "description": "Resource Id",
          "type": "string"
        },
        "name": {
          "description": "Resource Name",
          "type": "string"
        },
        "kind": {
          "description": "Kind of resource",
          "type": "string"
        },
        "location": {
          "description": "Resource Location",
          "type": "string"
        },
        "type": {
          "description": "Resource type",
          "type": "string"
        },
        "tags": {
          "description": "Resource tags",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-ms-azure-resource": true
    }
  },
  "parameters": {
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Subscription Id",
      "required": true,
      "type": "string"
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "API Version",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [ "user_impersonation" ]
    }
  ]
}