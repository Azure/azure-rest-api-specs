{
  "swagger": "2.0",
  "info": {
    "version": "2016-03-01",
    "title": " API Client"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/providers/Microsoft.Web/publishingUsers/web": {
      "get": {
        "summary": "Gets publishing user",
        "description": "Gets publishing user",
        "operationId": "GetPublishingUser",
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "summary": "Updates publishing user",
        "description": "Updates publishing user",
        "operationId": "UpdatePublishingUser",
        "parameters": [
          {
            "name": "userDetails",
            "in": "body",
            "description": "Details of publishing user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Web/sourcecontrols": {
      "get": {
        "summary": "Gets the source controls available for Azure websites.",
        "description": "Gets the source controls available for Azure websites.",
        "operationId": "ListSourceControls",
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SourceControlCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Web/sourcecontrols/{sourceControlType}": {
      "get": {
        "summary": "Gets source control token",
        "description": "Gets source control token",
        "operationId": "GetSourceControl",
        "parameters": [
          {
            "name": "sourceControlType",
            "in": "path",
            "description": "Type of source control",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SourceControl"
            }
          }
        }
      },
      "put": {
        "summary": "Updates source control token",
        "description": "Updates source control token",
        "operationId": "UpdateSourceControl",
        "parameters": [
          {
            "name": "sourceControlType",
            "in": "path",
            "description": "Type of source control",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestMessage",
            "in": "body",
            "description": "Source control token information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SourceControl"
            }
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SourceControl"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/checknameavailability": {
      "post": {
        "summary": "Check if a resource name is available.",
        "description": "Check if a resource name is available.",
        "operationId": "CheckNameAvailability",
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Name availability request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceNameAvailabilityRequest"
            },
            "x-ms-client-flatten": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceNameAvailability"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/deploymentLocations": {
      "get": {
        "summary": "Gets list of available geo regions plus ministamps",
        "description": "Gets list of available geo regions plus ministamps",
        "operationId": "GetSubscriptionDeploymentLocations",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLocations"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/geoRegions": {
      "get": {
        "summary": "Get a list of available geographical regions.",
        "description": "Get a list of available geographical regions.",
        "operationId": "ListGeoRegions",
        "parameters": [
          {
            "name": "sku",
            "in": "query",
            "description": "Name of SKU used to filter the regions.",
            "type": "string",
            "enum": [
              "Free",
              "Shared",
              "Basic",
              "Standard",
              "Premium",
              "PremiumV2",
              "Dynamic",
              "Isolated"
            ],
            "x-ms-enum": {
              "name": "SkuName",
              "modelAsString": true
            }
          },
          {
            "name": "linuxWorkersEnabled",
            "in": "query",
            "description": "Specify <code>true</code> if you want to filter to only regions that support Linux workers.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GeoRegionCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/premieraddonoffers": {
      "get": {
        "summary": "List all premier add-on offers.",
        "description": "List all premier add-on offers.",
        "operationId": "ListPremierAddOnOffers",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PremierAddOnOfferCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/skus": {
      "get": {
        "summary": "List all SKUs.",
        "description": "List all SKUs.",
        "operationId": "ListSkus",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SkuInfos"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/verifyHostingEnvironmentVnet": {
      "post": {
        "summary": "Verifies if this VNET is compatible with an App Service Environment by analyzing the Network Security Group rules.",
        "description": "Verifies if this VNET is compatible with an App Service Environment by analyzing the Network Security Group rules.",
        "operationId": "VerifyHostingEnvironmentVnet",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "VNET information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VnetParameters"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VnetValidationFailureDetails"
            }
          }
        },
        "x-ms-examples": {
          "VerifyHostingEnvironmentVnet": {
            "$ref": "./examples/VerifyHostingEnvironmentVnet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/moveResources": {
      "post": {
        "summary": "Move resources between resource groups.",
        "description": "Move resources between resource groups.",
        "operationId": "Move",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "moveResourceEnvelope",
            "in": "body",
            "description": "Object that represents the resource to move.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmMoveResourceEnvelope"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/validate": {
      "post": {
        "summary": "Validate if a resource can be created.",
        "description": "Validate if a resource can be created.",
        "operationId": "Validate",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "validateRequest",
            "in": "body",
            "description": "Request with the resources to validate.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ValidateResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/validateMoveResources": {
      "post": {
        "summary": "Validate whether a resource can be moved.",
        "description": "Validate whether a resource can be moved.",
        "operationId": "ValidateMove",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "moveResourceEnvelope",
            "in": "body",
            "description": "Object that represents the resource to move.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmMoveResourceEnvelope"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    }
  },
  "definitions": {
    "AppServiceEnvironment": {
      "description": "Description of an App Service Environment.",
      "required": [
        "name",
        "location",
        "virtualNetwork",
        "workerPools"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the App Service Environment.",
          "type": "string"
        },
        "location": {
          "description": "Location of the App Service Environment, e.g. \"West US\".",
          "type": "string"
        },
        "provisioningState": {
          "description": "Provisioning state of the App Service Environment.",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "InProgress",
            "Deleting"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": false
          }
        },
        "status": {
          "description": "Current status of the App Service Environment.",
          "enum": [
            "Preparing",
            "Ready",
            "Scaling",
            "Deleting"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "HostingEnvironmentStatus",
            "modelAsString": false
          }
        },
        "vnetName": {
          "description": "Name of the Virtual Network for the App Service Environment.",
          "type": "string"
        },
        "vnetResourceGroupName": {
          "description": "Resource group of the Virtual Network.",
          "type": "string"
        },
        "vnetSubnetName": {
          "description": "Subnet of the Virtual Network.",
          "type": "string"
        },
        "virtualNetwork": {
          "$ref": "#/definitions/VirtualNetworkProfile",
          "description": "Description of the Virtual Network."
        },
        "internalLoadBalancingMode": {
          "description": "Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment.",
          "enum": [
            "None",
            "Web",
            "Publishing"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InternalLoadBalancingMode",
            "modelAsString": false
          }
        },
        "multiSize": {
          "description": "Front-end VM size, e.g. \"Medium\", \"Large\".",
          "type": "string"
        },
        "multiRoleCount": {
          "format": "int32",
          "description": "Number of front-end instances.",
          "type": "integer"
        },
        "workerPools": {
          "description": "Description of worker pools with worker size IDs, VM sizes, and number of workers in each pool.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkerPool"
          }
        },
        "ipsslAddressCount": {
          "format": "int32",
          "description": "Number of IP SSL addresses reserved for the App Service Environment.",
          "type": "integer"
        },
        "databaseEdition": {
          "description": "Edition of the metadata database for the App Service Environment, e.g. \"Standard\".",
          "type": "string",
          "readOnly": true
        },
        "databaseServiceObjective": {
          "description": "Service objective of the metadata database for the App Service Environment, e.g. \"S0\".",
          "type": "string",
          "readOnly": true
        },
        "upgradeDomains": {
          "format": "int32",
          "description": "Number of upgrade domains of the App Service Environment.",
          "type": "integer",
          "readOnly": true
        },
        "subscriptionId": {
          "description": "Subscription of the App Service Environment.",
          "type": "string",
          "readOnly": true
        },
        "dnsSuffix": {
          "description": "DNS suffix of the App Service Environment.",
          "type": "string"
        },
        "lastAction": {
          "description": "Last deployment action on the App Service Environment.",
          "type": "string",
          "readOnly": true
        },
        "lastActionResult": {
          "description": "Result of the last deployment action on the App Service Environment.",
          "type": "string",
          "readOnly": true
        },
        "allowedMultiSizes": {
          "description": "List of comma separated strings describing which VM sizes are allowed for front-ends.",
          "type": "string",
          "readOnly": true
        },
        "allowedWorkerSizes": {
          "description": "List of comma separated strings describing which VM sizes are allowed for workers.",
          "type": "string",
          "readOnly": true
        },
        "maximumNumberOfMachines": {
          "format": "int32",
          "description": "Maximum number of VMs in the App Service Environment.",
          "type": "integer",
          "readOnly": true
        },
        "vipMappings": {
          "description": "Description of IP SSL mapping for the App Service Environment.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualIPMapping"
          },
          "readOnly": true
        },
        "environmentCapacities": {
          "description": "Current total, used, and available worker capacities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StampCapacity"
          },
          "readOnly": true
        },
        "networkAccessControlList": {
          "description": "Access control list for controlling traffic to the App Service Environment.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkAccessControlEntry"
          }
        },
        "environmentIsHealthy": {
          "description": "True/false indicating whether the App Service Environment is healthy.",
          "type": "boolean",
          "readOnly": true
        },
        "environmentStatus": {
          "description": "Detailed message about with results of the last check of the App Service Environment.",
          "type": "string",
          "readOnly": true
        },
        "resourceGroup": {
          "description": "Resource group of the App Service Environment.",
          "type": "string",
          "readOnly": true
        },
        "frontEndScaleFactor": {
          "format": "int32",
          "description": "Scale factor for front-ends.",
          "type": "integer"
        },
        "defaultFrontEndScaleFactor": {
          "format": "int32",
          "description": "Default Scale Factor for FrontEnds.",
          "type": "integer",
          "readOnly": true
        },
        "apiManagementAccountId": {
          "description": "API Management Account associated with the App Service Environment.",
          "type": "string"
        },
        "suspended": {
          "description": "<code>true</code> if the App Service Environment is suspended; otherwise, <code>false</code>. The environment can be suspended, e.g. when the management endpoint is no longer available\n (most likely because NSG blocked the incoming traffic).",
          "type": "boolean"
        },
        "dynamicCacheEnabled": {
          "description": "True/false indicating whether the App Service Environment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available\n(most likely because NSG blocked the incoming traffic).",
          "type": "boolean"
        },
        "clusterSettings": {
          "description": "Custom settings for changing the behavior of the App Service Environment.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          }
        },
        "userWhitelistedIpRanges": {
          "description": "User added ip ranges to whitelist on ASE db",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Capability": {
      "description": "Describes the capabilities/features allowed for a specific SKU.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the SKU capability.",
          "type": "string"
        },
        "value": {
          "description": "Value of the SKU capability.",
          "type": "string"
        },
        "reason": {
          "description": "Reason of the SKU capability.",
          "type": "string"
        }
      }
    },
    "CsmMoveResourceEnvelope": {
      "description": "Object with a list of the resources that need to be moved and the resource group they should be moved to.",
      "type": "object",
      "properties": {
        "targetResourceGroup": {
          "maxLength": 90,
          "minLength": 1,
          "pattern": " ^[-\\w\\._\\(\\)]+[^\\.]$",
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DeploymentLocations": {
      "description": "List of available locations (regions or App Service Environments) for\ndeployment of App Service resources.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "Available regions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoRegion"
          }
        },
        "hostingEnvironments": {
          "description": "Available App Service Environments with full descriptions of the environments.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppServiceEnvironment"
          }
        },
        "hostingEnvironmentDeploymentInfos": {
          "description": "Available App Service Environments with basic information.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HostingEnvironmentDeploymentInfo"
          }
        }
      }
    },
    "GeoRegion": {
      "description": "Geographical region.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "GeoRegion resource specific properties",
          "properties": {
            "name": {
              "description": "Region name.",
              "type": "string",
              "readOnly": true
            },
            "description": {
              "description": "Region description.",
              "type": "string",
              "readOnly": true
            },
            "displayName": {
              "description": "Display name for region.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "GeoRegionCollection": {
      "description": "Collection of geographical regions.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoRegion"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "GlobalCsmSkuDescription": {
      "description": "A Global SKU Description.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the resource SKU.",
          "type": "string"
        },
        "tier": {
          "description": "Service Tier of the resource SKU.",
          "type": "string"
        },
        "size": {
          "description": "Size specifier of the resource SKU.",
          "type": "string"
        },
        "family": {
          "description": "Family code of the resource SKU.",
          "type": "string"
        },
        "capacity": {
          "$ref": "#/definitions/SkuCapacity",
          "description": "Min, max, and default scale values of the SKU."
        },
        "locations": {
          "description": "Locations of the SKU.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "capabilities": {
          "description": "Capabilities of the SKU, e.g., is traffic manager enabled?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Capability"
          }
        }
      }
    },
    "HostingEnvironmentDeploymentInfo": {
      "description": "Information needed to create resources on an App Service Environment.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the App Service Environment.",
          "type": "string"
        },
        "location": {
          "description": "Location of the App Service Environment.",
          "type": "string"
        }
      }
    },
    "NameValuePair": {
      "description": "Name value pair.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Pair name.",
          "type": "string"
        },
        "value": {
          "description": "Pair value.",
          "type": "string"
        }
      }
    },
    "NetworkAccessControlEntry": {
      "description": "Network access control entry.",
      "type": "object",
      "properties": {
        "action": {
          "description": "Action object.",
          "enum": [
            "Permit",
            "Deny"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AccessControlEntryAction",
            "modelAsString": false
          }
        },
        "description": {
          "description": "Description.",
          "type": "string"
        },
        "order": {
          "format": "int32",
          "description": "Order of precedence.",
          "type": "integer"
        },
        "remoteSubnet": {
          "description": "Remote subnet.",
          "type": "string"
        }
      }
    },
    "PremierAddOnOffer": {
      "description": "Premier add-on offer.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "PremierAddOnOffer resource specific properties",
          "properties": {
            "sku": {
              "description": "SKU.",
              "type": "string"
            },
            "product": {
              "description": "Product.",
              "type": "string"
            },
            "vendor": {
              "description": "Vendor.",
              "type": "string"
            },
            "name": {
              "description": "Name.",
              "type": "string"
            },
            "promoCodeRequired": {
              "description": "<code>true</code> if promotion code is required; otherwise, <code>false</code>.",
              "type": "boolean"
            },
            "quota": {
              "format": "int32",
              "description": "Quota.",
              "type": "integer"
            },
            "webHostingPlanRestrictions": {
              "description": "App Service plans this offer is restricted to.",
              "enum": [
                "None",
                "Free",
                "Shared",
                "Basic",
                "Standard",
                "Premium"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AppServicePlanRestrictions",
                "modelAsString": false
              }
            },
            "privacyPolicyUrl": {
              "description": "Privacy policy URL.",
              "type": "string"
            },
            "legalTermsUrl": {
              "description": "Legal terms URL.",
              "type": "string"
            },
            "marketplacePublisher": {
              "description": "Marketplace publisher.",
              "type": "string"
            },
            "marketplaceOffer": {
              "description": "Marketplace offer.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "PremierAddOnOfferCollection": {
      "description": "Collection of premier add-on offers.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierAddOnOffer"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "ProxyOnlyResource": {
      "description": "Azure proxy only resource. This resource is not tracked by Azure Resource Manager.",
      "properties": {
        "id": {
          "description": "Resource Id.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource Name.",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "description": "Kind of resource.",
          "type": "string"
        },
        "type": {
          "description": "Resource type.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceNameAvailability": {
      "description": "Information regarding availbility of a resource name.",
      "type": "object",
      "properties": {
        "nameAvailable": {
          "description": "<code>true</code> indicates name is valid and available. <code>false</code> indicates the name is invalid, unavailable, or both.",
          "type": "boolean"
        },
        "reason": {
          "description": "<code>Invalid</code> indicates the name provided does not match Azure App Service naming requirements. <code>AlreadyExists</code> indicates that the name is already in use and is therefore unavailable.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InAvailabilityReasonType",
            "modelAsString": true
          }
        },
        "message": {
          "description": "If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming requirements so that the user can select a valid name. If reason == AlreadyExists, explain that resource name is already in use, and direct them to select a different name.",
          "type": "string"
        }
      }
    },
    "ResourceNameAvailabilityRequest": {
      "description": "Resource name availability request content.",
      "required": [
        "name",
        "type"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name to verify.",
          "type": "string"
        },
        "type": {
          "description": "Resource type used for verification.",
          "enum": [
            "Site",
            "Slot",
            "HostingEnvironment"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CheckNameResourceTypes",
            "modelAsString": true
          }
        },
        "isFqdn": {
          "description": "Is fully qualified domain name.",
          "type": "boolean"
        }
      }
    },
    "SkuCapacity": {
      "description": "Description of the App Service plan scale options.",
      "type": "object",
      "properties": {
        "minimum": {
          "format": "int32",
          "description": "Minimum number of workers for this App Service plan SKU.",
          "type": "integer"
        },
        "maximum": {
          "format": "int32",
          "description": "Maximum number of workers for this App Service plan SKU.",
          "type": "integer"
        },
        "default": {
          "format": "int32",
          "description": "Default number of workers for this App Service plan SKU.",
          "type": "integer"
        },
        "scaleType": {
          "description": "Available scale configurations for an App Service plan.",
          "type": "string"
        }
      }
    },
    "SkuInfos": {
      "description": "Collection of SKU information.",
      "type": "object",
      "properties": {
        "resourceType": {
          "description": "Resource type that this SKU applies to.",
          "type": "string"
        },
        "skus": {
          "description": "List of SKUs the subscription is able to use.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GlobalCsmSkuDescription"
          }
        }
      }
    },
    "SourceControl": {
      "description": "The source control OAuth token.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SourceControl resource specific properties",
          "properties": {
            "name": {
              "description": "Name or source control type.",
              "type": "string"
            },
            "token": {
              "description": "OAuth access token.",
              "type": "string"
            },
            "tokenSecret": {
              "description": "OAuth access token secret.",
              "type": "string"
            },
            "refreshToken": {
              "description": "OAuth refresh token.",
              "type": "string"
            },
            "expirationTime": {
              "format": "date-time",
              "description": "OAuth token expiration.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SourceControlCollection": {
      "description": "Collection of source controls.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SourceControl"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "StampCapacity": {
      "description": "Stamp capacity information.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the stamp.",
          "type": "string"
        },
        "availableCapacity": {
          "format": "int64",
          "description": "Available capacity (# of machines, bytes of storage etc...).",
          "type": "integer"
        },
        "totalCapacity": {
          "format": "int64",
          "description": "Total capacity (# of machines, bytes of storage etc...).",
          "type": "integer"
        },
        "unit": {
          "description": "Name of the unit.",
          "type": "string"
        },
        "computeMode": {
          "description": "Shared/dedicated workers.",
          "enum": [
            "Shared",
            "Dedicated",
            "Dynamic"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ComputeModeOptions",
            "modelAsString": false
          }
        },
        "workerSize": {
          "description": "Size of the machines.",
          "enum": [
            "Default",
            "Small",
            "Medium",
            "Large",
            "D1",
            "D2",
            "D3"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "WorkerSizeOptions",
            "modelAsString": false
          }
        },
        "workerSizeId": {
          "format": "int32",
          "description": "Size ID of machines: \n0 - Small\n1 - Medium\n2 - Large",
          "type": "integer"
        },
        "excludeFromCapacityAllocation": {
          "description": "If <code>true</code>, it includes basic apps.\nBasic apps are not used for capacity allocation.",
          "type": "boolean"
        },
        "isApplicableForAllComputeModes": {
          "description": "<code>true</code> if capacity is applicable for all apps; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "siteMode": {
          "description": "Shared or Dedicated.",
          "type": "string"
        }
      }
    },
    "User": {
      "description": "User crendentials used for publishing activity.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "User resource specific properties",
          "required": [
            "publishingUserName"
          ],
          "properties": {
            "name": {
              "description": "Username",
              "type": "string",
              "x-ms-client-name": "UserName"
            },
            "publishingUserName": {
              "description": "Username used for publishing.",
              "type": "string"
            },
            "publishingPassword": {
              "format": "password",
              "description": "Password used for publishing.",
              "type": "string"
            },
            "publishingPasswordHash": {
              "format": "password",
              "description": "Password hash used for publishing.",
              "type": "string"
            },
            "publishingPasswordHashSalt": {
              "format": "password",
              "description": "Password hash salt used for publishing.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ValidateProperties": {
      "description": "App properties used for validation.",
      "type": "object",
      "properties": {
        "serverFarmId": {
          "description": "ARM resource ID of an App Service plan that would host the app.",
          "type": "string"
        },
        "skuName": {
          "description": "Name of the target SKU for the App Service plan.",
          "type": "string"
        },
        "needLinuxWorkers": {
          "description": "<code>true</code> if App Service plan is for Linux workers; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "isSpot": {
          "description": "<code>true</code> if App Service plan is for Spot instances; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "capacity": {
          "format": "int32",
          "description": "Target capacity of the App Service plan (number of VM's).",
          "minimum": 1,
          "type": "integer"
        },
        "hostingEnvironment": {
          "description": "Name of App Service Environment where app or App Service plan should be created.",
          "type": "string"
        }
      }
    },
    "ValidateRequest": {
      "description": "Resource validation request content.",
      "required": [
        "name",
        "type",
        "location",
        "properties"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name to verify.",
          "type": "string"
        },
        "type": {
          "description": "Resource type used for verification.",
          "enum": [
            "ServerFarm",
            "Site"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ValidateResourceTypes",
            "modelAsString": true
          }
        },
        "location": {
          "description": "Expected location of the resource.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/ValidateProperties",
          "description": "Properties of the resource to validate.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ValidateResponse": {
      "description": "Describes the result of resource validation.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Result of validation.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/ValidateResponseError",
          "description": "Error details for the case when validation fails."
        }
      }
    },
    "ValidateResponseError": {
      "description": "Error details for when validation fails.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Validation error code.",
          "type": "string"
        },
        "message": {
          "description": "Validation error message.",
          "type": "string"
        }
      }
    },
    "VirtualIPMapping": {
      "description": "Virtual IP mapping.",
      "type": "object",
      "properties": {
        "virtualIP": {
          "description": "Virtual IP address.",
          "type": "string"
        },
        "internalHttpPort": {
          "format": "int32",
          "description": "Internal HTTP port.",
          "type": "integer"
        },
        "internalHttpsPort": {
          "format": "int32",
          "description": "Internal HTTPS port.",
          "type": "integer"
        },
        "inUse": {
          "description": "Is virtual IP mapping in use.",
          "type": "boolean"
        }
      }
    },
    "VirtualNetworkProfile": {
      "description": "Specification for using a Virtual Network.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource id of the Virtual Network.",
          "type": "string"
        },
        "name": {
          "description": "Name of the Virtual Network (read-only).",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Resource type of the Virtual Network (read-only).",
          "type": "string",
          "readOnly": true
        },
        "subnet": {
          "description": "Subnet within the Virtual Network.",
          "type": "string"
        }
      }
    },
    "VnetParameters": {
      "description": "The required set of inputs to validate a VNET",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetParameters resource specific properties",
          "properties": {
            "vnetResourceGroup": {
              "description": "The Resource Group of the VNET to be validated",
              "type": "string"
            },
            "vnetName": {
              "description": "The name of the VNET to be validated",
              "type": "string"
            },
            "vnetSubnetName": {
              "description": "The subnet name to be validated",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "VnetValidationFailureDetails": {
      "description": "A class that describes the reason for a validation failure.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetValidationFailureDetails resource specific properties",
          "properties": {
            "failed": {
              "description": "A flag describing whether or not validation failed.",
              "type": "boolean"
            },
            "failedTests": {
              "description": "A list of tests that failed in the validation.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/VnetValidationTestFailure"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "VnetValidationTestFailure": {
      "description": "A class that describes a test that failed during NSG and UDR validation.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetValidationTestFailure resource specific properties",
          "properties": {
            "testName": {
              "description": "The name of the test that failed.",
              "type": "string"
            },
            "details": {
              "description": "The details of what caused the failure, e.g. the blocking rule name, etc.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkerPool": {
      "description": "Worker pool of an App Service Environment.",
      "type": "object",
      "properties": {
        "workerSizeId": {
          "format": "int32",
          "description": "Worker size ID for referencing this worker pool.",
          "type": "integer"
        },
        "computeMode": {
          "description": "Shared or dedicated app hosting.",
          "enum": [
            "Shared",
            "Dedicated",
            "Dynamic"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ComputeModeOptions",
            "modelAsString": false
          }
        },
        "workerSize": {
          "description": "VM size of the worker pool instances.",
          "type": "string"
        },
        "workerCount": {
          "format": "int32",
          "description": "Number of instances in the worker pool.",
          "type": "integer"
        },
        "instanceNames": {
          "description": "Names of all instances in the worker pool (read only).",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    }
  },
  "parameters": {
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
      "required": true,
      "type": "string"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "Name of the resource group to which the resource belongs.",
      "required": true,
      "type": "string",
      "maxLength": 90,
      "minLength": 1,
      "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
      "x-ms-parameter-location": "method"
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "API Version",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}
