{
  "swagger": "2.0",
  "info": {
    "version": "2021-02-01",
    "title": "SiteCertificates API Client"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/certificates": {
      "get": {
        "tags": [
          "SiteCertificates"
        ],
        "summary": "Get all certificates in a resource group under a site.",
        "operationId": "SiteCertificates_List",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/CertificateCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Certificates by resource group": {
            "$ref": "./examples/ListCertificatesByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/certificates/{name}": {
      "get": {
        "tags": [
          "SiteCertificates"
        ],
        "summary": "Get a certificate belonging to a given site.",
        "operationId": "SiteCertificates_Get",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Certificate"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Certificate": {
            "$ref": "./examples/GetCertificate.json"
          }
        }
      },
      "put": {
        "tags": [
          "SiteCertificates"
        ],
        "summary": "Create or update a certificate under a given site.",
        "description": "Description for Create or update a certificate.",
        "operationId": "SiteCertificates_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateEnvelope",
            "in": "body",
            "description": "Details of certificate, if it exists already.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Certificate"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/Certificate"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Or Update Certificate": {
            "$ref": "./examples/CreateOrUpdateCertificate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "SiteCertificates"
        ],
        "summary": "Delete a certificate from the site.",
        "operationId": "SiteCertificates_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted certificate."
          },
          "204": {
            "description": "Certificate does not exist."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Certificate": {
            "$ref": "./examples/DeleteCertificate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "SiteCertificates"
        ],
        "summary": "Create or update a certificate under a given site.",
        "description": "Description for Create or update a certificate.",
        "operationId": "SiteCertificates_Update",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateEnvelope",
            "in": "body",
            "description": "Details of certificate, if it exists already.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CertificatePatchResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/Certificate"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch Certificate": {
            "$ref": "./examples/PatchCertificate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/certificates/{name}/hostNameBindings": {
      "get": {
        "tags": [
          "SiteCertificates"
        ],
        "summary": "Gets all hostname bindings the certificate is used in for a given site.",
        "operationId": "SiteCertificates_ListHostnameBindings",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HostNameBindingCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List hostname bindings using certificate": {
            "$ref": "./examples/ListHostnameBindingsOfCertificate.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slot}/certificates": {
      "get": {
        "tags": [
          "SiteCertificates"
        ],
        "summary": "Get all certificates in a resource group for a given site and a deployment slot.",
        "operationId": "SiteCertificates_ListSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will create a binding for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/CertificateCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Certificates by resource group": {
            "$ref": "./examples/ListCertificatesByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slot}/certificates/{name}": {
      "get": {
        "tags": [
          "SiteCertificates"
        ],
        "summary": "Get a certificate for a given site and deployment slot.",
        "operationId": "SiteCertificates_GetSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will create a binding for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Certificate"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Certificate": {
            "$ref": "./examples/GetCertificate.json"
          }
        }
      },
      "put": {
        "tags": [
          "SiteCertificates"
        ],
        "summary": "Create or update a certificate in a given site and deployment slot.",
        "description": "Description for Create or update a certificate.",
        "operationId": "SiteCertificates_CreateOrUpdateSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateEnvelope",
            "in": "body",
            "description": "Details of certificate, if it exists already.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Certificate"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will create a binding for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/Certificate"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Or Update Certificate": {
            "$ref": "./examples/CreateOrUpdateCertificate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "SiteCertificates"
        ],
        "summary": "Delete a certificate for a given site and deployment slot.",
        "operationId": "SiteCertificates_DeleteSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will create a binding for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted certificate."
          },
          "204": {
            "description": "Certificate does not exist."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Certificate": {
            "$ref": "./examples/DeleteCertificate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "SiteCertificates"
        ],
        "summary": "Create or update a certificate for a site and deployment slot.",
        "description": "Description for Create or update a certificate.",
        "operationId": "SiteCertificates_UpdateSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateEnvelope",
            "in": "body",
            "description": "Details of certificate, if it exists already.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CertificatePatchResource"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will create a binding for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/Certificate"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch Certificate": {
            "$ref": "./examples/PatchCertificate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slot}/certificates/{name}/hostNameBindings": {
      "get": {
        "tags": [
          "SiteCertificates"
        ],
        "summary": "Gets all hostname bindings the certificate is used in for a given site and deployment slot.",
        "operationId": "SiteCertificates_ListHostnameBindingsSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will create a binding for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HostNameBindingCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List hostname bindings using certificate": {
            "$ref": "./examples/ListHostnameBindingsOfCertificate.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "CertificateCollection": {
      "description": "Collection of certificates",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Certificate"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources",
          "type": "string"
        }
      }
    },
    "Certificate": {
      "description": "App certificate",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "properties": {
            "friendlyName": {
              "description": "Friendly name of the certificate",
              "type": "string"
            },
            "subjectName": {
              "description": "Subject name of the certificate",
              "type": "string"
            },
            "hostNames": {
              "description": "Host names the certificate applies to",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "pfxBlob": {
              "description": "Pfx blob",
              "type": "string"
            },
            "siteName": {
              "description": "App name",
              "type": "string"
            },
            "selfLink": {
              "description": "Self link",
              "type": "string"
            },
            "issuer": {
              "description": "Certificate issuer",
              "type": "string"
            },
            "issueDate": {
              "format": "date-time",
              "description": "Certificate issue Date",
              "type": "string"
            },
            "expirationDate": {
              "format": "date-time",
              "description": "Certificate expiration date",
              "type": "string"
            },
            "password": {
              "description": "Certificate password",
              "type": "string"
            },
            "thumbprint": {
              "description": "Certificate thumbprint",
              "type": "string"
            },
            "valid": {
              "description": "Is the certificate valid?",
              "type": "boolean"
            },
            "cerBlob": {
              "description": "Raw bytes of .cer file",
              "type": "string"
            },
            "publicKeyHash": {
              "description": "Public key hash",
              "type": "string"
            },
            "hostingEnvironmentProfile": {
              "$ref": "./CommonDefinitions.json#/definitions/HostingEnvironmentProfile",
              "description": "Specification for the hosting environment (App Service Environment) to use for the certificate"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "CertificatePatchResource": {
      "description": "ARM resource for a certificate.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "CertificatePatchResource resource specific properties",
          "required": [
            "password"
          ],
          "properties": {
            "friendlyName": {
              "description": "Friendly name of the certificate.",
              "type": "string",
              "readOnly": true
            },
            "subjectName": {
              "description": "Subject name of the certificate.",
              "type": "string",
              "readOnly": true
            },
            "hostNames": {
              "description": "Host names the certificate applies to.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "pfxBlob": {
              "format": "byte",
              "description": "Pfx blob.",
              "type": "string"
            },
            "siteName": {
              "description": "App name.",
              "type": "string",
              "readOnly": true
            },
            "selfLink": {
              "description": "Self link.",
              "type": "string",
              "readOnly": true
            },
            "issuer": {
              "description": "Certificate issuer.",
              "type": "string",
              "readOnly": true
            },
            "issueDate": {
              "format": "date-time",
              "description": "Certificate issue Date.",
              "type": "string",
              "readOnly": true
            },
            "expirationDate": {
              "format": "date-time",
              "description": "Certificate expiration date.",
              "type": "string",
              "readOnly": true
            },
            "password": {
              "description": "Certificate password.",
              "type": "string",
              "x-ms-mutability": [
                "create"
              ]
            },
            "thumbprint": {
              "description": "Certificate thumbprint.",
              "type": "string",
              "readOnly": true
            },
            "valid": {
              "description": "Is the certificate valid?.",
              "type": "boolean",
              "readOnly": true
            },
            "cerBlob": {
              "format": "byte",
              "description": "Raw bytes of .cer file",
              "type": "string",
              "readOnly": true
            },
            "publicKeyHash": {
              "description": "Public key hash.",
              "type": "string",
              "readOnly": true
            },
            "hostingEnvironmentProfile": {
              "$ref": "./CommonDefinitions.json#/definitions/HostingEnvironmentProfile",
              "description": "Specification for the App Service Environment to use for the certificate.",
              "readOnly": true
            },
            "keyVaultId": {
              "description": "Key Vault Csm resource Id.",
              "type": "string"
            },
            "keyVaultSecretName": {
              "description": "Key Vault secret name.",
              "type": "string"
            },
            "keyVaultSecretStatus": {
              "description": "Status of the Key Vault secret.",
              "enum": [
                "Initialized",
                "WaitingOnCertificateOrder",
                "Succeeded",
                "CertificateOrderFailed",
                "OperationNotPermittedOnKeyVault",
                "AzureServiceUnauthorizedToAccessKeyVault",
                "KeyVaultDoesNotExist",
                "KeyVaultSecretDoesNotExist",
                "UnknownError",
                "ExternalPrivateKey",
                "Unknown"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "KeyVaultSecretStatus",
                "modelAsString": false
              }
            },
            "serverFarmId": {
              "description": "Resource ID of the associated App Service plan, formatted as: \"/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}\".",
              "type": "string"
            },
            "canonicalName": {
              "description": "CNAME of the certificate to be issued via free certificate",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "HostNameBindingCollection": {
      "description": "Collection of host name bindings",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HostNameBinding"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources",
          "type": "string"
        }
      }
    },
    "HostNameBinding": {
      "description": "A host name binding object",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "properties": {
            "name": {
              "description": "Hostname",
              "type": "string"
            },
            "siteName": {
              "description": "Web app name",
              "type": "string"
            },
            "domainId": {
              "description": "Fully qualified ARM domain resource URI",
              "type": "string"
            },
            "azureResourceName": {
              "description": "Azure resource name",
              "type": "string"
            },
            "azureResourceType": {
              "description": "Azure resource type",
              "enum": [
                "Website",
                "TrafficManager"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AzureResourceType",
                "modelAsString": false
              }
            },
            "customHostNameDnsRecordType": {
              "description": "Custom DNS record type",
              "enum": [
                "CName",
                "A"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "CustomHostNameDnsRecordType",
                "modelAsString": false
              }
            },
            "hostNameType": {
              "description": "Host name type",
              "enum": [
                "Verified",
                "Managed"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "HostNameType",
                "modelAsString": false
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    }
  },
  "parameters": {
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
      "required": true,
      "type": "string"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "Name of the resource group to which the resource belongs.",
      "required": true,
      "type": "string",
      "maxLength": 90,
      "minLength": 1,
      "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
      "x-ms-parameter-location": "method"
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "API Version",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}
