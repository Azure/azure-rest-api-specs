{
  "swagger": "2.0",
  "info": {
    "version": "2021-03-01",
    "title": "ContainerApps API Client"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/containerApps": {
      "get": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "Get the Container Apps in a given subscription.",
        "operationId": "ContainerApps_ListBySubscription",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContainerAppCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Container Apps by resource group": {
            "$ref": "./examples/ListContainerAppsBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/containerApps": {
      "get": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "Get the Container Apps in a given resource group.",
        "operationId": "ContainerApps_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContainerAppCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Container Apps by resource group": {
            "$ref": "./examples/ListContainerAppsByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/containerApps/{name}": {
      "get": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "Get the properties of a Container App.",
        "operationId": "ContainerApps_Get",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/ContainerApp"
            }
          },
          "404": {
            "description": "Not found.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Container App": {
            "$ref": "./examples/GetContainerApp.json"
          }
        }
      },
      "put": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "Create or update a Container App.",
        "description": "Description for Create or update a Container App.",
        "operationId": "ContainerApps_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerAppEnvelope",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContainerApp"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "No change performed on the Container App.",
            "schema": {
              "$ref": "#/definitions/ContainerApp"
            }
          },
          "201": {
            "description": "Container App create or update has been started.",
            "schema": {
              "$ref": "#/definitions/ContainerApp"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Container App": {
            "$ref": "./examples/CreateOrUpdateContainerApp.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "Delete a Container App.",
        "description": "Description for Delete a Container App.",
        "operationId": "ContainerApps_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Container App deleted successfully."
          },
          "202": {
            "description": "Delete operation is in progress."
          },
          "204": {
            "description": "Container App does not exist."
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Container App": {
            "$ref": "./examples/DeleteContainerApp.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/containerApps/{name}/listSecrets": {
      "post": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "List secrets for a container app",
        "operationId": "ContainerApps_ListSecrets",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecretsCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Container Apps Secrets": {
            "$ref": "./examples/ListContainerAppSecrets.json"
          }
        }
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/containerApps/{name}/authSettings": {
    "get": {
      "tags": [
        "ContainerApps"
      ],
      "summary": "Gets ContainerApps' Authentication / Authorization settings",
      "description": "Description for Gets ContainerApps' Authentication / Authorization settings",
      "operationId": "ContainerApps_GetAuthSettings",
      "parameters": [
        {
          "$ref": "#/parameters/subscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/resourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/apiVersionParameter"
        },
        {
          "name": "name",
          "in": "path",
          "description": "Name of the app.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/AuthSettings"
          }
        },
        "default": {
          "description": "App Service error response.",
          "schema": {
            "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
          }
        }
      }
    },
    "put": {
      "tags": [
        "ContainerApps"
      ],
      "summary": "Updates ContainerApps' Authentication / Authorization settings",
      "description": "Description for Updates ContainerApps' Authentication / Authorization settings",
      "operationId": "ContainerApps_UpdateAuthSettings",
      "parameters": [
        {
          "$ref": "#/parameters/resourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/subscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/apiVersionParameter"
        },
        {
          "name": "name",
          "in": "path",
          "description": "Name of web app.",
          "required": true,
          "type": "string"
        },
        {
          "name": "authSettings",
          "in": "body",
          "description": "Auth settings associated with web app.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/AuthSettings"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/AuthSettings"
          }
        },
        "default": {
          "description": "App Service error response.",
          "schema": {
            "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "Configuration": {
      "description": "Non versioned Container App configuration properties that define the mutable settings of a Container app",
      "type": "object",
      "properties": {
        "secrets": {
          "description": "Collection of secrets used by a Container app",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Secret"
          }
        },
        "activeRevisionsMode": {
          "description": "ActiveRevisionsMode controls how active revisions are handled for the Container app:\n<list><item>Multiple: multiple revisions can be active. If no value if provided, this is the default</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode</item></list>",
          "enum": [
            "multiple",
            "single"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ActiveRevisionsMode",
            "modelAsString": true
          }
        },
        "ingress": {
          "$ref": "#/definitions/Ingress",
          "description": "Ingress configurations."
        },
        "registries": {
          "description": "Collection of private container registry credentials for containers used by the Container app",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegistryCredentials"
          }
        }
      }
    },
    "ContainerApp": {
      "description": "Container App.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ContainerApp resource specific properties",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the Container App.",
              "enum": [
                "InProgress",
                "Succeeded",
                "Failed",
                "Canceled"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ContainerAppProvisioningState",
                "modelAsString": true
              }
            },
            "kubeEnvironmentId": {
              "description": "Resource ID of the Container App's KubeEnvironment.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "latestRevisionName": {
              "description": "Name of the latest revision of the Container App.",
              "type": "string",
              "readOnly": true
            },
            "latestRevisionFqdn": {
              "description": "Fully Qualified Domain Name of the latest revision of the Container App.",
              "type": "string",
              "readOnly": true
            },
            "configuration": {
              "$ref": "#/definitions/Configuration",
              "description": "Non versioned Container App configuration properties."
            },
            "template": {
              "$ref": "./CommonDefinitions.json#/definitions/Template",
              "description": "Container App versioned application definition."
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ContainerAppCollection": {
      "description": "Container App collection ARM resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerApp"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SecretsCollection": {
      "description": "Container App Secrets Collection ARM resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerAppSecret"
          }
        }
      }
    },
    "Ingress": {
      "description": "Container App Ingress configuration.",
      "type": "object",
      "properties": {
        "fqdn": {
          "description": "Hostname.",
          "type": "string",
          "readOnly": true
        },
        "external": {
          "description": "Bool indicating if app exposes an external http endpoint",
          "default": false,
          "type": "boolean"
        },
        "targetPort": {
          "format": "int32",
          "description": "Target Port in containers for traffic from ingress",
          "type": "integer"
        },
        "transport": {
          "description": "Ingress transport protocol",
          "enum": [
            "auto",
            "http",
            "http2"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "IngressTransportMethod",
            "modelAsString": true
          }
        },
        "traffic": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrafficWeight"
          }
        },
        "allowInsecure": {
          "description": "Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections",
          "type": "boolean"
        }
      }
    },
    "RegistryCredentials": {
      "description": "Container App Private Registry",
      "type": "object",
      "properties": {
        "server": {
          "description": "Container Registry Server",
          "type": "string"
        },
        "username": {
          "description": "Container Registry Username",
          "type": "string"
        },
        "passwordSecretRef": {
          "description": "The name of the Secret that contains the registry login password",
          "type": "string"
        }
      }
    },
    "Secret": {
      "description": "Container App Secret.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Secret Name.",
          "type": "string"
        },
        "value": {
          "description": "Secret Value.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      }
    },
    "ContainerAppSecret": {
      "description": "Container App Secret.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Secret Name.",
          "type": "string",
          "readOnly": true
        },
        "value": {
          "description": "Secret Value.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TrafficWeight": {
      "description": "Traffic weight assigned to a revision",
      "type": "object",
      "properties": {
        "revisionName": {
          "description": "Name of a revision",
          "type": "string"
        },
        "weight": {
          "format": "int32",
          "description": "Traffic weight assigned to a revision",
          "type": "integer"
        },
        "latestRevision": {
          "description": "Indicates that the traffic weight belongs to a latest stable revision",
          "default": false,
          "type": "boolean"
        }
      }
    },
    "AuthSettings": {
      "description": "Configuration settings for the Azure App Service Authentication / Authorization V2 feature.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "AuthSettings resource specific properties",
          "type": "object",
          "properties": {
            "platform": {
              "$ref": "#/definitions/AuthPlatform",
              "description": "The configuration settings of the platform of App Service Authentication/Authorization."
            },
            "globalValidation": {
              "$ref": "#/definitions/GlobalValidation",
              "description": "The configuration settings that determines the validation flow of users using App Service Authentication/Authorization."
            },
            "identityProviders": {
              "$ref": "#/definitions/IdentityProviders",
              "description": "The configuration settings of each of the identity providers used to configure App Service Authentication/Authorization."
            },
            "login": {
              "$ref": "#/definitions/Login",
              "description": "The configuration settings of the login flow of users using App Service Authentication/Authorization."
            },
            "httpSettings": {
              "$ref": "#/definitions/HttpSettings",
              "description": "The configuration settings of the HTTP requests for authentication and authorization requests made against App Service Authentication/Authorization."
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "AuthPlatform": {
      "description": "The configuration settings of the platform of App Service Authentication/Authorization.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "runtimeVersion": {
          "description": "The RuntimeVersion of the Authentication / Authorization feature in use for the current app.\nThe setting in this value can control the behavior of certain features in the Authentication / Authorization module.",
          "type": "string"
        },
        "configFilePath": {
          "description": "The path of the config file containing auth settings if they come from a file.\nIf the path is relative, base will the site's root directory.",
          "type": "string"
        }
      }
    },
    "GlobalValidation": {
      "description": "The configuration settings that determines the validation flow of users using App Service Authentication/Authorization.",
      "type": "object",
      "properties": {
        "requireAuthentication": {
          "description": "<code>true</code> if the authentication flow is required any request is made; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "unauthenticatedClientAction": {
          "description": "The action to take when an unauthenticated client attempts to access the app.",
          "enum": [
            "RedirectToLoginPage",
            "AllowAnonymous",
            "Return401",
            "Return403"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "UnauthenticatedClientActionV2",
            "modelAsString": false
          }
        },
        "redirectToProvider": {
          "description": "The default authentication provider to use when multiple providers are configured.\nThis setting is only needed if multiple providers are configured and the unauthenticated client\naction is set to \"RedirectToLoginPage\".",
          "type": "string"
        },
        "excludedPaths": {
          "description": "The paths for which unauthenticated flow would not be redirected to the login page.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IdentityProviders": {
      "description": "The configuration settings of each of the identity providers used to configure App Service Authentication/Authorization.",
      "type": "object",
      "properties": {
        "azureActiveDirectory": {
          "$ref": "#/definitions/AzureActiveDirectory",
          "description": "The configuration settings of the Azure Active directory provider."
        },
        "facebook": {
          "$ref": "#/definitions/Facebook",
          "description": "The configuration settings of the Facebook provider."
        },
        "google": {
          "$ref": "#/definitions/Google",
          "description": "The configuration settings of the Google provider."
        },
        "twitter": {
          "$ref": "#/definitions/Twitter",
          "description": "The configuration settings of the Twitter provider."
        },
        "customOpenIdConnectProviders": {
          "description": "The map of the name of the alias of each custom Open ID Connect provider to the\nconfiguration settings of the custom Open ID Connect provider.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CustomOpenIdConnectProvider"
          }
        }
      }
    },
    "HttpSettings": {
      "description": "The configuration settings of the HTTP requests for authentication and authorization requests made against App Service Authentication/Authorization.",
      "type": "object",
      "properties": {
        "requireHttps": {
          "description": "<code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "routes": {
          "$ref": "#/definitions/HttpSettingsRoutes",
          "description": "The configuration settings of the paths HTTP requests."
        },
        "forwardProxy": {
          "$ref": "#/definitions/ForwardProxy",
          "description": "The configuration settings of a forward proxy used to make the requests."
        }
      }
    },
    "Login": {
      "description": "The configuration settings of the login flow of users using App Service Authentication/Authorization.",
      "type": "object",
      "properties": {
        "routes": {
          "$ref": "#/definitions/LoginRoutes",
          "description": "The routes that specify the endpoints used for login and logout requests."
        },
        "tokenStore": {
          "$ref": "#/definitions/TokenStore",
          "description": "The configuration settings of the token store."
        },
        "preserveUrlFragmentsForLogins": {
          "description": "<code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "allowedExternalRedirectUrls": {
          "description": "External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.\nThis is an advanced setting typically only needed by Windows Store application backends.\nNote that URLs within the current domain are always implicitly allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cookieExpiration": {
          "$ref": "#/definitions/CookieExpiration",
          "description": "The configuration settings of the session cookie's expiration."
        },
        "nonce": {
          "$ref": "#/definitions/Nonce",
          "description": "The configuration settings of the nonce used in the login flow."
        }
      }
    },
    "CookieExpiration": {
      "description": "The configuration settings of the session cookie's expiration.",
      "type": "object",
      "properties": {
        "convention": {
          "description": "The convention used when determining the session cookie's expiration.",
          "enum": [
            "FixedTime",
            "IdentityProviderDerived"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CookieExpirationConvention",
            "modelAsString": false
          }
        },
        "timeToExpiration": {
          "description": "The time after the request is made when the session cookie should expire.",
          "type": "string"
        }
      }
    },
    "Nonce": {
      "description": "The configuration settings of the nonce used in the login flow.",
      "type": "object",
      "properties": {
        "validateNonce": {
          "description": "<code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "nonceExpirationInterval": {
          "description": "The time after the request is made when the nonce should expire.",
          "type": "string"
        }
      }
    },
    "TokenStore": {
      "description": "The configuration settings of the token store.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.\n The default is <code>false</code>.",
          "type": "boolean"
        },
        "tokenRefreshExtensionHours": {
          "format": "double",
          "description": "The number of hours after session token expiration that a session token can be used to\ncall the token refresh API. The default is 72 hours.",
          "type": "number"
        },
        "fileSystem": {
          "$ref": "#/definitions/FileSystemTokenStore",
          "description": "The configuration settings of the storage of the tokens if a file system is used."
        },
        "azureBlobStorage": {
          "$ref": "#/definitions/BlobStorageTokenStore",
          "description": "The configuration settings of the storage of the tokens if blob storage is used."
        }
      }
    },
    "FileSystemTokenStore": {
      "description": "The configuration settings of the storage of the tokens if a file system is used.",
      "type": "object",
      "properties": {
        "directory": {
          "description": "The directory in which the tokens will be stored.",
          "type": "string"
        }
      }
    },
    "BlobStorageTokenStore": {
      "description": "The configuration settings of the storage of the tokens if blob storage is used.",
      "type": "object",
      "properties": {
        "sasUrlSettingName": {
          "description": "The name of the app setting containing the SAS URL of the blob storage containing the tokens.",
          "type": "string"
        }
      }
    },
    "LoginRoutes": {
      "description": "The routes that specify the endpoints used for login and logout requests.",
      "type": "object",
      "properties": {
        "logoutEndpoint": {
          "description": "The endpoint at which a logout request should be made.",
          "type": "string"
        }
      }
    },
    "HttpSettingsRoutes": {
      "description": "The configuration settings of the paths HTTP requests.",
      "type": "object",
      "properties": {
        "apiPrefix": {
          "description": "The prefix that should precede all the authentication/authorization paths.",
          "type": "string"
        }
      }
    },
    "ForwardProxy": {
      "description": "The configuration settings of a forward proxy used to make the requests.",
      "type": "object",
      "properties": {
        "convention": {
          "description": "The convention used to determine the url of the request made.",
          "enum": [
            "NoProxy",
            "Standard",
            "Custom"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ForwardProxyConvention",
            "modelAsString": false
          }
        },
        "customHostHeaderName": {
          "description": "The name of the header containing the host of the request.",
          "type": "string"
        },
        "customProtoHeaderName": {
          "description": "The name of the header containing the scheme of the request.",
          "type": "string"
        }
      }
    },
    "AzureActiveDirectory": {
      "description": "The configuration settings of the Azure Active directory provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "$ref": "#/definitions/AzureActiveDirectoryRegistration",
          "description": "The configuration settings of the Azure Active Directory app registration."
        },
        "login": {
          "$ref": "#/definitions/AzureActiveDirectoryLogin",
          "description": "The configuration settings of the Azure Active Directory login flow."
        },
        "validation": {
          "$ref": "#/definitions/AzureActiveDirectoryValidation",
          "description": "The configuration settings of the Azure Active Directory token validation flow."
        },
        "isAutoProvisioned": {
          "description": "Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.\nThis is an internal flag primarily intended to support the Azure Management Portal. Users should not\nread or write to this property.",
          "type": "boolean"
        }
      }
    },
    "Google": {
      "description": "The configuration settings of the Google provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "$ref": "#/definitions/ClientRegistration",
          "description": "The configuration settings of the app registration for the Google provider."
        },
        "login": {
          "$ref": "#/definitions/LoginScopes",
          "description": "The configuration settings of the login flow."
        },
        "validation": {
          "$ref": "#/definitions/AllowedAudiencesValidation",
          "description": "The configuration settings of the Azure Active Directory token validation flow."
        }
      }
    },
    "Facebook": {
      "description": "The configuration settings of the Facebook provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "$ref": "#/definitions/AppRegistration",
          "description": "The configuration settings of the app registration for the Facebook provider."
        },
        "graphApiVersion": {
          "description": "The version of the Facebook api to be used while logging in.",
          "type": "string"
        },
        "login": {
          "$ref": "#/definitions/LoginScopes",
          "description": "The configuration settings of the login flow."
        }
      }
    },
    "Twitter": {
      "description": "The configuration settings of the Twitter provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "$ref": "#/definitions/TwitterRegistration",
          "description": "The configuration settings of the app registration for the Twitter provider."
        }
      }
    },
    "TwitterRegistration": {
      "description": "The configuration settings of the app registration for the Twitter provider.",
      "type": "object",
      "properties": {
        "consumerKey": {
          "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThis setting is required for enabling Twitter Sign-In.\nTwitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
          "type": "string"
        },
        "consumerSecretSettingName": {
          "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter\napplication used for sign-in.",
          "type": "string"
        }
      }
    },
    "AppRegistration": {
      "description": "The configuration settings of the app registration for providers that have app ids and app secrets",
      "type": "object",
      "properties": {
        "appId": {
          "description": "The App ID of the app used for login.",
          "type": "string"
        },
        "appSecretSettingName": {
          "description": "The app setting name that contains the app secret.",
          "type": "string"
        }
      }
    },
    "ClientRegistration": {
      "description": "The configuration settings of the app registration for providers that have client ids and client secrets",
      "type": "object",
      "properties": {
        "clientId": {
          "description": "The Client ID of the app used for login.",
          "type": "string"
        },
        "clientSecretSettingName": {
          "description": "The app setting name that contains the client secret.",
          "type": "string"
        }
      }
    },
    "LoginScopes": {
      "description": "The configuration settings of the login flow, including the scopes that should be requested.",
      "type": "object",
      "properties": {
        "scopes": {
          "description": "A list of the scopes that should be requested while authenticating.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AllowedAudiencesValidation": {
      "description": "The configuration settings of the Allowed Audiences validation flow.",
      "type": "object",
      "properties": {
        "allowedAudiences": {
          "description": "The configuration settings of the allowed list of audiences from which to validate the JWT token.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AzureActiveDirectoryLogin": {
      "description": "The configuration settings of the Azure Active Directory login flow.",
      "type": "object",
      "properties": {
        "loginParameters": {
          "description": "Login parameters to send to the OpenID Connect authorization endpoint when\na user logs in. Each parameter must be in the form \"key=value\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "disableWWWAuthenticate": {
          "description": "<code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>.",
          "type": "boolean"
        }
      }
    },
    "AzureActiveDirectoryRegistration": {
      "description": "The configuration settings of the Azure Active Directory app registration.",
      "type": "object",
      "properties": {
        "openIdIssuer": {
          "description": "The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.\nWhen using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.\nThis URI is a case-sensitive identifier for the token issuer.\nMore information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html",
          "type": "string"
        },
        "clientId": {
          "description": "The Client ID of this relying party application, known as the client_id.\nThis setting is required for enabling OpenID Connection authentication with Azure Active Directory or \nother 3rd party OpenID Connect providers.\nMore information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
          "type": "string"
        },
        "clientSecretSettingName": {
          "description": "The app setting name that contains the client secret of the relying party application.",
          "type": "string"
        },
        "clientSecretCertificateThumbprint": {
          "description": "An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret. It is also optional.",
          "type": "string"
        },
        "clientSecretCertificateSubjectAlternativeName": {
          "description": "An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional.",
          "type": "string"
        },
        "clientSecretCertificateIssuer": {
          "description": "An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional.",
          "type": "string"
        }
      }
    },
    "AzureActiveDirectoryValidation": {
      "description": "The configuration settings of the Azure Active Directory token validation flow.",
      "type": "object",
      "properties": {
        "jwtClaimChecks": {
          "$ref": "#/definitions/JwtClaimChecks",
          "description": "The configuration settings of the checks that should be made while validating the JWT Claims."
        },
        "allowedAudiences": {
          "description": "The list of audiences that can make successful authentication/authorization requests.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultAuthorizationPolicy": {
          "$ref": "#/definitions/DefaultAuthorizationPolicy",
          "description": "The configuration settings of the default authorization policy."
        }
      }
    }
  },
  "parameters": {
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
      "required": true,
      "type": "string"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "Name of the resource group to which the resource belongs.",
      "required": true,
      "type": "string",
      "maxLength": 90,
      "minLength": 1,
      "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
      "x-ms-parameter-location": "method"
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "API Version",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}
