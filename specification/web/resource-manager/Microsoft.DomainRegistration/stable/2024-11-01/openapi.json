{
  "swagger": "2.0",
  "info": {
    "title": "TopLevelDomains API Client",
    "version": "2024-11-01",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Domains"
    },
    {
      "name": "DomainOwnershipIdentifiers"
    },
    {
      "name": "TopLevelDomains"
    }
  ],
  "paths": {
    "/providers/Microsoft.DomainRegistration/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List operations": {
            "$ref": "./examples/ListOperations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/checkDomainAvailability": {
      "post": {
        "operationId": "Domains_CheckAvailability",
        "summary": "Check if a domain is available for registration.",
        "description": "Description for Check if a domain is available for registration.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "identifier",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NameIdentifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DomainAvailabilityCheckResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Check domain availability": {
            "$ref": "./examples/CheckDomainAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/domains": {
      "get": {
        "operationId": "Domains_List",
        "tags": [
          "Domains"
        ],
        "description": "Description for Get all domains in a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DomainCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List domains by subscription": {
            "$ref": "./examples/ListDomainsBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/generateSsoRequest": {
      "post": {
        "operationId": "Domains_GetControlCenterSsoRequest",
        "summary": "Generate a single sign-on request for the domain management portal.",
        "description": "Description for Generate a single sign-on request for the domain management portal.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DomainControlCenterSsoRequest"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Domain Control Center Sso Request": {
            "$ref": "./examples/GetDomainControlCenterSsoRequest.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/listDomainRecommendations": {
      "post": {
        "operationId": "Domains_ListRecommendations",
        "summary": "Get domain name recommendations based on keywords.",
        "description": "Description for Get domain name recommendations based on keywords.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DomainRecommendationSearchParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NameIdentifierCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List domain recommendations": {
            "$ref": "./examples/ListDomainRecommendations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/topLevelDomains": {
      "get": {
        "operationId": "TopLevelDomains_List",
        "tags": [
          "TopLevelDomains"
        ],
        "description": "Description for Get all top-level domains supported for registration.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TopLevelDomainCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Top Level Domains": {
            "$ref": "./examples/ListTopLevelDomains.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/topLevelDomains/{name}": {
      "get": {
        "operationId": "TopLevelDomains_Get",
        "tags": [
          "TopLevelDomains"
        ],
        "description": "Description for Get details of a top-level domain.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the top-level domain.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TopLevelDomain"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Top Level Domain": {
            "$ref": "./examples/GetTopLevelDomain.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/topLevelDomains/{name}/listAgreements": {
      "post": {
        "operationId": "TopLevelDomains_ListAgreements",
        "tags": [
          "TopLevelDomains"
        ],
        "description": "Description for Gets all legal agreements that user needs to accept before purchasing a domain.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the top-level domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "agreementOption",
            "in": "body",
            "description": "Domain agreement options.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TopLevelDomainAgreementOption"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TldLegalAgreementCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Top Level Domain Agreements": {
            "$ref": "./examples/ListTopLevelDomainAgreements.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains": {
      "get": {
        "operationId": "Domains_ListByResourceGroup",
        "tags": [
          "Domains"
        ],
        "description": "Description for Get all domains in a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DomainCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List domains by resource group": {
            "$ref": "./examples/ListDomainsByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}": {
      "get": {
        "operationId": "Domains_Get",
        "tags": [
          "Domains"
        ],
        "description": "Description for Get a domain.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Domain"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Domain": {
            "$ref": "./examples/GetDomain.json"
          }
        }
      },
      "put": {
        "operationId": "Domains_CreateOrUpdate",
        "tags": [
          "Domains"
        ],
        "description": "Description for Creates or updates a domain.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "The name of the Domain",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9][a-zA-Z0-9\\.-]+"
          },
          {
            "name": "domain",
            "in": "body",
            "description": "Domain registration information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DomainUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Domain' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Domain"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/Domain"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create App Service Domain": {
            "$ref": "./examples/CreateAppServiceDomain.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Domains_Update",
        "tags": [
          "Domains"
        ],
        "description": "Description for Creates or updates a domain.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "The name of the Domain",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9][a-zA-Z0-9\\.-]+"
          },
          {
            "name": "domain",
            "in": "body",
            "description": "Domain registration information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DomainPatchResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Domain"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/Domain"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update App Service Domain": {
            "$ref": "./examples/UpdateAppServiceDomain.json"
          }
        }
      },
      "delete": {
        "operationId": "Domains_Delete",
        "tags": [
          "Domains"
        ],
        "description": "Description for Delete a domain.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "forceHardDeleteDomain",
            "in": "query",
            "description": "Specify <code>true</code> to delete the domain immediately. The default is <code>false</code> which deletes the domain after 24 hours.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete App Service Domain": {
            "$ref": "./examples/DeleteAppServiceDomain.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}/domainOwnershipIdentifiers": {
      "get": {
        "operationId": "Domains_ListOwnershipIdentifiers",
        "tags": [
          "DomainOwnershipIdentifiers"
        ],
        "description": "Description for Lists domain ownership identifiers.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DomainOwnershipIdentifierCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Domain Ownership Identifiers": {
            "$ref": "./examples/ListDomainOwnershipIdentifiers.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}/domainOwnershipIdentifiers/{name}": {
      "get": {
        "operationId": "Domains_GetOwnershipIdentifier",
        "tags": [
          "DomainOwnershipIdentifiers"
        ],
        "description": "Description for Get ownership identifier for domain",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DomainOwnershipIdentifier"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Domain Ownership Identifier": {
            "$ref": "./examples/GetDomainOwnershipIdentifier.json"
          }
        }
      },
      "put": {
        "operationId": "Domains_CreateOrUpdateOwnershipIdentifier",
        "tags": [
          "DomainOwnershipIdentifiers"
        ],
        "description": "Description for Creates an ownership identifier for a domain or updates identifier details for an existing identifier",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainOwnershipIdentifier",
            "in": "body",
            "description": "A JSON representation of the domain ownership properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DomainOwnershipIdentifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DomainOwnershipIdentifier' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DomainOwnershipIdentifier"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create App Service Domain OwnershipIdentifier": {
            "$ref": "./examples/CreateAppServiceDomainOwnershipIdentifier.json"
          }
        }
      },
      "patch": {
        "operationId": "Domains_UpdateOwnershipIdentifier",
        "tags": [
          "DomainOwnershipIdentifiers"
        ],
        "description": "Description for Creates an ownership identifier for a domain or updates identifier details for an existing identifier",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainOwnershipIdentifier",
            "in": "body",
            "description": "A JSON representation of the domain ownership properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DomainOwnershipIdentifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DomainOwnershipIdentifier"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update App Service Domain OwnershipIdentifier": {
            "$ref": "./examples/UpdateAppServiceDomainOwnershipIdentifier.json"
          }
        }
      },
      "delete": {
        "operationId": "Domains_DeleteOwnershipIdentifier",
        "tags": [
          "DomainOwnershipIdentifiers"
        ],
        "description": "Description for Delete ownership identifier for domain",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete App Service Domain Ownership Identifier": {
            "$ref": "./examples/DeleteAppServiceDomainOwnershipIdentifier.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}/renew": {
      "post": {
        "operationId": "Domains_Renew",
        "tags": [
          "Domains"
        ],
        "description": "Description for Renew a domain.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Renew an existing domain": {
            "$ref": "./examples/RenewDomain.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}/transferOut": {
      "put": {
        "operationId": "Domains_TransferOut",
        "tags": [
          "Domains"
        ],
        "description": "Transfer out domain to another registrar",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Domain"
            }
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Transfer out domain": {
            "$ref": "./examples/TransferOutDomain.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Address": {
      "type": "object",
      "description": "Address information for domain registration.",
      "properties": {
        "address1": {
          "type": "string",
          "description": "First line of an Address."
        },
        "address2": {
          "type": "string",
          "description": "The second line of the Address. Optional."
        },
        "city": {
          "type": "string",
          "description": "The city for the address."
        },
        "country": {
          "type": "string",
          "description": "The country for the address."
        },
        "postalCode": {
          "type": "string",
          "description": "The postal code for the address."
        },
        "state": {
          "type": "string",
          "description": "The state or province for the address."
        }
      },
      "required": [
        "address1",
        "city",
        "country",
        "postalCode",
        "state"
      ]
    },
    "AzureResourceType": {
      "type": "string",
      "description": "Type of the Azure resource the hostname is assigned to.",
      "enum": [
        "Website",
        "TrafficManager"
      ],
      "x-ms-enum": {
        "name": "AzureResourceType",
        "modelAsString": false
      }
    },
    "Contact": {
      "type": "object",
      "description": "Contact information for domain registration. If 'Domain Privacy' option is not selected then the contact information is made publicly available through the Whois\ndirectories as per ICANN requirements.",
      "properties": {
        "addressMailing": {
          "$ref": "#/definitions/Address",
          "description": "Mailing address."
        },
        "email": {
          "type": "string",
          "description": "Email address."
        },
        "fax": {
          "type": "string",
          "description": "Fax number."
        },
        "jobTitle": {
          "type": "string",
          "description": "Job title."
        },
        "nameFirst": {
          "type": "string",
          "description": "First name."
        },
        "nameLast": {
          "type": "string",
          "description": "Last name."
        },
        "nameMiddle": {
          "type": "string",
          "description": "Middle name."
        },
        "organization": {
          "type": "string",
          "description": "Organization contact belongs to."
        },
        "phone": {
          "type": "string",
          "description": "Phone number."
        }
      },
      "required": [
        "email",
        "nameFirst",
        "nameLast",
        "phone"
      ]
    },
    "CustomHostNameDnsRecordType": {
      "type": "string",
      "description": "Type of the DNS record.",
      "enum": [
        "CName",
        "A"
      ],
      "x-ms-enum": {
        "name": "CustomHostNameDnsRecordType",
        "modelAsString": false
      }
    },
    "Domain": {
      "type": "object",
      "description": "Information about a domain.",
      "properties": {
        "properties": {
          "type": "object",
          "description": "Domain resource specific properties",
          "properties": {
            "contactAdmin": {
              "$ref": "#/definitions/Contact",
              "description": "Administrative contact.",
              "x-ms-mutability": [
                "create"
              ]
            },
            "contactBilling": {
              "$ref": "#/definitions/Contact",
              "description": "Billing contact.",
              "x-ms-mutability": [
                "create"
              ]
            },
            "contactRegistrant": {
              "$ref": "#/definitions/Contact",
              "description": "Registrant contact.",
              "x-ms-mutability": [
                "create"
              ]
            },
            "contactTech": {
              "$ref": "#/definitions/Contact",
              "description": "Technical contact.",
              "x-ms-mutability": [
                "create"
              ]
            },
            "registrationStatus": {
              "type": "string",
              "description": "Domain registration status.",
              "enum": [
                "Active",
                "Awaiting",
                "Cancelled",
                "Confiscated",
                "Disabled",
                "Excluded",
                "Expired",
                "Failed",
                "Held",
                "Locked",
                "Parked",
                "Pending",
                "Reserved",
                "Reverted",
                "Suspended",
                "Transferred",
                "Unknown",
                "Unlocked",
                "Unparked",
                "Updated",
                "JsonConverterFailed"
              ],
              "x-ms-enum": {
                "name": "DomainStatus",
                "modelAsString": false
              },
              "readOnly": true
            },
            "provisioningState": {
              "type": "string",
              "description": "Domain provisioning state.",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "InProgress",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": false
              },
              "readOnly": true
            },
            "nameServers": {
              "type": "array",
              "description": "Name servers.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "privacy": {
              "type": "boolean",
              "description": "<code>true</code> if domain privacy is enabled for this domain; otherwise, <code>false</code>."
            },
            "createdTime": {
              "type": "string",
              "format": "date-time",
              "description": "Domain creation timestamp.",
              "readOnly": true
            },
            "expirationTime": {
              "type": "string",
              "format": "date-time",
              "description": "Domain expiration timestamp.",
              "readOnly": true
            },
            "lastRenewedTime": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the domain was renewed last time.",
              "readOnly": true
            },
            "autoRenew": {
              "type": "boolean",
              "description": "<code>true</code> if the domain should be automatically renewed; otherwise, <code>false</code>.",
              "default": true
            },
            "readyForDnsRecordManagement": {
              "type": "boolean",
              "description": "<code>true</code> if Azure can assign this domain to App Service apps; otherwise, <code>false</code>. This value will be <code>true</code> if domain registration status is active and\nit is hosted on name servers Azure has programmatic access to.",
              "readOnly": true
            },
            "managedHostNames": {
              "type": "array",
              "description": "All hostnames derived from the domain and assigned to Azure resources.",
              "items": {
                "$ref": "#/definitions/HostName"
              },
              "readOnly": true,
              "x-ms-identifiers": [
                "name"
              ]
            },
            "consent": {
              "$ref": "#/definitions/DomainPurchaseConsent",
              "description": "Legal agreement consent.",
              "x-ms-mutability": [
                "create"
              ]
            },
            "domainNotRenewableReasons": {
              "type": "array",
              "description": "Reasons why domain is not renewable.",
              "x-ms-enum": {
                "name": "ResourceNotRenewableReason"
              },
              "items": {
                "type": "string",
                "enum": [
                  "RegistrationStatusNotSupportedForRenewal",
                  "ExpirationNotInRenewalTimeRange",
                  "SubscriptionNotActive"
                ],
                "x-ms-enum": {
                  "modelAsString": true
                }
              },
              "readOnly": true
            },
            "dnsType": {
              "type": "string",
              "description": "Current DNS type",
              "enum": [
                "AzureDns",
                "DefaultDomainRegistrarDns"
              ],
              "x-ms-enum": {
                "name": "DnsType",
                "modelAsString": false
              }
            },
            "dnsZoneId": {
              "type": "string",
              "description": "Azure DNS Zone to use"
            },
            "targetDnsType": {
              "type": "string",
              "description": "Target DNS type (would be used for migration)",
              "enum": [
                "AzureDns",
                "DefaultDomainRegistrarDns"
              ],
              "x-ms-enum": {
                "name": "DnsType",
                "modelAsString": false
              }
            },
            "authCode": {
              "type": "string",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            }
          },
          "required": [
            "contactAdmin",
            "contactBilling",
            "contactRegistrant",
            "contactTech",
            "consent"
          ],
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DomainAvailabilityCheckResult": {
      "type": "object",
      "description": "Domain availability check result.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the domain."
        },
        "available": {
          "type": "boolean",
          "description": "<code>true</code> if domain can be purchased using CreateDomain API; otherwise, <code>false</code>."
        },
        "domainType": {
          "$ref": "#/definitions/DomainType",
          "description": "Valid values are Regular domain: Azure will charge the full price of domain registration, SoftDeleted: Purchasing this domain will simply restore it and this operation will not cost anything."
        }
      }
    },
    "DomainCollection": {
      "type": "object",
      "description": "Collection of domains.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Domain items on this page",
          "items": {
            "$ref": "#/definitions/Domain"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DomainControlCenterSsoRequest": {
      "type": "object",
      "description": "Single sign-on request information for domain management.",
      "properties": {
        "url": {
          "type": "string",
          "description": "URL where the single sign-on request is to be made.",
          "readOnly": true
        },
        "postParameterKey": {
          "type": "string",
          "description": "Post parameter key.",
          "readOnly": true
        },
        "postParameterValue": {
          "type": "string",
          "description": "Post parameter value. Client should use 'application/x-www-form-urlencoded' encoding for this value.",
          "readOnly": true
        }
      }
    },
    "DomainOwnershipIdentifier": {
      "type": "object",
      "description": "Domain ownership Identifier.",
      "properties": {
        "properties": {
          "type": "object",
          "description": "DomainOwnershipIdentifier resource specific properties",
          "properties": {
            "ownershipId": {
              "type": "string",
              "description": "Ownership Id."
            }
          },
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DomainOwnershipIdentifierCollection": {
      "type": "object",
      "description": "Collection of domain ownership identifiers.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DomainOwnershipIdentifier items on this page",
          "items": {
            "$ref": "#/definitions/DomainOwnershipIdentifier"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DomainPatchResource": {
      "type": "object",
      "description": "ARM resource for a domain.",
      "properties": {
        "properties": {
          "type": "object",
          "description": "DomainPatchResource resource specific properties",
          "properties": {
            "contactAdmin": {
              "$ref": "#/definitions/Contact",
              "description": "Administrative contact.",
              "x-ms-mutability": [
                "create"
              ]
            },
            "contactBilling": {
              "$ref": "#/definitions/Contact",
              "description": "Billing contact.",
              "x-ms-mutability": [
                "create"
              ]
            },
            "contactRegistrant": {
              "$ref": "#/definitions/Contact",
              "description": "Registrant contact.",
              "x-ms-mutability": [
                "create"
              ]
            },
            "contactTech": {
              "$ref": "#/definitions/Contact",
              "description": "Technical contact.",
              "x-ms-mutability": [
                "create"
              ]
            },
            "registrationStatus": {
              "type": "string",
              "description": "Domain registration status.",
              "enum": [
                "Active",
                "Awaiting",
                "Cancelled",
                "Confiscated",
                "Disabled",
                "Excluded",
                "Expired",
                "Failed",
                "Held",
                "Locked",
                "Parked",
                "Pending",
                "Reserved",
                "Reverted",
                "Suspended",
                "Transferred",
                "Unknown",
                "Unlocked",
                "Unparked",
                "Updated",
                "JsonConverterFailed"
              ],
              "x-ms-enum": {
                "name": "DomainStatus",
                "modelAsString": false
              },
              "readOnly": true
            },
            "provisioningState": {
              "type": "string",
              "description": "Domain provisioning state.",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "InProgress",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": false
              },
              "readOnly": true
            },
            "nameServers": {
              "type": "array",
              "description": "Name servers.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "privacy": {
              "type": "boolean",
              "description": "<code>true</code> if domain privacy is enabled for this domain; otherwise, <code>false</code>."
            },
            "createdTime": {
              "type": "string",
              "format": "date-time",
              "description": "Domain creation timestamp.",
              "readOnly": true
            },
            "expirationTime": {
              "type": "string",
              "format": "date-time",
              "description": "Domain expiration timestamp.",
              "readOnly": true
            },
            "lastRenewedTime": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the domain was renewed last time.",
              "readOnly": true
            },
            "autoRenew": {
              "type": "boolean",
              "description": "<code>true</code> if the domain should be automatically renewed; otherwise, <code>false</code>.",
              "default": true
            },
            "readyForDnsRecordManagement": {
              "type": "boolean",
              "description": "<code>true</code> if Azure can assign this domain to App Service apps; otherwise, <code>false</code>. This value will be <code>true</code> if domain registration status is active and\nit is hosted on name servers Azure has programmatic access to.",
              "readOnly": true
            },
            "managedHostNames": {
              "type": "array",
              "description": "All hostnames derived from the domain and assigned to Azure resources.",
              "items": {
                "$ref": "#/definitions/HostName"
              },
              "readOnly": true,
              "x-ms-identifiers": [
                "name"
              ]
            },
            "consent": {
              "$ref": "#/definitions/DomainPurchaseConsent",
              "description": "Legal agreement consent.",
              "x-ms-mutability": [
                "create"
              ]
            },
            "domainNotRenewableReasons": {
              "type": "array",
              "description": "Reasons why domain is not renewable.",
              "x-ms-enum": {
                "name": "ResourceNotRenewableReason"
              },
              "items": {
                "type": "string",
                "enum": [
                  "RegistrationStatusNotSupportedForRenewal",
                  "ExpirationNotInRenewalTimeRange",
                  "SubscriptionNotActive"
                ],
                "x-ms-enum": {
                  "modelAsString": true
                }
              },
              "readOnly": true
            },
            "dnsType": {
              "type": "string",
              "description": "Current DNS type",
              "enum": [
                "AzureDns",
                "DefaultDomainRegistrarDns"
              ],
              "x-ms-enum": {
                "name": "DnsType",
                "modelAsString": false
              }
            },
            "dnsZoneId": {
              "type": "string",
              "description": "Azure DNS Zone to use"
            },
            "targetDnsType": {
              "type": "string",
              "description": "Target DNS type (would be used for migration)",
              "enum": [
                "AzureDns",
                "DefaultDomainRegistrarDns"
              ],
              "x-ms-enum": {
                "name": "DnsType",
                "modelAsString": false
              }
            },
            "authCode": {
              "type": "string",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            }
          },
          "required": [
            "contactAdmin",
            "contactBilling",
            "contactRegistrant",
            "contactTech",
            "consent"
          ],
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ]
    },
    "DomainPurchaseConsent": {
      "type": "object",
      "description": "Domain purchase consent object, representing acceptance of applicable legal agreements.",
      "properties": {
        "agreementKeys": {
          "type": "array",
          "description": "List of applicable legal agreement keys. This list can be retrieved using ListLegalAgreements API under <code>TopLevelDomain</code> resource.",
          "items": {
            "type": "string"
          }
        },
        "agreedBy": {
          "type": "string",
          "description": "Client IP address."
        },
        "agreedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the agreements were accepted."
        }
      }
    },
    "DomainRecommendationSearchParameters": {
      "type": "object",
      "description": "Domain recommendation search parameters.",
      "properties": {
        "keywords": {
          "type": "string",
          "description": "Keywords to be used for generating domain recommendations."
        },
        "maxDomainRecommendations": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of recommendations."
        }
      }
    },
    "DomainType": {
      "type": "string",
      "description": "Valid values are Regular domain: Azure will charge the full price of domain registration, SoftDeleted: Purchasing this domain will simply restore it and this operation will not cost anything.",
      "enum": [
        "Regular",
        "SoftDeleted"
      ],
      "x-ms-enum": {
        "name": "DomainType",
        "modelAsString": false
      }
    },
    "DomainUpdate": {
      "type": "object",
      "description": "Concrete tracked resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/Domain",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "HostName": {
      "type": "object",
      "description": "Details of a hostname derived from a domain.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the hostname."
        },
        "siteNames": {
          "type": "array",
          "description": "List of apps the hostname is assigned to. This list will have more than one app only if the hostname is pointing to a Traffic Manager.",
          "items": {
            "type": "string"
          }
        },
        "azureResourceName": {
          "type": "string",
          "description": "Name of the Azure resource the hostname is assigned to. If it is assigned to a Traffic Manager then it will be the Traffic Manager name otherwise it will be the app name."
        },
        "azureResourceType": {
          "$ref": "#/definitions/AzureResourceType",
          "description": "Type of the Azure resource the hostname is assigned to."
        },
        "customHostNameDnsRecordType": {
          "$ref": "#/definitions/CustomHostNameDnsRecordType",
          "description": "Type of the DNS record."
        },
        "hostNameType": {
          "$ref": "#/definitions/HostNameType",
          "description": "Type of the hostname."
        }
      }
    },
    "HostNameType": {
      "type": "string",
      "description": "Type of the hostname.",
      "enum": [
        "Verified",
        "Managed"
      ],
      "x-ms-enum": {
        "name": "HostNameType",
        "modelAsString": false
      }
    },
    "NameIdentifier": {
      "type": "object",
      "description": "Identifies an object.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the object."
        }
      }
    },
    "NameIdentifierCollection": {
      "type": "object",
      "description": "Collection of domain name identifiers.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NameIdentifier items on this page",
          "items": {
            "$ref": "#/definitions/NameIdentifier"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ProxyOnlyResource": {
      "type": "object",
      "description": "Azure proxy only resource. This resource is not tracked by Azure Resource Manager."
    },
    "TldLegalAgreement": {
      "type": "object",
      "description": "Legal agreement for a top level domain.",
      "properties": {
        "agreementKey": {
          "type": "string",
          "description": "Unique identifier for the agreement."
        },
        "title": {
          "type": "string",
          "description": "Agreement title."
        },
        "content": {
          "type": "string",
          "description": "Agreement details."
        },
        "url": {
          "type": "string",
          "description": "URL where a copy of the agreement details is hosted."
        }
      },
      "required": [
        "agreementKey",
        "title",
        "content"
      ]
    },
    "TldLegalAgreementCollection": {
      "type": "object",
      "description": "Collection of top-level domain legal agreements.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The TldLegalAgreement items on this page",
          "items": {
            "$ref": "#/definitions/TldLegalAgreement"
          },
          "x-ms-identifiers": [
            "agreementKey"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "TopLevelDomain": {
      "type": "object",
      "description": "A top level domain object.",
      "properties": {
        "properties": {
          "type": "object",
          "description": "TopLevelDomain resource specific properties",
          "properties": {
            "privacy": {
              "type": "boolean",
              "description": "If <code>true</code>, then the top level domain supports domain privacy; otherwise, <code>false</code>."
            }
          },
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TopLevelDomainAgreementOption": {
      "type": "object",
      "description": "Options for retrieving the list of top level domain legal agreements.",
      "properties": {
        "includePrivacy": {
          "type": "boolean",
          "description": "If <code>true</code>, then the list of agreements will include agreements for domain privacy as well; otherwise, <code>false</code>."
        },
        "forTransfer": {
          "type": "boolean",
          "description": "If <code>true</code>, then the list of agreements will include agreements for domain transfer as well; otherwise, <code>false</code>."
        }
      }
    },
    "TopLevelDomainCollection": {
      "type": "object",
      "description": "Collection of Top-level domains.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The TopLevelDomain items on this page",
          "items": {
            "$ref": "#/definitions/TopLevelDomain"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    }
  },
  "parameters": {}
}
