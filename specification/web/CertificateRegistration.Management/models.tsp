import "@typespec/rest";
import "@typespec/http";
import "@azure-tools/typespec-azure-core";
import "@azure-tools/typespec-azure-resource-manager";

using TypeSpec.Rest;
using TypeSpec.Http;
using Azure.ResourceManager;
using Azure.ResourceManager.Foundations;

namespace Microsoft.CertificateRegistration;

#suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
union ResourceNotRenewableReason {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  RegistrationStatusNotSupportedForRenewal: "RegistrationStatusNotSupportedForRenewal",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  ExpirationNotInRenewalTimeRange: "ExpirationNotInRenewalTimeRange",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  SubscriptionNotActive: "SubscriptionNotActive",
}

/**
 * Status of the Key Vault secret.
 */
#suppress "@azure-tools/typespec-azure-core/no-enum" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
#suppress "@azure-tools/typespec-azure-resource-manager/arm-resource-provisioning-state" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
enum KeyVaultSecretStatus {
  Initialized,
  WaitingOnCertificateOrder,
  Succeeded,
  CertificateOrderFailed,
  OperationNotPermittedOnKeyVault,
  AzureServiceUnauthorizedToAccessKeyVault,
  KeyVaultDoesNotExist,
  KeyVaultSecretDoesNotExist,
  UnknownError,
  ExternalPrivateKey,
  Unknown,
}

/**
 * Certificate product type.
 */
#suppress "@azure-tools/typespec-azure-core/no-enum" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
enum CertificateProductType {
  StandardDomainValidatedSsl,
  StandardDomainValidatedWildCardSsl,
}

/**
 * Status of certificate order.
 */
#suppress "@azure-tools/typespec-azure-core/no-enum" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
enum ProvisioningState {
  Succeeded,
  Failed,
  Canceled,
  InProgress,
  Deleting,
}

/**
 * Current order status.
 */
#suppress "@azure-tools/typespec-azure-core/no-enum" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
enum CertificateOrderStatus {
  Pendingissuance,
  Issued,
  Revoked,
  Canceled,
  Denied,
  Pendingrevocation,
  PendingRekey,
  Unused,
  Expired,
  NotSubmitted,
}

/**
 * Action type.
 */
#suppress "@azure-tools/typespec-azure-core/no-enum" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
enum CertificateOrderActionType {
  CertificateIssued,
  CertificateOrderCanceled,
  CertificateOrderCreated,
  CertificateRevoked,
  DomainValidationComplete,
  FraudDetected,
  OrgNameChange,
  OrgValidationComplete,
  SanDrop,
  FraudCleared,
  CertificateExpired,
  CertificateExpirationWarning,
  FraudDocumentationRequired,
  Unknown,
}

/**
 * Whether this detector is an Analysis Detector or not.
 */
#suppress "@azure-tools/typespec-azure-core/no-enum" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
enum DetectorType {
  Detector,
  Analysis,
  CategoryOverview,
}

/**
 * Rendering Type
 */
#suppress "@azure-tools/typespec-azure-core/no-enum" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
enum RenderingType {
  NoGraph,
  Table,
  TimeSeries,
  TimeSeriesPerInstance,
  PieChart,
  DataSummary,
  Email,
  Insights,
  DynamicInsight,
  Markdown,
  Detector,
  DropDown,
  Card,
  Solution,
  Guage,
  Form,
  ChangeSets,
  ChangeAnalysisOnboarding,
  ChangesView,
  AppInsight,
  DependencyGraph,
  DownTime,
  SummaryCard,
  SearchComponent,
  AppInsightEnablement,
}

/**
 * Level of the most severe insight generated by the detector.
 */
#suppress "@azure-tools/typespec-azure-core/no-enum" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
enum InsightStatus {
  Critical,
  Warning,
  Info,
  Success,
  None,
}

/**
 * Collection of certificate orders.
 */
model AppServiceCertificateOrderCollection
  is Azure.Core.Page<AppServiceCertificateOrder>;

/**
 * AppServiceCertificateOrder resource specific properties
 */
model AppServiceCertificateOrderProperties {
  /**
   * State of the Key Vault secret.
   */
  #suppress "@azure-tools/typespec-azure-resource-manager/arm-no-record" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  certificates?: Record<AppServiceCertificate>;

  /**
   * Certificate distinguished name.
   */
  @visibility(Lifecycle.Read, Lifecycle.Create)
  distinguishedName?: string;

  /**
   * Domain verification token.
   */
  @visibility(Lifecycle.Read)
  domainVerificationToken?: string;

  /**
   * Duration in years (must be 1).
   */
  @visibility(Lifecycle.Read, Lifecycle.Create)
  validityInYears?: int32 = 1;

  /**
   * Certificate key size.
   */
  @visibility(Lifecycle.Read, Lifecycle.Create)
  keySize?: int32 = 2048;

  /**
   * Certificate product type.
   */
  @visibility(Lifecycle.Read, Lifecycle.Create)
  productType: CertificateProductType;

  /**
   * <code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.
   */
  autoRenew?: boolean = true;

  /**
   * Status of certificate order.
   */
  @visibility(Lifecycle.Read)
  provisioningState?: ProvisioningState;

  /**
   * Current order status.
   */
  @visibility(Lifecycle.Read)
  status?: CertificateOrderStatus;

  /**
   * Signed certificate.
   */
  @visibility(Lifecycle.Read)
  signedCertificate?: CertificateDetails;

  /**
   * Last CSR that was created for this order.
   */
  @visibility(Lifecycle.Read, Lifecycle.Create)
  csr?: string;

  /**
   * Intermediate certificate.
   */
  @visibility(Lifecycle.Read)
  intermediate?: CertificateDetails;

  /**
   * Root certificate.
   */
  @visibility(Lifecycle.Read)
  root?: CertificateDetails;

  /**
   * Current serial number of the certificate.
   */
  @visibility(Lifecycle.Read)
  serialNumber?: string;

  /**
   * Certificate last issuance time.
   */
  @visibility(Lifecycle.Read)
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  lastCertificateIssuanceTime?: utcDateTime;

  /**
   * Certificate expiration time.
   */
  @visibility(Lifecycle.Read)
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  expirationTime?: utcDateTime;

  /**
   * <code>true</code> if private key is external; otherwise, <code>false</code>.
   */
  @visibility(Lifecycle.Read)
  isPrivateKeyExternal?: boolean;

  /**
   * Reasons why App Service Certificate is not renewable at the current moment.
   */
  @visibility(Lifecycle.Read)
  appServiceCertificateNotRenewableReasons?: ResourceNotRenewableReason[];

  /**
   * Time stamp when the certificate would be auto renewed next
   */
  @visibility(Lifecycle.Read)
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  nextAutoRenewalTimeStamp?: utcDateTime;

  /**
   * Contact info
   */
  @visibility(Lifecycle.Read)
  contact?: CertificateOrderContact;
}

/**
 * Key Vault container for a certificate that is purchased through Azure.
 */
model AppServiceCertificate {
  /**
   * Key Vault resource Id.
   */
  keyVaultId?: string;

  /**
   * Key Vault secret name.
   */
  keyVaultSecretName?: string;

  /**
   * Status of the Key Vault secret.
   */
  @visibility(Lifecycle.Read)
  provisioningState?: KeyVaultSecretStatus;
}

/**
 * SSL certificate details.
 */
model CertificateDetails {
  /**
   * Certificate Version.
   */
  @visibility(Lifecycle.Read)
  version?: int32;

  /**
   * Certificate Serial Number.
   */
  @visibility(Lifecycle.Read)
  serialNumber?: string;

  /**
   * Certificate Thumbprint.
   */
  @visibility(Lifecycle.Read)
  thumbprint?: string;

  /**
   * Certificate Subject.
   */
  @visibility(Lifecycle.Read)
  subject?: string;

  /**
   * Date Certificate is valid from.
   */
  @visibility(Lifecycle.Read)
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  notBefore?: utcDateTime;

  /**
   * Date Certificate is valid to.
   */
  @visibility(Lifecycle.Read)
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  notAfter?: utcDateTime;

  /**
   * Certificate Signature algorithm.
   */
  @visibility(Lifecycle.Read)
  signatureAlgorithm?: string;

  /**
   * Certificate Issuer.
   */
  @visibility(Lifecycle.Read)
  issuer?: string;

  /**
   * Raw certificate data.
   */
  @visibility(Lifecycle.Read)
  rawData?: string;
}

#suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
model CertificateOrderContact {
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  email?: string;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  nameFirst?: string;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  nameLast?: string;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  phone?: string;
}

/**
 * Azure resource. This resource is tracked in Azure Resource Manager
 */
model Resource {
  /**
   * Resource Id.
   */
  @visibility(Lifecycle.Read)
  id?: string;

  /**
   * Resource Name.
   */
  @visibility(Lifecycle.Read)
  name?: string;

  /**
   * Kind of resource. If the resource is an app, you can refer to https://github.com/Azure/app-service-linux-docs/blob/master/Things_You_Should_Know/kind_property.md#app-service-resource-kind-reference for details supported values for kind.
   */
  kind?: string;

  /**
   * Resource Location.
   */
  location: string;

  /**
   * Resource type.
   */
  @visibility(Lifecycle.Read)
  type?: string;

  /**
   * Resource tags.
   */
  #suppress "@azure-tools/typespec-azure-resource-manager/arm-no-record" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  tags?: Record<string>;
}

/**
 * App Service error response.
 */
@error
model DefaultErrorResponse {
  /**
   * Error model.
   */
  @visibility(Lifecycle.Read)
  error?: DefaultErrorResponseError;
}

/**
 * Error model.
 */
model DefaultErrorResponseError {
  /**
   * Standardized string to programmatically identify the error.
   */
  @visibility(Lifecycle.Read)
  code?: string;

  /**
   * Detailed error description and debugging information.
   */
  @visibility(Lifecycle.Read)
  message?: string;

  /**
   * Detailed error description and debugging information.
   */
  @visibility(Lifecycle.Read)
  target?: string;

  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  @OpenAPI.extension("x-ms-identifiers", #[])
  details?: DefaultErrorResponseErrorDetailsItem[];

  /**
   * More information to debug error.
   */
  @visibility(Lifecycle.Read)
  innererror?: string;
}

/**
 * Detailed errors.
 */
model DefaultErrorResponseErrorDetailsItem {
  /**
   * Standardized string to programmatically identify the error.
   */
  @visibility(Lifecycle.Read)
  code?: string;

  /**
   * Detailed error description and debugging information.
   */
  @visibility(Lifecycle.Read)
  message?: string;

  /**
   * Detailed error description and debugging information.
   */
  @visibility(Lifecycle.Read)
  target?: string;
}

/**
 * ARM resource for a certificate order that is purchased through Azure.
 */
#suppress "@azure-tools/typespec-azure-core/composition-over-inheritance" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
#suppress "@azure-tools/typespec-azure-resource-manager/patch-envelope" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
model AppServiceCertificateOrderPatchResource extends ProxyOnlyResource {
  /**
   * AppServiceCertificateOrderPatchResource resource specific properties
   */
  #suppress "@azure-tools/typespec-azure-core/no-private-usage" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  properties?: AppServiceCertificateOrderPatchResourceProperties;
}

/**
 * AppServiceCertificateOrderPatchResource resource specific properties
 */
model AppServiceCertificateOrderPatchResourceProperties {
  /**
   * State of the Key Vault secret.
   */
  #suppress "@azure-tools/typespec-azure-resource-manager/arm-no-record" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  certificates?: Record<AppServiceCertificate>;

  /**
   * Certificate distinguished name.
   */
  @visibility(Lifecycle.Read, Lifecycle.Create)
  distinguishedName?: string;

  /**
   * Domain verification token.
   */
  @visibility(Lifecycle.Read)
  domainVerificationToken?: string;

  /**
   * Duration in years (must be 1).
   */
  @visibility(Lifecycle.Read, Lifecycle.Create)
  validityInYears?: int32 = 1;

  /**
   * Certificate key size.
   */
  @visibility(Lifecycle.Read, Lifecycle.Create)
  keySize?: int32 = 2048;

  /**
   * Certificate product type.
   */
  @visibility(Lifecycle.Read, Lifecycle.Create)
  productType: CertificateProductType;

  /**
   * <code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.
   */
  autoRenew?: boolean = true;

  /**
   * Status of certificate order.
   */
  @visibility(Lifecycle.Read)
  provisioningState?: ProvisioningState;

  /**
   * Current order status.
   */
  @visibility(Lifecycle.Read)
  status?: CertificateOrderStatus;

  /**
   * Signed certificate.
   */
  @visibility(Lifecycle.Read)
  signedCertificate?: CertificateDetails;

  /**
   * Last CSR that was created for this order.
   */
  @visibility(Lifecycle.Read, Lifecycle.Create)
  csr?: string;

  /**
   * Intermediate certificate.
   */
  @visibility(Lifecycle.Read)
  intermediate?: CertificateDetails;

  /**
   * Root certificate.
   */
  @visibility(Lifecycle.Read)
  root?: CertificateDetails;

  /**
   * Current serial number of the certificate.
   */
  @visibility(Lifecycle.Read)
  serialNumber?: string;

  /**
   * Certificate last issuance time.
   */
  @visibility(Lifecycle.Read)
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  lastCertificateIssuanceTime?: utcDateTime;

  /**
   * Certificate expiration time.
   */
  @visibility(Lifecycle.Read)
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  expirationTime?: utcDateTime;

  /**
   * <code>true</code> if private key is external; otherwise, <code>false</code>.
   */
  @visibility(Lifecycle.Read)
  isPrivateKeyExternal?: boolean;

  /**
   * Reasons why App Service Certificate is not renewable at the current moment.
   */
  @visibility(Lifecycle.Read)
  appServiceCertificateNotRenewableReasons?: ResourceNotRenewableReason[];

  /**
   * Time stamp when the certificate would be auto renewed next
   */
  @visibility(Lifecycle.Read)
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  nextAutoRenewalTimeStamp?: utcDateTime;

  /**
   * Contact info
   */
  @visibility(Lifecycle.Read)
  contact?: CertificateOrderContact;
}

/**
 * Azure proxy only resource. This resource is not tracked by Azure Resource Manager.
 */
model ProxyOnlyResource {
  /**
   * Resource Id.
   */
  @visibility(Lifecycle.Read)
  id?: string;

  /**
   * Resource Name.
   */
  @visibility(Lifecycle.Read)
  name?: string;

  /**
   * Kind of resource.
   */
  kind?: string;

  /**
   * Resource type.
   */
  @visibility(Lifecycle.Read)
  type?: string;
}

/**
 * Collection of certificate order certificates.
 */
model AppServiceCertificateCollection
  is Azure.Core.Page<AppServiceCertificateResource>;

/**
 * Key Vault container ARM resource for a certificate that is purchased through Azure.
 */
#suppress "@azure-tools/typespec-azure-core/composition-over-inheritance" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
#suppress "@azure-tools/typespec-azure-resource-manager/patch-envelope" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
model AppServiceCertificatePatchResource extends ProxyOnlyResource {
  /**
   * Core resource properties
   */
  #suppress "@azure-tools/typespec-azure-core/no-private-usage" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  properties?: AppServiceCertificate;
}

/**
 * Class representing certificate reissue request.
 */
#suppress "@azure-tools/typespec-azure-core/composition-over-inheritance" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
model ReissueCertificateOrderRequest extends ProxyOnlyResource {
  /**
   * ReissueCertificateOrderRequest resource specific properties
   */
  #suppress "@azure-tools/typespec-azure-core/no-private-usage" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  properties?: ReissueCertificateOrderRequestProperties;
}

/**
 * ReissueCertificateOrderRequest resource specific properties
 */
model ReissueCertificateOrderRequestProperties {
  /**
   * Certificate Key Size.
   */
  keySize?: int32;

  /**
   * Delay in hours to revoke existing certificate after the new certificate is issued.
   */
  delayExistingRevokeInHours?: int32;

  /**
   * Csr to be used for re-key operation.
   */
  csr?: string;

  /**
   * Should we change the ASC type (from managed private key to external private key and vice versa).
   */
  isPrivateKeyExternal?: boolean;
}

/**
 * Class representing certificate renew request.
 */
#suppress "@azure-tools/typespec-azure-core/composition-over-inheritance" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
model RenewCertificateOrderRequest extends ProxyOnlyResource {
  /**
   * RenewCertificateOrderRequest resource specific properties
   */
  #suppress "@azure-tools/typespec-azure-core/no-private-usage" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  properties?: RenewCertificateOrderRequestProperties;
}

/**
 * RenewCertificateOrderRequest resource specific properties
 */
model RenewCertificateOrderRequestProperties {
  /**
   * Certificate Key Size.
   */
  keySize?: int32;

  /**
   * Csr to be used for re-key operation.
   */
  csr?: string;

  /**
   * Should we change the ASC type (from managed private key to external private key and vice versa).
   */
  isPrivateKeyExternal?: boolean;
}

/**
 * Identifies an object.
 */
model NameIdentifier {
  /**
   * Name of the object.
   */
  name?: string;
}

/**
 * Site seal request.
 */
model SiteSealRequest {
  /**
   * If <code>true</code> use the light color theme for site seal; otherwise, use the default color theme.
   */
  lightTheme?: boolean;

  /**
   * Locale of site seal.
   */
  locale?: string;
}

/**
 * Site seal
 */
model SiteSeal {
  /**
   * HTML snippet
   */
  #suppress "@azure-tools/typespec-azure-core/no-private-usage" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  html: string;
}

/**
 * Certificate order action.
 */
model CertificateOrderAction {
  /**
   * Action type.
   */
  @visibility(Lifecycle.Read)
  actionType?: CertificateOrderActionType;

  /**
   * Time at which the certificate action was performed.
   */
  @visibility(Lifecycle.Read)
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  createdAt?: utcDateTime;
}

/**
 * SSL certificate email.
 */
model CertificateEmail {
  /**
   * Email id.
   */
  emailId?: string;

  /**
   * Time stamp.
   */
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  timeStamp?: utcDateTime;
}

/**
 * Collection of detector responses
 */
model DetectorResponseCollection is Azure.Core.Page<DetectorResponse>;

/**
 * DetectorResponse resource specific properties
 */
#suppress "@azure-tools/typespec-azure-resource-manager/arm-resource-provisioning-state" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
model DetectorResponseProperties {
  /**
   * metadata for the detector
   */
  metadata?: DetectorInfo;

  /**
   * Data Set
   */
  @OpenAPI.extension("x-ms-identifiers", #[])
  dataset?: DiagnosticData[];

  /**
   * Indicates status of the most severe insight.
   */
  status?: Status;

  /**
   * Additional configuration for different data providers to be used by the UI
   */
  @OpenAPI.extension("x-ms-identifiers", #["providerName"])
  dataProvidersMetadata?: DataProviderMetadata[];

  /**
   * Suggested utterances where the detector can be applicable.
   */
  suggestedUtterances?: QueryUtterancesResults;
}

/**
 * Definition of Detector
 */
model DetectorInfo {
  /**
   * Id of detector
   */
  @visibility(Lifecycle.Read)
  id?: string;

  /**
   * Name of detector
   */
  @visibility(Lifecycle.Read)
  name?: string;

  /**
   * Short description of the detector and its purpose.
   */
  @visibility(Lifecycle.Read)
  description?: string;

  /**
   * Author of the detector.
   */
  @visibility(Lifecycle.Read)
  author?: string;

  /**
   * Problem category. This serves for organizing group for detectors.
   */
  @visibility(Lifecycle.Read)
  category?: string;

  /**
   * List of Support Topics for which this detector is enabled.
   */
  @visibility(Lifecycle.Read)
  supportTopicList?: SupportTopic[];

  /**
   * Analysis Types for which this detector should apply to.
   */
  @visibility(Lifecycle.Read)
  analysisType?: string[];

  /**
   * Whether this detector is an Analysis Detector or not.
   */
  @visibility(Lifecycle.Read)
  type?: DetectorType;

  /**
   * Defines score of a detector to power ML based matching.
   */
  @visibility(Lifecycle.Read)
  score?: float32;
}

/**
 * Defines a unique Support Topic
 */
model SupportTopic {
  /**
   * Support Topic Id
   */
  @visibility(Lifecycle.Read)
  id?: string;

  /**
   * Unique resource Id
   */
  @visibility(Lifecycle.Read)
  pesId?: string;
}

/**
 * Set of data with rendering instructions
 */
model DiagnosticData {
  /**
   * Data in table form
   */
  table?: DataTableResponseObject;

  /**
   * Properties that describe how the table should be rendered
   */
  renderingProperties?: Rendering;
}

/**
 * Data Table which defines columns and raw row values
 */
model DataTableResponseObject {
  /**
   * Name of the table
   */
  tableName?: string;

  /**
   * List of columns with data types
   */
  @OpenAPI.extension("x-ms-identifiers", #["columnName"])
  columns?: DataTableResponseColumn[];

  /**
   * Raw row values
   */
  @OpenAPI.extension("x-ms-identifiers", #[])
  rows?: string[][];
}

/**
 * Column definition
 */
model DataTableResponseColumn {
  /**
   * Name of the column
   */
  columnName?: string;

  /**
   * Data type which looks like 'String' or 'Int32'.
   */
  dataType?: string;

  /**
   * Column Type
   */
  columnType?: string;
}

/**
 * Instructions for rendering the data
 */
model Rendering {
  /**
   * Rendering Type
   */
  type?: RenderingType;

  /**
   * Title of data
   */
  title?: string;

  /**
   * Description of the data that will help it be interpreted
   */
  description?: string;
}

/**
 * Identify the status of the most severe insight generated by the detector.
 */
model Status {
  /**
   * Descriptive message.
   */
  message?: string;

  /**
   * Level of the most severe insight generated by the detector.
   */
  statusId?: InsightStatus;
}

/**
 * Additional configuration for a data providers
 */
model DataProviderMetadata {
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  providerName?: string;

  /**
   * Settings for the data provider
   */
  @visibility(Lifecycle.Read)
  @OpenAPI.extension("x-ms-identifiers", #["key"])
  propertyBag?: KeyValuePairStringObject[];
}

#suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
model KeyValuePairStringObject {
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  @visibility(Lifecycle.Read)
  key?: string;

  /**
   * Any object
   */
  #suppress "@azure-tools/typespec-azure-resource-manager/arm-no-record" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  @visibility(Lifecycle.Read)
  value?: Record<string>;
}

/**
 * Suggested utterances where the detector can be applicable
 */
model QueryUtterancesResults {
  /**
   * Search Query.
   */
  query?: string;

  /**
   * Array of utterance results for search query.
   */
  @OpenAPI.extension("x-ms-identifiers", #[])
  results?: QueryUtterancesResult[];
}

/**
 * Result for utterances query.
 */
model QueryUtterancesResult {
  /**
   * A sample utterance.
   */
  sampleUtterance?: SampleUtterance;

  /**
   * Score of a sample utterance.
   */
  score?: float32;
}

/**
 * Sample utterance.
 */
model SampleUtterance {
  /**
   * Text attribute of sample utterance.
   */
  text?: string;

  /**
   * Links attribute of sample utterance.
   */
  links?: string[];

  /**
   * Question id of sample utterance (for stackoverflow questions titles).
   */
  qid?: string;
}

/**
 * Description of an operation available for Microsoft.Web resource provider.
 */
model CsmOperationDescription {
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  name?: string;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  isDataAction?: boolean;

  /**
   * Meta data about operation used for display in portal.
   */
  display?: CsmOperationDisplay;

  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  origin?: string;

  /**
   * Properties available for a Microsoft.Web resource provider operation.
   */
  properties?: CsmOperationDescriptionProperties;
}

/**
 * Meta data about operation used for display in portal.
 */
model CsmOperationDisplay {
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  provider?: string;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  resource?: string;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  operation?: string;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  description?: string;
}

/**
 * Properties available for a Microsoft.Web resource provider operation.
 */
model CsmOperationDescriptionProperties {
  /**
   * Resource metrics service provided by Microsoft.Insights resource provider.
   */
  serviceSpecification?: ServiceSpecification;
}

/**
 * Resource metrics service provided by Microsoft.Insights resource provider.
 */
model ServiceSpecification {
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  @OpenAPI.extension("x-ms-identifiers", #["name"])
  metricSpecifications?: MetricSpecification[];

  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  @OpenAPI.extension("x-ms-identifiers", #["name"])
  logSpecifications?: LogSpecification[];
}

/**
 * Definition of a single resource metric.
 */
model MetricSpecification {
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  name?: string;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  displayName?: string;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  displayDescription?: string;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  unit?: string;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  aggregationType?: string;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  supportsInstanceLevelAggregation?: boolean;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  enableRegionalMdmAccount?: boolean;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  sourceMdmAccount?: string;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  sourceMdmNamespace?: string;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  metricFilterPattern?: string;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  fillGapWithZero?: boolean;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  isInternal?: boolean;

  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  @OpenAPI.extension("x-ms-identifiers", #["name"])
  dimensions?: Dimension[];

  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  category?: string;

  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  @OpenAPI.extension("x-ms-identifiers", #[])
  availabilities?: MetricAvailability[];

  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  supportedTimeGrainTypes?: string[];
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  supportedAggregationTypes?: string[];
}

/**
 * Dimension of a resource metric. For e.g. instance specific HTTP requests for a web app,
 * where instance name is dimension of the metric HTTP request
 */
model Dimension {
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  name?: string;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  displayName?: string;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  internalName?: string;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  toBeExportedForShoebox?: boolean;
}

/**
 * Retention policy of a resource metric.
 */
model MetricAvailability {
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  timeGrain?: string;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  blobDuration?: string;
}

/**
 * Log Definition of a single resource metric.
 */
model LogSpecification {
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  name?: string;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  displayName?: string;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  blobDuration?: string;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "FIXME: Update justification, follow aka.ms/tsp/conversion-fix for details"
  logFilterPattern?: string;
}

/**
 * Collection of Azure resource manager operation metadata.
 */
model CsmOperationCollection {
  /**
   * Collection of resources.
   */
  @pageItems
  @OpenAPI.extension("x-ms-identifiers", #["name"])
  value: CsmOperationDescription[]; // required

  /**
   * Link to next page of resources.
   */
  @doc("Link to next page of resources.")
  @visibility(Lifecycle.Read)
  @nextLink
  nextLink?: string;
}
