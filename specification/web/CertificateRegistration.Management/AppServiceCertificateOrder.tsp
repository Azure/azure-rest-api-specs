import "@azure-tools/typespec-azure-core";
import "@azure-tools/typespec-azure-resource-manager";
import "@typespec/openapi";
import "@typespec/rest";
import "./models.tsp";

using TypeSpec.Rest;
using Azure.ResourceManager;
using TypeSpec.Http;
using TypeSpec.OpenAPI;

namespace Microsoft.CertificateRegistration;
/**
 * SSL certificate purchase order.
 */
model AppServiceCertificateOrder
  is Azure.ResourceManager.TrackedResource<AppServiceCertificateOrderProperties> {
  ...ResourceNameParameter<
    Resource = AppServiceCertificateOrder,
    KeyName = "certificateOrderName",
    SegmentName = "certificateOrders",
    NamePattern = ""
  >;
}
model AppServiceCertificateOrderSimple
  is Azure.ResourceManager.TrackedResource<AppServiceCertificateOrderProperties> {
  ...ResourceNameParameter<
    Resource = AppServiceCertificateOrder,
    KeyName = "name",
    SegmentName = "certificateOrders",
    NamePattern = ""
  >;
}

@armResourceOperations
interface AppServiceCertificateOrders {
  /**
   * Description for Get a certificate order.
   */
  get is ArmResourceRead<AppServiceCertificateOrder>;

  /**
   * Description for Create or update a certificate purchase order.
   */
  createOrUpdate is ArmResourceCreateOrReplaceAsync<
    AppServiceCertificateOrder,
    LroHeaders = ArmLroLocationHeader & Azure.Core.Foundations.RetryAfterHeader
  >;

  /**
   * Description for Create or update a certificate purchase order.
   */
  @patch(#{ implicitOptionality: false })
  update is ArmCustomPatchSync<
    AppServiceCertificateOrder,
    PatchModel = AppServiceCertificateOrderPatchResource
  >;

  /**
   * Description for Delete an existing certificate order.
   */
  delete is ArmResourceDeleteSync<AppServiceCertificateOrder>;

  /**
   * Description for Get certificate orders in a resource group.
   */
  listByResourceGroup is ArmResourceListByParent<
    AppServiceCertificateOrder,
    Response = ArmResponse<AppServiceCertificateOrderCollection>
  >;

  /**
   * Description for List all certificate orders in a subscription.
   */
  list is ArmListBySubscription<
    AppServiceCertificateOrder,
    Response = ArmResponse<AppServiceCertificateOrderCollection>
  >;

  /**
   * Description for Reissue an existing certificate order.
   */
  reissue is ArmResourceActionSync<
    AppServiceCertificateOrder,
    ReissueCertificateOrderRequest,
    NoContentResponse
  >;

  /**
   * Description for Renew an existing certificate order.
   */
  renew is ArmResourceActionSync<
    AppServiceCertificateOrder,
    RenewCertificateOrderRequest,
    NoContentResponse
  >;

  /**
   * Description for Resend certificate email.
   */
  resendEmail is ArmResourceActionSync<
    AppServiceCertificateOrder,
    void,
    NoContentResponse
  >;

  /**
   * Resend domain verification ownership email containing steps on how to verify a domain for a given certificate order
   */
  resendRequestEmails is ArmResourceActionSync<
    AppServiceCertificateOrder,
    NameIdentifier,
    NoContentResponse
  >;

  /**
   * This method is used to obtain the site seal information for an issued certificate. A site seal is a graphic that the certificate purchaser can embed on their web site to show their visitors information about their SSL certificate. If a web site visitor clicks on the site seal image, a pop-up page is displayed that contains detailed information about the SSL certificate. The site seal token is used to link the site seal graphic image to the appropriate certificate details pop-up page display when a user clicks on the site seal. The site seal images are expected to be static images and hosted by the reseller, to minimize delays for customer page load times.
   */
  retrieveSiteSeal is ArmResourceActionSync<
    AppServiceCertificateOrder,
    SiteSealRequest,
    ArmResponse<SiteSeal>
  >;

  /**
   * Description for Verify domain ownership for this certificate order.
   */
  verifyDomainOwnership is ArmResourceActionSync<
    AppServiceCertificateOrder,
    void,
    NoContentResponse
  >;

  /**
   * Description for Retrieve the list of certificate actions.
   */
  retrieveCertificateActions is ArmResourceActionSync<
    AppServiceCertificateOrderSimple,
    void,
    ArmResponse<CertificateOrderAction[]>
  >;

  /**
   * Description for Retrieve email history.
   */
  @action("retrieveEmailHistory")
  retrieveCertificateEmailHistory is ArmResourceActionSync<
    AppServiceCertificateOrderSimple,
    void,
    ArmResponse<CertificateEmail[]>
  >;

  /**
   * Description for Get the certificate associated with a certificate order.
   */
  #suppress "@azure-tools/typespec-azure-core/no-openapi" "non-standard operations"
  @operationId("AppServiceCertificateOrders_GetCertificate")
  getCertificate is ArmResourceRead<AppServiceCertificateResource>;

  /**
   * Description for Creates or updates a certificate and associates with key vault secret.
   */
  #suppress "@azure-tools/typespec-azure-core/no-openapi" "non-standard operations"
  @operationId("AppServiceCertificateOrders_CreateOrUpdateCertificate")
  createOrUpdateCertificate is ArmResourceCreateOrReplaceAsync<
    AppServiceCertificateResource,
    LroHeaders = ArmLroLocationHeader & Azure.Core.Foundations.RetryAfterHeader
  >;

  /**
   * Description for Creates or updates a certificate and associates with key vault secret.
   */
  #suppress "@azure-tools/typespec-azure-core/no-openapi" "non-standard operations"
  @operationId("AppServiceCertificateOrders_UpdateCertificate")
  @patch(#{ implicitOptionality: false })
  updateCertificate is ArmCustomPatchSync<
    AppServiceCertificateResource,
    PatchModel = AppServiceCertificatePatchResource
  >;

  /**
   * Description for Delete the certificate associated with a certificate order.
   */
  #suppress "@azure-tools/typespec-azure-core/no-openapi" "non-standard operations"
  @operationId("AppServiceCertificateOrders_DeleteCertificate")
  deleteCertificate is ArmResourceDeleteSync<AppServiceCertificateResource>;

  /**
   * Description for List all certificates associated with a certificate order.
   */
  #suppress "@azure-tools/typespec-azure-core/no-openapi" "non-standard operations"
  @operationId("AppServiceCertificateOrders_ListCertificates")
  listCertificates is ArmResourceListByParent<
    AppServiceCertificateResource,
    Response = ArmResponse<AppServiceCertificateCollection>
  >;
}

@@doc(AppServiceCertificateOrder.name, "Name of the certificate order..");
@@doc(AppServiceCertificateOrder.properties,
  "AppServiceCertificateOrder resource specific properties"
);
@@doc(AppServiceCertificateOrders.createOrUpdate::parameters.resource,
  "Distinguished name to use for the certificate order."
);
@@doc(AppServiceCertificateOrders.update::parameters.properties,
  "Distinguished name to use for the certificate order."
);
@@doc(AppServiceCertificateOrders.reissue::parameters.body,
  "Parameters for the reissue."
);
@@doc(AppServiceCertificateOrders.renew::parameters.body, "Renew parameters");
@@doc(AppServiceCertificateOrders.resendRequestEmails::parameters.body,
  "Email address"
);
@@doc(AppServiceCertificateOrders.retrieveSiteSeal::parameters.body,
  "Site seal request."
);
@@doc(AppServiceCertificateOrders.createOrUpdateCertificate::parameters.resource,
  "Key vault certificate resource Id."
);
@@doc(AppServiceCertificateOrders.updateCertificate::parameters.properties,
  "Key vault certificate resource Id."
);
