{
  "swagger": "2.0",
  "info": {
    "title": "MicrosoftPki",
    "description": "Describes an enrollment policy resource and operations.",
    "version": "2022-09-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Pki/pkis/{pkiName}/enrollmentPolicies/{enrollmentPolicyName}": {
      "get": {
        "operationId": "EnrollmentPolicy_Get",
        "description": "Gets the specified enrollment policy.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "pkiName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the PKI resource."
          },
          {
            "name": "enrollmentPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the enrollment policy resource."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The definition of the requested enrollment policy resource is returned in the response.",
            "schema": {
              "$ref": "#/definitions/ApiEnrollmentPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get an enrollment policy": {
            "$ref": "./examples/EnrollmentPolicies_Get.json"
          }
        }
      },
      "put": {
        "operationId": "EnrollmentPolicy_Create",
        "description": "Creates or updates an enrollment policy.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "pkiName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the PKI resource."
          },
          {
            "name": "enrollmentPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the enrollment policy resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiEnrollmentPolicy"
            },
            "description": "The requested definition of the enrollment policy resource being created or updated."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The specified resource was created or updated and its definition is returned in the response.",
            "schema": {
              "$ref": "#/definitions/ApiEnrollmentPolicy"
            }
          },
          "201": {
            "description": "The request has been accepted. The response contains an operation URI that can be queried to find the current state of the operation.",
            "schema": {
              "$ref": "#/definitions/ApiEnrollmentPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create a new enrollment policy or update an existing one": {
            "$ref": "./examples/EnrollmentPolicies_Create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "operationId": "EnrollmentPolicy_Update",
        "description": "Updates some properties of an enrollment policy, while not touching other properties.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "pkiName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the PKI resource."
          },
          {
            "name": "enrollmentPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the enrollment policy."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiEnrollmentPolicy_Patch"
            },
            "description": "The requested definition of the enrollment policy being patched. Properties that are not being modified must be absent or null."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The specified resource was created or updated and its definition is returned in the response.",
            "schema": {
              "$ref": "#/definitions/ApiEnrollmentPolicy"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Tracking URL for long running operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update properties of an existing enrollment policy": {
            "$ref": "./examples/EnrollmentPolicies_Update.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        }
      },
      "delete": {
        "operationId": "EnrollmentPolicy_Delete",
        "description": "Deletes the specified enrollment policy.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "pkiName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the PKI resource."
          },
          {
            "name": "enrollmentPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the enrollment policy."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource with the specified name was deleted."
          },
          "202": {
            "description": "The operation will be completed asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The resource with the specified name was deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete an existing enrollment policy": {
            "$ref": "./examples/EnrollmentPolicies_Delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Pki/pkis/{pkiName}/enrollmentPolicies": {
      "get": {
        "operationId": "EnrollmentPolicy_ListByPki",
        "description": "Lists all the enrollment policies in a PKI resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "pkiName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the PKI resource."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of enrollment policies is returned in the response.",
            "schema": {
              "$ref": "#/definitions/ApiEnrollmentPolicyList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List enrollment policies by PKI": {
            "$ref": "./examples/EnrollmentPolicies_ListByPki.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "ApiEnrollmentPolicy": {
      "description": "Represents an enrollment policy.",
      "type": "object",
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
          "description": "Resource system data."
        },
        "properties": {
          "$ref": "#/definitions/ApiEnrollmentPolicyProperties",
          "description": "Free-text description of this enrollment policy."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ]
    },
    "ApiEnrollmentPolicy_Patch": {
      "description": "Contains the properties that must be updated in an enrollment policy.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApiEnrollmentPolicyProperties",
          "description": "Free-text description of this enrollment policy."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        }
      }
    },
    "ApiEnrollmentPolicyProperties": {
      "description": "Represents the properties of an enrollment policy.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Free-text description of this enrollment policy."
        },
        "policy": {
          "$ref": "#/definitions/ApiPolicy"
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of this PKI resource",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Creating",
            "Updating",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "certificateAuthorityResource": {
          "type": "string",
          "description": "The resource identifier of the CA that issues certificates for this policy."
        },
        "enrollmentUri": {
          "type": "string",
          "description": "The base URI for enrollment operations.",
          "readOnly": true
        },
        "banners": {
          "type": "array",
          "description": "The list of active banners for this enrollment policy.",
          "readOnly": true,
          "items": {
            "$ref": "definitions.json#/definitions/ResourceBanner"
          },
          "maxItems": 100,
          "x-ms-identifiers": []
        }
      }
    },
    "ApiPolicy": {
      "description": "The certificate policy.",
      "type": "object",
      "required": [
        "commonName",
        "distinguishedName",
        "subjectAltNames",
        "keyUsage",
        "extendedKeyUsage",
        "validityPeriod",
        "crlEndpoints",
        "caCertEndpoints",
        "ocspEndpoints",
        "keyTypes"
      ],
      "properties": {
        "commonName": {
          "description": "The enrollment policy for common name.",
          "$ref": "#/definitions/CommonName"
        },
        "distinguishedName": {
          "description": "The enrollment policy for the relative distinguished names.",
          "type": "object",
          "properties": {
            "CN": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "2.5.4.3": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "O": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "2.5.4.10": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "OU": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "2.5.4.11": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "L": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "2.5.4.7": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "ST": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "2.5.4.8": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "C": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "2.5.4.6": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "T": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "2.5.4.12": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "SERIALNUMBER": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "2.5.4.5": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "E": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "1.2.840.113549.1.9.1": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "DC": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "0.9.2342.19200300.100.1.25": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "UID": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "0.9.2342.19200300.100.1.1": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "STREET": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "2.5.4.9": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "SURNAME": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "2.5.4.4": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "GIVENNAME": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "2.5.4.42": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "INITIALS": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "2.5.4.43": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "unstructuredAddress": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "1.2.840.113549.1.9.8": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "unstructuredName": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "1.2.840.113549.1.9.2": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "UniqueIdentifier": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "2.5.4.45": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "Pseudonym": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "2.5.4.65": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "PostalAddress": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "2.5.4.16": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "NameAtBirth": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "1.3.36.8.3.14": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "CountryOfCitizenship": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "1.3.6.1.5.5.7.9.4": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "CountryOfResidence": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "1.3.6.1.5.5.7.9.5": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "Gender": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "1.3.6.1.5.5.7.9.3": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "PlaceOfBirth": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "1.3.6.1.5.5.7.9.2": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "DateOfBirth": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "1.3.6.1.5.5.7.9.1": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "PostalCode": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "2.5.4.17": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "BusinessCategory": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "2.5.4.15": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "TelephoneNumber": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "2.5.4.20": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "Generation": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "2.5.4.44": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "DnQualifier": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            },
            "2.5.4.46": {
              "type": "object",
              "$ref": "#/definitions/DistinguishedNameRule"
            }
          }
        },
        "subjectAltNames": {
          "description": "The enrollment policy for the subject alternative names.",
          "type": "object",
          "properties": {
            "DNS": {
              "type": "object",
              "$ref": "#/definitions/SubjectAlternativeNameRule"
            },
            "IPADDRESS": {
              "type": "object",
              "$ref": "#/definitions/SubjectAlternativeNameRule"
            },
            "URI": {
              "type": "object",
              "$ref": "#/definitions/SubjectAlternativeNameRule"
            }
          },
          "maxItems": 100,
          "x-ms-identifiers": []
        },
        "keyUsage": {
          "description": "The enrollment policy for the key usage.",
          "type": "object",
          "$ref": "#/definitions/KeyUsageRule"
        },
        "extendedKeyUsage": {
          "description": "The enrollment policy for the extended key usage.",
          "type": "object",
          "$ref": "#/definitions/ExtendedKeyUsageRule"
        },
        "validityPeriod": {
          "description": "The validity period values for certificate enrollment",
          "type": "object",
          "$ref": "#/definitions/ValidityPeriod"
        },
        "crlEndpoints": {
          "description": "The certificate revocation endpoints to include in the certificate",
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 100,
          "x-ms-identifiers": []
        },
        "caCertEndpoints": {
          "description": "The certificate authority certificate endpoints to include in the certificate",
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 100,
          "x-ms-identifiers": []
        },
        "ocspEndpoints": {
          "description": "The OCSP endpoints to include in the certificate",
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 100,
          "x-ms-identifiers": []
        },
        "keyTypes": {
          "description": "The allowed key types.",
          "type": "object",
          "properties": {
            "allowed": {
              "description": "The allowed key type list.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "requireSignatureValidation": {
          "type": "boolean",
          "description": "CSR signature validation occurs by default. To disable CSR signature validation for enrollment, explicitly set this property to false."
        },
        "customExtensions": {
          "description": "The enrollment policy for custom extensions.",
          "type": "object",
          "$ref": "#/definitions/CustomExtensionRule"
        }
      }
    },
    "ValidityPeriod": {
      "type": "object",
      "properties": {
        "source": {
          "description": "The source to use for the values of the validity period.",
          "type": "string",
          "enum": [
            "Policy",
            "Substitutes"
          ],
          "x-ms-enum": {
            "name": "Source",
            "modelAsString": true
          }
        },
        "notBeforeSkewMinutes": {
          "description": "When generating a certificate, the number of minutes to add to the current time when calculating the NotBefore date.",
          "type": "integer",
          "format": "int32"
        },
        "valueNotBeforeOffSetDays": {
          "description": "Include this property when source is policy. This is the number of days to add to the current time when calculating the NotAfter date.",
          "type": "integer",
          "format": "int32"
        },
        "valueValidityPeriodDays": {
          "description": "Include this property when source is policy. This is the number of days to add to the NotBefore date to determine the NotAfter date.",
          "type": "integer",
          "format": "int32"
        },
        "allowedNotBeforeOffSetDays": {
          "description": "Include this property when source is substitutes. This is the max number of days past the current time that is allowed in the NotBefore date in the substitutes",
          "type": "integer",
          "format": "int32"
        },
        "allowedValidityPeriodDays": {
          "description": "Include this property when source is substitutes. This is the max number of days allowed between NotBefore and NotAfter.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ExtendedKeyUsageRule": {
      "type": "object",
      "properties": {
        "source": {
          "description": "The source to use for the values of the extended key usage field.",
          "type": "string",
          "enum": [
            "Policy",
            "Csr",
            "Substitutes"
          ],
          "x-ms-enum": {
            "name": "Source",
            "modelAsString": true
          }
        },
        "value": {
          "description": "When source is policy, the values to include in the certificate.",
          "type": "array",
          "items": {
            "type": "string",
            "description": "An EKU. This must be either one of the following (AnyExtendedKeyUsage, ServerAuth, ClientAuth, CodeSigning, EmailProtection, IpsecEndSystem, IpsecTunnel, IpsecUser, TimeStamping, OcspSigning, SmartCardLogon, AttestationIdentityKey) or an OID.",
            "readOnly": false
          }
        },
        "allowed": {
          "description": "When source is csr or substitutes, the values that are allowed.",
          "type": "string",
          "items": {
            "type": "string",
            "description": "An EKU. This must be either one of the following (AnyExtendedKeyUsage, ServerAuth, ClientAuth, CodeSigning, EmailProtection, IpsecEndSystem, IpsecTunnel, IpsecUser, TimeStamping, OcspSigning, SmartCardLogon, AttestationIdentityKey) or an OID.",
            "readOnly": false
          }
        },
        "extendedKeyUsageMode": {
          "description": "When true the certificate authority (CA) will allow anyExtendedKeyUsage extendedKeyUsage (EKU) in enrolled certificate and not enforce that the issuing CA certificate have a superset of the enrolled certificate EKUs.",
          "type": "string",
          "readOnly": false,
          "x-ms-client-default": "RestrictToIssuingCaExtendedKeyUsage",
          "enum": [
            "AllowAnyExtendedKeyUsage",
            "RestrictToIssuingCaExtendedKeyUsage"
          ],
          "x-ms-enum": {
            "name": "ExtendedKeyUsageMode",
            "modelAsString": true
          }
        }
      }
    },
    "KeyUsageRule": {
      "type": "object",
      "properties": {
        "source": {
          "description": "The source to use for the values of the key usage field.",
          "type": "string",
          "enum": [
            "Policy",
            "Csr",
            "Substitutes"
          ],
          "x-ms-enum": {
            "name": "Source",
            "modelAsString": true
          }
        },
        "value": {
          "description": "When source is policy, the values to include in the certificate.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "EncipherOnly",
              "CrlSign",
              "KeyCertSign",
              "KeyAgreement",
              "DataEncipherment",
              "KeyEncipherment",
              "NonRepudiation",
              "DigitalSignature",
              "DecipherOnly"
            ],
            "x-ms-enum": {
              "name": "ValueKeyUsage",
              "modelAsString": true
            },
            "maxItems": 10,
            "x-ms-identifiers": []
          }
        },
        "allowed": {
          "description": "When source is csr or substitutes, the values that are allowed.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "EncipherOnly",
              "CrlSign",
              "KeyCertSign",
              "KeyAgreement",
              "DataEncipherment",
              "KeyEncipherment",
              "NonRepudiation",
              "DigitalSignature",
              "DecipherOnly"
            ],
            "x-ms-enum": {
              "name": "AllowedKeyUsage",
              "modelAsString": true
            },
            "maxItems": 9,
            "x-ms-identifiers": []
          }
        }
      }
    },
    "SubjectAlternativeNameRule": {
      "type": "object",
      "properties": {
        "source": {
          "description": "The source(s) to use for the values of the subject alternative names.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Policy",
              "Csr",
              "Substitutes"
            ],
            "x-ms-enum": {
              "name": "Source",
              "modelAsString": true
            },
            "maxItems": 3,
            "x-ms-identifiers": []
          }
        },
        "value": {
          "description": "When the source is policy the value(s) to use in the certificate.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 100,
          "x-ms-identifiers": []
        },
        "allowed": {
          "description": "When the source is csr and/or substitutes the allowed values to be used in the certificate.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 100,
          "x-ms-identifiers": []
        },
        "forbidden": {
          "description": "When the source is csr and/or substitutes the values that are prohibited to be used in a certificate.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 100,
          "x-ms-identifiers": []
        }
      }
    },
    "DistinguishedNameRule": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "description": "The source to obtain the distinguished name value.",
          "enum": [
            "Policy",
            "Csr",
            "Substitutes"
          ],
          "x-ms-enum": {
            "name": "Source",
            "modelAsString": true
          }
        },
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 100,
          "x-ms-identifiers": []
        },
        "allowed": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 100,
          "x-ms-identifiers": []
        },
        "forbidden": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 100,
          "x-ms-identifiers": []
        }
      }
    },
    "CommonName": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "description": "The source to obtain the common name value.",
          "readOnly": false,
          "enum": [
            "Csr",
            "Policy",
            "Substitutes"
          ],
          "x-ms-enum": {
            "name": "Source",
            "modelAsString": true
          },
          "maxItems": 100,
          "x-ms-identifiers": []
        },
        "value": {
          "type": "string",
          "description": "When the source is policy the value to use in the certificate common name.",
          "readOnly": false
        },
        "dns": {
          "$ref": "#/definitions/PolicyRule"
        },
        "ipAddress": {
          "$ref": "#/definitions/PolicyRule"
        }
      }
    },
    "CustomExtensionRule": {
      "type": "object",
      "properties": {
        "allCsrExtensionsAllowed": {
          "type": "boolean",
          "description": "If false, the policy can specify allowedCsrExtensions. If true, then the policy cannot specify allowedCsrExtensions.",
          "readOnly": false
        },
        "allowedCsrExtensions": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The allowed CSR extensions for this policy. Must only contain OID values.",
            "readOnly": false
          }
        },
        "additionalExtensions": {
          "type": "array",
          "description": "The list of additional extensions to put into every certificate.",
          "readOnly": false,
          "items": {
            "$ref": "#/definitions/AdditionalExtension"
          },
          "maxItems": 100
        }
      }
    },
    "PolicyRule": {
      "type": "object",
      "properties": {
        "allowed": {
          "type": "array",
          "items": {
            "type": "string",
            "readOnly": false
          }
        },
        "forbidden": {
          "type": "array",
          "items": {
            "type": "string",
            "readOnly": false
          },
          "maxItems": 100,
          "x-ms-identifiers": []
        }
      }
    },
    "AdditionalExtension": {
      "type": "object",
      "properties": {
        "oid": {
          "type": "string",
          "description": "The unique Object Identifier (OID) of the extension.",
          "readOnly": false
        },
        "critical": {
          "type": "boolean",
          "description": "Defines whether the extension should be marked as critical in the certificate.",
          "readOnly": false
        },
        "data": {
          "type": "string",
          "description": "A plaintext string that will be encoded into an ASN.1 value for the defined extension.",
          "readOnly": false
        }
      }
    },
    "ApiEnrollmentPolicyList": {
      "type": "object",
      "description": "The response of a list enrollment policies operation.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiEnrollmentPolicy"
          },
          "description": "A list of enrollment policies.",
          "maxItems": 100
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results.",
          "maxLength": 1000
        }
      }
    }
  }
}
