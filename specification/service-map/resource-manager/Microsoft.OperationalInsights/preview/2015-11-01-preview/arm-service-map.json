{
  "swagger": "2.0",
  "info": {
    "title": "Service Map",
    "description": "Service Map API Reference",
    "version": "2015-11-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines": {
      "get": {
        "tags": [
          "Machines"
        ],
        "operationId": "Machines_ListByWorkspace",
        "description": "Returns a collection of machines matching the specified conditions.  The returned collection represents either machines that are active/live during the specified interval  of time (`live=true` and `startTime`/`endTime` are specified) or that are known to have existed at or  some time prior to the specified point in time (`live=false` and `timestamp` is specified).",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "live",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": true,
            "description": "Specifies whether to return live resources (true) or inventory resources (false). Defaults to **true**. When retrieving live resources, the start time (`startTime`) and end time (`endTime`) of the desired interval should be included. When retrieving inventory resources, an optional timestamp (`timestamp`) parameter can be specified to return the version of each resource closest (not-after) that timestamp."
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow"
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying a time instance relative to which to evaluate each machine resource. Only applies when `live=false`. When not specified, the service uses DateTime.UtcNow."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 200,
            "description": "Page size to use. When not specified, the default page size is 100 records."
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MachineCollection"
            }
          },
          "default": {
            "description": "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}": {
      "get": {
        "tags": [
          "Machines"
        ],
        "operationId": "Machines_Get",
        "description": "Returns the specified machine.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MachineNameParameter"
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying a time instance relative to which to evaluate the machine resource. When not specified, the service uses DateTime.UtcNow."
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Machine"
            }
          },
          "default": {
            "description": "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/liveness": {
      "get": {
        "tags": [
          "Machines"
        ],
        "operationId": "Machines_GetLiveness",
        "description": "Obtains the liveness status of the machine during the specified time interval.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MachineNameParameter"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Liveness"
            }
          },
          "default": {
            "description": "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/connections": {
      "get": {
        "tags": [
          "Machines"
        ],
        "operationId": "Machines_ListConnections",
        "description": "Returns a collection of connections terminating or originating at the specified machine",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MachineNameParameter"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConnectionCollection"
            }
          },
          "default": {
            "description": "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/processes": {
      "get": {
        "tags": [
          "Processes",
          "Machines"
        ],
        "operationId": "Machines_ListProcesses",
        "description": "Returns a collection of processes on the specified machine matching the specified conditions. The returned collection represents either processes that are active/live during the specified interval  of time (`live=true` and `startTime`/`endTime` are specified) or that are known to have existed at or  some time prior to the specified point in time (`live=false` and `timestamp` is specified).        ",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MachineNameParameter"
          },
          {
            "name": "live",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": true,
            "description": "Specifies whether to return live resources (true) or inventory resources (false). Defaults to **true**. When retrieving live resources, the start time (`startTime`) and end time (`endTime`) of the desired interval should be included. When retrieving inventory resources, an optional timestamp (`timestamp`) parameter can be specified to return the version of each resource closest (not-after) that timestamp."
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow"
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying a time instance relative to which to evaluate all process resource. Only applies when `live=false`. When not specified, the service uses DateTime.UtcNow."
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProcessCollection"
            }
          },
          "default": {
            "description": "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/processes/{processName}": {
      "get": {
        "tags": [
          "Processes"
        ],
        "operationId": "Processes_Get",
        "description": "Returns the specified process.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MachineNameParameter"
          },
          {
            "$ref": "#/parameters/ProcessNameParameter"
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying a time instance relative to which to evaluate a resource. When not specified, the service uses DateTime.UtcNow."
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Process"
            }
          },
          "default": {
            "description": "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/processes/{processName}/liveness": {
      "get": {
        "tags": [
          "Processes"
        ],
        "operationId": "Processes_GetLiveness",
        "description": "Obtains the liveness status of the process during the specified time interval.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MachineNameParameter"
          },
          {
            "$ref": "#/parameters/ProcessNameParameter"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Liveness"
            }
          },
          "default": {
            "description": "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/processes/{processName}/acceptingPorts": {
      "get": {
        "tags": [
          "Processes"
        ],
        "operationId": "Processes_ListAcceptingPorts",
        "description": "Returns a collection of ports on which this process is accepting",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MachineNameParameter"
          },
          {
            "$ref": "#/parameters/ProcessNameParameter"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PortCollection"
            }
          },
          "default": {
            "description": "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/processes/{processName}/connections": {
      "get": {
        "tags": [
          "Processes"
        ],
        "operationId": "Processes_ListConnections",
        "description": "Returns a collection of connections terminating or originating at the specified process",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MachineNameParameter"
          },
          {
            "$ref": "#/parameters/ProcessNameParameter"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConnectionCollection"
            }
          },
          "default": {
            "description": "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/ports": {
      "get": {
        "tags": [
          "Machines",
          "Ports"
        ],
        "operationId": "Machines_ListPorts",
        "description": "Returns a collection of live ports on the specified machine during the specified time interval.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MachineNameParameter"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PortCollection"
            }
          },
          "default": {
            "description": "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/ports/{portName}": {
      "get": {
        "tags": [
          "Ports"
        ],
        "operationId": "Ports_Get",
        "description": "Returns the specified port. The port must be live during the specified time interval. If the port is not live during the interval, status 404 (Not Found) is returned.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MachineNameParameter"
          },
          {
            "$ref": "#/parameters/PortNameParameter"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Port"
            }
          },
          "default": {
            "description": "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/ports/{portName}/liveness": {
      "get": {
        "tags": [
          "Ports"
        ],
        "operationId": "Ports_GetLiveness",
        "description": "Obtains the liveness status of the port during the specified time interval.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MachineNameParameter"
          },
          {
            "$ref": "#/parameters/PortNameParameter"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Liveness"
            }
          },
          "default": {
            "description": "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/ports/{portName}/acceptingProcesses": {
      "get": {
        "tags": [
          "Ports",
          "Processes"
        ],
        "operationId": "Ports_ListAcceptingProcesses",
        "description": "Returns a collection of processes accepting on the specified port",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MachineNameParameter"
          },
          {
            "$ref": "#/parameters/PortNameParameter"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProcessCollection"
            }
          },
          "default": {
            "description": "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/ports/{portName}/connections": {
      "get": {
        "tags": [
          "Ports"
        ],
        "operationId": "Ports_ListConnections",
        "description": "Returns a collection of connections established via the specified port.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MachineNameParameter"
          },
          {
            "$ref": "#/parameters/PortNameParameter"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConnectionCollection"
            }
          },
          "default": {
            "description": "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/machineGroups": {
      "get": {
        "tags": [
          "Machines",
          "MachineGroups"
        ],
        "operationId": "Machines_ListMachineGroupMembership",
        "description": "Returns a collection of machine groups this machine belongs to.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MachineNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MachineGroupCollection"
            }
          },
          "default": {
            "description": "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/clientGroups/{clientGroupName}": {
      "get": {
        "tags": [
          "Client Groups"
        ],
        "operationId": "ClientGroups_Get",
        "description": "Retrieves the specified client group",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ClientGroupNameParameter"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ClientGroup"
            }
          },
          "default": {
            "description": "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/clientGroups/{clientGroupName}/membersCount": {
      "get": {
        "tags": [
          "Client Groups"
        ],
        "operationId": "ClientGroups_GetMembersCount",
        "description": "Returns the approximate number of members in the client group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ClientGroupNameParameter"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ClientGroupMembersCount"
            }
          },
          "default": {
            "description": "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/clientGroups/{clientGroupName}/members": {
      "get": {
        "tags": [
          "Client Groups"
        ],
        "operationId": "ClientGroups_ListMembers",
        "description": "Returns the members of the client group during the specified time interval.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ClientGroupNameParameter"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 200,
            "description": "Page size to use. When not specified, the default page size is 100 records."
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ClientGroupMembersCollection"
            }
          },
          "default": {
            "description": "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/generateMap": {
      "post": {
        "tags": [
          "Maps"
        ],
        "operationId": "Maps_Generate",
        "description": "Generates the specified map.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MapRequest"
            },
            "description": "Request options."
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MapResponse"
            }
          },
          "default": {
            "description": "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/summaries/machines": {
      "get": {
        "tags": [
          "Summaries"
        ],
        "operationId": "Summaries_GetMachines",
        "description": "Returns summary information about the machines in the workspace.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MachinesSummary"
            }
          },
          "default": {
            "description": "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machineGroups": {
      "get": {
        "tags": [
          "MachineGroups"
        ],
        "operationId": "MachineGroups_ListByWorkspace",
        "description": "Returns all machine groups.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MachineGroupCollection"
            }
          },
          "default": {
            "description": "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      },
      "post": {
        "tags": [
          "MachineGroups"
        ],
        "operationId": "MachineGroups_Create",
        "description": "Creates a new machine group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "machineGroup",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MachineGroup"
            },
            "description": "Machine Group resource to create."
          }
        ],
        "responses": {
          "201": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MachineGroup"
            }
          },
          "default": {
            "description": "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machineGroups/{machineGroupName}": {
      "get": {
        "tags": [
          "MachineGroups"
        ],
        "operationId": "MachineGroups_Get",
        "description": "Returns the specified machine group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MachineGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MachineGroup"
            }
          },
          "default": {
            "description": "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "MachineGroups"
        ],
        "operationId": "MachineGroups_Update",
        "description": "Updates a machine group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MachineGroupNameParameter"
          },
          {
            "name": "machineGroup",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MachineGroup"
            },
            "description": "Machine Group resource to update."
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MachineGroup"
            }
          },
          "default": {
            "description": "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MachineGroups"
        ],
        "operationId": "MachineGroups_Delete",
        "description": "Deletes the specified Machine Group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MachineGroupNameParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The operation completed successfully."
          },
          "default": {
            "description": "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Resource": {
      "description": "Resource model definition.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Resource type.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Resource name.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceReference": {
      "description": "Represents a reference to another resource.",
      "discriminator": "kind",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource URI."
        },
        "type": {
          "type": "string",
          "description": "Resource type qualifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Resource name.",
          "readOnly": true
        },
        "kind": {
          "type": "string",
          "description": "Specifies the sub-class of the reference.",
          "enum": [
            "ref:machine",
            "ref:machinewithhints",
            "ref:process",
            "ref:port",
            "ref:onmachine"
          ]
        }
      },
      "required": [
        "id",
        "kind"
      ]
    },
    "MachineReference": {
      "description": "Reference to a machine.",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceReference"
        }
      ],
      "x-ms-discriminator-value": "ref:machine"
    },
    "ProcessReference": {
      "description": "Reference to a process.",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceReference"
        }
      ],
      "x-ms-discriminator-value": "ref:process",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "description": "Resource properties.",
          "properties": {
            "machine": {
              "$ref": "#/definitions/MachineReference",
              "description": "Machine hosting the process.",
              "readOnly": true
            }
          }
        }
      }
    },
    "PortReference": {
      "description": "Reference to a port.",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceReference"
        }
      ],
      "x-ms-discriminator-value": "ref:port",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "description": "Resource properties.",
          "properties": {
            "machine": {
              "$ref": "#/definitions/MachineReference",
              "description": "Machine hosting the port.",
              "readOnly": true
            },
            "ipAddress": {
              "type": "string",
              "description": "IP address of the port.",
              "readOnly": true
            },
            "portNumber": {
              "type": "integer",
              "format": "int32",
              "description": "Port number."
            }
          }
        }
      }
    },
    "MachineReferenceWithHints": {
      "description": "A machine reference with a hint of the machine's name and operating system.",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceReference"
        }
      ],
      "x-ms-discriminator-value": "ref:machinewithhints",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "description": "Machine reference with name and os hints.",
          "properties": {
            "displayNameHint": {
              "description": "Last known display name.",
              "type": "string",
              "readOnly": true
            },
            "osFamilyHint": {
              "description": "Last known operating system family.",
              "$ref": "#/definitions/OperatingSystemFamily",
              "readOnly": true
            }
          }
        }
      }
    },
    "CoreResource": {
      "description": "Marker resource for the core Service Map resources",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "discriminator": "kind",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource ETAG."
        },
        "kind": {
          "type": "string",
          "description": "Additional resource type qualifier.",
          "enum": [
            "machine",
            "process",
            "port",
            "clientGroup",
            "machineGroup"
          ]
        }
      },
      "required": [
        "kind"
      ]
    },
    "Machine": {
      "description": "A machine resource represents a discovered computer system. It can be *monitored*, i.e., a Dependency Agent is running on it, or *discovered*, i.e., its existence was inferred by observing the data stream from monitored machines. As machines change, prior versions of the machine resource are preserved and available for access. A machine is live during an interval of time, if either its Dependency Agent has reported data during (parts) of that interval, or a Dependency agent running on other machines has reported activity associated with the machine.",
      "allOf": [
        {
          "$ref": "#/definitions/CoreResource"
        }
      ],
      "x-ms-discriminator-value": "machine",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "description": "Resource properties.",
          "properties": {
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "description": "UTC date and time when this resource was updated in the system."
            },
            "monitoringState": {
              "$ref": "#/definitions/MonitoringState",
              "description": "Specifies whether the machine is actively monitored or discovered."
            },
            "virtualizationState": {
              "$ref": "#/definitions/VirtualizationState",
              "description": "Specifies whether the machine is virtualized."
            },
            "displayName": {
              "type": "string",
              "description": "Name to use for display purposes"
            },
            "computerName": {
              "type": "string",
              "description": "Name of the machine, e.g., server"
            },
            "fullyQualifiedDomainName": {
              "type": "string",
              "description": "Fully-qualified name of the machine, e.g., server.company.com"
            },
            "bootTime": {
              "type": "string",
              "format": "date-time",
              "description": "UTC date and time when the machine last booted"
            },
            "timezone": {
              "$ref": "#/definitions/Timezone",
              "description": "Timezone of the machine."
            },
            "agent": {
              "$ref": "#/definitions/AgentConfiguration",
              "description": "Dependency Agent configuration."
            },
            "resources": {
              "$ref": "#/definitions/MachineResourcesConfiguration",
              "description": "Machine resources (memory, cpu, etc.)."
            },
            "networking": {
              "$ref": "#/definitions/NetworkConfiguration",
              "description": "Network configuration (ips, gateways, dns, etc.)"
            },
            "operatingSystem": {
              "$ref": "#/definitions/OperatingSystemConfiguration",
              "description": "Operating system information."
            },
            "virtualMachine": {
              "$ref": "#/definitions/VirtualMachineConfiguration",
              "description": "Virtualization-related configuration. Present only when `virtualizationState` is `virtual`."
            },
            "hypervisor": {
              "$ref": "#/definitions/HypervisorConfiguration",
              "description": "Hypervisor-related configuration. Present only when 'virtualizationState' is `hypervisor`."
            }
          }
        }
      }
    },
    "Process": {
      "description": "A process resource represents a process running on a machine. The process may be actively *monitored*, i.e., a Dependency Agent is running on its machine, or *discovered*, i.e., its existence was inferred by observing the data stream from monitored machines. A process resource represents a pool of actual operating system resources that share command lines and metadata. As the process pool evolves over time, prior versions of the process resource are preserved and available for access. A process is live during an interval of time, if that process is executing during (parts) of that interval",
      "allOf": [
        {
          "$ref": "#/definitions/CoreResource"
        }
      ],
      "x-ms-discriminator-value": "process",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "description": "Resource properties.",
          "properties": {
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "description": "UTC date and time when this process resource was updated in the system"
            },
            "monitoringState": {
              "$ref": "#/definitions/MonitoringState",
              "description": "Specifies whether the process is actively monitored or discovered."
            },
            "machine": {
              "$ref": "#/definitions/ResourceReference",
              "description": "Machine hosting this process."
            },
            "executableName": {
              "type": "string",
              "description": "The name of the process executable"
            },
            "displayName": {
              "type": "string",
              "description": "Name to use for display purposes"
            },
            "startTime": {
              "type": "string",
              "format": "date-time",
              "description": "UTC date and time when the process started"
            },
            "role": {
              "type": "string",
              "enum": [
                "webServer",
                "appServer",
                "databaseServer",
                "ldapServer",
                "smbServer"
              ],
              "x-ms-enum": {
                "name": "ProcessRole",
                "modelAsString": true
              },
              "description": "The inferred role of this process based on its name, command line, etc."
            },
            "details": {
              "$ref": "#/definitions/ProcessDetails",
              "description": "Process metadata (command line, product name, etc.)."
            },
            "user": {
              "$ref": "#/definitions/ProcessUser",
              "description": "Information about the account under which the process is executing."
            },
            "clientOf": {
              "$ref": "#/definitions/ResourceReference",
              "description": "Present only for a discovered process acting as a client of a monitored process/machine/port. References the monitored process/machine/port that this process is a client of."
            },
            "acceptorOf": {
              "$ref": "#/definitions/ResourceReference",
              "description": "Present only for a discovered process acting as a server. References the port on which the discovered process is accepting."
            }
          }
        }
      }
    },
    "Port": {
      "description": "A port resource represents a server port on a machine. The port may be actively *monitored*, i.e., a Dependency Agent is running on its machine, or *discovered*, i.e., its existence was inferred by observing the data stream from monitored machines. A port is live during an interval of time, if that port had associated activity during (parts) of that interval.",
      "allOf": [
        {
          "$ref": "#/definitions/CoreResource"
        }
      ],
      "x-ms-discriminator-value": "port",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "description": "Resource properties.",
          "properties": {
            "monitoringState": {
              "$ref": "#/definitions/MonitoringState",
              "description": "Specifies whether the port is actively monitored or discovered."
            },
            "machine": {
              "$ref": "#/definitions/ResourceReference",
              "description": "Machine hosting this port."
            },
            "displayName": {
              "type": "string",
              "description": "Name to use for display purposes."
            },
            "ipAddress": {
              "type": "string",
              "description": "IP address associated with the port. At present only IPv4 addresses are supported."
            },
            "portNumber": {
              "type": "integer",
              "format": "int32",
              "description": "Port number."
            }
          }
        }
      }
    },
    "ClientGroup": {
      "description": "Represents a collection of clients of a resource. A client group can represent the clients of a port, process, or a machine.",
      "allOf": [
        {
          "$ref": "#/definitions/CoreResource"
        }
      ],
      "x-ms-discriminator-value": "clientGroup",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "description": "Resource properties.",
          "properties": {
            "clientsOf": {
              "$ref": "#/definitions/ResourceReference",
              "description": "Reference to the resource whose clients are represented by this group."
            }
          },
          "required": [
            "clientsOf"
          ]
        }
      }
    },
    "ClientGroupMember": {
      "description": "Represents a member of a client group",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "description": "Resource properties.",
          "properties": {
            "ipAddress": {
              "type": "string",
              "description": "IP address."
            },
            "port": {
              "$ref": "#/definitions/PortReference",
              "description": "Port into which this client connected"
            },
            "processes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessReference"
              },
              "description": "Processes accepting on the above port that received connections from this client."
            }
          }
        }
      }
    },
    "MachineGroup": {
      "description": "A user-defined logical grouping of machines.",
      "allOf": [
        {
          "$ref": "#/definitions/CoreResource"
        }
      ],
      "x-ms-discriminator-value": "machineGroup",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource ETAG."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "description": "Resource properties.",
          "properties": {
            "displayName": {
              "type": "string",
              "description": "User defined name for the group",
              "minLength": 1,
              "maxLength": 256
            },
            "machines": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MachineReferenceWithHints"
              },
              "description": "References of the machines in this group. The hints within each reference do not represent the current value of  the corresponding fields. They are a snapshot created during the last time the machine group was updated."
            }
          },
          "required": [
            "displayName"
          ]
        }
      }
    },
    "Summary": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Base for all resource summaries."
    },
    "MachinesSummary": {
      "description": "A summary of the machines in the workspace.",
      "allOf": [
        {
          "$ref": "#/definitions/Summary"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MachinesSummaryProperties"
        }
      }
    },
    "Relationship": {
      "description": "A typed relationship between two entities.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "discriminator": "kind",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Additional resource type qualifier.",
          "enum": [
            "rel:connection",
            "rel:acceptor"
          ]
        }
      },
      "required": [
        "kind"
      ]
    },
    "Connection": {
      "description": "A network connection.",
      "allOf": [
        {
          "$ref": "#/definitions/Relationship"
        }
      ],
      "x-ms-discriminator-value": "rel:connection",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ConnectionProperties"
        }
      }
    },
    "Acceptor": {
      "description": "A process accepting on a port.",
      "allOf": [
        {
          "$ref": "#/definitions/Relationship"
        }
      ],
      "x-ms-discriminator-value": "rel:acceptor",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AcceptorProperties"
        }
      }
    },
    "MachineCollection": {
      "type": "object",
      "description": "Collection of Machine resources.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Machine"
          },
          "description": "Collection of Machine resources."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to the next set of resources."
        }
      }
    },
    "ProcessCollection": {
      "type": "object",
      "description": "Collection of Process resources.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Process"
          },
          "description": "Collection of Process resources."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to the next set of resources."
        }
      }
    },
    "PortCollection": {
      "type": "object",
      "description": "Collection of Port resources.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Port"
          },
          "description": "Collection of Port resources."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to the next set of resources."
        }
      }
    },
    "ClientGroupMembersCollection": {
      "type": "object",
      "description": "Collection of ClientGroupMember resources.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClientGroupMember"
          },
          "description": "Collection of ClientGroupMember resources."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to the next set of resources."
        }
      }
    },
    "ConnectionCollection": {
      "type": "object",
      "description": "Collection of Connection resources.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Connection"
          },
          "description": "Collection of Connection resources."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to the next set of resources."
        }
      }
    },
    "MachineGroupCollection": {
      "type": "object",
      "description": "Collection of Machine Group resources.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MachineGroup"
          },
          "description": "Collection of Machine Group resources."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to the next set of resources."
        }
      }
    },
    "MonitoringState": {
      "description": "Used to specify if a resources is monitored or discovered.",
      "type": "string",
      "enum": [
        "monitored",
        "discovered"
      ],
      "x-ms-enum": {
        "name": "MonitoringState",
        "modelAsString": false
      }
    },
    "VirtualizationState": {
      "description": "Specifies if the machine is physical, virtual, hypervisor, or unknown.",
      "type": "string",
      "enum": [
        "unknown",
        "physical",
        "virtual",
        "hypervisor"
      ],
      "x-ms-enum": {
        "name": "VirtualizationState",
        "modelAsString": false
      }
    },
    "Bitness": {
      "description": "Specifies the bitness of a machine or process.",
      "type": "string",
      "enum": [
        "32bit",
        "64bit"
      ],
      "x-ms-enum": {
        "name": "Bitness",
        "modelAsString": false
      }
    },
    "OperatingSystemFamily": {
      "description": "Specifies the operating system family, e.g., Linux, Windows, etc.",
      "type": "string",
      "enum": [
        "unknown",
        "windows",
        "linux",
        "solaris",
        "aix"
      ],
      "x-ms-enum": {
        "name": "OperatingSystemFamily",
        "modelAsString": false
      }
    },
    "MachineRebootStatus": {
      "description": "Specifies if the machine has been rebooted since the installation of the dependency agent.",
      "type": "string",
      "enum": [
        "unknown",
        "rebooted",
        "notRebooted"
      ],
      "x-ms-enum": {
        "name": "MachineRebootStatus",
        "modelAsString": false
      }
    },
    "Accuracy": {
      "description": "Specifies the accuracy of a computation.",
      "type": "string",
      "enum": [
        "actual",
        "estimated"
      ],
      "x-ms-enum": {
        "name": "Accuracy",
        "modelAsString": false
      }
    },
    "VirtualMachineType": {
      "description": "Specifies the virtualization type of a machine.",
      "type": "string",
      "enum": [
        "unknown",
        "hyperv",
        "ldom",
        "lpar",
        "vmware",
        "virtualPc",
        "xen"
      ],
      "x-ms-enum": {
        "name": "VirtualMachineType",
        "modelAsString": false
      }
    },
    "HypervisorType": {
      "description": "Specifies the hypervisor type of a machine.",
      "type": "string",
      "enum": [
        "unknown",
        "hyperv"
      ],
      "x-ms-enum": {
        "name": "HypervisorType",
        "modelAsString": false
      }
    },
    "ConnectionFailureState": {
      "description": "Connection failure state:\n * ```ok``` indicates no failures\n * ```failed``` indicates only failures\n * ```mixed``` indicates both failures and successes",
      "type": "string",
      "enum": [
        "ok",
        "failed",
        "mixed"
      ],
      "x-ms-enum": {
        "name": "ConnectionFailureState",
        "modelAsString": false
      }
    },
    "SummaryProperties": {
      "type": "object",
      "description": "Base for all summaries.",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Summary interval start time."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Summary interval end time."
        }
      },
      "required": [
        "startTime",
        "endTime"
      ]
    },
    "MachineCountsByOperatingSystem": {
      "type": "object",
      "description": "Machines by operating system.",
      "properties": {
        "windows": {
          "type": "integer",
          "format": "int32",
          "description": "Number of live Windows machines."
        },
        "linux": {
          "type": "integer",
          "format": "int32",
          "description": "Number of live Linux machines."
        }
      },
      "required": [
        "windows",
        "linux"
      ]
    },
    "MachinesSummaryProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SummaryProperties"
        }
      ],
      "description": "Summarizes machines in the workspace.",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of machines."
        },
        "live": {
          "type": "integer",
          "format": "int32",
          "description": "Number of live machines."
        },
        "os": {
          "$ref": "#/definitions/MachineCountsByOperatingSystem",
          "description": "Machine counts by operating system."
        }
      },
      "required": [
        "total",
        "live",
        "os"
      ]
    },
    "RelationshipProperties": {
      "description": "Relationship properties.",
      "properties": {
        "source": {
          "$ref": "#/definitions/ResourceReference",
          "description": "Source resource of the relationship."
        },
        "destination": {
          "$ref": "#/definitions/ResourceReference",
          "description": "Destination resource of the relationship."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Relationship start time."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Relationship end time."
        }
      },
      "required": [
        "source",
        "destination"
      ]
    },
    "ConnectionProperties": {
      "description": "Properties for a connection resource.",
      "allOf": [
        {
          "$ref": "#/definitions/RelationshipProperties"
        }
      ],
      "properties": {
        "serverPort": {
          "$ref": "#/definitions/PortReference",
          "description": "Reference to the server port via which this connection has been established."
        },
        "failureState": {
          "$ref": "#/definitions/ConnectionFailureState",
          "description": "Specifies whether there are only successful, failed or a mixture of both connections represented by this resource."
        }
      }
    },
    "AcceptorProperties": {
      "description": "Properties for an acceptor relationship.",
      "properties": {
        "source": {
          "$ref": "#/definitions/PortReference",
          "description": "Port being accepted."
        },
        "destination": {
          "$ref": "#/definitions/ProcessReference",
          "description": "Accepting process."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Relationship start time."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Relationship end time."
        }
      },
      "required": [
        "source",
        "destination"
      ]
    },
    "Ipv4NetworkInterface": {
      "description": "Describes an IPv4 network interface.",
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "IPv4 address."
        },
        "subnetMask": {
          "type": "string",
          "default": "255.255.255.255",
          "description": "IPv4 subnet mask."
        }
      },
      "required": [
        "ipAddress"
      ]
    },
    "Ipv6NetworkInterface": {
      "description": "Describes an IPv6 network interface.",
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "IPv6 address."
        }
      },
      "required": [
        "ipAddress"
      ]
    },
    "NetworkConfiguration": {
      "description": "Describes the network configuration of a machine.",
      "properties": {
        "ipv4Interfaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Ipv4NetworkInterface"
          },
          "description": "IPv4 interfaces."
        },
        "ipv6Interfaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Ipv6NetworkInterface"
          },
          "description": "IPv6 interfaces."
        },
        "defaultIpv4Gateways": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "IPv4 address."
          },
          "description": "Default IPv4 gateways."
        },
        "macAddresses": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "MAC address."
          },
          "description": "MAC addresses of all active network interfaces."
        },
        "dnsNames": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "DNS name."
          },
          "description": "DNS names associated with the machine."
        }
      }
    },
    "AgentConfiguration": {
      "description": "Describes the configuration of the Dependency Agent installed on a machine.",
      "properties": {
        "agentId": {
          "type": "string",
          "description": "Health Service Agent unique identifier."
        },
        "dependencyAgentId": {
          "type": "string",
          "description": "Dependency Agent unique identifier."
        },
        "dependencyAgentVersion": {
          "type": "string",
          "description": "Dependency Agent version number."
        },
        "dependencyAgentRevision": {
          "type": "string",
          "description": "Dependency Agent revision number."
        },
        "rebootStatus": {
          "$ref": "#/definitions/MachineRebootStatus",
          "description": "Specifies whether the machine has been rebooted since the Dependency Agent installation."
        },
        "clockGranularity": {
          "type": "integer",
          "format": "int32",
          "description": "Machine clock granularity in milliseconds."
        }
      },
      "required": [
        "agentId"
      ]
    },
    "Timezone": {
      "description": "Describes a timezone.",
      "properties": {
        "fullName": {
          "type": "string",
          "description": "Timezone full name."
        }
      }
    },
    "OperatingSystemConfiguration": {
      "description": "Describes the configuration of the operating system of a machine.",
      "properties": {
        "family": {
          "$ref": "#/definitions/OperatingSystemFamily",
          "description": "Windows, Linux, etc."
        },
        "fullName": {
          "type": "string",
          "description": "Operating system full name."
        },
        "bitness": {
          "$ref": "#/definitions/Bitness",
          "description": "Operating system bitness (32-bit or 64-bit)."
        }
      },
      "required": [
        "family",
        "fullName",
        "bitness"
      ]
    },
    "MachineResourcesConfiguration": {
      "description": "Describes the resources of a machine.",
      "properties": {
        "physicalMemory": {
          "type": "integer",
          "format": "int32",
          "description": "Physical memory in megabytes (MB)."
        },
        "cpus": {
          "type": "integer",
          "format": "int32",
          "description": "Number of CPUs."
        },
        "cpuSpeed": {
          "type": "integer",
          "format": "int32",
          "description": "CPU speed in megahertz (Mhz)."
        },
        "cpuSpeedAccuracy": {
          "$ref": "#/definitions/Accuracy",
          "description": "Describes the accuracy of the cpuSpeed field."
        }
      }
    },
    "VirtualMachineConfiguration": {
      "description": "Describes the virtualizaton-related configuration of a machine.",
      "properties": {
        "virtualMachineType": {
          "$ref": "#/definitions/VirtualMachineType",
          "description": "Specifies the virtualization technology used by the machine (hyperv, vmware, etc.)"
        },
        "nativeMachineId": {
          "type": "string",
          "description": "The unique identifier of the virtual machine as reported by the underlying virtualization sytem."
        },
        "virtualMachineName": {
          "type": "string",
          "description": "The Name of the virtual machine."
        },
        "nativeHostMachineId": {
          "type": "string",
          "description": "The unique identifier of the host of this virtual machine as reported by the underlying virtualization system."
        }
      }
    },
    "HypervisorConfiguration": {
      "description": "Describes the hypervisor configuration of a machine.",
      "properties": {
        "hypervisorType": {
          "$ref": "#/definitions/HypervisorType",
          "description": "Specifies the virtualization technology used by the hypervisor (hyperv, vmware, etc.)"
        },
        "nativeHostMachineId": {
          "type": "string",
          "description": "The unique identifier of the hypervisor machine as reported by the underlying virtualization system."
        }
      }
    },
    "ProcessUser": {
      "description": "Describes the user under which a process is running.",
      "properties": {
        "userName": {
          "type": "string",
          "description": "User name under which the process is running."
        },
        "userDomain": {
          "type": "string",
          "description": "Domain name for the user."
        }
      }
    },
    "ProcessDetails": {
      "description": "Describes process metadata.",
      "properties": {
        "persistentKey": {
          "type": "string",
          "description": "A unique indentifier for a process, generally resilient to process restart, computed by Service Map."
        },
        "poolId": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the identity of the process pool assigned to the process by Dependency Agent. "
        },
        "firstPid": {
          "type": "integer",
          "format": "int32",
          "description": "The Operating System Process Idendifier (PID) of the first process in this process pool."
        },
        "description": {
          "type": "string",
          "description": "Process description."
        },
        "companyName": {
          "type": "string",
          "description": "Name of company that created the process executable."
        },
        "internalName": {
          "type": "string",
          "description": "Internal process name."
        },
        "productName": {
          "type": "string",
          "description": "Product name."
        },
        "productVersion": {
          "type": "string",
          "description": "Product version."
        },
        "fileVersion": {
          "type": "string",
          "description": "File version."
        },
        "commandLine": {
          "type": "string",
          "description": "Process command line."
        },
        "executablePath": {
          "type": "string",
          "description": "Process executable path."
        },
        "workingDirectory": {
          "type": "string",
          "description": "Process workingDirectory."
        }
      }
    },
    "MapNodes": {
      "description": "The nodes (entities) of a map.",
      "type": "object",
      "properties": {
        "machines": {
          "description": "Machine resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Machine"
          }
        },
        "processes": {
          "description": "Process resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Process"
          }
        },
        "Ports": {
          "description": "Port resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Port"
          }
        },
        "ClientGroups": {
          "description": "Client Group resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClientGroup"
          }
        }
      }
    },
    "MapEdges": {
      "description": "The edges (relationships) of a map.",
      "type": "object",
      "properties": {
        "connections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Connection"
          },
          "description": "Network connections."
        },
        "acceptors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Acceptor"
          },
          "description": "Processes accepting on a port."
        }
      }
    },
    "Map": {
      "description": "A map of resources and relationships between them.",
      "type": "object",
      "properties": {
        "nodes": {
          "$ref": "#/definitions/MapNodes"
        },
        "edges": {
          "$ref": "#/definitions/MapEdges"
        }
      },
      "required": [
        "nodes",
        "edges"
      ]
    },
    "Liveness": {
      "description": "Specifies the contents of a check liveness response.",
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Liveness interval start time."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Liveness interval end time."
        },
        "live": {
          "type": "boolean",
          "description": "`true` if the resource is live during [startTime, endTime], `false` otherwise"
        }
      },
      "required": [
        "startTime",
        "endTime",
        "live"
      ]
    },
    "MapRequest": {
      "description": "Specifies the contents of request to generate a map.",
      "type": "object",
      "discriminator": "kind",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Map interval start time."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Map interval end time."
        },
        "kind": {
          "type": "string",
          "description": "The type of map to create.",
          "enum": [
            "map:single-machine-dependency",
            "map:machine-group-dependency"
          ]
        }
      },
      "required": [
        "kind"
      ]
    },
    "SingleMachineDependencyMapRequest": {
      "description": "Specifies the computation of a single server dependency map. A single server dependency map includes all direct dependencies of a given machine.",
      "allOf": [
        {
          "$ref": "#/definitions/MapRequest"
        }
      ],
      "x-ms-discriminator-value": "map:single-machine-dependency",
      "properties": {
        "machineId": {
          "type": "string",
          "description": "URI of machine resource for which to generate the map."
        }
      },
      "required": [
        "machineId"
      ]
    },
    "MachineGroupMapRequest": {
      "description": "Specifies the computation of a machine group dependency map. A machine group dependency map includes all direct dependencies of a group of machines.",
      "allOf": [
        {
          "$ref": "#/definitions/MapRequest"
        }
      ],
      "x-ms-discriminator-value": "map:machine-group-dependency",
      "properties": {
        "machineGroupId": {
          "type": "string",
          "description": "URI of machine group resource for which to generate the map."
        },
        "filterProcesses": {
          "type": "boolean",
          "description": "If true, only processes between grouped machines will be included. Any connections in or out of those processes will be included."
        }
      },
      "required": [
        "machineGroupId"
      ]
    },
    "MapResponse": {
      "description": "Specified the contents of a map response.",
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Map interval start time."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Map interval end time."
        },
        "map": {
          "$ref": "#/definitions/Map",
          "description": "The generated map."
        }
      },
      "required": [
        "startTime",
        "endTime",
        "map"
      ]
    },
    "ClientGroupMembersCount": {
      "description": "Specifies the number of members in a client group.",
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Membership interval start time."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Membership interval start time."
        },
        "groupId": {
          "type": "string",
          "description": "Client Group URI."
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "Number of members in the client group. Use this value together with the value of ```accuracy```. If accuracy is `exact` then the value represents the actual number of members in the cloud. When accuracy is `estimated`, the actual number of members is larger than the value of ```count```."
        },
        "accuracy": {
          "$ref": "#/definitions/Accuracy",
          "description": "Accuracy of the reported count."
        }
      },
      "required": [
        "startTime",
        "endTime",
        "groupId",
        "count",
        "accuracy"
      ]
    },
    "ErrorResponse": {
      "type": "object",
      "description": "An error response from the API.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Error",
          "description": "Error information."
        }
      },
      "required": [
        "error"
      ]
    },
    "Error": {
      "type": "object",
      "description": "Error details.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code identifying the specific error."
        },
        "message": {
          "type": "string",
          "description": "Error message in the caller's locale."
        }
      },
      "required": [
        "code"
      ]
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Azure subscription identifier."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "API version."
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "x-ms-parameter-location": "method",
      "required": true,
      "type": "string",
      "description": "Resource group name within the specified subscriptionId.",
      "maxLength": 64,
      "minLength": 1,
      "pattern": "[a-zA-Z0-9_-]+"
    },
    "WorkspaceNameParameter": {
      "name": "workspaceName",
      "in": "path",
      "x-ms-parameter-location": "method",
      "required": true,
      "type": "string",
      "description": "OMS workspace containing the resources of interest.",
      "minLength": 3,
      "maxLength": 63,
      "pattern": "[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]"
    },
    "MachineNameParameter": {
      "name": "machineName",
      "in": "path",
      "x-ms-parameter-location": "method",
      "required": true,
      "type": "string",
      "description": "Machine resource name.",
      "minLength": 3,
      "maxLength": 64
    },
    "ProcessNameParameter": {
      "name": "processName",
      "in": "path",
      "x-ms-parameter-location": "method",
      "required": true,
      "type": "string",
      "description": "Process resource name.",
      "minLength": 3,
      "maxLength": 128
    },
    "PortNameParameter": {
      "name": "portName",
      "in": "path",
      "x-ms-parameter-location": "method",
      "required": true,
      "type": "string",
      "description": "Port resource name.",
      "minLength": 3,
      "maxLength": 64
    },
    "ClientGroupNameParameter": {
      "name": "clientGroupName",
      "in": "path",
      "x-ms-parameter-location": "method",
      "required": true,
      "type": "string",
      "description": "Client Group resource name.",
      "minLength": 3,
      "maxLength": 256
    },
    "MachineGroupNameParameter": {
      "name": "machineGroupName",
      "in": "path",
      "x-ms-parameter-location": "method",
      "required": true,
      "type": "string",
      "description": "Machine Group resource name.",
      "minLength": 36,
      "maxLength": 36
    }
  }
}