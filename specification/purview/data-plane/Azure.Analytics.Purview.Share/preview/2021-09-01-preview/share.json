{
  "swagger": "2.0",
  "info": {
    "title": "Purview Share Client",
    "description": "Creates a data plane client for Purview Share.",
    "version": "2021-09-01-preview"
  },
  "paths": {
    "/sentShares/{sentShareName}/assets": {
      "get": {
        "tags": [
          "Asset"
        ],
        "summary": "List Assets in a share.",
        "description": "List assets on a sent share",
        "operationId": "Assets_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/sentShareName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/skipToken"
          },
          {
            "$ref": "#/parameters/$filter"
          },
          {
            "$ref": "#/parameters/$orderby"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssetList"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "Assets_List": {
            "$ref": "./examples/Assets_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/sentShares/{sentShareName}/assets/{assetName}": {
      "get": {
        "tags": [
          "Asset"
        ],
        "summary": "Get asset in a sentShare.",
        "description": "Get an asset on a sent share",
        "operationId": "Assets_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/sentShareName"
          },
          {
            "$ref": "#/parameters/assetName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "Assets_Get": {
            "$ref": "./examples/Assets_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Asset"
        ],
        "summary": "Adds a new asset to an existing share.",
        "description": "Create an asset on a sent share",
        "operationId": "Assets_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/sentShareName"
          },
          {
            "$ref": "#/parameters/assetName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "body",
            "name": "asset",
            "description": "The asset payload to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "Assets_Create": {
            "$ref": "./examples/Assets_Create.json"
          },
          "Assets_BlobAccountCreate": {
            "$ref": "./examples/Assets_BlobAccountCreate.json"
          },
          "Assets_AdlsGen2AccountCreate": {
            "$ref": "./examples/Assets_AdlsGen2AccountCreate.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Asset"
        ],
        "summary": "Delete asset in a sentShare.",
        "description": "Delete an asset on a sent share",
        "operationId": "Assets_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/sentShareName"
          },
          {
            "$ref": "#/parameters/assetName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "Assets_Delete": {
            "$ref": "./examples/Assets_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/receivedShares/{receivedShareName}/assetMappings": {
      "get": {
        "tags": [
          "AssetMapping"
        ],
        "summary": "List AssetMappings in a received share.",
        "description": "List asset mappings for a received share",
        "operationId": "AssetMappings_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/receivedShareName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/skipToken"
          },
          {
            "$ref": "#/parameters/$filter"
          },
          {
            "$ref": "#/parameters/$orderby"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssetMappingList"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "AssetMappings_List": {
            "$ref": "./examples/AssetMappings_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/receivedShares/{receivedShareName}/assetMappings/{assetMappingName}": {
      "get": {
        "tags": [
          "AssetMapping"
        ],
        "summary": "Get AssetMapping in a receivedShare.",
        "description": "Get an asset mapping for a received share",
        "operationId": "AssetMappings_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/receivedShareName"
          },
          {
            "$ref": "#/parameters/assetMappingName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssetMapping"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "AssetMappings_Get": {
            "$ref": "./examples/AssetMappings_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "AssetMapping"
        ],
        "summary": "Maps a source asset in the sent share to a destination asset in the received share.",
        "description": "Create an asset mapping on a received share",
        "operationId": "AssetMappings_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/receivedShareName"
          },
          {
            "$ref": "#/parameters/assetMappingName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "body",
            "name": "assetMapping",
            "description": "The asset mapping payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssetMapping"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssetMapping"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/AssetMapping"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "AssetMappings_Create": {
            "$ref": "./examples/AssetMappings_Create.json"
          },
          "AssetMappings_AdlsGen2AccountCreate": {
            "$ref": "./examples/AssetMappings_AdlsGen2AccountCreate.json"
          },
          "AssetMappings_BlobAccountCreate": {
            "$ref": "./examples/AssetMappings_BlobAccountCreate.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "AssetMapping"
        ],
        "summary": "Delete AssetMapping in a receivedShare.",
        "description": "Delete an asset mapping for a received share",
        "operationId": "AssetMappings_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/receivedShareName"
          },
          {
            "$ref": "#/parameters/assetMappingName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "AssetMappings_Delete": {
            "$ref": "./examples/AssetMappings_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/receivedInvitations": {
      "get": {
        "tags": [
          "ReceivedInvitation"
        ],
        "summary": "Lists the received invitations.",
        "description": "List received invitations",
        "operationId": "ReceivedInvitations_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/skipToken"
          },
          {
            "$ref": "#/parameters/$filter"
          },
          {
            "$ref": "#/parameters/$orderby"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ReceivedInvitationList"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "ReceivedInvitations_List": {
            "$ref": "./examples/ReceivedInvitations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/receivedInvitations/{receivedInvitationName}": {
      "get": {
        "tags": [
          "ReceivedInvitation"
        ],
        "summary": "Gets the received invitation identified by name",
        "description": "Get a received invitation",
        "operationId": "ReceivedInvitations_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/receivedInvitationName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ReceivedInvitation"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "ReceivedInvitations_Get": {
            "$ref": "./examples/ReceivedInvitations_Get.json"
          }
        }
      }
    },
    "/receivedInvitations/{receivedInvitationName}:reject": {
      "post": {
        "tags": [
          "ReceivedInvitation"
        ],
        "summary": "Rejects the received invitation identified by name",
        "description": "Reject a received invitation",
        "operationId": "ReceivedInvitations_Reject",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/receivedInvitationName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "header",
            "name": "repeatability-request-id",
            "description": "If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated, globally unique for all time, identifier for the request. It is recommended to use version 4 (random) UUIDs.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "receivedInvitation",
            "description": "The received invitation to reject",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReceivedInvitation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ReceivedInvitation"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "ReceivedInvitations_Reject": {
            "$ref": "./examples/ReceivedInvitations_Reject.json"
          },
          "ReceivedInvitations_ApplicationInvitation_Reject": {
            "$ref": "./examples/ReceivedInvitations_ApplicationInvitation_Reject.json"
          },
          "ReceivedInvitations_UserInvitation_Reject": {
            "$ref": "./examples/ReceivedInvitations_UserInvitation_Reject.json"
          }
        }
      }
    },
    "/receivedShares": {
      "get": {
        "tags": [
          "ReceivedShare"
        ],
        "summary": "Get a list of received shares.",
        "description": "List received shares",
        "operationId": "ReceivedShares_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/skipToken"
          },
          {
            "$ref": "#/parameters/$filter"
          },
          {
            "$ref": "#/parameters/$orderby"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ReceivedShareList"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "ReceivedShares_List": {
            "$ref": "./examples/ReceivedShares_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/receivedShares/{receivedShareName}": {
      "get": {
        "tags": [
          "ReceivedShare"
        ],
        "summary": "Get a received share by name.",
        "description": "Get a received share",
        "operationId": "ReceivedShares_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/receivedShareName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ReceivedShare"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "ReceivedShares_Get": {
            "$ref": "./examples/ReceivedShares_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ReceivedShare"
        ],
        "summary": "Create a received share in the given account.",
        "description": "Create a received share",
        "operationId": "ReceivedShares_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/receivedShareName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "body",
            "name": "receivedShare",
            "description": "The received share to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReceivedShare"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ReceivedShare"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "ReceivedShares_Create": {
            "$ref": "./examples/ReceivedShares_Create.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ReceivedShare"
        ],
        "summary": "Deletes a received share",
        "description": "Delete a received share",
        "operationId": "ReceivedShares_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/receivedShareName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "ReceivedShares_Delete": {
            "$ref": "./examples/ReceivedShares_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/receivedShares/{receivedShareName}/receivedAssets": {
      "get": {
        "tags": [
          "ReceivedShare"
        ],
        "summary": "List source asset of a received share.",
        "description": "List received assets for a received share",
        "operationId": "ReceivedAssets_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/receivedShareName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/skipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ReceivedAssetList"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "ReceivedAssets_List": {
            "$ref": "./examples/ReceivedAssets_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/sentShares": {
      "get": {
        "tags": [
          "SentShare"
        ],
        "summary": "Get list of sent shares in the given Purview account.",
        "description": "Get list of sent shares",
        "operationId": "SentShares_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/skipToken"
          },
          {
            "$ref": "#/parameters/$filter"
          },
          {
            "$ref": "#/parameters/$orderby"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SentShareList"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "SentShares_List": {
            "$ref": "./examples/SentShares_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/sentShares/{sentShareName}": {
      "get": {
        "tags": [
          "SentShare"
        ],
        "summary": "Get a sent share in the given Purview account.",
        "description": "Get a sent share",
        "operationId": "SentShares_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/sentShareName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SentShare"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "SentShares_Get": {
            "$ref": "./examples/SentShares_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "SentShare"
        ],
        "summary": "Create a sent share in the given Purview account.",
        "description": "Create a sent share",
        "operationId": "SentShares_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/sentShareName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "body",
            "name": "sentShare",
            "description": "The sent share payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SentShare"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SentShare"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SentShare"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "SentShares_CreateOrUpdate": {
            "$ref": "./examples/SentShares_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "SentShare"
        ],
        "summary": "Deletes a sent share",
        "description": "Delete a sent share",
        "operationId": "SentShares_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/sentShareName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "SentShares_Delete": {
            "$ref": "./examples/SentShares_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/sentShares/{sentShareName}/acceptedSentShares": {
      "get": {
        "tags": [
          "SentShare"
        ],
        "summary": "List of accepted shares for the current sent share.",
        "description": "Get list of accepted sent shares",
        "operationId": "AcceptedSentShares_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/sentShareName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/skipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AcceptedSentShareList"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "AcceptedSentShares_List": {
            "$ref": "./examples/AcceptedSentShares_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/sentShares/{sentShareName}/acceptedSentShares/{acceptedSentShareName}": {
      "get": {
        "tags": [
          "SentShare"
        ],
        "summary": "Get an accepted share with acceptedSentShareName to a particular sent share.",
        "description": "Get an accepted sent share",
        "operationId": "AcceptedSentShares_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/sentShareName"
          },
          {
            "$ref": "#/parameters/acceptedSentShareName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AcceptedSentShare"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "AcceptedSentShares_Get": {
            "$ref": "./examples/AcceptedSentShares_Get.json"
          }
        }
      }
    },
    "/sentShares/{sentShareName}/acceptedSentShares/{acceptedSentShareName}:reinstate": {
      "post": {
        "tags": [
          "SentShare"
        ],
        "summary": "Reinstate a revoked accepted sent share.",
        "description": "Reinstate a revoked accepted sent share",
        "operationId": "AcceptedSentShares_Reinstate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/sentShareName"
          },
          {
            "$ref": "#/parameters/acceptedSentShareName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "header",
            "name": "repeatability-request-id",
            "description": "If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated, globally unique for all time, identifier for the request. It is recommended to use version 4 (random) UUIDs.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "acceptedSentShare",
            "description": "The accepted sent share payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AcceptedSentShare"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/AcceptedSentShare"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "AcceptedSentShares_Reinstate": {
            "$ref": "./examples/AcceptedSentShares_Reinstate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/sentShares/{sentShareName}/acceptedSentShares/{acceptedSentShareName}:revoke": {
      "post": {
        "tags": [
          "SentShare"
        ],
        "summary": "Revoke an accepted sent share's access",
        "description": "Revoke an accepted sent share",
        "operationId": "AcceptedSentShares_Revoke",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/sentShareName"
          },
          {
            "$ref": "#/parameters/acceptedSentShareName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "header",
            "name": "repeatability-request-id",
            "description": "If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated, globally unique for all time, identifier for the request. It is recommended to use version 4 (random) UUIDs.",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/AcceptedSentShare"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "AcceptedSentShares_Revoke": {
            "$ref": "./examples/AcceptedSentShares_Revoke.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/sentShares/{sentShareName}/acceptedSentShares/{acceptedSentShareName}:update-expiration": {
      "post": {
        "tags": [
          "SentShare"
        ],
        "summary": "Update the expiration date of an active accepted sent share.",
        "description": "Update the expiration date of an accepted sent share",
        "operationId": "AcceptedSentShares_UpdateExpiration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/sentShareName"
          },
          {
            "$ref": "#/parameters/acceptedSentShareName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "header",
            "name": "repeatability-request-id",
            "description": "If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated, globally unique for all time, identifier for the request. It is recommended to use version 4 (random) UUIDs.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "acceptedSentShare",
            "description": "The accepted sent share payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AcceptedSentShare"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/AcceptedSentShare"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "AcceptedSentShares_UpdateExpiration": {
            "$ref": "./examples/AcceptedSentShares_UpdateExpiration.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/sentShares/{sentShareName}/sentShareInvitations": {
      "get": {
        "tags": [
          "SentShareInvitation"
        ],
        "summary": "List all Invitations in a share.",
        "description": "List sent share invitations",
        "operationId": "SentShareInvitations_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/sentShareName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/skipToken"
          },
          {
            "$ref": "#/parameters/$filter"
          },
          {
            "$ref": "#/parameters/$orderby"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SentShareInvitationList"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "SentShareInvitations_List": {
            "$ref": "./examples/SentShareInvitations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/sentShares/{sentShareName}/sentShareInvitations/{sentShareInvitationName}": {
      "get": {
        "tags": [
          "SentShareInvitation"
        ],
        "summary": "Get Invitation for a given share.",
        "description": "Get a sent share invitation",
        "operationId": "SentShareInvitations_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/sentShareName"
          },
          {
            "$ref": "#/parameters/sentShareInvitationName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SentShareInvitation"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "SentShareInvitations_Get": {
            "$ref": "./examples/SentShareInvitations_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "SentShareInvitation"
        ],
        "summary": "Create/Update a sent share invitation in the given account.",
        "description": "Create a sent share invitation",
        "operationId": "SentShareInvitations_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/sentShareName"
          },
          {
            "$ref": "#/parameters/sentShareInvitationName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "body",
            "name": "sentShareInvitation",
            "description": "The sent share invitation to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SentShareInvitation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SentShareInvitation"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SentShareInvitation"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "SentShareInvitations_CreateOrUpdate": {
            "$ref": "./examples/SentShareInvitations_CreateOrUpdate.json"
          },
          "SentShareInvitations_ApplicationInvitation_Create": {
            "$ref": "./examples/SentShareInvitations_ApplicationInvitation_Create.json"
          },
          "SentShareInvitations_UserInvitation_Create": {
            "$ref": "./examples/SentShareInvitations_UserInvitation_Create.json"
          }
        }
      },
      "delete": {
        "tags": [
          "SentShareInvitation"
        ],
        "summary": "Delete Invitation in a share.",
        "description": "Delete a sent share invitation",
        "operationId": "SentShareInvitations_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/sentShareName"
          },
          {
            "$ref": "#/parameters/sentShareInvitationName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "SentShareInvitations_Delete": {
            "$ref": "./examples/SentShareInvitations_Delete.json"
          }
        }
      }
    },
    "/activateEmail": {
      "post": {
        "tags": [
          "TenantEmailRegistration"
        ],
        "summary": "Activates the tenant and email combination using the activation code received.",
        "description": "Activates the email registration for current tenant",
        "operationId": "EmailRegistration_Activate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "header",
            "name": "repeatability-request-id",
            "description": "If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated, globally unique for all time, identifier for the request. It is recommended to use version 4 (random) UUIDs.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "tenantEmailRegistration",
            "description": "The tenant email registration payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TenantEmailRegistration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TenantEmailRegistration"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "EmailRegistration_Activate": {
            "$ref": "./examples/EmailRegistration_Activate.json"
          }
        }
      }
    },
    "/registerEmail": {
      "post": {
        "tags": [
          "TenantEmailRegistration"
        ],
        "summary": "Registers the tenant and email combination for activation.",
        "description": "Register an email for the current tenant",
        "operationId": "EmailRegistration_Register",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "header",
            "name": "repeatability-request-id",
            "description": "If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated, globally unique for all time, identifier for the request. It is recommended to use version 4 (random) UUIDs.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TenantEmailRegistration"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            }
          }
        },
        "x-ms-examples": {
          "EmailRegistration_Register": {
            "$ref": "./examples/EmailRegistration_Register.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AcceptedSentShare": {
      "description": "An accepted sent share data transfer object.",
      "required": [
        "shareKind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "shareKind": {
          "$ref": "#/definitions/ShareKind"
        }
      },
      "discriminator": "shareKind"
    },
    "AcceptedSentShareList": {
      "description": "List of accepted sent shares.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AcceptedSentShare"
          }
        }
      }
    },
    "AdlsGen2AccountAsset": {
      "description": "An adls gen2 storage account asset.",
      "required": [
        "kind",
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Asset"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AdlsGen2AccountAssetProperties",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "AdlsGen2Account"
    },
    "AdlsGen2AccountAssetMapping": {
      "description": "An blob storage account asset mapping.",
      "required": [
        "kind",
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetMapping"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AdlsGen2AccountAssetMappingProperties",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "AdlsGen2Account"
    },
    "AdlsGen2AccountAssetMappingProperties": {
      "description": "Properties of the adls gen2 storage account asset mapping.",
      "required": [
        "assetId",
        "containerName",
        "folder",
        "storageAccountResourceId"
      ],
      "type": "object",
      "properties": {
        "assetId": {
          "format": "uuid",
          "description": "The id of the sender asset.",
          "type": "string"
        },
        "assetMappingStatus": {
          "$ref": "#/definitions/AssetMappingStatus",
          "readOnly": true
        },
        "containerName": {
          "description": "Name of the container to received the shared paths.",
          "type": "string"
        },
        "folder": {
          "description": "Folder under which the shared paths will be reflected.",
          "type": "string"
        },
        "location": {
          "description": "Location of the receiver storage account.",
          "type": "string",
          "readOnly": true
        },
        "mountPath": {
          "description": "Optional mount path for the shared paths.",
          "type": "string"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        },
        "storageAccountResourceId": {
          "description": "Resource id of the receiver storage account.",
          "type": "string"
        }
      }
    },
    "AdlsGen2AccountAssetProperties": {
      "description": "Adls gen 2 account asset properties",
      "required": [
        "paths",
        "receiverAssetName",
        "storageAccountResourceId"
      ],
      "type": "object",
      "properties": {
        "location": {
          "description": "Location of the adls gen2 storage account.",
          "type": "string",
          "readOnly": true
        },
        "paths": {
          "description": "A list of adls gen2 storage account paths to be shared.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAccountPath"
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        },
        "receiverAssetName": {
          "description": "Name of the asset for the receiver.",
          "type": "string"
        },
        "storageAccountResourceId": {
          "description": "Resource id of the adls gen2 storage account.",
          "type": "string"
        }
      }
    },
    "AdlsGen2AccountReceivedAsset": {
      "description": "Adls gen2 storage account received asset",
      "required": [
        "kind",
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReceivedAsset"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AdlsGen2AccountReceivedAssetProperties",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "AdlsGen2Account"
    },
    "AdlsGen2AccountReceivedAssetProperties": {
      "description": "Properties of adls gen2 account received asset.",
      "type": "object",
      "properties": {
        "location": {
          "description": "Location of the asset.",
          "type": "string",
          "readOnly": true
        },
        "receiverAssetName": {
          "description": "Friendly name for the received asset.",
          "type": "string",
          "readOnly": true
        },
        "receiverPaths": {
          "description": "Paths from adls gen2 account made available for the share.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "ApplicationInvitation": {
      "description": "An application invitation kind.",
      "required": [
        "invitationKind",
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SentShareInvitation"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApplicationInvitationProperties",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "Application"
    },
    "ApplicationInvitationProperties": {
      "description": "Properties of the application invitation type.",
      "required": [
        "targetActiveDirectoryId",
        "targetObjectId"
      ],
      "type": "object",
      "properties": {
        "expirationDate": {
          "format": "date-time",
          "description": "The expiration date for the invitation",
          "type": "string"
        },
        "invitationId": {
          "description": "Id of the invitation",
          "type": "string",
          "readOnly": true
        },
        "invitationStatus": {
          "$ref": "#/definitions/InvitationStatus",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        },
        "respondedAt": {
          "format": "date-time",
          "description": "The time the recipient responded to the invitation.",
          "type": "string",
          "readOnly": true
        },
        "senderEmail": {
          "description": "Email address of the sender.",
          "type": "string",
          "readOnly": true
        },
        "senderName": {
          "description": "Name of the sender",
          "type": "string",
          "readOnly": true
        },
        "senderTenantName": {
          "description": "Tenant name of the sender",
          "type": "string",
          "readOnly": true
        },
        "sentAt": {
          "format": "date-time",
          "description": "Gets the time at which the invitation was sent.",
          "type": "string",
          "readOnly": true
        },
        "shareKind": {
          "$ref": "#/definitions/ShareKind"
        },
        "targetActiveDirectoryId": {
          "description": "The target azure active directory id the invitation is sent to.",
          "type": "string"
        },
        "targetObjectId": {
          "description": "The target object id in the azure active directory the invitation is sent to.",
          "type": "string"
        }
      }
    },
    "ApplicationReceivedInvitation": {
      "description": "An application received invitation kind.",
      "required": [
        "invitationKind",
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReceivedInvitation"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApplicationReceivedInvitationProperties",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "Application"
    },
    "ApplicationReceivedInvitationProperties": {
      "description": "Properties for a received invitation of kind application.",
      "required": [
        "targetActiveDirectoryId",
        "targetObjectId"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "Description shared when the invitation was created",
          "type": "string",
          "readOnly": true
        },
        "expirationDate": {
          "format": "date-time",
          "description": "The expiration date for the received share created by accepting the invitation.",
          "type": "string",
          "readOnly": true
        },
        "invitationStatus": {
          "$ref": "#/definitions/InvitationStatus",
          "readOnly": true
        },
        "location": {
          "description": "Location of the invitation.",
          "type": "string",
          "readOnly": true
        },
        "receiverEmail": {
          "description": "Email of the user/receiver who received the sent share invitation",
          "type": "string",
          "readOnly": true
        },
        "receiverName": {
          "description": "Name of the user/receiver who received the sent share invitation",
          "type": "string",
          "readOnly": true
        },
        "receiverTenantName": {
          "description": "Tenant name of the user/receiver who received the sent share invitation",
          "type": "string",
          "readOnly": true
        },
        "respondedAt": {
          "format": "date-time",
          "description": "The time the recipient responded to the invitation.",
          "type": "string",
          "readOnly": true
        },
        "senderEmail": {
          "description": "Email of the sender who created the sent share invitation",
          "type": "string",
          "readOnly": true
        },
        "senderName": {
          "description": "Name of the sender who created the sent share invitation",
          "type": "string",
          "readOnly": true
        },
        "senderTenantName": {
          "description": "Tenant name of the sender who created the sent share invitation",
          "type": "string",
          "readOnly": true
        },
        "sentAt": {
          "format": "date-time",
          "description": "Gets the time at which the invitation was sent.",
          "type": "string",
          "readOnly": true
        },
        "sentShareName": {
          "description": "Gets the source share Name.",
          "type": "string",
          "readOnly": true
        },
        "shareKind": {
          "$ref": "#/definitions/ShareKind"
        },
        "targetActiveDirectoryId": {
          "description": "The target azure active directory id the invitation is sent to.",
          "type": "string"
        },
        "targetObjectId": {
          "description": "The target object id in the azure active directory the invitation is sent to.",
          "type": "string"
        }
      }
    },
    "Asset": {
      "description": "A asset data transfer object.",
      "required": [
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "kind": {
          "$ref": "#/definitions/AssetType"
        }
      },
      "discriminator": "kind"
    },
    "AssetList": {
      "description": "List of assets.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Asset"
          }
        }
      }
    },
    "AssetMapping": {
      "description": "An asset mapping data transfer object.",
      "required": [
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "kind": {
          "$ref": "#/definitions/AssetMappingType"
        }
      },
      "discriminator": "kind"
    },
    "AssetMappingList": {
      "description": "List of asset mappings.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetMapping"
          }
        }
      }
    },
    "AssetMappingStatus": {
      "description": "State of asset mapping",
      "enum": [
        "Ok",
        "Broken"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "AssetMappingStatus",
        "modelAsString": true
      }
    },
    "AssetMappingType": {
      "description": "Types of asset mapping.",
      "enum": [
        "AdlsGen2Account",
        "BlobAccount"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "AssetMappingType",
        "modelAsString": true
      }
    },
    "AssetType": {
      "description": "The types of asset.",
      "enum": [
        "AdlsGen2Account",
        "BlobAccount"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "AssetType",
        "modelAsString": true
      }
    },
    "BlobAccountAsset": {
      "description": "A blob storage account asset.",
      "required": [
        "kind",
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Asset"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BlobAccountAssetProperties",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "BlobAccount"
    },
    "BlobAccountAssetMapping": {
      "description": "An adls gen 2 storage account asset mapping.",
      "required": [
        "kind",
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetMapping"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BlobAccountAssetMappingProperties",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "BlobAccount"
    },
    "BlobAccountAssetMappingProperties": {
      "description": "Properties of the blob storage account asset mapping.",
      "required": [
        "assetId",
        "containerName",
        "folder",
        "storageAccountResourceId"
      ],
      "type": "object",
      "properties": {
        "assetId": {
          "format": "uuid",
          "description": "The id of the sender asset.",
          "type": "string"
        },
        "assetMappingStatus": {
          "$ref": "#/definitions/AssetMappingStatus",
          "readOnly": true
        },
        "containerName": {
          "description": "Name of the container to received the shared paths.",
          "type": "string"
        },
        "folder": {
          "description": "Folder under which the shared paths will be reflected.",
          "type": "string"
        },
        "location": {
          "description": "Location of the receiver storage account.",
          "type": "string",
          "readOnly": true
        },
        "mountPath": {
          "description": "Optional mount path for the shared paths.",
          "type": "string"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        },
        "storageAccountResourceId": {
          "description": "Resource id of the receiver storage account.",
          "type": "string"
        }
      }
    },
    "BlobAccountAssetProperties": {
      "description": "Blob storage account asset properties",
      "required": [
        "paths",
        "receiverAssetName",
        "storageAccountResourceId"
      ],
      "type": "object",
      "properties": {
        "location": {
          "description": "Location of the blob storage account.",
          "type": "string",
          "readOnly": true
        },
        "paths": {
          "description": "A list of blob storage account paths to be shared.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAccountPath"
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        },
        "receiverAssetName": {
          "description": "Name of the asset for the receiver.",
          "type": "string"
        },
        "storageAccountResourceId": {
          "description": "Resource id of the blob storage account.",
          "type": "string"
        }
      }
    },
    "BlobAccountReceivedAsset": {
      "description": "Blob storage account received asset.",
      "required": [
        "kind",
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReceivedAsset"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BlobAccountReceivedAssetProperties",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "BlobAccount"
    },
    "BlobAccountReceivedAssetProperties": {
      "description": "Properties of blob account received asset.",
      "type": "object",
      "properties": {
        "location": {
          "description": "Location of the asset.",
          "type": "string",
          "readOnly": true
        },
        "receiverAssetName": {
          "description": "Friendly name for the received asset.",
          "type": "string",
          "readOnly": true
        },
        "receiverPaths": {
          "description": "Paths from blob account made available for the share.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "Collection": {
      "description": "Reference to a Collection.",
      "required": [
        "referenceName",
        "type"
      ],
      "type": "object",
      "properties": {
        "referenceName": {
          "description": "Gets or sets the reference name.",
          "type": "string"
        },
        "type": {
          "description": "Gets or sets the reference type property.",
          "type": "string",
          "x-ms-client-default": "CollectionReference"
        }
      }
    },
    "InPlaceAcceptedSentShare": {
      "description": "An in place accepted sent share.",
      "required": [
        "properties",
        "shareKind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AcceptedSentShare"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/InPlaceAcceptedSentShareProperties",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "InPlace"
    },
    "InPlaceAcceptedSentShareProperties": {
      "description": "Properties of in place accepted sent share.",
      "type": "object",
      "properties": {
        "createdAt": {
          "format": "date-time",
          "description": "created at",
          "type": "string",
          "readOnly": true
        },
        "expirationDate": {
          "format": "date-time",
          "description": "Expiration date of the received share in UTC format",
          "type": "string"
        },
        "receivedShareStatus": {
          "$ref": "#/definitions/ReceivedShareStatus",
          "readOnly": true
        },
        "receiverEmail": {
          "description": "Email of the user/receiver who received the sent share invitation and created the received share",
          "type": "string",
          "readOnly": true
        },
        "receiverName": {
          "description": "Name of the user/receiver who received the sent share invitation and created the received share",
          "type": "string",
          "readOnly": true
        },
        "receiverTargetObjectId": {
          "description": "Receiver's target object id",
          "type": "string",
          "readOnly": true
        },
        "receiverTenantName": {
          "description": "Tenant name of the user/receiver who received the sent share invitation and created the received share",
          "type": "string",
          "readOnly": true
        },
        "senderEmail": {
          "description": "Email of the sender who created the sent share invitation",
          "type": "string",
          "readOnly": true
        },
        "senderName": {
          "description": "Name of the sender who created the sent share invitation",
          "type": "string",
          "readOnly": true
        },
        "senderTenantName": {
          "description": "Tenant name of the sender who created the sent share invitation",
          "type": "string",
          "readOnly": true
        },
        "sharedAt": {
          "format": "date-time",
          "description": "Shared at",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "InPlaceReceivedShare": {
      "description": "An InPlace received share kind.",
      "required": [
        "properties",
        "shareKind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReceivedShare"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/InPlaceReceivedShareProperties",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "InPlace"
    },
    "InPlaceReceivedShareProperties": {
      "description": "Properties of in place received share.",
      "required": [
        "collection",
        "invitationId",
        "sentShareLocation"
      ],
      "type": "object",
      "properties": {
        "collection": {
          "$ref": "#/definitions/Collection"
        },
        "createdAt": {
          "format": "date-time",
          "description": "Time at which the received share was created.",
          "type": "string",
          "readOnly": true
        },
        "expirationDate": {
          "format": "date-time",
          "description": "The expiration date of the received share.",
          "type": "string"
        },
        "invitationId": {
          "description": "The invitation id.",
          "type": "string"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        },
        "receivedShareStatus": {
          "$ref": "#/definitions/ReceivedShareStatus",
          "readOnly": true
        },
        "receiverEmail": {
          "description": "Email of the user/receiver who received the sent share invitation",
          "type": "string",
          "readOnly": true
        },
        "receiverName": {
          "description": "Name of the user/receiver who received the sent share invitation",
          "type": "string",
          "readOnly": true
        },
        "receiverTenantName": {
          "description": "Tenant name of the user/receiver who received the sent share invitation",
          "type": "string",
          "readOnly": true
        },
        "senderEmail": {
          "description": "Email of the sender who created the sent share invitation",
          "type": "string",
          "readOnly": true
        },
        "senderName": {
          "description": "Name of the sender who created the sent share invitation",
          "type": "string",
          "readOnly": true
        },
        "senderTenantName": {
          "description": "Tenant name of the sender who created the sent share invitation",
          "type": "string",
          "readOnly": true
        },
        "sentShareDescription": {
          "description": "Share description.",
          "type": "string"
        },
        "sentShareLocation": {
          "description": "Sent share location.",
          "type": "string"
        },
        "sharedAt": {
          "format": "date-time",
          "description": "Time at which the sent share was shared.",
          "type": "string",
          "readOnly": true
        },
        "shareName": {
          "description": "Name of the share",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "InPlaceSentShare": {
      "description": "An InPlace share kind.",
      "required": [
        "properties",
        "shareKind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SentShare"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/InPlaceSentShareProperties",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "InPlace"
    },
    "InPlaceSentShareProperties": {
      "description": "Properties of in place sent share.",
      "required": [
        "collection"
      ],
      "type": "object",
      "properties": {
        "collection": {
          "$ref": "#/definitions/Collection"
        },
        "createdAt": {
          "format": "date-time",
          "description": "Time at which the share was created.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "Share description.",
          "type": "string"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        },
        "senderEmail": {
          "description": "Email of the sender who created the sent share.",
          "type": "string",
          "readOnly": true
        },
        "senderName": {
          "description": "Name of the sender who created the sent share.",
          "type": "string",
          "readOnly": true
        },
        "senderTenantName": {
          "description": "Tenant name of the sender who created the sent share.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "InvitationKind": {
      "description": "The types of invitations.",
      "enum": [
        "User",
        "Application"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "InvitationKind",
        "modelAsString": true
      }
    },
    "InvitationStatus": {
      "description": "Status of the invitation.",
      "enum": [
        "Pending",
        "Accepted",
        "Rejected"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "InvitationStatus",
        "modelAsString": true
      }
    },
    "ProvisioningState": {
      "description": "Provisioning status of the resource",
      "enum": [
        "Unknown",
        "Succeeded",
        "Creating",
        "Deleting",
        "Moving",
        "Failed",
        "SoftDeleting",
        "SoftDeleted",
        "SourceMoved",
        "SourceDeleted",
        "TargetMoved",
        "TargetDeleted"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "PurviewShareError": {
      "description": "The purview share error model.",
      "required": [
        "error"
      ],
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/PurviewShareErrorInfo"
        }
      }
    },
    "PurviewShareErrorInfo": {
      "description": "The purview share error body model.",
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the error",
          "type": "string"
        },
        "details": {
          "description": "Nested details of the error model",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PurviewShareErrorInfo"
          }
        },
        "message": {
          "description": "Message of the error",
          "type": "string"
        },
        "target": {
          "description": "Target of the error",
          "type": "string"
        }
      }
    },
    "ReceivedAsset": {
      "description": "A receiver asset data transfer object.",
      "required": [
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "kind": {
          "$ref": "#/definitions/AssetType"
        }
      },
      "discriminator": "kind"
    },
    "ReceivedAssetList": {
      "description": "List of received assets",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReceivedAsset"
          }
        }
      }
    },
    "ReceivedInvitation": {
      "description": "A received share invitation data transfer object.",
      "required": [
        "invitationKind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "invitationKind": {
          "$ref": "#/definitions/InvitationKind"
        }
      },
      "discriminator": "invitationKind"
    },
    "ReceivedInvitationList": {
      "description": "List of received invitations.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReceivedInvitation"
          }
        }
      }
    },
    "ReceivedShare": {
      "description": "A received share data transfer object.",
      "required": [
        "shareKind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "shareKind": {
          "$ref": "#/definitions/ShareKind"
        }
      },
      "discriminator": "shareKind"
    },
    "ReceivedShareList": {
      "description": "List of received shares.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReceivedShare"
          }
        }
      }
    },
    "ReceivedShareStatus": {
      "description": "received share status",
      "enum": [
        "Active",
        "Reinstating",
        "Revoked",
        "Revoking",
        "RevokeFailed",
        "ReinstateFailed",
        "SourceDeleted"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ReceivedShareStatus",
        "modelAsString": true
      }
    },
    "RegistrationStatus": {
      "description": "Defines the supported types for registration.",
      "enum": [
        "ActivationPending",
        "Activated",
        "ActivationAttemptsExhausted"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RegistrationStatus",
        "modelAsString": true
      }
    },
    "Resource": {
      "description": "Base data transfer object implementation for proxy resources.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource id of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SentShare": {
      "description": "A sent share data transfer object.",
      "required": [
        "shareKind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "shareKind": {
          "$ref": "#/definitions/ShareKind"
        }
      },
      "discriminator": "shareKind"
    },
    "SentShareInvitation": {
      "description": "A sent share invitation data transfer object.",
      "required": [
        "invitationKind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "invitationKind": {
          "$ref": "#/definitions/InvitationKind"
        }
      },
      "discriminator": "invitationKind"
    },
    "SentShareInvitationList": {
      "description": "List of the sent share invitations",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SentShareInvitation"
          }
        }
      }
    },
    "SentShareList": {
      "description": "List of sent shares.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SentShare"
          }
        }
      }
    },
    "ShareKind": {
      "description": "Defines the supported types for share.",
      "enum": [
        "InPlace"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ShareKind",
        "modelAsString": true
      }
    },
    "StorageAccountPath": {
      "description": "Defines a single StorageAccountPath path.",
      "required": [
        "containerName"
      ],
      "type": "object",
      "properties": {
        "containerName": {
          "description": "Gets or sets the container name.",
          "type": "string"
        },
        "receiverPath": {
          "description": "Gets or sets the path on the receiver side where the asset is to be mapped.",
          "type": "string"
        },
        "senderPath": {
          "description": "Gets or sets the path to file/folder within the container to be shared.",
          "type": "string"
        }
      }
    },
    "TenantEmailRegistration": {
      "description": "A tenant email registration data transfer object.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/TenantEmailRegistrationProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "TenantEmailRegistrationProperties": {
      "description": "Tenant email registration property bag.",
      "required": [
        "activationCode"
      ],
      "type": "object",
      "properties": {
        "activationCode": {
          "description": "Activation code for the registration.",
          "type": "string"
        },
        "activationExpiration": {
          "format": "date-time",
          "description": "Date of the activation expiration.",
          "type": "string",
          "readOnly": true
        },
        "email": {
          "description": "The email to register.",
          "type": "string",
          "readOnly": true
        },
        "registrationStatus": {
          "$ref": "#/definitions/RegistrationStatus",
          "readOnly": true
        },
        "tenantId": {
          "description": "The tenant id to register.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UserInvitation": {
      "description": "A user invitation kind.",
      "required": [
        "invitationKind",
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SentShareInvitation"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/UserInvitationProperties",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "User"
    },
    "UserInvitationProperties": {
      "description": "Properties of the user invitation type.",
      "required": [
        "targetEmail"
      ],
      "type": "object",
      "properties": {
        "expirationDate": {
          "format": "date-time",
          "description": "The expiration date for the invitation",
          "type": "string"
        },
        "invitationId": {
          "description": "Id of the invitation",
          "type": "string",
          "readOnly": true
        },
        "invitationStatus": {
          "$ref": "#/definitions/InvitationStatus",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        },
        "respondedAt": {
          "format": "date-time",
          "description": "The time the recipient responded to the invitation.",
          "type": "string",
          "readOnly": true
        },
        "senderEmail": {
          "description": "Email address of the sender.",
          "type": "string",
          "readOnly": true
        },
        "senderName": {
          "description": "Name of the sender",
          "type": "string",
          "readOnly": true
        },
        "senderTenantName": {
          "description": "Tenant name of the sender",
          "type": "string",
          "readOnly": true
        },
        "sentAt": {
          "format": "date-time",
          "description": "Gets the time at which the invitation was sent.",
          "type": "string",
          "readOnly": true
        },
        "shareKind": {
          "$ref": "#/definitions/ShareKind"
        },
        "targetEmail": {
          "description": "The receiver email for the invitation is being sent.",
          "type": "string"
        }
      }
    },
    "UserReceivedInvitation": {
      "description": "A user received invitation kind.",
      "required": [
        "invitationKind",
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReceivedInvitation"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/UserReceivedInvitationProperties",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "User"
    },
    "UserReceivedInvitationProperties": {
      "description": "Properties for a received invitation of kind user.",
      "required": [
        "targetEmail"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "Description shared when the invitation was created",
          "type": "string",
          "readOnly": true
        },
        "expirationDate": {
          "format": "date-time",
          "description": "The expiration date for the received share created by accepting the invitation.",
          "type": "string",
          "readOnly": true
        },
        "invitationStatus": {
          "$ref": "#/definitions/InvitationStatus",
          "readOnly": true
        },
        "location": {
          "description": "Location of the invitation.",
          "type": "string",
          "readOnly": true
        },
        "receiverEmail": {
          "description": "Email of the user/receiver who received the sent share invitation",
          "type": "string",
          "readOnly": true
        },
        "receiverName": {
          "description": "Name of the user/receiver who received the sent share invitation",
          "type": "string",
          "readOnly": true
        },
        "receiverTenantName": {
          "description": "Tenant name of the user/receiver who received the sent share invitation",
          "type": "string",
          "readOnly": true
        },
        "respondedAt": {
          "format": "date-time",
          "description": "The time the recipient responded to the invitation.",
          "type": "string",
          "readOnly": true
        },
        "senderEmail": {
          "description": "Email of the sender who created the sent share invitation",
          "type": "string",
          "readOnly": true
        },
        "senderName": {
          "description": "Name of the sender who created the sent share invitation",
          "type": "string",
          "readOnly": true
        },
        "senderTenantName": {
          "description": "Tenant name of the sender who created the sent share invitation",
          "type": "string",
          "readOnly": true
        },
        "sentAt": {
          "format": "date-time",
          "description": "Gets the time at which the invitation was sent.",
          "type": "string",
          "readOnly": true
        },
        "sentShareName": {
          "description": "Gets the source share Name.",
          "type": "string",
          "readOnly": true
        },
        "shareKind": {
          "$ref": "#/definitions/ShareKind"
        },
        "targetEmail": {
          "description": "The receiver email for the invitation is being sent.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "endpoint": {
      "in": "path",
      "name": "endpoint",
      "description": "The scanning endpoint of your purview account. Example: https://{accountName}.purview.azure.com/share",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
      "x-ms-skip-url-encoding": true
    },
    "sentShareName": {
      "in": "path",
      "name": "sentShareName",
      "description": "The name of the sent share",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "assetName": {
      "in": "path",
      "name": "assetName",
      "description": "The name of the asset",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "sentShareInvitationName": {
      "in": "path",
      "name": "sentShareInvitationName",
      "description": "Name of the sent invitation",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "receivedInvitationName": {
      "in": "path",
      "name": "receivedInvitationName",
      "description": "Name of the received invitation",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "receivedShareName": {
      "in": "path",
      "name": "receivedShareName",
      "description": "The name of the received share",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "acceptedSentShareName": {
      "in": "path",
      "name": "acceptedSentShareName",
      "description": "The name of the accepted sent share",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "receivedAssetName": {
      "in": "path",
      "name": "receivedAssetName",
      "description": "The name of the received asset",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "assetMappingName": {
      "in": "path",
      "name": "assetMappingName",
      "description": "The name of the asset mapping",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "api-version": {
      "in": "query",
      "name": "api-version",
      "description": "The api version to use.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client"
    },
    "skipToken": {
      "in": "query",
      "name": "skipToken",
      "description": "The continuation token to list the next page",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "$filter": {
      "in": "query",
      "name": "$filter",
      "description": "Filters the results using OData syntax",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "$orderby": {
      "in": "query",
      "name": "$orderby",
      "description": "Sorts the results using OData syntax",
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure-auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "description": "Azure Active Directory OAuth2 Flow."
    }
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/endpoint"
      }
    ]
  }
}
