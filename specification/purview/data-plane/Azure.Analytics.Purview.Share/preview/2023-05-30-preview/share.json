{
  "swagger": "2.0",
  "info": {
    "title": "Purview Share Client",
    "description": "Creates a data plane client for Purview Share.",
    "version": "2023-05-30-preview"
  },
  "paths": {
    "/receivedShares/{receivedShareId}": {
      "get": {
        "tags": [
          "ReceivedShare"
        ],
        "summary": "Get a received share by unique id.",
        "description": "Get a received share",
        "operationId": "ReceivedShares_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/receivedShareId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ReceivedShare"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "ReceivedShares_Get": {
            "$ref": "./examples/ReceivedShares_Get.json"
          },
          "ReceivedShares_GetAdlsGen2Account": {
            "$ref": "./examples/ReceivedShares_GetAdlsGen2Account.json"
          },
          "ReceivedShares_GetBlobAccount": {
            "$ref": "./examples/ReceivedShares_GetBlobAccount.json"
          }
        }
      },
      "put": {
        "tags": [
          "ReceivedShare"
        ],
        "summary": "Create or replace a received share.",
        "description": "Update changes to a received share",
        "operationId": "ReceivedShares_CreateOrReplace",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/receivedShareId"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "body",
            "name": "receivedShare",
            "description": "The received share to create or replace",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReceivedShare"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ReceivedShare"
            },
            "headers": {
              "Operation-Location": {
                "description": "The URL to track the status of the long running operation.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ReceivedShare"
            },
            "headers": {
              "Operation-Location": {
                "description": "The URL to track the status of the long running operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "ReceivedShares_CreateOrReplace": {
            "$ref": "./examples/ReceivedShares_CreateOrReplace.json"
          },
          "ReceivedShares_CreateOrReplaceAdlsGen2Account": {
            "$ref": "./examples/ReceivedShares_CreateOrReplaceAdlsGen2Account.json"
          },
          "ReceivedShares_CreateOrReplaceBlobAccount": {
            "$ref": "./examples/ReceivedShares_CreateOrReplaceBlobAccount.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "ReceivedShare"
        ],
        "summary": "Deletes a received share",
        "description": "Delete a received share",
        "operationId": "ReceivedShares_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/receivedShareId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            },
            "headers": {
              "Operation-Location": {
                "description": "The URL to track the status of the long running operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "ReceivedShares_Delete": {
            "$ref": "./examples/ReceivedShares_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/receivedShares/attached": {
      "get": {
        "tags": [
          "ReceivedShare"
        ],
        "summary": "Get a list of attached received shares.",
        "description": "List attached received shares",
        "operationId": "ReceivedShares_ListAttached",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/referenceName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/orderby"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ReceivedShareList"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "ReceivedShares_ListAttached": {
            "$ref": "./examples/ReceivedShares_ListAttached.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/receivedShares/detached": {
      "get": {
        "tags": [
          "ReceivedShare"
        ],
        "summary": "Get a list of detached received shares.",
        "description": "List detached received shares",
        "operationId": "ReceivedShares_ListDetached",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/orderby"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ReceivedShareList"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "ReceivedShares_ListDetached": {
            "$ref": "./examples/ReceivedShares_ListDetached.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/sentShares": {
      "get": {
        "tags": [
          "SentShare"
        ],
        "summary": "Get a list of sent shares.",
        "description": "List sent shares",
        "operationId": "SentShares_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/referenceName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/orderby"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SentShareList"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "SentShares_List": {
            "$ref": "./examples/SentShares_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/sentShares/{sentShareId}": {
      "get": {
        "tags": [
          "SentShare"
        ],
        "summary": "Get a sent share by guid.",
        "description": "Get a sent share",
        "operationId": "SentShares_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/sentShareId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SentShare"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "SentShares_Get": {
            "$ref": "./examples/SentShares_Get.json"
          },
          "SentShares_GetAdlsGen2Account": {
            "$ref": "./examples/SentShares_GetAdlsGen2Account.json"
          },
          "SentShares_GetBlobAccount": {
            "$ref": "./examples/SentShares_GetBlobAccount.json"
          }
        }
      },
      "put": {
        "tags": [
          "SentShare"
        ],
        "summary": "Create or replace a sent share.",
        "description": "Create or replace a sent share",
        "operationId": "SentShares_CreateOrReplace",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/sentShareId"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "body",
            "name": "sentShare",
            "description": "The sent share to create or replace.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SentShare"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SentShare"
            },
            "headers": {
              "Operation-Location": {
                "description": "The URL to track the status of the long running operation.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SentShare"
            },
            "headers": {
              "Operation-Location": {
                "description": "The URL to track the status of the long running operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "SentShares_CreateOrReplace": {
            "$ref": "./examples/SentShares_CreateOrReplace.json"
          },
          "SentShares_CreateOrReplaceAdlsGen2Account": {
            "$ref": "./examples/SentShares_CreateOrReplaceAdlsGen2Account.json"
          },
          "SentShares_CreateOrReplaceBlobAccount": {
            "$ref": "./examples/SentShares_CreateOrReplaceBlobAccount.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "SentShare"
        ],
        "summary": "Deletes a sent share.",
        "description": "Delete a sent share",
        "operationId": "SentShares_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/sentShareId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            },
            "headers": {
              "Operation-Location": {
                "description": "The URL to track the status of the long running operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "SentShares_Delete": {
            "$ref": "./examples/SentShares_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/sentShares/{sentShareId}/sentShareInvitations": {
      "get": {
        "tags": [
          "SentShareInvitation"
        ],
        "summary": "List all sent share invitations in a sent share",
        "description": "List sent share recipients",
        "operationId": "SentShares_ListInvitations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/sentShareId"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/orderby"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SentShareInvitationList"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "SentShares_ListInvitations": {
            "$ref": "./examples/SentShares_ListInvitations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/sentShares/{sentShareId}/sentShareInvitations/{sentShareInvitationId}": {
      "get": {
        "tags": [
          "SentShareInvitation"
        ],
        "summary": "Get sent share invitation for a given sent share",
        "description": "Get recipient for a given sent share",
        "operationId": "SentShares_GetInvitation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/sentShareId"
          },
          {
            "$ref": "#/parameters/sentShareInvitationId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SentShareInvitation"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "SentShares_GetInvitation": {
            "$ref": "./examples/SentShares_GetInvitation.json"
          },
          "SentShares_GetUserInvitation": {
            "$ref": "./examples/SentShares_GetUserInvitation.json"
          },
          "SentShares_GetServiceInvitation": {
            "$ref": "./examples/SentShares_GetServiceInvitation.json"
          }
        }
      },
      "put": {
        "tags": [
          "SentShareInvitation"
        ],
        "summary": "Create a sent share invitation.",
        "description": "Create a recipient for a given sent share",
        "operationId": "SentShares_CreateInvitation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/sentShareId"
          },
          {
            "$ref": "#/parameters/sentShareInvitationId"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "body",
            "name": "sentShareInvitation",
            "description": "The sent share invitation to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SentShareInvitation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SentShareInvitation"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "SentShares_CreateInvitation": {
            "$ref": "./examples/SentShares_CreateInvitation.json"
          },
          "SentShares_CreateServiceInvitation": {
            "$ref": "./examples/SentShares_CreateServiceInvitation.json"
          },
          "SentShares_CreateUserInvitation": {
            "$ref": "./examples/SentShares_CreateUserInvitation.json"
          }
        }
      },
      "delete": {
        "tags": [
          "SentShareInvitation"
        ],
        "summary": "Delete Invitation in a share.",
        "description": "Delete a sent share invitation",
        "operationId": "SentShares_DeleteInvitation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/sentShareId"
          },
          {
            "$ref": "#/parameters/sentShareInvitationId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            },
            "headers": {
              "Operation-Location": {
                "description": "The URL to track the status of the long running operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "SentShares_DeleteInvitation": {
            "$ref": "./examples/SentShares_DeleteInvitation.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/sentShares/{sentShareId}/sentShareInvitations/{sentShareInvitationId}:notify": {
      "post": {
        "tags": [
          "SentShareInvitation"
        ],
        "summary": "Notifies the recipient of the sent share invitation.",
        "description": "Notifies the user recipient of the sent share invitation, does not apply to service invitations.",
        "operationId": "SentShares_NotifyUserInvitation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/sentShareId"
          },
          {
            "$ref": "#/parameters/sentShareInvitationId"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "header",
            "name": "repeatability-request-id",
            "description": "If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated, globally unique for all time, identifier for the request. It is recommended to use version 4 (random) UUIDs.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SentShareInvitation"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "SentShares_NotifyUserInvitation": {
            "$ref": "./examples/SentShares_NotifyUserInvitation.json"
          }
        }
      }
    },
    "/shareResources": {
      "get": {
        "tags": [
          "ShareResource"
        ],
        "summary": "API operation to list ShareResources.",
        "description": "List share resources",
        "operationId": "ShareResources_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/orderby"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShareResourceList"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "ShareResources_List": {
            "$ref": "./examples/ShareResources_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/emails:activate": {
      "post": {
        "tags": [
          "TenantEmailRegistration"
        ],
        "summary": "Activates the tenant and email combination using the activation code received.",
        "description": "Activates the email registration for current tenant",
        "operationId": "ReceivedShares_ActivateTenantEmailRegistration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "header",
            "name": "repeatability-request-id",
            "description": "If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated, globally unique for all time, identifier for the request. It is recommended to use version 4 (random) UUIDs.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "tenantEmailRegistration",
            "description": "The tenant email registration payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TenantEmailRegistration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TenantEmailRegistration"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "ReceivedShares_ActivateTenantEmailRegistration": {
            "$ref": "./examples/ReceivedShares_ActivateTenantEmailRegistration.json"
          }
        }
      }
    },
    "/emails:register": {
      "post": {
        "tags": [
          "TenantEmailRegistration"
        ],
        "summary": "Registers the tenant and email combination for activation.",
        "description": "Register an email for the current tenant",
        "operationId": "ReceivedShares_RegisterTenantEmailRegistration",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "header",
            "name": "repeatability-request-id",
            "description": "If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated, globally unique for all time, identifier for the request. It is recommended to use version 4 (random) UUIDs.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TenantEmailRegistration"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/PurviewShareError"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "ReceivedShares_RegisterTenantEmailRegistration": {
            "$ref": "./examples/ReceivedShares_RegisterTenantEmailRegistration.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AdlsGen2AccountSink": {
      "description": "AdlsGen2 Sink",
      "required": [
        "properties",
        "storeKind",
        "storeReference"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Sink"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AdlsGen2AccountSinkProperties"
        }
      },
      "x-ms-discriminator-value": "AdlsGen2Account"
    },
    "AdlsGen2AccountSinkProperties": {
      "description": "Properties for AdlsGen2 storage account",
      "required": [
        "containerName",
        "folder"
      ],
      "type": "object",
      "properties": {
        "containerName": {
          "description": "Adls Gen 2 Container Name",
          "type": "string"
        },
        "folder": {
          "description": "Adls Gen 2 Folder",
          "type": "string"
        },
        "location": {
          "description": "Adls Gen 2 Location",
          "type": "string",
          "readOnly": true
        },
        "mountPath": {
          "description": "Adls Gen 2 Mount Path",
          "type": "string"
        }
      }
    },
    "AdlsGen2Artifact": {
      "description": "An Adls Gen2 storage account artifact.",
      "required": [
        "properties",
        "storeKind",
        "storeReference"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Artifact"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AdlsGen2ArtifactProperties"
        }
      },
      "x-ms-discriminator-value": "AdlsGen2Account"
    },
    "AdlsGen2ArtifactProperties": {
      "description": "Properties for Adls Gen2 storage account.",
      "required": [
        "paths"
      ],
      "type": "object",
      "properties": {
        "location": {
          "description": "Location of the storage account.",
          "type": "string",
          "readOnly": true
        },
        "paths": {
          "description": "A list of Adls Gen2 storage account paths.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAccountPath"
          }
        }
      }
    },
    "Artifact": {
      "description": "A class for sent share artifact.",
      "required": [
        "storeKind",
        "storeReference"
      ],
      "type": "object",
      "properties": {
        "storeKind": {
          "$ref": "#/definitions/StoreKind"
        },
        "storeReference": {
          "$ref": "#/definitions/StoreReference"
        }
      },
      "discriminator": "storeKind"
    },
    "BlobAccountSink": {
      "description": "Blob Sink",
      "required": [
        "properties",
        "storeKind",
        "storeReference"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Sink"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BlobAccountSinkProperties"
        }
      },
      "x-ms-discriminator-value": "BlobAccount"
    },
    "BlobAccountSinkProperties": {
      "description": "Properties for blob storage account",
      "required": [
        "containerName",
        "folder"
      ],
      "type": "object",
      "properties": {
        "containerName": {
          "description": "Blob Container Name",
          "type": "string"
        },
        "folder": {
          "description": "Blob Folder",
          "type": "string"
        },
        "location": {
          "description": "Blob Location",
          "type": "string",
          "readOnly": true
        },
        "mountPath": {
          "description": "Blob Mount Path",
          "type": "string"
        }
      }
    },
    "BlobStorageArtifact": {
      "description": "Blob storage account artifact.",
      "required": [
        "properties",
        "storeKind",
        "storeReference"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Artifact"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BlobStorageArtifactProperties"
        }
      },
      "x-ms-discriminator-value": "BlobAccount"
    },
    "BlobStorageArtifactProperties": {
      "description": "Properties for blob storage account.",
      "required": [
        "paths"
      ],
      "type": "object",
      "properties": {
        "location": {
          "description": "Location of the storage account.",
          "type": "string",
          "readOnly": true
        },
        "paths": {
          "description": "A list of blob storage account paths.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAccountPath"
          }
        }
      }
    },
    "InPlaceReceivedShare": {
      "description": "An InPlace received share kind.",
      "required": [
        "properties",
        "shareKind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReceivedShare"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/InPlaceReceivedShareProperties"
        }
      },
      "x-ms-discriminator-value": "InPlace"
    },
    "InPlaceReceivedShareProperties": {
      "description": "Properties of in place received share.",
      "type": "object",
      "properties": {
        "assetLocation": {
          "description": "Location of the shared Asset.",
          "type": "string",
          "readOnly": true
        },
        "assetStoreKind": {
          "$ref": "#/definitions/StoreKind"
        },
        "createdAt": {
          "format": "date-time",
          "description": "Time at which the received share was created. Represented in the standard date-time format as defined by [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339)",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "Received Share Name",
          "type": "string"
        },
        "expirationDate": {
          "format": "date-time",
          "description": "The expiration date of the received share. Represented in the standard date-time format as defined by [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339)",
          "type": "string",
          "readOnly": true
        },
        "receiverEmail": {
          "description": "Email of the user/receiver who received the sent share invitation",
          "type": "string",
          "readOnly": true
        },
        "receiverName": {
          "description": "Name of the user/receiver who received the sent share invitation",
          "type": "string",
          "readOnly": true
        },
        "receiverTenantName": {
          "description": "Tenant name of the user/receiver who received the sent share invitation",
          "type": "string",
          "readOnly": true
        },
        "senderEmail": {
          "description": "Email of the sender who created the sent share invitation",
          "type": "string",
          "readOnly": true
        },
        "senderName": {
          "description": "Name of the sender who created the sent share invitation",
          "type": "string",
          "readOnly": true
        },
        "senderTenantName": {
          "description": "Tenant name of the sender who created the sent share invitation",
          "type": "string",
          "readOnly": true
        },
        "sentShareDescription": {
          "description": "Share description.",
          "type": "string",
          "readOnly": true
        },
        "sharedAt": {
          "format": "date-time",
          "description": "Time at which the sent share was shared. Represented in the standard date-time format as defined by [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339)",
          "type": "string",
          "readOnly": true
        },
        "shareStatus": {
          "$ref": "#/definitions/ShareStatus"
        },
        "sink": {
          "$ref": "#/definitions/Sink"
        },
        "state": {
          "$ref": "#/definitions/State",
          "readOnly": true
        }
      }
    },
    "InPlaceSentShare": {
      "description": "An InPlace share kind.",
      "required": [
        "properties",
        "shareKind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SentShare"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/InPlaceSentShareProperties"
        }
      },
      "x-ms-discriminator-value": "InPlace"
    },
    "InPlaceSentShareProperties": {
      "description": "Properties for InPlace sent share.",
      "required": [
        "artifact",
        "displayName"
      ],
      "type": "object",
      "properties": {
        "artifact": {
          "$ref": "#/definitions/Artifact"
        },
        "createdAt": {
          "format": "date-time",
          "description": "Time at which the sent share was created. Represented in the standard date-time format as defined by [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339)",
          "type": "string",
          "readOnly": true
        },
        "dependsOn": {
          "description": "List of shares on which the sent share depends.",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "readOnly": true
        },
        "description": {
          "description": "Sent share description.",
          "type": "string"
        },
        "displayName": {
          "description": "The name of the sent share",
          "type": "string"
        },
        "senderEmail": {
          "description": "Email of the sender who created the sent share.",
          "type": "string",
          "readOnly": true
        },
        "senderName": {
          "description": "Name of the sender who created the sent share.",
          "type": "string",
          "readOnly": true
        },
        "senderTenantName": {
          "description": "Tenant name of the sender who created the sent share.",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/State",
          "readOnly": true
        }
      }
    },
    "InvitationKind": {
      "description": "The types of invitations.",
      "enum": [
        "User",
        "Service"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "InvitationKind",
        "modelAsString": true,
        "values": [
          {
            "value": "User",
            "description": "The invitation is sent to a user",
            "name": "User invitation"
          },
          {
            "value": "Service",
            "description": "The invitation is sent to a service",
            "name": "Service invitation"
          }
        ]
      }
    },
    "OperationResponse": {
      "description": "Response for long running operation.",
      "required": [
        "status"
      ],
      "type": "object",
      "properties": {
        "endTime": {
          "format": "date-time",
          "description": "End time of the long running operation. Represented in the standard date-time format as defined by [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339)",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/PurviewShareErrorInfo"
        },
        "id": {
          "description": "Job id of the long running operation",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "Start time of the long running operation. Represented in the standard date-time format as defined by [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339)",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/OperationStatus"
        }
      }
    },
    "OperationStatus": {
      "description": "States for long running operations.",
      "enum": [
        "Running",
        "TransientFailure",
        "Succeeded",
        "Failed",
        "NotStarted"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "OperationStatus",
        "modelAsString": true,
        "values": [
          {
            "value": "Running",
            "description": "The long running operation is in 'Running' state",
            "name": "Long running operation state is 'Running'"
          },
          {
            "value": "TransientFailure",
            "description": "The long running operation hit a transient failure",
            "name": "Long running operation state is 'TransientFailure'"
          },
          {
            "value": "Succeeded",
            "description": "The long running operation is in 'Succeeded' state",
            "name": "Long running operation state is 'Succeeded'"
          },
          {
            "value": "Failed",
            "description": "The long running operation is in 'Failed' state",
            "name": "Long running operation state is 'Failed'"
          },
          {
            "value": "NotStarted",
            "description": "The long running operation has not started",
            "name": "Long running operation state is 'NotStarted'"
          }
        ]
      }
    },
    "ProxyResource": {
      "description": "Base data transfer object implementation for proxy resources.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique id of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PurviewShareError": {
      "description": "The purview share error model.",
      "required": [
        "error"
      ],
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/PurviewShareErrorInfo"
        }
      }
    },
    "PurviewShareErrorInfo": {
      "description": "The purview share error body model.",
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the error",
          "type": "string"
        },
        "details": {
          "description": "Nested details of the error model",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PurviewShareErrorInfo"
          }
        },
        "message": {
          "description": "Message of the error",
          "type": "string"
        },
        "target": {
          "description": "Target of the error",
          "type": "string"
        }
      }
    },
    "ReceivedShare": {
      "description": "A received share data transfer object.",
      "required": [
        "shareKind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "shareKind": {
          "$ref": "#/definitions/ShareKind"
        }
      },
      "discriminator": "shareKind"
    },
    "ReceivedShareList": {
      "description": "List of received shares.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "format": "url",
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type ReceivedShare",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReceivedShare"
          }
        }
      }
    },
    "ReferenceNameType": {
      "description": "Defines the type of resource being shared",
      "enum": [
        "ArmResourceReference"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ReferenceNameType",
        "modelAsString": true,
        "values": [
          {
            "value": "ArmResourceReference",
            "description": "The type of reference is an ARM resource",
            "name": "Arm resource reference"
          }
        ]
      }
    },
    "SentShare": {
      "description": "A sent share data transfer object.",
      "required": [
        "shareKind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "shareKind": {
          "$ref": "#/definitions/ShareKind"
        }
      },
      "discriminator": "shareKind"
    },
    "SentShareInvitation": {
      "description": "A sent share invitation data transfer object.",
      "required": [
        "invitationKind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "invitationKind": {
          "$ref": "#/definitions/InvitationKind"
        }
      },
      "discriminator": "invitationKind"
    },
    "SentShareInvitationList": {
      "description": "List of the sent share invitations",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "format": "url",
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type SentShareInvitation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SentShareInvitation"
          }
        }
      }
    },
    "SentShareList": {
      "description": "List of sent shares.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "format": "url",
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type SentShare",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SentShare"
          }
        }
      }
    },
    "ServiceInvitation": {
      "description": "An service invitation kind.",
      "required": [
        "invitationKind",
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SentShareInvitation"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServiceInvitationProperties"
        }
      },
      "x-ms-discriminator-value": "Service"
    },
    "ServiceInvitationProperties": {
      "description": "Properties of the service invitation type.",
      "required": [
        "targetActiveDirectoryId",
        "targetObjectId"
      ],
      "type": "object",
      "properties": {
        "expirationDate": {
          "format": "date-time",
          "description": "The time at which the invitation will expire. Represented in the standard date-time format as defined by [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339)",
          "type": "string"
        },
        "senderEmail": {
          "description": "Email address of the sender.",
          "type": "string",
          "readOnly": true
        },
        "senderName": {
          "description": "Name of the sender",
          "type": "string",
          "readOnly": true
        },
        "senderTenantName": {
          "description": "Tenant name of the sender",
          "type": "string",
          "readOnly": true
        },
        "sentAt": {
          "format": "date-time",
          "description": "Gets the time at which the invitation was sent. Represented in the standard date-time format as defined by [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339)",
          "type": "string",
          "readOnly": true
        },
        "shareStatus": {
          "$ref": "#/definitions/ShareStatus"
        },
        "state": {
          "$ref": "#/definitions/State",
          "readOnly": true
        },
        "targetActiveDirectoryId": {
          "format": "uuid",
          "description": "The target azure active directory id the invitation is sent to.",
          "type": "string"
        },
        "targetObjectId": {
          "format": "uuid",
          "description": "The target object id in the azure active directory the invitation is sent to.",
          "type": "string"
        }
      }
    },
    "ShareKind": {
      "description": "Defines the supported types for share.",
      "enum": [
        "InPlace"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ShareKind",
        "modelAsString": true,
        "values": [
          {
            "value": "InPlace",
            "description": "The type of share is in-place sharing",
            "name": "In place share kind"
          }
        ]
      }
    },
    "ShareResource": {
      "description": "A share resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "receivedSharesCount": {
          "format": "int32",
          "description": "A count of Received Shares associated with the Microsoft.Azure.Purview.Share.ApiService.V3.DataTransferObjects.ShareResource.",
          "type": "integer"
        },
        "sentSharesCount": {
          "format": "int32",
          "description": "A count of Sent Shares associated with the Microsoft.Azure.Purview.Share.ApiService.V3.DataTransferObjects.ShareResource.",
          "type": "integer"
        },
        "storeKind": {
          "$ref": "#/definitions/StoreKind"
        },
        "storeReference": {
          "$ref": "#/definitions/StoreReference"
        }
      }
    },
    "ShareResourceList": {
      "description": "A page of ShareResource results.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "format": "url",
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type ShareResource",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShareResource"
          }
        }
      }
    },
    "ShareStatus": {
      "description": "Share status.",
      "enum": [
        "Detached",
        "Attached"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ShareStatus",
        "modelAsString": true,
        "values": [
          {
            "value": "Detached",
            "description": "The share has not been accepted yet",
            "name": "Detached share status"
          },
          {
            "value": "Attached",
            "description": "The share has been accepted by the recipient",
            "name": "Attached share status"
          }
        ]
      }
    },
    "Sink": {
      "description": "Holds details on the destination of the mapped artifact",
      "required": [
        "storeKind",
        "storeReference"
      ],
      "type": "object",
      "properties": {
        "storeKind": {
          "$ref": "#/definitions/StoreKind"
        },
        "storeReference": {
          "$ref": "#/definitions/StoreReference"
        }
      },
      "discriminator": "storeKind"
    },
    "State": {
      "description": "State of the resource",
      "enum": [
        "Unknown",
        "Succeeded",
        "Creating",
        "Deleting",
        "Moving",
        "Failed"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "State",
        "modelAsString": true,
        "values": [
          {
            "value": "Unknown",
            "description": "The state of the resource is 'Unknown'",
            "name": "Unknown state"
          },
          {
            "value": "Succeeded",
            "description": "The state of the resource is 'Succeeded'",
            "name": "Succeeded state"
          },
          {
            "value": "Creating",
            "description": "The state of the resource is 'Creating'",
            "name": "Creating state"
          },
          {
            "value": "Deleting",
            "description": "The state of the resource is 'Deleting'",
            "name": "Deleting state"
          },
          {
            "value": "Moving",
            "description": "The state of the resource is 'Moving'",
            "name": "Moving state"
          },
          {
            "value": "Failed",
            "description": "The state of the resource is 'Failed'",
            "name": "Failed state"
          }
        ]
      }
    },
    "StorageAccountPath": {
      "description": "Defines a single StorageAccountPath path",
      "required": [
        "containerName"
      ],
      "type": "object",
      "properties": {
        "containerName": {
          "description": "Gets or sets the container name",
          "type": "string"
        },
        "receiverPath": {
          "description": "Gets or sets the path on the receiver side where the artifact is to be mapped",
          "type": "string"
        },
        "senderPath": {
          "description": "Gets or sets the path to file/folder within the container to be shared",
          "type": "string"
        }
      }
    },
    "StoreKind": {
      "description": "The types of asset.",
      "enum": [
        "AdlsGen2Account",
        "BlobAccount"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "StoreKind",
        "modelAsString": true,
        "values": [
          {
            "value": "AdlsGen2Account",
            "description": "The store kind is a Adls Gen 2 storage account",
            "name": "Adls gen 2 storage account store kind"
          },
          {
            "value": "BlobAccount",
            "description": "The store kind is a Blob storage account",
            "name": "Blob storage account store kind"
          }
        ]
      }
    },
    "StoreReference": {
      "description": "A Store Reference for an artifact or sink.",
      "type": "object",
      "properties": {
        "referenceName": {
          "description": "Reference name for resource associated with the sink or artifact.",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/ReferenceNameType"
        }
      }
    },
    "TenantEmailRegistration": {
      "description": "A tenant email registration data transfer object.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/TenantEmailRegistrationProperties"
        }
      }
    },
    "TenantEmailRegistrationProperties": {
      "description": "Tenant email registration property bag.",
      "required": [
        "activationCode"
      ],
      "type": "object",
      "properties": {
        "activationCode": {
          "description": "Activation code for the registration.",
          "type": "string"
        },
        "activationExpiration": {
          "format": "date-time",
          "description": "Date of the activation expiration. Represented in the standard date-time format as defined by [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339)",
          "type": "string",
          "readOnly": true
        },
        "email": {
          "description": "The email to register.",
          "type": "string",
          "readOnly": true
        },
        "registrationStatus": {
          "$ref": "#/definitions/TenantEmailRegistrationStatus",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/State",
          "readOnly": true
        },
        "tenantId": {
          "description": "The tenant id to register.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TenantEmailRegistrationStatus": {
      "description": "Defines the supported types for registration.",
      "enum": [
        "ActivationPending",
        "Activated",
        "ActivationAttemptsExhausted"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "TenantEmailRegistrationStatus",
        "modelAsString": true,
        "values": [
          {
            "value": "ActivationPending",
            "description": "The tenant email registration is in pending state",
            "name": "Activation pending"
          },
          {
            "value": "Activated",
            "description": "The tenant email registration is complete and has been activated",
            "name": "Activated"
          },
          {
            "value": "ActivationAttemptsExhausted",
            "description": "The tenant email registration has exhausted the max attempts",
            "name": "Activation attempts exhausted"
          }
        ]
      }
    },
    "UserInvitation": {
      "description": "A user invitation kind.",
      "required": [
        "invitationKind",
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SentShareInvitation"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/UserInvitationProperties"
        }
      },
      "x-ms-discriminator-value": "User"
    },
    "UserInvitationProperties": {
      "description": "Properties of the user invitation type.",
      "required": [
        "targetEmail"
      ],
      "type": "object",
      "properties": {
        "expirationDate": {
          "format": "date-time",
          "description": "The time at which the invitation will expire. Represented in the standard date-time format as defined by [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339)",
          "type": "string"
        },
        "notify": {
          "description": "Whether or not the recipient was notified via email.",
          "type": "boolean"
        },
        "senderEmail": {
          "description": "Email address of the sender.",
          "type": "string",
          "readOnly": true
        },
        "senderName": {
          "description": "Name of the sender",
          "type": "string",
          "readOnly": true
        },
        "senderTenantName": {
          "description": "Tenant name of the sender",
          "type": "string",
          "readOnly": true
        },
        "sentAt": {
          "format": "date-time",
          "description": "Gets the time at which the invitation was sent. Represented in the standard date-time format as defined by [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339)",
          "type": "string",
          "readOnly": true
        },
        "shareStatus": {
          "$ref": "#/definitions/ShareStatus"
        },
        "state": {
          "$ref": "#/definitions/State",
          "readOnly": true
        },
        "targetEmail": {
          "description": "The receiver email for the invitation is being sent.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "endpoint": {
      "in": "path",
      "name": "endpoint",
      "description": "The sharing endpoint of your purview account. Example: https://{accountName}.purview.azure.com/share",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
      "x-ms-skip-url-encoding": true,
      "format": "url"
    },
    "api-version": {
      "in": "query",
      "name": "api-version",
      "description": "The api version to use",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client"
    },
    "jobId": {
      "in": "path",
      "name": "jobId",
      "description": "Id of the corresponding job to the LRO",
      "required": true,
      "type": "string",
      "maxLength": 100,
      "pattern": "^[a-zA-z0-9-]{1,100}$",
      "x-ms-parameter-location": "method"
    },
    "receivedShareId": {
      "in": "path",
      "name": "receivedShareId",
      "description": "Id of the received share",
      "required": true,
      "type": "string",
      "maxLength": 36,
      "pattern": "^(?:\\{{0,1}(?:[0-9a-fA-F]){8}-(?:[0-9a-fA-F]){4}-(?:[0-9a-fA-F]){4}-(?:[0-9a-fA-F]){4}-(?:[0-9a-fA-F]){12}\\}{0,1})$",
      "x-ms-parameter-location": "method"
    },
    "sentShareId": {
      "in": "path",
      "name": "sentShareId",
      "description": "Id of the sent share",
      "required": true,
      "type": "string",
      "maxLength": 36,
      "pattern": "^(?:\\{{0,1}(?:[0-9a-fA-F]){8}-(?:[0-9a-fA-F]){4}-(?:[0-9a-fA-F]){4}-(?:[0-9a-fA-F]){4}-(?:[0-9a-fA-F]){12}\\}{0,1})$",
      "x-ms-parameter-location": "method"
    },
    "sentShareInvitationId": {
      "in": "path",
      "name": "sentShareInvitationId",
      "description": "Id of the sent share invitation",
      "required": true,
      "type": "string",
      "maxLength": 36,
      "pattern": "^(?:\\{{0,1}(?:[0-9a-fA-F]){8}-(?:[0-9a-fA-F]){4}-(?:[0-9a-fA-F]){4}-(?:[0-9a-fA-F]){4}-(?:[0-9a-fA-F]){12}\\}{0,1})$|^(?:[0-9a-fA-F]+)$",
      "x-ms-parameter-location": "method"
    },
    "referenceName": {
      "in": "query",
      "name": "referenceName",
      "description": "A name that references a data store.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "filter": {
      "in": "query",
      "name": "filter",
      "description": "Filters the results using OData syntax",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "orderby": {
      "in": "query",
      "name": "orderby",
      "description": "Sorts the results using OData syntax",
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azureAuth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "https://purview.azure.net/.default": "Purview service scope"
      },
      "description": "Azure Active Directory OAuth2 Flow."
    }
  },
  "security": [
    {
      "azureAuth": [
        "https://purview.azure.net/.default"
      ]
    }
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/endpoint"
      }
    ]
  }
}
