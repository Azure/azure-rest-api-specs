{
  "swagger": "2.0",
  "info": {
    "title": "Purview Distribution Service REST API Document",
    "description": "Purview distribution service enables various Azure RPs to fetch the policies and attributes for data governance.",
    "version": "2023-01-01"
  },
  "paths": {
    "/datasource-preferences": {
      "get": {
        "tags": [
          "DatasourcePreferences"
        ],
        "description": "Get Datasource Preferences for given scope.",
        "operationId": "DatasourcePreferences_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "scope",
            "description": "Id for any resource managed by Purview.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatasourcePreferencesResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "DatasourcePreferences_Get": {
            "$ref": "./examples/DatasourcePreferences_Get.json"
          }
        }
      }
    },
    "/policy-elements": {
      "get": {
        "tags": [
          "PolicyElements"
        ],
        "description": "Get policies for given scope.",
        "operationId": "PolicyElements_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "scope",
            "description": "Id for any resource managed by Purview.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The PDS API Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter supporting full OData syntax.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PolicyResponseUpdated"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "PolicyElements_List": {
            "$ref": "./examples/PolicyElements_List.json"
          }
        }
      }
    },
    "/policy-events": {
      "get": {
        "tags": [
          "PolicyEvents"
        ],
        "description": "Get policy events for given scope.",
        "operationId": "PolicyEvents_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "scope",
            "description": "Id for any resource managed by Purview.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "syncToken",
            "description": "This sync token represents the latest checkpoint for policies. Client need to pass this value while fetching subsequent delta changes.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PolicyEventsResponseUpdated"
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "PolicyEvents_List": {
            "$ref": "./examples/PolicyEvents_List.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AccountModelBase": {
      "description": "Details of the purview account governing the requested resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the Purview account.",
          "type": "string"
        },
        "name": {
          "description": "Name of the Purview account.",
          "type": "string"
        },
        "location": {
          "description": "Location (Region) of the Purview account.",
          "type": "string"
        },
        "tenantId": {
          "description": "Tenant ID of the Purview account.",
          "type": "string"
        },
        "gatewayEndpoint": {
          "description": "Endpoint of the Purview account. This will be used by the RPs to call Purview APIs.",
          "type": "string"
        }
      }
    },
    "Consent": {
      "description": "Consent information for the resource governed by purview.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/Properties"
        },
        "excludedScopes": {
          "description": "List of scopes opted out of this consent.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DatasourcePreferencesResponse": {
      "description": "Response model for datasource preference API.",
      "type": "object",
      "properties": {
        "consent": {
          "$ref": "#/definitions/Consent"
        },
        "accountInfo": {
          "$ref": "#/definitions/AccountModelBase"
        },
        "frequency": {
          "format": "int32",
          "description": "This is the timespan at which the RPs call this API at regular intervals.",
          "type": "integer"
        }
      }
    },
    "ErrorModel": {
      "description": "Default error model.",
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code.",
          "minLength": 1,
          "type": "string"
        },
        "message": {
          "description": "Error message.",
          "minLength": 1,
          "type": "string"
        },
        "target": {
          "description": "Error description.",
          "type": "string"
        },
        "details": {
          "description": "Error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorModel"
          }
        }
      }
    },
    "ErrorResponseModel": {
      "description": "Default error response model.",
      "required": [
        "error"
      ],
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorModel"
        }
      }
    },
    "PolicyElement": {
      "description": "Represents a policy, policy set or attribute rule.",
      "required": [
        "id",
        "kind",
        "updatedAt",
        "version"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the policy element.",
          "minLength": 1,
          "type": "string"
        },
        "scopes": {
          "description": "List of scopes included in this policy.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kind": {
          "description": "Kind of policy element. Possible values: policy/policySet/attributeRule.",
          "minLength": 1,
          "type": "string"
        },
        "updatedAt": {
          "description": "Time at which this policy element is last updated.",
          "minLength": 1,
          "type": "string"
        },
        "version": {
          "format": "int64",
          "description": "Current version of policy element. This is auto incremented with each change. Starts with 1.",
          "type": "integer"
        },
        "elementJson": {
          "description": "Policy element serialized json payload.",
          "type": "string"
        }
      }
    },
    "PolicyElementEventModel": {
      "description": "Represents the policy element event model.",
      "required": [
        "eventType",
        "id",
        "kind",
        "updatedAt",
        "version"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the policy element.",
          "minLength": 1,
          "type": "string"
        },
        "scopes": {
          "description": "List of scopes included in this policy.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kind": {
          "description": "Kind of policy element. Possible values: policy/policySet/attributeRule.",
          "minLength": 1,
          "type": "string"
        },
        "updatedAt": {
          "description": "Time at which this policy element is last updated.",
          "minLength": 1,
          "type": "string"
        },
        "version": {
          "format": "int64",
          "description": "Current version of policy element. This is auto incremented with each change. Starts with 1.",
          "type": "integer"
        },
        "elementJson": {
          "description": "Policy element serialized json payload.",
          "type": "string"
        },
        "eventType": {
          "description": "Type of event. Format: <RP-Name>/<Resource-Type>/<Action>. For Example: Microsoft.Purview/PolicyElements/Delete.",
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "PolicyEventsResponseUpdated": {
      "description": "Response model for policy delta fetch API.",
      "required": [
        "syncToken"
      ],
      "type": "object",
      "properties": {
        "syncToken": {
          "description": "This sync token represents the latest checkpoint for policies. Client need to pass this value while fetching subsequent delta changes.",
          "minLength": 1,
          "type": "string"
        },
        "value": {
          "description": "List of policy elements.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyElementEventModel"
          }
        }
      }
    },
    "PolicyResponseUpdated": {
      "description": "Response model for policy bulk fetch API.",
      "type": "object",
      "properties": {
        "syncToken": {
          "description": "This sync token represents the latest checkpoint for policies. Client need to pass this value while fetching subsequent delta changes using policy-events API.",
          "type": "string"
        },
        "nextLink": {
          "description": "Link to fetch next set of policy elements.",
          "type": "string"
        },
        "value": {
          "description": "List of policy elements.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyElement"
          }
        }
      }
    },
    "Properties": {
      "description": "Consent details.",
      "type": "object",
      "properties": {
        "scanner": {
          "$ref": "#/definitions/Scanner"
        },
        "dataUseGovernance": {
          "description": "This value indicates whether the resource is enabled for data use governance.",
          "type": "boolean"
        }
      }
    },
    "Scanner": {
      "description": "Consent information for scanner service.",
      "type": "object",
      "properties": {
        "metadata": {
          "description": "This value indicates whether the resource is enabled for metadata discovery.",
          "type": "boolean"
        },
        "classification": {
          "description": "This value indicates whether the resource is enabled for classification discovery.",
          "type": "boolean"
        }
      }
    }
  },
  "parameters": {
    "endpoint": {
      "in": "path",
      "name": "endpoint",
      "description": "The endpoint of your Purview account. Example: https://{accountName}.purview.azure.com.",
      "required": true,
      "type": "string",
      "format": "url",
      "x-ms-parameter-location": "client",
      "x-ms-skip-url-encoding": true
    },
    "api-version": {
      "in": "query",
      "name": "api-version",
      "description": "The api-version of the service.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "description": "Azure Active Directory OAuth2 Flow."
    }
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/endpoint"
      }
    ]
  },
  "basePath": "/pds",
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}
