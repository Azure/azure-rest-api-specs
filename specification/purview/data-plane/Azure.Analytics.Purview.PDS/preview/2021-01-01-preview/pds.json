{
  "swagger": "2.0",
  "info": {
    "title": "Purview Distribution Service REST API Document",
    "description": "Purview distribution service enables various Azure RPs to fetch the policies and attributes for data governance.",
    "version": "2021-01-01-preview"
  },
  "paths": {
    "/subscriptions/{subscriptionId}/datasourcepreferences": {
      "get": {
        "tags": [
          "DatasourcePreferences"
        ],
        "description": "Get Datasource Preferences for a given scope.",
        "operationId": "DatasourcePreferences1_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The subscription id.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatasourcePreferencesResponse"
            }
          },
          "default": {
            "description": "An unexpected error occurred",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "DatasourcePreferences1_Get": {
            "$ref": "./examples/DatasourcePreferences1_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/datasourcepreferences": {
      "get": {
        "tags": [
          "DatasourcePreferences"
        ],
        "description": "Get Datasource Preferences for a given scope.",
        "operationId": "DatasourcePreferences2_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The subscription id.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatasourcePreferencesResponse"
            }
          },
          "default": {
            "description": "An unexpected error occurred",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "DatasourcePreferences2_Get": {
            "$ref": "./examples/DatasourcePreferences2_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProvider}/{resourceType}/{resourceName}/datasourcepreferences": {
      "get": {
        "tags": [
          "DatasourcePreferences"
        ],
        "description": "Get Datasource Preferences for a given scope.",
        "operationId": "DatasourcePreferences3_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The subscription id.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceProvider",
            "description": "The resource provider namespace.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceType",
            "description": "The resource type.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "description": "The resource name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatasourcePreferencesResponse"
            }
          },
          "default": {
            "description": "An unexpected error occurred",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "DatasourcePreferences3_Get": {
            "$ref": "./examples/DatasourcePreferences3_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/policyelements": {
      "get": {
        "tags": [
          "PolicyElements"
        ],
        "description": "Get policies for given scope.",
        "operationId": "PolicyElements1_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "api-version",
            "description": "The API Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "description": "filter.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The subscription id.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error occurred",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink",
          "itemName": "values"
        },
        "x-ms-examples": {
          "PolicyElements1_Get": {
            "$ref": "./examples/PolicyElements1_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/policyelements": {
      "get": {
        "tags": [
          "PolicyElements"
        ],
        "description": "Get policies for given scope.",
        "operationId": "PolicyElements2_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "api-version",
            "description": "The API Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "description": "filter.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The subscription id.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error occurred",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink",
          "itemName": "values"
        },
        "x-ms-examples": {
          "PolicyElements2_Get": {
            "$ref": "./examples/PolicyElements2_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProvider}/{resourceType}/{resourceName}/policyelements": {
      "get": {
        "tags": [
          "PolicyElements"
        ],
        "description": "Get policies for given scope.",
        "operationId": "PolicyElements3_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "api-version",
            "description": "The API Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "description": "filter.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The subscription id.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceProvider",
            "description": "The resource provider namespace.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceType",
            "description": "The resource type.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "description": "The resource name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error occurred",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink",
          "itemName": "values"
        },
        "x-ms-examples": {
          "PolicyElements3_Get": {
            "$ref": "./examples/PolicyElements3_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/policyevents": {
      "get": {
        "tags": [
          "PolicyEvents"
        ],
        "description": "Get policy events for given scope.",
        "operationId": "PolicyEvents1_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "syncToken",
            "description": "The sync token.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The subscription id.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PolicyEventsResponse"
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "default": {
            "description": "An unexpected error occurred",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "PolicyEvents1_Get": {
            "$ref": "./examples/PolicyEvents1_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/policyevents": {
      "get": {
        "tags": [
          "PolicyEvents"
        ],
        "description": "Get policy events for given scope.",
        "operationId": "PolicyEvents2_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "syncToken",
            "description": "The sync token.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The subscription id.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PolicyEventsResponse"
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "default": {
            "description": "An unexpected error occurred",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "PolicyEvents2_Get": {
            "$ref": "./examples/PolicyEvents2_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProvider}/{resourceType}/{resourceName}/policyevents": {
      "get": {
        "tags": [
          "PolicyEvents"
        ],
        "description": "Get policy events for given scope.",
        "operationId": "PolicyEvents3_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "syncToken",
            "description": "The sync token.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The subscription id.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceProvider",
            "description": "The resource provider namespace.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceType",
            "description": "The resource type.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "description": "The resource name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PolicyEventsResponse"
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "default": {
            "description": "An unexpected error occurred",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "PolicyEvents3_Get": {
            "$ref": "./examples/PolicyEvents3_Get.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AccountModelBase": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the purview account."
        },
        "name": {
          "type": "string",
          "description": "Name of the purview account."
        },
        "location": {
          "type": "string",
          "description": "Region where purview account is created."
        },
        "tenantId": {
          "type": "string",
          "description": "Tenant id of the purview account."
        },
        "gatewayEndpoint": {
          "type": "string",
          "description": "Purview account gateway endpoint."
        }
      }
    },
    "Consent": {
      "type": "object",
      "properties": {
        "value": {
          "type": "boolean",
          "description": "Top level property representing consent is enabled or disabled for the requested resource. No need to check individual properties if this is false."
        },
        "properties": {
          "$ref": "#/definitions/Properties"
        },
        "excludedScopes": {
          "type": "array",
          "description": "Child scopes that need to be excluded. This is only valid if the consent is true for requested resource.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DatasourcePreferencesResponse": {
      "type": "object",
      "properties": {
        "consent": {
          "$ref": "#/definitions/Consent"
        },
        "accountInfo": {
          "$ref": "#/definitions/AccountModelBase"
        }
      }
    },
    "ErrorModel": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Service error code."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "target": {
          "type": "string",
          "description": "Detailed error message."
        },
        "details": {
          "type": "array",
          "description": "Granular errors (if any).",
          "items": {
            "$ref": "#/definitions/ErrorModel"
          }
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "ErrorResponseModel": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorModel"
        }
      }
    },
    "PolicyElement": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the policy element."
        },
        "scopes": {
          "type": "array",
          "description": "List of scopes included in this policy.",
          "items": {
            "type": "string"
          }
        },
        "kind": {
          "type": "string",
          "description": "Kind of policy element. Possible values: policy/policySet/attributeRule."
        },
        "updatedAt": {
          "type": "string",
          "description": "Time at which this policy element is last updated."
        },
        "version": {
          "format": "int64",
          "description": "Current version of policy element. This is auto incremented with each change. Starts with 1.",
          "type": "integer"
        },
        "elementJson": {
          "type": "string",
          "description": "Policy element serialized json payload."
        }
      }
    },
    "PolicyElementEventModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the policy element."
        },
        "scopes": {
          "type": "array",
          "description": "List of scopes included in this policy.",
          "items": {
            "type": "string"
          }
        },
        "kind": {
          "type": "string",
          "description": "Kind of policy element. Possible values: policy/policySet/attributeRule."
        },
        "updatedAt": {
          "type": "string",
          "description": "Time at which this policy element is last updated."
        },
        "version": {
          "format": "int64",
          "description": "Current version of policy element. This is auto incremented with each change. Starts with 1.",
          "type": "integer"
        },
        "elementJson": {
          "type": "string",
          "description": "Policy element serialized json payload."
        },
        "eventType": {
          "type": "string",
          "description": "Type of event. Possible values are: Microsoft.Purview/PolicyElements/Write,Microsoft.Purview/PolicyElements/Delete."
        }
      }
    },
    "PolicyEventsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "format": "int32",
          "type": "integer",
          "description": "Count of elements in payload."
        },
        "syncToken": {
          "type": "string",
          "description": "Sync token represents the checkpoint upto which this policy elements list is updated. Client need to store this value and keep updating if PDS returns a new value. Call this API with the most recent value recieved."
        },
        "elements": {
          "type": "array",
          "description": "List of created/updated policy elements.",
          "items": {
            "$ref": "#/definitions/PolicyElementEventModel"
          }
        }
      }
    },
    "PolicyResponse": {
      "type": "object",
      "properties": {
        "count": {
          "format": "int32",
          "type": "integer",
          "description": "Count of elements in payload."
        },
        "syncToken": {
          "type": "string",
          "description": "Sync token represents the checkpoint upto which this policy elements list is updated. Client need to pass this value while fetching records using policyEvents API."
        },
        "elements": {
          "type": "array",
          "description": "List of policy elements.",
          "items": {
            "$ref": "#/definitions/PolicyElement"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Link with skip token to fetch next set of records. This is used in case of pagination."
        }
      }
    },
    "Properties": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "boolean",
          "description": "Boolean value representing that the requested resource is enabled for metadata discovery by purview."
        },
        "classification": {
          "type": "boolean",
          "description": "Boolean value representing that the requested resource is enabled for classifying data by purview."
        },
        "dataUseGovernance": {
          "type": "boolean",
          "description": "Boolean value representing that the requested resource is enabled for data use governance managed by purview."
        }
      }
    }
  },
  "parameters": {
    "endpoint": {
      "in": "path",
      "name": "endpoint",
      "description": "The endpoint of your Purview account. Example: https://{accountName}.purview.azure.com.",
      "required": true,
      "type": "string",
      "format": "uri",
      "x-ms-parameter-location": "client",
      "x-ms-skip-url-encoding": true
    },
    "api-version": {
      "in": "query",
      "name": "api-version",
      "description": "The api-version of the service.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "description": "Azure Active Directory OAuth2 Flow."
    }
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/endpoint"
      }
    ]
  },
  "basePath": "/pds",
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}
