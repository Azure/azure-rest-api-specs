{
  "swagger": "2.0",
  "info": {
    "title": "Purview Workflow Service REST API Document",
    "version": "2022-05-01-preview",
    "description": "Workflows are automated, repeatable business processes which allow organizations to track changes, enforce policy compliance, and ensure quality data across their data landscape.Workflow service is a micro service within Microsoft Purview to validate and orchestrate CUD (create, update, delete) operations on their data entities. This spec defines REST API of Purview Workflow Service, which could used for creating Purview workflow client."
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{Endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/endpoint"
      }
    ]
  },
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow."
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "paths": {
    "/workflow/mine/approvals/{approvalRequestId}": {
      "get": {
        "tags": [
          "Approval"
        ],
        "description": "Get approval request by ApprovalRequestId",
        "operationId": "ApprovalRequest_GetByApprovalRequestId",
        "x-ms-examples": {
          "ApprovalRequest_Get": {
            "$ref": "./examples/ApprovalRequest_Get.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/approvalRequestId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Approval"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Approval"
        ],
        "description": "Approve or reject an approval request",
        "operationId": "ApprovalRequest_ApproveOrReject",
        "x-ms-examples": {
          "ApprovalRequest_ApproveOrReject": {
            "$ref": "./examples/ApprovalRequest_ApproveOrReject.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/approvalRequestId"
          },
          {
            "name": "approvalResponse",
            "in": "body",
            "required": true,
            "description": "Approval response, approve or reject an approval request.",
            "schema": {
              "$ref": "#/definitions/ApprovalResponse"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/approvals/{approvalRequestId}/reassign": {
      "post": {
        "tags": [
          "Approval"
        ],
        "description": "Reassign an approval request.",
        "operationId": "ApprovalRequest_Reassign",
        "x-ms-examples": {
          "ApprovalRequest_Reassign": {
            "$ref": "./examples/ApprovalRequest_Reassign.json"
          }
        },
        "deprecated": false,
        "produces": [
          "text/plain",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/approvalRequestId"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "ApprovalReassignCommand",
            "in": "body",
            "required": true,
            "description": "The request body of reassigning an approval request.",
            "schema": {
              "$ref": "#/definitions/ApprovalReassignCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/definitions/{workflowDefinitionId}": {
      "get": {
        "tags": [
          "WorkflowDefinition"
        ],
        "description": "Get a specific workflow definition.",
        "operationId": "WorkflowDefinition_GetByWorkflowDefinitionId",
        "x-ms-examples": {
          "WorkflowDefinition_Get": {
            "$ref": "./examples/WorkflowDefinition_Get.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workflowDefinitionId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkflowDefinition"
        ],
        "description": "Create or update a workflow definition.",
        "operationId": "WorkflowDefinition_CreateOrUpdate",
        "x-ms-examples": {
          "WorkflowDefinition_CreateOrUpdate": {
            "$ref": "./examples/WorkflowDefinition_CreateOrUpdate.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workflowDefinitionId"
          },
          {
            "name": "workflowDefinitionCreateOrUpdateCommand",
            "in": "body",
            "required": true,
            "description": "The workflow definition.",
            "schema": {
              "$ref": "#/definitions/WorkflowDefinitionCreateOrUpdateCommand"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkflowDefinition"
        ],
        "description": "Delete a workflow definition.",
        "operationId": "WorkflowDefinition_DeleteByWorkflowDefinitionId",
        "x-ms-examples": {
          "WorkflowDefinition_Delete": {
            "$ref": "./examples/WorkflowDefinition_Delete.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workflowDefinitionId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/definitions": {
      "get": {
        "tags": [
          "WorkflowDefinition"
        ],
        "description": "List all workflow definitions.",
        "operationId": "WorkflowDefinition_List",
        "x-ms-examples": {
          "WorkflowDefinitions_List": {
            "$ref": "./examples/WorkflowDefinitions_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "name": "workflowType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The workflow type for filtering purpose."
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResult_WorkflowDefinitionMetadata"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/runs/query-definition": {
      "post": {
        "tags": [
          "CanTriggerRunResponse"
        ],
        "description": "Query workflow definition for specific workflow type",
        "operationId": "WorkflowRun_QueryWorkflowDefinition",
        "x-ms-examples": {
          "WorkflowDefinition_Query": {
            "$ref": "./examples/WorkflowDefinitions_Query.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "name": "triggerQuery",
            "in": "body",
            "required": true,
            "description": "The query parameters.",
            "schema": {
              "example": {
                "requestType": "CreateTermRequest",
                "parentTermId": "b82eee0b-c5da-40e1-a4bc-72ec38d0cd09"
              }
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CanTriggerRunResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/runs": {
      "post": {
        "tags": [
          "TriggerQuery"
        ],
        "description": "Trigger a workflow run for requestor",
        "operationId": "WorkflowRuns_Create",
        "x-ms-examples": {
          "WorkflowRun_Create": {
            "$ref": "./examples/WorkflowRun_Create.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "name": "requestEventPayloadWebRequest",
            "in": "body",
            "required": true,
            "description": "The request event payload to trigger workflow run.",
            "schema": {
              "$ref": "#/definitions/TriggerQuery"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/runs/{workflowRunId}/cancel": {
      "post": {
        "tags": [
          "RunCancelReply"
        ],
        "description": "Cancel a workflow run.",
        "operationId": "WorkflowRun_Cancel",
        "x-ms-examples": {
          "WorkflowRun_Cancel": {
            "$ref": "./examples/WorkflowRun_Cancel.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workflowRunId"
          },
          {
            "name": "runCancelReply",
            "in": "body",
            "required": true,
            "description": "Reply of canceling a workflow run.",
            "schema": {
              "$ref": "#/definitions/RunCancelReply"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/definitions/{workflowDefinitionId}/runs": {
      "get": {
        "tags": [
          "WorkflowRunMetadata"
        ],
        "description": "List workflow runs of a workflow definition",
        "operationId": "WorkflowRuns_List",
        "x-ms-examples": {
          "WorkflowDefinitionWorkflowRun_List": {
            "$ref": "./examples/WorkflowDefinitionWorkflowRun_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workflowDefinitionId"
          },
          {
            "$ref": "#/parameters/window"
          },
          {
            "$ref": "#/parameters/continuationToken"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/sortKey"
          },
          {
            "$ref": "#/parameters/isDescending"
          },
          {
            "$ref": "#/parameters/status[]"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResult_WorkflowRunMetadata"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/runs/history": {
      "get": {
        "tags": [
          "WorkflowRunMetadata"
        ],
        "description": "List workflow runs history.",
        "operationId": "WorkflowRunsHistory_List",
        "x-ms-examples": {
          "WorkflowRunHistory_List": {
            "$ref": "./examples/WorkflowRunHistory_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/window"
          },
          {
            "$ref": "#/parameters/continuationToken"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/sortKey"
          },
          {
            "$ref": "#/parameters/isDescending"
          },
          {
            "$ref": "#/parameters/status[]"
          },
          {
            "$ref": "#/parameters/workflowDefinitionId[]"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResult_WorkflowRunMetadata"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/runs/{workflowRunId}/detail": {
      "get": {
        "tags": [
          "RunDetail"
        ],
        "description": "Get workflow run detail.",
        "operationId": "WorkflowRunDetail_Get",
        "x-ms-examples": {
          "WorkflowRunDetail_Get": {
            "$ref": "./examples/WorkflowRunDetail_Get.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workflowRunId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RunDetail"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/requests/sent": {
      "get": {
        "tags": [
          "Approval"
        ],
        "description": "List current user's sent pending requests",
        "operationId": "SentApprovalRequests_List",
        "x-ms-examples": {
          "Sent_ApprovalRequest_List": {
            "$ref": "./examples/ApprovalRequest_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/window"
          },
          {
            "$ref": "#/parameters/continuationToken"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/sortKey"
          },
          {
            "$ref": "#/parameters/isDescending"
          },
          {
            "$ref": "#/parameters/type[]"
          },
          {
            "$ref": "#/parameters/keyword"
          },
          {
            "$ref": "#/parameters/workflowDefinitionId[]"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResult_Approval"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/requests/received": {
      "get": {
        "tags": [
          "Approval"
        ],
        "description": "List current user's pending received requests",
        "operationId": "ReceivedApprovalRequests_List",
        "x-ms-examples": {
          "Received_ApprovalRequest_List": {
            "$ref": "./examples/ApprovalRequest_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/window"
          },
          {
            "$ref": "#/parameters/continuationToken"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/sortKey"
          },
          {
            "$ref": "#/parameters/isDescending"
          },
          {
            "$ref": "#/parameters/type[]"
          },
          {
            "$ref": "#/parameters/keyword"
          },
          {
            "$ref": "#/parameters/workflowDefinitionId[]"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResult_Approval"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/requests/history": {
      "get": {
        "tags": [
          "Approval"
        ],
        "description": "List current user's completed requests(both received and sent)",
        "operationId": "ApprovalRequestsHistory_List",
        "x-ms-examples": {
          "History_ApprovalRequest_List": {
            "$ref": "./examples/ApprovalRequest_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/window"
          },
          {
            "$ref": "#/parameters/continuationToken"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/sortKey"
          },
          {
            "$ref": "#/parameters/isDescending"
          },
          {
            "$ref": "#/parameters/type[]"
          },
          {
            "$ref": "#/parameters/status[]"
          },
          {
            "$ref": "#/parameters/keyword"
          },
          {
            "$ref": "#/parameters/workflowDefinitionId[]"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResult_Approval"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/tasks/{taskRequestId}": {
      "get": {
        "tags": [
          "TaskRequest"
        ],
        "description": "Get a task",
        "operationId": "TaskRequest_GetByTaskRequestId",
        "x-ms-examples": {
          "TaskRequest_Get": {
            "$ref": "./examples/TaskRequest_Get.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/taskRequestId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TaskRequest"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "TaskRequest"
        ],
        "description": "Update a task",
        "operationId": "TaskRequest_UpdateByTaskRequestId",
        "x-ms-examples": {
          "TaskRequest_Update": {
            "$ref": "./examples/TaskRequest_Update.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/taskRequestId"
          },
          {
            "name": "taskUpdateCommand",
            "in": "body",
            "required": true,
            "description": "Request body of updating task.",
            "schema": {
              "$ref": "#/definitions/TaskUpdateCommand"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/tasks/{taskRequestId}/reassign": {
      "post": {
        "description": "Reassign a task.",
        "operationId": "TaskRequest_Reassign",
        "x-ms-examples": {
          "TaskRequest_Reassign": {
            "$ref": "./examples/TaskRequest_Reassign.json"
          }
        },
        "deprecated": false,
        "produces": [
          "text/plain",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/taskRequestId"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "TaskReassignCommand",
            "in": "body",
            "required": true,
            "description": "The request body of reassigning a task request.",
            "schema": {
              "$ref": "#/definitions/TaskReassignCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "InlinedActionDetailInput": {
      "title": "InlinedActionDetailInput",
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "title": "content",
          "description": "The input content of actions."
        }
      },
      "required": [
        "content"
      ]
    },
    "InlinedActionDetailOutput": {
      "title": "InlinedActionDetailOutput",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "Type",
          "description": "The output content of actions."
        },
        "content": {
          "type": "object",
          "title": "Content",
          "description": "The content of actions output."
        }
      },
      "required": [
        "content"
      ]
    },
    "ActionDetail": {
      "title": "ActionDetail",
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "title": "StartTime",
          "description": "The start time of actions."
        },
        "status": {
          "type": "object",
          "title": "Status",
          "description": "The status of actions."
        },
        "output": {
          "$ref": "#/definitions/InlinedActionDetailOutput"
        },
        "input": {
          "$ref": "#/definitions/InlinedActionDetailInput"
        }
      },
      "required": [
        "startTime",
        "status"
      ]
    },
    "ApprovalDetails": {
      "title": "ApprovalDetails",
      "type": "object",
      "properties": {
        "approvalType": {
          "type": "string",
          "title": "ApprovalType",
          "description": "The approval type of an approval request."
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "The status of an approval request."
        },
        "approvers": {
          "type": "object",
          "title": "Approvers",
          "description": "The list of approvers"
        }
      },
      "required": [
        "approvalType",
        "status",
        "approvers"
      ]
    },
    "ApprovalResponse": {
      "title": "ApprovalResponse",
      "type": "object",
      "properties": {
        "response": {
          "type": "string",
          "title": "Response",
          "description": "The response to an approval request, approve or reject. "
        },
        "comment": {
          "type": "string",
          "title": "Comment",
          "description": "The comment of approving or rejecting an approval request."
        }
      },
      "required": [
        "response"
      ]
    },
    "Approval": {
      "title": "Approval",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "Type",
          "description": "The workflow request type."
        },
        "workflowRunId": {
          "type": "string",
          "description": "The workflow run id (GUID)."
        },
        "workflowDefinitionId": {
          "type": "string",
          "title": "workflowDefinitionId",
          "description": "The workflow definition id(GUID)."
        },
        "approvalId": {
          "type": "string",
          "title": "ApprovalId",
          "description": "The approval request id(GUID)."
        },
        "requestorId": {
          "type": "string",
          "title": "RequestorId",
          "description": "The person(GUID) who created the approval request."
        },
        "submittedTime": {
          "type": "string",
          "format": "date-time",
          "title": "SubmittedTime",
          "description": "The submitted time of an approval request."
        },
        "lastUpdatedTime": {
          "type": "string",
          "format": "date-time",
          "title": "LastUpdatedTime",
          "description": "The last update time of an approval request."
        },
        "approval": {
          "$ref": "#/definitions/ApprovalDetails"
        },
        "requestEventPayload": {
          "type": "object",
          "title": "RequestEventPayload",
          "description": "Workflow approval request event details."
        }
      },
      "required": [
        "workflowRunId",
        "workflowDefinitionId",
        "approvalId",
        "requestorId",
        "submittedTime",
        "lastUpdatedTime",
        "approval",
        "requestEventPayload"
      ]
    },
    "ApprovalWorkflow": {
      "title": "ApprovalWorkflow",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "Type",
          "description": "The workflow Type."
        },
        "category": {
          "type": "string",
          "title": "Category",
          "description": "The workflow type category."
        },
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The workflow action."
        }
      },
      "required": [
        "category",
        "action"
      ]
    },
    "CanTriggerRunResponse": {
      "title": "CanTriggerRunResponse",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "Type",
          "description": "The workflow definition type."
        },
        "workflowDefinitionId": {
          "type": "string",
          "title": "workflowDefinitionId",
          "description": "The workflow definition id(GUID)."
        }
      },
      "required": [
        "type"
      ]
    },
    "Detail": {
      "title": "Detail",
      "type": "object",
      "properties": {
        "trigger": {
          "type": "object",
          "title": "Trigger",
          "description": "The workflow definition trigger.",
          "$ref": "#/definitions/TriggerDetail"
        },
        "actions": {
          "type": "object",
          "title": "Actions",
          "description": "The workflow definition actions.",
          "additionalProperties": {
            "$ref": "#/definitions/ActionDetail"
          }
        }
      },
      "required": [
        "trigger",
        "actions"
      ]
    },
    "ListResult_Approval": {
      "title": "ListResult_Approval",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Approval"
          },
          "title": "Value",
          "description": "The value of approval request list.",
          "x-ms-identifiers": [
            "approvalId"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "ListResult_WorkflowDefinitionMetadata": {
      "title": "ListResult_WorkflowDefinitionMetadata",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowDefinitionMetadata"
          },
          "title": "Value",
          "description": "The value of workflow definition list."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "ListResult_WorkflowRunMetadata": {
      "title": "ListResult_WorkflowRunMetadata",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowRunMetadata"
          },
          "title": "Value",
          "description": "The value of workflow run list."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "TriggerQuery": {
      "title": "TriggerQuery",
      "type": "object"
    },
    "RunCancelReply": {
      "title": "RunCancelReply",
      "type": "object",
      "properties": {
        "comment": {
          "type": "string",
          "title": "Comment",
          "description": "The comment of canceling a workflow run."
        }
      }
    },
    "RunDetail": {
      "title": "RunDetail",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "The workflow run id(GUID)."
        },
        "workflowDefinitionId": {
          "type": "string",
          "title": "WorkflowDefinitionId",
          "description": "The workflow definition id(GUID)."
        },
        "workflowType": {
          "$ref": "#/definitions/ApprovalWorkflow"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "title": "StartTime",
          "description": "The start time of workflow run."
        },
        "requestor": {
          "type": "string",
          "title": "Requestor",
          "description": "The person(GUID) who created the workflow run."
        },
        "requestEventPayload": {
          "type": "object",
          "title": "RequestEventPayload",
          "description": "Workflow run request event details."
        },
        "status": {
          "type": "object",
          "title": "Status",
          "description": "The workflow run status."
        },
        "definition": {
          "type": "object",
          "title": "Definition",
          "description": "The workflow definition of this workflow run."
        },
        "detail": {
          "$ref": "#/definitions/Detail"
        }
      },
      "required": [
        "id",
        "workflowDefinitionId",
        "workflowType",
        "startTime",
        "requestor",
        "requestEventPayload",
        "status",
        "definition",
        "detail"
      ]
    },
    "SimpleTaskDetail": {
      "title": "SimpleTaskDetail",
      "type": "object",
      "properties": {
        "taskType": {
          "type": "string",
          "title": "TaskType",
          "description": "Task type."
        },
        "taskTitle": {
          "type": "string",
          "title": "TaskTitle",
          "description": "The task title of a task definition."
        },
        "taskBody": {
          "type": "string",
          "title": "TaskBody",
          "description": "The task definition body detail."
        },
        "assignedTo": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "AssignedTo",
          "description": "The person who has been assigned the task request."
        },
        "status": {
          "$ref": "#/definitions/TaskStatus"
        },
        "changeHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskChangeHistory"
          },
          "title": "ChangeHistory",
          "description": "The change history of a workflow task request.",
          "x-ms-identifiers": []
        }
      },
      "required": [
        "taskTitle",
        "taskBody",
        "status"
      ]
    },
    "TaskChangeHistory": {
      "title": "TaskChangeHistory",
      "type": "object",
      "properties": {
        "updatedBy": {
          "type": "string",
          "title": "UpdatedBy",
          "description": "The person(GUID) who updated a task."
        },
        "comment": {
          "type": "string",
          "title": "Comment",
          "description": "The comment of a updated task."
        },
        "updatedTime": {
          "type": "string",
          "format": "date-time",
          "title": "UpdatedTime",
          "description": "The updated time of task status change history."
        },
        "oldStatus": {
          "$ref": "#/definitions/TaskStatus"
        },
        "newStatus": {
          "$ref": "#/definitions/TaskStatus"
        }
      },
      "required": [
        "updatedBy",
        "updatedTime",
        "oldStatus",
        "newStatus"
      ]
    },
    "TaskRequest": {
      "title": "TaskRequest",
      "type": "object",
      "properties": {
        "workflowRunId": {
          "type": "string",
          "title": "WorkflowRunId",
          "description": "The workflow run id (GUID)."
        },
        "workflowDefinitionId": {
          "type": "string",
          "title": "WorkflowDefinitionId",
          "description": "The GUID of workflow definition."
        },
        "taskRequestId": {
          "type": "string",
          "title": "TaskRequestId",
          "description": "Task request id (GUID)."
        },
        "requestorId": {
          "type": "string",
          "title": "RequestorId",
          "description": "The person(GUID) who created the task request."
        },
        "submittedTime": {
          "type": "string",
          "format": "date-time",
          "title": "SubmittedTime",
          "description": "The submitted time of a task request."
        },
        "lastUpdatedTime": {
          "type": "string",
          "format": "date-time",
          "title": "LastUpdatedTime",
          "description": "The last update time of a task request."
        },
        "taskDetail": {
          "$ref": "#/definitions/SimpleTaskDetail"
        },
        "requestEventPayload": {
          "type": "object",
          "title": "RequestEventPayload",
          "description": "Task request event details."
        }
      },
      "required": [
        "workflowRunId",
        "workflowDefinitionId",
        "taskRequestId",
        "requestorId",
        "submittedTime",
        "lastUpdatedTime",
        "taskDetail",
        "requestEventPayload"
      ]
    },
    "TaskStatus": {
      "title": "TaskStatus",
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "title": "Value",
          "description": "Task status value."
        },
        "statusType": {
          "type": "string",
          "title": "StatusType",
          "description": "Task status type."
        }
      },
      "required": [
        "value",
        "statusType"
      ]
    },
    "TaskUpdateCommand": {
      "title": "TaskUpdateCommand",
      "type": "object",
      "properties": {
        "newStatus": {
          "type": "string",
          "title": "NewStatus",
          "description": "The new status will be used to update the task."
        },
        "comment": {
          "type": "string",
          "title": "Comment",
          "description": "The comment when update a task."
        }
      },
      "required": [
        "newStatus"
      ]
    },
    "TriggerDetail": {
      "title": "TriggerDetail",
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "title": "StartTime",
          "description": "The start time of trigger in workflow run detail."
        },
        "status": {
          "type": "object",
          "title": "Status",
          "description": "The status of trigger in workflow run detail."
        }
      },
      "required": [
        "startTime",
        "status"
      ]
    },
    "WorkflowDefinitionCreateOrUpdateCommand": {
      "title": "WorkflowDefinitionCreateOrUpdateCommand",
      "type": "object",
      "properties": {
        "workflowType": {
          "$ref": "#/definitions/ApprovalWorkflow"
        },
        "associatedEntityIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "associatedEntityIds",
          "description": "The associated entity guid list."
        },
        "workflowName": {
          "type": "string",
          "title": "WorkflowName",
          "description": "The workflow name of workflow definition."
        },
        "isEnabled": {
          "type": "boolean",
          "title": "IsEnabled",
          "description": "Whether the workflow definition enabled or not."
        },
        "definition": {
          "type": "object",
          "title": "Definition",
          "description": "The workflow definition detail."
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "Description of a workflow definition."
        }
      },
      "required": [
        "workflowType",
        "associatedEntityIds",
        "workflowName",
        "isEnabled",
        "description"
      ]
    },
    "WorkflowDefinitionMetadata": {
      "title": "WorkflowDefinitionMetadata",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "The GUID of workflow definition."
        },
        "workflowType": {
          "$ref": "#/definitions/ApprovalWorkflow"
        },
        "associatedEntityIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "associatedEntityIds",
          "description": "The associated entity guid list."
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "title": "",
          "description": "The created time of a workflow definition."
        },
        "createdBy": {
          "type": "string",
          "title": "CreatedBy",
          "description": "The person who created the workflow definition."
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time",
          "title": "LastUpdateTime",
          "description": "The last update time of a workflow definition."
        },
        "updatedBy": {
          "type": "string",
          "title": "UpdatedBy",
          "description": "The person who updated the workflow definition."
        },
        "workflowName": {
          "type": "string",
          "title": "WorkflowName",
          "description": "The workflow name of workflow definition."
        },
        "isEnabled": {
          "type": "boolean",
          "title": "IsEnabled",
          "description": "Whether the workflow definition enabled or not."
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "Description of a workflow definition."
        }
      },
      "required": [
        "id",
        "workflowType",
        "createdTime",
        "createdBy",
        "lastUpdateTime",
        "updatedBy",
        "workflowName",
        "isEnabled",
        "description"
      ]
    },
    "WorkflowDefinition": {
      "title": "WorkflowDefinition",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "The GUID of workflow definition."
        },
        "workflowType": {
          "$ref": "#/definitions/ApprovalWorkflow"
        },
        "associatedEntityIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "associatedEntityIds",
          "description": "The associated entity guid list."
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "title": "CreatedTime",
          "description": "The created time of a workflow definition."
        },
        "createdBy": {
          "type": "string",
          "title": "CreatedBy",
          "description": "The person who created the workflow definition."
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time",
          "title": "LastUpdateTime",
          "description": "The last update time of a workflow definition."
        },
        "updatedBy": {
          "type": "string",
          "title": "UpdatedBy",
          "description": "The person who updated the workflow definition."
        },
        "workflowName": {
          "type": "string",
          "title": "WorkflowName",
          "description": "The workflow name of workflow definition."
        },
        "isEnabled": {
          "type": "boolean",
          "title": "IsEnabled",
          "description": "Whether the workflow definition enabled or not."
        },
        "definition": {
          "type": "object",
          "title": "Definition",
          "description": "The workflow definition detail."
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "Description of a workflow definition."
        }
      },
      "required": [
        "id",
        "workflowType",
        "createdTime",
        "createdBy",
        "lastUpdateTime",
        "updatedBy",
        "workflowName",
        "isEnabled",
        "definition",
        "description"
      ]
    },
    "WorkflowRunMetadata": {
      "title": "WorkflowRunMetadata",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "The GUID of workflow run."
        },
        "workflowDefinitionId": {
          "type": "string",
          "title": "WorkflowDefinitionId",
          "description": "The GUID of workflow definition."
        },
        "startTime": {
          "type": "string",
          "title": "StartTime",
          "description": "Workflow run start time.",
          "format": "date-time"
        },
        "requestor": {
          "type": "string",
          "title": "Requestor",
          "description": "The person who create the workflow run."
        },
        "requestEventPayload": {
          "type": "object",
          "title": "RequestEventPayload",
          "description": "Workflow run request event details."
        },
        "status": {
          "type": "object",
          "title": "Status",
          "description": "Workflow run status."
        }
      },
      "required": [
        "id",
        "workflowDefinitionId",
        "startTime",
        "requestor",
        "requestEventPayload",
        "status"
      ]
    },
    "ApprovalReassignCommand": {
      "title": "ApprovalReassignCommand",
      "type": "object",
      "properties": {
        "reassignments": {
          "type": "array",
          "title": "Reassignments",
          "description": "The request body of reassigning an approval request.",
          "items": {
            "$ref": "#/definitions/ApprovalReassignment"
          }
        }
      }
    },
    "ApprovalReassignment": {
      "title": "ApprovalReassignment",
      "type": "object",
      "properties": {
        "reassignFrom": {
          "type": "string",
          "title": "ReassignFrom",
          "description": "Reassign approval request from someone(GUID)."
        },
        "reassignTo": {
          "type": "string",
          "title": "ReassignTo",
          "description": "Reassign approval request to someone(GUID)."
        }
      },
      "required": [
        "reassignFrom",
        "reassignTo"
      ]
    },
    "TaskReassignCommand": {
      "title": "TaskReassignCommand",
      "type": "object",
      "properties": {
        "reassignments": {
          "type": "array",
          "title": "Reassignments",
          "description": "The request body of reassigning a task request.",
          "items": {
            "$ref": "#/definitions/TaskReassignment"
          }
        }
      }
    },
    "TaskReassignment": {
      "title": "TaskReassignment",
      "type": "object",
      "properties": {
        "reassignFrom": {
          "type": "string",
          "title": "ReassignFrom",
          "description": "Reassign task request from someone(GUID)."
        },
        "reassignTo": {
          "type": "string",
          "title": "ReassignTo",
          "description": "Reassign task request to someone(GUID)."
        }
      },
      "required": [
        "reassignFrom",
        "reassignTo"
      ]
    },
    "ErrorResponse": {
      "description": "Default error response model",
      "type": "object",
      "properties": {
        "error": {
          "description": "Gets or sets the error.",
          "allOf": [
            {
              "$ref": "#/definitions/ErrorModel"
            }
          ],
          "readOnly": true
        }
      }
    },
    "ErrorModel": {
      "description": "Default error model",
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets or sets the code.",
          "type": "string",
          "readOnly": true
        },
        "details": {
          "description": "Gets or sets the details.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorModel"
          },
          "x-ms-identifiers": [
            "code"
          ],
          "readOnly": true
        },
        "message": {
          "description": "Gets or sets the messages.",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "description": "Gets or sets the target.",
          "type": "string",
          "readOnly": true
        }
      }
    }
  },
  "parameters": {
    "api-version": {
      "name": "api-version",
      "description": "Version of Purview APIs",
      "in": "query",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "x-ms-client-request-id": {
      "name": "x-ms-client-request-id",
      "in": "header",
      "required": true,
      "type": "string",
      "description": "Client Request Id",
      "x-ms-parameter-location": "client"
    },
    "endpoint": {
      "name": "Endpoint",
      "description": "The account endpoint of your Purview account. Example: https://{accountName}.purview.azure.com/",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "format": "uri",
      "in": "path",
      "x-ms-skip-url-encoding": true
    },
    "window": {
      "name": "window",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Time window of filtering items.",
      "x-ms-parameter-location": "method"
    },
    "limit": {
      "name": "limit",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "The page size to get the items at one time.",
      "x-ms-parameter-location": "method"
    },
    "continuationToken": {
      "name": "continuationToken",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "The continuation token used for getting the next page of items.",
      "x-ms-parameter-location": "method"
    },
    "sortKey": {
      "name": "sortKey",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "The key used for sorting the items.",
      "x-ms-parameter-location": "method"
    },
    "isDescending": {
      "name": "isDescending",
      "in": "query",
      "required": false,
      "type": "boolean",
      "description": "List items in an ascending order or a descending order by submitted time.",
      "x-ms-parameter-location": "method"
    },
    "type[]": {
      "name": "type[]",
      "in": "query",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Filter items by workflow request type.",
      "x-ms-parameter-location": "method"
    },
    "keyword": {
      "name": "keyword",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Filter items by keyword in workflow name.",
      "x-ms-parameter-location": "method"
    },
    "workflowDefinitionId": {
      "name": "workflowDefinitionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The workflow definition id (GUID).",
      "x-ms-parameter-location": "method"
    },
    "workflowRunId": {
      "name": "workflowRunId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The workflow run id (GUID).",
      "x-ms-parameter-location": "method"
    },
    "taskRequestId": {
      "name": "taskRequestId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The task request id (GUID)",
      "x-ms-parameter-location": "method"
    },
    "approvalRequestId": {
      "name": "approvalRequestId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The approval request id (GUID)",
      "x-ms-parameter-location": "method"
    },
    "workflowDefinitionId[]": {
      "name": "workflowDefinitionId[]",
      "in": "query",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Filter items by workflow definition id list.",
      "x-ms-parameter-location": "method"
    },
    "status[]": {
      "name": "status[]",
      "in": "query",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Filter workflow runs by workflow run status.",
      "x-ms-parameter-location": "method"
    }
  },
  "tags": []
}
