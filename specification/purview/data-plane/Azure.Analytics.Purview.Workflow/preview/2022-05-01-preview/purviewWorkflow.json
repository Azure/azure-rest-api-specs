{
  "swagger": "2.0",
  "info": {
    "title": "Purview Workflow Service REST API Document",
    "version": "2022-05-01-preview",
    "description": "Workflows are automated, repeatable business processes which allow organizations to track changes, enforce policy compliance, and ensure quality data across their data landscape.Workflow service is a micro service within Microsoft Purview to validate and orchestrate CUD (create, update, delete) operations on their data entities. This spec defines REST API of Purview Workflow Service, which could used for creating Purview workflow client."
  },
  "host": "purview.azure.com",
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/endpoint"
      }
    ]
  },
  "basePath": "/workflow",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "https://purview.azure.net/.default": "Default authorization scope."
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "https://purview.azure.net/.default"
      ]
    }
  ],
  "paths": {
    "/workflows": {
      "get": {
        "tags": [
          "Workflows"
        ],
        "description": "List all workflows.",
        "operationId": "Workflows_List",
        "x-ms-examples": {
          "Workflows_List": {
            "$ref": "./examples/Workflows_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowMetadataList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflows/{workflowId}": {
      "get": {
        "tags": [
          "Workflows"
        ],
        "description": "Get a specific workflow.",
        "operationId": "Workflow_Get",
        "x-ms-examples": {
          "WorkflowDefinition_Get": {
            "$ref": "./examples/Workflow_Get.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workflowId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Workflows"
        ],
        "description": "Create or update a workflow.",
        "operationId": "Workflow_CreateOrUpdate",
        "x-ms-examples": {
          "Workflow_CreateOrUpdate": {
            "$ref": "./examples/Workflow_CreateOrUpdate.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workflowId"
          },
          {
            "name": "workflowCreateOrUpdateCommand",
            "in": "body",
            "required": true,
            "description": "Create or update workflow payload.",
            "schema": {
              "$ref": "#/definitions/WorkflowCreateOrUpdateCommand"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Workflows"
        ],
        "description": "Delete a workflow.",
        "operationId": "Workflow_Delete",
        "x-ms-examples": {
          "Workflow_Delete": {
            "$ref": "./examples/Workflow_Delete.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workflowId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/userrequests": {
      "post": {
        "tags": [
          "UserRequests"
        ],
        "description": "Submit a user request for requestor",
        "operationId": "UserRequests_Submit",
        "x-ms-examples": {
          "UserRequests_Submit": {
            "$ref": "./examples/UserRequests_Submit.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "name": "userRequestsPayload",
            "in": "body",
            "required": true,
            "description": "The payload of submitting a user request.",
            "schema": {
              "$ref": "#/definitions/UserRequestsPayload"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserRequestsResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "UserRequests"
        ],
        "description": "List all user requests.",
        "operationId": "UserRequests_List",
        "x-ms-examples": {
          "Workflows_List": {
            "$ref": "./examples/UserRequests_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserRequestsResponseList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/userrequests/{requestId}": {
      "get": {
        "tags": [
          "UserRequests"
        ],
        "description": "Get a specific user requests.",
        "operationId": "UserRequests_Get",
        "x-ms-examples": {
          "UserRequests_Get": {
            "$ref": "./examples/UserRequests_Get.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/requestId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserRequestsResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/userrequests/{requestId}/cancel": {
      "post": {
        "tags": [
          "UserRequests"
        ],
        "description": "Cancel a user request.",
        "operationId": "UserRequests_Cancel",
        "x-ms-examples": {
          "UserRequests_Cancel": {
            "$ref": "./examples/UserRequests_Cancel.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/requestId"
          },
          {
            "name": "cancelReply",
            "in": "body",
            "required": true,
            "description": "Reply of canceling a user request.",
            "schema": {
              "$ref": "#/definitions/UserRequestsCancelReply"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/runs": {
      "get": {
        "tags": [
          "WorkflowRun"
        ],
        "description": "List workflow runs.",
        "operationId": "WorkflowRun_List",
        "x-ms-examples": {
          "WorkflowRunHistory_List": {
            "$ref": "./examples/WorkflowRun_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/window"
          },
          {
            "$ref": "#/parameters/continuationToken"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/sortKey"
          },
          {
            "$ref": "#/parameters/isDescending"
          },
          {
            "$ref": "#/parameters/workflowRunStatus"
          },
          {
            "$ref": "#/parameters/workflowIdList"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowRunList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/runs/{workflowRunId}": {
      "get": {
        "tags": [
          "WorkflowRun"
        ],
        "description": "Get a workflow run.",
        "operationId": "WorkflowRun_Get",
        "x-ms-examples": {
          "WorkflowRun_Get": {
            "$ref": "./examples/WorkflowRun_Get.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workflowRunId"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/withDetails"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowRun"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/runs/{workflowRunId}/cancel": {
      "post": {
        "tags": [
          "WorkflowRun"
        ],
        "description": "Cancel a workflow run.",
        "operationId": "WorkflowRun_Cancel",
        "x-ms-examples": {
          "WorkflowRun_Cancel": {
            "$ref": "./examples/WorkflowRun_Cancel.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workflowRunId"
          },
          {
            "name": "runCancelReply",
            "in": "body",
            "required": true,
            "description": "Reply of canceling a workflow run.",
            "schema": {
              "$ref": "#/definitions/WorkflowRunCancelReply"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workitems": {
      "get": {
        "tags": [
          "WorkItems"
        ],
        "description": "Get all work items.",
        "operationId": "WorkItems_List",
        "x-ms-examples": {
          "WorkItems_Get": {
            "$ref": "./examples/WorkItems_Get.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/workflowIdList"
          },
          {
            "$ref": "#/parameters/window"
          },
          {
            "$ref": "#/parameters/continuationToken"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/sortKey"
          },
          {
            "$ref": "#/parameters/isDescending"
          },
          {
            "$ref": "#/parameters/type"
          },
          {
            "$ref": "#/parameters/keyword"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkItemsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workitems/{workitemId}": {
      "get": {
        "tags": [
          "WorkItems"
        ],
        "description": "Get a work items.",
        "operationId": "WorkItem_Get",
        "x-ms-examples": {
          "WorkItem_Get": {
            "$ref": "./examples/WorkItem_Get.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/workitemId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkItems"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workitems/{workitemId}/approve-approval": {
      "post": {
        "tags": [
          "WorkItems"
        ],
        "description": "Approve an approval request.",
        "operationId": "ApprovalRequest_Approve",
        "x-ms-examples": {
          "ApprovalRequest_Approve": {
            "$ref": "./examples/ApprovalRequest_Approve.json"
          }
        },
        "deprecated": false,
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workitemId"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "approvalResponseComment",
            "in": "body",
            "required": true,
            "description": "The request body of reassigning an approval request.",
            "schema": {
              "$ref": "#/definitions/ApprovalResponseComment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workitems/{workitemId}/reject-approval": {
      "post": {
        "tags": [
          "WorkItems"
        ],
        "description": "Reject an approval request.",
        "operationId": "ApprovalRequest_Reject",
        "x-ms-examples": {
          "ApprovalRequest_Reject": {
            "$ref": "./examples/ApprovalRequest_Reject.json"
          }
        },
        "deprecated": false,
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workitemId"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "approvalResponseComment",
            "in": "body",
            "required": true,
            "description": "The request body of reassigning an approval request.",
            "schema": {
              "$ref": "#/definitions/ApprovalResponseComment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workitems/{workitemId}/reassign": {
      "post": {
        "tags": [
          "WorkItems"
        ],
        "description": "Reassign an approval request.",
        "operationId": "ApprovalRequest_Reassign",
        "x-ms-examples": {
          "ApprovalRequest_Reassign": {
            "$ref": "./examples/ApprovalRequest_Reassign.json"
          }
        },
        "deprecated": false,
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workitemId"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "approvalReassignCommand",
            "in": "body",
            "required": true,
            "description": "The request body of reassigning an approval request.",
            "schema": {
              "$ref": "#/definitions/ApprovalReassignCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workitems/{workitemId}/change-status": {
      "post": {
        "tags": [
          "WorkItems"
        ],
        "description": "Update the status of a workflow task request.",
        "operationId": "TaskRequest_Update",
        "x-ms-examples": {
          "TaskRequest_Update": {
            "$ref": "./examples/TaskRequest_Update.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workitemId"
          },
          {
            "name": "taskUpdateCommand",
            "in": "body",
            "required": true,
            "description": "Request body of updating workflow task request.",
            "schema": {
              "$ref": "#/definitions/TaskUpdateCommand"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workitems/{workitemId}/claim-task": {
      "post": {
        "tags": [
          "WorkItems"
        ],
        "description": "Claim a DSAR task request.",
        "operationId": "DASRTaskRequest_Claim",
        "x-ms-examples": {
          "DASRTaskRequest_Claim": {
            "$ref": "./examples/DASRTaskRequest_Claim.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workitemId"
          },
          {
            "name": "dsarTaskClaimCommand",
            "in": "body",
            "required": true,
            "description": "Request body of claiming DSAR task request.",
            "schema": {
              "$ref": "#/definitions/DSARTaskClaimCommand"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workitems/{workitemId}/release-task": {
      "post": {
        "tags": [
          "WorkItems"
        ],
        "description": "Release a DSAR task request.",
        "operationId": "DASRTaskRequest_Release",
        "x-ms-examples": {
          "DASRTaskRequest_Release": {
            "$ref": "./examples/DASRTaskRequest_Release.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workitemId"
          },
          {
            "name": "dsarTaskReleaseCommand",
            "in": "body",
            "required": true,
            "description": "Request body of releasing DSAR task request.",
            "schema": {
              "$ref": "#/definitions/DSARTaskReleaseCommand"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "WorkItemsList": {
      "title": "WorkItemsList",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItems"
          },
          "description": "The value of workflow items list."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkItems": {
      "title": "WorkItems",
      "discriminator": "type",
      "type": "object",
      "description": "The workflow items properties.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The workflow item type, e.g. approval request or task request.",
          "enum": [
            "approval",
            "task"
          ],
          "x-ms-enum": {
            "name": "type",
            "modelAsString": true
          }
        },
        "id": {
          "type": "string",
          "description": "The workflow item id (GUID)."
        },
        "title": {
          "type": "string",
          "description": "The workflow item title."
        },
        "workflowRunId": {
          "type": "string",
          "description": "The workflow run id (GUID)."
        },
        "workflowDefinitionId": {
          "type": "string",
          "description": "The workflow definition id (GUID)."
        },
        "requestorId": {
          "type": "string",
          "description": "The person(GUID) who sent this workflow request."
        },
        "submittedTime": {
          "type": "string",
          "format": "date-time",
          "description": "The submitted time of a workflow request."
        },
        "lastUpdatedTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last update time of a workflow request."
        },
        "payload": {
          "$ref": "#/definitions/WorkItemPayload"
        }
      },
      "required": [
        "type",
        "id",
        "title",
        "workflowRunId",
        "workflowDefinitionId",
        "requestorId",
        "submittedTime",
        "lastUpdatedTime",
        "payload"
      ]
    },
    "ApprovalRequest": {
      "x-ms-discriminator-value": "approval",
      "description": "The workflow approval request properties.",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItems"
        },
        {
          "type": "object",
          "properties": {
            "approvalDetail": {
              "$ref": "#/definitions/ApprovalDetails"
            }
          },
          "required": [
            "approvalDetail"
          ]
        }
      ]
    },
    "ApprovalDetails": {
      "title": "ApprovalDetails",
      "type": "object",
      "properties": {
        "approvalType": {
          "type": "string",
          "description": "The approval type of an approval request.",
          "enum": [
            "PendingOnAny",
            "PendingOnAll"
          ],
          "x-ms-enum": {
            "name": "type",
            "modelAsString": true
          }
        },
        "status": {
          "type": "string",
          "description": "The status of an approval request."
        },
        "approvers": {
          "type": "object",
          "description": "The list of approvers.",
          "additionalProperties": {
            "type": "object"
          }
        }
      },
      "required": [
        "approvalType",
        "status",
        "approvers"
      ]
    },
    "TaskRequest": {
      "x-ms-discriminator-value": "task",
      "description": "The workflow task request properties.",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItems"
        },
        {
          "type": "object",
          "properties": {
            "taskType": {
              "type": "string",
              "description": "Task type."
            },
            "taskBody": {
              "type": "string",
              "description": "The task definition body detail."
            },
            "assignedTo": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The person who has been assigned the task request."
            },
            "status": {
              "type": "string",
              "description": "Task request status.",
              "enum": [
                "NotStarted",
                "InProgress",
                "Completed",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "status",
                "modelAsString": true
              }
            },
            "changeHistory": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskChangeHistory"
              },
              "description": "The change history of a workflow task request.",
              "x-ms-identifiers": []
            }
          },
          "required": [
            "taskType",
            "taskBody",
            "assignedTo",
            "status",
            "changeHistory"
          ]
        }
      ]
    },
    "TaskChangeHistory": {
      "title": "TaskChangeHistory",
      "type": "object"
    },
    "ApprovalResponseComment": {
      "title": "ApprovalResponseComment",
      "type": "object",
      "properties": {
        "comment": {
          "type": "string",
          "description": "The comment of approving or rejecting an approval request."
        }
      }
    },
    "ApprovalReassignCommand": {
      "title": "ApprovalReassignCommand",
      "type": "object",
      "properties": {
        "reassignments": {
          "type": "array",
          "description": "The request body of reassigning an approval request.",
          "items": {
            "$ref": "#/definitions/ApprovalReassignment"
          }
        }
      }
    },
    "ApprovalReassignment": {
      "title": "ApprovalReassignment",
      "type": "object",
      "properties": {
        "reassignFrom": {
          "type": "string",
          "description": "Reassign approval request from AAD user or AAD group."
        },
        "reassignTo": {
          "type": "string",
          "description": "Reassign approval request to AAD user or AAD group."
        }
      },
      "required": [
        "reassignFrom",
        "reassignTo"
      ]
    },
    "TaskUpdateCommand": {
      "title": "TaskUpdateCommand",
      "type": "object",
      "properties": {
        "newStatus": {
          "type": "string",
          "description": "The new status will be used to update the task."
        },
        "comment": {
          "type": "string",
          "description": "The comment when update a task."
        }
      },
      "required": [
        "newStatus"
      ]
    },
    "DSARTaskClaimCommand": {
      "title": "DSARTaskClaimCommand",
      "type": "object",
      "properties": {
        "claimedBy": {
          "type": "string",
          "description": "The user(GUID) claimed this DSAR task request."
        },
        "comment": {
          "type": "string",
          "description": "The comment when claiming a DSAR task."
        }
      }
    },
    "DSARTaskReleaseCommand": {
      "title": "DSARTaskReleaseCommand",
      "type": "object",
      "properties": {
        "comment": {
          "type": "string",
          "description": "The comment when releasing a DSAR task."
        }
      }
    },
    "WorkflowRunList": {
      "title": "WorkflowRunList",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowRunMetadata"
          },
          "description": "The value of workflow run list."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkflowRunMetadata": {
      "description": "The workflow run properties.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The workflow run id (GUID)."
        },
        "workflowDefinitionId": {
          "type": "string",
          "description": "The workflow definition id (GUID)."
        },
        "startTime": {
          "type": "string",
          "description": "Workflow run start time.",
          "format": "date-time"
        },
        "requestor": {
          "type": "string",
          "description": "The person(GUID) who triggered the workflow run."
        },
        "runPayload": {
          "$ref": "#/definitions/UserRequestsPayload"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "endTime": {
          "type": "string",
          "description": "The time of workflow run completed."
        },
        "cancelTime": {
          "type": "string",
          "description": "The time of workflow run be canceled."
        },
        "cancelComment": {
          "type": "string",
          "description": "The comment when cancel a workflow run."
        },
        "canceledBy": {
          "type": "string",
          "description": "The person(GUID) who canceled the workflow run."
        }
      },
      "required": [
        "id",
        "workflowDefinitionId",
        "startTime",
        "requestor",
        "runPayload",
        "status"
      ]
    },
    "WorkflowRun": {
      "description": "The workflow run properties.",
      "allOf": [
        {
          "$ref": "#/definitions/WorkflowRunMetadata"
        },
        {
          "type": "object",
          "description": "The action DAG(Directed Acyclic Graph).",
          "properties": {
            "actionDAG": {
              "type": "object",
              "description": "Define action DAG."
            },
            "detail": {
              "$ref": "#/definitions/WorkflowRunDetail"
            }
          },
          "required": [
            "actionDAG",
            "detail"
          ]
        }
      ]
    },
    "WorkflowRunDetail": {
      "title": "WorkflowRunDetail",
      "type": "object",
      "properties": {
        "runContext": {
          "type": "object"
        },
        "actions": {
          "type": "object"
        }
      },
      "required": [
        "runContext",
        "actions"
      ]
    },
    "Status": {
      "type": "string",
      "description": "User request status.",
      "enum": [
        "InProgress",
        "Failed",
        "Completed",
        "Canceling",
        "CancelationFailed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "status",
        "modelAsString": true
      }
    },
    "EventType": {
      "type": "string",
      "description": "The request type of a user request.",
      "enum": [
        "CreateTerm",
        "UpdateTerm",
        "DeleteTerm",
        "ImportTerms",
        "UpdateAssetAttributes",
        "GrantDataAccess",
        "DSARDelete",
        "DSARExport"
      ],
      "x-ms-enum": {
        "name": "event",
        "modelAsString": true
      }
    },
    "UserRequestsPayload": {
      "title": "UserRequestsPayload",
      "discriminator": "event",
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "The request id(GUID)."
        },
        "event": {
          "$ref": "#/definitions/EventType"
        }
      },
      "required": [
        "requestId",
        "event"
      ]
    },
    "WorkItemPayload": {
      "title": "WorkItemPayload",
      "discriminator": "event",
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/EventType"
        },
        "targetValue": {
          "type": "string"
        }
      },
      "required": [
        "event"
      ]
    },
    "CreateTermRequest": {
      "x-ms-discriminator-value": "CreateTerm",
      "allOf": [
        {
          "$ref": "#/definitions/UserRequestsPayload"
        }
      ],
      "type": "object",
      "properties": {
        "payload": {
          "type": "object"
        }
      }
    },
    "DeleteTermRequest": {
      "x-ms-discriminator-value": "DeleteTerm",
      "allOf": [
        {
          "$ref": "#/definitions/UserRequestsPayload"
        }
      ],
      "type": "object",
      "properties": {
        "payload": {
          "type": "object"
        }
      }
    },
    "GrantDataAccessRequest": {
      "x-ms-discriminator-value": "GrantDataAccess",
      "allOf": [
        {
          "$ref": "#/definitions/UserRequestsPayload"
        }
      ],
      "type": "object",
      "properties": {
        "payload": {
          "type": "object"
        }
      }
    },
    "ImportTermsRequest": {
      "x-ms-discriminator-value": "ImportTerms",
      "allOf": [
        {
          "$ref": "#/definitions/UserRequestsPayload"
        }
      ],
      "type": "object",
      "properties": {
        "payload": {
          "type": "object"
        }
      }
    },
    "UpdateTermRequest": {
      "x-ms-discriminator-value": "UpdateTerm",
      "allOf": [
        {
          "$ref": "#/definitions/UserRequestsPayload"
        }
      ],
      "type": "object",
      "properties": {
        "payload": {
          "type": "object"
        }
      }
    },
    "UpdateAssetAttributesRequest": {
      "x-ms-discriminator-value": "UpdateAssetAttributes",
      "allOf": [
        {
          "$ref": "#/definitions/UserRequestsPayload"
        }
      ],
      "type": "object",
      "properties": {
        "payload": {
          "type": "object"
        }
      }
    },
    "DSARDeleteRequest": {
      "x-ms-discriminator-value": "DSARDelete",
      "allOf": [
        {
          "$ref": "#/definitions/UserRequestsPayload"
        }
      ],
      "type": "object",
      "properties": {
        "payload": {
          "type": "object"
        }
      }
    },
    "DSARExportRequest": {
      "x-ms-discriminator-value": "DSARExport",
      "allOf": [
        {
          "$ref": "#/definitions/UserRequestsPayload"
        }
      ],
      "type": "object",
      "properties": {
        "payload": {
          "type": "object"
        }
      }
    },
    "UserRequestsResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/UserRequestsPayload"
        }
      ],
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/Status"
        },
        "workflowRunIds": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The workflow run id(GUID)."
          }
        }
      }
    },
    "UserRequestsResponseList": {
      "title": "UserRequestsResponseList",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserRequestsResponse"
          },
          "description": "The value of user requests list."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkflowRunCancelReply": {
      "title": "WorkflowRunCancelReply",
      "type": "object",
      "properties": {
        "comment": {
          "type": "string",
          "description": "The comment of canceling a workflow run."
        }
      }
    },
    "UserRequestsCancelReply": {
      "title": "UserRequestsCancelReply",
      "type": "object",
      "properties": {
        "comment": {
          "type": "string",
          "description": "The comment of canceling a user request."
        }
      }
    },
    "WorkflowMetadataList": {
      "title": "WorkflowMetadataList",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowMetadata"
          },
          "description": "The value of workflow definition list."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkflowMetadata": {
      "title": "WorkflowMetadata",
      "description": "The workflow metadata, action DAGs are not included.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The GUID of workflow."
        },
        "bindings": {
          "$ref": "#/definitions/Bindings"
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "description": "The created time of a workflow definition."
        },
        "createdBy": {
          "type": "string",
          "description": "The person who created the workflow definition."
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last update time of a workflow definition."
        },
        "updatedBy": {
          "type": "string",
          "description": "The person who updated the workflow definition."
        },
        "name": {
          "type": "string",
          "description": "The workflow name of workflow definition."
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether the workflow definition enabled or not."
        },
        "description": {
          "type": "string",
          "description": "Description of a workflow definition."
        }
      },
      "required": [
        "id",
        "createdTime",
        "createdBy",
        "lastUpdateTime",
        "updatedBy",
        "name",
        "isEnabled",
        "description"
      ]
    },
    "Workflow": {
      "description": "The workflow properties.",
      "allOf": [
        {
          "$ref": "#/definitions/WorkflowMetadata"
        },
        {
          "type": "object",
          "description": "The action DAG(Directed Acyclic Graph).",
          "properties": {
            "actionDAG": {
              "type": "object",
              "description": "Define action DAG."
            }
          },
          "required": [
            "actionDAG"
          ]
        }
      ]
    },
    "WorkflowCreateOrUpdateCommand": {
      "title": "WorkflowCreateOrUpdateCommand",
      "type": "object",
      "description": "Create or update workflow payload.",
      "properties": {
        "bindings": {
          "$ref": "#/definitions/Bindings"
        },
        "name": {
          "type": "string",
          "description": "The workflow name of workflow definition."
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether the workflow definition enabled or not."
        },
        "actionDAG": {
          "type": "object",
          "description": "The workflow definition detail."
        },
        "description": {
          "type": "string",
          "description": "Description of a workflow definition."
        }
      },
      "required": [
        "bindings",
        "name",
        "isEnabled",
        "description"
      ]
    },
    "Bindings": {
      "type": "array",
      "description": "The binding entities object list.",
      "items": {
        "$ref": "#/definitions/BindingItem"
      }
    },
    "BindingItem": {
      "title": "BindingItem",
      "type": "object",
      "properties": {
        "matchingCriterion": {
          "type": "object"
        },
        "startEvent": {
          "$ref": "#/definitions/EventType"
        }
      },
      "required": [
        "matchingCriterion",
        "startEvent"
      ]
    },
    "ErrorResponse": {
      "description": "Default error response model",
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorModel"
        }
      }
    },
    "ErrorModel": {
      "description": "Default error model",
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "details": {
          "description": "Gets or sets the details.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorModel"
          },
          "x-ms-identifiers": [
            "code"
          ]
        },
        "message": {
          "description": "Gets or sets the messages.",
          "type": "string"
        },
        "target": {
          "description": "Gets or sets the target.",
          "type": "string"
        }
      },
      "required": [
        "code",
        "message"
      ]
    }
  },
  "parameters": {
    "api-version": {
      "name": "api-version",
      "description": "Version of Purview APIs",
      "in": "query",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "x-ms-client-request-id": {
      "name": "x-ms-client-request-id",
      "in": "header",
      "required": true,
      "type": "string",
      "description": "Client Request Id",
      "x-ms-parameter-location": "client"
    },
    "endpoint": {
      "name": "endpoint",
      "description": "The account endpoint of your Purview account. Example: https://{accountName}.purview.azure.com/",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "in": "path",
      "format": "url",
      "x-ms-skip-url-encoding": true
    },
    "window": {
      "name": "window",
      "in": "query",
      "required": false,
      "type": "string",
      "enum": [
        "1d",
        "7d",
        "30d",
        "90d"
      ],
      "x-ms-enum": {
        "name": "window",
        "modelAsString": true
      },
      "description": "Time window of filtering items.",
      "x-ms-parameter-location": "method"
    },
    "limit": {
      "name": "limit",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "The page size to get the items at one time.",
      "x-ms-parameter-location": "method"
    },
    "continuationToken": {
      "name": "continuationToken",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "The continuation token used for getting the next page of items.",
      "x-ms-parameter-location": "method"
    },
    "sortKey": {
      "name": "sortKey",
      "in": "query",
      "required": false,
      "type": "string",
      "enum": [
        "submittedTime",
        "requestor"
      ],
      "x-ms-enum": {
        "name": "sortKey",
        "modelAsString": true
      },
      "description": "The key used for sorting the items.",
      "x-ms-parameter-location": "method"
    },
    "isDescending": {
      "name": "isDescending",
      "in": "query",
      "required": false,
      "type": "boolean",
      "description": "List items in an ascending order or a descending order by submitted time.",
      "x-ms-parameter-location": "method"
    },
    "withDetails": {
      "name": "withDetails",
      "in": "query",
      "required": false,
      "type": "boolean",
      "description": "Return workflow run details with corresponding workflow definition when it is true.",
      "x-ms-parameter-location": "method"
    },
    "type": {
      "name": "type",
      "in": "query",
      "required": false,
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "approval",
          "task"
        ],
        "x-ms-enum": {
          "name": "type",
          "modelAsString": true
        }
      },
      "description": "Filter items by workflow request type.",
      "x-ms-parameter-location": "method"
    },
    "keyword": {
      "name": "keyword",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Filter items by keyword in workflow name.",
      "x-ms-parameter-location": "method"
    },
    "workflowId": {
      "name": "workflowId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The workflow id (GUID).",
      "x-ms-parameter-location": "method"
    },
    "requestId": {
      "name": "requestId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The request id (GUID).",
      "x-ms-parameter-location": "method"
    },
    "workflowIdList": {
      "name": "workflowIdList",
      "in": "query",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Filter items by workflow id list.",
      "x-ms-parameter-location": "method"
    },
    "workitemId": {
      "name": "workitemId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The work item id (GUID).",
      "x-ms-parameter-location": "method"
    },
    "workflowRunId": {
      "name": "workflowRunId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The workflow run id (GUID).",
      "x-ms-parameter-location": "method"
    },
    "taskRequestId": {
      "name": "taskRequestId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The task request id (GUID)",
      "x-ms-parameter-location": "method"
    },
    "approvalRequestId": {
      "name": "approvalRequestId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The approval request id (GUID)",
      "x-ms-parameter-location": "method"
    },
    "workflowRunStatus": {
      "name": "status",
      "in": "query",
      "required": false,
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "InProgress",
          "Failed",
          "Completed",
          "NotStarted",
          "Canceling",
          "CancellationFailed",
          "Canceled"
        ],
        "x-ms-enum": {
          "name": "status",
          "modelAsString": true
        }
      },
      "description": "Filter workflow runs by workflow run status.",
      "x-ms-parameter-location": "method"
    }
  }
}
