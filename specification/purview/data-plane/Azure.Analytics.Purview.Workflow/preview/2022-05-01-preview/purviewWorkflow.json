{
  "swagger": "2.0",
  "info": {
    "title": "Purview Workflow Service REST API Document",
    "version": "2022-05-01-preview",
    "description": "This spec defines REST API of Purview Workflow Service, which could used for creating Purview workflow client."
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{Endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/Endpoint"
      }
    ]
  },
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow."
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "paths": {
    "/workflow/mine/approvals/{approvalRequestId}": {
      "get": {
        "description": "Get approval request by ApprovalRequestId",
        "summary": "getWorkflowMineApprovalsApprovalrequestid",
        "operationId": "getWorkflowMineApprovalsApprovalrequestid",
        "x-ms-examples": {
          "ApprovalRequest_Get": {
            "$ref": "./examples/ApprovalRequest_Get.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-ms-client-request-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Client Request Id"
          },
          {
            "name": "approvalRequestId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ApprovalWebDto"
            },
            "headers": {}
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "Approve or reject an approval request",
        "summary": "postWorkflowMineApprovalsApprovalrequestid",
        "operationId": "postWorkflowMineApprovalsApprovalrequestid",
        "x-ms-examples": {
          "ApprovalRequest_ApproveOrReject": {
            "$ref": "./examples/ApprovalRequest_ApproveOrReject.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-ms-client-request-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Client Request Id"
          },
          {
            "name": "approvalRequestId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "approvalResponse",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ApprovalResponseDto"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/definitions/{workflowDefinitionId}": {
      "get": {
        "description": "",
        "summary": "getWorkflowDefinitionsWorkflowdefinitionid",
        "operationId": "getWorkflowDefinitionsWorkflowdefinitionid",
        "x-ms-examples": {
          "WorkflowDefinition_Get": {
            "$ref": "./examples/WorkflowDefinition_Get.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-ms-client-request-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Client Request Id"
          },
          {
            "name": "workflowDefinitionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WorkflowDefinitionWebDto"
            },
            "headers": {}
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "",
        "summary": "putWorkflowDefinitionsWorkflowdefinitionid",
        "operationId": "putWorkflowDefinitionsWorkflowdefinitionid",
        "x-ms-examples": {
          "WorkflowDefinition_CreateOrUpdate": {
            "$ref": "./examples/WorkflowDefinition_CreateOrUpdate.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-ms-client-request-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Client Request Id"
          },
          {
            "name": "workflowDefinitionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "workflowDefinitionCreateOrUpdateCommand",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/WorkflowDefinitionCreateOrUpdateCommandDto"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WorkflowDefinitionWebDto"
            },
            "headers": {}
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteWorkflowDefinitionsWorkflowdefinitionid",
        "operationId": "deleteWorkflowDefinitionsWorkflowdefinitionid",
        "x-ms-examples": {
          "WorkflowDefinition_Delete": {
            "$ref": "./examples/WorkflowDefinition_Delete.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-ms-client-request-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Client Request Id"
          },
          {
            "name": "workflowDefinitionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "headers": {}
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/definitions": {
      "get": {
        "description": "",
        "summary": "getWorkflowDefinitions",
        "operationId": "getWorkflowDefinitions",
        "x-ms-examples": {
          "WorkflowDefinitions_List": {
            "$ref": "./examples/WorkflowDefinitions_List.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-ms-client-request-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Client Request Id"
          },
          {
            "name": "workflowType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListResultWebDto_WorkflowDefinitionMetadataWebDto"
            },
            "headers": {}
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/definitions": {
      "get": {
        "description": "",
        "summary": "getWorkflowMineDefinitions",
        "operationId": "getWorkflowMineDefinitions",
        "x-ms-examples": {
          "WorkflowMineDefinitions_List": {
            "$ref": "./examples/WorkflowMineDefinitions_List.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-ms-client-request-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Client Request Id"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListResultWebDto_WorkflowDefinitionNameWebDto"
            },
            "headers": {}
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/runs/query-definition": {
      "post": {
        "description": "",
        "summary": "postWorkflowMineRunsQuery-definition",
        "operationId": "postWorkflowMineRunsQuery-definition",
        "x-ms-examples": {
          "WorkflowDefinition_Query": {
            "$ref": "./examples/WorkflowDefinitions_Query.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-ms-client-request-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Client Request Id"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "triggerQuery",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "example": {
                "requestType": "CreateTermRequest",
                "parentTermId": "b82eee0b-c5da-40e1-a4bc-72ec38d0cd09"
              }
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CanTriggerRunResponseDto"
            },
            "headers": {}
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/runs": {
      "post": {
        "description": "",
        "summary": "postWorkflowMineRuns",
        "operationId": "postWorkflowMineRuns",
        "x-ms-examples": {
          "WorkflowRun_Create": {
            "$ref": "./examples/WorkflowRun_Create.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-ms-client-request-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Client Request Id"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "requestEventPayloadWebRequest",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {}
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string",
              "default": "",
              "format": "uuid"
            },
            "headers": {}
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/runs/{workflowRunId}/cancel": {
      "post": {
        "description": "",
        "summary": "postWorkflowMineRunsWorkflowRunIdCancel",
        "operationId": "postWorkflowMineRunsWorkflowRunIdCancel",
        "x-ms-examples": {
          "WorkflowRun_Cancel": {
            "$ref": "./examples/WorkflowRun_Cancel.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-ms-client-request-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Client Request Id"
          },
          {
            "name": "workflowRunId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "runCancelReply",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RunCancelReplyWebDto"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/definitions/{workflowDefinitionId}/runs": {
      "get": {
        "description": "",
        "summary": "getWorkflowDefinitionsWorkflowdefinitionidRuns",
        "operationId": "getWorkflowDefinitionsWorkflowdefinitionidRuns",
        "x-ms-examples": {
          "WorkflowDefinitionWorkflowRun_List": {
            "$ref": "./examples/WorkflowDefinitionWorkflowRun_List.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-ms-client-request-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Client Request Id"
          },
          {
            "name": "workflowDefinitionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "window",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "continuationToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "sortKey",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "isDescending",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": ""
          },
          {
            "name": "status[]",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListResultWebDto_WorkflowRunMetadataWebDto"
            },
            "headers": {}
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/runs/history": {
      "get": {
        "description": "",
        "summary": "getWorkflowMineRunsHistory",
        "operationId": "getWorkflowMineRunsHistory",
        "x-ms-examples": {
          "WorkflowRunHistory_List": {
            "$ref": "./examples/WorkflowRunHistory_List.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-ms-client-request-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Client Request Id"
          },
          {
            "name": "window",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "continuationToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "sortKey",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "isDescending",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": ""
          },
          {
            "name": "status[]",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "workflowDefinitionId[]",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListResultWebDto_WorkflowRunMetadataWebDto"
            },
            "headers": {}
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/runs/{workflowRunId}/detail": {
      "get": {
        "description": "",
        "summary": "getWorkflowMineRunsWorkflowRunIdDetail",
        "operationId": "getWorkflowMineRunsWorkflowRunIdDetail",
        "x-ms-examples": {
          "WorkflowRunDetail_Get": {
            "$ref": "./examples/WorkflowRunDetail_Get.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-ms-client-request-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Client Request Id"
          },
          {
            "name": "workflowRunId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RunDetailWebDto"
            },
            "headers": {}
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/templates/glossary-terms/{template-name}": {
      "get": {
        "description": "",
        "summary": "getWorkflowTemplatesGlossary-termsTemplate-name",
        "operationId": "getWorkflowTemplatesGlossary-termsTemplate-name",
        "x-ms-examples": {
          "WorkflowTemplatesOfGlossaryTerms_Get": {
            "$ref": "./examples/WorkflowTemplatesOfGlossaryTerms_Get.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-ms-client-request-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Client Request Id"
          },
          {
            "name": "template-name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WorkflowTemplatesOfGlossaryTerms"
            },
            "headers": {}
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/requests/sent": {
      "get": {
        "description": "List current user's sent pending requests",
        "summary": "getWorkflowMineRequestsSent",
        "operationId": "getWorkflowMineRequestsSent",
        "x-ms-examples": {
          "ApprovalRequest_List_Get": {
            "$ref": "./examples/ApprovalRequest_List.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-ms-client-request-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Client Request Id"
          },
          {
            "name": "window",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "continuationToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "sortKey",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "isDescending",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": ""
          },
          {
            "name": "type[]",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "workflowId[]",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListResultWebDto_ApprovalWebDto"
            },
            "headers": {}
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/requests/received": {
      "get": {
        "description": "List current user's pending received requests",
        "summary": "getWorkflowMineRequestsReceived",
        "operationId": "getWorkflowMineRequestsReceived",
        "x-ms-examples": {
          "ApprovalRequest_List": {
            "$ref": "./examples/ApprovalRequest_List.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-ms-client-request-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Client Request Id"
          },
          {
            "name": "window",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "continuationToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "sortKey",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "isDescending",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": ""
          },
          {
            "name": "type[]",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "workflowId[]",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListResultWebDto_ApprovalWebDto"
            },
            "headers": {}
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/requests/history": {
      "get": {
        "description": "List current user's completed requests(both received and sent)",
        "summary": "getWorkflowMineRequestsHistory",
        "operationId": "getWorkflowMineRequestsHistory",
        "x-ms-examples": {
          "ApprovalRequest_List_Get": {
            "$ref": "./examples/ApprovalRequest_List.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-ms-client-request-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Client Request Id"
          },
          {
            "name": "window",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "continuationToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "sortKey",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "isDescending",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": ""
          },
          {
            "name": "type[]",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "status[]",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "workflowId[]",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListResultWebDto_ApprovalWebDto"
            },
            "headers": {}
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/tasks/{taskRequestId}": {
      "get": {
        "description": "Get a task",
        "summary": "getWorkflowMineTasksTaskRequestId",
        "operationId": "getWorkflowMineTasksTaskRequestId",
        "x-ms-examples": {
          "TaskRequest_Get": {
            "$ref": "./examples/TaskRequest_Get.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-ms-client-request-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Client Request Id"
          },
          {
            "name": "taskRequestId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TaskRequestWebDto"
            },
            "headers": {}
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "Update a task",
        "summary": "postWorkflowMineTasksTaskRequestId",
        "operationId": "postWorkflowMineTasksTaskRequestId",
        "x-ms-examples": {
          "TaskRequest_Update": {
            "$ref": "./examples/TaskRequest_Update.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-ms-client-request-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Client Request Id"
          },
          {
            "name": "taskRequestId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "taskUpdateCommand",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TaskUpdateCommandDto"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "InlinedActionDetailInput": {
      "title": "InlinedActionDetailInput",
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        }
      },
      "required": [
        "content"
      ]
    },
    "InlinedActionDetailOutput": {
      "title": "InlinedActionDetailOutput",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "content": {
          "type": "object"
        }
      },
      "required": [
        "content"
      ]
    },
    "ActionDetailWebDto": {
      "title": "ActionDetailWebDto",
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "status": {},
        "output": {
          "$ref": "#/definitions/InlinedActionDetailOutput"
        },
        "input": {
          "$ref": "#/definitions/InlinedActionDetailInput"
        }
      },
      "required": [
        "startTime",
        "status"
      ]
    },
    "ApprovalDetailsWebDto": {
      "title": "ApprovalDetailsWebDto",
      "type": "object",
      "properties": {
        "approvalType": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "approvers": {
          "type": "object",
          "additionalProperties": {}
        }
      },
      "required": [
        "approvalType",
        "status",
        "approvers"
      ]
    },
    "ApprovalResponseDto": {
      "title": "ApprovalResponseDto",
      "type": "object",
      "properties": {
        "response": {
          "type": "string"
        },
        "comment": {
          "example": "Thanks for contributing!",
          "type": "string"
        }
      },
      "required": [
        "response"
      ]
    },
    "ApprovalWebDto": {
      "title": "ApprovalWebDto",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "workflowRunId": {
          "type": "string",
          "format": "uuid"
        },
        "workflowDefinitionId": {
          "type": "string",
          "format": "uuid"
        },
        "approvalId": {
          "type": "string",
          "format": "uuid"
        },
        "requestorId": {
          "example": "7790ea59-4874-4b14-b120-3ec34c64f9ed",
          "type": "string"
        },
        "submittedTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedTime": {
          "type": "string",
          "format": "date-time"
        },
        "approval": {
          "$ref": "#/definitions/ApprovalDetailsWebDto"
        },
        "requestEventPayload": {}
      },
      "required": [
        "workflowRunId",
        "workflowDefinitionId",
        "approvalId",
        "requestorId",
        "submittedTime",
        "lastUpdatedTime",
        "approval",
        "requestEventPayload"
      ]
    },
    "ApprovalWorkflow": {
      "title": "ApprovalWorkflow",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "category": {
          "example": "DataCatalog",
          "type": "string"
        },
        "action": {
          "type": "string"
        }
      },
      "required": [
        "category",
        "action"
      ]
    },
    "Approved": {
      "title": "Approved",
      "type": "object",
      "properties": {
        "approvalComment": {
          "example": "Thanks for contributing!",
          "type": "string"
        },
        "responseTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "responseTime"
      ]
    },
    "CanTriggerRunResponseDto": {
      "title": "CanTriggerRunResponseDto",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "workflowDefinitionId": {
          "type": "string",
          "format": "uuid"
        }
      },
      "required": [
        "workflowDefinitionId"
      ]
    },
    "BadRequestError": {
      "title": "BadRequestError",
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/PurviewErrorMessage"
        }
      },
      "required": [
        "requestId",
        "error"
      ]
    },
    "Canceled": {
      "title": "Canceled",
      "type": "object",
      "properties": {
        "endTime": {
          "type": "string",
          "format": "date-time"
        },
        "comment": {
          "type": "string"
        }
      },
      "required": [
        "endTime"
      ]
    },
    "Canceled1": {
      "title": "Canceled1",
      "type": "object",
      "properties": {
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "endTime"
      ]
    },
    "Canceling": {
      "title": "Canceling",
      "type": "object",
      "properties": {
        "requestTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "requestTime"
      ]
    },
    "Completed": {
      "title": "Completed",
      "type": "object",
      "properties": {
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "endTime"
      ]
    },
    "ConflictError": {
      "title": "ConflictError",
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/PurviewErrorMessage"
        }
      },
      "required": [
        "requestId",
        "error"
      ]
    },
    "CreateTermRequestWebRequestDto": {
      "title": "CreateTermRequestWebRequestDto",
      "type": "object",
      "properties": {
        "payload": {
          "type": "object"
        }
      },
      "required": [
        "payload"
      ]
    },
    "CreateTermRequestWebResponseDto": {
      "title": "CreateTermRequestWebResponseDto",
      "type": "object",
      "properties": {
        "targetValue": {
          "type": "string"
        },
        "payload": {
          "type": "object"
        }
      },
      "required": [
        "targetValue",
        "payload"
      ]
    },
    "CreateTermRequestWebResponseDto1": {
      "title": "CreateTermRequestWebResponseDto1",
      "type": "object",
      "properties": {
        "targetValue": {
          "type": "string"
        }
      },
      "required": [
        "targetValue"
      ]
    },
    "CreateTermTriggerQuery": {
      "title": "CreateTermTriggerQuery",
      "type": "object",
      "properties": {
        "parentTermId": {
          "example": "5bf9020b-6eb3-4584-969c-337c4db15b62",
          "type": "string"
        }
      }
    },
    "DeleteTermRequestWebRequestDto": {
      "title": "DeleteTermRequestWebRequestDto",
      "type": "object",
      "properties": {
        "glossaryTermId": {
          "example": "31d18ce8-9190-45a5-9a9a-640ba57b031e",
          "type": "string"
        },
        "forceDeleteChildren": {
          "type": "boolean"
        }
      },
      "required": [
        "glossaryTermId"
      ]
    },
    "DeleteTermRequestWebResponseDto": {
      "title": "DeleteTermRequestWebResponseDto",
      "type": "object",
      "properties": {
        "targetValue": {
          "type": "string"
        },
        "glossaryTermId": {
          "example": "5bb95596-3cdc-4bad-be76-f645e6bf7e43",
          "type": "string"
        }
      },
      "required": [
        "targetValue",
        "glossaryTermId"
      ]
    },
    "DeleteTermRequestWebResponseDto1": {
      "title": "DeleteTermRequestWebResponseDto1",
      "type": "object",
      "properties": {
        "targetValue": {
          "type": "string"
        }
      },
      "required": [
        "targetValue"
      ]
    },
    "DeleteTermTriggerQuery": {
      "title": "DeleteTermTriggerQuery",
      "type": "object",
      "properties": {
        "glossaryTermId": {
          "example": "5bf9020b-6eb3-4584-969c-337c4db15b62",
          "type": "string"
        }
      },
      "required": [
        "glossaryTermId"
      ]
    },
    "DetailWebDto": {
      "title": "DetailWebDto",
      "type": "object",
      "properties": {
        "trigger": {
          "$ref": "#/definitions/TriggerDetailWebDto"
        },
        "actions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ActionDetailWebDto"
          }
        }
      },
      "required": [
        "trigger",
        "actions"
      ]
    },
    "Failed": {
      "title": "Failed",
      "type": "object",
      "properties": {
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "endTime"
      ]
    },
    "ForbiddenError": {
      "title": "ForbiddenError",
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/PurviewErrorMessage"
        }
      },
      "required": [
        "requestId",
        "error"
      ]
    },
    "GrantDataAccessRequestWebResponseDto": {
      "title": "GrantDataAccessRequestWebResponseDto",
      "type": "object",
      "properties": {
        "targetValue": {
          "type": "string"
        },
        "payload": {
          "type": "object"
        }
      },
      "required": [
        "targetValue",
        "payload"
      ]
    },
    "GrantDataAccessRequestWebResponseDto1": {
      "title": "GrantDataAccessRequestWebResponseDto1",
      "type": "object",
      "properties": {
        "targetValue": {
          "type": "string"
        }
      },
      "required": [
        "targetValue"
      ]
    },
    "GrantDataAccessTriggerQuery": {
      "title": "GrantDataAccessTriggerQuery",
      "type": "object",
      "properties": {
        "dataAssetGuid": {
          "type": "string"
        }
      },
      "required": [
        "dataAssetGuid"
      ]
    },
    "GrantDataAccessWebRequestDto": {
      "title": "GrantDataAccessWebRequestDto",
      "type": "object",
      "properties": {
        "payload": {
          "type": "object"
        }
      },
      "required": [
        "payload"
      ]
    },
    "ImportTermsRequestWebRequestDto": {
      "title": "ImportTermsRequestWebRequestDto",
      "type": "object",
      "properties": {
        "fileName": {
          "type": "string"
        },
        "fileContent": {
          "description": "Base64 encoded file content used to import terms in batch.",
          "type": "string"
        }
      },
      "required": [
        "fileName",
        "fileContent"
      ]
    },
    "ImportTermsRequestWebResponseDto": {
      "title": "ImportTermsRequestWebResponseDto",
      "type": "object",
      "properties": {
        "targetValue": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "fileContent": {
          "description": "Base64 encoded file content used to import terms in batch.",
          "type": "string"
        }
      },
      "required": [
        "targetValue",
        "fileName",
        "fileContent"
      ]
    },
    "ImportTermsRequestWebResponseDto1": {
      "title": "ImportTermsRequestWebResponseDto1",
      "type": "object",
      "properties": {
        "targetValue": {
          "type": "string"
        }
      },
      "required": [
        "targetValue"
      ]
    },
    "InternalServerError": {
      "title": "InternalServerError",
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/PurviewErrorMessage"
        }
      },
      "required": [
        "requestId",
        "error"
      ]
    },
    "ListResultWebDto_ApprovalWebDto": {
      "title": "ListResultWebDto_ApprovalWebDto",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApprovalWebDto"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "ListResultWebDto_WorkflowDefinitionNameWebDto": {
      "title": "ListResultWebDto_WorkflowDefinitionNameWebDto",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowDefinitionNameWebDto"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "ListResultWebDto_WorkflowDefinitionMetadataWebDto": {
      "title": "ListResultWebDto_WorkflowDefinitionMetadataWebDto",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowDefinitionMetadataWebDto"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "ListResultWebDto_WorkflowRunMetadataWebDto": {
      "title": "ListResultWebDto_WorkflowRunMetadataWebDto",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowRunMetadataWebDto"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "NotFoundError": {
      "title": "NotFoundError",
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/PurviewErrorMessage"
        }
      },
      "required": [
        "requestId",
        "error"
      ]
    },
    "PreconditionFailedError": {
      "title": "PreconditionFailedError",
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/PurviewErrorMessage"
        }
      },
      "required": [
        "requestId",
        "error"
      ]
    },
    "PurviewErrorMessage": {
      "title": "PurviewErrorMessage",
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "details": {
          "type": "string"
        }
      },
      "required": [
        "code",
        "message",
        "target"
      ]
    },
    "Rejected": {
      "title": "Rejected",
      "type": "object",
      "properties": {
        "approvalComment": {
          "example": "Thanks for contributing!",
          "type": "string"
        },
        "responseTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "responseTime"
      ]
    },
    "RunCancelReplyWebDto": {
      "title": "RunCancelReplyWebDto",
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        }
      }
    },
    "RunDetailWebDto": {
      "title": "RunDetailWebDto",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "workflowDefinitionId": {
          "type": "string",
          "format": "uuid"
        },
        "workflowType": {
          "$ref": "#/definitions/ApprovalWorkflow"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "requestor": {
          "example": "2b7ce802-bd3f-4bb2-9323-30284c529ef7",
          "type": "string"
        },
        "requestEventPayload": {},
        "status": {},
        "definition": {
          "type": "object"
        },
        "detail": {
          "$ref": "#/definitions/DetailWebDto"
        }
      },
      "required": [
        "id",
        "workflowDefinitionId",
        "workflowType",
        "startTime",
        "requestor",
        "requestEventPayload",
        "status",
        "definition",
        "detail"
      ]
    },
    "SimpleTaskDetailWebDto": {
      "title": "SimpleTaskDetailWebDto",
      "type": "object",
      "properties": {
        "taskType": {
          "type": "string"
        },
        "taskTitle": {
          "type": "string"
        },
        "taskBody": {
          "type": "string"
        },
        "assignedTo": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "$ref": "#/definitions/TaskStatus"
        },
        "changeHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskChangeHistory"
          }
        }
      },
      "required": [
        "taskTitle",
        "taskBody",
        "status"
      ]
    },
    "Skipped": {
      "title": "Skipped",
      "type": "object",
      "properties": {
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "endTime"
      ]
    },
    "Succeeded": {
      "title": "Succeeded",
      "type": "object",
      "properties": {
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "endTime"
      ]
    },
    "TaskChangeHistory": {
      "title": "TaskChangeHistory",
      "type": "object",
      "properties": {
        "updatedBy": {
          "example": "2d912e2a-5edf-4a1e-aa65-a8921e406805",
          "type": "string"
        },
        "comment": {
          "example": "Task Comment",
          "type": "string"
        },
        "updatedTime": {
          "type": "string",
          "format": "date-time"
        },
        "oldStatus": {
          "$ref": "#/definitions/TaskStatus"
        },
        "newStatus": {
          "$ref": "#/definitions/TaskStatus"
        }
      },
      "required": [
        "updatedBy",
        "updatedTime",
        "oldStatus",
        "newStatus"
      ]
    },
    "TaskRequestWebDto": {
      "title": "TaskRequestWebDto",
      "type": "object",
      "properties": {
        "workflowRunId": {
          "type": "string",
          "format": "uuid"
        },
        "workflowDefinitionId": {
          "type": "string",
          "format": "uuid"
        },
        "taskRequestId": {
          "type": "string",
          "format": "uuid"
        },
        "requestorId": {
          "example": "73427eb5-326a-401f-ade8-115a077d6e89",
          "type": "string"
        },
        "submittedTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedTime": {
          "type": "string",
          "format": "date-time"
        },
        "taskDetail": {
          "$ref": "#/definitions/SimpleTaskDetailWebDto"
        },
        "requestEventPayload": {}
      },
      "required": [
        "workflowRunId",
        "workflowDefinitionId",
        "taskRequestId",
        "requestorId",
        "submittedTime",
        "lastUpdatedTime",
        "taskDetail",
        "requestEventPayload"
      ]
    },
    "TaskStatus": {
      "title": "TaskStatus",
      "type": "object",
      "properties": {
        "value": {
          "example": "Not Started",
          "type": "string"
        },
        "statusType": {
          "example": "Start",
          "type": "string"
        }
      },
      "required": [
        "value",
        "statusType"
      ]
    },
    "TaskUpdateCommandDto": {
      "title": "TaskUpdateCommandDto",
      "type": "object",
      "properties": {
        "newStatus": {
          "example": "Not Started",
          "type": "string"
        },
        "comment": {
          "example": "Task Comment",
          "type": "string"
        }
      },
      "required": [
        "newStatus"
      ]
    },
    "TooManyRequestsError": {
      "title": "TooManyRequestsError",
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/PurviewErrorMessage"
        }
      },
      "required": [
        "requestId",
        "error"
      ]
    },
    "TriggerDetailWebDto": {
      "title": "TriggerDetailWebDto",
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "status": {}
      },
      "required": [
        "startTime",
        "status"
      ]
    },
    "UnauthorizedError": {
      "title": "UnauthorizedError",
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/PurviewErrorMessage"
        }
      },
      "required": [
        "requestId",
        "error"
      ]
    },
    "UpdateAssetAttributesRequestWebResponseDto": {
      "title": "UpdateAssetAttributesRequestWebResponseDto",
      "type": "object",
      "properties": {
        "targetValue": {
          "type": "string"
        },
        "payload": {
          "type": "object"
        }
      },
      "required": [
        "targetValue",
        "payload"
      ]
    },
    "UpdateAssetAttributesRequestWebResponseDto1": {
      "title": "UpdateAssetAttributesRequestWebResponseDto1",
      "type": "object",
      "properties": {
        "targetValue": {
          "type": "string"
        }
      },
      "required": [
        "targetValue"
      ]
    },
    "UpdateAssetAttributesTriggerQuery": {
      "title": "UpdateAssetAttributesTriggerQuery",
      "type": "object",
      "properties": {
        "guid": {
          "type": "string"
        }
      },
      "required": [
        "guid"
      ]
    },
    "UpdateAssetAttributesWebRequestDto": {
      "title": "UpdateAssetAttributesWebRequestDto",
      "type": "object",
      "properties": {
        "payload": {
          "type": "object"
        }
      },
      "required": [
        "payload"
      ]
    },
    "UpdateTermRequestWebRequestDto": {
      "title": "UpdateTermRequestWebRequestDto",
      "type": "object",
      "properties": {
        "payload": {
          "type": "object"
        }
      },
      "required": [
        "payload"
      ]
    },
    "UpdateTermRequestWebResponseDto": {
      "title": "UpdateTermRequestWebResponseDto",
      "type": "object",
      "properties": {
        "targetValue": {
          "type": "string"
        },
        "payload": {
          "type": "object"
        }
      },
      "required": [
        "targetValue",
        "payload"
      ]
    },
    "UpdateTermRequestWebResponseDto1": {
      "title": "UpdateTermRequestWebResponseDto1",
      "type": "object",
      "properties": {
        "targetValue": {
          "type": "string"
        }
      },
      "required": [
        "targetValue"
      ]
    },
    "UpdateTermTriggerQuery": {
      "title": "UpdateTermTriggerQuery",
      "type": "object",
      "properties": {
        "glossaryTermId": {
          "example": "5bf9020b-6eb3-4584-969c-337c4db15b62",
          "type": "string"
        },
        "parentTermId": {
          "example": "5bf9020b-6eb3-4584-969c-337c4db15b62",
          "type": "string"
        }
      },
      "required": [
        "glossaryTermId"
      ]
    },
    "WorkflowDefinitionCreateOrUpdateCommandDto": {
      "title": "WorkflowDefinitionCreateOrUpdateCommandDto",
      "type": "object",
      "properties": {
        "workflowType": {
          "$ref": "#/definitions/ApprovalWorkflow"
        },
        "associatedEntityIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "workflowName": {
          "example": "Create Term Approval Workflow",
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "definition": {
          "type": "object"
        },
        "description": {
          "example": "This is an approval workflow to review the submitted glossary term before it gets merged into the glossary.",
          "type": "string"
        }
      },
      "required": [
        "workflowType",
        "associatedEntityIds",
        "workflowName",
        "isEnabled",
        "description"
      ]
    },
    "WorkflowDefinitionMetadataWebDto": {
      "title": "WorkflowDefinitionMetadataWebDto",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "workflowType": {
          "$ref": "#/definitions/ApprovalWorkflow"
        },
        "associatedEntityIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdTime": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "example": "911a4581-ecff-4442-8c68-061cef147ecb",
          "type": "string"
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBy": {
          "example": "911a4581-ecff-4442-8c68-061cef147ecb",
          "type": "string"
        },
        "workflowName": {
          "example": "Create Term Approval Workflow",
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "description": {
          "example": "This is an approval workflow to review the submitted glossary term before it gets merged into the glossary.",
          "type": "string"
        }
      },
      "required": [
        "id",
        "workflowType",
        "createdTime",
        "createdBy",
        "lastUpdateTime",
        "updatedBy",
        "workflowName",
        "isEnabled",
        "description"
      ]
    },
    "WorkflowDefinitionNameWebDto": {
      "title": "WorkflowDefinitionNameWebDto",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "workflowName": {
          "example": "Create Term Approval Workflow",
          "type": "string"
        }
      },
      "required": [
        "id",
        "workflowName"
      ]
    },
    "WorkflowTemplatesOfGlossaryTerms": {
      "title": "WorkflowTemplatesOfGlossaryTerms",
      "type": "object",
      "properties": {
        "triggers": {
          "type": "object"
        },
        "actions": {
          "type": "object"
        }
      },
      "required": [
        "triggers",
        "actions"
      ]
    },
    "WorkflowDefinitionWebDto": {
      "title": "WorkflowDefinitionWebDto",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "workflowType": {
          "$ref": "#/definitions/ApprovalWorkflow"
        },
        "associatedEntityIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdTime": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "example": "f9ef0ee6-e4df-415c-84af-e8873c252af0",
          "type": "string"
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBy": {
          "example": "f9ef0ee6-e4df-415c-84af-e8873c252af0",
          "type": "string"
        },
        "workflowName": {
          "example": "Create Term Approval Workflow",
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "definition": {
          "type": "object"
        },
        "description": {
          "example": "This is an approval workflow to review the submitted glossary term before it gets merged into the glossary.",
          "type": "string"
        }
      },
      "required": [
        "id",
        "workflowType",
        "createdTime",
        "createdBy",
        "lastUpdateTime",
        "updatedBy",
        "workflowName",
        "isEnabled",
        "definition",
        "description"
      ]
    },
    "WorkflowRunMetadataWebDto": {
      "title": "WorkflowRunMetadataWebDto",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "workflowDefinitionId": {
          "type": "string",
          "format": "uuid"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "requestor": {
          "example": "b85d0732-3e80-4828-bc43-24e3c4dec306",
          "type": "string"
        },
        "requestEventPayload": {},
        "status": {}
      },
      "required": [
        "id",
        "workflowDefinitionId",
        "startTime",
        "requestor",
        "requestEventPayload",
        "status"
      ]
    },
    "ErrorResponse": {
      "description": "An error response from the service",
      "properties": {
        "status": {
          "type": "string",
          "description": "Error response status."
        },
        "requestId": {
          "type": "string",
          "description": "The request ID."
        },
        "error": {
          "type": "object",
          "description": "The error message details."
        }
      }
    }
  },
  "parameters": {
    "api-version": {
      "name": "api-version",
      "description": "Version of Purview APIs",
      "in": "query",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "Endpoint": {
      "name": "Endpoint",
      "description": "The account endpoint of your Purview account. Example: https://{accountName}.purview.azure.com/",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "in": "path",
      "x-ms-skip-url-encoding": true
    }
  },
  "tags": []
}
