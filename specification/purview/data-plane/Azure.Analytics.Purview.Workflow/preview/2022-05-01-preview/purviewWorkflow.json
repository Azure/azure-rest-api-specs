{
  "swagger": "2.0",
  "info": {
    "title": "Purview Workflow Service REST API Document",
    "version": "2022-05-01-preview",
    "description": "Workflows are automated, repeatable business processes which allow organizations to track changes, enforce policy compliance, and ensure quality data across their data landscape.Workflow service is a micro service within Microsoft Purview to validate and orchestrate CUD (create, update, delete) operations on their data entities. This spec defines REST API of Purview Workflow Service, which could used for creating Purview workflow client."
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{Endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/Endpoint"
      }
    ]
  },
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow."
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "paths": {
    "/workflow/mine/approvals/{approvalRequestId}": {
      "get": {
        "tags": [
          "Approval"
        ],
        "description": "Get approval request by ApprovalRequestId",
        "operationId": "ApprovalRequest_GetApprovalRequestByApprovalRequestId",
        "x-ms-examples": {
          "ApprovalRequest_Get": {
            "$ref": "./examples/ApprovalRequest_Get.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/approvalRequestId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Approval"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Approval"
        ],
        "description": "Approve or reject an approval request",
        "operationId": "ApprovalRequest_ApproveOrRejectApprovalRequest",
        "x-ms-examples": {
          "ApprovalRequest_ApproveOrReject": {
            "$ref": "./examples/ApprovalRequest_ApproveOrReject.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/approvalRequestId"
          },
          {
            "name": "approvalResponse",
            "in": "body",
            "required": true,
            "description": "Approval response, approve or reject an approval request.",
            "schema": {
              "$ref": "#/definitions/ApprovalResponse"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/definitions/{workflowDefinitionId}": {
      "get": {
        "tags": [
          "WorkflowDefinition"
        ],
        "description": "Get a specific workflow definition.",
        "operationId": "WorkflowDefinition_GetWorkflowDefinitionByWorkflowDefinitionId",
        "x-ms-examples": {
          "WorkflowDefinition_Get": {
            "$ref": "./examples/WorkflowDefinition_Get.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workflowDefinitionId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkflowDefinition"
        ],
        "description": "Create or update a workflow definition.",
        "operationId": "WorkflowDefinition_CreateOrUpdateWorkflowDefinition",
        "x-ms-examples": {
          "WorkflowDefinition_CreateOrUpdate": {
            "$ref": "./examples/WorkflowDefinition_CreateOrUpdate.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workflowDefinitionId"
          },
          {
            "name": "workflowDefinitionCreateOrUpdateCommand",
            "in": "body",
            "required": true,
            "description": "The workflow definition.",
            "schema": {
              "$ref": "#/definitions/WorkflowDefinitionCreateOrUpdateCommand"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkflowDefinition"
        ],
        "description": "Delete a workflow definition.",
        "operationId": "WorkflowDefinition_DeleteWorkflowDefinitionByWorkflowDefinitionId",
        "x-ms-examples": {
          "WorkflowDefinition_Delete": {
            "$ref": "./examples/WorkflowDefinition_Delete.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workflowDefinitionId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/definitions": {
      "get": {
        "tags": [
          "WorkflowDefinition"
        ],
        "description": "List all workflow definitions.",
        "operationId": "WorkflowDefinition_ListWorkflowDefinitions",
        "x-ms-examples": {
          "WorkflowDefinitions_List": {
            "$ref": "./examples/WorkflowDefinitions_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "name": "workflowType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The workflow type for filtering purpose."
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResult_WorkflowDefinitionMetadata"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/runs/query-definition": {
      "post": {
        "tags": [
          "CanTriggerRunResponse"
        ],
        "description": "Query workflow definition for specific workflow type",
        "operationId": "WorkflowRun_QueryWorkflowDefinition",
        "x-ms-examples": {
          "WorkflowDefinition_Query": {
            "$ref": "./examples/WorkflowDefinitions_Query.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "name": "triggerQuery",
            "in": "body",
            "required": true,
            "description": "The query parameters.",
            "schema": {
              "example": {
                "requestType": "CreateTermRequest",
                "parentTermId": "b82eee0b-c5da-40e1-a4bc-72ec38d0cd09"
              }
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CanTriggerRunResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/runs": {
      "post": {
        "tags": [
          "TriggerQuery"
        ],
        "description": "Trigger a workflow run for requestor",
        "operationId": "WorkflowRun_TriggerWorkflowRun",
        "x-ms-examples": {
          "WorkflowRun_Create": {
            "$ref": "./examples/WorkflowRun_Create.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "name": "requestEventPayloadWebRequest",
            "in": "body",
            "required": true,
            "description": "The request event payload to trigger workflow run.",
            "schema": {
              "$ref": "#/definitions/TriggerQuery"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "default": "",
              "format": "uuid"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/runs/{workflowRunId}/cancel": {
      "post": {
        "tags": [
          "RunCancelReply"
        ],
        "description": "Cancel a workflow run.",
        "operationId": "WorkflowRun_CancelWorkflowRun",
        "x-ms-examples": {
          "WorkflowRun_Cancel": {
            "$ref": "./examples/WorkflowRun_Cancel.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workflowRunId"
          },
          {
            "name": "runCancelReply",
            "in": "body",
            "required": true,
            "description": "Reply of canceling a workflow run.",
            "schema": {
              "$ref": "#/definitions/RunCancelReply"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/definitions/{workflowDefinitionId}/runs": {
      "get": {
        "tags": [
          "WorkflowRunMetadata"
        ],
        "description": "List workflow runs of a workflow definition",
        "operationId": "WorkflowRuns_ListWorkflowRunsByWorkflowDefinitionId",
        "x-ms-examples": {
          "WorkflowDefinitionWorkflowRun_List": {
            "$ref": "./examples/WorkflowDefinitionWorkflowRun_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workflowDefinitionId"
          },
          {
            "$ref": "#/parameters/window"
          },
          {
            "$ref": "#/parameters/continuationToken"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/sortKey"
          },
          {
            "$ref": "#/parameters/isDescending"
          },
          {
            "$ref": "#/parameters/status[]"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResult_WorkflowRunMetadata"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/runs/history": {
      "get": {
        "tags": [
          "WorkflowRunMetadata"
        ],
        "description": "List workflow runs history.",
        "operationId": "WorkflowRunsHistory_ListWorkflowRunsHistory",
        "x-ms-examples": {
          "WorkflowRunHistory_List": {
            "$ref": "./examples/WorkflowRunHistory_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/window"
          },
          {
            "$ref": "#/parameters/continuationToken"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/sortKey"
          },
          {
            "$ref": "#/parameters/isDescending"
          },
          {
            "$ref": "#/parameters/status[]"
          },
          {
            "$ref": "#/parameters/workflowDefinitionId[]"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResult_WorkflowRunMetadata"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/runs/{workflowRunId}/detail": {
      "get": {
        "tags": [
          "RunDetail"
        ],
        "description": "Get workflow run detail.",
        "operationId": "WorkflowRun_GetWorkflowRunDetail",
        "x-ms-examples": {
          "WorkflowRunDetail_Get": {
            "$ref": "./examples/WorkflowRunDetail_Get.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workflowRunId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RunDetail"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/requests/sent": {
      "get": {
        "tags": [
          "Approval"
        ],
        "description": "List current user's sent pending requests",
        "operationId": "SentApprovalRequests_ListSentApprovalRequests",
        "x-ms-examples": {
          "Sent_ApprovalRequest_List": {
            "$ref": "./examples/ApprovalRequest_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/window"
          },
          {
            "$ref": "#/parameters/continuationToken"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/sortKey"
          },
          {
            "$ref": "#/parameters/isDescending"
          },
          {
            "$ref": "#/parameters/type[]"
          },
          {
            "$ref": "#/parameters/keyword"
          },
          {
            "$ref": "#/parameters/workflowDefinitionId[]"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResult_Approval"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/requests/received": {
      "get": {
        "tags": [
          "Approval"
        ],
        "description": "List current user's pending received requests",
        "operationId": "ReceivedApprovalRequests_ListReceivedApprovalRequests",
        "x-ms-examples": {
          "Received_ApprovalRequest_List": {
            "$ref": "./examples/ApprovalRequest_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/window"
          },
          {
            "$ref": "#/parameters/continuationToken"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/sortKey"
          },
          {
            "$ref": "#/parameters/isDescending"
          },
          {
            "$ref": "#/parameters/type[]"
          },
          {
            "$ref": "#/parameters/keyword"
          },
          {
            "$ref": "#/parameters/workflowDefinitionId[]"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResult_Approval"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/requests/history": {
      "get": {
        "tags": [
          "Approval"
        ],
        "description": "List current user's completed requests(both received and sent)",
        "operationId": "ApprovalRequestsHistory_ListApprovalRequestsHistory",
        "x-ms-examples": {
          "History_ApprovalRequest_List": {
            "$ref": "./examples/ApprovalRequest_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/window"
          },
          {
            "$ref": "#/parameters/continuationToken"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/sortKey"
          },
          {
            "$ref": "#/parameters/isDescending"
          },
          {
            "$ref": "#/parameters/type[]"
          },
          {
            "$ref": "#/parameters/status[]"
          },
          {
            "$ref": "#/parameters/keyword"
          },
          {
            "$ref": "#/parameters/workflowDefinitionId[]"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResult_Approval"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workflow/mine/tasks/{taskRequestId}": {
      "get": {
        "tags": [
          "TaskRequest"
        ],
        "description": "Get a task",
        "operationId": "TaskRequest_GetTaskRequestByTaskRequestId",
        "x-ms-examples": {
          "TaskRequest_Get": {
            "$ref": "./examples/TaskRequest_Get.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/taskRequestId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TaskRequest"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "TaskRequest"
        ],
        "description": "Update a task",
        "operationId": "TaskRequest_UpdateTaskRequest",
        "x-ms-examples": {
          "TaskRequest_Update": {
            "$ref": "./examples/TaskRequest_Update.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/taskRequestId"
          },
          {
            "name": "taskUpdateCommand",
            "in": "body",
            "required": true,
            "description": "Request body of updating task.",
            "schema": {
              "$ref": "#/definitions/TaskUpdateCommand"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "InlinedActionDetailInput": {
      "title": "InlinedActionDetailInput",
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        }
      },
      "required": [
        "content"
      ]
    },
    "InlinedActionDetailOutput": {
      "title": "InlinedActionDetailOutput",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "content": {
          "type": "object"
        }
      },
      "required": [
        "content"
      ]
    },
    "ActionDetail": {
      "title": "ActionDetail",
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "status": {},
        "output": {
          "$ref": "#/definitions/InlinedActionDetailOutput"
        },
        "input": {
          "$ref": "#/definitions/InlinedActionDetailInput"
        }
      },
      "required": [
        "startTime",
        "status"
      ]
    },
    "ApprovalDetails": {
      "title": "ApprovalDetails",
      "type": "object",
      "properties": {
        "approvalType": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "approvers": {
          "type": "object",
          "additionalProperties": {}
        }
      },
      "required": [
        "approvalType",
        "status",
        "approvers"
      ]
    },
    "ApprovalResponse": {
      "title": "ApprovalResponse",
      "type": "object",
      "properties": {
        "response": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        }
      },
      "required": [
        "response"
      ]
    },
    "Approval": {
      "title": "Approval",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "workflowRunId": {
          "type": "string",
          "format": "uuid"
        },
        "workflowDefinitionId": {
          "type": "string",
          "format": "uuid"
        },
        "approvalId": {
          "type": "string",
          "format": "uuid"
        },
        "requestorId": {
          "type": "string"
        },
        "submittedTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedTime": {
          "type": "string",
          "format": "date-time"
        },
        "approval": {
          "$ref": "#/definitions/ApprovalDetails"
        },
        "requestEventPayload": {}
      },
      "required": [
        "workflowRunId",
        "workflowDefinitionId",
        "approvalId",
        "requestorId",
        "submittedTime",
        "lastUpdatedTime",
        "approval",
        "requestEventPayload"
      ]
    },
    "ApprovalWorkflow": {
      "title": "ApprovalWorkflow",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "action": {
          "type": "string"
        }
      },
      "required": [
        "category",
        "action"
      ]
    },
    "CanTriggerRunResponse": {
      "title": "CanTriggerRunResponse",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "workflowDefinitionId": {
          "type": "string",
          "format": "uuid"
        }
      },
      "required": [
        "type"
      ]
    },
    "Detail": {
      "title": "Detail",
      "type": "object",
      "properties": {
        "trigger": {
          "$ref": "#/definitions/TriggerDetail"
        },
        "actions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ActionDetail"
          }
        }
      },
      "required": [
        "trigger",
        "actions"
      ]
    },
    "ListResult_Approval": {
      "title": "ListResult_Approval",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Approval"
          },
          "x-ms-identifiers": [
            "approvalId"
          ]
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "ListResult_WorkflowDefinitionMetadata": {
      "title": "ListResult_WorkflowDefinitionMetadata",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowDefinitionMetadata"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "ListResult_WorkflowRunMetadata": {
      "title": "ListResult_WorkflowRunMetadata",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowRunMetadata"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "TriggerQuery": {
      "title": "TriggerQuery",
      "type": "object"
    },
    "RunCancelReply": {
      "title": "RunCancelReply",
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        }
      }
    },
    "RunDetail": {
      "title": "RunDetail",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "workflowDefinitionId": {
          "type": "string",
          "format": "uuid"
        },
        "workflowType": {
          "$ref": "#/definitions/ApprovalWorkflow"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "requestor": {
          "type": "string"
        },
        "requestEventPayload": {},
        "status": {},
        "definition": {
          "type": "object"
        },
        "detail": {
          "$ref": "#/definitions/Detail"
        }
      },
      "required": [
        "id",
        "workflowDefinitionId",
        "workflowType",
        "startTime",
        "requestor",
        "requestEventPayload",
        "status",
        "definition",
        "detail"
      ]
    },
    "SimpleTaskDetail": {
      "title": "SimpleTaskDetail",
      "type": "object",
      "properties": {
        "taskType": {
          "type": "string"
        },
        "taskTitle": {
          "type": "string"
        },
        "taskBody": {
          "type": "string"
        },
        "assignedTo": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "$ref": "#/definitions/TaskStatus"
        },
        "changeHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskChangeHistory"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "taskTitle",
        "taskBody",
        "status"
      ]
    },
    "TaskChangeHistory": {
      "title": "TaskChangeHistory",
      "type": "object",
      "properties": {
        "updatedBy": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "updatedTime": {
          "type": "string",
          "format": "date-time"
        },
        "oldStatus": {
          "$ref": "#/definitions/TaskStatus"
        },
        "newStatus": {
          "$ref": "#/definitions/TaskStatus"
        }
      },
      "required": [
        "updatedBy",
        "updatedTime",
        "oldStatus",
        "newStatus"
      ]
    },
    "TaskRequest": {
      "title": "TaskRequest",
      "type": "object",
      "properties": {
        "workflowRunId": {
          "type": "string",
          "format": "uuid"
        },
        "workflowDefinitionId": {
          "type": "string",
          "format": "uuid"
        },
        "taskRequestId": {
          "type": "string",
          "format": "uuid"
        },
        "requestorId": {
          "type": "string"
        },
        "submittedTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedTime": {
          "type": "string",
          "format": "date-time"
        },
        "taskDetail": {
          "$ref": "#/definitions/SimpleTaskDetail"
        },
        "requestEventPayload": {}
      },
      "required": [
        "workflowRunId",
        "workflowDefinitionId",
        "taskRequestId",
        "requestorId",
        "submittedTime",
        "lastUpdatedTime",
        "taskDetail",
        "requestEventPayload"
      ]
    },
    "TaskStatus": {
      "title": "TaskStatus",
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "statusType": {
          "type": "string"
        }
      },
      "required": [
        "value",
        "statusType"
      ]
    },
    "TaskUpdateCommand": {
      "title": "TaskUpdateCommand",
      "type": "object",
      "properties": {
        "newStatus": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        }
      },
      "required": [
        "newStatus"
      ]
    },
    "TriggerDetail": {
      "title": "TriggerDetail",
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "status": {}
      },
      "required": [
        "startTime",
        "status"
      ]
    },
    "WorkflowDefinitionCreateOrUpdateCommand": {
      "title": "WorkflowDefinitionCreateOrUpdateCommand",
      "type": "object",
      "properties": {
        "workflowType": {
          "$ref": "#/definitions/ApprovalWorkflow"
        },
        "associatedEntityIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "workflowName": {
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "definition": {
          "type": "object"
        },
        "description": {
          "type": "string"
        }
      },
      "required": [
        "workflowType",
        "associatedEntityIds",
        "workflowName",
        "isEnabled",
        "description"
      ]
    },
    "WorkflowDefinitionMetadata": {
      "title": "WorkflowDefinitionMetadata",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "workflowType": {
          "$ref": "#/definitions/ApprovalWorkflow"
        },
        "associatedEntityIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdTime": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "type": "string"
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBy": {
          "type": "string"
        },
        "workflowName": {
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "workflowType",
        "createdTime",
        "createdBy",
        "lastUpdateTime",
        "updatedBy",
        "workflowName",
        "isEnabled",
        "description"
      ]
    },
    "WorkflowDefinition": {
      "title": "WorkflowDefinition",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "workflowType": {
          "$ref": "#/definitions/ApprovalWorkflow"
        },
        "associatedEntityIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdTime": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "type": "string"
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBy": {
          "type": "string"
        },
        "workflowName": {
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "definition": {
          "type": "object"
        },
        "description": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "workflowType",
        "createdTime",
        "createdBy",
        "lastUpdateTime",
        "updatedBy",
        "workflowName",
        "isEnabled",
        "definition",
        "description"
      ]
    },
    "WorkflowRunMetadata": {
      "title": "WorkflowRunMetadata",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "workflowDefinitionId": {
          "type": "string",
          "format": "uuid"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "requestor": {
          "type": "string"
        },
        "requestEventPayload": {
          "description": "",
          "type": "object"
        },
        "status": {
          "description": "Workflow run status.",
          "type": "object"
        }
      },
      "required": [
        "id",
        "workflowDefinitionId",
        "startTime",
        "requestor",
        "requestEventPayload",
        "status"
      ]
    },
    "ErrorResponse": {
      "description": "Default error response model",
      "type": "object",
      "properties": {
        "error": {
          "description": "Gets or sets the error.",
          "allOf": [
            {
              "$ref": "#/definitions/ErrorModel"
            }
          ],
          "readOnly": true
        }
      }
    },
    "ErrorModel": {
      "description": "Default error model",
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets or sets the code.",
          "type": "string",
          "readOnly": true
        },
        "details": {
          "description": "Gets or sets the details.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorModel"
          },
          "x-ms-identifiers": [
            "code"
          ],
          "readOnly": true
        },
        "message": {
          "description": "Gets or sets the messages.",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "description": "Gets or sets the target.",
          "type": "string",
          "readOnly": true
        }
      }
    }
  },
  "parameters": {
    "api-version": {
      "name": "api-version",
      "description": "Version of Purview APIs",
      "in": "query",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "x-ms-client-request-id": {
      "name": "x-ms-client-request-id",
      "in": "header",
      "required": true,
      "type": "string",
      "description": "Client Request Id",
      "x-ms-parameter-location": "client"
    },
    "Endpoint": {
      "name": "Endpoint",
      "description": "The account endpoint of your Purview account. Example: https://{accountName}.purview.azure.com/",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "in": "path",
      "x-ms-skip-url-encoding": true
    },
    "window": {
      "name": "window",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Time window of filtering items.",
      "x-ms-parameter-location": "method"
    },
    "limit": {
      "name": "limit",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "The page size to get the items at one time.",
      "x-ms-parameter-location": "method"
    },
    "continuationToken": {
      "name": "continuationToken",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "The continuation token used for getting the next page of items.",
      "x-ms-parameter-location": "method"
    },
    "sortKey": {
      "name": "sortKey",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "The key used for sorting the items.",
      "x-ms-parameter-location": "method"
    },
    "isDescending": {
      "name": "isDescending",
      "in": "query",
      "required": false,
      "type": "boolean",
      "description": "List items in an ascending order or a descending order by submitted time.",
      "x-ms-parameter-location": "method"
    },
    "type[]": {
      "name": "type[]",
      "in": "query",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Filter items by workflow request type.",
      "x-ms-parameter-location": "method"
    },
    "keyword": {
      "name": "keyword",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Filter items by keyword in workflow name.",
      "x-ms-parameter-location": "method"
    },
    "workflowDefinitionId": {
      "name": "workflowDefinitionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The workflow definition id (GUID).",
      "x-ms-parameter-location": "method"
    },
    "workflowRunId": {
      "name": "workflowRunId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The workflow run id (GUID).",
      "x-ms-parameter-location": "method"
    },
    "taskRequestId": {
      "name": "taskRequestId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The task request id (GUID)",
      "x-ms-parameter-location": "method"
    },
    "approvalRequestId": {
      "name": "approvalRequestId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The approval request id (GUID)",
      "x-ms-parameter-location": "method"
    },
    "workflowDefinitionId[]": {
      "name": "workflowDefinitionId[]",
      "in": "query",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Filter items by workflow definition id list.",
      "x-ms-parameter-location": "method"
    },
    "status[]": {
      "name": "status[]",
      "in": "query",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Filter workflow runs by workflow run status.",
      "x-ms-parameter-location": "method"
    }
  },
  "tags": []
}
