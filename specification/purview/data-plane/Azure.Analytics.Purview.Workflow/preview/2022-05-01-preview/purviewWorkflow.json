{
  "swagger": "2.0",
  "info": {
    "title": "Purview Workflow Service REST API Document",
    "version": "2022-05-01-preview",
    "description": "Workflows are automated, repeatable business processes which allow organizations to track changes, enforce policy compliance, and ensure quality data across their data landscape.Workflow service is a micro service within Microsoft Purview to validate and orchestrate CUD (create, update, delete) operations on their data entities. This spec defines REST API of Purview Workflow Service, which could used for creating Purview workflow client."
  },
  "host": "purview.azure.com",
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/endpoint"
      }
    ]
  },
  "basePath": "/workflow",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "https://purview.azure.net/.default": "Default authorization scope."
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "https://purview.azure.net/.default"
      ]
    }
  ],
  "paths": {
    "/requests": {
      "get": {
        "tags": [
          "WorkflowRequest"
        ],
        "description": "Get all workflow requests, include user's sent/received/history requests",
        "operationId": "WorkflowRequest_List",
        "x-ms-examples": {
          "WorkflowRequest_Get": {
            "$ref": "./examples/WorkflowRequest_Get.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/workflowDefinitionIdList"
          },
          {
            "$ref": "#/parameters/window"
          },
          {
            "$ref": "#/parameters/continuationToken"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/sortKey"
          },
          {
            "$ref": "#/parameters/isDescending"
          },
          {
            "$ref": "#/parameters/type"
          },
          {
            "$ref": "#/parameters/keyword"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowRequestList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/requests/approvals/{approvalRequestId}": {
      "get": {
        "tags": [
          "WorkflowRequest"
        ],
        "description": "Get an approval request by approvalRequestId",
        "operationId": "ApprovalRequest_Get",
        "x-ms-examples": {
          "ApprovalRequest_Get": {
            "$ref": "./examples/ApprovalRequest_Get.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/approvalRequestId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApprovalRequest"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/requests/approvals/{approvalRequestId}/approve": {
      "post": {
        "tags": [
          "WorkflowRequest"
        ],
        "description": "Approve an approval request.",
        "operationId": "ApprovalRequest_Approve",
        "x-ms-examples": {
          "ApprovalRequest_Approve": {
            "$ref": "./examples/ApprovalRequest_Approve.json"
          }
        },
        "deprecated": false,
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/approvalRequestId"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "approvalResponseComment",
            "in": "body",
            "required": true,
            "description": "The request body of reassigning an approval request.",
            "schema": {
              "$ref": "#/definitions/ApprovalResponseComment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/requests/approvals/{approvalRequestId}/reject": {
      "post": {
        "tags": [
          "WorkflowRequest"
        ],
        "description": "Reject an approval request.",
        "operationId": "ApprovalRequest_Reject",
        "x-ms-examples": {
          "ApprovalRequest_Reject": {
            "$ref": "./examples/ApprovalRequest_Reject.json"
          }
        },
        "deprecated": false,
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/approvalRequestId"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "approvalResponseComment",
            "in": "body",
            "required": true,
            "description": "The request body of reassigning an approval request.",
            "schema": {
              "$ref": "#/definitions/ApprovalResponseComment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/requests/approvals/{approvalRequestId}/reassign": {
      "post": {
        "tags": [
          "WorkflowRequest"
        ],
        "description": "Reassign an approval request.",
        "operationId": "ApprovalRequest_Reassign",
        "x-ms-examples": {
          "ApprovalRequest_Reassign": {
            "$ref": "./examples/ApprovalRequest_Reassign.json"
          }
        },
        "deprecated": false,
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/approvalRequestId"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "approvalReassignCommand",
            "in": "body",
            "required": true,
            "description": "The request body of reassigning an approval request.",
            "schema": {
              "$ref": "#/definitions/ApprovalReassignCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/requests/tasks/{taskRequestId}": {
      "get": {
        "tags": [
          "WorkflowRequest"
        ],
        "description": "Get a workflow task request.",
        "operationId": "TaskRequest_Get",
        "x-ms-examples": {
          "TaskRequest_Get": {
            "$ref": "./examples/TaskRequest_Get.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/taskRequestId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TaskRequest"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/requests/tasks/{taskRequestId}/change-status": {
      "post": {
        "tags": [
          "WorkflowRequest"
        ],
        "description": "Update the status of a workflow task request.",
        "operationId": "TaskRequest_Update",
        "x-ms-examples": {
          "TaskRequest_Update": {
            "$ref": "./examples/TaskRequest_Update.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/taskRequestId"
          },
          {
            "name": "taskUpdateCommand",
            "in": "body",
            "required": true,
            "description": "Request body of updating workflow task request.",
            "schema": {
              "$ref": "#/definitions/TaskUpdateCommand"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/requests/tasks/{taskRequestId}/reassign": {
      "post": {
        "tags": [
          "WorkflowRequest"
        ],
        "description": "Reassign a task request.",
        "operationId": "TaskRequest_Reassign",
        "x-ms-examples": {
          "TaskRequest_Reassign": {
            "$ref": "./examples/TaskRequest_Reassign.json"
          }
        },
        "deprecated": false,
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/taskRequestId"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "taskReassignCommand",
            "in": "body",
            "required": true,
            "description": "The request body of reassigning a task request.",
            "schema": {
              "$ref": "#/definitions/TaskReassignCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/runs": {
      "get": {
        "tags": [
          "WorkflowRun"
        ],
        "description": "List workflow runs.",
        "operationId": "WorkflowRun_List",
        "x-ms-examples": {
          "WorkflowRunHistory_List": {
            "$ref": "./examples/WorkflowRun_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/window"
          },
          {
            "$ref": "#/parameters/continuationToken"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/sortKey"
          },
          {
            "$ref": "#/parameters/isDescending"
          },
          {
            "$ref": "#/parameters/workflowRunStatus"
          },
          {
            "$ref": "#/parameters/workflowDefinitionIdList"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowRunList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/runs/{workflowRunId}": {
      "get": {
        "tags": [
          "WorkflowRun"
        ],
        "description": "Get a workflow run.",
        "operationId": "WorkflowRun_Get",
        "x-ms-examples": {
          "WorkflowRun_Get": {
            "$ref": "./examples/WorkflowRun_Get.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workflowRunId"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/withDetails"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowRun"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/runs/{workflowRunId}/trigger": {
      "post": {
        "tags": [
          "WorkflowRun"
        ],
        "description": "Trigger a workflow run for requestor",
        "operationId": "WorkflowRun_Trigger",
        "x-ms-examples": {
          "WorkflowRun_Trigger": {
            "$ref": "./examples/WorkflowRun_Trigger.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/workflowRunId"
          },
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "name": "requestPayload",
            "in": "body",
            "required": true,
            "description": "The request event payload to trigger workflow run.",
            "schema": {
              "$ref": "#/definitions/RequestPayload"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowRun"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/runs/{workflowRunId}/cancel": {
      "post": {
        "tags": [
          "WorkflowRun"
        ],
        "description": "Cancel a workflow run.",
        "operationId": "WorkflowRun_Cancel",
        "x-ms-examples": {
          "WorkflowRun_Cancel": {
            "$ref": "./examples/WorkflowRun_Cancel.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workflowRunId"
          },
          {
            "name": "runCancelReply",
            "in": "body",
            "required": true,
            "description": "Reply of canceling a workflow run.",
            "schema": {
              "$ref": "#/definitions/WorkflowRunCancelReply"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/definitions": {
      "get": {
        "tags": [
          "WorkflowDefinition"
        ],
        "description": "List all workflow definitions.",
        "operationId": "WorkflowDefinition_List",
        "x-ms-examples": {
          "WorkflowDefinitions_List": {
            "$ref": "./examples/WorkflowDefinitions_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/scenarioType"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowDefinitionMetadataList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/definitions/{workflowDefinitionId}": {
      "get": {
        "tags": [
          "WorkflowDefinition"
        ],
        "description": "Get a specific workflow definition.",
        "operationId": "WorkflowDefinition_Get",
        "x-ms-examples": {
          "WorkflowDefinition_Get": {
            "$ref": "./examples/WorkflowDefinition_Get.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workflowDefinitionId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkflowDefinition"
        ],
        "description": "Create or update a workflow definition.",
        "operationId": "WorkflowDefinition_CreateOrUpdate",
        "x-ms-examples": {
          "WorkflowDefinition_CreateOrUpdate": {
            "$ref": "./examples/WorkflowDefinition_CreateOrUpdate.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workflowDefinitionId"
          },
          {
            "name": "workflowDefinitionCreateOrUpdateCommand",
            "in": "body",
            "required": true,
            "description": "The workflow definition.",
            "schema": {
              "$ref": "#/definitions/WorkflowDefinitionCreateOrUpdateCommand"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkflowDefinition"
        ],
        "description": "Delete a workflow definition.",
        "operationId": "WorkflowDefinition_Delete",
        "x-ms-examples": {
          "WorkflowDefinition_Delete": {
            "$ref": "./examples/WorkflowDefinition_Delete.json"
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workflowDefinitionId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/definitions/{workflowDefinitionId}/runs": {
      "get": {
        "tags": [
          "WorkflowDefinition"
        ],
        "description": "List workflow runs of a workflow definition",
        "operationId": "WorkflowDefinitionRun_List",
        "x-ms-examples": {
          "WorkflowDefinitionRun_List": {
            "$ref": "./examples/WorkflowDefinitionRun_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-ms-client-request-id"
          },
          {
            "$ref": "#/parameters/workflowDefinitionId"
          },
          {
            "$ref": "#/parameters/window"
          },
          {
            "$ref": "#/parameters/continuationToken"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/sortKey"
          },
          {
            "$ref": "#/parameters/isDescending"
          },
          {
            "$ref": "#/parameters/workflowRunStatus"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowRunList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "WorkflowRequestList": {
      "title": "WorkflowRequestList",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "description": "The value of workflow request list."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkflowRequest": {
      "title": "WorkflowRequest",
      "discriminator": "type",
      "type": "object",
      "description": "The workflow request properties.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The workflow request type, e.g. approval request or task request.",
          "enum": [
            "approval",
            "task"
          ],
          "x-ms-enum": {
            "name": "type",
            "modelAsString": true
          }
        },
        "workflowRunId": {
          "type": "string",
          "description": "The workflow run id (GUID)."
        },
        "workflowDefinitionId": {
          "type": "string",
          "description": "The workflow definition id (GUID)."
        },
        "requestorId": {
          "type": "string",
          "description": "The person(GUID) who sent this workflow request."
        },
        "submittedTime": {
          "type": "string",
          "format": "date-time",
          "description": "The submitted time of a workflow request."
        },
        "lastUpdatedTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last update time of a workflow request."
        },
        "requestPayload": {
          "$ref": "#/definitions/RequestPayload"
        }
      },
      "required": [
        "type",
        "workflowRunId",
        "workflowDefinitionId",
        "requestorId",
        "submittedTime",
        "lastUpdatedTime",
        "requestPayload"
      ]
    },
    "ApprovalRequest": {
      "x-ms-discriminator-value": "approval",
      "description": "The workflow approval request properties.",
      "allOf": [
        {
          "$ref": "#/definitions/WorkflowRequest"
        },
        {
          "type": "object",
          "properties": {
            "approvalId": {
              "type": "string",
              "description": "The approval request id(GUID)."
            },
            "approval": {
              "$ref": "#/definitions/ApprovalDetails"
            }
          },
          "required": [
            "approvalId",
            "approval"
          ]
        }
      ]
    },
    "ApprovalDetails": {
      "title": "ApprovalDetails",
      "type": "object",
      "properties": {
        "approvalType": {
          "type": "string",
          "description": "The approval type of an approval request."
        },
        "status": {
          "type": "string",
          "description": "The status of an approval request."
        },
        "approvers": {
          "type": "object",
          "description": "The list of approvers."
        }
      },
      "required": [
        "approvalType",
        "status",
        "approvers"
      ]
    },
    "TaskRequest": {
      "x-ms-discriminator-value": "task",
      "description": "The workflow task request properties.",
      "allOf": [
        {
          "$ref": "#/definitions/WorkflowRequest"
        },
        {
          "type": "object",
          "properties": {
            "taskRequestId": {
              "type": "string",
              "description": "The task request id(GUID)."
            },
            "taskDetail": {
              "$ref": "#/definitions/SimpleTaskDetail"
            }
          },
          "required": [
            "taskRequestId",
            "taskDetail"
          ]
        }
      ]
    },
    "SimpleTaskDetail": {
      "title": "SimpleTaskDetail",
      "type": "object",
      "properties": {
        "taskType": {
          "type": "string",
          "description": "Task type."
        },
        "taskTitle": {
          "type": "string",
          "description": "The task title of a task definition."
        },
        "taskBody": {
          "type": "string",
          "description": "The task definition body detail."
        },
        "assignedTo": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The person who has been assigned the task request."
        },
        "status": {
          "$ref": "#/definitions/TaskStatus"
        },
        "changeHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskChangeHistory"
          },
          "description": "The change history of a workflow task request.",
          "x-ms-identifiers": []
        }
      },
      "required": [
        "taskTitle",
        "taskBody",
        "status"
      ]
    },
    "TaskStatus": {
      "title": "TaskStatus",
      "type": "object",
      "description": "Task request status.",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "Not Started",
            "In Progress",
            "Completed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "status",
            "modelAsString": true
          }
        }
      }
    },
    "TaskChangeHistory": {
      "title": "TaskChangeHistory",
      "type": "object"
    },
    "ApprovalResponseComment": {
      "title": "ApprovalResponseComment",
      "type": "object",
      "properties": {
        "comment": {
          "type": "string",
          "description": "The comment of approving or rejecting an approval request."
        }
      }
    },
    "ApprovalReassignCommand": {
      "title": "ApprovalReassignCommand",
      "type": "object",
      "properties": {
        "reassignments": {
          "type": "array",
          "description": "The request body of reassigning an approval request.",
          "items": {
            "$ref": "#/definitions/ApprovalReassignment"
          }
        }
      }
    },
    "ApprovalReassignment": {
      "title": "ApprovalReassignment",
      "type": "object",
      "properties": {
        "reassignFrom": {
          "type": "string",
          "description": "Reassign approval request from AAD user or AAD group."
        },
        "reassignTo": {
          "type": "string",
          "description": "Reassign approval request to AAD user or AAD group."
        }
      },
      "required": [
        "reassignFrom",
        "reassignTo"
      ]
    },
    "TaskUpdateCommand": {
      "title": "TaskUpdateCommand",
      "type": "object",
      "properties": {
        "newStatus": {
          "type": "string",
          "description": "The new status will be used to update the task."
        },
        "comment": {
          "type": "string",
          "description": "The comment when update a task."
        }
      },
      "required": [
        "newStatus"
      ]
    },
    "TaskReassignCommand": {
      "title": "TaskReassignCommand",
      "type": "object",
      "properties": {
        "reassignments": {
          "type": "array",
          "description": "The request body of reassigning a task request.",
          "items": {
            "$ref": "#/definitions/TaskReassignment"
          }
        }
      }
    },
    "TaskReassignment": {
      "title": "TaskReassignment",
      "type": "object",
      "properties": {
        "reassignFrom": {
          "type": "string",
          "description": "Reassign task request from AAD user or AAD group."
        },
        "reassignTo": {
          "type": "string",
          "description": "Reassign task request to AAD user or AAD group."
        }
      },
      "required": [
        "reassignFrom",
        "reassignTo"
      ]
    },
    "WorkflowRunList": {
      "title": "WorkflowRunList",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowRun"
          },
          "description": "The value of workflow run list."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkflowRun": {
      "description": "The workflow run properties.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The workflow run id (GUID)."
        },
        "workflowDefinitionId": {
          "type": "string",
          "description": "The workflow definition id (GUID)."
        },
        "startTime": {
          "type": "string",
          "description": "Workflow run start time.",
          "format": "date-time"
        },
        "requestor": {
          "type": "string",
          "description": "The person(GUID) who triggered the workflow run."
        },
        "requestPayload": {
          "$ref": "#/definitions/RequestPayload"
        },
        "status": {
          "$ref": "#/definitions/WorkflowRunStatus"
        },
        "definition": {
          "type": "object",
          "description": "The workflow definition of this workflow run."
        },
        "detail": {
          "$ref": "#/definitions/WorkflowRunDetail"
        },
        "endTime":{
          "type":"string",
          "description": "The time of workflow run completed."
        },
        "cancelTime":{
          "type":"string",
          "description": "The time of workflow run be canceled."
        },
        "cancelComment":{
          "type":"string",
          "description": "The comment when cancel a workflow run."
        }
      },
      "required": [
        "id",
        "workflowDefinitionId",
        "startTime",
        "requestor",
        "requestPayload",
        "status"
      ]
    },
    "WorkflowRunDetail": {
      "title": "WorkflowRunDetail",
      "type": "object",
      "properties": {
        "trigger": {
          "$ref": "#/definitions/TriggerDetail"
        },
        "actions": {
          "$ref": "#/definitions/ActionDetail"
        }
      },
      "required": [
        "trigger",
        "actions"
      ]
    },
    "WorkflowRunStatus": {
      "title": "WorkflowRunStatus",
      "type": "object",
      "description": "Workflow run status.",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "InProgress",
            "Failed",
            "Completed",
            "NotStarted",
            "Canceling",
            "CancellationFailed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "status",
            "modelAsString": true
          }
        }
      }
    },
    "TriggerDetail": {
      "title": "TriggerDetail",
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of trigger in workflow run detail."
        },
        "status": {
          "type": "object",
          "description": "The status of trigger in workflow run detail."
        }
      },
      "required": [
        "startTime",
        "status"
      ]
    },
    "ActionDetail": {
      "title": "ActionDetail",
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of actions."
        },
        "status": {
          "type": "object",
          "description": "The status of actions."
        },
        "output": {
          "type": "object",
          "description": "The output content of actions."
        },
        "input": {
          "type": "object",
          "description": "The input content of actions."
        }
      },
      "required": [
        "startTime",
        "status"
      ]
    },
    "RequestPayload": {
      "title": "RequestPayload",
      "discriminator": "requestType",
      "type": "object",
      "properties": {
        "targetValue": {
          "type": "string",
          "description": "The target value which need involve workflow to operate."
        },
        "requestType": {
          "type": "string",
          "description": "The request type of a workflow run.",
          "enum": [
            "CreateTermRequest",
            "UpdateTermRequest",
            "DeleteTermRequest",
            "ImportTermsRequest",
            "UpdateAssetAttributesRequest",
            "GrantDataAccessRequest"
          ],
          "x-ms-enum": {
            "name": "requestType",
            "modelAsString": true
          }
        }
      },
      "required": [
        "requestType"
      ]
    },
    "CreateTermRequestWebRequest": {
      "x-ms-discriminator-value": "CreateTermRequest",
      "allOf": [
        {
          "$ref": "#/definitions/RequestPayload"
        }
      ],
      "type": "object",
      "properties": {
        "payload": {
          "type": "object"
        }
      }
    },
    "DeleteTermRequestWebRequest": {
      "x-ms-discriminator-value": "DeleteTermRequest",
      "allOf": [
        {
          "$ref": "#/definitions/RequestPayload"
        }
      ],
      "type": "object",
      "properties": {
        "glossaryTermId": {
          "type": "string"
        },
        "forceDeleteChildren": {
          "type": "boolean"
        }
      }
    },
    "GrantDataAccessWebRequest": {
      "x-ms-discriminator-value": "GrantDataAccessRequest",
      "allOf": [
        {
          "$ref": "#/definitions/RequestPayload"
        }
      ],
      "type": "object",
      "properties": {
        "payload": {
          "type": "object"
        }
      }
    },
    "ImportTermsRequestWebRequest": {
      "x-ms-discriminator-value": "ImportTermsRequest",
      "required": [
        "fileName",
        "fileContent"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/RequestPayload"
        }
      ],
      "type": "object",
      "properties": {
        "fileName": {
          "type": "string"
        },
        "fileContent": {
          "type": "string",
          "description": "Base64 encoded file content used to import terms in batch."
        }
      }
    },
    "UpdateTermRequestWebRequest": {
      "x-ms-discriminator-value": "UpdateTermRequest",
      "allOf": [
        {
          "$ref": "#/definitions/RequestPayload"
        }
      ],
      "type": "object",
      "properties": {
        "payload": {
          "type": "object"
        }
      }
    },
    "UpdateAssetAttributesWebRequest": {
      "x-ms-discriminator-value": "UpdateAssetAttributesRequest",
      "allOf": [
        {
          "$ref": "#/definitions/RequestPayload"
        }
      ],
      "type": "object",
      "properties": {
        "payload": {
          "type": "object"
        }
      }
    },
    "WorkflowRunCancelReply": {
      "title": "WorkflowRunCancelReply",
      "type": "object",
      "properties": {
        "comment": {
          "type": "string",
          "description": "The comment of canceling a workflow run."
        }
      }
    },
    "WorkflowDefinitionMetadataList": {
      "title": "WorkflowDefinitionMetadataList",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowDefinitionMetadata"
          },
          "description": "The value of workflow definition list."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkflowDefinitionMetadata": {
      "title": "WorkflowDefinitionMetadata",
      "description": "The workflow definition metadata, not include detailed definition.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The GUID of workflow definition."
        },
        "scenarioType": {
          "$ref": "#/definitions/scenarioTypeDetail"
        },
        "boundScopes": {
          "$ref": "#/definitions/boundScopes"
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "description": "The created time of a workflow definition."
        },
        "createdBy": {
          "type": "string",
          "description": "The person who created the workflow definition."
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last update time of a workflow definition."
        },
        "updatedBy": {
          "type": "string",
          "description": "The person who updated the workflow definition."
        },
        "workflowName": {
          "type": "string",
          "description": "The workflow name of workflow definition."
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether the workflow definition enabled or not."
        },
        "description": {
          "type": "string",
          "description": "Description of a workflow definition."
        }
      },
      "required": [
        "id",
        "scenarioType",
        "createdTime",
        "createdBy",
        "lastUpdateTime",
        "updatedBy",
        "workflowName",
        "isEnabled",
        "description"
      ]
    },
    "scenarioTypeDetail": {
      "title": "scenarioTypeDetail",
      "type": "string",
      "description": "The workflow scenario type.",
      "enum": [
        "CreateTerm",
        "UpdateTerm",
        "DeleteTerm",
        "ImportTerms",
        "GrantDataAccess",
        "UpdateAssetAttributes"
      ],
      "x-ms-enum": {
        "name": "scenarioTypeDetail",
        "modelAsString": true
      }
    },
    "WorkflowDefinition": {
      "description": "The workflow definition property.",
      "allOf": [
        {
          "$ref": "#/definitions/WorkflowDefinitionMetadata"
        },
        {
          "type": "object",
          "description": "The workflow definition.",
          "properties": {
            "definition": {
              "type": "object",
              "description": "The workflow definition properties."
            }
          },
          "required": [
            "definition"
          ]
        }
      ]
    },
    "WorkflowDefinitionCreateOrUpdateCommand": {
      "title": "WorkflowDefinitionCreateOrUpdateCommand",
      "type": "object",
      "description": "The workflow definition create or update payload.",
      "properties": {
        "scenarioType": {
          "$ref": "#/definitions/scenarioTypeDetail"
        },
        "boundScopes": {
          "$ref": "#/definitions/boundScopes"
        },
        "workflowName": {
          "type": "string",
          "description": "The workflow name of workflow definition."
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether the workflow definition enabled or not."
        },
        "definition": {
          "type": "object",
          "description": "The workflow definition detail."
        },
        "description": {
          "type": "string",
          "description": "Description of a workflow definition."
        }
      },
      "required": [
        "scenarioType",
        "boundScopes",
        "workflowName",
        "isEnabled",
        "description"
      ]
    },
    "boundScopes": {
      "type": "array",
      "description": "The associated entities object list.",
      "items": {
        "$ref": "#/definitions/GatewayReferenceObject"
      }
    },
    "GatewayReferenceObject": {
      "title": "GatewayReferenceObject",
      "discriminator": "type",
      "type":"object",
      "properties": {
        "type": {
          "type":"string",
          "description": "",
          "enum": [
            "PathReference",
            "CollectionReference"
          ],
          "x-ms-enum":{
            "name": "type",
            "modelAsString": true
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "CollectionReference": {
      "x-ms-discriminator-value": "CollectionReference",
      "required": [
        "referenceName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/GatewayReferenceObject"
        }
      ],
      "type": "object",
      "properties": {
        "referenceName": {
          "type": "string"
        }
      }
    },
    "PathReference": {
      "x-ms-discriminator-value": "PathReference",
      "required": [
        "referenceName",
        "referenceSource"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/GatewayReferenceObject"
        }
      ],
      "type": "object",
      "properties": {
        "referenceName": {
          "type": "string"
        },
        "referenceSource": {
          "type": "string"
        }
      }
    },
    "ErrorResponse": {
      "description": "Default error response model",
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorModel"
        }
      }
    },
    "ErrorModel": {
      "description": "Default error model",
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "details": {
          "description": "Gets or sets the details.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorModel"
          },
          "x-ms-identifiers": [
            "code"
          ]
        },
        "message": {
          "description": "Gets or sets the messages.",
          "type": "string"
        },
        "target": {
          "description": "Gets or sets the target.",
          "type": "string"
        }
      },
      "required": [
        "code",
        "message"
      ]
    }
  },
  "parameters": {
    "api-version": {
      "name": "api-version",
      "description": "Version of Purview APIs",
      "in": "query",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "x-ms-client-request-id": {
      "name": "x-ms-client-request-id",
      "in": "header",
      "required": true,
      "type": "string",
      "description": "Client Request Id",
      "x-ms-parameter-location": "client"
    },
    "endpoint": {
      "name": "endpoint",
      "description": "The account endpoint of your Purview account. Example: https://{accountName}.purview.azure.com/",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "in": "path",
      "format": "url",
      "x-ms-skip-url-encoding": true
    },
    "window": {
      "name": "window",
      "in": "query",
      "required": false,
      "type": "string",
      "enum": [
        "1d",
        "7d",
        "30d",
        "90d"
      ],
      "x-ms-enum": {
        "name": "window",
        "modelAsString": true
      },
      "description": "Time window of filtering items.",
      "x-ms-parameter-location": "method"
    },
    "limit": {
      "name": "limit",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "The page size to get the items at one time.",
      "x-ms-parameter-location": "method"
    },
    "continuationToken": {
      "name": "continuationToken",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "The continuation token used for getting the next page of items.",
      "x-ms-parameter-location": "method"
    },
    "sortKey": {
      "name": "sortKey",
      "in": "query",
      "required": false,
      "type": "string",
      "enum": [
        "submittedTime",
        "requestor"
      ],
      "x-ms-enum": {
        "name": "sortKey",
        "modelAsString": true
      },
      "description": "The key used for sorting the items.",
      "x-ms-parameter-location": "method"
    },
    "isDescending": {
      "name": "isDescending",
      "in": "query",
      "required": false,
      "type": "boolean",
      "description": "List items in an ascending order or a descending order by submitted time.",
      "x-ms-parameter-location": "method"
    },
    "withDetails": {
      "name": "withDetails",
      "in": "query",
      "required": false,
      "type": "boolean",
      "description": "Return workflow run details with corresponding workflow definition when it is true.",
      "x-ms-parameter-location": "method"
    },
    "type": {
      "name": "type",
      "in": "query",
      "required": false,
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "approval",
          "task"
        ],
        "x-ms-enum": {
          "name": "type",
          "modelAsString": true
        }
      },
      "description": "Filter items by workflow request type.",
      "x-ms-parameter-location": "method"
    },
    "keyword": {
      "name": "keyword",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Filter items by keyword in workflow name.",
      "x-ms-parameter-location": "method"
    },
    "workflowDefinitionId": {
      "name": "workflowDefinitionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The workflow definition id (GUID).",
      "x-ms-parameter-location": "method"
    },
    "workflowDefinitionIdList": {
      "name": "workflowDefinitionId",
      "in": "query",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Filter items by workflow definition id list.",
      "x-ms-parameter-location": "method"
    },
    "scenarioType": {
      "name": "scenarioType",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "The workflow type for filtering purpose.",
      "x-ms-parameter-location": "method",
      "enum": [
        "CreateTerm",
        "UpdateTerm",
        "DeleteTerm",
        "ImportTerms",
        "GrantDataAccess",
        "UpdateAssetAttributes"
      ],
      "x-ms-enum": {
        "name": "scenarioType",
        "modelAsString": true
      }
    },
    "workflowRunId": {
      "name": "workflowRunId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The workflow run id (GUID).",
      "x-ms-parameter-location": "method"
    },
    "taskRequestId": {
      "name": "taskRequestId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The task request id (GUID)",
      "x-ms-parameter-location": "method"
    },
    "approvalRequestId": {
      "name": "approvalRequestId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The approval request id (GUID)",
      "x-ms-parameter-location": "method"
    },
    "workflowRunStatus": {
      "name": "status",
      "in": "query",
      "required": false,
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "InProgress",
          "Failed",
          "Completed",
          "NotStarted",
          "Canceling",
          "CancellationFailed",
          "Canceled"
        ],
        "x-ms-enum": {
          "name": "status",
          "modelAsString": true
        }
      },
      "description": "Filter workflow runs by workflow run status.",
      "x-ms-parameter-location": "method"
    }
  }
}
