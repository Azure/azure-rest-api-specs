{
  "swagger": "2.0",
  "info": {
    "title": "AuthorizationManagementClient",
    "version": "2022-08-01-preview",
    "description": "Role based access control provides you a way to apply granular level policy administration down to individual resources or resource groups. These operations enable you to manage role assignments. A role assignment grants access to Azure Active Directory users."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/{scope}/providers/Microsoft.Authorization/roleManagementAlerts/{alertId}": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "operationId": "Alerts_Get",
        "description": "Get the specified alert.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The scope of the alert. The scope can be any REST resource instance. For example, use '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/' for a subscription, '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}' for a resource.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "alertId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the alert to get.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the alert.",
            "schema": {
              "$ref": "#/definitions/Alert"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetAlertById": {
            "$ref": "./examples/GetAlertById.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Alerts"
        ],
        "operationId": "Alerts_Update",
        "description": "Update an alert.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The scope of the alert.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "alertId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the alert to dismiss.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Alert"
            },
            "description": "Parameters for the alert."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent - Successfully updated the alert."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DeactivateAlert": {
            "$ref": "./examples/UpdateAlert.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Authorization/roleManagementAlerts": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "operationId": "Alerts_ListForScope",
        "description": "Gets alerts for a resource scope.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The scope of the alert.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of alerts.",
            "schema": {
              "$ref": "#/definitions/AlertListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "GetAlerts": {
            "$ref": "./examples/GetAlerts.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Authorization/roleManagementAlerts/{alertId}/refresh": {
      "post": {
        "tags": [
          "Alerts"
        ],
        "operationId": "Alerts_Refresh",
        "description": "Refresh an alert.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The scope of the alert.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "alertId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the alert to refresh.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The response indicates the alert is refreshing.",
            "headers": {
              "Location": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/AlertOperationResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "RefreshAlert": {
            "$ref": "./examples/RefreshAlert.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Authorization/roleManagementAlerts/refresh": {
      "post": {
        "tags": [
          "Alerts"
        ],
        "operationId": "Alerts_RefreshAll",
        "description": "Refresh all alerts for a resource scope.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The scope of the alert.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The response indicates the alerts are refreshing.",
            "headers": {
              "Location": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/AlertOperationResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "RefreshAllAlerts": {
            "$ref": "./examples/RefreshAllAlerts.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Authorization/roleManagementAlertConfigurations/{alertId}": {
      "get": {
        "tags": [
          "AlertConfigurations"
        ],
        "operationId": "AlertConfigurations_Get",
        "description": "Get the specified alert configuration.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The scope of the alert configuration. The scope can be any REST resource instance. For example, use '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/' for a subscription, '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}' for a resource.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "alertId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the alert configuration to get.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the alert configuration.",
            "schema": {
              "$ref": "#/definitions/AlertConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetAlertConfigurationById": {
            "$ref": "./examples/GetAlertConfigurationById.json"
          }
        }
      },
      "patch": {
        "tags": [
          "AlertConfigurations"
        ],
        "operationId": "AlertConfigurations_Update",
        "description": "Update an alert configuration.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The scope of the alert configuration.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "alertId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the alert configuration to update.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlertConfiguration"
            },
            "description": "Parameters for the alert configuration."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent - Successfully updated the alert."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "UpdateAlertConfiguration": {
            "$ref": "./examples/UpdateAlertConfiguration.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Authorization/roleManagementAlertConfigurations": {
      "get": {
        "tags": [
          "AlertConfigurations"
        ],
        "operationId": "AlertConfigurations_ListForScope",
        "description": "Gets alert configurations for a resource scope.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The scope of the alert configuration.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of alert configurations.",
            "schema": {
              "$ref": "#/definitions/AlertConfigurationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "GetAlertConfigurations": {
            "$ref": "./examples/GetAlertConfigurations.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Authorization/roleManagementAlertDefinitions/{alertDefinitionId}": {
      "get": {
        "tags": [
          "AlertDefinitions"
        ],
        "operationId": "AlertDefinitions_Get",
        "description": "Get the specified alert definition.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The scope of the alert definition. The scope can be any REST resource instance. For example, use '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/' for a subscription, '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}' for a resource.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "alertDefinitionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the alert definition to get.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the alert definition.",
            "schema": {
              "$ref": "#/definitions/AlertDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetAlertDefinitionById": {
            "$ref": "./examples/GetAlertDefinitionById.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Authorization/roleManagementAlertDefinitions": {
      "get": {
        "tags": [
          "AlertDefinitions"
        ],
        "operationId": "AlertDefinitions_ListForScope",
        "description": "Gets alert definitions for a resource scope.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The scope of the alert definition.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of alert definitions.",
            "schema": {
              "$ref": "#/definitions/AlertDefinitionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "GetAlertDefinitions": {
            "$ref": "./examples/GetAlertDefinitions.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Authorization/roleManagementAlerts/{alertId}/alertIncidents/{alertIncidentId}": {
      "get": {
        "tags": [
          "AlertIncidents"
        ],
        "operationId": "AlertIncidents_Get",
        "description": "Get the specified alert incident.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The scope of the alert incident. The scope can be any REST resource instance. For example, use '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/' for a subscription, '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}' for a resource.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "alertId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the alert.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "alertIncidentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the alert incident to get.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the alert incident.",
            "schema": {
              "$ref": "#/definitions/AlertIncident"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetAlertIncidentById": {
            "$ref": "./examples/GetAlertIncidentById.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Authorization/roleManagementAlerts/{alertId}/alertIncidents": {
      "get": {
        "tags": [
          "AlertIncidents"
        ],
        "operationId": "AlertIncidents_ListForScope",
        "description": "Gets alert incidents for a resource scope.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The scope of the alert incident.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "alertId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the alert.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of alert incidents.",
            "schema": {
              "$ref": "#/definitions/AlertIncidentListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "GetAlertIncidents": {
            "$ref": "./examples/GetAlertIncidents.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Authorization/roleManagementAlerts/{alertId}/alertIncidents/{alertIncidentId}/remediate": {
      "post": {
        "tags": [
          "AlertIncidents"
        ],
        "operationId": "AlertIncidents_Remediate",
        "description": "Remediate an alert incident.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The scope of the alert incident.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "alertId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the alert.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "alertIncidentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the alert incident to remediate.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "OK - Returns success."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "RemediateAlertIncident": {
            "$ref": "./examples/RemediateAlertIncident.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Authorization/roleManagementAlertOperations/{operationId}": {
      "get": {
        "tags": [
          "AlertOperations"
        ],
        "operationId": "AlertOperation_Get",
        "description": "Get the specified alert operation.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The scope of the alert operation.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The id of the alert operation.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the status of the operation.",
            "schema": {
              "$ref": "#/definitions/AlertOperationResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetAlertOperation": {
            "$ref": "./examples/GetAlertOperationById.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Alert": {
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "The alert ID."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The alert name."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "The alert type."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AlertProperties",
          "description": "Alert properties."
        }
      },
      "type": "object",
      "description": "The alert."
    },
    "AlertProperties": {
      "properties": {
        "scope": {
          "type": "string",
          "readOnly": true,
          "description": "The alert scope."
        },
        "isActive": {
          "type": "boolean",
          "description": "False by default; true if the alert is active."
        },
        "incidentCount": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "The number of generated incidents of the alert."
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The date time when the alert configuration was updated or new incidents were generated."
        },
        "lastScannedDateTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The date time when the alert was last scanned."
        },
        "alertDefinition": {
          "$ref": "#/definitions/AlertDefinition",
          "readOnly": true,
          "description": "The alert definition."
        },
        "alertIncidents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertIncident"
          },
          "readOnly": true,
          "description": "The alert incidents."
        },
        "alertConfiguration": {
          "$ref": "#/definitions/AlertConfiguration",
          "readOnly": true,
          "description": "The alert configuration."
        }
      },
      "type": "object",
      "description": "Alert properties."
    },
    "AlertListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Alert"
          },
          "description": "Alert list"
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "type": "object",
      "description": "Alert list operation result."
    },
    "AlertConfiguration": {
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "The alert configuration ID."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The alert configuration name."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "The alert configuration type."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AlertConfigurationProperties",
          "description": "Alert configuration properties."
        }
      },
      "type": "object",
      "description": "Alert configuration."
    },
    "AlertConfigurationProperties": {
      "properties": {
        "alertDefinitionId": {
          "type": "string",
          "readOnly": true,
          "description": "The alert definition ID."
        },
        "scope": {
          "type": "string",
          "readOnly": true,
          "description": "The alert scope."
        },
        "isEnabled": {
          "type": "boolean",
          "readOnly": false,
          "description": "True if the alert is enabled, false will disable the scanning for the specific alert."
        },
        "alertConfigurationType": {
          "type": "string",
          "readOnly": false,
          "description": "The alert configuration type."
        },
        "alertDefinition": {
          "$ref": "#/definitions/AlertDefinition",
          "readOnly": true,
          "description": "The alert definition."
        }
      },
      "required": [
        "alertConfigurationType"
      ],
      "type": "object",
      "description": "Alert configuration properties.",
      "discriminator": "alertConfigurationType"
    },
    "AzureRolesAssignedOutsidePimAlertConfigurationProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/AlertConfigurationProperties"
        }
      ],
      "x-ms-discriminator-value": "AzureRolesAssignedOutsidePimAlertConfiguration",
      "type": "object",
      "description": "The Azure roles assigned outside PIM alert configuration properties."
    },
    "DuplicateRoleCreatedAlertConfigurationProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/AlertConfigurationProperties"
        }
      ],
      "x-ms-discriminator-value": "DuplicateRoleCreatedAlertConfiguration",
      "type": "object",
      "description": "The duplicate role created alert configuration."
    },
    "TooManyOwnersAssignedToResourceAlertConfigurationProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/AlertConfigurationProperties"
        }
      ],
      "properties": {
        "thresholdNumberOfOwners": {
          "type": "integer",
          "format": "int32",
          "readOnly": false,
          "description": "The threshold number of owners."
        },
        "thresholdPercentageOfOwnersOutOfAllRoleMembers": {
          "type": "integer",
          "format": "int32",
          "readOnly": false,
          "description": "The threshold percentage of owners out of all role members."
        }
      },
      "x-ms-discriminator-value": "TooManyOwnersAssignedToResourceAlertConfiguration",
      "type": "object",
      "description": "Too many owners assigned to resource alert configuration properties."
    },
    "TooManyPermanentOwnersAssignedToResourceAlertConfigurationProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/AlertConfigurationProperties"
        }
      ],
      "properties": {
        "thresholdNumberOfPermanentOwners": {
          "type": "integer",
          "format": "int32",
          "readOnly": false,
          "description": "The threshold number of permanent owners."
        },
        "thresholdPercentageOfPermanentOwnersOutOfAllOwners": {
          "type": "integer",
          "format": "int32",
          "readOnly": false,
          "description": "The threshold percentage of permanent owners out of all owners."
        }
      },
      "x-ms-discriminator-value": "TooManyPermanentOwnersAssignedToResourceAlertConfiguration",
      "type": "object",
      "description": "Too many permanent owners assigned to resource alert configuration properties."
    },
    "AlertDefinition": {
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "The alert definition ID."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The alert definition name."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "The alert definition type."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AlertDefinitionProperties",
          "description": "Alert definition properties."
        }
      },
      "type": "object",
      "description": "Alert definition"
    },
    "AlertDefinitionProperties": {
      "properties": {
        "displayName": {
          "type": "string",
          "readOnly": true,
          "description": "The alert display name."
        },
        "scope": {
          "type": "string",
          "readOnly": true,
          "description": "The alert scope."
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "The alert description."
        },
        "severityLevel": {
          "type": "string",
          "readOnly": true,
          "description": "Severity level of the alert.",
          "enum": [
            "Low",
            "Medium",
            "High"
          ],
          "x-ms-enum": {
            "name": "SeverityLevel",
            "modelAsString": true
          }
        },
        "securityImpact": {
          "type": "string",
          "readOnly": true,
          "description": "Security impact of the alert."
        },
        "mitigationSteps": {
          "type": "string",
          "readOnly": true,
          "description": "The methods to mitigate the alert."
        },
        "howToPrevent": {
          "type": "string",
          "readOnly": true,
          "description": "The ways to prevent the alert."
        },
        "isRemediatable": {
          "type": "boolean",
          "readOnly": true,
          "description": "True if the alert can be remediated; false, otherwise."
        },
        "isConfigurable": {
          "type": "boolean",
          "readOnly": true,
          "description": "True if the alert configuration can be configured; false, otherwise."
        }
      },
      "type": "object",
      "description": "Alert definition properties."
    },
    "AlertDefinitionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertDefinition"
          },
          "description": "Alert definition list"
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "type": "object",
      "description": "Alert definition list operation result."
    },
    "AlertConfigurationListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertConfiguration"
          },
          "description": "Alert configuration list"
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "type": "object",
      "description": "Alert configuration list operation result."
    },
    "AlertIncident": {
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "The alert incident ID."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The alert incident name."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "The alert incident type."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AlertIncidentProperties",
          "description": "Alert incident properties."
        }
      },
      "type": "object",
      "description": "Alert incident"
    },
    "AlertIncidentProperties": {
      "properties": {
        "alertIncidentType": {
          "type": "string",
          "readOnly": false,
          "description": "The alert incident type."
        }
      },
      "required": [
        "alertIncidentType"
      ],
      "type": "object",
      "description": "Alert incident properties",
      "discriminator": "alertIncidentType"
    },
    "AzureRolesAssignedOutsidePimAlertIncidentProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/AlertIncidentProperties"
        }
      ],
      "properties": {
        "assigneeDisplayName": {
          "type": "string",
          "readOnly": true,
          "description": "The assignee display name."
        },
        "assigneeUserPrincipalName": {
          "type": "string",
          "readOnly": true,
          "description": "The assignee user principal name."
        },
        "assigneeId": {
          "type": "string",
          "readOnly": true,
          "description": "The assignee ID."
        },
        "roleDisplayName": {
          "type": "string",
          "readOnly": true,
          "description": "The role display name."
        },
        "roleTemplateId": {
          "type": "string",
          "readOnly": true,
          "description": "The role template ID."
        },
        "roleDefinitionId": {
          "type": "string",
          "readOnly": true,
          "description": "The role definition ID."
        },
        "assignmentActivatedDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The date the assignment was activated."
        },
        "requestorId": {
          "type": "string",
          "readOnly": true,
          "description": "The requestor ID."
        },
        "requestorDisplayName": {
          "type": "string",
          "readOnly": true,
          "description": "The requestor display name."
        },
        "requestorUserPrincipalName": {
          "type": "string",
          "readOnly": true,
          "description": "The requestor user principal name."
        }
      },
      "x-ms-discriminator-value": "AzureRolesAssignedOutsidePimAlertIncident",
      "type": "object",
      "description": "Azure roles assigned outside PIM alert incident properties."
    },
    "DuplicateRoleCreatedAlertIncidentProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/AlertIncidentProperties"
        }
      ],
      "properties": {
        "roleName": {
          "type": "string",
          "readOnly": true,
          "description": "The role name."
        },
        "duplicateRoles": {
          "type": "string",
          "readOnly": true,
          "description": "The duplicate roles."
        },
        "reason": {
          "type": "string",
          "readOnly": true,
          "description": "The reason for the incident."
        }
      },
      "x-ms-discriminator-value": "DuplicateRoleCreatedAlertIncident",
      "type": "object",
      "description": "Duplicate role created alert incident properties."
    },
    "TooManyOwnersAssignedToResourceAlertIncidentProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/AlertIncidentProperties"
        }
      ],
      "properties": {
        "assigneeName": {
          "type": "string",
          "readOnly": true,
          "description": "The assignee name."
        },
        "assigneeType": {
          "type": "string",
          "readOnly": true,
          "description": "The assignee type."
        }
      },
      "x-ms-discriminator-value": "TooManyOwnersAssignedToResourceAlertIncident",
      "type": "object",
      "description": "Too many owners assigned to resource alert incident properties."
    },
    "TooManyPermanentOwnersAssignedToResourceAlertIncidentProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/AlertIncidentProperties"
        }
      ],
      "properties": {
        "assigneeName": {
          "type": "string",
          "readOnly": true,
          "description": "The assignee name."
        },
        "assigneeType": {
          "type": "string",
          "readOnly": true,
          "description": "The assignee type."
        }
      },
      "x-ms-discriminator-value": "TooManyPermanentOwnersAssignedToResourceAlertIncident",
      "type": "object",
      "description": "Too many permanent owners assigned to resource alert incident properties."
    },
    "AlertIncidentListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertIncident"
          },
          "description": "Alert incident list"
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "type": "object",
      "description": "Alert incident list operation result."
    },
    "AlertOperationResult": {
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "The id of the alert operation."
        },
        "status": {
          "type": "string",
          "readOnly": true,
          "description": "The status of the alert operation."
        },
        "statusDetail": {
          "type": "string",
          "readOnly": true,
          "description": "The status detail of the alert operation."
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The created date of the alert operation."
        },
        "lastActionDateTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The last action date of the alert operation."
        },
        "resourceLocation": {
          "type": "string",
          "readOnly": true,
          "description": "The location of the alert associated with the operation."
        }
      },
      "type": "object",
      "description": "Alert operation result"
    },
    "CloudError": {
      "x-ms-external": true,
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody"
        }
      },
      "type": "object",
      "description": "An error response from the service."
    },
    "CloudErrorBody": {
      "x-ms-external": true,
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user interface."
        }
      },
      "type": "object",
      "description": "An error response from the service."
    }
  }
}
