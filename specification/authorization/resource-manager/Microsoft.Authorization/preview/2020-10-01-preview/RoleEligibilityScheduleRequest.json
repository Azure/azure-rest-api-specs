{
  "swagger": "2.0",
  "info": {
    "title": "AuthorizationManagementClient",
    "version": "2020-10-01-preview",
    "description": "Role based access control provides you a way to apply granular level policy administration down to individual resources or resource groups. These operations enable you to manage role assignments. A role eligibility grants access to Azure Active Directory users."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}": {
      "put": {
        "tags": [
          "RoleEligibilityScheduleRequests"
        ],
        "operationId": "RoleEligibilityScheduleRequests_Create",
        "description": "Creates a role eligibility schedule request.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The scope of the role eligibility schedule request to create. The scope can be any REST resource instance. For example, use '/subscriptions/{subscription-id}/' for a subscription, '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}' for a resource.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "roleEligibilityScheduleRequestName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the role eligibility to create. It can be any valid GUID."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoleEligibilityScheduleRequest"
            },
            "description": "Parameters for the role eligibility schedule request."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Created - Returns information about the role eligibility schedule request.",
            "schema": {
              "$ref": "#/definitions/RoleEligibilityScheduleRequest"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "PutRoleEligibilityScheduleRequest": {
            "$ref": "./examples/PutRoleEligibilityScheduleRequest.json"
          }
        }
      },
      "get": {
        "tags": [
          "RoleEligibilityScheduleRequests"
        ],
        "operationId": "RoleEligibilityScheduleRequests_Get",
        "description": "Get the specified role eligibility schedule request.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The scope of the role eligibility schedule request.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "roleEligibilityScheduleRequestName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name (guid) of the role eligibility schedule request to get."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the role eligibility schedule request.",
            "schema": {
              "$ref": "#/definitions/RoleEligibilityScheduleRequest"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetRoleEligibilityScheduleRequestByName": {
            "$ref": "./examples/GetRoleEligibilityScheduleRequestByName.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests": {
      "get": {
        "tags": [
          "RoleEligibilityScheduleRequests"
        ],
        "operationId": "RoleEligibilityScheduleRequests_ListForScope",
        "description": "Gets role eligibility schedule requests for a scope.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The scope of the role eligibility schedule requests.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation. Use $filter=atScope() to return all role eligibility schedule requests at or above the scope. Use $filter=principalId eq {id} to return all role eligibility schedule requests at, above or below the scope for the specified principal. Use $filter=asRequestor() to return all role eligibility schedule requests requested by the current user. Use $filter=asTarget() to return all role eligibility schedule requests created for the current user. Use $filter=asApprover() to return all role eligibility schedule requests where the current user is an approver."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of role eligibility schedule requests.",
            "schema": {
              "$ref": "#/definitions/RoleEligibilityScheduleRequestListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/RoleEligibilityScheduleRequestFilter",
        "x-ms-examples": {
          "GetRoleEligibilityScheduleRequestByScope": {
            "$ref": "./examples/GetRoleEligibilityScheduleRequestByScope.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}/cancel": {
      "post": {
        "tags": [
          "RoleEligibilityScheduleRequests"
        ],
        "operationId": "RoleEligibilityScheduleRequests_Cancel",
        "description": "Cancels a pending role eligibility schedule request.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The scope of the role eligibility request to cancel.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "roleEligibilityScheduleRequestName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the role eligibility request to cancel."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns success."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CancelRoleEligibilityScheduleRequestByName": {
            "$ref": "./examples/CancelRoleEligibilityScheduleRequestByName.json"
          }
        }
      }
    }
  },
  "definitions": {
    "RoleEligibilityScheduleRequestFilter": {
      "properties": {
        "principalId": {
          "type": "string",
          "description": "Returns role eligibility requests of the specific principal."
        },
        "roleDefinitionId": {
          "type": "string",
          "description": "Returns role eligibility requests of the specific role definition."
        },
        "requestorId": {
          "type": "string",
          "description": "Returns role eligibility requests created by specific principal."
        },
        "status": {
          "type": "string",
          "description": "Returns role eligibility requests of specific status."
        }
      },
      "description": "Role eligibility schedule request filter"
    },
    "RoleEligibilityScheduleRequestProperties": {
      "properties": {
        "scope": {
          "type": "string",
          "readOnly": true,
          "description": "The role eligibility schedule request scope."
        },
        "roleDefinitionId": {
          "type": "string",
          "description": "The role definition ID."
        },
        "principalId": {
          "type": "string",
          "description": "The principal ID."
        },
        "principalType": {
          "type": "string",
          "readOnly": true,
          "description": "The principal type of the assigned principal ID.",
          "enum": [
            "User",
            "Group",
            "ServicePrincipal"
          ],
          "x-ms-enum": {
            "name": "PrincipalType",
            "modelAsString": true
          }
        },
        "requestType": {
          "type": "string",
          "description": "The type of the role assignment schedule request. Eg: SelfActivate, AdminAssign etc",
          "enum": [
            "AdminAssign",
            "AdminRemove",
            "AdminUpdate",
            "AdminExtend",
            "AdminRenew",
            "SelfActivate",
            "SelfDeactivate",
            "SelfExtend",
            "SelfRenew"
          ],
          "x-ms-enum": {
            "name": "RequestType",
            "modelAsString": true
          }
        },
        "status": {
          "type": "string",
          "readOnly": true,
          "description": "The status of the role eligibility schedule request.",
          "enum": [
            "Accepted",
            "PendingEvaluation",
            "Granted",
            "Denied",
            "PendingProvisioning",
            "Provisioned",
            "PendingRevocation",
            "Revoked",
            "Canceled",
            "Failed",
            "PendingApprovalProvisioning",
            "PendingApproval",
            "FailedAsResourceIsLocked",
            "PendingAdminDecision",
            "AdminApproved",
            "AdminDenied",
            "TimedOut",
            "ProvisioningStarted",
            "Invalid",
            "PendingScheduleCreation",
            "ScheduleCreated",
            "PendingExternalProvisioning"
          ],
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": true
          }
        },
        "approvalId": {
          "type": "string",
          "readOnly": true,
          "description": "The approvalId of the role eligibility schedule request."
        },
        "scheduleInfo": {
          "properties": {
            "startDateTime": {
              "type": "string",
              "format": "date-time",
              "description": "Start DateTime of the role eligibility schedule."
            },
            "expiration": {
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of the role eligibility schedule expiration",
                  "enum": [
                    "AfterDuration",
                    "AfterDateTime",
                    "NoExpiration"
                  ],
                  "x-ms-enum": {
                    "name": "Type",
                    "modelAsString": true
                  }
                },
                "endDateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "End DateTime of the role eligibility schedule."
                },
                "duration": {
                  "type": "string",
                  "description": "Duration of the role eligibility schedule in TimeSpan."
                }
              },
              "description": "Expiration of the role eligibility schedule"
            }
          },
          "description": "Schedule info of the role eligibility schedule"
        },
        "targetRoleEligibilityScheduleId": {
          "type": "string",
          "description": "The resultant role eligibility schedule id or the role eligibility schedule id being updated"
        },
        "targetRoleEligibilityScheduleInstanceId": {
          "type": "string",
          "description": "The role eligibility schedule instance id being updated"
        },
        "justification": {
          "type": "string",
          "description": "Justification for the role eligibility"
        },
        "ticketInfo": {
          "properties": {
            "ticketNumber": {
              "type": "string",
              "description": "Ticket number for the role eligibility"
            },
            "ticketSystem": {
              "type": "string",
              "description": "Ticket system name for the role eligibility"
            }
          },
          "description": "Ticket Info of the role eligibility"
        },
        "condition": {
          "type": "string",
          "description": "The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'"
        },
        "conditionVersion": {
          "type": "string",
          "description": "Version of the condition. Currently accepted value is '2.0'"
        },
        "createdOn": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "DateTime when role eligibility schedule request was created"
        },
        "requestorId": {
          "type": "string",
          "readOnly": true,
          "description": "Id of the user who created this request"
        }
      },
      "required": [
        "roleDefinitionId",
        "principalId",
        "requestType"
      ],
      "description": "Role eligibility schedule request properties with scope."
    },
    "RoleEligibilityScheduleRequest": {
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "The role eligibility schedule request ID."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The role eligibility schedule request name."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "The role eligibility schedule request type."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RoleEligibilityScheduleRequestProperties",
          "description": "Role eligibility schedule request properties."
        }
      },
      "description": "Role Eligibility schedule request"
    },
    "RoleEligibilityScheduleRequestListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleEligibilityScheduleRequest"
          },
          "description": "Role eligibility schedule request list."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "Role eligibility schedule request list operation result."
    },
    "CloudError": {
      "x-ms-external": true,
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody"
        }
      },
      "description": "An error response from the service."
    },
    "CloudErrorBody": {
      "x-ms-external": true,
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user interface."
        }
      },
      "description": "An error response from the service."
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to use for this operation."
    }
  }
}
