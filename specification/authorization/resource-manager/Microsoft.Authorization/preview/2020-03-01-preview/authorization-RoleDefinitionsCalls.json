{
  "swagger": "2.0",
  "info": {
    "title": "AuthorizationManagementClient",
    "version": "2020-03-01-preview",
    "description": "Role based access control provides you a way to apply granular level policy administration down to individual resources or resource groups. These operations allow you to manage role definitions. A role definition describes the set of actions that can be performed on resources."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleDefinitions": {
      "get": {
        "tags": [
          "RoleDefinitions"
        ],
        "operationId": "RoleDefinitions_ListForSubscription",
        "description": "List all role definitions that apply to a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/RoleDefinitionFilterParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of role definitions.",
            "schema": {
              "$ref": "#/definitions/RoleDefinitionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-odata": "#/definitions/RoleDefinitionFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List role definitions for subscription": {
            "$ref": "./examples/RoleDefinitions_ListForSubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleDefinitions": {
      "get": {
        "tags": [
          "RoleDefinitions"
        ],
        "operationId": "RoleDefinitions_ListForResourceGroup",
        "description": "List all role definitions that apply to a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/RoleDefinitionFilterParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of role definitions.",
            "schema": {
              "$ref": "#/definitions/RoleDefinitionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-odata": "#/definitions/RoleDefinitionFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List role definitions for resource group": {
            "$ref": "./examples/RoleDefinitions_ListForResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleDefinitions": {
      "get": {
        "tags": [
          "RoleDefinitions"
        ],
        "operationId": "RoleDefinitions_ListForResource",
        "description": "List all role definitions that apply to a resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./common-types.json#/parameters/ResourceProviderNamespaceParameter"
          },
          {
            "$ref": "./common-types.json#/parameters/ResourceTypeParameter"
          },
          {
            "$ref": "./common-types.json#/parameters/ResourceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/RoleDefinitionFilterParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of role definitions.",
            "schema": {
              "$ref": "#/definitions/RoleDefinitionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-odata": "#/definitions/RoleDefinitionFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List role definitions for a resource": {
            "$ref": "./examples/RoleDefinitions_ListForResource.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionName}": {
      "get": {
        "tags": [
          "RoleDefinitions"
        ],
        "operationId": "RoleDefinitions_Get",
        "description": "Get a role definition by scope and name.",
        "parameters": [
          {
            "$ref": "./common-types.json#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/RoleDefinitionNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the role definition.",
            "schema": {
              "$ref": "#/definitions/RoleDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get role definition by scope and name": {
            "$ref": "./examples/RoleDefinitions_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "RoleDefinitions"
        ],
        "operationId": "RoleDefinitions_Create",
        "description": "Create or update a role definition by scope and name.",
        "parameters": [
          {
            "$ref": "./common-types.json#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/RoleDefinitionNameParameter"
          },
          {
            "$ref": "#/parameters/RoleDefinitionCreateParameters"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Returns the role definition.",
            "schema": {
              "$ref": "#/definitions/RoleDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create role definition for subscription": {
            "$ref": "./examples/RoleDefinitions_CreateForSubscription.json"
          },
          "Create role definition for resource group": {
            "$ref": "./examples/RoleDefinitions_CreateForResourceGroup.json"
          },
          "Create role definition for resource": {
            "$ref": "./examples/RoleDefinitions_CreateForResource.json"
          }
        }
      },
      "delete": {
        "tags": [
          "RoleDefinitions"
        ],
        "operationId": "RoleDefinitions_Delete",
        "description": "Delete a role definition by scope and name.",
        "parameters": [
          {
            "$ref": "./common-types.json#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/RoleDefinitionNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the deleted role definition.",
            "schema": {
              "$ref": "#/definitions/RoleDefinition"
            }
          },
          "204": {
            "description": "Role definition was already deleted or does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete role definition": {
            "$ref": "./examples/RoleDefinitions_Delete.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Authorization/roleDefinitions": {
      "get": {
        "tags": [
          "RoleDefinitions"
        ],
        "operationId": "RoleDefinitions_ListForScope",
        "description": "List all role definitions that apply to a scope.",
        "parameters": [
          {
            "$ref": "./common-types.json#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/RoleDefinitionFilterParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of role definitions.",
            "schema": {
              "$ref": "#/definitions/RoleDefinitionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/RoleDefinitionFilter",
        "x-ms-examples": {
          "List role definitions for scope": {
            "$ref": "./examples/RoleDefinitions_ListForScope.json"
          }
        }
      }
    },
    "/{roleDefinitionId}": {
      "get": {
        "tags": [
          "RoleDefinitions"
        ],
        "operationId": "RoleDefinitions_GetById",
        "description": "Get a role definition by ID.",
        "parameters": [
          {
            "$ref": "#/parameters/RoleDefinitionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the role definition.",
            "schema": {
              "$ref": "#/definitions/RoleDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get role definition by ID": {
            "$ref": "./examples/RoleDefinitions_GetById.json"
          }
        }
      },
      "put": {
        "tags": [
          "RoleDefinitions"
        ],
        "operationId": "RoleDefinitions_CreateById",
        "description": "Create or update a role definition by ID.",
        "parameters": [
          {
            "$ref": "#/parameters/RoleDefinitionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/RoleDefinitionCreateParameters"
          }
        ],
        "responses": {
          "201": {
            "description": "Returns the role definition.",
            "schema": {
              "$ref": "#/definitions/RoleDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update role definition by ID": {
            "$ref": "./examples/RoleDefinitions_CreateById.json"
          }
        }
      },
      "delete": {
        "tags": [
          "RoleDefinitions"
        ],
        "operationId": "RoleDefinitions_DeleteById",
        "description": "Delete a role definition by ID.",
        "parameters": [
          {
            "$ref": "#/parameters/RoleDefinitionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the deleted role definition.",
            "schema": {
              "$ref": "#/definitions/RoleDefinition"
            }
          },
          "204": {
            "description": "Role definition already deleted or does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete role definition by ID": {
            "$ref": "./examples/RoleDefinitions_DeleteById.json"
          }
        }
      }
    }
  },
  "definitions": {
    "RoleDefinitionFilter": {
      "properties": {
        "roleName": {
          "type": "string",
          "description": "Returns role definition with the specific name."
        },
        "type": {
          "type": "string",
          "description": "Returns role definition with the specific type."
        }
      },
      "description": "Role Definitions filter"
    },
    "RoleDefinitionProperties": {
      "properties": {
        "roleName": {
          "type": "string",
          "description": "The role name."
        },
        "description": {
          "type": "string",
          "description": "The role definition description."
        },
        "type": {
          "type": "string",
          "description": "The role type.",
          "x-ms-client-name": "roleType"
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "./common-types.json#/definitions/Permission"
          },
          "description": "Role definition permissions."
        },
        "assignableScopes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Role definition assignable scopes."
        }
      },
      "description": "Role definition properties."
    },
    "RoleDefinition": {
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "The role definition ID."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The role definition name."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "The role definition type."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RoleDefinitionProperties",
          "description": "Role definition properties."
        }
      },
      "description": "Role definition."
    },
    "RoleDefinitionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleDefinition"
          },
          "description": "Role definition list."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "Role definition list operation result."
    }
  },
  "parameters": {
    "RoleDefinitionFilterParameter": {
      "name": "$filter",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "The filter to apply on the operation. Use $filter=atScope() to return all deny definitions at or above the scope. Use $filter=denyDefinitionName eq '{name}' to search deny definitions by name at specified scope. Use $filter=principalId eq '{id}' to return all deny definitions at, above and below the scope for the specified principal. Use $filter=gdprExportPrincipalId eq '{id}' to return all deny definitions at, above and below the scope for the specified principal. This filter is different from the principalId filter as it returns not only those deny definitions that contain the specified principal is the Principals list but also those deny definitions that contain the specified principal is the ExcludePrincipals list. Additionally, when gdprExportPrincipalId filter is used, only the deny definition name and description properties are returned.",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "RoleDefinitionIdParameter": {
      "name": "roleDefinitionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID of the role definition to delete.",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "RoleDefinitionNameParameter": {
      "name": "roleDefinitionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the role definition to delete.",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "RoleDefinitionCreateParameters": {
      "name": "roleDefinition",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/RoleDefinition"
      },
      "description": "Parameters for the role definition.",
      "x-ms-parameter-location": "method"
    }
  }
}
