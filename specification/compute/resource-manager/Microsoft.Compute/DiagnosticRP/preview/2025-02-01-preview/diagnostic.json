{
  "swagger": "2.0",
  "info": {
    "title": "ComputeDiagnosticResourceProviderClient",
    "description": "The Compute Diagnostic Resource Provider Client",
    "version": "2025-02-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/diagnosticOperations/{operationId}": {
      "get": {
        "tags": [
          "diagnosticOperations"
        ],
        "operationId": "DiagnosticOperations_Read",
        "description": "Gets status of a Diagnostic operation issued for Disk Inspection.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/OperationIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComputeDiagnosticsOperationResult"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets the status of a scheduled disk inspection request.": {
            "$ref": "./examples/GetDiagnosticOperation.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/diagnostics/diskInspection/run": {
      "post": {
        "tags": [
          "diagnostics"
        ],
        "operationId": "DiskInspection_Create",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "description": "Creates a request for executing disk Inspection.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "runDiskInspectionInput",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RunDiskInspectionInput"
            },
            "description": "RunDiskInspection object supplied in the body of the Post run disk inspection operation."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the diagnostic run failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create a request for disk inspection.": {
            "$ref": "./examples/RunDiskInspection.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/diagnostics": {
      "get": {
        "tags": [
          "diagnostics"
        ],
        "operationId": "Diagnostics_List",
        "description": "Lists all available Compute diagnostics for a subscription in a location.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink",
          "itemName": "value"
        },
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComputeDiagnosticsList"
            }
          },
          "default": {
            "description": "Error response describing why the listing call failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets the status of a scheduled disk inspection request.": {
            "$ref": "./examples/ListDiagnostics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/diagnostics/diskInspection": {
      "get": {
        "tags": [
          "diagnostics_DiskInspection"
        ],
        "operationId": "DiskInspection_Get",
        "description": "Gets a specific Compute diagnostic for a subscription in a location.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComputeDiagnosticBase"
            }
          },
          "default": {
            "description": "Error response describing why the get call failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets the status of a scheduled disk inspection request.": {
            "$ref": "./examples/GetDiskInspection.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/diagnostics/diskInspection/registerStorageConfiguration": {
      "post": {
        "tags": [
          "registerStorageConfiguration"
        ],
        "operationId": "DiskInspectionStorageConfiguration_Register",
        "x-ms-long-running-operation": false,
        "description": "Register a storageAccount for a subscription used for DiskInspection",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "storageConfigurationInput",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageConfigurationInput"
            },
            "description": "Storage Configuration object supplied in the body of the Post to cache storageAccount for a given subscription."
          }
        ],
        "responses": {
          "200": {
            "description": "Succeeded"
          },
          "default": {
            "description": "Error response describing why the register operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create a request for registering a storageAccount information.": {
            "$ref": "./examples/RegisterStorageConfiguration.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/diagnostics/diskInspection/validateStorageConfiguration": {
      "post": {
        "tags": [
          "validateStorageConfiguration"
        ],
        "operationId": "DiskInspectionStorageConfiguration_Validate",
        "x-ms-long-running-operation": false,
        "description": "Validate if a storageAccount configuration exists for a subscription used for DiskInspection.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StorageConfigurationResponse"
            }
          },
          "default": {
            "description": "Error response describing why the get call failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Returns storageAccount value for an existing configuration entry": {
            "$ref": "./examples/ValidateStorageConfiguration.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/diagnostics/spotPlacementRecommender": {
      "get": {
        "tags": [
          "diagnostics_SpotPlacementRecommender"
        ],
        "operationId": "SpotPlacementRecommender_Get",
        "description": "[SOON TO BE DEPRECATED] Gets Spot Placement Recommender diagnostic metadata.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComputeDiagnosticBase"
            }
          },
          "default": {
            "description": "Error response describing why the get call failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets the metadata of Spot Placement Recommender diagnostic.": {
            "$ref": "./examples/GetSpotPlacementRecommender.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/diagnostics/spotPlacementRecommender/generate": {
      "post": {
        "tags": [
          "spotPlacementRecommender"
        ],
        "operationId": "SpotPlacementRecommender_Post",
        "description": "[SOON TO BE DEPRECATED] Generates placement scores for Spot VM skus.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "spotPlacementRecommenderInput",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SpotPlacementRecommenderInput"
            },
            "description": "SpotPlacementRecommender object supplied in the body of the Post spot placement recommender operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SpotPlacementRecommenderResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Returns spot VM placement scores for given configurations.": {
            "$ref": "./examples/SpotPlacementRecommender.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/placementScores/spot": {
      "get": {
        "tags": [
          "placementScores_spot"
        ],
        "operationId": "SpotPlacementScores_Get",
        "description": "Gets Spot Placement Scores metadata.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComputeDiagnosticBase"
            }
          },
          "default": {
            "description": "Error response describing why the get call failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets the metadata of Spot Placement Scores.": {
            "$ref": "./examples/GetSpotPlacementScores.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/placementScores/spot/generate": {
      "post": {
        "tags": [
          "spotPlacementScores"
        ],
        "operationId": "SpotPlacementScores_Post",
        "description": "Generates placement scores for Spot VM skus.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "spotPlacementScoresInput",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SpotPlacementScoresInput"
            },
            "description": "SpotPlacementScores object supplied in the body of the Post spot placement scores operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SpotPlacementScoresResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Returns spot VM placement scores for given configurations.": {
            "$ref": "./examples/GenerateSpotPlacementScores.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/vmSizeRecommendations/vmAttributeBased/generate": {
      "post": {
        "tags": [
          "attributeBasedVMSizeRecommender"
        ],
        "operationId": "AttributeBasedVMSizeRecommender_Post",
        "description": "Generates attribute based VM Size Recommendations.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "attributeBasedVMSizeRecommenderInput",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AttributeBasedVMSizeRecommenderInput"
            },
            "description": "AttributeBasedVMSizeRecommender object supplied in the body of the Post attribute based VMSize recommender operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AttributeBasedVMSizeRecommenderResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Returns VMSize recommendations for given configurations.": {
            "$ref": "./examples/GenerateAttributeBasedVMSizeRecommender.json"
          }
        }
      }
    }
  },
  "definitions": {
    "ComputeDiagnosticsList": {
      "description": "Lists all available Compute diagnostics for a subscription in a location.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComputeDiagnosticBase"
          },
          "description": "The collection of available Compute diagnostics returned by the listing operation."
        },
        "nextLink": {
          "type": "string",
          "description": "The continuation token."
        }
      }
    },
    "ComputeDiagnosticBase": {
      "description": "Contains metadata of a diagnostic type",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DiagnosticProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DiagnosticProperties": {
      "description": "Contains additional properties of a diagnostic",
      "type": "object",
      "properties": {
        "supportedResourceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Describes what are the supported resource types for a diagnostic."
        }
      }
    },
    "RunDiskInspectionInput": {
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "Qualified ID of the resource.",
          "type": "string"
        },
        "manifest": {
          "description": "Name of manifest in order to trigger Disk Inspection.",
          "type": "string"
        },
        "uploadSasUri": {
          "description": "SAS uri to the blob where results will be uploaded.",
          "type": "string",
          "x-ms-secret": true
        }
      },
      "required": [
        "resourceId",
        "manifest",
        "uploadSasUri"
      ],
      "description": "Data used for requesting a Disk Inspection execution."
    },
    "ComputeDiagnosticsOperationResult": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "The result of the disk inspection operation."
        },
        "responseFields": {
          "type": "string",
          "description": "The response fields of the disk inspection operation."
        },
        "resultStatus": {
          "type": "string",
          "enum": [
            "Success",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "resultStatus",
            "modelAsString": true
          },
          "description": "Result status of the async operation."
        },
        "errorDetail": {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "The API error details."
        },
        "createdUTC": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the disk inspection was completed."
        }
      },
      "description": "Api output result when Compute Diagnostic operation is completed."
    },
    "StorageConfigurationInput": {
      "type": "object",
      "properties": {
        "storageAccountId": {
          "description": "Fully qualified storage account Id. Example: \"/subscriptions/{subId}/resourceGroups/{rgName}/providers/Microsoft.Storage/storageAccounts/{storageAccountName}\"",
          "type": "string"
        }
      },
      "required": [
        "storageAccountId"
      ],
      "description": "Data used for registering a Storage Account for a Subscription."
    },
    "StorageConfigurationResponse": {
      "type": "object",
      "properties": {
        "storageAccountId": {
          "type": "string",
          "description": "Fully qualified storage account Id. Example: \"/subscriptions/{subId}/resourceGroups/{rgName}/providers/Microsoft.Storage/storageAccounts/{storageAccountName}\""
        }
      },
      "description": "Api output result when there is an existing storage configuration entry."
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail"
        }
      },
      "description": "An error response from the Compute Diagnostic Resource Provider service."
    },
    "ErrorDetail": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code."
        },
        "target": {
          "type": "string",
          "description": "The target of the particular error."
        },
        "message": {
          "type": "string",
          "description": "User friendly error message."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail"
          },
          "description": "The Api error details"
        },
        "innerError": {
          "$ref": "#/definitions/InnerError",
          "description": "The Api inner error"
        }
      },
      "description": "Error Detail message."
    },
    "InnerError": {
      "type": "object",
      "properties": {
        "exceptiontype": {
          "type": "string",
          "description": "The exception type."
        },
        "errordetail": {
          "type": "string",
          "description": "The internal error message or exception dump."
        }
      },
      "description": "Inner error details."
    },
    "SpotPlacementRecommenderInput": {
      "type": "object",
      "properties": {
        "desiredLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The desired regions"
        },
        "desiredSizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceSize"
          },
          "description": "The desired resource SKUs."
        },
        "desiredCount": {
          "type": "integer",
          "format": "int32",
          "description": "Desired instance count per region/zone based on the scope."
        },
        "availabilityZones": {
          "type": "boolean",
          "description": "Defines if the scope is zonal or regional."
        }
      },
      "description": "SpotPlacementRecommender API Input."
    },
    "SpotPlacementRecommenderResponse": {
      "type": "object",
      "properties": {
        "desiredLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The desired regions"
        },
        "desiredSizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceSize"
          },
          "description": "The desired resource SKUs."
        },
        "desiredCount": {
          "type": "integer",
          "format": "int32",
          "description": "Desired instance count per region/zone based on the scope."
        },
        "availabilityZones": {
          "type": "boolean",
          "description": "Defines if the scope is zonal or regional."
        },
        "placementScores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlacementScore"
          },
          "description": "The spot placement scores."
        }
      },
      "description": "SpotPlacementRecommender API response."
    },
    "SpotPlacementScoresInput": {
      "type": "object",
      "properties": {
        "desiredLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The desired regions"
        },
        "desiredSizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceSize"
          },
          "description": "The desired resource SKUs."
        },
        "desiredCount": {
          "type": "integer",
          "format": "int32",
          "description": "Desired instance count per region/zone based on the scope."
        },
        "availabilityZones": {
          "type": "boolean",
          "description": "Defines if the scope is zonal or regional."
        }
      },
      "description": "SpotPlacementScores API Input."
    },
    "SpotPlacementScoresResponse": {
      "type": "object",
      "properties": {
        "desiredLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The desired regions"
        },
        "desiredSizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceSize"
          },
          "description": "The desired resource SKUs."
        },
        "desiredCount": {
          "type": "integer",
          "format": "int32",
          "description": "Desired instance count per region/zone based on the scope."
        },
        "availabilityZones": {
          "type": "boolean",
          "description": "Defines if the scope is zonal or regional."
        },
        "placementScores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlacementScore"
          },
          "description": "The spot placement scores."
        }
      },
      "description": "SpotPlacementScores API response."
    },
    "ResourceSize": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string",
          "description": "The resource's CRP virtual machine SKU size."
        }
      },
      "description": "SpotPlacementRecommender API response."
    },
    "PlacementScore": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string",
          "description": "The resource's CRP virtual machine SKU size."
        },
        "region": {
          "type": "string",
          "description": "The region."
        },
        "availabilityZone": {
          "type": "string",
          "description": "The availability region."
        },
        "score": {
          "type": "string",
          "description": "The placement score."
        },
        "isQuotaAvailable": {
          "type": "boolean",
          "description": "Whether the desired quota is available."
        }
      },
      "description": "The spot placement score for sku/region/zone combination."
    },
    "AttributeBasedVMSizeRecommenderInput": {
      "type": "object",
      "properties": {
        "regularPriorityProfile": {
          "type": "object",
          "items": {
            "$ref": "#/definitions/RegularPriorityProfile"
          },
          "description": "The regular priority VM profile."
        },
        "spotPriorityProfile": {
          "type": "object",
          "items": {
            "$ref": "#/definitions/SpotPriorityProfile"
          },
          "description": "The spot priority VM profile."
        },
        "recommendationProperties": {
          "type": "object",
          "items": {
            "$ref": "#/definitions/RecommendationProperties"
          },
          "description": "The recommendation properties."
        },
        "resourceProperties": {
          "type": "object",
          "items": {
            "$ref": "#/definitions/ResourceProperties"
          },
          "description": "The resource properties."
        }
      },
      "description": "AttributeBasedVMSizeRecommender API Input."
    },
    "AttributeBasedVMSizeRecommenderResponse": {
      "type": "object",
      "properties": {
        "recommendedVMSizes": {
          "type": "object",
          "items": {
            "$ref": "#/definitions/RecommendedVMSizes"
          },
          "description": "The recommended VMSizes."
        }
      },
      "description": "AttributeBasedVMSizeRecommender API response."
    },
    "RegularPriorityProfile": {
      "type": "object",
      "properties": {
        "targetCapacity": {
          "type": "integer",
          "format": "int32",
          "description": "The target capacity."
        },
        "capacityUnitType": {
          "type": "string",
          "description": "The capacity unit type."
        }
      },
      "description": "Regular Priority Profile for AttributeBasedVmSizeRecommender."
    },
    "SpotPriorityProfile": {
      "type": "object",
      "properties": {
        "targetCapacity": {
          "type": "integer",
          "format": "int32",
          "description": "The target capacity."
        },
        "capacityUnitType": {
          "type": "string",
          "description": "The capacity unit type."
        },
        "maxPricePerVM": {
          "type": "number",
          "format": "double",
          "description": "The maximum price per spot vm instance."
        }
      },
      "description": "Spot Priority Profile for AttributeBasedVmSizeRecommender."
    },
    "RecommendationProperties": {
      "type": "object",
      "properties": {
        "restrictionsFilter": {
          "type": "string",
          "description": "The restrictions filters to apply on VMSize recommendations.",
          "enum": [
            "QuotaAndOfferRestrictions",
            "QuotaRestrictions",
            "OfferRestrictions",
            "None"
          ],
          "x-ms-enum": {
            "name": "RestrictionsFilterType",
            "modelAsString": false,
            "values": [
              {
                "name": "QuotaAndOfferRestrictions",
                "value": "QuotaAndOfferRestrictions",
                "description": "Apply both quota and offer restrictions on VMSize recommendations."
              },
              {
                "name": "QuotaRestrictions",
                "value": "QuotaRestrictions",
                "description": "Apply quota restrictions on VMSize recommendations."
              },
              {
                "name": "OfferRestrictions",
                "value": "OfferRestrictions",
                "description": "Apply offer restrictions on VMSize recommendations."
              },
              {
                "name": "None",
                "value": "None",
                "description": "Do not apply any restrictions on VMSize recommendations."
              }
            ]
          }
        }
      },
      "description": "Recommendations Properties for AttributeBasedVmSizeRecommender."
    },
    "ResourceProperties": {
      "type": "object",
      "properties": {
        "vmAttributes": {
          "type": "object",
          "items": {
            "$ref": "#/definitions/VmAttributes"
          },
          "description": "The VM attributes."
        }
      },
      "description": "Resource Properties for AttributeBasedVmSizeRecommender."
    },
    "VmAttributes": {
      "type": "object",
      "properties": {
        "vCpuCount": {
          "type": "object",
          "items": {
            "$ref": "#/definitions/VMAttributeMinMaxInteger"
          },
          "description": "The vCPU count."
        },
        "memoryInGiB": {
          "type": "object",
          "items": {
            "$ref": "#/definitions/VMAttributeMinMaxDouble"
          },
          "description": "The memory in GiB."
        },
        "memoryInGiBPerVCpu": {
          "type": "object",
          "items": {
            "$ref": "#/definitions/VMAttributeMinMaxDouble"
          },
          "description": "The memory in GiB per vCPU."
        },
        "vmCategories": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "General Purpose",
              "Compute Optimized",
              "Memory Optimized",
              "Storage Optimized",
              "GPU Accelerated",
              "FPGA Accelerated",
              "High Performance Compute",
              "Confidential Compute"
            ],
            "x-ms-enum": {
              "name": "VmCategories",
              "modelAsString": false
            }
          },
          "description": "The vm categories."
        },
        "architectureTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "x64",
              "Arm64"
            ],
            "x-ms-enum": {
              "name": "ArchitectureTypes",
              "modelAsString": false
            }
          },
          "description": "The cpu architecture types."
        },
        "cpuManufacturers": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Intel",
              "AMD",
              "Microsoft",
              "Ampere"
            ],
            "x-ms-enum": {
              "name": "CpuManufacturers",
              "modelAsString": false
            }
          },
          "description": "The cpu manufacturers."
        },
        "localStorageSupport": {
          "type": "string",
          "description": "The local storage support filter.",
          "enum": [
            "Included",
            "Required",
            "Excluded"
          ],
          "x-ms-enum": {
            "name": "FilterType",
            "modelAsString": false,
            "values": [
              {
                "name": "Included",
                "value": "Included",
                "description": "To include vm size with selected attribute, specify included."
              },
              {
                "name": "Required",
                "value": "Required",
                "description": "To require only vm size with selected attribute, specify required."
              },
              {
                "name": "Excluded",
                "value": "Excluded",
                "description": "To exclude vm size with selected attribute, specify excluded"
              }
            ]
          },
          "default": "Included"
        },
        "localStorageDiskTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "SSD",
              "HDD"
            ],
            "x-ms-enum": {
              "name": "LocalStorageDiskTypes",
              "modelAsString": false
            }
          },
          "description": "The local storage disk types."
        },
        "localStorageInGiB": {
          "type": "object",
          "items": {
            "$ref": "#/definitions/VMAttributeMinMaxDouble"
          },
          "description": "The local storage in GiB."
        },
        "dataDiskCount": {
          "type": "object",
          "items": {
            "$ref": "#/definitions/VMAttributeMinMaxInteger"
          },
          "description": "The data disk count."
        },
        "ultraSSDSupport": {
          "type": "string",
          "description": "The ultra ssd support filter.",
          "enum": [
            "Included",
            "Required",
            "Excluded"
          ],
          "x-ms-enum": {
            "name": "FilterType",
            "modelAsString": false,
            "values": [
              {
                "name": "Included",
                "value": "Included",
                "description": "To include vm size with selected attribute, specify included."
              },
              {
                "name": "Required",
                "value": "Required",
                "description": "To require only vm size with selected attribute, specify required."
              },
              {
                "name": "Excluded",
                "value": "Excluded",
                "description": "To exclude vm size with selected attribute, specify excluded"
              }
            ]
          },
          "default": "Included"
        },
        "hibernationSupport": {
          "type": "string",
          "description": "The hibernation support filter.",
          "enum": [
            "Included",
            "Required",
            "Excluded"
          ],
          "x-ms-enum": {
            "name": "FilterType",
            "modelAsString": false,
            "values": [
              {
                "name": "Included",
                "value": "Included",
                "description": "To include vm size with selected attribute, specify included."
              },
              {
                "name": "Required",
                "value": "Required",
                "description": "To require only vm size with selected attribute, specify required."
              },
              {
                "name": "Excluded",
                "value": "Excluded",
                "description": "To exclude vm size with selected attribute, specify excluded"
              }
            ]
          },
          "default": "Included"
        },
        "hyperVGenerations": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Gen1",
              "Gen2"
            ],
            "x-ms-enum": {
              "name": "HyperVGenerations",
              "modelAsString": false
            }
          },
          "description": "The Hyper-V Generations."
        },
        "networkInterfaceCount": {
          "type": "object",
          "items": {
            "$ref": "#/definitions/VMAttributeMinMaxInteger"
          },
          "description": "The network interface count."
        },
        "networkBandwidthInMbps": {
          "type": "object",
          "items": {
            "$ref": "#/definitions/VMAttributeMinMaxDouble"
          },
          "description": "The network bandwidth in Mbps."
        },
        "burstableSupport": {
          "type": "string",
          "description": "The burstable support filter.",
          "enum": [
            "Included",
            "Required",
            "Excluded"
          ],
          "x-ms-enum": {
            "name": "FilterType",
            "modelAsString": false,
            "values": [
              {
                "name": "Included",
                "value": "Included",
                "description": "To include vm size with selected attribute, specify included."
              },
              {
                "name": "Required",
                "value": "Required",
                "description": "To require only vm size with selected attribute, specify required."
              },
              {
                "name": "Excluded",
                "value": "Excluded",
                "description": "To exclude vm size with selected attribute, specify excluded"
              }
            ]
          },
          "default": "Included"
        },
        "acceleratorSupport": {
          "type": "string",
          "description": "The accelerator support filter.",
          "enum": [
            "Included",
            "Required",
            "Excluded"
          ],
          "x-ms-enum": {
            "name": "FilterType",
            "modelAsString": false,
            "values": [
              {
                "name": "Included",
                "value": "Included",
                "description": "To include vm size with selected attribute, specify included."
              },
              {
                "name": "Required",
                "value": "Required",
                "description": "To require only vm size with selected attribute, specify required."
              },
              {
                "name": "Excluded",
                "value": "Excluded",
                "description": "To exclude vm size with selected attribute, specify excluded"
              }
            ]
          },
          "default": "Included"
        },
        "acceleratorTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "GPU",
              "FPGA"
            ],
            "x-ms-enum": {
              "name": "AcceleratorTypes",
              "modelAsString": false
            }
          },
          "description": "The accelerator types."
        },
        "acceleratorManufacturers": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AMD",
              "Xilinx",
              "Nvidia"
            ],
            "x-ms-enum": {
              "name": "AcceleratorManufacturers",
              "modelAsString": false
            }
          },
          "description": "The accelerator manufacturers."
        },
        "acceleratorCount": {
          "type": "object",
          "items": {
            "$ref": "#/definitions/VMAttributeMinMaxInteger"
          },
          "description": "The accelerator count."
        },
        "rdmaSupport": {
          "type": "string",
          "description": "The rdma support filter.",
          "enum": [
            "Included",
            "Required",
            "Excluded"
          ],
          "x-ms-enum": {
            "name": "FilterType",
            "modelAsString": false,
            "values": [
              {
                "name": "Included",
                "value": "Included",
                "description": "To include vm size with selected attribute, specify included."
              },
              {
                "name": "Required",
                "value": "Required",
                "description": "To require only vm size with selected attribute, specify required."
              },
              {
                "name": "Excluded",
                "value": "Excluded",
                "description": "To exclude vm size with selected attribute, specify excluded"
              }
            ]
          },
          "default": "Included"
        },
        "rdmaNetworkInterfaceCount": {
          "type": "object",
          "items": {
            "$ref": "#/definitions/VMAttributeMinMaxInteger"
          },
          "description": "The rdma network interface count."
        },
        "acceleratedNetworkingSupport": {
          "type": "string",
          "description": "The accelerated networking support filter.",
          "enum": [
            "Included",
            "Required",
            "Excluded"
          ],
          "x-ms-enum": {
            "name": "FilterType",
            "modelAsString": false,
            "values": [
              {
                "name": "Included",
                "value": "Included",
                "description": "To include vm size with selected attribute, specify included."
              },
              {
                "name": "Required",
                "value": "Required",
                "description": "To require only vm size with selected attribute, specify required."
              },
              {
                "name": "Excluded",
                "value": "Excluded",
                "description": "To exclude vm size with selected attribute, specify excluded"
              }
            ]
          },
          "default": "Included"
        },
        "confidentialVMSupport": {
          "type": "string",
          "description": "The confidential VM support filter.",
          "enum": [
            "Included",
            "Required",
            "Excluded"
          ],
          "x-ms-enum": {
            "name": "FilterType",
            "modelAsString": false,
            "values": [
              {
                "name": "Included",
                "value": "Included",
                "description": "To include vm size with selected attribute, specify included."
              },
              {
                "name": "Required",
                "value": "Required",
                "description": "To require only vm size with selected attribute, specify required."
              },
              {
                "name": "Excluded",
                "value": "Excluded",
                "description": "To exclude vm size with selected attribute, specify excluded"
              }
            ]
          },
          "default": "Included"
        },
        "osTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Linux",
              "Windows"
            ],
            "x-ms-enum": {
              "name": "OsTypes",
              "modelAsString": false
            }
          },
          "description": "The list of Operation Systems."
        },
        "allowedVMSizes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of allowed VMSizes."
        },
        "excludedVMSizes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of excluded VMSizes."
        }
      },
      "description": "VM attributes for AttributeBasedVmSizeRecommender."
    },
    "VMAttributeMinMaxInteger": {
      "type": "object",
      "properties": {
        "min": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum value for vm attribute in integer."
        },
        "max": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum value for vm attribute in integer."
        }
      },
      "description": "MinMax values in integer for AttributeBasedVmSizeRecommender."
    },
    "VMAttributeMinMaxDouble": {
      "type": "object",
      "properties": {
        "min": {
          "type": "number",
          "format": "double",
          "description": "The minimum value for vm attribute in double."
        },
        "max": {
          "type": "number",
          "format": "double",
          "description": "The maximum value for vm attribute in double."
        }
      },
      "description": "Priority Profile for AttributeBasedVmSizeRecommender."
    },
    "RecommendedVMSizes": {
      "type": "object",
      "properties": {
        "regularVMSizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecommendedVMSizeProperties"
          },
          "description": "The regular priority VMSizes."
        },
        "spotVMSizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecommendedVMSizeProperties"
          },
          "description": "The spot priority VMSizes."
        }
      },
      "description": "The regular and spot priority recommended VMSizes."
    },
    "RecommendedVMSizeProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the VMSize."
        },
        "size": {
          "type": "string",
          "description": "The vm size."
        },
        "family": {
          "type": "string",
          "description": "The family of VMSize."
        },
        "attributes": {
          "type": "object",
          "items": {
            "$ref": "#/definitions/RecommendedVMSizeAttributes"
          },
          "description": "The recommended VMSize attributes."
        },
        "restrictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecommendedVMSizeRestrictions"
          },
          "description": "The recommended VMSize restrictions."
        }
      },
      "description": "The recommended VMSize properties."
    },
    "RecommendedVMSizeAttributes": {
      "type": "object",
      "properties": {
        "vCpu": {
          "type": "integer",
          "format": "int32",
          "description": "The vCPU count."
        },
        "memoryInGiB": {
          "type": "number",
          "format": "double",
          "description": "The memory in GiB."
        },
        "cpuArchitecture": {
          "type": "string",
          "description": "The cpu architecture of VMSize."
        },
        "cpuManufacturer": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The cpu manufacturers."
        },
        "networkBandwidthInMbps": {
          "type": "number",
          "format": "double",
          "description": "The network bandwidth in Mbps."
        },
        "localStorageSupport": {
          "type": "boolean",
          "description": "The local storage support flag."
        },
        "localStorageType": {
          "type": "string",
          "description": "The local storage type of VMSize."
        },
        "localStorageInGiB": {
          "type": "number",
          "format": "double",
          "description": "The local storage in GiB."
        },
        "dataDiskCount": {
          "type": "integer",
          "format": "int32",
          "description": "The data disk count."
        },
        "networkInterfaceCount": {
          "type": "integer",
          "format": "int32",
          "description": "The network interface count."
        }
      },
      "description": "The recommended VMSize attributes."
    },
    "RecommendedVMSizeRestrictions": {
      "type": "object",
      "properties": {
        "offerRestrictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMSizeOfferRestriction"
          },
          "description": "The offer restrictions on VMSize."
        },
        "quotaRestrictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMSizeQuotaRestriction"
          },
          "description": "The quota restrictions on VMSize."
        }
      },
      "description": "The restrictions recommended VMSizes."
    },
    "VMSizeOfferRestriction": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of offer restriction on VMSize.",
          "enum": [
            "NotSpecified",
            "Location",
            "Zone"
          ],
          "x-ms-enum": {
            "name": "ResourceSkuRestrictionType",
            "modelAsString": false
          }
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of restriction values."
        },
        "restrictionInfo": {
          "type": "object",
          "items": {
            "$ref": "#/definitions/VMSizeOfferRestrictionInfo"
          },
          "description": "The offer restrictions on VMSize."
        },
        "reasonCode": {
          "type": "string",
          "description": "The offer restriction reason code.",
          "enum": [
            "NotSpecified",
            "QuotaId",
            "NotAvailableForSubscription"
          ],
          "x-ms-enum": {
            "name": "ResourceSkuRestrictionReasonCode",
            "modelAsString": false
          }
        }
      },
      "description": "The offer restrictions on recommended VMSize."
    },
    "VMSizeOfferRestrictionInfo": {
      "type": "object",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of restriction locations."
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of restriction zones."
        }
      },
      "description": "The offer restriction info on recommended VMSize."
    },
    "VMSizeQuotaRestriction": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of quota restriction on VMSize.",
          "enum": [
            "RegionalVCpu",
            "VMFamilyVCpu"
          ],
          "x-ms-enum": {
            "name": "QuotaRestrictionsType",
            "modelAsString": false
          }
        }
      },
      "description": "The quota restrictions on recommended VMSize."
    }
  }
}
