{
  "swagger": "2.0",
  "info": {
    "title": "ContainerServiceClient",
    "description": "The Container Service Client.",
    "version": "2015-11-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "text/json"
  ],
  "produces": [
    "application/json",
    "text/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}": {
      "put": {
        "tags": [
          "ContainerService"
        ],
        "operationId": "ContainerService_CreateOrUpdate",
        "description": "The operation to create or update a container service.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "containerServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the container service within the given subscription and resource group."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContainerService"
            },
            "description": "Parameters supplied to the Create Container Service operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ContainerService"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ContainerService"
            }
          },
          "202": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ContainerService"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "ContainerService"
        ],
        "operationId": "ContainerService_Get",
        "description": "The operation to get a container service.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "containerServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the container service within the given subscription and resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ContainerService"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContainerService"
        ],
        "operationId": "ContainerService_Delete",
        "description": "The operation to delete a container service.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "containerServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the container service within the given subscription and resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices": {
      "get": {
        "tags": [
          "ContainerService"
        ],
        "operationId": "ContainerService_ListByResourceGroup",
        "description": "The operation to list container services.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ContainerServiceListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    }
  },
  "definitions": {
    "Resource": {
      "description": "The Resource model definition.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "required": [
        "location"
      ],
      "x-ms-azure-resource": true
    },
    "ContainerServiceOrchestratorProfile": {
      "properties": {
        "orchestratorType": {
          "type": "string",
          "enum": [
            "Mesos",
            "SwarmPreview",
            "DCOS"
          ],
          "x-ms-enum": {
            "name": "ContainerServiceOchestratorTypes",
            "modelAsString": false
          },
          "description": "Specifies what orchestrator will be used to manage container cluster resources."
        }
      },
      "description": "Profile for Orchestrator"
    },
    "ContainerServiceMasterProfile": {
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "enum": [
            1,
            3,
            5
          ],
          "description": "Number of masters (VMs) in the container cluster"
        },
        "dnsPrefix": {
          "type": "string",
          "description": "DNS prefix to be used to create FQDN for master"
        },
        "fqdn": {
          "readOnly": true,
          "type": "string",
          "description": "FQDN for the master"
        }
      },
      "required": [
        "dnsPrefix"
      ],
      "description": "Profile for container service master"
    },
    "ContainerServiceAgentPoolProfile": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Unique name of the agent pool profile within the context of the subscription and resource group"
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "maximum": 100,
          "minimum": 1,
          "description": "No. of agents (VMs) that will host docker containers"
        },
        "vmSize": {
          "type": "string",
          "enum": [
            "Standard_A0",
            "Standard_A1",
            "Standard_A2",
            "Standard_A3",
            "Standard_A4",
            "Standard_A5",
            "Standard_A6",
            "Standard_A7",
            "Standard_A8",
            "Standard_A9",
            "Standard_A10",
            "Standard_A11",
            "Standard_D1",
            "Standard_D2",
            "Standard_D3",
            "Standard_D4",
            "Standard_D11",
            "Standard_D12",
            "Standard_D13",
            "Standard_D14",
            "Standard_D1_v2",
            "Standard_D2_v2",
            "Standard_D3_v2",
            "Standard_D4_v2",
            "Standard_D5_v2",
            "Standard_D11_v2",
            "Standard_D12_v2",
            "Standard_D13_v2",
            "Standard_D14_v2",
            "Standard_G1",
            "Standard_G2",
            "Standard_G3",
            "Standard_G4",
            "Standard_G5",
            "Standard_DS1",
            "Standard_DS2",
            "Standard_DS3",
            "Standard_DS4",
            "Standard_DS11",
            "Standard_DS12",
            "Standard_DS13",
            "Standard_DS14",
            "Standard_GS1",
            "Standard_GS2",
            "Standard_GS3",
            "Standard_GS4",
            "Standard_GS5"
          ],
          "x-ms-enum": {
            "name": "ContainerServiceVMSizeTypes",
            "modelAsString": true
          },
          "description": "Size of agent VMs"
        },
        "dnsPrefix": {
          "type": "string",
          "description": "DNS prefix to be used to create FQDN for this agent pool"
        },
        "fqdn": {
          "readOnly": true,
          "type": "string",
          "description": "FQDN for the agent pool"
        }
      },
      "required": [
        "name",
        "dnsPrefix"
      ],
      "description": "Profile for container service agent pool"
    },
    "ContainerServiceWindowsProfile": {
      "properties": {
        "adminUsername": {
          "type": "string",
          "description": "The administrator username to use for Windows jumpbox"
        },
        "adminPassword": {
          "type": "string",
          "description": "The administrator password to use for Windows jumpbox"
        }
      },
      "required": [
        "adminUsername",
        "adminPassword"
      ],
      "description": "Profile for Windows jumpbox"
    },
    "ContainerServiceLinuxProfile": {
      "properties": {
        "adminUsername": {
          "type": "string",
          "description": "The administrator username to use for all Linux VMs"
        },
        "ssh": {
          "$ref": "#/definitions/ContainerServiceSshConfiguration",
          "description": "Specifies the ssh key configuration for Linux VMs"
        }
      },
      "required": [
        "adminUsername",
        "ssh"
      ],
      "description": "Profile for Linux VM"
    },
    "ContainerServiceSshConfiguration": {
      "properties": {
        "publicKeys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerServiceSshPublicKey"
          },
          "description": "Gets or sets the list of SSH public keys used to authenticate with Linux based VMs"
        }
      },
      "description": "SSH configuration for Linux based VMs running on Azure"
    },
    "ContainerServiceSshPublicKey": {
      "properties": {
        "keyData": {
          "type": "string",
          "description": "Gets or sets Certificate public key used to authenticate with VM through SSH. The certificate must be in Pem format with or without headers."
        }
      },
      "required": [
        "keyData"
      ],
      "description": "Contains information about SSH certificate public key data."
    },
    "ContainerServiceDiagnosticsProfile": {
      "properties": {
        "vmDiagnostics": {
          "$ref": "#/definitions/ContainerServiceVMDiagnostics",
          "description": "Profile for container service VM diagnostic agent"
        }
      }
    },
    "ContainerServiceVMDiagnostics": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine."
        },
        "storageUri": {
          "readOnly": true,
          "type": "string",
          "description": "Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine."
        }
      },
      "description": "Describes VM Diagnostics."
    },
    "ContainerService": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ContainerServiceProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Container service"
    },
    "ContainerServiceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerService"
          },
          "description": "Gets or sets the list of container services."
        }
      },
      "description": "The List Container Service operation response"
    },
    "ContainerServiceProperties": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the provisioning state, which only appears in the response."
        },
        "orchestratorProfile": {
          "$ref": "#/definitions/ContainerServiceOrchestratorProfile",
          "description": "Properties of orchestrator"
        },
        "masterProfile": {
          "$ref": "#/definitions/ContainerServiceMasterProfile",
          "description": "Properties of master agents"
        },
        "agentPoolProfiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerServiceAgentPoolProfile"
          },
          "description": "Properties of agent pools"
        },
        "windowsProfile": {
          "$ref": "#/definitions/ContainerServiceWindowsProfile",
          "description": "Properties of Windows VMs"
        },
        "linuxProfile": {
          "$ref": "#/definitions/ContainerServiceLinuxProfile",
          "description": "Properties for Linux VMs"
        },
        "diagnosticsProfile": {
          "$ref": "#/definitions/ContainerServiceDiagnosticsProfile",
          "description": "Properties for Diagnostic Agent"
        }
      },
      "required": [
        "masterProfile",
        "agentPoolProfiles",
        "linuxProfile"
      ],
      "description": "Properties of container service"
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    }
  }
}
