{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.Confluent",
    "version": "2020-03-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Confluent/agreements": {
      "get": {
        "tags": [
          "Agreements"
        ],
        "summary": "List Confluent marketplace agreements in the subscription.",
        "operationId": "MarketplaceAgreements_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ConfluentAgreementResourceListResponse"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/ResourceProviderDefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "MarketplaceAgreements_List": {
            "$ref": "./examples/MarketplaceAgreements_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Confluent/agreements/default": {
      "put": {
        "tags": [
          "Agreements"
        ],
        "summary": "Create Confluent Marketplace agreement in the subscription.",
        "operationId": "MarketplaceAgreements_Create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ConfluentAgreementResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ConfluentAgreementResource"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/ResourceProviderDefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MarketplaceAgreements_Create": {
            "$ref": "./examples/MarketplaceAgreements_Create.json"
          }
        }
      }
    },
    "/providers/Microsoft.Confluent/operations": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "List all operations provided by Microsoft.Confluent.",
        "operationId": "OrganizationOperations_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/ResourceProviderDefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "OrganizationOperations_List": {
            "$ref": "./examples/OrganizationOperations_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Confluent/organizations": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "List all organizations under the specified subscription.",
        "operationId": "Organization_ListBySubscription",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrganizationResourceListResult"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/ResourceProviderDefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Organization_ListBySubscription": {
            "$ref": "./examples/Organization_ListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "List all Organizations under the specified resource group.",
        "operationId": "Organization_ListByResourceGroup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrganizationResourceListResult"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/ResourceProviderDefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Organization_ListByResourceGroup": {
            "$ref": "./examples/Organization_ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Get the properties of a specific Organization resource.",
        "operationId": "Organization_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/OrganizationResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrganizationResource"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/ResourceProviderDefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Organization_Get": {
            "$ref": "./examples/Organization_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Organization"
        ],
        "summary": "Create Organization resource",
        "operationId": "Organization_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/OrganizationResourceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Organization resource model",
            "schema": {
              "$ref": "#/definitions/OrganizationResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrganizationResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/OrganizationResource"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/ResourceProviderDefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Organization_Create": {
            "$ref": "./examples/Organization_Create.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Organization"
        ],
        "summary": "Update Organization resource",
        "operationId": "Organization_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/OrganizationResourceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated Organization resource",
            "schema": {
              "$ref": "#/definitions/OrganizationResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrganizationResource"
            }
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/ResourceProviderDefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Confluent_Update": {
            "$ref": "./examples/Organization_Update.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Organization"
        ],
        "summary": "Delete Organization resource",
        "operationId": "Organization_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/OrganizationResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "The specified confluent resource does not exist in the subscription."
          },
          "default": {
            "description": "Default error response.",
            "schema": {
              "$ref": "#/definitions/ResourceProviderDefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Confluent_Delete": {
            "$ref": "./examples/Organization_Delete.json"
          }
        }
      }
    }
  },
  "definitions": {
    "ConfluentAgreementProperties": {
      "description": "Terms properties for Marketplace and Confluent.",
      "type": "object",
      "properties": {
        "publisher": {
          "description": "Publisher identifier string.",
          "type": "string"
        },
        "product": {
          "description": "Product identifier string.",
          "type": "string"
        },
        "plan": {
          "description": "Plan identifier string.",
          "type": "string"
        },
        "licenseTextLink": {
          "description": "Link to HTML with Microsoft and Publisher terms.",
          "type": "string"
        },
        "privacyPolicyLink": {
          "description": "Link to the privacy policy of the publisher.",
          "type": "string"
        },
        "retrieveDatetime": {
          "format": "date-time",
          "description": "Date and time in UTC of when the terms were accepted. This is empty if Accepted is false.",
          "type": "string"
        },
        "signature": {
          "description": "Terms signature.",
          "type": "string"
        },
        "accepted": {
          "description": "If any version of the terms have been accepted, otherwise false.",
          "type": "boolean"
        }
      }
    },
    "ConfluentAgreementResource": {
      "description": "Agreement Terms definition",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "id": {
          "description": "The ARM id of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the agreement.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the agreement.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/ConfluentAgreementProperties",
          "description": "Represents the properties of the resource."
        }
      }
    },
    "ConfluentAgreementResourceListResponse": {
      "description": "Response of a agreements operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Results of a list operation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfluentAgreementResource"
          }
        },
        "nextLink": {
          "description": "Link to the next set of results, if any.",
          "type": "string"
        }
      }
    },
    "OperationDisplay": {
      "description": "The object that represents the operation.",
      "type": "object",
      "properties": {
        "provider": {
          "description": "Service provider: Microsoft.Confluent",
          "type": "string"
        },
        "resource": {
          "description": "Type on which the operation is performed, e.g., 'clusters'.",
          "type": "string"
        },
        "operation": {
          "description": "Operation type, e.g., read, write, delete, etc.",
          "type": "string"
        },
        "description": {
          "description": "Description of the operation, e.g., 'Write confluent'.",
          "type": "string"
        }
      }
    },
    "OperationResult": {
      "description": "An Confluent REST API operation.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}",
          "type": "string"
        },
        "display": {
          "description": "The object that represents the operation.",
          "$ref": "#/definitions/OperationDisplay"
        }
      }
    },
    "OperationListResult": {
      "description": "Result of GET request to list Confluent operations.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of Confluent operations supported by the Microsoft.Confluent provider.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationResult"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of operation list results if there are any.",
          "type": "string"
        }
      }
    },
    "ErrorResponseBody": {
      "description": "Response body of Error",
      "title": "ErrorResponseBody",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "Error message",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "description": "Error target",
          "type": "string",
          "readOnly": true
        },
        "details": {
          "description": "Error detail",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ErrorResponseBody"
          }
        }
      }
    },
    "ResourceProviderDefaultErrorResponse": {
      "type": "object",
      "description": "Default error response for resource provider",
      "title": "ResourceProviderDefaultErrorResponse",
      "properties": {
        "error": {
          "description": "Response body of Error",
          "readOnly": true,
          "$ref": "#/definitions/ErrorResponseBody"
        }
      }
    },
    "ProvisioningState": {
      "enum": [
        "Accepted",
        "Creating",
        "Updating",
        "Deleting",
        "Succeeded",
        "Failed",
        "Canceled",
        "Deleted",
        "NotSpecified"
      ],
      "type": "string",
      "description": "Provision states for confluent RP",
      "title": "ProvisioningState",
      "x-ms-enum": {
        "name": "ProvisionState",
        "modelAsString": true
      }
    },
    "SaaSOfferStatus": {
      "enum": [
        "Started",
        "PendingFulfillmentStart",
        "InProgress",
        "Subscribed",
        "Suspended",
        "Reinstated",
        "Succeeded",
        "Failed",
        "Unsubscribed",
        "Updating"
      ],
      "type": "string",
      "description": "SaaS Offer Status for confluent RP",
      "title": "SaaSOfferStatus",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "SaaSOfferStatus"
      }
    },
    "OfferDetail": {
      "description": "Confluent Offer detail",
      "type": "object",
      "properties": {
        "publisherId": {
          "description": "Publisher Id",
          "maxLength": 50,
          "type": "string"
        },
        "id": {
          "description": "Offer Id",
          "maxLength": 50,
          "type": "string"
        },
        "planId": {
          "description": "Offer Plan Id",
          "maxLength": 50,
          "type": "string"
        },
        "planName": {
          "description": "Offer Plan Name",
          "maxLength": 50,
          "type": "string"
        },
        "termUnit": {
          "description": "Offer Plan Term unit",
          "maxLength": 25,
          "type": "string"
        },
        "status": {
          "description": "SaaS Offer Status",
          "$ref": "#/definitions/SaaSOfferStatus"
        }
      }
    },
    "UserDetail": {
      "description": "Subscriber detail",
      "type": "object",
      "properties": {
        "firstName": {
          "description": "First name",
          "maxLength": 50,
          "type": "string"
        },
        "lastName": {
          "description": "Last name",
          "maxLength": 50,
          "type": "string"
        },
        "emailAddress": {
          "description": "Email address",
          "pattern": "^\\S+@\\S+\\.\\S+$",
          "type": "string"
        }
      }
    },
    "OrganizationResourceProperties": {
      "description": "Organization resource property",
      "type": "object",
      "properties": {
        "createdTime": {
          "format": "date-time",
          "description": "The creation time of the resource.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provision states for confluent RP",
          "$ref": "#/definitions/ProvisioningState"
        },
        "organizationId": {
          "description": "Id of the Confluent organization.",
          "type": "string",
          "readOnly": true
        },
        "ssoUrl": {
          "description": "SSO url for the Confluent organization.",
          "type": "string",
          "readOnly": true
        },
        "offerDetail": {
          "description": "Confluent offer detail",
          "allOf": [
            {
              "$ref": "#/definitions/OfferDetail"
            }
          ]
        },
        "userDetail": {
          "description": "Subscriber detail",
          "allOf": [
            {
              "$ref": "#/definitions/UserDetail"
            }
          ]
        }
      }
    },
    "OrganizationResource": {
      "description": "Organization resource.",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "id": {
          "description": "The ARM id of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Organization resource properties",
          "allOf": [
            {
              "$ref": "#/definitions/OrganizationResourceProperties"
            }
          ]
        },
        "tags": {
          "type": "object",
          "description": "Organization resource tags",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "description": "Location of Organization resource",
          "type": "string"
        }
      }
    },
    "OrganizationResourceListResult": {
      "description": "The response of a list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Result of a list operation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrganizationResource"
          }
        },
        "nextLink": {
          "description": "Link to the next set of results, if any.",
          "type": "string"
        }
      }
    },
    "OrganizationResourceUpdate": {
      "description": "Organization Resource update",
      "type": "object",
      "properties": {
        "tags": {
          "description": "ARM resource tags",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "Client Api Version.",
      "required": true,
      "type": "string",
      "enum": [
        "2020-03-01-preview"
      ]
    },
    "SubscriptionIdParameter": {
      "in": "path",
      "name": "subscriptionId",
      "description": "Microsoft Azure subscription id",
      "required": true,
      "type": "string"
    },
    "ResourceGroupParameter": {
      "in": "path",
      "name": "resourceGroupName",
      "description": "Resource group name",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "OrganizationResourceNameParameter": {
      "in": "path",
      "name": "organizationName",
      "description": "Organization resource name",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
