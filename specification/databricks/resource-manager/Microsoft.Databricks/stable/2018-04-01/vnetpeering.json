{
  "swagger": "2.0",
  "info": {
    "title": "DatabricksClient",
    "version": "2018-04-01",
    "description": "ARM Databricks"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces/{workspaceName}/virtualNetworkPeerings/{peeringName}": {
      "get": {
        "tags": [
          "vNetPeering"
        ],
        "operationId": "vNetPeering_Get",
        "description": "Gets the workspace vNet Peering.",
        "x-ms-examples": {
          "Get a workspace with vNet Peering Configured": {
            "$ref": "./examples/WorkspaceVirtualNetPeeringGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/PeeringNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkPeering"
            }
          },
          "204": {
            "description": "OK - NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "vNetPeering"
        ],
        "operationId": "vNetPeering_Delete",
        "description": "Deletes the workspace vNetPeering.",
        "x-ms-examples": {
          "Delete a workspace vNet Peering": {
            "$ref": "./examples/WorkspaceVirtualNetworkPeeringDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/PeeringNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204": {
            "description": "NoContent"
          },
          "200": {
            "description": "OK. The request has succeeded."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "tags": [
          "vNetPeering"
        ],
        "operationId": "vNetPeering_CreateOrUpdate",
        "description": "Creates vNet Peering for workspace.",
        "x-ms-examples": {
          "Create vNet Peering for Workspace": {
            "$ref": "./examples/WorkspaceVirtualNetworkPeeringCreateOrUpdate.json"
          }
        },
        "parameters": [
          {
            "name": "VirtualNetworkPeeringParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkPeering"
            },
            "description": "Parameters supplied to the create workspace vNet Peering."
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/PeeringNameParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Created - Returns information about the workspace vNet peering, including provisioning status.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkPeering"
            }
          },
          "200": {
            "description": "Update succeeded - Returns information about the workspace vNet peering.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkPeering"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces/{workspaceName}/virtualNetworkPeerings": {
      "get": {
        "tags": [
          "vNetPeering"
        ],
        "operationId": "vNetPeering_ListByWorkspace",
        "description": "Lists the workspace vNet Peerings.",
        "x-ms-examples": {
          "List all vNet Peerings for the workspace": {
            "$ref": "./examples/WorkspaceVirtualNetPeeringList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List succeeded. Returns the resulting resource objects in response body.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkPeeringList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "ErrorDetail": {
      "title": "Error details.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The error's code.",
          "type": "string"
        },
        "message": {
          "description": "A human readable error message.",
          "type": "string"
        },
        "target": {
          "description": "Indicates which property in the request is responsible for the error.",
          "type": "string"
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "ErrorInfo": {
      "title": "The code and message for an error.",
      "type": "object",
      "properties": {
        "code": {
          "description": "A machine readable error code.",
          "type": "string"
        },
        "message": {
          "description": "A human readable error message.",
          "type": "string"
        },
        "details": {
          "description": "error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          }
        },
        "innererror": {
          "description": "Inner error details if they exist.",
          "type": "string"
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "ErrorResponse": {
      "title": "Error response.",
      "description": "Contains details when the response code indicates an error.",
      "type": "object",
      "properties": {
        "error": {
          "description": "The error details.",
          "$ref": "#/definitions/ErrorInfo"
        }
      },
      "required": [
        "error"
      ]
    },
    "VirtualNetworkPeeringList": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkPeering"
          },
          "description": "List of virtual network peerings on workspace."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of virtual network peering list results if there are any."
        }
      },
      "description": "Gets all virtual network peerings under a workspace."
    },
    "VirtualNetworkPeering": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualNetworkPeeringPropertiesFormat",
          "description": "List of properties for vNet Peering"
        },
        "name": {
          "type": "string",
          "description": "Name of the virtual network peering resource",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "Resource ID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "type of the virtual network peering resource",
          "readOnly": true
        }
      },
      "required": [
        "properties"
      ],
      "description": "Peerings in a VirtualNetwork resource",
      "x-ms-azure-resource": true
    },
    "VirtualNetworkPeeringPropertiesFormat": {
      "properties": {
        "allowVirtualNetworkAccess": {
          "type": "boolean",
          "description": "Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space."
        },
        "allowForwardedTraffic": {
          "type": "boolean",
          "description": "Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network."
        },
        "allowGatewayTransit": {
          "type": "boolean",
          "description": "If gateway links can be used in remote virtual networking to link to this virtual network."
        },
        "useRemoteGateways": {
          "type": "boolean",
          "description": "If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway."
        },
        "databricksVirtualNetwork": {
          "properties": {
            "id": {
              "type": "string",
              "description": "The Id of the databricks virtual network."
            }
          },
          "description": " The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering)."
        },
        "databricksAddressSpace": {
          "$ref": "#/definitions/AddressSpace",
          "description": "The reference to the databricks virtual network address space."
        },
        "remoteVirtualNetwork": {
          "properties": {
            "id": {
              "type": "string",
              "description": "The Id of the remote virtual network."
            }
          },
          "description": " The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering)."
        },
        "remoteAddressSpace": {
          "$ref": "#/definitions/AddressSpace",
          "description": "The reference to the remote virtual network address space."
        },
        "peeringState": {
          "type": "string",
          "description": "The status of the virtual network peering.",
          "enum": [
            "Initiated",
            "Connected",
            "Disconnected"
          ],
          "x-ms-enum": {
            "name": "peeringState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/PeeringProvisioningState",
          "description": "The provisioning state of the virtual network peering resource."
        }
      },
      "required": [
        "remoteVirtualNetwork"
      ],
      "description": "Properties of the virtual network peering."
    },
    "PeeringProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Updating",
        "Deleting",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "PeeringProvisioningState",
        "modelAsString": true
      }
    },
    "AddressSpace": {
      "properties": {
        "addressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of address blocks reserved for this virtual network in CIDR notation."
        }
      },
      "description": "AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID of the target subscription."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to use for this operation."
    },
    "ResourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group. The name is case insensitive.",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "WorkspaceName": {
      "name": "workspaceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the workspace.",
      "minLength": 3,
      "maxLength": 64,
      "x-ms-parameter-location": "method"
    },
    "PeeringNameParameter": {
      "name": "peeringName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the workspace vNet peering.",
      "x-ms-parameter-location": "method"
    }
  }
}
