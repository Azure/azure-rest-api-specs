{
  "swagger": "2.0",
  "info": {
    "title": "DataLakeAnalyticsJobManagementClient",
    "description": "Creates an Azure Data Lake Analytics job client.",
    "version": "2015-11-01-preview",
    "x-ms-code-generation-settings": {
      "useDateTimeOffset": true,
      "internalConstructors": true
    }
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{accountName}.{adlaJobDnsSuffix}",
    "parameters": [
      {
        "name": "accountName",
        "description": "The Azure Data Lake Analytics account to execute job operations on.",
        "required": true,
        "type": "string",
        "in": "path",
        "x-ms-skip-url-encoding": true
      },
      {
        "$ref": "#/parameters/adlaJobDnsSuffixInPath"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "text/json",
    "application/octet-stream"
  ],
  "produces": [
    "application/json",
    "text/json",
    "application/octet-stream"
  ],
  "paths": {
    "/Jobs/{jobIdentity}/GetStatistics": {
      "post": {
        "tags": [
          "Job"
        ],
        "operationId": "Job_GetStatistics",
        "description": "Gets statistics of the specified job.",
        "parameters": [
          {
            "name": "jobIdentity",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "JobInfo ID."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/JobStatistics"
            }
          }
        }
      }
    },
    "/Jobs/{jobIdentity}/GetDebugDataPath": {
      "post": {
        "tags": [
          "Job"
        ],
        "operationId": "Job_GetDebugDataPath",
        "description": "Gets the U-SQL job debug data information specified by the job ID.",
        "parameters": [
          {
            "name": "jobIdentity",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "JobInfo ID."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/JobDataPath"
            }
          }
        }
      }
    },
    "/BuildJob": {
      "post": {
        "tags": [
          "Job"
        ],
        "operationId": "Job_Build",
        "description": "Builds (compiles) the specified job in the specified Data Lake Analytics account for job correctness and validation.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobInformation"
            },
            "description": "The parameters to build a job."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/JobInformation"
            }
          }
        }
      }
    },
    "/Jobs/{jobIdentity}/CancelJob": {
      "post": {
        "tags": [
          "Job"
        ],
        "operationId": "Job_Cancel",
        "description": "Cancels the running job specified by the job ID.",
        "parameters": [
          {
            "name": "jobIdentity",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "JobInfo ID to cancel."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/Jobs/{jobIdentity}": {
      "get": {
        "tags": [
          "Job"
        ],
        "operationId": "Job_Get",
        "description": "Gets the job information for the specified job ID.",
        "parameters": [
          {
            "name": "jobIdentity",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "JobInfo ID."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/JobInformation"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Job"
        ],
        "operationId": "Job_Create",
        "description": "Submits a job to the specified Data Lake Analytics account.",
        "parameters": [
          {
            "name": "jobIdentity",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "The job ID (a GUID) for the job being submitted."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobInformation"
            },
            "description": "The parameters to submit a job."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/JobInformation"
            }
          }
        }
      }
    },
    "/Jobs": {
      "get": {
        "tags": [
          "Job"
        ],
        "operationId": "Job_List",
        "description": "Lists the jobs, if any, associated with the specified Data Lake Analytics account. The response includes a link to the next page of results, if any.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter. Optional."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of items to return. Optional."
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of items to skip over before returning elements. Optional."
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData expansion. Expand related resources in line with the retrieved resources, e.g. Categories/$expand=Products would expand Product data in line with each Category entry. Optional."
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional."
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional."
          },
          {
            "name": "$count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional."
          },
          {
            "name": "$search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A free form search. A free-text search expression to match for whether a particular entry should be included in the feed, e.g. Categories?$search=blue OR green. Optional."
          },
          {
            "name": "$format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The return format. Return the response in particular formatxii without access to request headers for standard content-type negotiation (e.g Orders?$format=json). Optional."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/JobInfoListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/JobInformation"
      }
    }
  },
  "definitions": {
    "JobStatisticsVertexStage": {
      "properties": {
        "dataRead": {
          "type": "integer",
          "readOnly": true,
          "format": "int64",
          "description": "Gets the amount of data read, in bytes."
        },
        "dataReadCrossPod": {
          "type": "integer",
          "readOnly": true,
          "format": "int64",
          "description": "Gets the amount of data read across multiple pods, in bytes."
        },
        "dataReadIntraPod": {
          "type": "integer",
          "readOnly": true,
          "format": "int64",
          "description": "Gets the amount of data read in one pod, in bytes."
        },
        "dataToRead": {
          "type": "integer",
          "readOnly": true,
          "format": "int64",
          "description": "Gets the amount of data remaining to be read, in bytes."
        },
        "dataWritten": {
          "type": "integer",
          "readOnly": true,
          "format": "int64",
          "description": "Gets the amount of data written, in bytes."
        },
        "duplicateDiscardCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "Gets the number of duplicates that were discarded."
        },
        "failedCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "Gets the number of failures that occured in this stage."
        },
        "maxVertexDataRead": {
          "type": "integer",
          "readOnly": true,
          "format": "int64",
          "description": "Gets the maximum amount of data read in a single vertex, in bytes."
        },
        "minVertexDataRead": {
          "type": "integer",
          "readOnly": true,
          "format": "int64",
          "description": "Gets the minimum amount of data read in a single vertex, in bytes."
        },
        "readFailureCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "Gets the number of read failures in this stage."
        },
        "revocationCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "Gets the number of vertices that were revoked during this stage."
        },
        "runningCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "Gets the number of currently running vertices in this stage."
        },
        "scheduledCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "Gets the number of currently scheduled vertices in this stage"
        },
        "stageName": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the name of this stage in job execution."
        },
        "succeededCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "Gets the number of vertices that succeeded in this stage."
        },
        "tempDataWritten": {
          "type": "integer",
          "readOnly": true,
          "format": "int64",
          "description": "Gets the amount of temporary data written, in bytes."
        },
        "totalCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "Gets the total vertex count for this stage."
        },
        "totalFailedTime": {
          "type": "string",
          "readOnly": true,
          "format": "non-iso-duration",
          "description": "Gets the amount of time that failed vertices took up in this stage."
        },
        "totalProgress": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "Gets the current progress of this stage, as a percentage."
        },
        "totalSucceededTime": {
          "type": "string",
          "readOnly": true,
          "format": "non-iso-duration",
          "description": "Gets the amount of time all successful vertices took in this stage."
        }
      },
      "description": "The Data Lake Analytics U-SQL job statistics vertex stage information."
    },
    "JobStatistics": {
      "properties": {
        "lastUpdateTimeUtc": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "Gets the last update time for the statistics."
        },
        "stages": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/JobStatisticsVertexStage"
          },
          "description": "Gets the list of stages for the job."
        }
      },
      "description": "The Data Lake Analytics U-SQL job execution statistics."
    },
    "JobDataPath": {
      "properties": {
        "jobId": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "description": "Gets the id of the job this data is for."
        },
        "command": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the command that this job data relates to."
        },
        "paths": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "description": "Gets the list of paths to all of the job data."
        }
      },
      "description": "A Data Lake Analytics U-SQL job data path item."
    },
    "JobStateAuditRecord": {
      "properties": {
        "newState": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the new state the job is in."
        },
        "timeStamp": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "Gets the time stamp that the state change took place."
        },
        "requestedByUser": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the user who requests the change."
        },
        "details": {
          "type": "string",
          "readOnly": true,
          "description": "Gets  the details of the audit log."
        }
      },
      "description": "The Data Lake Analytics U-SQL job state audit records for tracking the lifecycle of a job."
    },
    "JobResource": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or set the name of the resource."
        },
        "resourcePath": {
          "type": "string",
          "description": "Gets or sets the path to the resource."
        },
        "type": {
          "type": "string",
          "description": "Gets or sets the job resource type.",
          "enum": [
            "VertexResource",
            "StatisticsResource"
          ],
          "x-ms-enum": {
            "name": "JobResourceType",
            "modelAsString": false
          }
        }
      },
      "description": "The Data Lake Analytics U-SQL job resources."
    },
    "USqlJobProperties": {
      "x-ms-discriminator-value": "USql",
      "allOf": [
        {
          "$ref": "#/definitions/JobProperties"
        }
      ],
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobResource"
          },
          "description": "Gets or sets the list of resources that are required by the job"
        },
        "statistics": {
          "$ref": "#/definitions/JobStatistics",
          "description": "Gets or sets the job specific statistics."
        },
        "debugData": {
          "$ref": "#/definitions/JobDataPath",
          "description": "Gets or sets the job specific debug data locations."
        },
        "algebraFilePath": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the U-SQL algebra file path after the job has completed"
        },
        "totalCompilationTime": {
          "type": "string",
          "format": "non-iso-duration",
          "readOnly": true,
          "description": "Gets the total time this job spent compiling. This value should not be set by the user and will be ignored if it is."
        },
        "totalPauseTime": {
          "type": "string",
          "format": "non-iso-duration",
          "readOnly": true,
          "description": "Gets the total time this job spent paused. This value should not be set by the user and will be ignored if it is."
        },
        "totalQueuedTime": {
          "type": "string",
          "format": "non-iso-duration",
          "readOnly": true,
          "description": "Gets the total time this job spent queued. This value should not be set by the user and will be ignored if it is."
        },
        "totalRunningTime": {
          "type": "string",
          "format": "non-iso-duration",
          "readOnly": true,
          "description": "Gets the total time this job spent executing. This value should not be set by the user and will be ignored if it is."
        },
        "rootProcessNodeId": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the ID used to identify the job manager coordinating job execution. This value should not be set by the user and will be ignored if it is."
        },
        "yarnApplicationId": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the ID used to identify the yarn application executing the job. This value should not be set by the user and will be ignored if it is."
        },
        "yarnApplicationTimeStamp": {
          "type": "integer",
          "readOnly": true,
          "format": "int64",
          "description": "Gets the timestamp (in ticks) for the yarn application executing the job. This value should not be set by the user and will be ignored if it is."
        },
        "compileMode": {
          "type": "string",
          "description": "Gets or sets the compile mode for the job.",
          "enum": [
            "Semantic",
            "Full",
            "SingleBox"
          ],
          "x-ms-enum": {
            "name": "CompileMode",
            "modelAsString": false
          }
        }
      }
    },
    "HiveJobStatementInfo": {
      "properties": {
        "logLocation": {
          "type": "string",
          "description": "Gets or sets the log location for this statement."
        },
        "resultPreviewLocation": {
          "type": "string",
          "description": "Gets or sets the result preview location for this statement."
        },
        "resultLocation": {
          "type": "string",
          "description": "Gets or sets the result location for this statement."
        },
        "errorMessage": {
          "type": "string",
          "description": "Gets or sets the error message for this statement."
        }
      }
    },
    "HiveJobProperties": {
      "x-ms-discriminator-value": "Hive",
      "allOf": [
        {
          "$ref": "#/definitions/JobProperties"
        }
      ],
      "properties": {
        "statementInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HiveJobStatementInfo"
          },
          "description": "Gets or sets the statement information for each statement in the script"
        },
        "logsLocation": {
          "type": "string",
          "description": "Gets or sets the Hive logs location"
        },
        "warehouseLocation": {
          "type": "string",
          "description": "Gets or sets the runtime version of the U-SQL engine to use"
        },
        "statementCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of statements that will be run based on the script"
        },
        "executedStatementCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of statements that have been run based on the script"
        }
      }
    },
    "JobProperties": {
      "discriminator": "type",
      "required": [
        "script",
        "type"
      ],
      "properties": {
        "runtimeVersion": {
          "type": "string",
          "description": "Gets or sets the runtime version of the U-SQL engine to use"
        },
        "script": {
          "type": "string",
          "description": "Gets or sets the U-SQL script to run"
        },
        "type": {
          "type": "string",
          "description": "Gets or sets the job type of the current job (i.e. Hive or U-SQL)."
        }
      },
      "description": "The common Data Lake Analytics job properties."
    },
    "JobErrorDetails": {
      "properties": {
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the error message description"
        },
        "details": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the details of the error message."
        },
        "endOffset": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "Gets the end offset in the job where the error was found."
        },
        "errorId": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the specific identifier for the type of error encountered in the job."
        },
        "filePath": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the path to any supplemental error files, if any."
        },
        "helpLink": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the link to MSDN or Azure help for this type of error, if any."
        },
        "internalDiagnostics": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the internal diagnostic stack trace if the user requesting the job error details has sufficient permissions it will be retrieved, otherwise it will be empty."
        },
        "lineNumber": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "Gets the specific line number in the job where the error occured."
        },
        "message": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the user friendly error message for the failure."
        },
        "resolution": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the recommended resolution for the failure, if any."
        },
        "InnerError": {
          "$ref": "#/definitions/JobInnerError",
          "readOnly": true,
          "description": "Gets the inner error of this specific job error message, if any."
        },
        "severity": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the severity level of the failure.",
          "enum": [
            "Warning",
            "Error"
          ],
          "x-ms-enum": {
            "name": "SeverityTypes",
            "modelAsString": false
          }
        },
        "source": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the ultimate source of the failure (usually either SYSTEM or USER)."
        },
        "startOffset": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "Gets the start offset in the job where the error was found"
        }
      },
      "description": "The Data Lake Analytics job error details."
    },
    "JobInnerError": {
      "properties": {
        "diagnosticCode": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "Gets the diagnostic error code."
        },
        "severity": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the severity level of the failure.",
          "enum": [
            "Warning",
            "Error"
          ],
          "x-ms-enum": {
            "name": "SeverityTypes",
            "modelAsString": false
          }
        },
        "details": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the details of the error message."
        },
        "component": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the component that failed."
        },
        "errorId": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the specific identifier for the type of error encountered in the job."
        },
        "helpLink": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the link to MSDN or Azure help for this type of error, if any."
        },
        "internalDiagnostics": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the internal diagnostic stack trace if the user requesting the job error details has sufficient permissions it will be retrieved, otherwise it will be empty."
        },
        "message": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the user friendly error message for the failure."
        },
        "resolution": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the recommended resolution for the failure, if any."
        },
        "source": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the ultimate source of the failure (usually either SYSTEM or USER)."
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the error message description"
        }
      },
      "description": "The Data Lake Analytics job error details."
    },
    "JobInformation": {
      "properties": {
        "jobId": {
          "type": "string",
          "format": "uuid",
          "description": "Gets or sets the job's unique identifier (a GUID)."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the friendly name of the job."
        },
        "type": {
          "type": "string",
          "description": "Gets or sets the job type of the current job (Hive or USql).",
          "enum": [
            "USql",
            "Hive"
          ],
          "x-ms-enum": {
            "name": "JobType",
            "modelAsString": false
          }
        },
        "submitter": {
          "type": "string",
          "description": "Gets or sets the user or account that submitted the job."
        },
        "errorMessage": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/JobErrorDetails"
          },
          "description": "Gets the error message details for the job, if the job failed."
        },
        "degreeOfParallelism": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the degree of parallelism used for this job. This must be greater than 0."
        },
        "degreeOfParallelismPercent": {
          "type": "number",
          "format": "double",
          "description": "the degree of parallelism in percentage used for this job."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the priority value for the current job. Lower numbers have a higher priority. By default, a job has a priority of 1000. This must be greater than 0."
        },
        "submitTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "Gets the time the job was submitted to the service."
        },
        "startTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "Gets the start time of the job."
        },
        "endTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "Gets the completion time of the job."
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the job state. When the job is in the Ended state, refer to Result and ErrorMessage for details.",
          "enum": [
            "Accepted",
            "Compiling",
            "Ended",
            "New",
            "Queued",
            "Running",
            "Scheduling",
            "Starting",
            "Paused",
            "WaitingForCapacity"
          ],
          "x-ms-enum": {
            "name": "JobState",
            "modelAsString": false
          }
        },
        "result": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the result of job execution or the current result of the running job.",
          "enum": [
            "None",
            "Succeeded",
            "Cancelled",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "JobResult",
            "modelAsString": false
          }
        },
        "stateAuditRecords": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/JobStateAuditRecord"
          },
          "description": "Gets the job state audit records, indicating when various operations have been performed on this job."
        },
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "Gets or sets the job specific properties."
        }
      },
      "required": [
        "name",
        "type",
        "properties"
      ],
      "description": "The common Data Lake Analytics job information properties."
    },
    "JobInfoListResult": {
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/JobInformation"
          },
          "description": "Gets the list of jobInfo items."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the link (url) to the next page of results."
        },
        "count": {
          "type": "integer",
          "readOnly": true,
          "format": "int64",
          "description": "Gets the total count of results that are available, but might not be returned in the current page."
        }
      },
      "description": "List of jobInfo items."
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    },
    "adlaJobDnsSuffixInPath": {
      "name": "adlaJobDnsSuffix",
      "in": "path",
      "required": true,
      "type": "string",
      "default": "azuredatalakeanalytics.net",
      "x-ms-skip-url-encoding": true,
      "description": "Gets the DNS suffix used as the base for all Azure Data Lake Analytics Job service requests.",
      "x-ms-parameter-location": "client"
    }
  }
}