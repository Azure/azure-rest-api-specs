{   
    "swagger": "2.0",
    "info": {
        "title": "InstanceMetadataClient",
        "description": "The Azure Instance Metadata Client.",
        "version": "2018-10-01"
    },
    "host": "169.254.169.254",
    "basePath": "/metadata",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/instance": {
            "get": {
                "operationId": "instance",
                "description": "Get Instance Metadata for the Virtual Machine.",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "description": "This is the version of API to invoke."
                    },
                    {
                        "name": "Metadata",
                        "in": "header",
                        "type": "string",
                        "enum": [
                            "true"
                        ],
                        "description": "This must be set to 'true'.",
                        "required": true
                    }   
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/instance"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Instance Metadata for the VM": {
                        "$ref": "./examples/getinstancemetadata.json"
                    }
                }
            }
        },
        "/attested/document": {
            "get": {
                "operationId": "attested",
                "description": "Get Attested Data for the Virtual Machine.",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "description": "This is the version of API to invoke."
                    },
                    {
                        "name": "nonce",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "10-digit random number."
                    },
                    {
                        "name": "Metadata",
                        "in": "header",
                        "type": "string",
                        "enum": [
                            "true"
                        ],
                        "description": "This must be set to 'true'.",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/attested"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Attested Data for the VM": {
                        "$ref": "./examples/getattesteddata.json"
                    }
                }
            }
        },
        "/identity/oauth2/token": {
            "get": {
                "tags": [
                    "Get token"
                ],
                "summary": "Get a Token from Azure AD",
                "description": "",
                "operationId": "getToken",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Metadata",
                        "in": "header",
                        "type": "string",
                        "enum": [
                            "true"
                        ],
                        "description": "This must be set to 'true'.",
                        "required": true
                    },
                    {
                        "name": "resource",
                        "in": "query",
                        "type": "string",
                        "description": "This is the urlencoded identifier URI of the sink resource for the requested Azure AD token. The resulting token contains the corresponding aud for this resource.",
                        "required": true
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "2018-02-01",
                            "2018-04-02",
                            "2018-10-01"
                        ],
                        "description": "This is the API version to use.",
                        "required": true
                    },
                    {
                        "name": "client_id",
                        "in": "query",
                        "type": "string",
                        "description": "This identifies, by Azure AD client id, a specific explicit identity to use when authenticating to Azure AD. Mutually exclusive with object_id and msi_res_id.",
                        "required": false
                    },
                    {
                        "name": "object_id",
                        "in": "query",
                        "type": "string",
                        "description": "This identifies, by Azure AD object id, a specific explicit identity to use when authenticating to Azure AD. Mutually exclusive with client_id and msi_res_id.",
                        "required": false
                    },
                    {
                        "name": "msi_res_id",
                        "in": "query",
                        "type": "string",
                        "description": "This identifies, by urlencoded ARM resource id, a specific explicit identity to use when authenticating to Azure AD. Mutually exclusive with client_id and object_id.",
                        "required": false
                    },
                    {
                        "name": "authority",
                        "in": "query",
                        "type": "string",
                        "description": "This indicates the authority to request AAD tokens from. Defaults to the known authority of the identity to be used.",
                        "required": false
                    },
                    {
                        "name": "bypass_cache",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "true"
                        ],
                        "description": "If provided, the value must be 'true'. This indicates to the server that the token must be retrieved from Azure AD and cannot be retrieved from an internal cache.",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Identity Token for the VM": {
                        "$ref": "./examples/getidentitytoken.json"
                    }
                }
            }
        },
        "/identity/info": {
            "get": {
                "tags": [
                    "Get metadata information"
                ],
                "summary": "Get information about AAD Metadata",
                "description": "",
                "operationId": "getInfo",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Metadata",
                        "in": "header",
                        "type": "string",
                        "enum": [
                            "true"
                        ],
                        "description": "This must be set to 'true'.",
                        "required": true
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "2018-02-01",
                            "2018-04-02",
                            "2018-10-01"
                        ],
                        "description": "This is the API version to use.",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/InfoResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Identity Info for the VM": {
                        "$ref": "./examples/getidentityinfo.json"
                    }
                }
            }
        }
    },
    "definitions": {
        "compute": {
            "type": "object",
            "properties": {
                "azEnvironment": {
                    "type": "string",
                    "description": "This is the name of the environment in which the VM is running."
                },
                "location": {
                    "type": "string",
                    "format": "string",
                    "description": "This is the Azure Region in which the VM is running."
                },
                "name": {
                    "type": "string",
                    "format": "string",
                    "description": "This is the name of the VM."
                },
                "offer": {
                    "type": "string",
                    "format": "string",
                    "description": "This is the offer information for the VM image. This value is only present for images deployed from the Azure Image Gallery."
                },
                "osType": {
                    "type": "string",
                    "format": "string",
                    "description": "This value indicates the type of OS the VM is running, either Linux or Windows."
                },
                "placementGroupId": {
                    "type": "string",
                    "format": "string",
                    "description": "This is the placement group of your Virtual Machine Scale Set."
                },
                "plan": {
                    "type": "object",
                    "$ref": "#/definitions/planProperties"
                },
                "publicKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/publicKeysProperties"
                    },
                    "description": "This is information about the SSH certificate"
                },
                "platformFaultDomain": {
                    "type": "string",
                    "format": "string",
                    "description": "This is the fault domain in which the VM."
                },
                "platformUpdateDomain": {
                    "type": "string",
                    "format": "string",
                    "description": "This is the update domain in which the VM."
                },
                "publisher": {
                    "type": "string",
                    "format": "string",
                    "description": "This is the publisher of the VM image."
                },          
                "resourceGroupName": {
                    "type": "string",
                    "format": "string",
                    "description": "This is the resource group for the VM."
                },
                "sku": {
                    "type": "string",
                    "format": "string",
                    "description": "This is the specific SKU for the VM image."
                },          
                "subscriptionId": {
                    "type": "string",
                    "format": "string",
                    "description": "This is the Azure subscription for the VM."
                },
                "tags": {
                    "type": "string",
                    "format": "string",
                    "description": "This is the list of tags for your VM."
                },
                "version": {
                    "type": "string",
                    "format": "string",
                    "description": "This is the version of the VM image."
                },
                "vmId": {
                    "type": "string",
                    "format": "string",
                    "description": "This is the unique identifier for the VM."
                },
                "vmScaleSetName": { 
                    "type": "string",
                    "format": "string",
                    "description": "This is the resource name of the VMSS."
                },
                "vmSize": {
                    "type": "string",
                    "format": "string",
                    "description": "This is the size of the VM."
                },
                "zone": {
                    "type":"string",
                    "description":"This is the availability zone of the VM."
                }
            }, 
            "description": "Compute Metadata"
        },
        "network": {
            "type": "object",
            "properties": {
                "interface": {
                    "type":"array",
                    "items": {
                        "type": "object",
                        "$ref": "#/definitions/networkInterface"
                    }
                }            
            },
            "description": "Network Metadata"
        },
        "networkInterface": {
            "type": "object",
            "properties": {
                "ipv4": {
                    "type":"object",
                    "properties": { 
                        "ipAddress": { 
                            "type":"array",
                            "items": {
                                "type": "object",
                                "$ref":"#/definitions/ipv4Properties"
                            }
                        },
                        "subnet": {
                            "type":"array",
                            "items": {
                                "type": "object",
                                "$ref": "#/definitions/subnetProperties"
                            }
                        }
                    }
                },
                "ipv6": {
                    "type":"object",
                    "properties": { 
                        "ipAddress": { 
                            "type":"array",
                            "items": {
                                "type": "object",
                                "$ref":"#/definitions/ipv6Properties"
                            }
                        }
                    }
                },
                "macAddress": {
                    "type":"string",
                    "description":"This is the MAC address of the interface."
                }
            }
        },
        "planProperties": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "This is the Plan ID."
                },
                "publisher": {
                    "type": "string",
                    "description": "This is the publisher ID."
                },
                "product": {
                    "type": "string",
                    "description": "This is the product of the image from the Marketplace."
                }
            }
        },
        "publicKeysProperties": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string",
                    "description": "This specifies the full path on the VM where the SSH public key is stored."
                },
                "keyData": {
                    "type": "string",
                    "description": "This is the SSH public key certificate used to authenticate with the VM."
                }
            }
        },
        "ipv4Properties": {
            "type": "object",
            "properties": { 
                "privateIpAddress": {
                    "type":"string",
                    "description":"This is the private IP address assigned to the interface."
                 },
                "publicIpAddress": { 
                    "type":"string",
                    "description":"This is the public IP address assigned to the interface."
                }
            }
        },
        "ipv6Properties": {
            "type": "object",
            "properties": { 
                "privateIpAddress": {
                    "type":"string",
                    "description":"This is the private IPV6 address assigned to the interface."
                }
            }
        },
        "subnetProperties": {
            "type": "object",
            "properties": { 
                "address": {
                    "type":"string",
                    "description":"This is the address range of the subnet."
                },
                "prefix": { 
                    "type":"string",
                    "description":"This is the prefix of the subnet."
                }
            }
        },
        "instance": {
            "type": "object",
            "properties": {
                "compute": {
                    "$ref": "#/definitions/compute",
                    "description": "Compute Metadata"
                },
                "network": {
                    "$ref": "#/definitions/network",
                    "description": "Network Metadata" 
                }
            }
        },
        "attested": {
            "type": "object",
            "properties": {
                "signature": {
                    "type": "string",
                    "description": "This is the encoded string containing the VM ID, plan information, and nonce value."
                },
                "encoding": {
                    "type": "string",
                    "description": "This is the encoding scheme of the signature."               
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "description": "Error code",
                    "enum": [
                        "invalid_request",
                        "unauthorize_client",
                        "access_denied",
                        "unsupported_response_type",
                        "invalid_scope",
                        "server_error",
                        "service_unavailable",
                        "bad_request",
                        "forbidden",
                        "not_found",
                        "method_not_allowed",
                        "too_many_requests"
                    ]
                },
                "error_description": {
                    "type": "string",
                    "description": "Error description"
                }
            }
        },
        "TokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "description": "This is the requested access token. The app can use this token to authenticate to the sink resource."
                },
                "expires_in": {
                    "type": "string",
                    "description": "This is how long the access token is valid (in seconds)."
                },
                "expires_on": {
                    "type": "string",
                    "description": "This is the time when the access token expires. The date is represented as the number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time. This value is used to determine the lifetime of cached tokens."
                },
                "ext_expires_in": {
                    "type": "string",
                    "description": "This indicates the extended lifetime of the token."
                },
                "not_before": {
                    "type": "string",
                    "description": "This is the time when the access token becomes effective. The date is represented as the number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time."
                },
                "resource": {
                    "type": "string",
                    "description": "This is the app ID URI of the sink resource."
                },
                "token_type": {
                    "type": "string",
                    "description": "This indicates the token type value."
                },
                "client_id": {
                    "type": "string",
                    "description": "This is the client_id specified in the request, if any."
                },
                "object_id": {
                    "type": "string",
                    "description": "This is the object_id specified in the request, if any."
                },
                "msi_res_id": {
                    "type": "string",
                    "description": "This is the msi_res_id specified in the request, if any."
                }
            }
        },
        "InfoResponse": {
            "type": "object",
            "properties": {
                "tenantId": {
                    "type": "string",
                    "description": "This is the AAD tenantId of the identity of the caller."
                }
            }           
        }
    }
}