{
  "swagger": "2.0",
  "info": {
    "title": "App Compliance Automation Tool for Microsoft 365",
    "version": "2023-02-15-preview",
    "description": "App Compliance Automation Tool for Microsoft 365 API spec"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.AppComplianceAutomation/operations": {
      "get": {
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Lists all of the available REST API operations of the Microsoft.AppComplianceAutomation provider.",
        "operationId": "Operations_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/onboard": {
      "post": {
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Onboard given subscriptions to Microsoft.AppComplianceAutomation provider.",
        "operationId": "Onboard",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for onboard operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OnboardRequest"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response indicates given subscriptions has been onboarded.",
            "schema": {
              "$ref": "#/definitions/OnboardResponse"
            }
          },
          "202": {
            "description": "Accepted. The response indicates the onboard operation is performed in the background."
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Onboard": {
            "$ref": "./examples/Onboard.json"
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/triggerEvaluation": {
      "post": {
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Trigger evaluation for given resourceIds to get quick compliance result.",
        "operationId": "TriggerEvaluation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for trigger evaluation operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TriggerEvaluationRequest"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response indicates given resource ids' evaluation has been triggered.",
            "schema": {
              "$ref": "#/definitions/TriggerEvaluationResponse"
            }
          },
          "202": {
            "description": "Accepted. The response indicates the trigger evaluation operation is performed in the background."
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "TriggerEvaluation": {
            "$ref": "./examples/TriggerEvaluation.json"
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/reports": {
      "get": {
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Get the AppComplianceAutomation report list for the tenant.",
        "operationId": "Reports_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SkipTokenParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          },
          {
            "$ref": "#/parameters/SelectParameter"
          },
          {
            "$ref": "#/parameters/OfferGuidParameter"
          },
          {
            "$ref": "#/parameters/ReportCreatorTenantIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ReportResourceList"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Reports_List": {
            "$ref": "./examples/Reports_List.json"
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/reports/{reportName}": {
      "get": {
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Get the AppComplianceAutomation report and its properties.",
        "operationId": "Reports_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ReportNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ReportResource"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Report_Get": {
            "$ref": "./examples/Report_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Create a new AppComplianceAutomation report or update an exiting AppComplianceAutomation report.",
        "operationId": "Reports_CreateOrUpdate",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportResource"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ReportNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes a AppComplianceAutomation report.",
            "schema": {
              "$ref": "#/definitions/ReportResource"
            }
          },
          "201": {
            "description": "Created. The response describes the new service and contains a Location header to query the operation result.",
            "schema": {
              "$ref": "#/definitions/ReportResource"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Report_CreateOrUpdate": {
            "$ref": "./examples/Report_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Update an exiting AppComplianceAutomation report.",
        "operationId": "Reports_Update",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportResourcePatch"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ReportNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes a AppComplianceAutomation report.",
            "schema": {
              "$ref": "#/definitions/ReportResource"
            }
          },
          "201": {
            "description": "Long running operation support.",
            "schema": {
              "$ref": "#/definitions/ReportResource"
            }
          },
          "202": {
            "description": "Long running operation support."
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Report_Update": {
            "$ref": "./examples/Report_Update.json"
          }
        }
      },
      "delete": {
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Delete an AppComplianceAutomation report.",
        "operationId": "Reports_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ReportNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response indicates the resource has been deleted."
          },
          "202": {
            "description": "Accepted. The response indicates the delete operation is performed in the background."
          },
          "204": {
            "description": "Success. The response indicates the resource is already deleted."
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Report_Delete": {
            "$ref": "./examples/Report_Delete.json"
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/webhooks": {
      "get": {
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Get the AppComplianceAutomation webhook list.",
        "operationId": "Webhooks_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ReportNameParameter"
          },
          {
            "$ref": "#/parameters/SkipTokenParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          },
          {
            "$ref": "#/parameters/SelectParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/WebhookResourceList"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Webhooks_List": {
            "$ref": "./examples/Webhooks_List.json"
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/webhooks/{webhookName}": {
      "get": {
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Get the AppComplianceAutomation webhook and its properties.",
        "operationId": "Webhooks_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ReportNameParameter"
          },
          {
            "$ref": "#/parameters/WebhookNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/WebhookResource"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Webhook_Get": {
            "$ref": "./examples/Webhook_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Create a new AppComplianceAutomation webhook or update an exiting AppComplianceAutomation webhook.",
        "operationId": "Webhooks_CreateOrUpdate",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebhookResource"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ReportNameParameter"
          },
          {
            "$ref": "#/parameters/WebhookNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes a AppComplianceAutomation webhook.",
            "schema": {
              "$ref": "#/definitions/WebhookResource"
            }
          },
          "201": {
            "description": "Created. The response describes a AppComplianceAutomation webhook.",
            "schema": {
              "$ref": "#/definitions/WebhookResource"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Webhook_CreateOrUpdate": {
            "$ref": "./examples/Webhook_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Update an exiting AppComplianceAutomation webhook.",
        "operationId": "Webhooks_Update",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebhookResourcePatch"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ReportNameParameter"
          },
          {
            "$ref": "#/parameters/WebhookNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes a AppComplianceAutomation webhook.",
            "schema": {
              "$ref": "#/definitions/WebhookResource"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Webhook_Update": {
            "$ref": "./examples/Webhook_Update.json"
          }
        }
      },
      "delete": {
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Delete an AppComplianceAutomation webhook.",
        "operationId": "Webhooks_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ReportNameParameter"
          },
          {
            "$ref": "#/parameters/WebhookNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response indicates the resource has been deleted."
          },
          "204": {
            "description": "Success. The response indicates the resource is already deleted."
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Webhook_Delete": {
            "$ref": "./examples/Webhook_Delete.json"
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/snapshots": {
      "get": {
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Get the AppComplianceAutomation snapshot list.",
        "operationId": "Snapshots_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ReportNameParameter"
          },
          {
            "$ref": "#/parameters/SkipTokenParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          },
          {
            "$ref": "#/parameters/SelectParameter"
          },
          {
            "$ref": "#/parameters/ReportCreatorTenantIdParameter"
          },
          {
            "$ref": "#/parameters/OfferGuidParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/SnapshotResourceList"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Snapshots_List": {
            "$ref": "./examples/Snapshots_List.json"
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/snapshots/{snapshotName}": {
      "get": {
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Get the AppComplianceAutomation snapshot and its properties.",
        "operationId": "Snapshots_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ReportNameParameter"
          },
          {
            "$ref": "#/parameters/SnapshotNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/SnapshotResource"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Snapshot_Get": {
            "$ref": "./examples/Snapshot_Get.json"
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/snapshots/{snapshotName}/download": {
      "post": {
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Download compliance needs from snapshot, like: Compliance Report, Resource List.",
        "operationId": "Snapshots_Download",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ReportNameParameter"
          },
          {
            "$ref": "#/parameters/SnapshotNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the query operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotDownloadRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/DownloadResponse"
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting AppComplianceAutomation report is now updating and contains a Location header to query the operation result."
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Snapshot_Download_ComplianceReport": {
            "$ref": "./examples/Snapshot_ComplianceReport_Download.json"
          },
          "Snapshot_Download_CompliancePdfReport": {
            "$ref": "./examples/Snapshot_CompliancePdfReport_Download.json"
          },
          "Snapshot_Download_ComplianceDetailedPdfReport": {
            "$ref": "./examples/Snapshot_ComplianceDetailedPdfReport_Download.json"
          },
          "Snapshot_Download_ResourceList": {
            "$ref": "./examples/Snapshot_ResourceList_Download.json"
          }
        }
      }
    }
  },
  "definitions": {
    "OverviewStatus": {
      "description": "The overview of the compliance result for one report.",
      "type": "object",
      "properties": {
        "passedCount": {
          "format": "int32",
          "type": "integer",
          "description": "The count of all passed full automation control."
        },
        "failedCount": {
          "format": "int32",
          "type": "integer",
          "description": "The count of all failed full automation control."
        },
        "manualCount": {
          "format": "int32",
          "type": "integer",
          "description": "The count of all manual control."
        }
      }
    },
    "ReportComplianceStatus": {
      "type": "object",
      "readOnly": true,
      "description": "A list which includes all the compliance result for one report.",
      "properties": {
        "m365": {
          "description": "The Microsoft 365 certification name.",
          "$ref": "#/definitions/OverviewStatus"
        }
      }
    },
    "ResourceMetadata": {
      "type": "object",
      "description": "Single resource Id's metadata.",
      "required": [
        "resourceId"
      ],
      "properties": {
        "resourceId": {
          "description": "Resource Id - e.g. \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1\".",
          "type": "string"
        },
        "resourceType": {
          "description": "Resource type. e.g. \"Microsoft.Compute/virtualMachines\"",
          "type": "string"
        },
        "resourceKind": {
          "description": "Resource kind.",
          "type": "string"
        },
        "resourceOrigin": {
          "description": "Resource Origin.",
          "enum": [
            "Azure",
            "AWS",
            "GCP"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ResourceOrigin",
            "modelAsString": true
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource's tag type.",
          "additionalProperties": {
            "description": "Tag properties.",
            "type": "string"
          }
        }
      }
    },
    "ReportProperties": {
      "type": "object",
      "description": "Report's properties.",
      "required": [
        "timeZone",
        "triggerTime",
        "resources"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Report id in database.",
          "readOnly": true
        },
        "status": {
          "description": "Report status.",
          "enum": [
            "Active",
            "Failed",
            "Disabled"
          ],
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "name": "ReportStatus",
            "modelAsString": true
          }
        },
        "tenantId": {
          "type": "string",
          "description": "Report's tenant id.",
          "readOnly": true
        },
        "reportName": {
          "description": "Report name.",
          "type": "string",
          "readOnly": true
        },
        "offerGuid": {
          "description": "Report offer Guid.",
          "type": "string"
        },
        "timeZone": {
          "type": "string",
          "description": "Report collection trigger time's time zone, the available list can be obtained by executing \"Get-TimeZone -ListAvailable\" in PowerShell.\r\nAn example of valid timezone id is \"Pacific Standard Time\"."
        },
        "triggerTime": {
          "format": "date-time",
          "description": "Report collection trigger time.",
          "type": "string"
        },
        "nextTriggerTime": {
          "format": "date-time",
          "type": "string",
          "description": "Report next collection trigger time.",
          "readOnly": true
        },
        "lastTriggerTime": {
          "format": "date-time",
          "type": "string",
          "description": "Report last collection trigger time.",
          "readOnly": true
        },
        "subscriptions": {
          "type": "array",
          "description": "List of subscription Ids.",
          "items": {
            "type": "string",
            "description": "Single subscription Id."
          },
          "readOnly": true
        },
        "resources": {
          "type": "array",
          "description": "List of resource data.",
          "items": {
            "description": "Single resource metadata.",
            "$ref": "#/definitions/ResourceMetadata"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        },
        "complianceStatus": {
          "readOnly": true,
          "description": "Report compliance status.",
          "$ref": "#/definitions/ReportComplianceStatus"
        },
        "provisioningState": {
          "readOnly": true,
          "description": "Azure lifecycle management",
          "$ref": "#/definitions/ProvisioningState"
        }
      }
    },
    "ReportResource": {
      "type": "object",
      "description": "A class represent an AppComplianceAutomation report resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Report property.",
          "$ref": "#/definitions/ReportProperties"
        }
      },
      "required": [
        "properties"
      ]
    },
    "WebhookProperties": {
      "type": "object",
      "description": "Webhook properties.",
      "required": [
        "status",
        "sendAllEvents",
        "events",
        "payloadUrl",
        "contentType",
        "enableSslVerification"
      ],
      "properties": {
        "webhookId": {
          "type": "string",
          "description": "Webhook id in database.",
          "readOnly": true
        },
        "webhookName": {
          "type": "string",
          "description": "Webhook name",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Webhook status.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "readOnly": false,
          "x-ms-enum": {
            "name": "WebhookStatus",
            "modelAsString": true
          }
        },
        "tenantId": {
          "type": "string",
          "description": "Tenant id.",
          "readOnly": true
        },
        "sendAllEvents": {
          "type": "string",
          "description": "whether to send notification under any event.",
          "enum": [
            "true",
            "false"
          ],
          "readOnly": false,
          "x-ms-enum": {
            "name": "SendAllEvents",
            "modelAsString": true
          }
        },
        "events": {
          "type": "array",
          "description": "under which event notification should be sent.",
          "readOnly": false,
          "items": {
            "description": "Single notification event.",
            "$ref": "#/definitions/NotificationEvent"
          }
        },
        "payloadUrl": {
          "type": "string",
          "description": "webhook payload url",
          "readOnly": false
        },
        "contentType": {
          "type": "string",
          "description": "content type",
          "enum": [
            "application/json"
          ],
          "readOnly": false,
          "x-ms-enum": {
            "name": "ContentType",
            "modelAsString": true
          }
        },
        "webhookKey": {
          "type": "string",
          "description": "webhook secret token. If not set, this field value is null; otherwise, please set a string value.",
          "readOnly": false,
          "x-ms-secret": true
        },
        "updateWebhookKey": {
          "type": "string",
          "description": "whether to update webhookKey.",
          "enum": [
            "true",
            "false"
          ],
          "readOnly": false,
          "x-ms-enum": {
            "name": "UpdateWebhookKey",
            "modelAsString": true
          }
        },
        "webhookKeyEnabled": {
          "type": "string",
          "description": "whether webhookKey is enabled.",
          "enum": [
            "true",
            "false"
          ],
          "readOnly": true,
          "x-ms-enum": {
            "name": "webhookKeyEnabled",
            "modelAsString": true
          }
        },
        "enableSslVerification": {
          "type": "string",
          "description": "whether to enable ssl verification",
          "enum": [
            "true",
            "false"
          ],
          "readOnly": false,
          "x-ms-enum": {
            "name": "EnableSslVerification",
            "modelAsString": true
          }
        },
        "deliveryStatus": {
          "type": "string",
          "description": "webhook deliveryStatus",
          "enum": [
            "Succeeded",
            "Failed",
            "NotStarted"
          ],
          "readOnly": true
        },
        "provisioningState": {
          "readOnly": true,
          "description": "Azure Resource Provisioning State",
          "$ref": "#/definitions/ProvisioningState"
        }
      }
    },
    "NotificationEvent": {
      "type": "string",
      "description": "notification event.",
      "enum": [
        "generate_snapshot_success",
        "generate_snapshot_failed",
        "assessment_failure",
        "report_configuration_changes",
        "report_deletion"
      ],
      "readOnly": false,
      "x-ms-enum": {
        "name": "NotificationEvent",
        "modelAsString": true
      }
    },
    "WebhookResource": {
      "type": "object",
      "description": "A class represent an AppComplianceAutomation webhook resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Webhook property.",
          "$ref": "#/definitions/WebhookProperties"
        }
      },
      "required": [
        "properties"
      ]
    },
    "ReportResourcePatch": {
      "type": "object",
      "description": "A class represent a AppComplianceAutomation report resource update properties.",
      "properties": {
        "properties": {
          "description": "Report property.",
          "$ref": "#/definitions/ReportProperties"
        }
      }
    },
    "WebhookResourcePatch": {
      "type": "object",
      "description": "A class represent a AppComplianceAutomation webhook resource update properties.",
      "properties": {
        "properties": {
          "description": "Webhook property.",
          "$ref": "#/definitions/WebhookProperties"
        }
      }
    },
    "CategoryStatus": {
      "description": "Indicates the category status.",
      "enum": [
        "Passed",
        "Failed",
        "NotApplicable",
        "PendingApproval"
      ],
      "readOnly": true,
      "type": "string",
      "x-ms-enum": {
        "name": "CategoryStatus",
        "modelAsString": true
      }
    },
    "ControlFamilyStatus": {
      "description": "Indicates the control family status.",
      "enum": [
        "Passed",
        "Failed",
        "NotApplicable",
        "PendingApproval"
      ],
      "readOnly": true,
      "type": "string",
      "x-ms-enum": {
        "name": "ControlFamilyStatus",
        "modelAsString": true
      }
    },
    "ControlStatus": {
      "description": "Indicates the control status.",
      "enum": [
        "Passed",
        "Failed",
        "NotApplicable",
        "PendingApproval"
      ],
      "readOnly": true,
      "type": "string",
      "x-ms-enum": {
        "name": "ControlStatus",
        "modelAsString": true
      }
    },
    "ResponsibilityType": {
      "description": "Indicates the customer responsibility type.",
      "enum": [
        "Automated",
        "Manual"
      ],
      "readOnly": true,
      "type": "string",
      "x-ms-enum": {
        "name": "ResponsibilityType",
        "modelAsString": true
      }
    },
    "ResponsibilitySeverity": {
      "description": "Indicates the customer responsibility severity.",
      "enum": [
        "High",
        "Medium",
        "Low"
      ],
      "readOnly": true,
      "type": "string",
      "x-ms-enum": {
        "name": "ResponsibilitySeverity",
        "modelAsString": true
      }
    },
    "ResponsibilityStatus": {
      "description": "Indicates the customer responsibility status.",
      "enum": [
        "Passed",
        "Failed",
        "NotApplicable",
        "PendingApproval"
      ],
      "readOnly": true,
      "type": "string",
      "x-ms-enum": {
        "name": "ResponsibilityStatus",
        "modelAsString": true
      }
    },
    "ResponsibilityEnvironment": {
      "description": "Indicates the customer responsibility supported cloud environment.",
      "enum": [
        "Azure",
        "AWS",
        "GCP",
        "General"
      ],
      "readOnly": true,
      "type": "string",
      "x-ms-enum": {
        "name": "ResponsibilityEnvironment",
        "modelAsString": true
      }
    },
    "ResourceOrigin": {
      "description": "Indicates the resource origin.",
      "enum": [
        "Azure",
        "AWS",
        "GCP"
      ],
      "readOnly": true,
      "type": "string",
      "x-ms-enum": {
        "name": "ResourceOrigin",
        "modelAsString": true
      }
    },
    "ResourceStatus": {
      "description": "Indicates the resource status.",
      "enum": [
        "Healthy",
        "Unhealthy"
      ],
      "readOnly": true,
      "type": "string",
      "x-ms-enum": {
        "name": "ResourceStatus",
        "modelAsString": true
      }
    },
    "Recommendation": {
      "type": "object",
      "description": "A class represent the recommendation.",
      "properties": {
        "recommendationId": {
          "description": "The Id of the recommendation.",
          "type": "string",
          "readOnly": true
        },
        "recommendationShortName": {
          "description": "The short name of the recommendation. e.g. \"Invalid TLS config\"",
          "type": "string",
          "readOnly": true
        },
        "recommendationSolutions": {
          "readOnly": true,
          "type": "array",
          "description": "List of recommendation solutions.",
          "items": {
            "description": "Single recommendation solution.",
            "$ref": "#/definitions/RecommendationSolution"
          },
          "x-ms-identifiers": [
            "recommendationSolutionIndex"
          ]
        }
      }
    },
    "RecommendationSolution": {
      "type": "object",
      "description": "A class represent the recommendation solution.",
      "properties": {
        "recommendationSolutionIndex": {
          "description": "The index of the recommendation solution.",
          "type": "string",
          "readOnly": true
        },
        "recommendationSolutionContent": {
          "description": "The detail steps of the recommendation solution.",
          "type": "string",
          "readOnly": true
        },
        "isRecommendSolution": {
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "readOnly": true,
          "description": "Indicates whether this solution is the recommended.",
          "x-ms-enum": {
            "name": "isRecommendSolution",
            "modelAsString": true
          }
        }
      }
    },
    "ResponsibilityResource": {
      "type": "object",
      "description": "A class represent the resource.",
      "properties": {
        "resourceId": {
          "description": "The Id of the resource.",
          "type": "string",
          "readOnly": true
        },
        "resourceType": {
          "description": "The type of the resource. e.g. \"Microsoft.SignalRService/SignalR\"",
          "type": "string",
          "readOnly": true
        },
        "resourceOrigin": {
          "description": "Resource origin.",
          "readOnly": true,
          "$ref": "#/definitions/ResourceOrigin"
        },
        "resourceStatus": {
          "description": "Resource status.",
          "readOnly": true,
          "$ref": "#/definitions/ResourceStatus"
        },
        "resourceStatusChangeDate": {
          "description": "The status change date for the resource.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "recommendationIds": {
          "description": "List of recommendation id.",
          "type": "array",
          "items": {
            "description": "Recommendation id",
            "type": "string"
          }
        }
      }
    },
    "Responsibility": {
      "type": "object",
      "description": "A class represent the customer responsibility.",
      "properties": {
        "responsibilityId": {
          "description": "The id of the customer responsibility.",
          "type": "string",
          "readOnly": true
        },
        "responsibilityTitle": {
          "description": "The title of the customer responsibility.",
          "type": "string",
          "readOnly": true
        },
        "responsibilityDescription": {
          "description": "The description of the customer responsibility.",
          "type": "string",
          "readOnly": true
        },
        "responsibilityType": {
          "$ref": "#/definitions/ResponsibilityType",
          "readOnly": true,
          "description": "The type of customer responsibility."
        },
        "responsibilitySeverity": {
          "$ref": "#/definitions/ResponsibilitySeverity",
          "readOnly": true,
          "description": "The severity level of this customer responsibility."
        },
        "responsibilityStatus": {
          "$ref": "#/definitions/ResponsibilityStatus",
          "readOnly": true,
          "description": "The status of this customer responsibility."
        },
        "responsibilityEnvironment": {
          "$ref": "#/definitions/ResponsibilityEnvironment",
          "readOnly": true,
          "description": "The supported cloud environment of this customer responsibility."
        },
        "failedResourceCount": {
          "format": "int32",
          "type": "integer",
          "description": "The count of all failed resources."
        },
        "totalResourceCount": {
          "format": "int32",
          "type": "integer",
          "description": "The count of all resources."
        },
        "resourceList": {
          "readOnly": true,
          "type": "array",
          "description": "List of resource.",
          "items": {
            "description": "Single resource metadata.",
            "$ref": "#/definitions/ResponsibilityResource"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        },
        "recommendationList": {
          "readOnly": true,
          "type": "array",
          "description": "List of recommendation.",
          "items": {
            "description": "Single recommendation.",
            "$ref": "#/definitions/Recommendation"
          },
          "x-ms-identifiers": [
            "recommendationId"
          ]
        },
        "guidance": {
          "description": "The evidence upload guidance description.",
          "type": "string",
          "readOnly": true
        },
        "justification": {
          "description": "The justification given by the user to clarify the reason.",
          "type": "string",
          "readOnly": true
        },
        "evidenceFiles": {
          "description": "List of evidence file url.",
          "type": "array",
          "items": {
            "description": "File url",
            "type": "string"
          }
        }
      }
    },
    "Control": {
      "type": "object",
      "description": "A class represent the control.",
      "properties": {
        "controlId": {
          "description": "The Id of the control. e.g. \"Operational Security#10\"",
          "type": "string",
          "readOnly": true
        },
        "controlName": {
          "description": "The name of the control. e.g. \"Unsupported OS and Software.\"",
          "type": "string",
          "readOnly": true
        },
        "controlFullName": {
          "description": "The full name of the control. e.g. \"Validate that unsupported operating systems and software components are not in use.\"",
          "type": "string",
          "readOnly": true
        },
        "controlDescription": {
          "description": "The control's description",
          "type": "string",
          "readOnly": true
        },
        "controlDescriptionHyperLink": {
          "description": "The hyper link to the control's description'.",
          "type": "string",
          "readOnly": true
        },
        "controlStatus": {
          "description": "Control status.",
          "$ref": "#/definitions/ControlStatus",
          "readOnly": true
        },
        "responsibilities": {
          "readOnly": true,
          "type": "array",
          "description": "List of customer responsibility.",
          "items": {
            "description": "Single customer responsibility content.",
            "$ref": "#/definitions/Responsibility"
          },
          "x-ms-identifiers": [
            "responsibilityId"
          ]
        }
      }
    },
    "ControlFamily": {
      "type": "object",
      "description": "A class represent the control family.",
      "properties": {
        "controlFamilyName": {
          "description": "The name of the control family. e.g. \"Malware Protection - Anti-Virus\"",
          "type": "string",
          "readOnly": true
        },
        "controlFamilyStatus": {
          "description": "The control family status ",
          "$ref": "#/definitions/ControlFamilyStatus",
          "readOnly": true
        },
        "controls": {
          "readOnly": true,
          "type": "array",
          "description": "List of controls.",
          "items": {
            "description": "Single control content.",
            "$ref": "#/definitions/Control"
          },
          "x-ms-identifiers": [
            "controlId"
          ]
        }
      }
    },
    "Category": {
      "type": "object",
      "description": "A class represent the compliance category.",
      "properties": {
        "categoryName": {
          "description": "The name of the compliance category. e.g. \"Operational Security\"",
          "type": "string",
          "readOnly": true
        },
        "categoryStatus": {
          "readOnly": true,
          "description": "Category status.",
          "$ref": "#/definitions/CategoryStatus"
        },
        "controlFamilies": {
          "readOnly": true,
          "type": "array",
          "description": "List of control families.",
          "items": {
            "description": "Single control family content.",
            "$ref": "#/definitions/ControlFamily"
          },
          "x-ms-identifiers": [
            "controlFamilyName"
          ]
        }
      }
    },
    "ComplianceResult": {
      "type": "object",
      "description": "A class represent the compliance result.",
      "properties": {
        "complianceName": {
          "description": "The name of the compliance. e.g. \"M365\"",
          "type": "string",
          "readOnly": true
        },
        "categories": {
          "readOnly": true,
          "type": "array",
          "description": "List of categories.",
          "items": {
            "description": "Single category content.",
            "$ref": "#/definitions/Category"
          },
          "x-ms-identifiers": [
            "categoryName"
          ]
        }
      }
    },
    "SnapshotDownloadRequest": {
      "type": "object",
      "description": "Snapshot's download request.",
      "required": [
        "downloadType"
      ],
      "properties": {
        "reportCreatorTenantId": {
          "description": "Tenant id.",
          "type": "string"
        },
        "downloadType": {
          "description": "Indicates the download type.",
          "x-ms-parameter-location": "method",
          "enum": [
            "ComplianceReport",
            "CompliancePdfReport",
            "ComplianceDetailedPdfReport",
            "ResourceList"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DownloadType",
            "modelAsString": true
          }
        },
        "offerGuid": {
          "type": "string",
          "description": "The offerGuid which mapping to the reports.",
          "x-ms-parameter-location": "method",
          "minLength": 1
        }
      }
    },
    "OnboardRequest": {
      "type": "object",
      "description": "Onboard subscriptions request.",
      "required": [
        "subscriptionIds"
      ],
      "properties": {
        "subscriptionIds": {
          "description": "List of subscription ids to be onboarded",
          "type": "array",
          "items": {
            "description": "Subscription id for onboard",
            "type": "string"
          }
        }
      }
    },
    "OnboardResponse": {
      "type": "object",
      "description": "Onboard subscriptions response.",
      "properties": {
        "subscriptionIds": {
          "description": "List of subscription ids that are onboarded",
          "type": "array",
          "items": {
            "description": "Subscription id for onboard",
            "type": "string"
          }
        }
      }
    },
    "TriggerEvaluationRequest": {
      "type": "object",
      "description": "Trigger evaluation request.",
      "required": [
        "resourceIds"
      ],
      "properties": {
        "resourceIds": {
          "description": "List of resource ids to be evaluated",
          "type": "array",
          "items": {
            "description": "Resource id for evaluation",
            "type": "string"
          }
        }
      }
    },
    "TriggerEvaluationResponse": {
      "type": "object",
      "description": "Trigger evaluation response.",
      "properties": {
        "triggerTime": {
          "description": "The time when the evaluation is triggered.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "evaluationEndTime": {
          "description": "The time when the evaluation is end.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "resourceIds": {
          "description": "List of resource ids to be evaluated",
          "type": "array",
          "items": {
            "description": "Resource id for evaluation",
            "type": "string"
          }
        },
        "quickAssessments": {
          "description": "List of quick assessments",
          "type": "array",
          "items": {
            "description": "Quick assessment.",
            "$ref": "#/definitions/QuickAssessment"
          }
        }
      }
    },
    "QuickAssessment": {
      "type": "object",
      "description": "A class represent the quick assessment.",
      "properties": {
        "resourceId": {
          "description": "Resource id.",
          "type": "string",
          "readOnly": true
        },
        "responsibilityId": {
          "description": "Responsibility id.",
          "type": "string",
          "readOnly": true
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC).",
          "readOnly": true
        },
        "resourceStatus": {
          "description": "Quick assessment status.",
          "$ref": "#/definitions/ResourceStatus",
          "readOnly": true
        },
        "displayName": {
          "description": "Quick assessment display name.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "Quick assessment display name.",
          "type": "string",
          "readOnly": true
        },
        "remediationLink": {
          "description": "Link to remediation steps for this quick assessment.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SnapshotProperties": {
      "type": "object",
      "description": "Snapshot's properties.",
      "properties": {
        "id": {
          "description": "Snapshot id in the database.",
          "type": "string",
          "readOnly": true
        },
        "snapshotName": {
          "description": "Snapshot name.",
          "type": "string",
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC).",
          "readOnly": true
        },
        "provisioningState": {
          "readOnly": true,
          "description": "Azure lifecycle management",
          "$ref": "#/definitions/ProvisioningState"
        },
        "reportProperties": {
          "readOnly": true,
          "description": "The report essential info.",
          "$ref": "#/definitions/ReportProperties"
        },
        "reportSystemData": {
          "readOnly": true,
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData"
        },
        "complianceResults": {
          "readOnly": true,
          "type": "array",
          "description": "List of compliance results.",
          "items": {
            "description": "Single compliance result.",
            "$ref": "#/definitions/ComplianceResult"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "SnapshotResource": {
      "type": "object",
      "description": "A class represent a AppComplianceAutomation snapshot resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Snapshot's property'.",
          "readOnly": true,
          "$ref": "#/definitions/SnapshotProperties"
        }
      }
    },
    "ReportResourceList": {
      "description": "Object that includes an array of resources and a possible link for next set.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of the reports",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ReportResource"
          }
        },
        "nextLink": {
          "description": "The URL the client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "WebhookResourceList": {
      "description": "Object that includes an array of resources and a possible link for next set.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of the webhooks",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/WebhookResource"
          }
        },
        "nextLink": {
          "description": "The URL the client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "SnapshotResourceList": {
      "description": "Object that includes an array of resources and a possible link for next set.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of the snapshots",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/SnapshotResource"
          }
        },
        "nextLink": {
          "description": "The URL the client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "ResourceItem": {
      "type": "object",
      "description": "Resource Id.",
      "properties": {
        "subscriptionId": {
          "description": "The subscription Id of this resource.",
          "type": "string",
          "readOnly": true
        },
        "resourceGroup": {
          "description": "The resource group name of this resource.",
          "type": "string",
          "readOnly": true
        },
        "resourceType": {
          "description": "The resource type of this resource. e.g. \"Microsoft.SignalRService/SignalR\"",
          "type": "string",
          "readOnly": true
        },
        "resourceId": {
          "description": "The resource Id - e.g. \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1\".",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DownloadResponse": {
      "description": "Object that includes all the possible response for the download operation.",
      "type": "object",
      "properties": {
        "resourceList": {
          "description": "List of the reports",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ResourceItem"
          },
          "x-ms-identifiers": []
        },
        "complianceReport": {
          "description": "List of the compliance result",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ComplianceReportItem"
          },
          "x-ms-identifiers": []
        },
        "compliancePdfReport": {
          "description": "Compliance pdf report",
          "type": "object",
          "readOnly": true,
          "properties": {
            "sasUri": {
              "description": "The uri of compliance pdf report",
              "type": "string",
              "readOnly": true,
              "x-ms-secret": true
            }
          }
        },
        "complianceDetailedPdfReport": {
          "description": "The detailed compliance pdf report",
          "type": "object",
          "readOnly": true,
          "properties": {
            "sasUri": {
              "description": "The uri of detailed compliance pdf report",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "ComplianceReportItem": {
      "type": "object",
      "description": "Object that includes all the content for single compliance result.",
      "properties": {
        "categoryName": {
          "type": "string",
          "description": "The category name.",
          "readOnly": true
        },
        "controlFamilyName": {
          "type": "string",
          "description": "The control family name.",
          "readOnly": true
        },
        "controlId": {
          "type": "string",
          "description": "The control Id - e.g. \"1\".",
          "readOnly": true
        },
        "controlName": {
          "type": "string",
          "description": "The control name.",
          "readOnly": true
        },
        "controlStatus": {
          "description": "Control status.",
          "$ref": "#/definitions/ControlStatus",
          "readOnly": true
        },
        "responsibilityTitle": {
          "description": "The title of the customer responsibility.",
          "type": "string",
          "readOnly": true
        },
        "responsibilityDescription": {
          "description": "The description of the customer responsibility.",
          "type": "string",
          "readOnly": true
        },
        "resourceId": {
          "description": "The Id of the resource.",
          "type": "string",
          "readOnly": true
        },
        "resourceType": {
          "description": "The type of the resource.  e.g. \"Microsoft.SignalRService/SignalR\"",
          "type": "string",
          "readOnly": true
        },
        "resourceOrigin": {
          "description": "Resource origin.",
          "readOnly": true,
          "$ref": "#/definitions/ResourceOrigin"
        },
        "resourceStatus": {
          "description": "Resource status.",
          "readOnly": true,
          "$ref": "#/definitions/ResourceStatus"
        },
        "resourceStatusChangeDate": {
          "description": "The status change date for the resource.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Resource provisioning states.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Creating",
        "Deleting",
        "Updating"
      ],
      "readOnly": true,
      "x-ms-enum": {
        "name": "provisioningState",
        "modelAsString": true
      }
    }
  },
  "parameters": {
    "ReportNameParameter": {
      "name": "reportName",
      "in": "path",
      "description": "Report Name.",
      "required": true,
      "type": "string",
      "pattern": "^[-a-zA-Z0-9_]+$",
      "x-ms-parameter-location": "method"
    },
    "SnapshotNameParameter": {
      "name": "snapshotName",
      "in": "path",
      "description": "Snapshot Name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "WebhookNameParameter": {
      "name": "webhookName",
      "in": "path",
      "description": "Webhook Name.",
      "required": true,
      "type": "string",
      "pattern": "^[-a-zA-Z0-9_]+$",
      "x-ms-parameter-location": "method"
    },
    "SkipTokenParameter": {
      "name": "$skipToken",
      "description": "Skip over when retrieving results.",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "TopParameter": {
      "name": "$top",
      "description": "Number of elements to return when retrieving results.",
      "in": "query",
      "required": false,
      "type": "integer",
      "minimum": 1,
      "maximum": 100,
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "OfferGuidParameter": {
      "name": "offerGuid",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "The offerGuid which mapping to the reports.",
      "x-ms-parameter-location": "method",
      "minLength": 1
    },
    "ReportCreatorTenantIdParameter": {
      "name": "reportCreatorTenantId",
      "in": "query",
      "type": "string",
      "required": false,
      "description": "The tenant id of the report creator.",
      "x-ms-parameter-location": "method",
      "minLength": 1
    },
    "DownloadTypeParameter": {
      "name": "downloadType",
      "in": "query",
      "required": true,
      "description": "Indicates the download type.",
      "x-ms-parameter-location": "method",
      "enum": [
        "ComplianceReport",
        "CompliancePdfReport",
        "ComplianceDetailedPdfReport",
        "ResourceList"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "DownloadType",
        "modelAsString": true
      }
    },
    "SelectParameter": {
      "name": "$select",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "OData Select statement. Limits the properties on each entry to just those requested, e.g. ?$select=reportName,id.",
      "x-ms-parameter-location": "method",
      "minLength": 1
    }
  }
}
