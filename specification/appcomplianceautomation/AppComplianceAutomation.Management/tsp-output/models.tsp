import "@typespec/rest";
import "@typespec/http";
import "@azure-tools/typespec-azure-core";

using TypeSpec.Rest;
using TypeSpec.Http;

namespace AppComplianceAutomationToolforMicrosoft365;

enum Origin {
  user,
  system,
  `user,system`,
}

enum ActionType {
  Internal,
}

enum ReportStatus {
  Active,
  Failed,
  Disabled,
}

enum ProvisioningState {
  Succeeded,
  Failed,
  Canceled,
  Creating,
  Deleting,
  Updating,
}

enum CreatedByType {
  User,
  Application,
  ManagedIdentity,
  Key,
}

enum CategoryType {
  FullyAutomated,
  PartiallyAutomated,
  Manual,
}

enum CategoryStatus {
  Healthy,
  Unhealthy,
}

enum ControlFamilyType {
  FullyAutomated,
  PartiallyAutomated,
  Manual,
}

enum ControlFamilyStatus {
  Healthy,
  Unhealthy,
}

enum ControlType {
  FullyAutomated,
  PartiallyAutomated,
  Manual,
}

enum ControlStatus {
  Passed,
  Failed,
  NotApplicable,
}

enum AssessmentSeverity {
  High,
  Medium,
  Low,
}

enum IsPass {
  True,
  False,
}

enum ResourceStatus {
  Healthy,
  Unhealthy,
  NotApplicable,
}

enum DownloadType {
  ComplianceReport,
  CompliancePdfReport,
  ComplianceDetailedPdfReport,
  ResourceList,
}

enum ComplianceState {
  Healthy,
  Unhealthy,
}

@doc("""
A list of REST API operations supported by an Azure Resource Provider. It
contains an URL link to get the next set of results.
""")
model OperationListResult is Azure.Core.Page<Operation>;

@doc("""
Details of a REST API operation, returned from the Resource Provider Operations
API
""")
model Operation {
  @doc("""
The name of the operation, as per Resource-Based Access Control (RBAC).
Examples: \"Microsoft.Compute/virtualMachines/write\",
\"Microsoft.Compute/virtualMachines/capture/action\"
""")
  @visibility("read")
  name?: string;

  @doc("""
Whether the operation applies to data-plane. This is \"true\" for data-plane
operations and \"false\" for ARM/control-plane operations.
""")
  @visibility("read")
  isDataAction?: boolean;

  @doc("Localized display information for this particular operation.")
  display?: OperationDisplay;

  @doc("""
The intended executor of the operation; as in Resource Based Access Control
(RBAC) and audit logs UX. Default value is \"user,system\"
""")
  @visibility("read")
  origin?: Origin;

  @doc("""
Enum. Indicates the action type. \"Internal\" refers to actions that are for
internal only APIs.
""")
  @visibility("read")
  actionType?: ActionType;
}

@doc("Localized display information for this particular operation.")
model OperationDisplay {
  @doc("""
The localized friendly form of the resource provider name, e.g. \"Microsoft
Monitoring Insights\" or \"Microsoft Compute\".
""")
  @visibility("read")
  provider?: string;

  @doc("""
The localized friendly name of the resource type related to this operation.
E.g. \"Virtual Machines\" or \"Job Schedule Collections\".
""")
  @visibility("read")
  resource?: string;

  @doc("""
The concise, localized friendly name for the operation; suitable for dropdowns.
E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".
""")
  @visibility("read")
  operation?: string;

  @doc("""
The short, localized friendly description of the operation; suitable for tool
tips and detailed views.
""")
  @visibility("read")
  description?: string;
}

@doc("""
Common error response for all Azure Resource Manager APIs to return error
details for failed operations. (This also follows the OData error response
format.).
""")
@error
model ErrorResponse {
  @doc("The error object.")
  error?: ErrorDetail;
}

@doc("The error detail.")
model ErrorDetail {
  @doc("The error code.")
  @visibility("read")
  code?: string;

  @doc("The error message.")
  @visibility("read")
  message?: string;

  @doc("The error target.")
  @visibility("read")
  target?: string;

  @doc("The error details.")
  @visibility("read")
  details?: ErrorDetail[];

  @doc("The error additional info.")
  @visibility("read")
  additionalInfo?: ErrorAdditionalInfo[];
}

@doc("The resource management error additional info.")
model ErrorAdditionalInfo {
  @doc("The additional info type.")
  @visibility("read")
  type?: string;

  @doc("The additional info.")
  @visibility("read")
  info?: unknown;
}

@doc("Object that includes an array of resources and a possible link for next set.")
model ReportResourceList is Azure.Core.Page<ReportResource>;

@doc("A class represent an AppComplianceAutomation report resource.")
model ReportResource {
  ...ProxyResource;

  @doc("Report property.")
  properties: ReportProperties;
}

@doc("Report's properties.")
model ReportProperties {
  @doc("Report id in database.")
  @visibility("read")
  id?: string;

  @doc("Report status.")
  @visibility("read")
  status?: ReportStatus;

  @doc("Report's tenant id.")
  @visibility("read")
  tenantId?: string;

  @doc("Report name.")
  @visibility("read")
  reportName?: string;

  @doc("Report offer Guid.")
  offerGuid?: string;

  @doc("""
Report collection trigger time's time zone, the available list can be obtained
by executing \"Get-TimeZone -ListAvailable\" in PowerShell.
An example of valid
timezone id is \"Pacific Standard Time\".
""")
  timeZone: string;

  @doc("Report collection trigger time.")
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  triggerTime: utcDateTime;

  @doc("Report next collection trigger time.")
  @visibility("read")
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  nextTriggerTime?: utcDateTime;

  @doc("Report last collection trigger time.")
  @visibility("read")
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  lastTriggerTime?: utcDateTime;

  @doc("List of subscription Ids.")
  @visibility("read")
  subscriptions?: string[];

  @doc("List of resource data.")
  resources: ResourceMetadata[];

  @doc("Report compliance status.")
  @visibility("read")
  complianceStatus?: ReportComplianceStatus;

  @doc("Azure lifecycle management")
  @visibility("read")
  provisioningState?: ProvisioningState;
}

@doc("Single resource Id's metadata.")
model ResourceMetadata {
  @doc("""
Resource Id - e.g.
\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1\".
""")
  resourceId: string;

  @doc("Resource type.")
  resourceType?: string;

  @doc("Resource kind.")
  resourceKind?: string;

  @doc("Resource name.")
  resourceName?: string;

  @doc("Resource's tag type.")
  tags?: Record<string>;
}

@doc("A list which includes all the compliance result for one report.")
model ReportComplianceStatus {
  @doc("The Microsoft 365 certification name.")
  m365?: OverviewStatus;
}

@doc("The overview of the compliance result for one report.")
model OverviewStatus {
  @doc("The count of all passed full automation control.")
  passedCount?: int32;

  @doc("The count of all failed full automation control.")
  failedCount?: int32;

  @doc("The count of all manual control.")
  manualCount?: int32;
}

@doc("""
The resource model definition for a Azure Resource Manager proxy resource. It
will not have tags and a location
""")
model ProxyResource {
  ...Resource;
}

@doc("""
Common fields that are returned in the response for all Azure Resource Manager
resources
""")
model Resource {
  @doc("""
Fully qualified resource ID for the resource. Ex -
/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
""")
  @visibility("read")
  id?: string;

  @doc("The name of the resource")
  @visibility("read")
  name?: string;

  @doc("""
The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or
\"Microsoft.Storage/storageAccounts\"
""")
  @visibility("read")
  type?: string;

  @doc("Azure Resource Manager metadata containing createdBy and modifiedBy information.")
  @visibility("read")
  systemData?: SystemData;
}

@doc("Metadata pertaining to creation and last modification of the resource.")
model SystemData {
  @doc("The identity that created the resource.")
  createdBy?: string;

  @doc("The type of identity that created the resource.")
  createdByType?: CreatedByType;

  @doc("The timestamp of resource creation (UTC).")
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  createdAt?: utcDateTime;

  @doc("The identity that last modified the resource.")
  lastModifiedBy?: string;

  @doc("The type of identity that last modified the resource.")
  lastModifiedByType?: CreatedByType;

  @doc("The timestamp of resource last modification (UTC)")
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  lastModifiedAt?: utcDateTime;
}

@doc("A class represent a AppComplianceAutomation report resource update properties.")
model ReportResourcePatch {
  @doc("Report property.")
  properties?: ReportProperties;
}

@doc("Object that includes an array of resources and a possible link for next set.")
model SnapshotResourceList is Azure.Core.Page<SnapshotResource>;

@doc("A class represent a AppComplianceAutomation snapshot resource.")
model SnapshotResource {
  ...ProxyResource;

  @doc("Snapshot's property'.")
  @visibility("read")
  properties?: SnapshotProperties;
}

@doc("Snapshot's properties.")
model SnapshotProperties {
  @doc("Snapshot id in the database.")
  @visibility("read")
  id?: string;

  @doc("Snapshot name.")
  @visibility("read")
  snapshotName?: string;

  @doc("The timestamp of resource creation (UTC).")
  @visibility("read")
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  createdAt?: utcDateTime;

  @doc("Azure lifecycle management")
  @visibility("read")
  provisioningState?: ProvisioningState;

  @doc("The report essential info.")
  @visibility("read")
  reportProperties?: ReportProperties;

  @doc("Metadata pertaining to creation and last modification of the resource.")
  @visibility("read")
  reportSystemData?: SystemData;

  @doc("List of compliance results.")
  @visibility("read")
  complianceResults?: ComplianceResult[];
}

@doc("A class represent the compliance result.")
model ComplianceResult {
  @doc("The name of the compliance. e.g. \"M365\"")
  @visibility("read")
  complianceName?: string;

  @doc("List of categories.")
  @visibility("read")
  categories?: Category[];
}

@doc("A class represent the compliance category.")
model Category {
  @doc("The name of the compliance category. e.g. \"Operational Security\"")
  @visibility("read")
  categoryName?: string;

  @doc("The category type ")
  @visibility("read")
  categoryType?: CategoryType;

  @doc("Category status.")
  @visibility("read")
  categoryStatus?: CategoryStatus;

  @doc("List of control families.")
  @visibility("read")
  controlFamilies?: ControlFamily[];
}

@doc("A class represent the control family.")
model ControlFamily {
  @doc("The name of the control family. e.g. \"Malware Protection - Anti-Virus\"")
  @visibility("read")
  familyName?: string;

  @doc("The control family type ")
  @visibility("read")
  familyType?: ControlFamilyType;

  @doc("Control family status.")
  @visibility("read")
  familyStatus?: ControlFamilyStatus;

  @doc("List of controls.")
  @visibility("read")
  controls?: Control[];
}

@doc("A class represent the control.")
model Control {
  @doc("The Id of the control. e.g. \"Operational Security#10\"")
  @visibility("read")
  controlId?: string;

  @doc("The short name of the control. e.g. \"Unsupported OS and Software.\"")
  @visibility("read")
  controlShortName?: string;

  @doc("""
The full name of the control. e.g. \"Validate that unsupported operating
systems and software components are not in use.\"
""")
  @visibility("read")
  controlFullName?: string;

  @doc("The control type ")
  @visibility("read")
  controlType?: ControlType;

  @doc("The control's description")
  @visibility("read")
  controlDescription?: string;

  @doc("The hyper link to the control's description'.")
  @visibility("read")
  controlDescriptionHyperLink?: string;

  @doc("Control status.")
  @visibility("read")
  controlStatus?: ControlStatus;

  @doc("List of assessments.")
  @visibility("read")
  assessments?: Assessment[];
}

@doc("A class represent the assessment.")
model Assessment {
  @doc("The name of the assessment.")
  @visibility("read")
  name?: string;

  @doc("The severity level of this assessment.")
  @visibility("read")
  severity?: AssessmentSeverity;

  @doc("The description of the assessment.")
  @visibility("read")
  description?: string;

  @doc("The remediation of the assessment.")
  @visibility("read")
  remediation?: string;

  @doc("Indicates whether all the resource(s) are compliant.")
  @visibility("read")
  isPass?: IsPass;

  @doc("The policy id mapping to this assessment.")
  @visibility("read")
  policyId?: string;

  @doc("List of resource assessments.")
  @visibility("read")
  resourceList?: AssessmentResource[];
}

@doc("A class represent the assessment resource.")
model AssessmentResource {
  @doc("The Id of the resource.")
  @visibility("read")
  resourceId?: string;

  @doc("Resource status.")
  @visibility("read")
  resourceStatus?: ResourceStatus;

  @doc("The reason for the N/A resource.")
  @visibility("read")
  reason?: string;

  @doc("The status change date for the resource. For unavailable date, set it as N/A.")
  @visibility("read")
  statusChangeDate?: string;
}

@doc("Snapshot's download request.")
model SnapshotDownloadRequest {
  @doc("Tenant id.")
  reportCreatorTenantId?: string;

  @doc("Indicates the download type.")
  downloadType: DownloadType;

  @doc("The offerGuid which mapping to the reports.")
  offerGuid?: string;
}

@doc("Object that includes all the possible response for the download operation.")
model DownloadResponse {
  @doc("List of the reports")
  @visibility("read")
  resourceList?: ResourceItem[];

  @doc("List of the compliance result")
  @visibility("read")
  complianceReport?: ComplianceReportItem[];

  @doc("compliance pdf report")
  @visibility("read")
  compliancePdfReport?: DownloadResponseCompliancePdfReport;

  @doc("compliance detailed pdf report")
  @visibility("read")
  complianceDetailedPdfReport?: DownloadResponseComplianceDetailedPdfReport;
}

@doc("Resource Id.")
model ResourceItem {
  @doc("The subscription Id of this resource.")
  @visibility("read")
  subscriptionId?: string;

  @doc("The resource group name of this resource.")
  @visibility("read")
  resourceGroup?: string;

  @doc("The resource type of this resource.")
  @visibility("read")
  resourceType?: string;

  @doc("""
The resource Id - e.g.
\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1\".
""")
  @visibility("read")
  resourceId?: string;
}

@doc("Object that includes all the content for single compliance result.")
model ComplianceReportItem {
  @doc("The category name.")
  @visibility("read")
  categoryName?: string;

  @doc("The control Id - e.g. \"1\".")
  @visibility("read")
  controlId?: string;

  @doc("The control name.")
  @visibility("read")
  controlName?: string;

  @doc("The control type.")
  @visibility("read")
  controlType?: ControlType;

  @doc("The compliance result's status.")
  @visibility("read")
  complianceState?: ComplianceState;

  @doc("The compliance result mapped policy Id.")
  @visibility("read")
  policyId?: string;

  @doc("The policy's display name.")
  @visibility("read")
  policyDisplayName?: string;

  @doc("The policy's detail description.")
  @visibility("read")
  policyDescription?: string;

  @doc("The compliance result mapped subscription Id.")
  @visibility("read")
  subscriptionId?: string;

  @doc("The compliance result mapped resource group.")
  @visibility("read")
  resourceGroup?: string;

  @doc("The compliance result mapped resource type.")
  @visibility("read")
  resourceType?: string;

  @doc("""
The compliance result mapped resource Id - e.g.
\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1\".
""")
  @visibility("read")
  resourceId?: string;

  @doc("""
The compliance result last changed date - e.g.
\"2022-10-24T02:55:16.3274379Z\". For unavailable date, set it as \"N/A\".
""")
  @visibility("read")
  statusChangeDate?: string;
}

@doc("compliance pdf report")
model DownloadResponseCompliancePdfReport {
  @doc("uri of compliance pdf report")
  @visibility("read")
  sasUri?: string;
}

@doc("compliance detailed pdf report")
model DownloadResponseComplianceDetailedPdfReport {
  @doc("uri of compliance detailed pdf report")
  @visibility("read")
  sasUri?: string;
}
