import "@typespec/http";
import "@typespec/rest";
import "@typespec/versioning";
import "@azure-tools/typespec-azure-core";
import "@azure-tools/typespec-azure-resource-manager";
import "@azure-tools/typespec-client-generator-core";
import "@typespec/openapi";
import "@azure-tools/typespec-azure-portal-core";
import "../shared/main.tsp";

using TypeSpec.Http;
using TypeSpec.Rest;
using TypeSpec.Versioning;
using OpenAPI;
using Azure.Core;
using Azure.ClientGenerator.Core;
using Azure.ResourceManager;
using Azure.Portal;

#suppress "@azure-tools/typespec-azure-resource-manager/missing-operations-endpoint" "Supress missing operations endpoint as the same is defined ../operations/main.tsp."
@armProviderNamespace
@service({
  title: "Microsoft.AwsConnector",
})
@doc("Microsoft.AwsConnector Resource Provider management API.")
@versioned(Versions)
@armCommonTypesVersion(Azure.ResourceManager.CommonTypes.Versions.v5)
namespace Microsoft.AwsConnector;

/** Api versions */
enum Versions {
  /** 2024-12-01 api version */
  @useDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)
  `2024-12-01`,
}

//---------------------------------------------- Ec2VPCEndpoints ----------------------------------------------
#suppress "@azure-tools/typespec-azure-core/casing-style" "Supress casing style as the name is defined in aws."
@about({
  displayNames: {
    singular: "EC2 VPCEndpoint",
    plural: "EC2 VPCEndpoints",
  },
  keywords: ["Microsoft.AwsConnector", "EC2", "VPCEndpoint"],
})
@doc("A Microsoft.AwsConnector resource")
model Ec2VPCEndpoint is TrackedResource<Ec2VPCEndpointProperties> {
  @doc("Name of Ec2VPCEndpoint")
  @pattern("^(?=.{0,259}[^\\s.]$)(?!.*[<>%&\\?/#])")
  @key("name")
  @path
  @segment("ec2VPCEndpoints")
  name: string;
}

#suppress "@azure-tools/typespec-azure-core/casing-style" "Supress casing style as the property name is defined in aws."
#suppress "@azure-tools/typespec-azure-core/no-unknown" "Supress no-unknown to handle the datatype object used in aws"
#suppress "@azure-tools/typespec-azure-resource-manager/arm-no-record" "Supress arm-no-record to handle the datatype object used in aws"
#suppress "@azure-tools/typespec-azure-core/property-name-conflict" "AWSConnector will not generate SDK. So, supressing this error"
@doc("Definition of Ec2VPCEndpoint")
model Ec2VPCEndpointProperties {
  @doc("AWS Properties")
  awsProperties?: AwsEc2VPCEndpointProperties;

  ...AwsCommonProperties;
}

#suppress "@azure-tools/typespec-azure-core/casing-style" "Supress casing style as the property name is defined in aws."
#suppress "@azure-tools/typespec-azure-core/no-unknown" "Supress no-unknown to handle the datatype object used in aws"
#suppress "@azure-tools/typespec-azure-resource-manager/arm-no-record" "Supress arm-no-record to handle the datatype object used in aws"
#suppress "@azure-tools/typespec-azure-core/property-name-conflict" "AWSConnector will not generate SDK. So, supressing this error"
@doc("Definition of awsEc2VPCEndpoint")
model AwsEc2VPCEndpointProperties {
  @doc("Property creationTimestamp")
  creationTimestamp?: string;

  @doc("Property dnsEntries")
  @extension("x-ms-identifiers", [])
  dnsEntries?: string[];

  @doc("Property id")
  id?: string;

  @doc("Property networkInterfaceIds")
  @extension("x-ms-identifiers", [])
  networkInterfaceIds?: string[];

  @doc("An endpoint policy, which controls access to the service from the VPC. The default endpoint policy allows full access to the service. Endpoint policies are supported only for gateway and interface endpoints. For CloudFormation templates in YAML, you can provide the policy in JSON or YAML format. CFNlong converts YAML policies to JSON format before calling the API to create or modify the VPC endpoint.")
  policyDocument?: Record<unknown>;

  @doc("Indicate whether to associate a private hosted zone with the specified VPC. The private hosted zone contains a record set for the default public DNS name for the service for the Region (for example, ``kinesis.us-east-1.amazonaws.com``), which resolves to the private IP addresses of the endpoint network interfaces in the VPC. This enables you to make requests to the default public DNS name for the service instead of the public DNS names that are automatically generated by the VPC endpoint service. To use a private hosted zone, you must set the following VPC attributes to ``true``: ``enableDnsHostnames`` and ``enableDnsSupport``. This property is supported only for interface endpoints. Default: ``false``")
  privateDnsEnabled?: boolean;

  @doc("The IDs of the route tables. Routing is supported only for gateway endpoints.")
  @extension("x-ms-identifiers", [])
  routeTableIds?: string[];

  @doc("The IDs of the security groups to associate with the endpoint network interfaces. If this parameter is not specified, we use the default security group for the VPC. Security groups are supported only for interface endpoints.")
  @extension("x-ms-identifiers", [])
  securityGroupIds?: string[];

  @doc("The name of the endpoint service.")
  serviceName?: string;

  @doc("The IDs of the subnets in which to create endpoint network interfaces. You must specify this property for an interface endpoint or a Gateway Load Balancer endpoint. You can't specify this property for a gateway endpoint. For a Gateway Load Balancer endpoint, you can specify only one subnet.")
  @extension("x-ms-identifiers", [])
  subnetIds?: string[];

  @doc("The type of endpoint. Default: Gateway")
  vpcEndpointType?: VpcEndpointType;

  @doc("The ID of the VPC.")
  vpcId?: string;
}

@doc("VpcEndpointType enum")
union VpcEndpointType {
  @doc("VpcEndpointType enum Gateway")
  Gateway: "Gateway",

  @doc("VpcEndpointType enum GatewayLoadBalancer")
  GatewayLoadBalancer: "GatewayLoadBalancer",

  @doc("VpcEndpointType enum Interface")
  Interface: "Interface",

  string,
}

#suppress "@azure-tools/typespec-azure-core/casing-style" "Supress casing style as the name is defined in aws."
@armResourceOperations
interface Ec2VPCEndpoints {
  get is ArmResourceRead<Ec2VPCEndpoint>;
  @doc("Create a Ec2VPCEndpoint. Please note that end user resource creation is currently restricted, but it will be enabled in the future.")
  createOrReplace is ArmResourceCreateOrReplaceAsync<Ec2VPCEndpoint>;
  update is ArmCustomPatchAsync<
    Ec2VPCEndpoint,
    Azure.ResourceManager.Foundations.TagsUpdateModel<Ec2VPCEndpoint>
  >;
  delete is ArmResourceDeleteWithoutOkAsync<Ec2VPCEndpoint>;
  listByResourceGroup is ArmResourceListByParent<Ec2VPCEndpoint>;
  listBySubscription is ArmListBySubscription<Ec2VPCEndpoint>;
}

//--------------------------------------------------------------------------------------------
// This TypeSpec was auto genrated by aws2SwaggerMain.js tool
//
// Input used to generate TypeSpec:
// Cloud Control API Type: AWS::EC2::VPCEndpoint
//--------------------------------------------------------------------------------------------
