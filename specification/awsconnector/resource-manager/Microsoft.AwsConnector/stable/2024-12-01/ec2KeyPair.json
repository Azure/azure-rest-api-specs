{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.AwsConnector",
    "version": "2024-12-01",
    "description": "Microsoft.AwsConnector Resource Provider management API.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Ec2KeyPairs"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.AwsConnector/ec2KeyPairs": {
      "get": {
        "operationId": "Ec2KeyPairs_ListBySubscription",
        "tags": [
          "Ec2KeyPairs"
        ],
        "description": "List Ec2KeyPair resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Ec2KeyPairListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Ec2KeyPairs_ListBySubscription": {
            "$ref": "./examples/Ec2KeyPairs_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AwsConnector/ec2KeyPairs": {
      "get": {
        "operationId": "Ec2KeyPairs_ListByResourceGroup",
        "tags": [
          "Ec2KeyPairs"
        ],
        "description": "List Ec2KeyPair resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Ec2KeyPairListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Ec2KeyPairs_ListByResourceGroup": {
            "$ref": "./examples/Ec2KeyPairs_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AwsConnector/ec2KeyPairs/{name}": {
      "get": {
        "operationId": "Ec2KeyPairs_Get",
        "tags": [
          "Ec2KeyPairs"
        ],
        "description": "Get a Ec2KeyPair",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of Ec2KeyPair",
            "required": true,
            "type": "string",
            "pattern": "^(?=.{0,259}[^\\s.]$)(?!.*[<>%&\\?/#])"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Ec2KeyPair"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Ec2KeyPairs_Get": {
            "$ref": "./examples/Ec2KeyPairs_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Ec2KeyPairs_CreateOrReplace",
        "tags": [
          "Ec2KeyPairs"
        ],
        "description": "Create a Ec2KeyPair. Please note that end user resource creation is currently restricted, but it will be enabled in the future.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of Ec2KeyPair",
            "required": true,
            "type": "string",
            "pattern": "^(?=.{0,259}[^\\s.]$)(?!.*[<>%&\\?/#])"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Ec2KeyPair"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Ec2KeyPair' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Ec2KeyPair"
            }
          },
          "201": {
            "description": "Resource 'Ec2KeyPair' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Ec2KeyPair"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Ec2KeyPairs_CreateOrReplace": {
            "$ref": "./examples/Ec2KeyPairs_CreateOrReplace.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Ec2KeyPairs_Update",
        "tags": [
          "Ec2KeyPairs"
        ],
        "description": "Update a Ec2KeyPair",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of Ec2KeyPair",
            "required": true,
            "type": "string",
            "pattern": "^(?=.{0,259}[^\\s.]$)(?!.*[<>%&\\?/#])"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Ec2KeyPairTagsUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Ec2KeyPair"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Ec2KeyPairs_Update": {
            "$ref": "./examples/Ec2KeyPairs_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Ec2KeyPairs_Delete",
        "tags": [
          "Ec2KeyPairs"
        ],
        "description": "Delete a Ec2KeyPair",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of Ec2KeyPair",
            "required": true,
            "type": "string",
            "pattern": "^(?=.{0,259}[^\\s.]$)(?!.*[<>%&\\?/#])"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Ec2KeyPairs_Delete": {
            "$ref": "./examples/Ec2KeyPairs_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AwsEc2KeyPairProperties": {
      "type": "object",
      "description": "Definition of awsEc2KeyPair",
      "properties": {
        "keyFingerprint": {
          "type": "string",
          "description": "Property keyFingerprint"
        },
        "keyFormat": {
          "type": "string",
          "description": "The format of the key pair. Default: ``pem``",
          "default": "pem",
          "enum": [
            "pem",
            "ppk"
          ],
          "x-ms-enum": {
            "name": "KeyFormat",
            "modelAsString": true,
            "values": [
              {
                "name": "pem",
                "value": "pem",
                "description": "KeyFormat enum pem"
              },
              {
                "name": "ppk",
                "value": "ppk",
                "description": "KeyFormat enum ppk"
              }
            ]
          }
        },
        "keyName": {
          "type": "string",
          "description": "A unique name for the key pair. Constraints: Up to 255 ASCII characters"
        },
        "keyPairId": {
          "type": "string",
          "description": "Property keyPairId"
        },
        "keyType": {
          "type": "string",
          "description": "The type of key pair. Note that ED25519 keys are not supported for Windows instances. If the ``PublicKeyMaterial`` property is specified, the ``KeyType`` property is ignored, and the key type is inferred from the ``PublicKeyMaterial`` value. Default: ``rsa``",
          "default": "rsa",
          "enum": [
            "ed25519",
            "rsa"
          ],
          "x-ms-enum": {
            "name": "KeyType",
            "modelAsString": true,
            "values": [
              {
                "name": "ed25519",
                "value": "ed25519",
                "description": "KeyType enum ed25519"
              },
              {
                "name": "rsa",
                "value": "rsa",
                "description": "KeyType enum rsa"
              }
            ]
          }
        },
        "publicKeyMaterial": {
          "type": "string",
          "description": "The public key material. The ``PublicKeyMaterial`` property is used to import a key pair. If this property is not specified, then a new key pair will be created."
        },
        "tags": {
          "type": "array",
          "description": "The tags to apply to the key pair.",
          "items": {
            "$ref": "#/definitions/Tag"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Ec2KeyPair": {
      "type": "object",
      "description": "A Microsoft.AwsConnector resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/Ec2KeyPairProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "Ec2KeyPairListResult": {
      "type": "object",
      "description": "The response of a Ec2KeyPair list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Ec2KeyPair items on this page",
          "items": {
            "$ref": "#/definitions/Ec2KeyPair"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "Ec2KeyPairProperties": {
      "type": "object",
      "description": "Definition of Ec2KeyPair",
      "properties": {
        "awsProperties": {
          "$ref": "#/definitions/AwsEc2KeyPairProperties",
          "description": "AWS Properties"
        },
        "publicCloudConnectorsResourceId": {
          "type": "string",
          "description": "Public Cloud Connectors Resource ID"
        },
        "awsAccountId": {
          "type": "string",
          "description": "AWS Account ID"
        },
        "arn": {
          "type": "string",
          "description": "Amazon Resource Name (ARN)"
        },
        "publicCloudResourceName": {
          "type": "string",
          "description": "Public Cloud Resource Name"
        },
        "awsSourceSchema": {
          "type": "string",
          "description": "AWS Source Schema"
        },
        "awsRegion": {
          "type": "string",
          "description": "AWS Region"
        },
        "awsTags": {
          "type": "object",
          "description": "AWS Tags",
          "additionalProperties": {
            "type": "string"
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      }
    },
    "Ec2KeyPairTagsUpdate": {
      "type": "object",
      "description": "The type used for updating tags in Ec2KeyPair resources.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "KeyFormat": {
      "type": "string",
      "description": "KeyFormat enum",
      "enum": [
        "pem",
        "ppk"
      ],
      "x-ms-enum": {
        "name": "KeyFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "pem",
            "value": "pem",
            "description": "KeyFormat enum pem"
          },
          {
            "name": "ppk",
            "value": "ppk",
            "description": "KeyFormat enum ppk"
          }
        ]
      }
    },
    "KeyType": {
      "type": "string",
      "description": "KeyType enum",
      "enum": [
        "ed25519",
        "rsa"
      ],
      "x-ms-enum": {
        "name": "KeyType",
        "modelAsString": true,
        "values": [
          {
            "name": "ed25519",
            "value": "ed25519",
            "description": "KeyType enum ed25519"
          },
          {
            "name": "rsa",
            "value": "rsa",
            "description": "KeyType enum rsa"
          }
        ]
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The provisioning state of a resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "The resource is being provisioned"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "The resource is updating"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "The resource is being deleted"
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "The resource create request has been accepted"
          }
        ]
      },
      "readOnly": true
    },
    "Tag": {
      "type": "object",
      "description": "Definition of Tag",
      "properties": {
        "key": {
          "type": "string",
          "description": "The tag key."
        },
        "value": {
          "type": "string",
          "description": "The tag value."
        }
      }
    }
  },
  "parameters": {}
}
