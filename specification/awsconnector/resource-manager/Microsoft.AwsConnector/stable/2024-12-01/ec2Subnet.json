{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.AwsConnector",
    "version": "2024-12-01",
    "description": "Microsoft.AwsConnector Resource Provider management API.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Ec2Subnets"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.AwsConnector/ec2Subnets": {
      "get": {
        "operationId": "Ec2Subnets_ListBySubscription",
        "tags": [
          "Ec2Subnets"
        ],
        "description": "List Ec2Subnet resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Ec2SubnetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Ec2Subnets_ListBySubscription": {
            "$ref": "./examples/Ec2Subnets_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AwsConnector/ec2Subnets": {
      "get": {
        "operationId": "Ec2Subnets_ListByResourceGroup",
        "tags": [
          "Ec2Subnets"
        ],
        "description": "List Ec2Subnet resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Ec2SubnetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Ec2Subnets_ListByResourceGroup": {
            "$ref": "./examples/Ec2Subnets_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AwsConnector/ec2Subnets/{name}": {
      "get": {
        "operationId": "Ec2Subnets_Get",
        "tags": [
          "Ec2Subnets"
        ],
        "description": "Get a Ec2Subnet",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of Ec2Subnet",
            "required": true,
            "type": "string",
            "pattern": "^(?=.{0,259}[^\\s.]$)(?!.*[<>%&\\?/#])"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Ec2Subnet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Ec2Subnets_Get": {
            "$ref": "./examples/Ec2Subnets_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Ec2Subnets_CreateOrReplace",
        "tags": [
          "Ec2Subnets"
        ],
        "description": "Create a Ec2Subnet. Please note that end user resource creation is currently restricted, but it will be enabled in the future.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of Ec2Subnet",
            "required": true,
            "type": "string",
            "pattern": "^(?=.{0,259}[^\\s.]$)(?!.*[<>%&\\?/#])"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Ec2Subnet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Ec2Subnet' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Ec2Subnet"
            }
          },
          "201": {
            "description": "Resource 'Ec2Subnet' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Ec2Subnet"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Ec2Subnets_CreateOrReplace": {
            "$ref": "./examples/Ec2Subnets_CreateOrReplace.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Ec2Subnets_Update",
        "tags": [
          "Ec2Subnets"
        ],
        "description": "Update a Ec2Subnet",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of Ec2Subnet",
            "required": true,
            "type": "string",
            "pattern": "^(?=.{0,259}[^\\s.]$)(?!.*[<>%&\\?/#])"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Ec2SubnetTagsUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Ec2Subnet"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Ec2Subnets_Update": {
            "$ref": "./examples/Ec2Subnets_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Ec2Subnets_Delete",
        "tags": [
          "Ec2Subnets"
        ],
        "description": "Delete a Ec2Subnet",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of Ec2Subnet",
            "required": true,
            "type": "string",
            "pattern": "^(?=.{0,259}[^\\s.]$)(?!.*[<>%&\\?/#])"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Ec2Subnets_Delete": {
            "$ref": "./examples/Ec2Subnets_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AwsEc2SubnetProperties": {
      "type": "object",
      "description": "Definition of awsEc2Subnet",
      "properties": {
        "assignIpv6AddressOnCreation": {
          "type": "boolean",
          "description": "Indicates whether a network interface created in this subnet receives an IPv6 address. The default value is ``false``. If you specify ``AssignIpv6AddressOnCreation``, you must also specify an IPv6 CIDR block."
        },
        "availabilityZone": {
          "type": "string",
          "description": "The Availability Zone of the subnet. If you update this property, you must also update the ``CidrBlock`` property."
        },
        "availabilityZoneId": {
          "type": "string",
          "description": "The AZ ID of the subnet."
        },
        "cidrBlock": {
          "type": "string",
          "description": "The IPv4 CIDR block assigned to the subnet. If you update this property, we create a new subnet, and then delete the existing one."
        },
        "enableDns64": {
          "type": "boolean",
          "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. For more information, see [DNS64 and NAT64](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html#nat-gateway-nat64-dns64) in the *User Guide*."
        },
        "enableLniAtDeviceIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates the device position for local network interfaces in this subnet. For example, ``1`` indicates local network interfaces in this subnet are the secondary network interface (eth1)."
        },
        "ipv4IpamPoolId": {
          "type": "string",
          "description": "An IPv4 IPAM pool ID for the subnet."
        },
        "ipv4NetmaskLength": {
          "type": "integer",
          "format": "int32",
          "description": "An IPv4 netmask length for the subnet."
        },
        "ipv6CidrBlock": {
          "type": "string",
          "description": "The IPv6 CIDR block. If you specify ``AssignIpv6AddressOnCreation``, you must also specify an IPv6 CIDR block."
        },
        "ipv6CidrBlocks": {
          "type": "array",
          "description": "The IPv6 network ranges for the subnet, in CIDR notation.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "ipv6IpamPoolId": {
          "type": "string",
          "description": "An IPv6 IPAM pool ID for the subnet."
        },
        "ipv6Native": {
          "type": "boolean",
          "description": "Indicates whether this is an IPv6 only subnet. For more information, see [Subnet basics](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html#subnet-basics) in the *User Guide*."
        },
        "ipv6NetmaskLength": {
          "type": "integer",
          "format": "int32",
          "description": "An IPv6 netmask length for the subnet."
        },
        "mapPublicIpOnLaunch": {
          "type": "boolean",
          "description": "Indicates whether instances launched in this subnet receive a public IPv4 address. The default value is ``false``.  AWS charges for all public IPv4 addresses, including public IPv4 addresses associated with running instances and Elastic IP addresses. For more information, see the *Public IPv4 Address* tab on the [VPC pricing page](https://docs.aws.amazon.com/vpc/pricing/)."
        },
        "networkAclAssociationId": {
          "type": "string",
          "description": "Property networkAclAssociationId"
        },
        "outpostArn": {
          "type": "string",
          "description": "The Amazon Resource Name (ARN) of the Outpost."
        },
        "privateDnsNameOptionsOnLaunch": {
          "$ref": "#/definitions/PrivateDnsNameOptionsOnLaunchModelProperties",
          "description": "The hostname type for EC2 instances launched into this subnet and how DNS A and AAAA record queries to the instances should be handled. For more information, see [Amazon EC2 instance hostname types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-naming.html) in the *User Guide*. Available options:  +  EnableResourceNameDnsAAAARecord (true | false)  +  EnableResourceNameDnsARecord (true | false)  +  HostnameType (ip-name | resource-name)"
        },
        "subnetId": {
          "type": "string",
          "description": "Property subnetId"
        },
        "tags": {
          "type": "array",
          "description": "Any tags assigned to the subnet.",
          "items": {
            "$ref": "#/definitions/Tag"
          },
          "x-ms-identifiers": []
        },
        "vpcId": {
          "type": "string",
          "description": "The ID of the VPC the subnet is in. If you update this property, you must also update the ``CidrBlock`` property."
        }
      }
    },
    "Ec2Subnet": {
      "type": "object",
      "description": "A Microsoft.AwsConnector resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/Ec2SubnetProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "Ec2SubnetListResult": {
      "type": "object",
      "description": "The response of a Ec2Subnet list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Ec2Subnet items on this page",
          "items": {
            "$ref": "#/definitions/Ec2Subnet"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "Ec2SubnetProperties": {
      "type": "object",
      "description": "Definition of Ec2Subnet",
      "properties": {
        "awsProperties": {
          "$ref": "#/definitions/AwsEc2SubnetProperties",
          "description": "AWS Properties"
        },
        "publicCloudConnectorsResourceId": {
          "type": "string",
          "description": "Public Cloud Connectors Resource ID"
        },
        "awsAccountId": {
          "type": "string",
          "description": "AWS Account ID"
        },
        "arn": {
          "type": "string",
          "description": "Amazon Resource Name (ARN)"
        },
        "publicCloudResourceName": {
          "type": "string",
          "description": "Public Cloud Resource Name"
        },
        "awsSourceSchema": {
          "type": "string",
          "description": "AWS Source Schema"
        },
        "awsRegion": {
          "type": "string",
          "description": "AWS Region"
        },
        "awsTags": {
          "type": "object",
          "description": "AWS Tags",
          "additionalProperties": {
            "type": "string"
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      }
    },
    "Ec2SubnetTagsUpdate": {
      "type": "object",
      "description": "The type used for updating tags in Ec2Subnet resources.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "PrivateDnsNameOptionsOnLaunchModelProperties": {
      "type": "object",
      "description": "Definition of PrivateDnsNameOptionsOnLaunchModelProperties",
      "properties": {
        "enableResourceNameDnsAAAARecord": {
          "type": "boolean",
          "description": "Property enableResourceNameDnsAAAARecord"
        },
        "enableResourceNameDnsARecord": {
          "type": "boolean",
          "description": "Property enableResourceNameDnsARecord"
        },
        "hostnameType": {
          "type": "string",
          "description": "Property hostnameType"
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The provisioning state of a resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "The resource is being provisioned"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "The resource is updating"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "The resource is being deleted"
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "The resource create request has been accepted"
          }
        ]
      },
      "readOnly": true
    },
    "Tag": {
      "type": "object",
      "description": "Definition of Tag",
      "properties": {
        "key": {
          "type": "string",
          "description": "The tag key."
        },
        "value": {
          "type": "string",
          "description": "The tag value."
        }
      }
    }
  },
  "parameters": {}
}
