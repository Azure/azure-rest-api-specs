{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.AwsConnector",
    "version": "2024-12-01",
    "description": "Microsoft.AwsConnector Resource Provider management API.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Ec2FlowLogs"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.AwsConnector/ec2FlowLogs": {
      "get": {
        "operationId": "Ec2FlowLogs_ListBySubscription",
        "tags": [
          "Ec2FlowLogs"
        ],
        "description": "List Ec2FlowLog resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Ec2FlowLogListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Ec2FlowLogs_ListBySubscription": {
            "$ref": "./examples/Ec2FlowLogs_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AwsConnector/ec2FlowLogs": {
      "get": {
        "operationId": "Ec2FlowLogs_ListByResourceGroup",
        "tags": [
          "Ec2FlowLogs"
        ],
        "description": "List Ec2FlowLog resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Ec2FlowLogListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Ec2FlowLogs_ListByResourceGroup": {
            "$ref": "./examples/Ec2FlowLogs_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AwsConnector/ec2FlowLogs/{name}": {
      "get": {
        "operationId": "Ec2FlowLogs_Get",
        "tags": [
          "Ec2FlowLogs"
        ],
        "description": "Get a Ec2FlowLog",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of Ec2FlowLog",
            "required": true,
            "type": "string",
            "pattern": "^(?=.{0,259}[^\\s.]$)(?!.*[<>%&\\?/#])"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Ec2FlowLog"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Ec2FlowLogs_Get": {
            "$ref": "./examples/Ec2FlowLogs_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Ec2FlowLogs_CreateOrReplace",
        "tags": [
          "Ec2FlowLogs"
        ],
        "description": "Create a Ec2FlowLog. Please note that end user resource creation is currently restricted, but it will be enabled in the future.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of Ec2FlowLog",
            "required": true,
            "type": "string",
            "pattern": "^(?=.{0,259}[^\\s.]$)(?!.*[<>%&\\?/#])"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Ec2FlowLog"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Ec2FlowLog' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Ec2FlowLog"
            }
          },
          "201": {
            "description": "Resource 'Ec2FlowLog' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Ec2FlowLog"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Ec2FlowLogs_CreateOrReplace": {
            "$ref": "./examples/Ec2FlowLogs_CreateOrReplace.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Ec2FlowLogs_Update",
        "tags": [
          "Ec2FlowLogs"
        ],
        "description": "Update a Ec2FlowLog",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of Ec2FlowLog",
            "required": true,
            "type": "string",
            "pattern": "^(?=.{0,259}[^\\s.]$)(?!.*[<>%&\\?/#])"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Ec2FlowLogTagsUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Ec2FlowLog"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Ec2FlowLogs_Update": {
            "$ref": "./examples/Ec2FlowLogs_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Ec2FlowLogs_Delete",
        "tags": [
          "Ec2FlowLogs"
        ],
        "description": "Delete a Ec2FlowLog",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of Ec2FlowLog",
            "required": true,
            "type": "string",
            "pattern": "^(?=.{0,259}[^\\s.]$)(?!.*[<>%&\\?/#])"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Ec2FlowLogs_Delete": {
            "$ref": "./examples/Ec2FlowLogs_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AwsEc2FlowLogProperties": {
      "type": "object",
      "description": "Definition of awsEc2FlowLog",
      "properties": {
        "deliverCrossAccountRole": {
          "type": "string",
          "description": "The ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts."
        },
        "deliverLogsPermissionArn": {
          "type": "string",
          "description": "The ARN for the IAM role that permits Amazon EC2 to publish flow logs to a CloudWatch Logs log group in your account. If you specify LogDestinationType as s3 or kinesis-data-firehose, do not specify DeliverLogsPermissionArn or LogGroupName."
        },
        "destinationOptions": {
          "$ref": "#/definitions/DestinationOptionsModelProperties",
          "description": "Property destinationOptions"
        },
        "id": {
          "type": "string",
          "description": "The Flow Log ID"
        },
        "logDestination": {
          "type": "string",
          "description": "Specifies the destination to which the flow log data is to be published. Flow log data can be published to a CloudWatch Logs log group, an Amazon S3 bucket, or a Kinesis Firehose stream. The value specified for this parameter depends on the value specified for LogDestinationType."
        },
        "logDestinationType": {
          "$ref": "#/definitions/LogDestinationType",
          "description": "Specifies the type of destination to which the flow log data is to be published. Flow log data can be published to CloudWatch Logs or Amazon S3."
        },
        "logFormat": {
          "type": "string",
          "description": "The fields to include in the flow log record, in the order in which they should appear."
        },
        "logGroupName": {
          "type": "string",
          "description": "The name of a new or existing CloudWatch Logs log group where Amazon EC2 publishes your flow logs. If you specify LogDestinationType as s3 or kinesis-data-firehose, do not specify DeliverLogsPermissionArn or LogGroupName."
        },
        "maxAggregationInterval": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. You can specify 60 seconds (1 minute) or 600 seconds (10 minutes)."
        },
        "resourceId": {
          "type": "string",
          "description": "The ID of the subnet, network interface, or VPC for which you want to create a flow log."
        },
        "resourceType": {
          "$ref": "#/definitions/ResourceType",
          "description": "The type of resource for which to create the flow log. For example, if you specified a VPC ID for the ResourceId property, specify VPC for this property."
        },
        "tags": {
          "type": "array",
          "description": "The tags to apply to the flow logs.",
          "items": {
            "$ref": "#/definitions/Tag"
          },
          "x-ms-identifiers": []
        },
        "trafficType": {
          "$ref": "#/definitions/TrafficType",
          "description": "The type of traffic to log. You can log traffic that the resource accepts or rejects, or all traffic."
        }
      }
    },
    "DestinationOptionsModelProperties": {
      "type": "object",
      "description": "Definition of DestinationOptionsModelProperties",
      "properties": {
        "fileFormat": {
          "$ref": "#/definitions/FileFormat",
          "description": "Property fileFormat"
        },
        "hiveCompatiblePartitions": {
          "type": "boolean",
          "description": "Property hiveCompatiblePartitions"
        },
        "perHourPartition": {
          "type": "boolean",
          "description": "Property perHourPartition"
        }
      }
    },
    "Ec2FlowLog": {
      "type": "object",
      "description": "A Microsoft.AwsConnector resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/Ec2FlowLogProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "Ec2FlowLogListResult": {
      "type": "object",
      "description": "The response of a Ec2FlowLog list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Ec2FlowLog items on this page",
          "items": {
            "$ref": "#/definitions/Ec2FlowLog"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "Ec2FlowLogProperties": {
      "type": "object",
      "description": "Definition of Ec2FlowLog",
      "properties": {
        "awsProperties": {
          "$ref": "#/definitions/AwsEc2FlowLogProperties",
          "description": "AWS Properties"
        },
        "publicCloudConnectorsResourceId": {
          "type": "string",
          "description": "Public Cloud Connectors Resource ID"
        },
        "awsAccountId": {
          "type": "string",
          "description": "AWS Account ID"
        },
        "arn": {
          "type": "string",
          "description": "Amazon Resource Name (ARN)"
        },
        "publicCloudResourceName": {
          "type": "string",
          "description": "Public Cloud Resource Name"
        },
        "awsSourceSchema": {
          "type": "string",
          "description": "AWS Source Schema"
        },
        "awsRegion": {
          "type": "string",
          "description": "AWS Region"
        },
        "awsTags": {
          "type": "object",
          "description": "AWS Tags",
          "additionalProperties": {
            "type": "string"
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      }
    },
    "Ec2FlowLogTagsUpdate": {
      "type": "object",
      "description": "The type used for updating tags in Ec2FlowLog resources.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "FileFormat": {
      "type": "string",
      "description": "FileFormat enum",
      "enum": [
        "parquet",
        "plain-text"
      ],
      "x-ms-enum": {
        "name": "FileFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "parquet",
            "value": "parquet",
            "description": "FileFormat enum parquet"
          },
          {
            "name": "PlainText",
            "value": "plain-text",
            "description": "FileFormat enum plain-text"
          }
        ]
      }
    },
    "LogDestinationType": {
      "type": "string",
      "description": "LogDestinationType enum",
      "enum": [
        "cloud-watch-logs",
        "kinesis-data-firehose",
        "s3"
      ],
      "x-ms-enum": {
        "name": "LogDestinationType",
        "modelAsString": true,
        "values": [
          {
            "name": "CloudWatchLogs",
            "value": "cloud-watch-logs",
            "description": "LogDestinationType enum cloud-watch-logs"
          },
          {
            "name": "KinesisDataFirehose",
            "value": "kinesis-data-firehose",
            "description": "LogDestinationType enum kinesis-data-firehose"
          },
          {
            "name": "s3",
            "value": "s3",
            "description": "LogDestinationType enum s3"
          }
        ]
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The provisioning state of a resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "The resource is being provisioned"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "The resource is updating"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "The resource is being deleted"
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "The resource create request has been accepted"
          }
        ]
      },
      "readOnly": true
    },
    "ResourceType": {
      "type": "string",
      "description": "ResourceType enum",
      "enum": [
        "NetworkInterface",
        "Subnet",
        "TransitGateway",
        "TransitGatewayAttachment",
        "VPC"
      ],
      "x-ms-enum": {
        "name": "ResourceType",
        "modelAsString": true,
        "values": [
          {
            "name": "NetworkInterface",
            "value": "NetworkInterface",
            "description": "ResourceType enum NetworkInterface"
          },
          {
            "name": "Subnet",
            "value": "Subnet",
            "description": "ResourceType enum Subnet"
          },
          {
            "name": "TransitGateway",
            "value": "TransitGateway",
            "description": "ResourceType enum TransitGateway"
          },
          {
            "name": "TransitGatewayAttachment",
            "value": "TransitGatewayAttachment",
            "description": "ResourceType enum TransitGatewayAttachment"
          },
          {
            "name": "VPC",
            "value": "VPC",
            "description": "ResourceType enum VPC"
          }
        ]
      }
    },
    "Tag": {
      "type": "object",
      "description": "Definition of Tag",
      "properties": {
        "key": {
          "type": "string",
          "description": "Property key"
        },
        "value": {
          "type": "string",
          "description": "Property value"
        }
      }
    },
    "TrafficType": {
      "type": "string",
      "description": "TrafficType enum",
      "enum": [
        "ACCEPT",
        "ALL",
        "REJECT"
      ],
      "x-ms-enum": {
        "name": "TrafficType",
        "modelAsString": true,
        "values": [
          {
            "name": "ACCEPT",
            "value": "ACCEPT",
            "description": "TrafficType enum ACCEPT"
          },
          {
            "name": "ALL",
            "value": "ALL",
            "description": "TrafficType enum ALL"
          },
          {
            "name": "REJECT",
            "value": "REJECT",
            "description": "TrafficType enum REJECT"
          }
        ]
      }
    }
  },
  "parameters": {}
}
