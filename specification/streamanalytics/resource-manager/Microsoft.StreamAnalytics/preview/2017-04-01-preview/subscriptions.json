{
  "swagger": "2.0",
  "info": {
    "title": "StreamAnalyticsManagementClient",
    "version": "2017-04-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/locations/{location}/quotas": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "Subscriptions_ListQuotas",
        "description": "Retrieves the subscription's current quota information in a particular region.",
        "x-ms-examples": {
          "List subscription quota information in West US": {
            "$ref": "./examples/Subscription_ListQuotas.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/LocationParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the subscription's quota information in the specified region.",
            "schema": {
              "$ref": "#/definitions/SubscriptionQuotasListResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/locations/{location}/testQuery": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "Subscriptions_TestQuery",
        "description": "Test the Stream Analytics query on a sample input.",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Test the Stream Analytics query": {
            "$ref": "./examples/Subscription_TestQuery.json"
          }
        },
        "parameters": [
          {
            "name": "streamingJob",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./streamingjobs.json#/definitions/StreamingJob"
            },
            "description": "A streaming job object. This object defines the input, output, and transformation for the query testing."
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/LocationParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request to test the Stream Analytics query was successful.",
            "schema": {
              "$ref": "#/definitions/QueryTestingResult"
            }
          },
          "202": {
            "description": "The request to test the Stream Analytics query was successfully initiated."
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "../../common/v1/definitions.json#/definitions/Error"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/locations/{location}/compileQuery": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "Subscriptions_CompileQuery",
        "description": "Compile the Stream Analytics query.",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Compile the Stream Analytics query": {
            "$ref": "./examples/Subscription_CompileQuery.json"
          }
        },
        "parameters": [
          {
            "name": "streamingJob",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./streamingjobs.json#/definitions/StreamingJob"
            },
            "description": "A streaming job object. This object defines the input, output, and transformation for the query compilation."
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/LocationParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Stream Analytics query was compiled successfully.",
            "schema": {
              "$ref": "#/definitions/QueryCompilationResult"
            }
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "../../common/v1/definitions.json#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "SubscriptionQuotasListResult": {
      "description": "Result of the GetQuotas operation. It contains a list of quotas for the subscription in a particular region.",
      "properties": {
        "value": {
          "description": "List of quotas for the subscription in a particular region.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/SubscriptionQuota"
          }
        }
      }
    },
    "SubscriptionQuota": {
      "description": "Describes the current quota for the subscription.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Describes the properties of the quota.",
          "readOnly": true,
          "properties": {
            "maxCount": {
              "description": "The max permitted usage of this resource.",
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "currentCount": {
              "description": "The current usage of this resource.",
              "type": "integer",
              "format": "int32",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "QueryTestingResult": {
      "description": "The result of the query testing request.",
      "allOf": [
        {
          "$ref": "../../common/v1/definitions.json#/definitions/Error"
        }
      ],
      "properties": {
        "status": {
          "description": "The status of the query testing request.",
          "$ref": "#/definitions/QueryTestingResultStatus"
        },
        "outputUri": {
          "description": "The SAS URL to the outputs payload.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "QueryTestingResultStatus": {
      "description": "The status of the query testing request.",
      "readOnly": true,
      "type": "string",
      "enum": [
        "Started",
        "Success",
        "CompilerError",
        "RuntimeError",
        "Timeout",
        "UnknownError"
      ],
      "x-ms-enum": {
        "name": "QueryTestingResultStatus",
        "modelAsString": true,
        "values": [
          {
            "value": "Started",
            "description": "The query testing operation was initiated."
          },
          {
            "value": "Success",
            "description": "The query testing operation succeeded."
          },
          {
            "value": "CompilerError",
            "description": "The query testing operation failed due to a compiler error."
          },
          {
            "value": "RuntimeError",
            "description": "The query testing operation failed due to a runtime error."
          },
          {
            "value": "Timeout",
            "description": "The query testing operation failed due to a timeout."
          },
          {
            "value": "UnknownError",
            "description": "The query testing operation failed due to an unknown error ."
          }
        ]
      }
    },
    "QueryCompilationResult": {
      "description": "The result of the query compilation request.",
      "properties": {
        "errors": {
          "description": "The errors produced by the compiler.",
          "$ref": "#/definitions/QueryCompilationErrors"
        },
        "warnings": {
          "description": "Warning messages produced by the compiler.",
          "type": "array",
          "readOnly": true,
          "items": {
            "description": "A warning produced by the compiler.",
            "type": "string",
            "readOnly": true
          }
        },
        "inputs": {
          "description": "All input names used by the query.",
          "type": "array",
          "readOnly": true,
          "items": {
            "description": "An input used by the query.",
            "type": "string",
            "readOnly": true
          }
        },
        "outputs": {
          "description": "All output names used by the query.",
          "type": "array",
          "readOnly": true,
          "items": {
            "description": "An output used by the query.",
            "type": "string",
            "readOnly": true
          }
        },
        "functions": {
          "description": "All function names used by the query.",
          "type": "array",
          "readOnly": true,
          "items": {
            "description": "A function used by the query.",
            "type": "string",
            "readOnly": true
          }
        }
      }
    },
    "QueryCompilationErrors": {
      "description": "The errors produced by the compiler.",
      "properties": {
        "message": {
          "description": "The content of the error message.",
          "type": "string"
        },
        "startLine": {
          "description": "Describes the error location in the original query. Not set if isGlobal is true.",
          "type": "integer"
        },
        "startColumn": {
          "description": "Describes the error location in the original query. Not set if isGlobal is true.",
          "type": "integer"
        },
        "endLine": {
          "description": "Describes the error location in the original query. Not set if isGlobal is true.",
          "type": "integer"
        },
        "endColumn": {
          "description": "Describes the error location in the original query. Not set if isGlobal is true.",
          "type": "integer"
        },
        "isGlobal": {
          "description": "Whether the error is not for a specific part but for the entire query.",
          "type": "boolean"
        }
      }
    },
    "SubResource": {
      "description": "The base sub-resource model definition.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        }
      },
      "x-ms-azure-resource": true
    }
  }
}
