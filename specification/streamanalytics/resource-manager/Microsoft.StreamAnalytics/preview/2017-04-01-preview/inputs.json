{
  "swagger": "2.0",
  "info": {
    "title": "StreamAnalyticsManagementClient",
    "version": "2017-04-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/inputs/{inputName}": {
      "put": {
        "tags": [
          "Inputs"
        ],
        "operationId": "Inputs_CreateOrReplace",
        "description": "Creates an input or replaces an already existing input under an existing streaming job.",
        "x-ms-examples": {
          "Create a reference blob input with CSV serialization": {
            "$ref": "./examples/Input_Create_Reference_Blob_CSV.json"
          },
          "Create a stream blob input with CSV serialization": {
            "$ref": "./examples/Input_Create_Stream_Blob_CSV.json"
          },
          "Create a stream Event Hub input with JSON serialization": {
            "$ref": "./examples/Input_Create_Stream_EventHub_JSON.json"
          },
          "Create a stream IoT Hub input with Avro serialization": {
            "$ref": "./examples/Input_Create_Stream_IoTHub_Avro.json"
          }
        },
        "parameters": [
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Input"
            },
            "description": "The definition of the input that will be used to create a new input or replace the existing one under the streaming job."
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfMatch",
            "description": "The ETag of the input. Omit this value to always overwrite the current input. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes."
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfNoneMatch",
            "description": "Set to '*' to allow a new input to be created, but to prevent updating an existing input. Other values will result in a 412 Pre-condition Failed response."
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/StreamingJobNameParameter"
          },
          {
            "$ref": "#/parameters/InputNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The input was successfully created or replaced.",
            "schema": {
              "$ref": "#/definitions/Input"
            },
            "headers": {
              "ETag": {
                "description": "The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.",
                "type": "string"
              }
            }
          },
          "201": {
            "description": "The input was successfully created or replaced.",
            "schema": {
              "$ref": "#/definitions/Input"
            },
            "headers": {
              "ETag": {
                "description": "The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.",
                "type": "string"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Inputs"
        ],
        "operationId": "Inputs_Update",
        "description": "Updates an existing input under an existing streaming job. This can be used to partially update (ie. update one or two properties) an input without affecting the rest the job or input definition.",
        "x-ms-examples": {
          "Update a reference blob input": {
            "$ref": "./examples/Input_Update_Reference_Blob.json"
          },
          "Update a stream blob input": {
            "$ref": "./examples/Input_Update_Stream_Blob.json"
          },
          "Update a stream Event Hub input": {
            "$ref": "./examples/Input_Update_Stream_EventHub.json"
          },
          "Update a stream IoT Hub input": {
            "$ref": "./examples/Input_Update_Stream_IoTHub.json"
          }
        },
        "parameters": [
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Input"
            },
            "description": "An Input object. The properties specified here will overwrite the corresponding properties in the existing input (ie. Those properties will be updated). Any properties that are set to null here will mean that the corresponding property in the existing input will remain the same and not change as a result of this PATCH operation."
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfMatch",
            "description": "The ETag of the input. Omit this value to always overwrite the current input. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes."
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/StreamingJobNameParameter"
          },
          {
            "$ref": "#/parameters/InputNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The input was successfully updated.",
            "schema": {
              "$ref": "#/definitions/Input"
            },
            "headers": {
              "ETag": {
                "description": "The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.",
                "type": "string"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Inputs"
        ],
        "operationId": "Inputs_Delete",
        "description": "Deletes an input from the streaming job.",
        "x-ms-examples": {
          "Delete an input": {
            "$ref": "./examples/Input_Delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/StreamingJobNameParameter"
          },
          {
            "$ref": "#/parameters/InputNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The input was successfully deleted."
          },
          "204": {
            "description": "The input does not exist."
          }
        }
      },
      "get": {
        "tags": [
          "Inputs"
        ],
        "operationId": "Inputs_Get",
        "description": "Gets details about the specified input.",
        "x-ms-examples": {
          "Get a reference blob input with CSV serialization": {
            "$ref": "./examples/Input_Get_Reference_Blob_CSV.json"
          },
          "Get a stream blob input with CSV serialization": {
            "$ref": "./examples/Input_Get_Stream_Blob_CSV.json"
          },
          "Get a stream Event Hub input with JSON serialization": {
            "$ref": "./examples/Input_Get_Stream_EventHub_JSON.json"
          },
          "Get a stream IoT Hub input with Avro serialization": {
            "$ref": "./examples/Input_Get_Stream_IoTHub_Avro.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/StreamingJobNameParameter"
          },
          {
            "$ref": "#/parameters/InputNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the specified input.",
            "schema": {
              "$ref": "#/definitions/Input"
            },
            "headers": {
              "ETag": {
                "description": "The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/inputs": {
      "get": {
        "tags": [
          "Inputs"
        ],
        "operationId": "Inputs_ListByStreamingJob",
        "description": "Lists all of the inputs under the specified streaming job.",
        "x-ms-examples": {
          "List all inputs in a streaming job": {
            "$ref": "./examples/Input_ListByStreamingJob.json"
          },
          "List all inputs in a streaming job and include diagnostic information using the $select OData query parameter": {
            "$ref": "./examples/Input_ListByStreamingJob_Diagnostics.json"
          }
        },
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The $select OData query parameter. This is a comma-separated list of structural properties to include in the response, or \"*\" to include all properties. By default, all properties are returned except diagnostics. Currently only accepts '*' as a valid value."
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/StreamingJobNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed the inputs under the specified streaming job.",
            "schema": {
              "$ref": "#/definitions/InputListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/inputs/{inputName}/test": {
      "post": {
        "tags": [
          "Inputs"
        ],
        "operationId": "Inputs_Test",
        "description": "Tests whether an input’s datasource is reachable and usable by the Azure Stream Analytics service.",
        "x-ms-examples": {
          "Test the connection for an input": {
            "$ref": "./examples/Input_Test.json"
          }
        },
        "parameters": [
          {
            "name": "input",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Input"
            },
            "description": "If the input specified does not already exist, this parameter must contain the full input definition intended to be tested. If the input specified already exists, this parameter can be left null to test the existing input as is or if specified, the properties specified will overwrite the corresponding properties in the existing input (exactly like a PATCH operation) and the resulting input will be tested."
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/StreamingJobNameParameter"
          },
          {
            "$ref": "#/parameters/InputNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The test operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceTestStatus"
            }
          },
          "202": {
            "description": "The test request was successfully initiated."
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "Input": {
      "description": "An input object, containing all information associated with the named input. All inputs are contained under a streaming job.",
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/InputProperties",
          "description": "The properties that are associated with an input. Required on PUT (CreateOrReplace) requests."
        }
      }
    },
    "InputProperties": {
      "description": "The properties that are associated with an input.",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "description": "Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests."
        },
        "serialization": {
          "$ref": "#/definitions/Serialization",
          "description": "Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests."
        },
        "diagnostics": {
          "readOnly": true,
          "$ref": "#/definitions/Diagnostics",
          "description": "Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency."
        },
        "compression": {
          "$ref": "#/definitions/Compression"
        },
        "partitionKey": {
          "type": "string",
          "description": "partitionKey Describes a key in the input data which is used for partitioning the input data"
        }
      },
      "required": [
        "type"
      ]
    },
    "StreamInputProperties": {
      "description": "The properties that are associated with an input containing stream data.",
      "x-ms-discriminator-value": "Stream",
      "allOf": [
        {
          "$ref": "#/definitions/InputProperties"
        }
      ],
      "properties": {
        "datasource": {
          "$ref": "#/definitions/StreamInputDataSource",
          "description": "Describes an input data source that contains stream data. Required on PUT (CreateOrReplace) requests."
        }
      }
    },
    "ReferenceInputProperties": {
      "description": "The properties that are associated with an input containing reference data.",
      "x-ms-discriminator-value": "Reference",
      "allOf": [
        {
          "$ref": "#/definitions/InputProperties"
        }
      ],
      "properties": {
        "datasource": {
          "$ref": "#/definitions/ReferenceInputDataSource",
          "description": "Describes an input data source that contains reference data. Required on PUT (CreateOrReplace) requests."
        }
      }
    },
    "StreamInputDataSource": {
      "description": "Describes an input data source that contains stream data.",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "description": "Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests."
        }
      },
      "required": [
        "type"
      ]
    },
    "BlobStreamInputDataSource": {
      "description": "Describes a blob input data source that contains stream data.",
      "x-ms-discriminator-value": "Microsoft.Storage/Blob",
      "allOf": [
        {
          "$ref": "#/definitions/StreamInputDataSource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BlobStreamInputDataSourceProperties",
          "description": "The properties that are associated with a blob input containing stream data. Required on PUT (CreateOrReplace) requests.",
          "x-ms-client-flatten": true
        }
      }
    },
    "BlobStreamInputDataSourceProperties": {
      "description": "The properties that are associated with a blob input containing stream data.",
      "allOf": [
        {
          "$ref": "#/definitions/BlobDataSourceProperties"
        }
      ],
      "properties": {
        "sourcePartitionCount": {
          "type": "integer",
          "format": "int32",
          "description": "The partition count of the blob input data source. Range 1 - 256."
        }
      }
    },
    "EventHubStreamInputDataSource": {
      "description": "Describes an Event Hub input data source that contains stream data.",
      "x-ms-discriminator-value": "Microsoft.ServiceBus/EventHub",
      "allOf": [
        {
          "$ref": "#/definitions/StreamInputDataSource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/EventHubStreamInputDataSourceProperties",
          "description": "The properties that are associated with an Event Hub input containing stream data. Required on PUT (CreateOrReplace) requests.",
          "x-ms-client-flatten": true
        }
      }
    },
    "EventHubV2StreamInputDataSource": {
      "description": "Describes an Event Hub input data source that contains stream data.",
      "x-ms-discriminator-value": "Microsoft.EventHub/EventHub",
      "allOf": [
        {
          "$ref": "#/definitions/StreamInputDataSource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/EventHubStreamInputDataSourceProperties",
          "description": "The properties that are associated with an Event Hub input containing stream data. Required on PUT (CreateOrReplace) requests.",
          "x-ms-client-flatten": true
        }
      }
    },
    "EventHubStreamInputDataSourceProperties": {
      "description": "The properties that are associated with a Event Hub input containing stream data.",
      "allOf": [
        {
          "$ref": "#/definitions/EventHubDataSourceProperties"
        }
      ],
      "properties": {
        "consumerGroupName": {
          "type": "string",
          "description": "The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hub’s default consumer group."
        }
      }
    },
    "IoTHubStreamInputDataSource": {
      "description": "Describes an IoT Hub input data source that contains stream data.",
      "x-ms-discriminator-value": "Microsoft.Devices/IotHubs",
      "allOf": [
        {
          "$ref": "#/definitions/StreamInputDataSource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/IoTHubStreamInputDataSourceProperties",
          "description": "The properties that are associated with an IoT Hub input containing stream data. Required on PUT (CreateOrReplace) requests.",
          "x-ms-client-flatten": true
        }
      }
    },
    "IoTHubStreamInputDataSourceProperties": {
      "description": "The properties that are associated with a IoT Hub input containing stream data.",
      "properties": {
        "iotHubNamespace": {
          "type": "string",
          "description": "The name or the URI of the IoT Hub. Required on PUT (CreateOrReplace) requests."
        },
        "sharedAccessPolicyName": {
          "type": "string",
          "description": "The shared access policy name for the IoT Hub. This policy must contain at least the Service connect permission. Required on PUT (CreateOrReplace) requests."
        },
        "sharedAccessPolicyKey": {
          "type": "string",
          "description": "The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests."
        },
        "consumerGroupName": {
          "type": "string",
          "description": "The name of an IoT Hub Consumer Group that should be used to read events from the IoT Hub. If not specified, the input uses the Iot Hub’s default consumer group."
        },
        "endpoint": {
          "type": "string",
          "description": "The IoT Hub endpoint to connect to (ie. messages/events, messages/operationsMonitoringEvents, etc.)."
        }
      }
    },
    "ReferenceInputDataSource": {
      "description": "Describes an input data source that contains reference data.",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "description": "Indicates the type of input data source containing reference data. Required on PUT (CreateOrReplace) requests."
        }
      },
      "required": [
        "type"
      ]
    },
    "BlobReferenceInputDataSource": {
      "description": "Describes a blob input data source that contains reference data.",
      "x-ms-discriminator-value": "Microsoft.Storage/Blob",
      "allOf": [
        {
          "$ref": "#/definitions/ReferenceInputDataSource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BlobReferenceInputDataSourceProperties",
          "description": "The properties that are associated with a blob input containing reference data. Required on PUT (CreateOrReplace) requests.",
          "x-ms-client-flatten": true
        }
      }
    },
    "BlobReferenceInputDataSourceProperties": {
      "description": "The properties that are associated with a blob input containing reference data.",
      "allOf": [
        {
          "$ref": "#/definitions/BlobDataSourceProperties"
        }
      ],
      "properties": {}
    },
    "BlobDataSourceProperties": {
      "description": "The properties that are associated with a blob data source.",
      "properties": {
        "storageAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAccount"
          },
          "description": "A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests."
        },
        "container": {
          "type": "string",
          "description": "The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests."
        },
        "pathPattern": {
          "type": "string",
          "description": "The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example."
        },
        "dateFormat": {
          "type": "string",
          "description": "The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead."
        },
        "timeFormat": {
          "type": "string",
          "description": "The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead."
        }
      }
    },
    "StorageAccount": {
      "description": "The properties that are associated with an Azure Storage account",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests."
        },
        "accountKey": {
          "type": "string",
          "description": "The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests."
        }
      }
    },
    "ServiceBusDataSourceProperties": {
      "description": "The common properties that are associated with Service Bus data sources (Queues, Topics, Event Hubs, etc.).",
      "properties": {
        "serviceBusNamespace": {
          "type": "string",
          "description": "The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests."
        },
        "sharedAccessPolicyName": {
          "type": "string",
          "description": "The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests."
        },
        "sharedAccessPolicyKey": {
          "type": "string",
          "description": "The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests."
        },
        "authenticationMode": {
          "$ref": "../../common/v1/definitions.json#/definitions/AuthenticationMode",
          "description": "Authentication Mode."
        }
      }
    },
    "EventHubDataSourceProperties": {
      "description": "The common properties that are associated with Event Hub data sources.",
      "allOf": [
        {
          "$ref": "#/definitions/ServiceBusDataSourceProperties"
        }
      ],
      "properties": {
        "eventHubName": {
          "type": "string",
          "description": "The name of the Event Hub. Required on PUT (CreateOrReplace) requests."
        }
      }
    },
    "Diagnostics": {
      "description": "Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.",
      "properties": {
        "conditions": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiagnosticCondition"
          },
          "description": "A collection of zero or more conditions applicable to the resource, or to the job overall, that warrant customer attention."
        }
      }
    },
    "DiagnosticCondition": {
      "description": "Condition applicable to the resource, or to the job overall, that warrant customer attention.",
      "properties": {
        "since": {
          "readOnly": true,
          "type": "string",
          "description": "The UTC timestamp of when the condition started. Customers should be able to find a corresponding event in the ops log around this time."
        },
        "code": {
          "readOnly": true,
          "type": "string",
          "description": "The opaque diagnostic code."
        },
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "The human-readable message describing the condition in detail. Localized in the Accept-Language of the client request."
        }
      }
    },
    "InputListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Input"
          },
          "readOnly": true,
          "description": "A list of inputs under a streaming job. Populated by a 'List' operation."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The link (url) to the next page of results."
        }
      },
      "description": "Object containing a list of inputs under a streaming job."
    },
    "Serialization": {
      "description": "Describes how data from an input is serialized or how data is serialized when written to an output.",
      "discriminator": "type",
      "properties": {
        "type": {
          "$ref": "#/definitions/EventSerializationType"
        }
      },
      "required": [
        "type"
      ]
    },
    "ParquetSerialization": {
      "description": "Describes how data from an input is serialized or how data is serialized when written to an output in Parquet format.",
      "x-ms-discriminator-value": "Parquet",
      "allOf": [
        {
          "$ref": "#/definitions/Serialization"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ParquetSerializationProperties",
          "description": "The properties that are associated with the Parquet serialization type. Required on PUT (CreateOrReplace) requests.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ParquetSerializationProperties": {
      "description": "The properties that are associated with the Parquet serialization type.",
      "properties": {}
    },
    "CustomClrSerialization": {
      "description": "Describes how data from an input is serialized or how data is serialized when written to an output in custom format.",
      "x-ms-discriminator-value": "CustomClr",
      "allOf": [
        {
          "$ref": "#/definitions/Serialization"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/CustomClrSerializationProperties",
          "description": "The properties that are associated with the CustomClr serialization type. Required on PUT (CreateOrReplace) requests.",
          "x-ms-client-flatten": true
        }
      }
    },
    "CustomClrSerializationProperties": {
      "description": "The properties that are associated with the CustomClr serialization type.",
      "properties": {
        "serializationDllPath": {
          "type": "string",
          "description": "The serialization library path."
        },
        "serializationClassName": {
          "type": "string",
          "description": "The serialization class name."
        }
      }
    },
    "CsvSerialization": {
      "description": "Describes how data from an input is serialized or how data is serialized when written to an output in CSV format.",
      "x-ms-discriminator-value": "Csv",
      "allOf": [
        {
          "$ref": "#/definitions/Serialization"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/CsvSerializationProperties",
          "description": "The properties that are associated with the CSV serialization type. Required on PUT (CreateOrReplace) requests.",
          "x-ms-client-flatten": true
        }
      }
    },
    "CsvSerializationProperties": {
      "description": "The properties that are associated with the CSV serialization type.",
      "properties": {
        "fieldDelimiter": {
          "type": "string",
          "description": "Specifies the delimiter that will be used to separate comma-separated value (CSV) records. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a list of supported values. Required on PUT (CreateOrReplace) requests."
        },
        "encoding": {
          "$ref": "#/definitions/Encoding",
          "description": "Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. Required on PUT (CreateOrReplace) requests."
        }
      }
    },
    "JsonSerialization": {
      "description": "Describes how data from an input is serialized or how data is serialized when written to an output in JSON format.",
      "x-ms-discriminator-value": "Json",
      "allOf": [
        {
          "$ref": "#/definitions/Serialization"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/JsonSerializationProperties",
          "description": "The properties that are associated with the JSON serialization type. Required on PUT (CreateOrReplace) requests.",
          "x-ms-client-flatten": true
        }
      }
    },
    "JsonSerializationProperties": {
      "description": "The properties that are associated with the JSON serialization type.",
      "properties": {
        "encoding": {
          "$ref": "#/definitions/Encoding",
          "description": "Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. Required on PUT (CreateOrReplace) requests."
        },
        "format": {
          "$ref": "#/definitions/JsonOutputSerializationFormat",
          "description": "This property only applies to JSON serialization of outputs only. It is not applicable to inputs. This property specifies the format of the JSON the output will be written in. The currently supported values are 'lineSeparated' indicating the output will be formatted by having each JSON object separated by a new line and 'array' indicating the output will be formatted as an array of JSON objects. Default value is 'lineSeparated' if left null."
        }
      }
    },
    "AvroSerialization": {
      "description": "Describes how data from an input is serialized or how data is serialized when written to an output in Avro format.",
      "x-ms-discriminator-value": "Avro",
      "allOf": [
        {
          "$ref": "#/definitions/Serialization"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AvroSerializationProperties",
          "description": "The properties that are associated with the Avro serialization type. Required on PUT (CreateOrReplace) requests.",
          "x-ms-client-flatten": true
        }
      }
    },
    "AvroSerializationProperties": {
      "description": "The properties that are associated with the Avro serialization type.",
      "properties": {}
    },
    "Encoding": {
      "type": "string",
      "description": "Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output.",
      "enum": [
        "UTF8"
      ],
      "x-ms-enum": {
        "name": "Encoding",
        "modelAsString": true
      }
    },
    "JsonOutputSerializationFormat": {
      "type": "string",
      "description": "Specifies the format of the JSON the output will be written in. The currently supported values are 'lineSeparated' indicating the output will be formatted by having each JSON object separated by a new line and 'array' indicating the output will be formatted as an array of JSON objects.",
      "enum": [
        "LineSeparated",
        "Array"
      ],
      "x-ms-enum": {
        "name": "JsonOutputSerializationFormat",
        "modelAsString": true
      }
    },
    "ResourceTestStatus": {
      "description": "Describes the status of the test operation along with error information, if applicable.",
      "properties": {
        "status": {
          "readOnly": true,
          "type": "string",
          "description": "The status of the test operation."
        },
        "error": {
          "readOnly": true,
          "$ref": "#/definitions/ErrorResponse",
          "description": "Describes the error that occurred."
        }
      }
    },
    "ErrorResponse": {
      "description": "Describes the error that occurred.",
      "properties": {
        "code": {
          "readOnly": true,
          "type": "string",
          "description": "Error code associated with the error that occurred."
        },
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "Describes the error in detail."
        }
      }
    },
    "SubResource": {
      "description": "The base sub-resource model definition.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        }
      },
      "x-ms-azure-resource": true
    },
    "Compression": {
      "description": "Describes how input data is compressed",
      "properties": {
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "Identity": {
      "description": "Describes how identity is verified",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "principalId": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "AzureSqlReferenceInputDataSource": {
      "description": "Describes an Azure SQL database reference input data source.",
      "x-ms-discriminator-value": "Microsoft.Sql/Server/Database",
      "allOf": [
        {
          "$ref": "#/definitions/ReferenceInputDataSource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AzureSqlReferenceInputDataSourceProperties"
        }
      }
    },
    "AzureSqlReferenceInputDataSourceProperties": {
      "properties": {
        "server": {
          "description": "This element is associated with the datasource element. This is the name of the server that contains the database that will be written to.",
          "type": "string"
        },
        "database": {
          "description": "This element is associated with the datasource element. This is the name of the database that output will be written to.",
          "type": "string"
        },
        "user": {
          "description": "This element is associated with the datasource element. This is the user name that will be used to connect to the SQL Database instance.",
          "type": "string"
        },
        "password": {
          "description": "This element is associated with the datasource element. This is the password that will be used to connect to the SQL Database instance.",
          "type": "string"
        },
        "table": {
          "description": "This element is associated with the datasource element. The name of the table in the Azure SQL database..",
          "type": "string"
        },
        "refreshType": {
          "description": "This element is associated with the datasource element. This element is of enum type. It indicates what kind of data refresh option do we want to use:Static/RefreshPeriodicallyWithFull/RefreshPeriodicallyWithDelta",
          "type": "string"
        },
        "refreshRate": {
          "description": "This element is associated with the datasource element. This indicates how frequently the data will be fetched from the database. It is of DateTime format.",
          "type": "string"
        },
        "fullSnapshotQuery": {
          "description": "This element is associated with the datasource element. This query is used to fetch data from the sql database.",
          "type": "string"
        },
        "deltaSnapshotQuery": {
          "description": "This element is associated with the datasource element. This query is used to fetch incremental changes from the SQL database. To use this option, we recommend using temporal tables in Azure SQL Database.",
          "type": "string"
        }
      }
    },
    "EventSerializationType": {
      "type": "string",
      "description": "Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.",
      "enum": [
        "Csv",
        "Avro",
        "Json",
        "CustomClr",
        "Parquet"
      ],
      "x-ms-enum": {
        "name": "EventSerializationType",
        "modelAsString": true
      }
    }
  },
  "parameters": {
    "InputNameParameter": {
      "name": "inputName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the input.",
      "x-ms-parameter-location": "method"
    }
  }
}
