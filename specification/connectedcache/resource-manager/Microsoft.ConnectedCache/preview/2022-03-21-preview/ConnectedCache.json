{
  "swagger": "2.0",
  "info": {
    "version": "2022-03-21-preview",
    "title": "ConnectedCache",
    "description": "Microsoft Connected cache REST API version 2022-03-21-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user node"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.ConnectedCache/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "x-ms-examples": {
          "ConnectedCacheOperationsList": {
            "$ref": "./examples/ConnectedCacheOperationsList.json"
          }
        },
        "description": "Retrieves a list of available API operations",
        "summary": "Retrieves a list of available API operations under this Resource Provider",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the list of operations under Microsoft.ConnectedCache resource provider",
            "schema": {
              "$ref": "#/definitions/ResourceProviderOperationList"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (Connected Cache does not exist.)",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/enterpriseCustomers/{customerName}": {
      "get": {
        "tags": [
          "enterpriseCustomers"
        ],
        "summary": "Retrieves information about a customer Enterprise resource",
        "description": "Retrieves the properties of a Enterprise customer",
        "operationId": "enterpriseCustomers_Get",
        "x-ms-examples": {
          "enterpriseCustomers Get": {
            "$ref": "./examples/enterpriseCustomersGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the cacheNodes",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (cacheNodes does not exist.)",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "enterpriseCustomers"
        ],
        "summary": "Creates a cacheNodes resource",
        "description": "Creates a cacheNodes with the specified create parameters",
        "operationId": "enterpriseCustomers_CreateOrUpdate",
        "x-ms-examples": {
          "enterpriseCustomers CreateOrUpdate": {
            "$ref": "./examples/enterpriseCustomersCreateOrUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "enterpriseCustomers create parameters",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the enterpriseCustomers",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          },
          "201": {
            "description": "The request was successful; response contains the updated Connected Cache node",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (enterpriseCustomers could not be created/updated)",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "enterpriseCustomers"
        ],
        "summary": "Deletes a enterpriseCustomers  resource",
        "description": "Deletes an existing customer Enterprise resource",
        "operationId": "enterpriseCustomers_Delete",
        "x-ms-examples": {
          "enterpriseCustomers Delete": {
            "$ref": "./examples/enterpriseCustomersDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the Cache Node is deleted"
          },
          "204": {
            "description": "The request was successful; Cache Node does not exist"
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 409 - Conflict"
          }
        }
      },
      "patch": {
        "tags": [
          "enterpriseCustomers"
        ],
        "summary": "updates an existing customer Ent resource",
        "description": "updates an existing enterpriseCustomers",
        "operationId": "enterpriseCustomers_Update",
        "x-ms-examples": {
          "enterpriseCustomers Update": {
            "$ref": "./examples/enterpriseCustomersUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "cacheNodes patch parameters",
            "schema": {
              "$ref": "#/definitions/ConnectedCachePatchResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the updated Cache node",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          },
          "201": {
            "description": "The request was successful; response contains the updated Cache node",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (Cache Node does not exist.)",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/enterpriseCustomers": {
      "get": {
        "tags": [
          "enterpriseCustomers"
        ],
        "summary": "Retrieves information about all ConnectedCache resources under the given subscription and resource group",
        "description": "Retrieves the properties of all ConnectedCache enterpriseCustomers",
        "operationId": "enterpriseCustomers_ListByResourceGroup",
        "x-ms-examples": {
          "enterpriseCustomers ListBy ResourceGroup": {
            "$ref": "./examples/enterpriseCustomersListByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the ConnectedCache",
            "schema": {
              "$ref": "#/definitions/ConnectedCacheList"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (ConnectedCache does not exist.)",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedCache/enterpriseCustomers": {
      "get": {
        "tags": [
          "enterpriseCustomers"
        ],
        "summary": "Retrieves information about all ConnectedCache resources under the given subscription",
        "description": "Retrieves the properties of all ConnectedCaches",
        "operationId": "enterpriseCustomers_ListBySubscription",
        "x-ms-examples": {
          "enterpriseCustomers ListBy Subscription": {
            "$ref": "./examples/enterpriseCustomersListBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the list of ConnectedCache resources",
            "schema": {
              "$ref": "#/definitions/ConnectedCacheList"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (ConnectedCache does not exist.)",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/cacheNodes/{cacheNodeName}": {
      "get": {
        "tags": [
          "cacheNodes"
        ],
        "summary": "Retrieves information about a cacheNodes resource",
        "description": "Retrieves the properties of a cacheNodes",
        "operationId": "cacheNodes_Get",
        "x-ms-examples": {
          "CacheNodesGet": {
            "$ref": "./examples/CacheNodesGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CacheNodeNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the cacheNodes",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (cacheNodes does not exist.)",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "cacheNodes"
        ],
        "summary": "Creates a cacheNodes resource",
        "description": "Creates a cacheNodes with the specified create parameters",
        "operationId": "cacheNodes_CreateorUpdate",
        "x-ms-examples": {
          "CacheNodesCreateOrUpdate": {
            "$ref": "./examples/CacheNodesCreateOrUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CacheNodeNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "cacheNodes create parameters",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the cacheNodes",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          },
          "201": {
            "description": "The request was successful; response contains the updated Connected Cache node",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (cacheNodes could not be created/updated)",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "cacheNodes"
        ],
        "summary": "Deletes a cache Nodes resource",
        "description": "Deletes an existing cache Node",
        "operationId": "cacheNodes_Delete",
        "x-ms-examples": {
          "CacheNodesDelete": {
            "$ref": "./examples/CacheNodesDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CacheNodeNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the Cache Node is deleted"
          },
          "204": {
            "description": "The request was successful; Cache Node does not exist"
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 409 - Conflict"
          }
        }
      },
      "patch": {
        "tags": [
          "cacheNodes"
        ],
        "summary": "updates an existing Cache Node resource",
        "description": "updates an existing Cache Node",
        "operationId": "cacheNodes_Update",
        "x-ms-examples": {
          "CacheNodesUpdate": {
            "$ref": "./examples/CacheNodesUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CacheNodeNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "cacheNodes patch parameters",
            "schema": {
              "$ref": "#/definitions/ConnectedCachePatchResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the updated Cache node",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          },
          "201": {
            "description": "The request was successful; response contains the updated Cache node",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (Cache Node does not exist.)",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/cacheNodes": {
      "get": {
        "tags": [
          "cacheNodes"
        ],
        "summary": "Retrieves information about all ConnectedCache resources under the given subscription and resource group",
        "description": "Retrieves the properties of all ConnectedCache",
        "operationId": "cacheNodes_ListByResourceGroup",
        "x-ms-examples": {
          "CacheNodesListByResourceGroup": {
            "$ref": "./examples/CacheNodesListByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the ConnectedCache",
            "schema": {
              "$ref": "#/definitions/ConnectedCacheList"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (ConnectedCache does not exist.)",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedCache/cacheNodes": {
      "get": {
        "tags": [
          "cacheNodes"
        ],
        "summary": "Retrieves information about all ConnectedCache resources under the given subscription",
        "description": "Retrieves the properties of all ConnectedCaches",
        "operationId": "cacheNodes_ListBySubscription",
        "x-ms-examples": {
          "CacheNodesListBySubscription": {
            "$ref": "./examples/CacheNodesListBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the list of ConnectedCache resources",
            "schema": {
              "$ref": "#/definitions/ConnectedCacheList"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (ConnectedCache does not exist.)",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/ispCustomers/{customerName}": {
      "get": {
        "tags": [
          "ispCustomers"
        ],
        "summary": "Gets ispCustomer resource information",
        "description": "Gets the ispCustomer resource information using this get call",
        "operationId": "ispCustomers_Get",
        "x-ms-examples": {
          "ispCustomers Get": {
            "$ref": "./examples/ispCustomersGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The get request was successful; response contains the ispCustomer",
            "schema": {
              "$ref": "#/definitions/MccCustomerResource"
            }
          },
          "default": {
            "description": "The get request has failed; error response details : 4xx/5xx for ispCustomer",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ispCustomers"
        ],
        "summary": "Creates an ispCustomer resource",
        "description": "This api creates an ispCustomer with the specified create parameters",
        "operationId": "ispCustomers_CreateOrUpdate",
        "x-ms-examples": {
          "ispCustomers CreateOrUpdate": {
            "$ref": "./examples/ispCustomersCreateOrUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "ispCustomer create parameters",
            "schema": {
              "$ref": "#/definitions/MccCustomerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The put request was successful; response contains the ispCustomer",
            "schema": {
              "$ref": "#/definitions/MccCustomerResource"
            }
          },
          "201": {
            "description": "The put request was successful; response contains the updated ispCustomer",
            "schema": {
              "$ref": "#/definitions/MccCustomerResource"
            }
          },
          "default": {
            "description": "The create/update request has failed; error response details : 4xx/5xx for ispCustomer",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "ispCustomers"
        ],
        "summary": "Deletes an ispCustomer resource",
        "description": "This api deletes an existing ispCustomer resource",
        "operationId": "ispCustomers_Delete",
        "x-ms-examples": {
          "ispCustomers Delete": {
            "$ref": "./examples/ispCustomersDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The delete request was successful; the ispCustomer was deleted"
          },
          "202": {
            "description": "The delete request was accepted; the ispCustomer is being deleted"
          },
          "204": {
            "description": "The delete request was successful; the ispCustomer does not exists"
          },
          "default": {
            "description": "The delete request has failed; error response details : 4xx/5xx for ispCustomer"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "ispCustomers"
        ],
        "summary": "updates an existing ispCustomer resource",
        "description": "This api updates an existing ispCustomer resource",
        "operationId": "ispCustomers_Update",
        "x-ms-examples": {
          "ispCustomers Update": {
            "$ref": "./examples/ispCustomersUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "ispCustomers patch parameters",
            "schema": {
              "$ref": "#/definitions/ConnectedCachePatchResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The update request was successful; response contains the updated ispCustomer",
            "schema": {
              "$ref": "#/definitions/MccCustomerResource"
            }
          },
          "201": {
            "description": "The update request was successful; the ispCustomer does not exists",
            "schema": {
              "$ref": "#/definitions/MccCustomerResource"
            }
          },
          "default": {
            "description": "The update request has failed; error response details : 4xx/5xx for ispCustomer",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/ispCustomers": {
      "get": {
        "tags": [
          "ispCustomers"
        ],
        "summary": "Retrieves information about all ispCustomer resources under the given subscription and resource group",
        "description": "This api gets the information about all ispCustomer resources under the given subscription and resource group",
        "operationId": "ispCustomers_ListByResourceGroup",
        "x-ms-examples": {
          "ispCustomers ListBy ResourceGroup": {
            "$ref": "./examples/ispCustomersListByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The get request was successful; response contains the ispCustomer resources",
            "schema": {
              "$ref": "#/definitions/MccCustomerResourceList"
            }
          },
          "default": {
            "description": "The get request has failed; error response details : 4xx/5xx for ispCustomer resources",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedCache/ispCustomers": {
      "get": {
        "tags": [
          "ispCustomers"
        ],
        "summary": "Retrieves information about all ispCustomer resources under the given subscription",
        "description": "This api gets information about all ispCustomer resources under the given subscription",
        "operationId": "ispCustomers_ListBySubscription",
        "x-ms-examples": {
          "ispCustomers ListBy Subscription": {
            "$ref": "./examples/ispCustomersListBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The get request was successful; response contains the list of ispCustomer resources",
            "schema": {
              "$ref": "#/definitions/MccCustomerResourceList"
            }
          },
          "default": {
            "description": "The get request has failed; error response details : 4xx/5xx for ispCustomer resources",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/ispCustomers/{customerName}/ispCacheNodes/{cacheNodeName}": {
      "get": {
        "tags": [
          "ispCacheNodes"
        ],
        "summary": "Gets ispCacheNode resource information of an ispCustomer parent resource",
        "description": "This api gets ispCacheNode resource information",
        "operationId": "ispCacheNodes_Get",
        "x-ms-examples": {
          "ispCacheNodes Get": {
            "$ref": "./examples/ispCacheNodesGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          },
          {
            "$ref": "#/parameters/CacheNodeNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The get request was successful; response contains ispCacheNode",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          },
          "default": {
            "description": "The get request has failed; error response details : 4xx/5xx for ispCacheNode",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ispCacheNodes"
        ],
        "summary": "Creates an ispCacheNode resource",
        "description": "This api creates an ispCacheNode with the specified create parameters",
        "operationId": "ispCacheNodes_CreateOrUpdate",
        "x-ms-examples": {
          "ispCacheNodes CreateOrUpdate": {
            "$ref": "./examples/ispCacheNodesCreateOrUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          },
          {
            "$ref": "#/parameters/CacheNodeNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "ispCustomer create parameters un request body",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The put request was successful; response contains the ispCacheNode",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          },
          "201": {
            "description": "The put request was successful; response contains the updated ispCacheNode",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          },
          "default": {
            "description": "The create/update request has failed; error response details : 4xx/5xx for ispCacheNode",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "ispCacheNodes"
        ],
        "summary": "Deletes an ispCacheNode  resource",
        "description": "This api deletes an existing ispCacheNode resource",
        "operationId": "ispCacheNodes_Delete",
        "x-ms-examples": {
          "ispCacheNodes Delete": {
            "$ref": "./examples/ispCacheNodesDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          },
          {
            "$ref": "#/parameters/CacheNodeNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The delete request was successful; the ispCacheNode was deleted"
          },
          "202": {
            "description": "The delete request was accepted; the ispCacheNode is being deleted"
          },
          "204": {
            "description": "The delete request was successful; the ispCacheNode does not exists"
          },
          "default": {
            "description": "The delete request has failed; error response details : 4xx/5xx for ispCacheNode"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "ispCacheNodes"
        ],
        "summary": "Updates an existing ispCacheNode resource",
        "description": "This api updates an existing ispCacheNode resource",
        "operationId": "ispCacheNodes_Update",
        "x-ms-examples": {
          "ispCacheNodes Update": {
            "$ref": "./examples/ispCacheNodesUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          },
          {
            "$ref": "#/parameters/CacheNodeNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "cacheNodes patch parameters",
            "schema": {
              "$ref": "#/definitions/ConnectedCachePatchResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The update request was successful; the response contains the updated ispCacheNode",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          },
          "201": {
            "description": "The update request was successful; the ispCacheNode does not exists",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          },
          "default": {
            "description": "The update request has failed; error response details : 4xx/5xx for ispCacheNode",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/ispCustomers/{customerName}/ispCacheNodes": {
      "get": {
        "tags": [
          "ispCacheNodes"
        ],
        "summary": "Retrieves information about all ispCacheNode resources under the given subscription and resource group",
        "description": "This api retrieves information about all ispCacheNode resources under the given subscription and resource group",
        "operationId": "ispCacheNodes_ListByCustomers",
        "x-ms-examples": {
          "ispCacheNodes ListBy Customers": {
            "$ref": "./examples/ispCacheNodesListByCustomer.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The get request was successful; response contains the list of ispCacheNode resources",
            "schema": {
              "$ref": "#/definitions/ConnectedCacheList"
            }
          },
          "default": {
            "description": "The get request has failed; error response details : 4xx/5xx for ispCacheNode resources",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedCache/ispCustomers/{customerName}/ispCacheNodes": {
      "get": {
        "tags": [
          "ispCacheNodes"
        ],
        "summary": "Retrieves information about all ispCacheNode resources under the given subscription",
        "description": "This api retrieves information about all ispCacheNode resources under the given subscription",
        "operationId": "ispCacheNodes_ListBySubscription",
        "x-ms-examples": {
          "ispCacheNodes ListBy Subscription": {
            "$ref": "./examples/ispCacheNodesListBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The get request was successful; response contains the list of ispCacheNode resources",
            "schema": {
              "$ref": "#/definitions/ConnectedCacheList"
            }
          },
          "default": {
            "description": "The get request has failed; error response details : 4xx/5xx for ispCacheNode resources",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "MCCErrorResponse": {
      "type": "object",
      "description": "Error response indicates that the service is not able to process the incoming request",
      "properties": {
        "status": {
          "description": "status of the HTTP error code",
          "type": "string",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/ErrorDefinition",
          "description": "The error details"
        },
        "properties": {
          "description": "Additional ConnectedCache properties",
          "title": "ConnectedCache Additional properties",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CacheNode"
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource",
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData"
        }
      }
    },
    "ErrorDefinition": {
      "type": "object",
      "description": "Error definition",
      "properties": {
        "code": {
          "description": "Service specific error code which serves as the substatus for the HTTP error code",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "Description of the error",
          "type": "string",
          "readOnly": true
        },
        "details": {
          "description": "Internal error details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDefinition"
          },
          "x-ms-identifiers": [
            "message"
          ],
          "readOnly": true
        }
      }
    },
    "MccCustomerResourceList": {
      "description": "Object that includes an array of MccCustomerResource and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of MccCustomerResource resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MccCustomerResource"
          }
        },
        "nextLink": {
          "description": "The URL the client should use to fetch the next page (per server side paging)",
          "type": "string"
        }
      }
    },
    "MccCustomerResource": {
      "type": "object",
      "description": "MCC customer Resource. Represents the high level Nodes needed to provision CacheNode resources",
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "location": {
          "description": "Region where the Azure resource is located",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Additional tag configuration related properties",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Additional ConnectedCache properties",
          "title": "ConnectedCache Additional properties",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/Customer"
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource",
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData"
        }
      }
    },
    "Customer": {
      "type": "object",
      "description": "Model representing Cache Node for ConnectedCache resource",
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The provisioned state of the resource",
          "enum": [
            "Unknown",
            "Accepted",
            "Succeeded",
            "Failed",
            "Cancelled",
            "Upgrading",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "customer": {
          "type": "object",
          "description": " Mcc Customer Json response"
        },
        "additionalCustomerProperties": {
          "type": "object",
          "description": "additional Mcc Customer Json properties",
          "additionalProperties": {
            "type": "object"
          }
        },
        "statusCode": {
          "type": "string",
          "description": "statusCode used to get code details of MCC response object"
        },
        "statusText": {
          "type": "string",
          "description": "statusText used to get status details in string format of MCC response object"
        },
        "statusDetails": {
          "type": "string",
          "description": "statusDetails used to get inner details of MCC response object"
        },
        "status": {
          "description": "status of the HTTP error code",
          "type": "string",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/ErrorDefinition",
          "description": "The error details"
        }
      }
    },
    "ConnectedCache": {
      "type": "object",
      "description": "ConnectedCache Resource. Represents the high level Nodes needed to provision CacheNode resources",
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "location": {
          "description": "Region where the Azure resource is located",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Additional tag configuration related properties",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Additional ConnectedCache properties",
          "title": "ConnectedCache Additional properties",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CacheNode"
        }
      }
    },
    "ConnectedCachePatchResource": {
      "type": "object",
      "description": "cacheNodes patch properties",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Additional tag configuration related properties",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CacheNode": {
      "type": "object",
      "description": "Model representing Cache Node for ConnectedCache resource",
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The provisioned state of the resource",
          "enum": [
            "Unknown",
            "Accepted",
            "Succeeded",
            "Failed",
            "Cancelled",
            "Upgrading",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "customer": {
          "type": "object",
          "description": " Mcc Customer Json response"
        },
        "additionalCustomerProperties": {
          "type": "object",
          "description": "additional Mcc Customer Json properties",
          "additionalProperties": {
            "type": "object"
          }
        },
        "cacheNode": {
          "type": "object",
          "description": " Mcc Cache Node Json response"
        },
        "additionalCacheNodeProperties": {
          "type": "object",
          "description": "additional Mcc Cache Node Json properties for BGP and Update and IOT central",
          "additionalProperties": {
            "type": "object"
          }
        },
        "statusCode": {
          "type": "string",
          "description": "statusCode used to get code details of MCC response object"
        },
        "statusText": {
          "type": "string",
          "description": "statusText used to get status details in string format of MCC response object"
        },
        "statusDetails": {
          "type": "string",
          "description": "statusDetails used to get inner details of MCC response object"
        },
        "status": {
          "description": "status of the HTTP error code",
          "type": "string",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/ErrorDefinition",
          "description": "The error details"
        }
      }
    },
    "ResourceProviderOperationList": {
      "type": "object",
      "title": "Result of the request to list REST API operations. It contains a list of operations and a URL nextLink to get the next set of results",
      "description": "List containing this Resource Provider's available operations",
      "properties": {
        "value": {
          "description": "Resource provider operations list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceProviderOperationDefinition"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "The URI that can be used to request the next page for list of Azure operations",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ResourceProviderOperationDefinition": {
      "title": "A REST API operation",
      "type": "object",
      "description": "Describes the Resource Provider Operation",
      "properties": {
        "name": {
          "title": "The operations name",
          "description": "Resource provider operation name",
          "type": "string"
        },
        "isDataAction": {
          "description": "Indicates whether the operation is a data action",
          "type": "string"
        },
        "display": {
          "description": "Resource provider display properties",
          "$ref": "#/definitions/ResourceProviderOperationDisplay"
        },
        "origin": {
          "description": "Origin of the operation",
          "type": "string"
        }
      }
    },
    "ResourceProviderOperationDisplay": {
      "type": "object",
      "description": "Describes the properties of the Operation",
      "properties": {
        "provider": {
          "description": "Name of the resource provider",
          "type": "string"
        },
        "resource": {
          "description": "Name of the resource type",
          "type": "string"
        },
        "operation": {
          "description": "Name of the resource provider operation",
          "type": "string"
        },
        "description": {
          "description": "Description of the resource provider operation",
          "type": "string"
        }
      }
    },
    "ConnectedCacheList": {
      "description": "Object that includes an array of ConnectedCache and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of ConnectedCache resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnectedCache"
          },
          "x-ms-identifiers": []
        },
        "additionalAggregatedProperties": {
          "description": "Tags for the ConnectedCache",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "nextLink": {
          "description": "The URL the client should use to fetch the next page (per server side paging)",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group",
      "maxLength": 90,
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to be used with the HTTP request"
    },
    "CacheNodeNameParameter": {
      "name": "cacheNodeName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the ConnectedCache resource",
      "pattern": "^[a-zA-Z0-9]",
      "x-ms-parameter-location": "method"
    },
    "CustomerNameParameter": {
      "name": "customerName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the Customer resource",
      "pattern": "^[a-zA-Z0-9]",
      "x-ms-parameter-location": "method"
    }
  }
}
