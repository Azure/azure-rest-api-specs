{
  "swagger": "2.0",
  "info": {
    "version": "2023-05-01-preview",
    "title": "ConnectedCache",
    "description": "Microsoft Connected cache REST API version 2023-05-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user node"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.ConnectedCache/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "x-ms-examples": {
          "ConnectedCacheOperationsList": {
            "$ref": "./examples/ConnectedCacheOperationsList.json"
          }
        },
        "description": "Retrieves a list of available API operations",
        "summary": "Retrieves a list of available API operations under this Resource Provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the list of operations under Microsoft.ConnectedCache resource provider",
            "schema": {
              "$ref": "#/definitions/ResourceProviderOperationList"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (Connected Cache does not exist.)",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/enterpriseCustomers/{customerResourceName}": {
      "get": {
        "tags": [
          "enterpriseCustomers"
        ],
        "summary": "Retrieves information about a customer Enterprise resource",
        "description": "Retrieves the properties of a Enterprise customer",
        "operationId": "enterpriseCustomers_Get",
        "x-ms-examples": {
          "enterpriseCustomers Get": {
            "$ref": "./examples/enterpriseCustomersGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the cacheNodes",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (cacheNodes does not exist.)",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "enterpriseCustomers"
        ],
        "summary": "Creates a cacheNodes resource",
        "description": "Creates a cacheNodes with the specified create parameters",
        "operationId": "enterpriseCustomers_CreateOrUpdate",
        "x-ms-examples": {
          "enterpriseCustomers CreateOrUpdate": {
            "$ref": "./examples/enterpriseCustomersCreateOrUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "enterpriseCustomers create parameters",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the enterpriseCustomers",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          },
          "201": {
            "description": "The request was successful; response contains the updated Connected Cache node",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (enterpriseCustomers could not be created/updated)",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "enterpriseCustomers"
        ],
        "summary": "Deletes a enterpriseCustomers  resource",
        "description": "Deletes an existing customer Enterprise resource",
        "operationId": "enterpriseCustomers_Delete",
        "x-ms-examples": {
          "enterpriseCustomers Delete": {
            "$ref": "./examples/enterpriseCustomersDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the Cache Node is deleted"
          },
          "204": {
            "description": "The request was successful; Cache Node does not exist"
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 409 - Conflict",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "enterpriseCustomers"
        ],
        "summary": "updates an existing customer Ent resource",
        "description": "updates an existing enterpriseCustomers",
        "operationId": "enterpriseCustomers_Update",
        "x-ms-examples": {
          "enterpriseCustomers Update": {
            "$ref": "./examples/enterpriseCustomersUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "cacheNodes patch parameters",
            "schema": {
              "$ref": "#/definitions/ConnectedCachePatchResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the updated Cache node",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          },
          "201": {
            "description": "The request was successful; response contains the updated Cache node",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (Cache Node does not exist.)",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/enterpriseCustomers": {
      "get": {
        "tags": [
          "enterpriseCustomers"
        ],
        "summary": "Retrieves information about all ConnectedCache resources under the given subscription and resource group",
        "description": "Retrieves the properties of all ConnectedCache enterpriseCustomers",
        "operationId": "enterpriseCustomers_ListByResourceGroup",
        "x-ms-examples": {
          "enterpriseCustomers ListBy ResourceGroup": {
            "$ref": "./examples/enterpriseCustomersListByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the ConnectedCache",
            "schema": {
              "$ref": "#/definitions/ConnectedCacheList"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (ConnectedCache does not exist.)",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedCache/enterpriseCustomers": {
      "get": {
        "tags": [
          "enterpriseCustomers"
        ],
        "summary": "Retrieves information about all ConnectedCache resources under the given subscription",
        "description": "Retrieves the properties of all ConnectedCaches",
        "operationId": "enterpriseCustomers_ListBySubscription",
        "x-ms-examples": {
          "enterpriseCustomers ListBy Subscription": {
            "$ref": "./examples/enterpriseCustomersListBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the list of ConnectedCache resources",
            "schema": {
              "$ref": "#/definitions/ConnectedCacheList"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (ConnectedCache does not exist.)",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/cacheNodes/{cacheNodeResourceName}": {
      "get": {
        "tags": [
          "cacheNodes"
        ],
        "summary": "Retrieves information about a cacheNodes resource",
        "description": "Retrieves the properties of a cacheNodes",
        "operationId": "cacheNodes_Get",
        "x-ms-examples": {
          "CacheNodesGet": {
            "$ref": "./examples/CacheNodesGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CacheNodeNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the cacheNodes",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (cacheNodes does not exist.)",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "cacheNodes"
        ],
        "summary": "Creates a cacheNodes resource",
        "description": "Creates a cacheNodes with the specified create parameters",
        "operationId": "cacheNodes_CreateorUpdate",
        "x-ms-examples": {
          "CacheNodesCreateOrUpdate": {
            "$ref": "./examples/CacheNodesCreateOrUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CacheNodeNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "cacheNodes create parameters",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the cacheNodes",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          },
          "201": {
            "description": "The request was successful; response contains the updated Connected Cache node",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (cacheNodes could not be created/updated)",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "cacheNodes"
        ],
        "summary": "Deletes a cache Nodes resource",
        "description": "Deletes an existing cache Node",
        "operationId": "cacheNodes_Delete",
        "x-ms-examples": {
          "CacheNodesDelete": {
            "$ref": "./examples/CacheNodesDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CacheNodeNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the Cache Node is deleted"
          },
          "204": {
            "description": "The request was successful; Cache Node does not exist"
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 409 - Conflict",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "cacheNodes"
        ],
        "summary": "updates an existing Cache Node resource",
        "description": "updates an existing Cache Node",
        "operationId": "cacheNodes_Update",
        "x-ms-examples": {
          "CacheNodesUpdate": {
            "$ref": "./examples/CacheNodesUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CacheNodeNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "cacheNodes patch parameters",
            "schema": {
              "$ref": "#/definitions/ConnectedCachePatchResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the updated Cache node",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          },
          "201": {
            "description": "The request was successful; response contains the updated Cache node",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (Cache Node does not exist.)",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/cacheNodes": {
      "get": {
        "tags": [
          "cacheNodes"
        ],
        "summary": "Retrieves information about all ConnectedCache resources under the given subscription and resource group",
        "description": "Retrieves the properties of all ConnectedCache",
        "operationId": "cacheNodes_ListByResourceGroup",
        "x-ms-examples": {
          "CacheNodesListByResourceGroup": {
            "$ref": "./examples/CacheNodesListByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the ConnectedCache",
            "schema": {
              "$ref": "#/definitions/ConnectedCacheList"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (ConnectedCache does not exist.)",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedCache/cacheNodes": {
      "get": {
        "tags": [
          "cacheNodes"
        ],
        "summary": "Retrieves information about all ConnectedCache resources under the given subscription",
        "description": "Retrieves the properties of all ConnectedCaches",
        "operationId": "cacheNodes_ListBySubscription",
        "x-ms-examples": {
          "CacheNodesListBySubscription": {
            "$ref": "./examples/CacheNodesListBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the list of ConnectedCache resources",
            "schema": {
              "$ref": "#/definitions/ConnectedCacheList"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (ConnectedCache does not exist.)",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/ispCustomers/{customerResourceName}": {
      "get": {
        "tags": [
          "ispCustomers"
        ],
        "summary": "Gets ispCustomer resource information",
        "description": "Gets the ispCustomer resource information using this get call",
        "operationId": "ispCustomers_Get",
        "x-ms-examples": {
          "ispCustomers Get": {
            "$ref": "./examples/ispCustomersGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The get request was successful; response contains the ispCustomer",
            "schema": {
              "$ref": "#/definitions/MccCustomerResource"
            }
          },
          "default": {
            "description": "The get request has failed; error response details : 4xx/5xx for ispCustomer",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ispCustomers"
        ],
        "summary": "Creates an ispCustomer resource",
        "description": "This api creates an ispCustomer with the specified create parameters",
        "operationId": "ispCustomers_CreateOrUpdate",
        "x-ms-examples": {
          "ispCustomers CreateOrUpdate": {
            "$ref": "./examples/ispCustomersCreateOrUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "ispCustomer create parameters",
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateCustomerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The put request was successful; response contains the ispCustomer",
            "schema": {
              "$ref": "#/definitions/MccCustomerResource"
            }
          },
          "201": {
            "description": "The put request was successful; response contains the updated ispCustomer",
            "schema": {
              "$ref": "#/definitions/MccCustomerResource"
            }
          },
          "default": {
            "description": "The create/update request has failed; error response details : 4xx/5xx for ispCustomer",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "ispCustomers"
        ],
        "summary": "Deletes an ispCustomer resource",
        "description": "This api deletes an existing ispCustomer resource",
        "operationId": "ispCustomers_Delete",
        "x-ms-examples": {
          "ispCustomers Delete": {
            "$ref": "./examples/ispCustomersDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The delete request was successful; the ispCustomer was deleted"
          },
          "202": {
            "description": "The delete request was accepted; the ispCustomer is being deleted"
          },
          "204": {
            "description": "The delete request was successful; the ispCustomer does not exists"
          },
          "default": {
            "description": "The delete request has failed; error response details : 4xx/5xx for ispCustomer",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "ispCustomers"
        ],
        "summary": "updates an existing ispCustomer resource",
        "description": "This api updates an existing ispCustomer resource",
        "operationId": "ispCustomers_Update",
        "x-ms-examples": {
          "ispCustomers Update": {
            "$ref": "./examples/ispCustomersUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "ispCustomers patch parameters",
            "schema": {
              "$ref": "#/definitions/ConnectedCachePatchResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The update request was successful; response contains the updated ispCustomer",
            "schema": {
              "$ref": "#/definitions/MccCustomerResource"
            }
          },
          "201": {
            "description": "The update request was successful; the ispCustomer does not exists",
            "schema": {
              "$ref": "#/definitions/MccCustomerResource"
            }
          },
          "default": {
            "description": "The update request has failed; error response details : 4xx/5xx for ispCustomer",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/ispCustomers": {
      "get": {
        "tags": [
          "ispCustomers"
        ],
        "summary": "Retrieves information about all ispCustomer resources under the given subscription and resource group",
        "description": "This api gets the information about all ispCustomer resources under the given subscription and resource group",
        "operationId": "ispCustomers_ListByResourceGroup",
        "x-ms-examples": {
          "ispCustomers ListBy ResourceGroup": {
            "$ref": "./examples/ispCustomersListByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The get request was successful; response contains the ispCustomer resources",
            "schema": {
              "$ref": "#/definitions/MccCustomerResourceList"
            }
          },
          "default": {
            "description": "The get request has failed; error response details : 4xx/5xx for ispCustomer resources",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedCache/ispCustomers": {
      "get": {
        "tags": [
          "ispCustomers"
        ],
        "summary": "Retrieves information about all ispCustomer resources under the given subscription",
        "description": "This api gets information about all ispCustomer resources under the given subscription",
        "operationId": "ispCustomers_ListBySubscription",
        "x-ms-examples": {
          "ispCustomers ListBy Subscription": {
            "$ref": "./examples/ispCustomersListBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The get request was successful; response contains the list of ispCustomer resources",
            "schema": {
              "$ref": "#/definitions/MccCustomerResourceList"
            }
          },
          "default": {
            "description": "The get request has failed; error response details : 4xx/5xx for ispCustomer resources",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/ispCustomers/{customerResourceName}/ispCacheNodes/{cacheNodeResourceName}": {
      "get": {
        "tags": [
          "ispCacheNodes"
        ],
        "summary": "Gets ispCacheNode resource information of an ispCustomer parent resource",
        "description": "This api gets ispCacheNode resource information",
        "operationId": "ispCacheNodes_Get",
        "x-ms-examples": {
          "ispCacheNodes Get": {
            "$ref": "./examples/ispCacheNodesGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          },
          {
            "$ref": "#/parameters/CacheNodeNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The get request was successful; response contains ispCacheNode",
            "schema": {
              "$ref": "#/definitions/MccCacheNodeResource"
            }
          },
          "default": {
            "description": "The get request has failed; error response details : 4xx/5xx for ispCacheNode",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ispCacheNodes"
        ],
        "summary": "Creates an ispCacheNode resource",
        "description": "This api creates an ispCacheNode with the specified create parameters",
        "operationId": "ispCacheNodes_CreateOrUpdate",
        "x-ms-examples": {
          "ispCacheNodes CreateOrUpdate": {
            "$ref": "./examples/ispCacheNodesCreateOrUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          },
          {
            "$ref": "#/parameters/CacheNodeNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "ispCustomer create parameters un request body",
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateCacheNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The put request was successful; response contains the ispCacheNode",
            "schema": {
              "$ref": "#/definitions/MccCacheNodeResource"
            }
          },
          "201": {
            "description": "The put request was successful; response contains the updated ispCacheNode",
            "schema": {
              "$ref": "#/definitions/MccCacheNodeResource"
            }
          },
          "default": {
            "description": "The create/update request has failed; error response details : 4xx/5xx for ispCacheNode",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "ispCacheNodes"
        ],
        "summary": "Deletes an ispCacheNode  resource",
        "description": "This api deletes an existing ispCacheNode resource",
        "operationId": "ispCacheNodes_Delete",
        "x-ms-examples": {
          "ispCacheNodes Delete": {
            "$ref": "./examples/ispCacheNodesDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          },
          {
            "$ref": "#/parameters/CacheNodeNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The delete request was successful; the ispCacheNode was deleted"
          },
          "202": {
            "description": "The delete request was accepted; the ispCacheNode is being deleted"
          },
          "204": {
            "description": "The delete request was successful; the ispCacheNode does not exists"
          },
          "default": {
            "description": "The delete request has failed; error response details : 4xx/5xx for ispCacheNode",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "ispCacheNodes"
        ],
        "summary": "Updates an existing ispCacheNode resource",
        "description": "This api updates an existing ispCacheNode resource",
        "operationId": "ispCacheNodes_Update",
        "x-ms-examples": {
          "ispCacheNodes Update": {
            "$ref": "./examples/ispCacheNodesUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          },
          {
            "$ref": "#/parameters/CacheNodeNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "cacheNodes patch parameters",
            "schema": {
              "$ref": "#/definitions/ConnectedCachePatchResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The update request was successful; the response contains the updated ispCacheNode",
            "schema": {
              "$ref": "#/definitions/MccCacheNodeResource"
            }
          },
          "201": {
            "description": "The update request was successful; the ispCacheNode does not exists",
            "schema": {
              "$ref": "#/definitions/MccCacheNodeResource"
            }
          },
          "default": {
            "description": "The update request has failed; error response details : 4xx/5xx for ispCacheNode",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/ispCustomers/{customerResourceName}/ispCacheNodes": {
      "get": {
        "tags": [
          "ispCacheNodes"
        ],
        "summary": "Retrieves information about all ispCacheNode resources under the given subscription and resource group",
        "description": "This api retrieves information about all ispCacheNode resources under the given subscription and resource group",
        "operationId": "ispCacheNodes_ListByCustomers",
        "x-ms-examples": {
          "ispCacheNodes ListBy Customers": {
            "$ref": "./examples/ispCacheNodesListByCustomer.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The get request was successful; response contains the list of ispCacheNode resources",
            "schema": {
              "$ref": "#/definitions/MccCacheNodeResourceList"
            }
          },
          "default": {
            "description": "The get request has failed; error response details : 4xx/5xx for ispCacheNode resources",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/ispCustomers/{customerResourceName}/ispCacheNodes/{cacheNodeResourceName}/getBgpCidrs": {
      "post": {
        "tags": [
          "ispCacheNodes"
        ],
        "summary": "Gets ispCacheNode resource information of an ispCustomer parent resource",
        "description": "This api gets ispCacheNode resource information",
        "operationId": "ispCacheNodes_getBgpCidrs",
        "x-ms-examples": {
          "ispCacheNodes Bgp Cidrs Get": {
            "$ref": "./examples/ispCacheNodesGetBGPCidrs.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          },
          {
            "$ref": "#/parameters/CacheNodeNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The get Bgp cidrs request was successful; response contains ispCacheNode Bgp Cidrs",
            "schema": {
              "$ref": "#/definitions/MccCacheNodeBgpCidrDetails"
            }
          },
          "default": {
            "description": "The get request has failed; error response details : 4xx/5xx for ispCacheNode",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/enterpriseMccCustomers/{customerResourceName}": {
      "get": {
        "tags": [
          "enterpriseMccCustomers"
        ],
        "summary": "Gets enterpriseMccCustomers resource information",
        "description": "This api gets the enterpriseMccCustomers resource information using this get call",
        "operationId": "enterpriseMccCustomers_Get",
        "x-ms-examples": {
          "enterpriseMccCustomers Get": {
            "$ref": "./examples/enterprise/enterpriseMccCustomersGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The get request was successful; response contains the enterpriseMccCustomer",
            "schema": {
              "$ref": "#/definitions/MccCustomerResource"
            }
          },
          "default": {
            "description": "The get request has failed; error response details : 4xx/5xx for enterpriseMccCustomer",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "enterpriseMccCustomers"
        ],
        "summary": "Creates an enterpriseMccCustomer resource",
        "description": "This api creates an enterpriseMccCustomer with the specified create parameters",
        "operationId": "enterpriseMccCustomers_CreateOrUpdate",
        "x-ms-examples": {
          "enterpriseMccCustomers CreateOrUpdate": {
            "$ref": "./examples/enterprise/enterpriseMccCustomersCreateOrUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "enterpriseMccCustomer create parameters",
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateCustomerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The put request was successful; response contains the enterpriseMccCustomer",
            "schema": {
              "$ref": "#/definitions/MccCustomerResource"
            }
          },
          "201": {
            "description": "The put request was successful; response contains the updated enterpriseMccCustomer",
            "schema": {
              "$ref": "#/definitions/MccCustomerResource"
            }
          },
          "default": {
            "description": "The create/update request has failed; error response details : 4xx/5xx for enterpriseMccCustomer",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "enterpriseMccCustomers"
        ],
        "summary": "Deletes an enterpriseMccCustomer resource",
        "description": "This api deletes an existing enterpriseMccCustomer resource",
        "operationId": "enterpriseMccCustomers_Delete",
        "x-ms-examples": {
          "enterpriseMccCustomers Delete": {
            "$ref": "./examples/enterprise/enterpriseMccCustomersDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The delete request was successful; the enterpriseMccCustomer was deleted"
          },
          "202": {
            "description": "The delete request was accepted; the enterpriseMccCustomer is being deleted"
          },
          "204": {
            "description": "The delete request was successful; the enterpriseMccCustomer does not exists"
          },
          "default": {
            "description": "The delete request has failed; error response details : 4xx/5xx for enterpriseMccCustomer",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "enterpriseMccCustomers"
        ],
        "summary": "updates an existing enterpriseMccCustomer resource",
        "description": "This api updates an existing enterpriseMccCustomer resource",
        "operationId": "enterpriseMccCustomers_Update",
        "x-ms-examples": {
          "enterpriseMccCustomers Update": {
            "$ref": "./examples/enterprise/enterpriseMccCustomersUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "enterpriseMccCustomers patch parameters",
            "schema": {
              "$ref": "#/definitions/ConnectedCachePatchResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The update request was successful; response contains the updated enterpriseMccCustomer",
            "schema": {
              "$ref": "#/definitions/MccCustomerResource"
            }
          },
          "202": {
            "description": "Initial Accepted state for patch request"
          },
          "default": {
            "description": "The update request has failed; error response details : 4xx/5xx for enterpriseMccCustomer",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/enterpriseMccCustomers": {
      "get": {
        "tags": [
          "enterpriseMccCustomers"
        ],
        "summary": "Retrieves information about all enterprise Mcc Customer resources under the given subscription and resource group",
        "description": "This api gets the information about all enterprise Mcc Customer resources under the given subscription and resource group",
        "operationId": "enterpriseMccCustomers_ListByResourceGroup",
        "x-ms-examples": {
          "enterpriseMccCustomers ListBy ResourceGroup": {
            "$ref": "./examples/enterprise/enterpriseMccCustomersListByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The get request was successful; response contains the ispCustomer resources",
            "schema": {
              "$ref": "#/definitions/MccCustomerResourceList"
            }
          },
          "default": {
            "description": "The get request has failed; error response details : 4xx/5xx for ispCustomer resources",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedCache/enterpriseMccCustomers": {
      "get": {
        "tags": [
          "enterpriseMccCustomers"
        ],
        "summary": "Retrieves information about all enterprise mcc customer resources under the given subscription",
        "description": "This api gets information about all enterprise mcc customer resources under the given subscription",
        "operationId": "enterpriseMccCustomers_ListBySubscription",
        "x-ms-examples": {
          "enterpriseMccCustomers ListBy Subscription": {
            "$ref": "./examples/enterprise/enterpriseMccCustomersListBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The get request was successful; response contains the list of enterprise mcc customer resources",
            "schema": {
              "$ref": "#/definitions/MccCustomerResourceList"
            }
          },
          "default": {
            "description": "The get request has failed; error response details : 4xx/5xx for enterprise mcc customer resources",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/enterpriseMccCustomers/{customerResourceName}/enterpriseMccCacheNodes/{cacheNodeResourceName}": {
      "get": {
        "tags": [
          "enterpriseMccCacheNodes"
        ],
        "summary": "Gets enterpriseMccCacheNode resource information of an enterprise mcc customer parent resource",
        "description": "This api gets enterpriseMccCacheNode resource information",
        "operationId": "enterpriseMccCacheNodes_Get",
        "x-ms-examples": {
          "enterpriseMccCacheNodes Get": {
            "$ref": "./examples/enterprise/enterpriseMccCacheNodesGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          },
          {
            "$ref": "#/parameters/CacheNodeNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The get request was successful; response contains enterpriseMccCacheNode",
            "schema": {
              "$ref": "#/definitions/MccCacheNodeResource"
            }
          },
          "default": {
            "description": "The get request has failed; error response details : 4xx/5xx for enterpriseMccCacheNode",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "enterpriseMccCacheNodes"
        ],
        "summary": "Creates an enterpriseMccCacheNode resource",
        "description": "This api creates an enterpriseMccCacheNode with the specified create parameters",
        "operationId": "enterpriseMccCacheNodes_CreateOrUpdate",
        "x-ms-examples": {
          "enterpriseMccCacheNodes CreateOrUpdate": {
            "$ref": "./examples/enterprise/enterpriseMccCacheNodesCreateOrUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          },
          {
            "$ref": "#/parameters/CacheNodeNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "enterpriseMccCacheNode create parameters un request body",
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateCacheNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The put request was successful; response contains the enterpriseMccCacheNode",
            "schema": {
              "$ref": "#/definitions/MccCacheNodeResource"
            }
          },
          "201": {
            "description": "The put request was successful; response contains the updated enterpriseMccCacheNode",
            "schema": {
              "$ref": "#/definitions/MccCacheNodeResource"
            }
          },
          "default": {
            "description": "The create/update request has failed; error response details : 4xx/5xx for enterpriseMccCacheNode",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "enterpriseMccCacheNodes"
        ],
        "summary": "Deletes an enterpriseMccCacheNode resource",
        "description": "This api deletes an existing enterpriseMccCacheNode resource",
        "operationId": "enterpriseMccCacheNodes_Delete",
        "x-ms-examples": {
          "enterpriseMccCacheNodes Delete": {
            "$ref": "./examples/enterprise/enterpriseMccCacheNodesDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          },
          {
            "$ref": "#/parameters/CacheNodeNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The delete request was successful; the enterpriseMccCacheNode was deleted"
          },
          "202": {
            "description": "The delete request was accepted; the enterpriseMccCacheNode is being deleted"
          },
          "204": {
            "description": "The delete request was successful; the enterpriseMccCacheNode does not exists"
          },
          "default": {
            "description": "The delete request has failed; error response details : 4xx/5xx for enterpriseMccCacheNode",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "enterpriseMccCacheNodes"
        ],
        "summary": "Updates an existing enterpriseMccCacheNode resource",
        "description": "This api updates an existing enterpriseMccCacheNode resource",
        "operationId": "enterpriseMccCacheNodes_Update",
        "x-ms-examples": {
          "enterpriseMccCacheNodes Update": {
            "$ref": "./examples/enterprise/enterpriseMccCacheNodesUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          },
          {
            "$ref": "#/parameters/CacheNodeNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "enterpriseMccCacheNode patch parameters",
            "schema": {
              "$ref": "#/definitions/ConnectedCachePatchResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The update request was successful; the response contains the updated enterpriseMccCacheNode",
            "schema": {
              "$ref": "#/definitions/ConnectedCache"
            }
          },
          "202": {
            "description": "Initial Accepted state for patch request"
          },
          "default": {
            "description": "The update request has failed; error response details : 4xx/5xx for enterpriseMccCacheNode",
            "schema": {
              "$ref": "#/definitions/MCCErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/enterpriseMccCustomers/{customerResourceName}/enterpriseMccCacheNodes": {
      "get": {
        "tags": [
          "enterpriseMccCacheNodes"
        ],
        "summary": "Retrieves information about all enterpriseMccCacheNode resources under the given subscription and resource group",
        "description": "This api retrieves information about all enterpriseMccCacheNode resources under the given subscription and resource group",
        "operationId": "enterpriseMccCacheNodes_ListByCustomers",
        "x-ms-examples": {
          "enterpriseMccCacheNodes ListBy Customers": {
            "$ref": "./examples/enterprise/enterpriseMccCacheNodesListByCustomer.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The get request was successful; response contains the list of enterpriseMccCacheNode resources",
            "schema": {
              "$ref": "#/definitions/ConnectedCacheList"
            }
          },
          "default": {
            "description": "The get request has failed; error response details : 4xx/5xx for enterpriseMccCacheNode resources",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "MCCErrorResponse": {
      "type": "object",
      "description": "Error response indicates that the service is not able to process the incoming request",
      "properties": {
        "status": {
          "description": "status of the HTTP error code",
          "type": "string",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/ErrorDefinition",
          "description": "The error details"
        },
        "properties": {
          "description": "Additional ConnectedCache properties",
          "title": "ConnectedCache Additional properties",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CacheNode"
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource",
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData"
        }
      }
    },
    "BgpConfiguration": {
      "type": "object",
      "description": "Bgp configuration of cache node",
      "properties": {
        "AsnToIpAddressMapping": {
          "description": "Asn to ip address mapping",
          "type": "string"
        }
      }
    },
    "CacheNodeDriveConfiguration": {
      "type": "object",
      "description": "Drive configuration for cache node",
      "properties": {
        "physicalPath": {
          "description": "physical path location of the folder used for caching content",
          "type": "string"
        },
        "sizeInGb": {
          "description": "physical size of the drive used for caching content",
          "type": "integer",
          "format": "int32"
        },
        "cacheNumber": {
          "description": "corresponding nginx cache number. Valid cache numbers are 1 - 10",
          "type": "integer",
          "format": "int32"
        },
        "nginxMapping": {
          "description": "full binding for corresponding nginx cache drive",
          "type": "string",
          "format": "int32"
        }
      }
    },
    "ErrorDefinition": {
      "type": "object",
      "description": "Error definition",
      "properties": {
        "code": {
          "description": "Service specific error code which serves as the substatus for the HTTP error code",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "Description of the error",
          "type": "string",
          "readOnly": true
        },
        "details": {
          "description": "Internal error details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDefinition"
          },
          "x-ms-identifiers": [
            "message"
          ],
          "readOnly": true
        }
      }
    },
    "MccCacheNodeResourceList": {
      "description": "Object that includes an array of MccCacheNodeResource and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of MccCacheNodeResource resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MccCacheNodeResource"
          }
        },
        "nextLink": {
          "description": "The URL the client should use to fetch the next page (per server side paging)",
          "type": "string"
        }
      }
    },
    "MccCustomerResourceList": {
      "description": "Object that includes an array of MccCustomerResource and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of MccCustomerResource resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MccCustomerResource"
          }
        },
        "nextLink": {
          "description": "The URL the client should use to fetch the next page (per server side paging)",
          "type": "string"
        }
      }
    },
    "AdditionalCustomerProperties": {
      "type": "object",
      "description": "Model representing customer for connected cache resource",
      "properties": {
        "peeringDbLastUpdateTime": {
          "type": "string",
          "description": "last update timestamp of peering db update"
        },
        "CustomerProperties_Overview_CacheEfficiency": {
          "type": "number",
          "description": "cache efficiency"
        },
        "CustomerProperties_Overview_AverageEgressMbps": {
          "type": "number",
          "description": "average egress in mbps"
        },
        "CustomerProperties_Overview_AverageMissMbps": {
          "type": "number",
          "description": "average miss throughput in mbps"
        },
        "CustomerProperties_Overview_EgressMbpsMax": {
          "type": "number",
          "description": "max egress in mbps"
        },
        "CustomerProperties_Overview_EgressMbpsMaxDateTime": {
          "type": "string",
          "description": "timestamp of max egress"
        },
        "CustomerProperties_Overview_MissMbpsMax": {
          "type": "number",
          "description": "max miss throughput"
        },
        "CustomerProperties_Overview_MissMbpsMaxDateTime": {
          "type": "string",
          "description": "timestamp of miss max throughput"
        },
        "CustomerProperties_Overview_CacheNodesHealthyCount": {
          "description": "count of healthy cache nodes",
          "type": "integer",
          "format": "int32"
        },
        "CustomerProperties_Overview_CacheNodesUnhealthyCount": {
          "description": "count of unhealthy cache nodes",
          "type": "integer",
          "format": "int32"
        },
        "signupStatus": {
          "type": "boolean",
          "description": "status of signup"
        },
        "signupStatusCode": {
          "description": "status of signup",
          "type": "integer",
          "format": "int32"
        },
        "signupStatusText": {
          "type": "string",
          "description": "status of signup"
        },
        "signupPhaseStatusCode": {
          "description": "statusCode of signup phase",
          "type": "integer",
          "format": "int32"
        },
        "signupPhaseStatusText": {
          "type": "string",
          "description": "status of signup phase"
        },
        "peeringDbLastUpdateDate": {
          "type": "string",
          "description": "timestamp of last update to peering db"
        },
        "customerOrgName": {
          "type": "string",
          "description": "name of organization of customer"
        },
        "customerEmail": {
          "type": "string",
          "description": "email of customer"
        },
        "customerTransitAsn": {
          "type": "string",
          "description": "transit asn of the customer who provides transit"
        },
        "customerTransitState": {
          "type": "string",
          "description": "transit state of the customer"
        },
        "customerAsn": {
          "type": "string",
          "description": "asn of the customer"
        },
        "customerAsn_EstimatedEgressPeekGbps": {
          "description": "the estimated customer asn peering Peek in Gigabits per second",
          "type": "number"
        },
        "customerEntitlement_SkuId": {
          "type": "string",
          "description": "customer entitlement sku id"
        },
        "customerEntitlement_SkuGuid": {
          "type": "string",
          "description": "customer entitlement sku guid"
        },
        "customerEntitlement_SkuName": {
          "type": "string",
          "description": "customer entitlement sku name"
        },
        "customerEntitlement_Expiration": {
          "type": "string",
          "description": "customer entitlement expiration"
        },
        "optionalProperty1": {
          "type": "string",
          "description": "optional property#1 of MCC response object"
        },
        "optionalProperty2": {
          "type": "string",
          "description": "optional property#2 of MCC response object"
        },
        "optionalProperty3": {
          "type": "string",
          "description": "optional property#3 of MCC response object"
        },
        "optionalProperty4": {
          "type": "string",
          "description": "optional property#4 of MCC response object"
        },
        "optionalProperty5": {
          "type": "string",
          "description": "optional property#5 of MCC response object"
        }
      }
    },
    "AdditionalCacheNodeProperties": {
      "type": "object",
      "description": "Model representing cache node for connected cache resource",
      "properties": {
        "CacheNodeProperties_Details_IssuesList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "issues list to return the issues as part of the additional cache node properties"
        },
        "BgpCidrs": {
          "type": "string",
          "description": "bgpCidrs as part of the additional cache node properties"
        },
        "AggregatedStatusDetails": {
          "type": "string",
          "description": "aggregated status details as part of additional cache node properties"
        },
        "AggregatedStatusText": {
          "type": "string",
          "description": "aggregated status text as part of additional cache node properties"
        },
        "AggregatedStatusCode": {
          "type": "integer",
          "format": "int32",
          "description": "aggregated status code as part of additional cache node properties"
        },
        "ProductVersion": {
          "type": "string",
          "description": "product version as part of additional cache node properties"
        },
        "IsProvisioned": {
          "type": "boolean",
          "description": "is provisioned flag as part of additional cache node properties"
        },
        "CacheNodeStateDetailedText": {
          "type": "string",
          "description": "detailed text for cache node state as part of additional cache node properties"
        },
        "CacheNodeStateShortText": {
          "type": "string",
          "description": "short text for cache node state as part of additional cache node properties"
        },
        "CacheNodeState": {
          "type": "integer",
          "format": "int32",
          "description": "state of cache node state as part of additional cache node properties"
        },
        "RegistrationKey": {
          "type": "string",
          "description": "iot device registration temporary registration key"
        },
        "driveConfiguration": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CacheNodeDriveConfiguration"
          },
          "x-ms-identifiers": [
          ],
          "description": "drive configurations for the cache node"
        },
        "bgpConfiguration": {
          "title": "bgp configuration of the cache node",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/BgpConfiguration",
          "description": "bgp configuration of the cache node"
        },
        "proxyIP": {
          "type": "string",
          "description": "proxy ip property in the MCC Object"
        },
        "optionalProperty1": {
          "type": "string",
          "description": "optional property#1 of MCC response object"
        },
        "optionalProperty2": {
          "type": "string",
          "description": "optional property#2 of MCC response object"
        },
        "optionalProperty3": {
          "type": "string",
          "description": "optional property#3 of MCC response object"
        },
        "optionalProperty4": {
          "type": "string",
          "description": "optional property#4 of MCC response object"
        },
        "optionalProperty5": {
          "type": "string",
          "description": "optional property#5 of MCC response object"
        }
      }
    },
    "CreateOrUpdateCustomerRequest": {
      "type": "object",
      "description": "Represents the high level Nodes needed to provision customer resources",
      "required": [
        "location"
      ],
      "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource",
      "properties": {
        "properties": {
          "description": "Additional ConnectedCache properties",
          "title": "ConnectedCache Additional properties",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CreateOrUpdateCustomerRequestEntity"
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource",
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData"
        }
      }
    },
    "CreateOrUpdateCustomerRequestEntity": {
      "type": "object",
      "description": "Model representing customer for ConnectedCache resource",
      "properties": {
        "CustomerName": {
          "type": "string",
          "description": "name of the customer"
        },
        "CustomerId": {
          "type": "string",
          "description": "customer id of the customer"
        },
        "ContactEmail": {
          "type": "string",
          "description": "email of the customer contact"
        },
        "ContactPhone": {
          "type": "string",
          "description": "phone number of the customer contact"
        },
        "ContactName": {
          "type": "string",
          "description": "contact name of the customer"
        },
        "IsEntitled": {
          "type": "boolean",
          "description": "is the customer entitled"
        },
        "ShouldMigrate": {
          "type": "boolean",
          "description": "should the customer be migrated"
        },
        "CustomerAsn": {
          "type": "string",
          "description": "asn of the customer"
        },
        "TransitState": {
          "type": "string",
          "description": "transit state of the customer"
        },
        "TransitAsn": {
          "type": "string",
          "description": "transit asn for customer who provides transit"
        },
        "ResendSignupCode": {
          "type": "boolean",
          "description": "should the signup code be resent"
        },
        "VerifySignupCode": {
          "type": "boolean",
          "description": "should the code for signup be verified"
        },
        "VerifySignupPhrase": {
          "type": "string",
          "description": "phrase for verify signup"
        }
      }
    },
    "CreateOrUpdateCacheNodeRequest": {
      "type": "object",
      "description": "Represents the high level Nodes needed to provision cache node resources",
      "required": [
        "location"
      ],
      "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource",
      "properties": {
        "properties": {
          "description": "Additional ConnectedCache properties",
          "title": "ConnectedCache Additional properties",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CreateOrUpdateCacheNodeRequestEntity"
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource",
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData"
        }
      }
    },
    "CreateOrUpdateCacheNodeRequestEntity": {
      "type": "object",
      "description": "Model representing customer for ConnectedCache resource",
      "properties": {
        "additionalCacheNodeProperties": {
          "type": "object",
          "title": "Additional cache node properties",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AdditionalCacheNodeProperties",
          "description": "Additional properties for cache node creation."
        },
        "CacheNodeId": {
          "type": "string",
          "description": "cache node Id of the cache node to be updated. It is acceptable to be empty for a new cache node"
        },
        "CustomerId": {
          "type": "string",
          "description": "customer id of the parent customer"
        },
        "CacheNodeName": {
          "type": "string",
          "description": "name of the cache node"
        },
        "CidrCsv": {
          "type": "string",
          "description": "comma separated values of cidr"
        },
        "IpAddress": {
          "type": "string",
          "description": "ip address"
        },
        "MaxAllowableEgressInMbps": {
          "type": "integer",
          "format": "int32",
          "description": "maximum allowable egress of the cache node in mbps"
        },
        "ShouldMigrate": {
          "type": "boolean",
          "description": "should the customer be migrated"
        },
        "IsEnabled": {
          "type": "boolean",
          "description": "is the cache node enabled"
        },
        "IsEnterpriseManaged": {
          "type": "boolean",
          "description": "is the cache node an enterprise cache node"
        },
        "CidrSelectionType": {
          "type": "integer",
          "format": "int32",
          "description": "cidr selection type"
        }
      }
    },
    "MccCacheNodeResource": {
      "type": "object",
      "description": "Represents the high level Nodes needed to provision cache node resources",
      "required": [
        "location"
      ],
      "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource",
      "properties": {
        "properties": {
          "type": "object",
          "description": "Properties of mcc cache node resource.",
          "title": "Properties of mcc cache node resource.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CacheNode"
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource",
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData"
        }
      }
    },
    "MccCustomerResource": {
      "type": "object",
      "description": "Represents the high level Nodes needed to provision customer resources",
      "required": [
        "location"
      ],
      "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource",
      "properties": {
        "properties": {
          "type": "object",
          "description": "Properties of mcc customer resource.",
          "title": "Properties of mcc customer resource.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/Customer"
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource",
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData"
        }
      }
    },
    "MccCacheNodeBgpCidrDetails": {
      "type": "object",
      "description": "Represents all cidr details of the BGP request for a specific cache node resource",
      "required": [
        "location"
      ],
      "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource",
      "properties": {
        "bgpCidrs": {
          "type": "array",
          "description": "Bgp cidr details of mcc cache node resource.",
          "items": {
            "type": "string"
          }
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource",
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData"
        }
      }
    },
    "CacheNode": {
      "type": "object",
      "description": "Model representing customer for connectedCache resource",
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The provisioned state of the resource",
          "enum": [
            "Unknown",
            "Accepted",
            "Succeeded",
            "Failed",
            "Cancelled",
            "Upgrading",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "cacheNode": {
          "type": "object",
          "title": "properties of customer entity",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CacheNodeEntity",
          "description": "Mcc Customer entity"
        },
        "additionalCacheNodeProperties": {
          "type": "object",
          "title": "Additional customer properties",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AdditionalCacheNodeProperties",
          "description": "Additional properties for Mcc Customer entity"
        },
        "statusCode": {
          "type": "string",
          "description": "statusCode used to get code details of MCC response object"
        },
        "statusText": {
          "type": "string",
          "description": "statusText used to get status details in string format of MCC response object"
        },
        "statusDetails": {
          "type": "string",
          "description": "statusDetails used to get inner details of MCC response object"
        },
        "status": {
          "description": "status of the HTTP error code",
          "type": "string",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/ErrorDefinition",
          "description": "The error details"
        }
      }
    },
    "Customer": {
      "type": "object",
      "description": "Model representing customer for connectedCache resource",
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The provisioned state of the resource",
          "enum": [
            "Unknown",
            "Accepted",
            "Succeeded",
            "Failed",
            "Cancelled",
            "Upgrading",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "customer": {
          "type": "object",
          "title": "properties of customer entity",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CustomerEntity",
          "description": "Mcc Customer entity"
        },
        "additionalCustomerProperties": {
          "type": "object",
          "title": "Additional customer properties",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AdditionalCustomerProperties",
          "description": "Additional properties for Mcc Customer entity"
        },
        "statusCode": {
          "type": "string",
          "description": "statusCode used to get code details of MCC response object"
        },
        "statusText": {
          "type": "string",
          "description": "statusText used to get status details in string format of MCC response object"
        },
        "statusDetails": {
          "type": "string",
          "description": "statusDetails used to get inner details of MCC response object"
        },
        "status": {
          "description": "status of the HTTP error code",
          "type": "string",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/ErrorDefinition",
          "description": "The error details"
        }
      }
    },
    "ResourceProviderOperationList": {
      "type": "object",
      "title": "Result of the request to list REST API operations. It contains a list of operations and a URL nextLink to get the next set of results",
      "description": "List containing this Resource Provider's available operations",
      "properties": {
        "value": {
          "description": "Resource provider operations list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceProviderOperationDefinition"
          },
          "x-ms-identifiers": [
          ]
        },
        "nextLink": {
          "description": "The URI that can be used to request the next page for list of Azure operations",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ResourceProviderOperationDefinition": {
      "title": "A REST API operation",
      "type": "object",
      "description": "Describes the Resource Provider Operation",
      "properties": {
        "name": {
          "title": "The operations name",
          "description": "Resource provider operation name",
          "type": "string"
        },
        "isDataAction": {
          "description": "Indicates whether the operation is a data action",
          "type": "string"
        },
        "display": {
          "description": "Resource provider display properties",
          "$ref": "#/definitions/ResourceProviderOperationDisplay"
        },
        "origin": {
          "description": "Origin of the operation",
          "type": "string"
        }
      }
    },
    "CustomerEntity": {
      "type": "object",
      "description": "Model representing Cache Node for ConnectedCache resource",
      "properties": {
        "FullyQualifiedResourceId": {
          "type": "string",
          "description": "fully qualified resource id of the customer in azure resource manager"
        },
        "CustomerId": {
          "type": "string",
          "description": "mcc customer id"
        },
        "CustomerName": {
          "type": "string",
          "description": "name of the customer"
        },
        "PrimaryAccountKey": {
          "type": "string",
          "description": "primary account key. This is internal to mcc"
        },
        "SecondaryAccountKey": {
          "type": "string",
          "description": "secondary account key. This is internal to mcc"
        },
        "ContactEmail": {
          "type": "string",
          "description": "contact email of the customer"
        },
        "ContactPhone": {
          "type": "string",
          "description": "contact phone of the customer"
        },
        "ContactName": {
          "type": "string",
          "description": "name of the customer contact"
        },
        "IsEntitled": {
          "type": "boolean",
          "description": "flag to indicate if the customer is entitled"
        },
        "Location": {
          "type": "string",
          "description": "azure region where the customer is created"
        },
        "ResourceType": {
          "type": "string",
          "description": "type of resource"
        },
        "ReleaseVersion": {
          "type": "integer",
          "format": "int32",
          "description": "release version of the customer"
        },
        "CreateCorrelationId": {
          "type": "string",
          "description": "correlation id of the create customer operation"
        },
        "UpdateCorrelationId": {
          "type": "string",
          "description": "correlation id of the update customer operation"
        },
        "ShouldDelete": {
          "type": "boolean",
          "description": "indicates if the customer is marked for deletion"
        },
        "DeleteRectifierCorrelationId": {
          "type": "string",
          "description": "correlation id of the delete operation"
        },
        "DeleteAsyncOperationId": {
          "type": "string",
          "description": "async operation id of the delete operation"
        },
        "ClientTenantId": {
          "type": "string",
          "description": "client tenantId of the customer subscription"
        },
        "AttemptedDeletes": {
          "type": "integer",
          "format": "int32",
          "description": "number of delete attempts of the customer"
        },
        "DeletedFlagSetDateTime": {
          "type": "string",
          "description": "timestamp when delete flag was set for the customer"
        },
        "ProvisioningState": {
          "type": "integer",
          "format": "int32",
          "description": "provisioning state of the customer"
        },
        "LastAttemptedDeleteTime": {
          "type": "string",
          "description": "timestamp of last delete attempt"
        },
        "SynchWithArmAttemptsCount": {
          "type": "integer",
          "format": "int32",
          "description": "number of sync attempts with arm"
        },
        "LastSyncWithArmTimestamp": {
          "type": "string",
          "description": "timestamp of last sync with arm"
        },
        "IsEnterpriseManaged": {
          "type": "boolean",
          "description": "flag indicating if customer enterprise managed"
        }
      }
    },
    "CacheNodeEntity": {
      "type": "object",
      "description": "Model representing Cache Node for ConnectedCache resource",
      "properties": {
        "FullyQualifiedResourceId": {
          "type": "string",
          "description": "fully qualified resource id of the customer in azure resource manager"
        },
        "CustomerId": {
          "type": "string",
          "description": "mcc customer id"
        },
        "CustomerName": {
          "type": "string",
          "description": "name of the customer"
        },
        "IpAddress": {
          "type": "string",
          "description": "IP address of the cache node"
        },
        "CustomerIndex": {
          "type": "string",
          "description": "Customer index"
        },
        "CacheNodeId": {
          "type": "string",
          "description": "identifier of the cache node"
        },
        "CacheNodeName": {
          "type": "string",
          "description": "name of the cache node"
        },
        "Asn": {
          "type": "integer",
          "format": "int32",
          "description": "Asn of the customer"
        },
        "CountryCodes": {
          "type": "string",
          "description": "country codes"
        },
        "IsEnabled": {
          "type": "boolean",
          "description": "flag indicating if the cache node is enabled"
        },
        "MaxAllowableEgressInMbps": {
          "type": "integer",
          "format": "int32",
          "description": "maximum allowable egress in mbps"
        },
        "MaxAllowableProbability": {
          "type": "number",
          "description": "maximum allowable probability of the cache node"
        },
        "XCid": {
          "type": "string",
          "description": "property to define the XCid"
        },
        "IsEnterpriseManaged": {
          "type": "boolean",
          "description": "is the cache node managed by enterprise"
        },
        "DeleteAsyncOperationId": {
          "type": "string",
          "description": "async operation id of the delete operation"
        },
        "ClientTenantId": {
          "type": "string",
          "description": "client tenantId of the customer subscription"
        },
        "Category": {
          "type": "string",
          "description": "category of cache node"
        },
        "DeletedFlagSetDateTime": {
          "type": "string",
          "description": "timestamp when delete flag was set for the customer"
        },
        "ProvisioningState": {
          "type": "integer",
          "format": "int32",
          "description": "provisioning state of the customer"
        },
        "LastAttemptedDeleteTime": {
          "type": "string",
          "description": "timestamp of last delete attempt"
        },
        "ReleaseVersion": {
          "type": "integer",
          "format": "int32",
          "description": "release version of the cache node"
        },
        "LastSyncWithArmTimestamp": {
          "type": "string",
          "description": "timestamp of last sync with arm"
        },
        "SynchWithArmAttemptsCount": {
          "type": "integer",
          "format": "int32",
          "description": "number of attempts to synchronize the customer with ARM"
        },
        "ContainerConfigurations": {
          "type": "string",
          "description": "configuration details of cache node container"
        },
        "CidrCsv": {
          "type": "string",
          "description": "comma separated values of cidr"
        },
        "CidrCsvLastUpdateTime": {
          "type": "string",
          "description": "timestamp of last update to cidr csv"
        },
        "BgpCidrCsv": {
          "type": "string",
          "description": "comma separated value of bgp cidrs"
        },
        "BgpCidrCsvLastUpdateTime": {
          "type": "string",
          "description": "timestamp of last update to bgp cidr csv"
        },
        "BgpLastReportedTime": {
          "type": "string",
          "description": "timestamp of last bgp report time"
        },
        "BgpReviewStateText": {
          "type": "string",
          "description": "bgp review state text"
        },
        "BgpReviewState": {
          "type": "integer",
          "format": "int32",
          "description": "bgp review state"
        },
        "BgpReviewFeedback": {
          "type": "string",
          "description": "bgp review feedback"
        },
        "BgpNumberOfTimesUpdated": {
          "type": "integer",
          "format": "int64",
          "description": "number of times bgp has been updated"
        },
        "BgpNumberOfRecords": {
          "type": "integer",
          "format": "int32",
          "description": "number of bgp records"
        },
        "BgpCidrBlocksCount": {
          "type": "integer",
          "format": "int32",
          "description": "number of bgp blocks"
        },
        "BgpAddressSpace": {
          "type": "integer",
          "format": "int64",
          "description": "total addressable space as defined by the BGP CIDR blocks"
        },
        "BgpFileBytesTruncated": {
          "type": "integer",
          "format": "int64",
          "description": "number of bytes truncated from source BGP output file on the CacheNode"
        },
        "CidrSelectionType": {
          "type": "integer",
          "format": "int32",
          "description": "current selection type for CIDR range precedence"
        },
        "IsFrozen": {
          "type": "boolean",
          "description": "indicates that a specific cache node has been frozen (not selectable, not editable in UI)"
        },
        "ControllingCacheNodeId": {
          "type": "string",
          "description": "indicates the cache node id of the controlling cache node"
        },
        "ReviewState": {
          "type": "integer",
          "format": "int32",
          "description": "current state of the review process"
        },
        "ReviewStateText": {
          "type": "string",
          "description": "current text associated with the review state"
        },
        "ReviewFeedback": {
          "type": "string",
          "description": "current review feedback for the user"
        },
        "ConfigurationState": {
          "type": "integer",
          "format": "int32",
          "description": "current configuration state"
        },
        "ConfigurationStateText": {
          "type": "string",
          "description": "current configuration text"
        },
        "AddressSpace": {
          "type": "integer",
          "format": "int64",
          "description": "total addressable space as defined by the CIDR blocks"
        },
        "IsVerified": {
          "type": "boolean",
          "description": "total addressable space as defined by the CIDR blocks"
        },
        "Location": {
          "type": "string",
          "description": "ARM resource location for the cache node"
        },
        "ResourceType": {
          "type": "string",
          "description": "ARM resource type for the cache node"
        },
        "IsDeleted": {
          "type": "boolean",
          "description": "indicates that we have successfully received deleted"
        },
        "CreateCorrelationId": {
          "type": "string",
          "description": "correlation Id that should be used for create"
        },
        "UpdateCorrelationId": {
          "type": "string",
          "description": "correlation Id that should be used for update"
        },
        "DeleteRectifierCorrelationId": {
          "type": "string",
          "description": "correlation Id that should be used for delete"
        },
        "IoTRectifierCorrelationId": {
          "type": "string",
          "description": "correlation Id that should be used for iot rectification"
        },
        "WorkerConnections": {
          "type": "integer",
          "format": "int32",
          "description": "number of worker connections that is needed for the deployment manifest for MCC Container"
        },
        "WorkerConnections_LastUpdatedDateTime": {
          "type": "string",
          "description": "indicates the most recent date time when the worker count on the physical MCC was successfully updated"
        },
        "ContainerResyncTrigger": {
          "type": "integer",
          "format": "int32",
          "description": "increment to trigger immediate re-sync of CacheNode to container configurations"
        },
        "ImageURI": {
          "type": "string",
          "description": "mcc Container Id Uri"
        }
      }
    },
    "ConnectedCache": {
      "type": "object",
      "description": "ConnectedCache Resource. Represents the high level Nodes needed to provision CacheNode and customer resources used in private preview",
      "required": [
        "location"
      ],
      "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource",
      "properties": {
        "properties": {
          "description": "Additional ConnectedCache properties",
          "title": "ConnectedCache Additional properties",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CacheNodeOldResponse"
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource",
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData"
        }
      }
    },
    "CacheNodeOldResponse": {
      "type": "object",
      "description": "Model representing Cache Node for ConnectedCache resource",
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The provisioned state of the resource",
          "enum": [
            "Unknown",
            "Accepted",
            "Succeeded",
            "Failed",
            "Cancelled",
            "Upgrading",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "customer": {
          "type": "object",
          "description": " Mcc Customer Json response"
        },
        "additionalCustomerProperties": {
          "type": "object",
          "description": "additional Mcc Customer Json properties",
          "additionalProperties": {}
        },
        "cacheNode": {
          "type": "object",
          "description": " Mcc Cache Node Json response"
        },
        "additionalCacheNodeProperties": {
          "type": "object",
          "description": "additional Mcc Cache Node Json properties for BGP and Update and IOT central",
          "additionalProperties": {}
        },
        "statusCode": {
          "type": "string",
          "description": "statusCode used to get code details of MCC response object"
        },
        "statusText": {
          "type": "string",
          "description": "statusText used to get status details in string format of MCC response object"
        },
        "statusDetails": {
          "type": "string",
          "description": "statusDetails used to get inner details of MCC response object"
        },
        "status": {
          "description": "status of the HTTP error code",
          "type": "string",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/ErrorDefinition",
          "description": "The error details"
        }
      }
    },
    "ConnectedCachePatchResource": {
      "type": "object",
      "description": "cacheNodes patch properties",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Additional tag configuration related properties",
          "additionalProperties": {}
        }
      }
    },
    "ResourceProviderOperationDisplay": {
      "description": "Describes the properties of the Operation",
      "type": "object",
      "properties": {
        "provider": {
          "description": "Name of the resource provider",
          "type": "string"
        },
        "resource": {
          "description": "Name of the resource type",
          "type": "string"
        },
        "operation": {
          "description": "Name of the resource provider operation",
          "type": "string"
        },
        "description": {
          "description": "Description of the resource provider operation",
          "type": "string"
        }
      }
    },
    "ConnectedCacheList": {
      "description": "Object that includes an array of ConnectedCache and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of ConnectedCache resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnectedCache"
          }
        },
        "additionalAggregatedProperties": {
          "description": "Tags for the ConnectedCache",
          "type": "object",
          "additionalProperties": {}
        },
        "nextLink": {
          "description": "The URL the client should use to fetch the next page (per server side paging)",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "CacheNodeNameParameter": {
      "name": "cacheNodeResourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the ConnectedCache resource",
      "maxLength": 90,
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "CustomerNameParameter": {
      "name": "customerResourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the Customer resource",
      "maxLength": 90,
      "minLength": 1,
      "x-ms-parameter-location": "method"
    }
  }
}
