{
  "swagger": "2.0",
  "info": {
    "title": "ConnectedCache",
    "version": "2024-11-30-preview",
    "description": "Microsoft Connected Cache Rest Api version 2023-05-01-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "IspCustomers"
    },
    {
      "name": "IspCacheNodesOperations"
    },
    {
      "name": "EnterpriseMccCustomers"
    },
    {
      "name": "EnterpriseMccCacheNodesOperations"
    }
  ],
  "paths": {
    "/providers/Microsoft.ConnectedCache/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List the operations for the provider - generated by [MaximumSet] rule": {
            "$ref": "./examples/Operations_List_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedCache/enterpriseMccCustomers": {
      "get": {
        "operationId": "EnterpriseMccCustomers_ListBySubscription",
        "tags": [
          "EnterpriseMccCustomers"
        ],
        "description": "This api gets information about all enterpriseMccCustomer resources under the given subscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnterpriseMccCustomerResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnterpriseMccCustomers_ListBySubscription": {
            "$ref": "./examples/EnterpriseMccCustomers_ListBySubscription_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedCache/ispCustomers": {
      "get": {
        "operationId": "IspCustomers_ListBySubscription",
        "tags": [
          "IspCustomers"
        ],
        "description": "This api gets information about all ispCustomer resources under the given subscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IspCustomerResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ispCustomer List by Subscription  - generated by [MaximumSet] rule": {
            "$ref": "./examples/IspCustomers_ListBySubscription_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/enterpriseMccCustomers": {
      "get": {
        "operationId": "EnterpriseMccCustomers_ListByResourceGroup",
        "tags": [
          "EnterpriseMccCustomers"
        ],
        "description": "This api gets the information about all enterprise mcc customer resources under the given subscription and resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnterpriseMccCustomerResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnterpriseMccCustomers_ListByResourceGroup": {
            "$ref": "./examples/EnterpriseMccCustomers_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/enterpriseMccCustomers/{customerResourceName}": {
      "get": {
        "operationId": "EnterpriseMccCustomers_Get",
        "tags": [
          "EnterpriseMccCustomers"
        ],
        "description": "Gets the enterprise mcc customer resource information using this get call",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "customerResourceName",
            "in": "path",
            "description": "Name of the Customer resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnterpriseMccCustomerResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnterpriseMccCustomers_Get": {
            "$ref": "./examples/EnterpriseMccCustomers_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "EnterpriseMccCustomers_CreateOrUpdate",
        "tags": [
          "EnterpriseMccCustomers"
        ],
        "description": "This api creates an enterprise mcc customer with the specified create parameters",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "customerResourceName",
            "in": "path",
            "description": "Name of the Customer resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnterpriseMccCustomerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EnterpriseMccCustomerResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/EnterpriseMccCustomerResource"
            }
          },
          "201": {
            "description": "Resource 'EnterpriseMccCustomerResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/EnterpriseMccCustomerResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnterpriseMccCustomers_CreateOrUpdate": {
            "$ref": "./examples/EnterpriseMccCustomers_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "EnterpriseMccCustomers_Update",
        "tags": [
          "EnterpriseMccCustomers"
        ],
        "description": "This api updates an existing enterprise mcc customer resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "customerResourceName",
            "in": "path",
            "description": "Name of the Customer resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectedCachePatchResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnterpriseMccCustomerResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnterpriseMccCustomers_Update": {
            "$ref": "./examples/EnterpriseMccCustomers_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "EnterpriseMccCustomers_Delete",
        "tags": [
          "EnterpriseMccCustomers"
        ],
        "description": "This api deletes an existing enterprise mcc customer resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "customerResourceName",
            "in": "path",
            "description": "Name of the Customer resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnterpriseMccCustomers_Delete": {
            "$ref": "./examples/EnterpriseMccCustomers_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/enterpriseMccCustomers/{customerResourceName}/enterpriseMccCacheNodes": {
      "get": {
        "operationId": "EnterpriseMccCacheNodesOperations_ListByEnterpriseMccCustomerResource",
        "tags": [
          "EnterpriseMccCacheNodesOperations"
        ],
        "description": "This api retrieves information about all ispCacheNode resources under the given subscription and resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "customerResourceName",
            "in": "path",
            "description": "Name of the Customer resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnterpriseMccCacheNodeResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnterpriseMccCacheNodesOperations_ListByEnterpriseMccCustomerResource": {
            "$ref": "./examples/EnterpriseMccCacheNodesOperations_ListByEnterpriseMccCustomerResource_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/enterpriseMccCustomers/{customerResourceName}/enterpriseMccCacheNodes/{cacheNodeResourceName}": {
      "get": {
        "operationId": "EnterpriseMccCacheNodesOperations_Get",
        "tags": [
          "EnterpriseMccCacheNodesOperations"
        ],
        "description": "This api gets ispCacheNode resource information",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "customerResourceName",
            "in": "path",
            "description": "Name of the Customer resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          },
          {
            "name": "cacheNodeResourceName",
            "in": "path",
            "description": "Name of the ConnectedCache resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnterpriseMccCacheNodeResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets enterpriseMccCacheNode resource information of an enterprise mcc customer parent resource - generated by [MaximumSet] rule": {
            "$ref": "./examples/EnterpriseMccCacheNodesOperations_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "EnterpriseMccCacheNodesOperations_CreateOrUpdate",
        "tags": [
          "EnterpriseMccCacheNodesOperations"
        ],
        "description": "This api creates an ispCacheNode with the specified create parameters",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "customerResourceName",
            "in": "path",
            "description": "Name of the Customer resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          },
          {
            "name": "cacheNodeResourceName",
            "in": "path",
            "description": "Name of the ConnectedCache resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnterpriseMccCacheNodeResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EnterpriseMccCacheNodeResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/EnterpriseMccCacheNodeResource"
            }
          },
          "201": {
            "description": "Resource 'EnterpriseMccCacheNodeResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/EnterpriseMccCacheNodeResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Creates an enterpriseMccCacheNode resource - generated by [MaximumSet] rule": {
            "$ref": "./examples/EnterpriseMccCacheNodesOperations_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "EnterpriseMccCacheNodesOperations_Update",
        "tags": [
          "EnterpriseMccCacheNodesOperations"
        ],
        "description": "This api updates an existing ispCacheNode resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "customerResourceName",
            "in": "path",
            "description": "Name of the Customer resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          },
          {
            "name": "cacheNodeResourceName",
            "in": "path",
            "description": "Name of the ConnectedCache resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectedCachePatchResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EnterpriseMccCacheNodeResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnterpriseMccCacheNodesOperations Update - generated by [MaximumSet] rule": {
            "$ref": "./examples/EnterpriseMccCacheNodesOperations_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "EnterpriseMccCacheNodesOperations_Delete",
        "tags": [
          "EnterpriseMccCacheNodesOperations"
        ],
        "description": "This api deletes an existing ispCacheNode resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "customerResourceName",
            "in": "path",
            "description": "Name of the Customer resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          },
          {
            "name": "cacheNodeResourceName",
            "in": "path",
            "description": "Name of the ConnectedCache resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnterpriseMccCacheNodesOperations Delete Operation - generated by [MaximumSet] rule": {
            "$ref": "./examples/EnterpriseMccCacheNodesOperations_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/enterpriseMccCustomers/{customerResourceName}/enterpriseMccCacheNodes/{cacheNodeResourceName}/getCacheNodeAutoUpdateHistory": {
      "post": {
        "operationId": "EnterpriseMccCacheNodesOperations_GetCacheNodeAutoUpdateHistory",
        "tags": [
          "EnterpriseMccCacheNodesOperations"
        ],
        "description": "This api gets ispCacheNode resource auto update histrory information",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "customerResourceName",
            "in": "path",
            "description": "Name of the Customer resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          },
          {
            "name": "cacheNodeResourceName",
            "in": "path",
            "description": "Name of the ConnectedCache resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MccCacheNodeAutoUpdateHistory"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnterpriseMccCacheNodesOperations_GetCacheNodeAutoUpdateHistory_MaximumSet": {
            "$ref": "./examples/EnterpriseMccCacheNodesOperations_GetCacheNodeAutoUpdateHistory_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/enterpriseMccCustomers/{customerResourceName}/enterpriseMccCacheNodes/{cacheNodeResourceName}/getCacheNodeInstallDetails": {
      "post": {
        "operationId": "EnterpriseMccCacheNodesOperations_GetCacheNodeInstallDetails",
        "tags": [
          "EnterpriseMccCacheNodesOperations"
        ],
        "description": "This api gets secrets of the ispCacheNode resource install details",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "customerResourceName",
            "in": "path",
            "description": "Name of the Customer resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          },
          {
            "name": "cacheNodeResourceName",
            "in": "path",
            "description": "Name of the ConnectedCache resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MccCacheNodeInstallDetails"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets required properties for enterprise Mcc CacheNode resource install key details - generated by [MaximumSet] rule": {
            "$ref": "./examples/EnterpriseMccCacheNodesOperations_GetCacheNodeInstallDetails_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/enterpriseMccCustomers/{customerResourceName}/enterpriseMccCacheNodes/{cacheNodeResourceName}/getCacheNodeMccIssueDetailsHistory": {
      "post": {
        "operationId": "EnterpriseMccCacheNodesOperations_GetCacheNodeMccIssueDetailsHistory",
        "tags": [
          "EnterpriseMccCacheNodesOperations"
        ],
        "description": "This api gets ispCacheNode resource issues details histrory information",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "customerResourceName",
            "in": "path",
            "description": "Name of the Customer resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          },
          {
            "name": "cacheNodeResourceName",
            "in": "path",
            "description": "Name of the ConnectedCache resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MccCacheNodeIssueHistory"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnterpriseMccCacheNodesOperations_GetCacheNodeMccIssueDetailsHistory_MaximumSet": {
            "$ref": "./examples/EnterpriseMccCacheNodesOperations_GetCacheNodeMccIssueDetailsHistory_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/enterpriseMccCustomers/{customerResourceName}/enterpriseMccCacheNodes/{cacheNodeResourceName}/getCacheNodeTlsCertificateHistory": {
      "post": {
        "operationId": "EnterpriseMccCacheNodesOperations_GetCacheNodeTlsCertificateHistory",
        "tags": [
          "EnterpriseMccCacheNodesOperations"
        ],
        "description": "This api gets ispCacheNode resource tls certificate histrory information",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "customerResourceName",
            "in": "path",
            "description": "Name of the Customer resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          },
          {
            "name": "cacheNodeResourceName",
            "in": "path",
            "description": "Name of the ConnectedCache resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MccCacheNodeTlsCertificateHistory"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnterpriseMccCacheNodesOperations_GetCacheNodeTlsCertificateHistory_MaximumSet": {
            "$ref": "./examples/EnterpriseMccCacheNodesOperations_GetCacheNodeTlsCertificateHistory_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/ispCustomers": {
      "get": {
        "operationId": "IspCustomers_ListByResourceGroup",
        "tags": [
          "IspCustomers"
        ],
        "description": "This api gets the information about all ispCustomer resources under the given subscription and resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IspCustomerResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IspCustomers resource List by Resource group - generated by [MaximumSet] rule": {
            "$ref": "./examples/IspCustomers_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/ispCustomers/{customerResourceName}": {
      "get": {
        "operationId": "IspCustomers_Get",
        "tags": [
          "IspCustomers"
        ],
        "description": "Gets the ispCustomer resource information using this get call",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "customerResourceName",
            "in": "path",
            "description": "Name of the Customer resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IspCustomerResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IspCustomers Get - generated by [MaximumSet] rule": {
            "$ref": "./examples/IspCustomers_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "IspCustomers_CreateOrUpdate",
        "tags": [
          "IspCustomers"
        ],
        "description": "This api creates an ispCustomer with the specified create parameters",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "customerResourceName",
            "in": "path",
            "description": "Name of the Customer resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IspCustomerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'IspCustomerResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/IspCustomerResource"
            }
          },
          "201": {
            "description": "Resource 'IspCustomerResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/IspCustomerResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ispCustomer CreateOrUpdate - generated by [MaximumSet] rule": {
            "$ref": "./examples/IspCustomers_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "IspCustomers_Update",
        "tags": [
          "IspCustomers"
        ],
        "description": "This api updates an existing ispCustomer resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "customerResourceName",
            "in": "path",
            "description": "Name of the Customer resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectedCachePatchResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IspCustomerResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ispCustomer Update details  - generated by [MaximumSet] rule": {
            "$ref": "./examples/IspCustomers_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "IspCustomers_Delete",
        "tags": [
          "IspCustomers"
        ],
        "description": "This api deletes an existing ispCustomer resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "customerResourceName",
            "in": "path",
            "description": "Name of the Customer resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IspCustomers Delete - generated by [MaximumSet] rule": {
            "$ref": "./examples/IspCustomers_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/ispCustomers/{customerResourceName}/ispCacheNodes": {
      "get": {
        "operationId": "IspCacheNodesOperations_ListByIspCustomerResource",
        "tags": [
          "IspCacheNodesOperations"
        ],
        "description": "This api retrieves information about all ispCacheNode resources under the given subscription and resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "customerResourceName",
            "in": "path",
            "description": "Name of the Customer resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IspCacheNodeResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IspCacheNodesOperations_ListByIspCustomerResource": {
            "$ref": "./examples/IspCacheNodesOperations_ListByIspCustomerResource_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/ispCustomers/{customerResourceName}/ispCacheNodes/{cacheNodeResourceName}": {
      "get": {
        "operationId": "IspCacheNodesOperations_Get",
        "tags": [
          "IspCacheNodesOperations"
        ],
        "description": "This api gets ispCacheNode resource information",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "customerResourceName",
            "in": "path",
            "description": "Name of the Customer resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          },
          {
            "name": "cacheNodeResourceName",
            "in": "path",
            "description": "Name of the ConnectedCache resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IspCacheNodeResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IspCacheNodes Get resource  - generated by [MaximumSet] rule": {
            "$ref": "./examples/IspCacheNodesOperations_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "IspCacheNodesOperations_CreateOrUpdate",
        "tags": [
          "IspCacheNodesOperations"
        ],
        "description": "This api creates an ispCacheNode with the specified create parameters",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "customerResourceName",
            "in": "path",
            "description": "Name of the Customer resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          },
          {
            "name": "cacheNodeResourceName",
            "in": "path",
            "description": "Name of the ConnectedCache resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IspCacheNodeResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'IspCacheNodeResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/IspCacheNodeResource"
            }
          },
          "201": {
            "description": "Resource 'IspCacheNodeResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/IspCacheNodeResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IspCacheNodesOperations_CreateOrUpdate": {
            "$ref": "./examples/IspCacheNodesOperations_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "IspCacheNodesOperations_Update",
        "tags": [
          "IspCacheNodesOperations"
        ],
        "description": "This api updates an existing ispCacheNode resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "customerResourceName",
            "in": "path",
            "description": "Name of the Customer resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          },
          {
            "name": "cacheNodeResourceName",
            "in": "path",
            "description": "Name of the ConnectedCache resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectedCachePatchResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IspCacheNodeResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IspCacheNodesOperations_Update": {
            "$ref": "./examples/IspCacheNodesOperations_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "IspCacheNodesOperations_Delete",
        "tags": [
          "IspCacheNodesOperations"
        ],
        "description": "This api deletes an existing ispCacheNode resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "customerResourceName",
            "in": "path",
            "description": "Name of the Customer resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          },
          {
            "name": "cacheNodeResourceName",
            "in": "path",
            "description": "Name of the ConnectedCache resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IspCacheNodes delete Operation - generated by [MaximumSet] rule": {
            "$ref": "./examples/IspCacheNodesOperations_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/ispCustomers/{customerResourceName}/ispCacheNodes/{cacheNodeResourceName}/getBgpCidrs": {
      "post": {
        "operationId": "IspCacheNodesOperations_GetBgpCidrs",
        "tags": [
          "IspCacheNodesOperations"
        ],
        "description": "This api gets ispCacheNode resource information",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "customerResourceName",
            "in": "path",
            "description": "Name of the Customer resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          },
          {
            "name": "cacheNodeResourceName",
            "in": "path",
            "description": "Name of the ConnectedCache resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MccCacheNodeBgpCidrDetails"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IspCacheNodes resource BgpCidrs details - generated by [MaximumSet] rule": {
            "$ref": "./examples/IspCacheNodesOperations_GetBgpCidrs_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/ispCustomers/{customerResourceName}/ispCacheNodes/{cacheNodeResourceName}/getCacheNodeAutoUpdateHistory": {
      "post": {
        "operationId": "IspCacheNodesOperations_GetCacheNodeAutoUpdateHistory",
        "tags": [
          "IspCacheNodesOperations"
        ],
        "description": "This api gets ispCacheNode resource auto update histrory information",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "customerResourceName",
            "in": "path",
            "description": "Name of the Customer resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          },
          {
            "name": "cacheNodeResourceName",
            "in": "path",
            "description": "Name of the ConnectedCache resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MccCacheNodeAutoUpdateHistory"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IspCacheNodesOperations_GetCacheNodeAutoUpdateHistory_MaximumSet": {
            "$ref": "./examples/IspCacheNodesOperations_GetCacheNodeAutoUpdateHistory_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/ispCustomers/{customerResourceName}/ispCacheNodes/{cacheNodeResourceName}/getCacheNodeInstallDetails": {
      "post": {
        "operationId": "IspCacheNodesOperations_GetCacheNodeInstallDetails",
        "tags": [
          "IspCacheNodesOperations"
        ],
        "description": "This api gets secrets of the ispCacheNode resource install details",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "customerResourceName",
            "in": "path",
            "description": "Name of the Customer resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          },
          {
            "name": "cacheNodeResourceName",
            "in": "path",
            "description": "Name of the ConnectedCache resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MccCacheNodeInstallDetails"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ispCacheNode resource get install details - generated by [MaximumSet] rule": {
            "$ref": "./examples/IspCacheNodesOperations_GetCacheNodeInstallDetails_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/ispCustomers/{customerResourceName}/ispCacheNodes/{cacheNodeResourceName}/getCacheNodeMccIssueDetailsHistory": {
      "post": {
        "operationId": "IspCacheNodesOperations_GetCacheNodeMccIssueDetailsHistory",
        "tags": [
          "IspCacheNodesOperations"
        ],
        "description": "This api gets ispCacheNode resource issues details histrory information",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "customerResourceName",
            "in": "path",
            "description": "Name of the Customer resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          },
          {
            "name": "cacheNodeResourceName",
            "in": "path",
            "description": "Name of the ConnectedCache resource",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9\\_\\-]*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MccCacheNodeIssueHistory"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IspCacheNodesOperations_GetCacheNodeMccIssueDetailsHistory_MaximumSet": {
            "$ref": "./examples/IspCacheNodesOperations_GetCacheNodeMccIssueDetailsHistory_MaximumSet_Gen.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AdditionalCacheNodeProperties": {
      "type": "object",
      "description": "Model representing cache node for connected cache resource",
      "properties": {
        "cacheNodePropertiesDetailsIssuesList": {
          "type": "array",
          "description": "issues list to return the issues as part of the additional cache node properties",
          "items": {
            "type": "string"
          }
        },
        "issuesList": {
          "type": "array",
          "description": "current cache node issue list.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "issuesCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of cache node issues.",
          "readOnly": true
        },
        "currentTlsCertificate": {
          "$ref": "#/definitions/MccCacheNodeTlsCertificate",
          "description": "cache node current tls certificate.",
          "readOnly": true
        },
        "lastAutoUpdateInfo": {
          "$ref": "#/definitions/MccCacheNodeAutoUpdateInfo",
          "description": "cache node last auto update information.",
          "readOnly": true
        },
        "aggregatedStatusDetails": {
          "type": "string",
          "description": "Cache node resource aggregated status details.",
          "readOnly": true
        },
        "aggregatedStatusText": {
          "type": "string",
          "description": "Cache node resource aggregated status text.",
          "readOnly": true
        },
        "aggregatedStatusCode": {
          "type": "integer",
          "format": "int32",
          "description": "Cache node resource aggregated status code.",
          "readOnly": true
        },
        "productVersion": {
          "type": "string",
          "description": "Cache node resource Mcc product version.",
          "readOnly": true
        },
        "isProvisioned": {
          "type": "boolean",
          "description": "Cache node resource flag indicating if cache node has been physically installed or provisioned on their physical lab.",
          "readOnly": true
        },
        "cacheNodeStateDetailedText": {
          "type": "string",
          "description": "Cache node resource detailed state text.",
          "readOnly": true
        },
        "cacheNodeStateShortText": {
          "type": "string",
          "description": "Cache node resource short state text.",
          "readOnly": true
        },
        "cacheNodeState": {
          "type": "integer",
          "format": "int32",
          "description": "Cache node resource state as integer.",
          "readOnly": true
        },
        "driveConfiguration": {
          "type": "array",
          "description": "Cache node resource drive configurations.",
          "items": {
            "$ref": "#/definitions/CacheNodeDriveConfiguration"
          },
          "x-ms-identifiers": []
        },
        "bgpConfiguration": {
          "$ref": "#/definitions/BgpConfiguration",
          "description": "Cache node resource Bgp configuration."
        },
        "proxyUrlConfiguration": {
          "$ref": "#/definitions/ProxyUrlConfiguration",
          "description": "proxyUrl configuration of the cache node"
        },
        "isProxyRequired": {
          "$ref": "#/definitions/ProxyRequired",
          "description": "Cache node resource requires a proxy"
        },
        "osType": {
          "$ref": "#/definitions/OsType",
          "description": "Operating system of the cache node"
        },
        "autoUpdateVersion": {
          "type": "string",
          "description": "Auto update or fast update version"
        },
        "updateInfoDetails": {
          "type": "string",
          "description": "Update related information details"
        },
        "updateRequestedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "customer requested date time for mcc install of update cycle"
        },
        "autoUpdateNextAvailableVersion": {
          "type": "string",
          "description": "Auto update version that is the Next available version to update on mcc cache node",
          "readOnly": true
        },
        "autoUpdateNextAvailableDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Auto update last applied date time of mcc install",
          "readOnly": true
        },
        "autoUpdateAppliedVersion": {
          "type": "string",
          "description": "Auto update version that is the applied to update on mcc cache node",
          "readOnly": true
        },
        "autoUpdateLastAppliedDetails": {
          "type": "string",
          "description": "Auto Update status details from the backend after applying the new version details",
          "readOnly": true
        },
        "autoUpdateLastAppliedState": {
          "type": "string",
          "description": "Last applied auto update state for mcc install of auto update cycle",
          "readOnly": true
        },
        "autoUpdateLastAppliedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Auto update last applied date time of mcc install",
          "readOnly": true
        },
        "autoUpdateLastTriggeredDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Auto update last triggered date time of mcc install",
          "readOnly": true
        },
        "creationMethod": {
          "type": "integer",
          "format": "int32",
          "description": "Resource creation method of mcc cache node resource, cli or portal",
          "minimum": 0,
          "maximum": 5
        },
        "tlsStatus": {
          "type": "string",
          "description": "Cache node tls certificate status.",
          "readOnly": true
        },
        "optionalProperty1": {
          "type": "string",
          "description": "Optional property #1 of Mcc response object"
        },
        "optionalProperty2": {
          "type": "string",
          "description": "Optional property #2 of Mcc response object"
        },
        "optionalProperty3": {
          "type": "string",
          "description": "Optional property #3 of Mcc response object"
        },
        "optionalProperty4": {
          "type": "string",
          "description": "Optional property #4 of Mcc response object"
        },
        "optionalProperty5": {
          "type": "string",
          "description": "Optional property #5 of Mcc response object"
        }
      }
    },
    "AdditionalCustomerProperties": {
      "type": "object",
      "description": "Model representing customer for connected cache resource",
      "properties": {
        "customerPropertiesOverviewCacheEfficiency": {
          "type": "number",
          "format": "float",
          "description": "Customer resource cache efficiency.",
          "readOnly": true
        },
        "customerPropertiesOverviewAverageEgressMbps": {
          "type": "number",
          "format": "float",
          "description": "Customer resource average egress in Mbps.",
          "readOnly": true
        },
        "customerPropertiesOverviewAverageMissMbps": {
          "type": "number",
          "format": "float",
          "description": "Customer resource average cache miss throughput in Mbps.",
          "readOnly": true
        },
        "customerPropertiesOverviewEgressMbpsMax": {
          "type": "number",
          "format": "float",
          "description": "Customer resource maximum egress in Mbps.",
          "readOnly": true
        },
        "customerPropertiesOverviewEgressMbpsMaxDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Customer resource peak egress timestamp.",
          "readOnly": true
        },
        "customerPropertiesOverviewMissMbpsMax": {
          "type": "number",
          "format": "float",
          "description": "Customer resource maximum cache miss throughput in Mbps.",
          "readOnly": true
        },
        "customerPropertiesOverviewMissMbpsMaxDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Customer resource peak cache miss throughput timestamp.",
          "readOnly": true
        },
        "customerPropertiesOverviewCacheNodesHealthyCount": {
          "type": "integer",
          "format": "int32",
          "description": "Customer resource total healthy cache nodes.",
          "readOnly": true
        },
        "customerPropertiesOverviewCacheNodesUnhealthyCount": {
          "type": "integer",
          "format": "int32",
          "description": "Customer resource total unhealthy cache nodes.",
          "readOnly": true
        },
        "signupStatus": {
          "type": "boolean",
          "description": "Customer resource signup status as boolean.",
          "readOnly": true
        },
        "signupStatusCode": {
          "type": "integer",
          "format": "int32",
          "description": "Customer resource signup status as integer code.",
          "readOnly": true
        },
        "signupStatusText": {
          "type": "string",
          "description": "Customer resource signup status as string text.",
          "readOnly": true
        },
        "signupPhaseStatusCode": {
          "type": "integer",
          "format": "int32",
          "description": "Customer resource signup phase status code as integer.",
          "readOnly": true
        },
        "signupPhaseStatusText": {
          "type": "string",
          "description": "Customer resource signup phase status as string text.",
          "readOnly": true
        },
        "peeringDbLastUpdateDate": {
          "type": "string",
          "format": "date-time",
          "description": "Customer resource last PeeringDB update timestamp.",
          "readOnly": true
        },
        "customerOrgName": {
          "type": "string",
          "description": "Customer resource owner organization name.",
          "readOnly": true
        },
        "customerEmail": {
          "type": "string",
          "description": "Customer resource contact email."
        },
        "customerTransitAsn": {
          "type": "string",
          "description": "Customer resource transit Asn (autonomous system number)."
        },
        "customerTransitState": {
          "$ref": "#/definitions/CustomerTransitState",
          "description": "Customer resource transit state."
        },
        "customerAsn": {
          "type": "string",
          "description": "Customer resource Asn (autonomous system number)."
        },
        "customerAsnEstimatedEgressPeekGbps": {
          "type": "number",
          "format": "float",
          "description": "Customer resource estimated Asn peering peak in Gbps.",
          "readOnly": true
        },
        "customerEntitlementSkuId": {
          "type": "string",
          "description": "Customer resource entitlement Sku Id."
        },
        "customerEntitlementSkuGuid": {
          "type": "string",
          "description": "Customer resource entitlement Sku Guid."
        },
        "customerEntitlementSkuName": {
          "type": "string",
          "description": "Customer resource entitlement Sku name."
        },
        "customerEntitlementExpiration": {
          "type": "string",
          "format": "date-time",
          "description": "Customer resource entitlement expiration date string."
        },
        "optionalProperty1": {
          "type": "string",
          "description": "Optional property #1 of Mcc response object."
        },
        "optionalProperty2": {
          "type": "string",
          "description": "Optional property #2 of Mcc response object."
        },
        "optionalProperty3": {
          "type": "string",
          "description": "Optional property #3 of Mcc response object."
        },
        "optionalProperty4": {
          "type": "string",
          "description": "Optional property #4 of Mcc response object."
        },
        "optionalProperty5": {
          "type": "string",
          "description": "Optional property #5 of Mcc response object."
        }
      }
    },
    "BgpCidrsConfiguration": {
      "type": "object",
      "description": "Mcc cache node Bgp Cidr details.",
      "properties": {
        "bgpCidrs": {
          "type": "array",
          "description": "Mcc cache node Bgp Cidr details.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "BgpConfiguration": {
      "type": "object",
      "description": "Bgp configuration of cache node",
      "properties": {
        "asnToIpAddressMapping": {
          "type": "string",
          "description": "Asn to ip address mapping"
        }
      }
    },
    "BgpReviewStateEnum": {
      "type": "string",
      "description": "Cache node resource Bgp review state as integer",
      "enum": [
        "NotConfigured",
        "InReview",
        "Approved",
        "AttentionRequired"
      ],
      "x-ms-enum": {
        "name": "BgpReviewStateEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "NotConfigured",
            "value": "NotConfigured",
            "description": "bgp not configured"
          },
          {
            "name": "InReview",
            "value": "InReview",
            "description": "bgp is in review state"
          },
          {
            "name": "Approved",
            "value": "Approved",
            "description": "bgp is in Approved state"
          },
          {
            "name": "AttentionRequired",
            "value": "AttentionRequired",
            "description": "bgp is setup need an attention for more troubleshoot"
          }
        ]
      }
    },
    "CacheNodeDriveConfiguration": {
      "type": "object",
      "description": "Drive configuration for cache node",
      "properties": {
        "physicalPath": {
          "type": "string",
          "description": "physical path location of the folder used for caching content"
        },
        "sizeInGb": {
          "type": "integer",
          "format": "int32",
          "description": "physical size of the drive used for caching content"
        },
        "cacheNumber": {
          "type": "integer",
          "format": "int32",
          "description": "corresponding nginx cache number. Valid cache numbers are 1 - 20",
          "minimum": 1,
          "maximum": 20
        },
        "nginxMapping": {
          "type": "string",
          "description": "full binding for corresponding nginx cache drive"
        }
      }
    },
    "CacheNodeEntity": {
      "type": "object",
      "description": "Model representing Cache Node for ConnectedCache resource",
      "properties": {
        "fullyQualifiedResourceId": {
          "type": "string",
          "description": "Cache node resource Azure fully qualified resource Id."
        },
        "customerId": {
          "type": "string",
          "description": "Cache node resource customer resource GUID Id.",
          "readOnly": true
        },
        "customerName": {
          "type": "string",
          "description": "Cache node resource customer resource name."
        },
        "ipAddress": {
          "type": "string",
          "description": "Cache node resource Ip address."
        },
        "customerIndex": {
          "type": "string",
          "description": "Cache node resource customer index as string."
        },
        "cacheNodeId": {
          "type": "string",
          "description": "Cache node resource identifier of the cache node"
        },
        "cacheNodeName": {
          "type": "string",
          "description": "Cache node resource name."
        },
        "customerAsn": {
          "type": "integer",
          "format": "int32",
          "description": "Cache node resource customer resource Asn (autonomous system number)"
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Cache node resource flag for indicating if cache node is enabled."
        },
        "maxAllowableEgressInMbps": {
          "type": "integer",
          "format": "int32",
          "description": "Cache node resource maximum allowed egress in Mbps."
        },
        "maxAllowableProbability": {
          "type": "number",
          "format": "float",
          "description": "Cache node resource maximum allowed probability of egress.",
          "readOnly": true
        },
        "xCid": {
          "type": "string",
          "description": "Cache node resource Azure XCid.",
          "readOnly": true
        },
        "isEnterpriseManaged": {
          "type": "boolean",
          "description": "Cache node resource flag for determining if managed by enterprise as boolean."
        },
        "createAsyncOperationId": {
          "type": "string",
          "description": "Cache node resource create async operation Id.",
          "readOnly": true
        },
        "deleteAsyncOperationId": {
          "type": "string",
          "description": "Cache node resource deletion async operation Id.",
          "readOnly": true
        },
        "clientTenantId": {
          "type": "string",
          "description": "Cache node resource customer resource client tenant Id of subscription.",
          "readOnly": true
        },
        "category": {
          "type": "string",
          "description": "Cache node resource category.",
          "readOnly": true
        },
        "releaseVersion": {
          "type": "integer",
          "format": "int32",
          "description": "Cache node resource release version.",
          "readOnly": true
        },
        "lastSyncWithAzureTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Cache node resource last sync timestamp.",
          "readOnly": true
        },
        "lastUpdatedTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Cache node resource last backend updated timestamp.",
          "readOnly": true
        },
        "synchWithAzureAttemptsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Cache node resource attempts to sync with Azure.",
          "readOnly": true
        },
        "containerConfigurations": {
          "type": "string",
          "description": "Cache node resource container configuration details.",
          "readOnly": true
        },
        "cidrCsv": {
          "type": "array",
          "description": "Cache node resource comma separated values of Cidrs.",
          "items": {
            "type": "string"
          }
        },
        "cidrCsvLastUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Cache node resource last Cidr Csv update timestamp",
          "readOnly": true
        },
        "bgpCidrCsvLastUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Cache node resource last Bgp Cidr Csv update timestamp",
          "readOnly": true
        },
        "bgpLastReportedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Cache node resource last Bgp report timestamp.",
          "readOnly": true
        },
        "bgpReviewStateText": {
          "type": "string",
          "description": "Cache node resource Bgp review state string text in detail.",
          "readOnly": true
        },
        "bgpReviewState": {
          "$ref": "#/definitions/BgpReviewStateEnum",
          "description": "Cache node resource Bgp review state string text.",
          "readOnly": true
        },
        "bgpReviewFeedback": {
          "type": "string",
          "description": "Cache node resource Bgp review feedback text.",
          "readOnly": true
        },
        "bgpNumberOfTimesUpdated": {
          "type": "integer",
          "format": "int32",
          "description": "Cache node resource Bgp update count.",
          "readOnly": true
        },
        "bgpNumberOfRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Cache node resource Bgp record count.",
          "readOnly": true
        },
        "bgpCidrBlocksCount": {
          "type": "integer",
          "format": "int32",
          "description": "Cache node resource Bgp block count.",
          "readOnly": true
        },
        "bgpAddressSpace": {
          "type": "integer",
          "format": "int32",
          "description": "Cache node resource total addressable space defined by Bgp and Cidr Csv blocks.",
          "readOnly": true
        },
        "shouldMigrate": {
          "type": "boolean",
          "description": "Cache node resource flag for determining if customer will be migrated."
        },
        "bgpFileBytesTruncated": {
          "type": "integer",
          "format": "int32",
          "description": "Cache node resource bytes truncated from Bgp output file.",
          "readOnly": true
        },
        "cidrSelectionType": {
          "type": "integer",
          "format": "int32",
          "description": "Cache node resource current Cidr range precedence selection type."
        },
        "isFrozen": {
          "type": "boolean",
          "description": "Cache node resource flag for indicating the cache node resource is frozen (not selectable, not editable in UI).",
          "readOnly": true
        },
        "reviewState": {
          "type": "integer",
          "format": "int32",
          "description": "Cache node resource review process state as integer",
          "readOnly": true
        },
        "reviewStateText": {
          "type": "string",
          "description": "Cache node resource review state text.",
          "readOnly": true
        },
        "reviewFeedback": {
          "type": "string",
          "description": "Cache node resource review feedback text.",
          "readOnly": true
        },
        "configurationState": {
          "$ref": "#/definitions/ConfigurationState",
          "description": "Cache node resource configuration state.",
          "readOnly": true
        },
        "configurationStateText": {
          "type": "string",
          "description": "Cache node resource configuration state text.",
          "readOnly": true
        },
        "addressSpace": {
          "type": "integer",
          "format": "int32",
          "description": "Cache node resource total addressable space defined by the Cidr Csv block.",
          "readOnly": true
        },
        "workerConnections": {
          "type": "integer",
          "format": "int32",
          "description": "Cache node resource Mcc container deployment worker connection count.",
          "readOnly": true
        },
        "workerConnectionsLastUpdatedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Cache node resource last updated Mcc container deployment worker connection count timestamp.",
          "readOnly": true
        },
        "containerResyncTrigger": {
          "type": "integer",
          "format": "int32",
          "description": "Cache node resource Mcc container configuration details re-sync trigger.",
          "readOnly": true
        },
        "imageUri": {
          "type": "string",
          "description": "Cache node resource Mcc Container Id Uri.",
          "readOnly": true
        },
        "fullyQualifiedDomainName": {
          "type": "string",
          "description": "FQDN(fully qualified domain name) value of the mcc cache node"
        },
        "autoUpdateRingType": {
          "$ref": "#/definitions/autoUpdateRingType",
          "description": "Auto Update Ring Type which is slow or fast etc."
        },
        "autoUpdateRequestedWeek": {
          "type": "integer",
          "format": "int32",
          "description": "Customer requested week of month for mcc install of auto update cycle. 0 is default no selection. 1-5 are valid weeks of month, 1 is first week, 2 is second week, etc.",
          "minimum": 0,
          "maximum": 5
        },
        "autoUpdateRequestedDay": {
          "type": "integer",
          "format": "int32",
          "description": "Customer requested day of week for mcc install of auto update cycle. 0 is default no selection. 1-7 are days of week, 1 is Sunday, 2 is Monday, etc.",
          "minimum": 0,
          "maximum": 7
        },
        "autoUpdateRequestedTime": {
          "type": "string",
          "description": "Customer requested time of the day for mcc install of auto update cycle, should be hh:mm",
          "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"
        }
      }
    },
    "CacheNodeInstallProperties": {
      "type": "object",
      "description": "Mcc cache node resource install script properties.",
      "properties": {
        "customerId": {
          "type": "string",
          "description": "Mcc customer resource Id."
        },
        "cacheNodeId": {
          "type": "string",
          "description": "Mcc cache node resource Id."
        },
        "primaryAccountKey": {
          "type": "string",
          "format": "password",
          "description": "Mcc primary account key. Internal to Mcc.",
          "readOnly": true,
          "x-ms-secret": true
        },
        "secondaryAccountKey": {
          "type": "string",
          "format": "password",
          "description": "Mcc secondary account key. Internal to Mcc.",
          "readOnly": true,
          "x-ms-secret": true
        },
        "registrationKey": {
          "type": "string",
          "format": "password",
          "description": "Mcc Iot Central temporary device registration key, used once.",
          "readOnly": true,
          "x-ms-secret": true
        },
        "tlsCertificateProvisioningKey": {
          "type": "string",
          "format": "password",
          "description": "Mcc Tls certificate provisioning key.",
          "readOnly": true,
          "x-ms-secret": true
        },
        "driveConfiguration": {
          "type": "array",
          "description": "Cache node resource drive configurations.",
          "items": {
            "$ref": "#/definitions/CacheNodeDriveConfiguration"
          },
          "x-ms-identifiers": []
        },
        "proxyUrlConfiguration": {
          "$ref": "#/definitions/ProxyUrlConfiguration",
          "description": "proxyUrl configuration of the cache node"
        }
      }
    },
    "CacheNodeProperty": {
      "type": "object",
      "description": "Model representing an Mcc cache node connectedCache resource",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioned state of the resource",
          "readOnly": true
        },
        "cacheNode": {
          "$ref": "#/definitions/CacheNodeEntity",
          "description": "Mcc cache node resource (cache node entity)."
        },
        "additionalCacheNodeProperties": {
          "$ref": "#/definitions/AdditionalCacheNodeProperties",
          "description": "Mcc cache node resource additional properties."
        },
        "statusCode": {
          "type": "string",
          "description": "Mcc response status code."
        },
        "statusText": {
          "type": "string",
          "description": "Mcc response status text as string for retrieving status details."
        },
        "statusDetails": {
          "type": "string",
          "description": "Mcc response status details for retrieving response inner details."
        },
        "status": {
          "type": "string",
          "description": "HTTP error status code.",
          "readOnly": true
        },
        "error": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "Mcc response error details."
        }
      }
    },
    "ConfigurationState": {
      "type": "string",
      "description": "Cache node configuration setup state",
      "enum": [
        "Configured",
        "NotConfigured_Ip"
      ],
      "x-ms-enum": {
        "name": "ConfigurationState",
        "modelAsString": true,
        "values": [
          {
            "name": "Configured",
            "value": "Configured",
            "description": "connected cache setup configured"
          },
          {
            "name": "NotConfigured_Ip",
            "value": "NotConfigured_Ip",
            "description": "connected cache setup not configured"
          }
        ]
      }
    },
    "ConnectedCachePatchResource": {
      "type": "object",
      "description": "Mcc PATCH operation properties.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "update"
          ]
        }
      }
    },
    "CustomerEntity": {
      "type": "object",
      "description": "Model representing Customer resource for ConnectedCache resource",
      "properties": {
        "fullyQualifiedResourceId": {
          "type": "string",
          "description": "Customer resource Azure fully qualified resource Id."
        },
        "customerId": {
          "type": "string",
          "description": "Customer resource Guid Id.",
          "readOnly": true
        },
        "customerName": {
          "type": "string",
          "description": "Customer resource name."
        },
        "contactEmail": {
          "type": "string",
          "description": "Customer resource contact email."
        },
        "contactPhone": {
          "type": "string",
          "description": "Customer resource contact phone."
        },
        "contactName": {
          "type": "string",
          "description": "Customer resource contact full name."
        },
        "isEntitled": {
          "type": "boolean",
          "description": "Customer resource entitlement flag as boolean."
        },
        "releaseVersion": {
          "type": "integer",
          "format": "int32",
          "description": "Customer resource Mcc release version."
        },
        "createAsyncOperationId": {
          "type": "string",
          "description": "Customer resource create async operation Id.",
          "readOnly": true
        },
        "deleteAsyncOperationId": {
          "type": "string",
          "description": "Customer resource deletion async operation Id.",
          "readOnly": true
        },
        "clientTenantId": {
          "type": "string",
          "description": "Customer resource client tenant Id of subscription."
        },
        "synchWithAzureAttemptsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Customer resource sync attempts.",
          "readOnly": true
        },
        "lastSyncWithAzureTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Customer resource last Azure sync timestamp.",
          "readOnly": true
        },
        "isEnterpriseManaged": {
          "type": "boolean",
          "description": "Customer resource flag for enterprise management as boolean."
        },
        "shouldMigrate": {
          "type": "boolean",
          "description": "Customer resource flag for migration."
        },
        "resendSignupCode": {
          "type": "boolean",
          "description": "Customer resource flag for resending signup code as boolean."
        },
        "verifySignupCode": {
          "type": "boolean",
          "description": "Customer resource flag for requiring verification of signup code as boolean."
        },
        "verifySignupPhrase": {
          "type": "string",
          "format": "password",
          "description": "Customer resource phrase for verifying signup.",
          "x-ms-mutability": [
            "update",
            "create"
          ],
          "x-ms-secret": true
        }
      }
    },
    "CustomerProperty": {
      "type": "object",
      "description": "Model representing customer for connectedCache resource",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioned state of the resource",
          "readOnly": true
        },
        "customer": {
          "$ref": "#/definitions/CustomerEntity",
          "description": "Mcc customer resource (customer entity)."
        },
        "additionalCustomerProperties": {
          "$ref": "#/definitions/AdditionalCustomerProperties",
          "description": "Mcc customer resource additional properties."
        },
        "statusCode": {
          "type": "string",
          "description": "Mcc response status code.",
          "readOnly": true
        },
        "statusText": {
          "type": "string",
          "description": "Mcc response status text as string for retrieving status details.",
          "readOnly": true
        },
        "statusDetails": {
          "type": "string",
          "description": "Mcc response status details for retrieving response inner details.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "HTTP error status code.",
          "readOnly": true
        },
        "error": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "Mcc response error details.",
          "readOnly": true
        }
      }
    },
    "CustomerTransitState": {
      "type": "string",
      "description": "Customer resource transit states",
      "enum": [
        "NoTransit",
        "CombinedTransit",
        "TransitOnly"
      ],
      "x-ms-enum": {
        "name": "CustomerTransitState",
        "modelAsString": true,
        "values": [
          {
            "name": "NoTransit",
            "value": "NoTransit",
            "description": "do not have transit"
          },
          {
            "name": "CombinedTransit",
            "value": "CombinedTransit",
            "description": "transit provider and have own subscribers"
          },
          {
            "name": "TransitOnly",
            "value": "TransitOnly",
            "description": "pure transit provider or network service provider"
          }
        ]
      }
    },
    "CycleType": {
      "type": "string",
      "description": "Update Cycle type",
      "enum": [
        "Preview",
        "Slow",
        "Fast"
      ],
      "x-ms-enum": {
        "name": "CycleType",
        "modelAsString": true,
        "values": [
          {
            "name": "Preview",
            "value": "Preview",
            "description": "customer selection of preview update install mcc on their physical vm"
          },
          {
            "name": "Slow",
            "value": "Slow",
            "description": "customer selection of slow update to install mcc on their physical vm"
          },
          {
            "name": "Fast",
            "value": "Fast",
            "description": "customer selection of fast / auto update to install mcc on their physical vm"
          }
        ]
      }
    },
    "EnterpriseMccCacheNodeResource": {
      "type": "object",
      "description": "Represents the high level Nodes needed to provision cache node resources",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CacheNodeProperty",
          "description": "The resource-specific properties for this resource.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "EnterpriseMccCacheNodeResourceListResult": {
      "type": "object",
      "description": "The response of a EnterpriseMccCacheNodeResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EnterpriseMccCacheNodeResource items on this page",
          "items": {
            "$ref": "#/definitions/EnterpriseMccCacheNodeResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EnterpriseMccCustomerResource": {
      "type": "object",
      "description": "Represents the high level Nodes needed to provision customer resources",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CustomerProperty",
          "description": "The resource-specific properties for this resource.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "EnterpriseMccCustomerResourceListResult": {
      "type": "object",
      "description": "The response of a EnterpriseMccCustomerResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EnterpriseMccCustomerResource items on this page",
          "items": {
            "$ref": "#/definitions/EnterpriseMccCustomerResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "IspCacheNodeResource": {
      "type": "object",
      "description": "Represents the high level Nodes needed to provision cache node resources",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CacheNodeProperty",
          "description": "The resource-specific properties for this resource.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "IspCacheNodeResourceListResult": {
      "type": "object",
      "description": "The response of a IspCacheNodeResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IspCacheNodeResource items on this page",
          "items": {
            "$ref": "#/definitions/IspCacheNodeResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "IspCustomerResource": {
      "type": "object",
      "description": "Represents the high level Nodes needed to provision isp customer resources",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CustomerProperty",
          "description": "The resource-specific properties for this resource.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "IspCustomerResourceListResult": {
      "type": "object",
      "description": "The response of a IspCustomerResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IspCustomerResource items on this page",
          "items": {
            "$ref": "#/definitions/IspCustomerResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "MccCacheNodeAutoUpdateHistory": {
      "type": "object",
      "description": "Mcc cache node resource auto update history.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MccCacheNodeAutoUpdateHistoryProperties",
          "description": "Mcc cache node resource auto update history properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "MccCacheNodeAutoUpdateHistoryProperties": {
      "type": "object",
      "description": "Mcc cache node resource auto update history properties.",
      "properties": {
        "customerId": {
          "type": "string",
          "description": "Mcc customer resource Id.",
          "readOnly": true
        },
        "cacheNodeId": {
          "type": "string",
          "description": "Mcc cache node resource Id.",
          "readOnly": true
        },
        "autoUpdateHistory": {
          "type": "array",
          "description": "Cache node resource auto update history information.",
          "items": {
            "$ref": "#/definitions/MccCacheNodeAutoUpdateInfo"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "MccCacheNodeAutoUpdateInfo": {
      "type": "object",
      "description": "Mcc cache node resource auto update properties.",
      "properties": {
        "imageUriBeforeUpdate": {
          "type": "string",
          "description": "Auto update image uri before update.",
          "readOnly": true
        },
        "imageUriTargeted": {
          "type": "string",
          "description": "Auto update image uri targetted to update.",
          "readOnly": true
        },
        "imageUriTerminal": {
          "type": "string",
          "description": "Auto update image uri at Terminal.",
          "readOnly": true
        },
        "autoUpdateRingType": {
          "type": "integer",
          "format": "int32",
          "description": "Auto update Ring Type.",
          "readOnly": true
        },
        "movedToTerminalStateDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Auto update image uri after update.",
          "readOnly": true
        },
        "ruleRequestedWeek": {
          "type": "integer",
          "format": "int32",
          "description": "Auto update image uri before update.",
          "readOnly": true
        },
        "ruleRequestedDay": {
          "type": "integer",
          "format": "int32",
          "description": "Auto update image uri after update.",
          "readOnly": true
        },
        "createdDateTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Auto update entity created datetime.",
          "readOnly": true
        },
        "updatedRegistryDateTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Auto update entity last updated datetime.",
          "readOnly": true
        },
        "planChangeLogText": {
          "type": "string",
          "description": "This text describing the purpose of the plan of auto update.",
          "readOnly": true
        },
        "autoUpdateLastAppliedStatus": {
          "type": "integer",
          "format": "int32",
          "description": "Auto update last applied status.",
          "readOnly": true
        },
        "autoUpdateLastAppliedStatusText": {
          "type": "string",
          "description": "Auto update last applied status text.",
          "readOnly": true
        },
        "autoUpdateLastAppliedStatusDetailedText": {
          "type": "string",
          "description": "Auto update last applied detailed status text.",
          "readOnly": true
        },
        "planId": {
          "type": "integer",
          "format": "int64",
          "description": "Auto update planId.",
          "readOnly": true
        },
        "timeToGoLiveDateTime": {
          "type": "string",
          "description": "Auto update time to go live date time.",
          "readOnly": true
        },
        "ruleRequestedMinute": {
          "type": "string",
          "description": "Auto update rule requested minute.",
          "readOnly": true
        },
        "ruleRequestedHour": {
          "type": "string",
          "description": "Auto update rule requested hour.",
          "readOnly": true
        }
      }
    },
    "MccCacheNodeBgpCidrDetails": {
      "type": "object",
      "description": "Represents all Cidr details of the Bgp request for a specific cache node resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BgpCidrsConfiguration",
          "description": "Mcc cache node resource Bgp Cidr properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "MccCacheNodeInstallDetails": {
      "type": "object",
      "description": "Mcc cache node resource all install details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CacheNodeInstallProperties",
          "description": "Mcc cache node resource install script details."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "MccCacheNodeIssueHistory": {
      "type": "object",
      "description": "Mcc cache node resource issue history.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MccCacheNodeIssueHistoryProperties",
          "description": "Mcc cache node resource issue history properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "MccCacheNodeIssueHistoryProperties": {
      "type": "object",
      "description": "Mcc cache node resource issue history properties.",
      "properties": {
        "customerId": {
          "type": "string",
          "description": "Mcc customer resource Id.",
          "readOnly": true
        },
        "cacheNodeId": {
          "type": "string",
          "description": "Mcc cache node resource Id.",
          "readOnly": true
        },
        "mccIssueHistory": {
          "type": "array",
          "description": "Cache node resource issue details history.",
          "items": {
            "$ref": "#/definitions/MccIssue"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "MccCacheNodeTlsCertificate": {
      "type": "object",
      "description": "Mcc cache node resource Tls certificate details.",
      "properties": {
        "actionRequired": {
          "type": "string",
          "description": "Mcc cache node Tls certificate status.",
          "readOnly": true
        },
        "certificateFileName": {
          "type": "string",
          "description": "Mcc cache node Tls certificate file name.",
          "readOnly": true
        },
        "thumbprint": {
          "type": "string",
          "description": "Mcc cache node Tls certificate thumbprint.",
          "readOnly": true
        },
        "expiryDate": {
          "type": "string",
          "format": "date-time",
          "description": "Mcc cache node Tls certificate expiry date.",
          "readOnly": true
        },
        "notBeforeDate": {
          "type": "string",
          "format": "date-time",
          "description": "Mcc cache node Tls certificate not before date.",
          "readOnly": true
        },
        "subject": {
          "type": "string",
          "description": "Mcc cache node Tls certificate subject name.",
          "readOnly": true
        },
        "subjectAltName": {
          "type": "string",
          "description": "Mcc cache node Tls certificate subject alternate name.",
          "readOnly": true
        }
      }
    },
    "MccCacheNodeTlsCertificateHistory": {
      "type": "object",
      "description": "Mcc cache node resource Tls certificate history details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MccCacheNodeTlsCertificateProperties",
          "description": "Mcc cache node resource Tls certificate details."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "MccCacheNodeTlsCertificateProperties": {
      "type": "object",
      "description": "Mcc cache node resource auto update properties.",
      "properties": {
        "customerId": {
          "type": "string",
          "description": "Mcc customer resource Id.",
          "readOnly": true
        },
        "cacheNodeId": {
          "type": "string",
          "description": "Mcc cache node resource Id.",
          "readOnly": true
        },
        "tlsCertificateHistory": {
          "type": "array",
          "description": "Cache node resource tls certificate history details.",
          "items": {
            "$ref": "#/definitions/MccCacheNodeTlsCertificate"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "MccIssue": {
      "type": "object",
      "description": "Mcc cache node resource issue properties.",
      "properties": {
        "mccIssueType": {
          "type": "string",
          "description": "Mcc cache node issue type.",
          "readOnly": true
        },
        "toastString": {
          "type": "string",
          "description": "Mcc cache node issues toastString.",
          "readOnly": true
        },
        "detailString": {
          "type": "string",
          "description": "Mcc cache node issue detail string.",
          "readOnly": true
        },
        "helpLink": {
          "type": "string",
          "description": "Mcc cache node issue related help link.",
          "readOnly": true
        },
        "issueStartDate": {
          "type": "string",
          "format": "date-time",
          "description": "Mcc cache node issue start date.",
          "readOnly": true
        },
        "issueEndDate": {
          "type": "string",
          "format": "date-time",
          "description": "Mcc cache node issue end date.",
          "readOnly": true
        }
      }
    },
    "MccIssueType": {
      "type": "string",
      "description": "Mcc issue type",
      "enum": [
        "DriveNotFound",
        "WorkerCountTooFew",
        "DrivePermission",
        "DriveTooSmall",
        "DriveInputOutputError",
        "Other"
      ],
      "x-ms-enum": {
        "name": "MccIssueType",
        "modelAsString": true,
        "values": [
          {
            "name": "DriveNotFound",
            "value": "DriveNotFound",
            "description": "mcc issue Type drive not found"
          },
          {
            "name": "WorkerCountTooFew",
            "value": "WorkerCountTooFew",
            "description": "mcc issue worker count is less"
          },
          {
            "name": "DrivePermission",
            "value": "DrivePermission",
            "description": "mcc issue with drive permissions"
          },
          {
            "name": "DriveTooSmall",
            "value": "DriveTooSmall",
            "description": "mcc issue drive size is too small"
          },
          {
            "name": "DriveInputOutputError",
            "value": "DriveInputOutputError",
            "description": "mcc issue with drive i/o error"
          },
          {
            "name": "Other",
            "value": "Other",
            "description": "all other issues"
          }
        ]
      }
    },
    "OsType": {
      "type": "string",
      "description": "Operating System of the cache node",
      "enum": [
        "Windows",
        "Linux",
        "Eflow"
      ],
      "x-ms-enum": {
        "name": "OsType",
        "modelAsString": true,
        "values": [
          {
            "name": "Windows",
            "value": "Windows",
            "description": "cache node installs on windows operating system"
          },
          {
            "name": "Linux",
            "value": "Linux",
            "description": "cache node installs on Linux Operating system"
          },
          {
            "name": "Eflow",
            "value": "Eflow",
            "description": "cache node installs on Azure Eflow"
          }
        ]
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "provisioning state of the resource",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Unknown",
        "Accepted",
        "Upgrading",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "unknown  state of the provisioning state"
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Accepted state of the provisioning state during the Async Operations"
          },
          {
            "name": "Upgrading",
            "value": "Upgrading",
            "description": "Upgrading state of the provisioning state"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Deleting state of the provisioning state"
          }
        ]
      },
      "readOnly": true
    },
    "ProxyRequired": {
      "type": "string",
      "description": "Proxy details enum",
      "enum": [
        "None",
        "Required"
      ],
      "x-ms-enum": {
        "name": "ProxyRequired",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "Proxy is not required in setup"
          },
          {
            "name": "Required",
            "value": "Required",
            "description": "proxy is required in setup"
          }
        ]
      }
    },
    "ProxyUrlConfiguration": {
      "type": "object",
      "description": "ProxyUrl configuration of cache node",
      "properties": {
        "proxyUrl": {
          "type": "string",
          "description": "Host Proxy Address configuration along with port number. This can be a proxy or ip address. ex: xx.xx.xx.xxxx:80 or host name http://exampleproxy.com:80"
        }
      }
    },
    "autoUpdateRingType": {
      "type": "string",
      "description": "Auto update Ring type",
      "enum": [
        "Preview",
        "Slow",
        "Fast"
      ],
      "x-ms-enum": {
        "name": "autoUpdateRingType",
        "modelAsString": true,
        "values": [
          {
            "name": "Preview",
            "value": "Preview",
            "description": "customer selection of preview update install mcc on their physical vm"
          },
          {
            "name": "Slow",
            "value": "Slow",
            "description": "customer selection of slow update to install mcc on their physical vm"
          },
          {
            "name": "Fast",
            "value": "Fast",
            "description": "customer selection of fast / auto update to install mcc on their physical vm"
          }
        ]
      }
    }
  },
  "parameters": {}
}
