{
  "swagger": "2.0",
  "info": {
    "title": "ProviderHub",
    "version": "2024-09-01",
    "description": "Microsoft ProviderHub",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "CustomRollouts"
    },
    {
      "name": "NewRegionFrontloadRelease"
    },
    {
      "name": "ProviderRegistrations"
    },
    {
      "name": "DefaultRollouts"
    },
    {
      "name": "NotificationRegistrations"
    },
    {
      "name": "OperationsPutContents"
    },
    {
      "name": "ResourceTypeRegistrations"
    },
    {
      "name": "Skus"
    },
    {
      "name": "SkuResources"
    },
    {
      "name": "SkuResourceOperationGroup"
    },
    {
      "name": "SkuResourceOperationGroupThird"
    },
    {
      "name": "AuthorizedApplications"
    },
    {
      "name": "ProviderMonitorSettings"
    }
  ],
  "paths": {
    "/providers/Microsoft.ProviderHub/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationsDefinitionArrayResponseWithContinuation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerMonitorSettings": {
      "get": {
        "operationId": "ProviderMonitorSettings_ListBySubscription",
        "tags": [
          "ProviderMonitorSettings"
        ],
        "description": "Gets the list of the provider monitor settings in the subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProviderMonitorSettingArrayResponseWithContinuation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProviderMonitorSettings_ListBySubscription": {
            "$ref": "./examples/ProviderMonitorSettings_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations": {
      "get": {
        "operationId": "ProviderRegistrations_List",
        "tags": [
          "ProviderRegistrations"
        ],
        "description": "Gets the list of the provider registrations in the subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProviderRegistrationArrayResponseWithContinuation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProviderRegistrations_List": {
            "$ref": "./examples/ProviderRegistrations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}": {
      "get": {
        "operationId": "ProviderRegistrations_Get",
        "tags": [
          "ProviderRegistrations"
        ],
        "description": "Gets the provider registration details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProviderRegistration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProviderRegistrations_Get": {
            "$ref": "./examples/ProviderRegistrations_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ProviderRegistrations_CreateOrUpdate",
        "tags": [
          "ProviderRegistrations"
        ],
        "description": "Creates or updates the provider registration.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The provider registration properties supplied to the CreateOrUpdate operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProviderRegistration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ProviderRegistration' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ProviderRegistration"
            }
          },
          "201": {
            "description": "Resource 'ProviderRegistration' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ProviderRegistration"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DirectProviderRegistrations_CreateOrUpdate": {
            "$ref": "./examples/DirectProviderRegistrations_CreateOrUpdate.json"
          },
          "ProviderRegistrations_CreateOrUpdate": {
            "$ref": "./examples/ProviderRegistrations_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/ProviderRegistration"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ProviderRegistrations_Delete",
        "tags": [
          "ProviderRegistrations"
        ],
        "description": "Deletes a provider registration.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProviderRegistrations_Delete": {
            "$ref": "./examples/ProviderRegistrations_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/authorizedApplications": {
      "get": {
        "operationId": "AuthorizedApplications_List",
        "tags": [
          "AuthorizedApplications"
        ],
        "description": "Gets the list of the authorized applications in the provider namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AuthorizedApplicationArrayResponseWithContinuation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AuthorizedApplications_List": {
            "$ref": "./examples/AuthorizedApplications_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/authorizedApplications/{applicationId}": {
      "get": {
        "operationId": "AuthorizedApplications_Get",
        "tags": [
          "AuthorizedApplications"
        ],
        "description": "Gets the authorized application details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "The application ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AuthorizedApplication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AuthorizedApplications_Get": {
            "$ref": "./examples/AuthorizedApplications_Get.json"
          }
        }
      },
      "put": {
        "operationId": "AuthorizedApplications_CreateOrUpdate",
        "tags": [
          "AuthorizedApplications"
        ],
        "description": "Creates or updates the authorized application.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "The application ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The authorized application properties supplied to the CreateOrUpdate operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthorizedApplication"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AuthorizedApplication' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AuthorizedApplication"
            }
          },
          "201": {
            "description": "Resource 'AuthorizedApplication' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/AuthorizedApplication"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AuthorizedApplications_CreateOrUpdate": {
            "$ref": "./examples/AuthorizedApplications_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/AuthorizedApplication"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "AuthorizedApplications_Delete",
        "tags": [
          "AuthorizedApplications"
        ],
        "description": "Deletes an authorized application.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "The application ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AuthorizedApplications_Delete": {
            "$ref": "./examples/AuthorizedApplications_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/checkinManifest": {
      "post": {
        "operationId": "CheckinManifest",
        "tags": [
          "ProviderRegistrations"
        ],
        "description": "Checkin the manifest.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "checkinManifestParams",
            "in": "body",
            "description": "The required body parameters supplied to the checkin manifest operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckinManifestParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CheckinManifestInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CheckinManifest": {
            "$ref": "./examples/CheckinManifest.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/customRollouts": {
      "get": {
        "operationId": "CustomRollouts_ListByProviderRegistration",
        "tags": [
          "CustomRollouts"
        ],
        "description": "Gets the list of the custom rollouts for the given provider.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CustomRolloutArrayResponseWithContinuation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CustomRollouts_ListByProviderRegistration": {
            "$ref": "./examples/CustomRollouts_ListByProviderRegistration.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/customRollouts/{rolloutName}": {
      "get": {
        "operationId": "CustomRollouts_Get",
        "tags": [
          "CustomRollouts"
        ],
        "description": "Gets the custom rollout details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "rolloutName",
            "in": "path",
            "description": "The rollout name.",
            "required": true,
            "type": "string",
            "maxLength": 260,
            "pattern": "^[-\\w\\._\\(\\)]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CustomRollout"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CustomRollouts_Get": {
            "$ref": "./examples/CustomRollouts_Get.json"
          }
        }
      },
      "put": {
        "operationId": "CustomRollouts_CreateOrUpdate",
        "tags": [
          "CustomRollouts"
        ],
        "description": "Creates or updates the rollout details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "rolloutName",
            "in": "path",
            "description": "The rollout name.",
            "required": true,
            "type": "string",
            "maxLength": 260,
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The custom rollout properties supplied to the CreateOrUpdate operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomRollout"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CustomRollout' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/CustomRollout"
            }
          },
          "201": {
            "description": "Resource 'CustomRollout' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/CustomRollout"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CustomRollouts_CreateOrUpdate": {
            "$ref": "./examples/CustomRollouts_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/CustomRollout"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "CustomRollouts_Delete",
        "tags": [
          "CustomRollouts"
        ],
        "description": "Deletes the custom rollout resource. Custom rollout must be in terminal state.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "rolloutName",
            "in": "path",
            "description": "The rollout name.",
            "required": true,
            "type": "string",
            "maxLength": 260,
            "pattern": "^[-\\w\\._\\(\\)]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "providerReleases_Delete": {
            "$ref": "./examples/CustomRollouts_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/customRollouts/{rolloutName}/stop": {
      "post": {
        "operationId": "CustomRollouts_Stop",
        "tags": [
          "CustomRollouts"
        ],
        "description": "Stops or cancels the custom rollout, if in progress.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "rolloutName",
            "in": "path",
            "description": "The rollout name.",
            "required": true,
            "type": "string",
            "maxLength": 260,
            "pattern": "^[-\\w\\._\\(\\)]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CustomRollouts_Stop": {
            "$ref": "./examples/CustomRollouts_Stop.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/defaultRollouts": {
      "get": {
        "operationId": "DefaultRollouts_ListByProviderRegistration",
        "tags": [
          "DefaultRollouts"
        ],
        "description": "Gets the list of the rollouts for the given provider.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DefaultRolloutArrayResponseWithContinuation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DefaultRollouts_ListByProviderRegistration": {
            "$ref": "./examples/DefaultRollouts_ListByProviderRegistration.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/defaultRollouts/{rolloutName}": {
      "get": {
        "operationId": "DefaultRollouts_Get",
        "tags": [
          "DefaultRollouts"
        ],
        "description": "Gets the default rollout details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "rolloutName",
            "in": "path",
            "description": "The rollout name.",
            "required": true,
            "type": "string",
            "maxLength": 260,
            "pattern": "^[-\\w\\._\\(\\)]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DefaultRollout"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DefaultRollouts_Get": {
            "$ref": "./examples/DefaultRollouts_Get.json"
          }
        }
      },
      "put": {
        "operationId": "DefaultRollouts_CreateOrUpdate",
        "tags": [
          "DefaultRollouts"
        ],
        "description": "Creates or updates the rollout details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "rolloutName",
            "in": "path",
            "description": "The rollout name.",
            "required": true,
            "type": "string",
            "maxLength": 260,
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The Default rollout properties supplied to the CreateOrUpdate operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DefaultRollout"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DefaultRollout' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DefaultRollout"
            }
          },
          "201": {
            "description": "Resource 'DefaultRollout' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DefaultRollout"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DefaultRollouts_CreateOrUpdate": {
            "$ref": "./examples/DefaultRollouts_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/DefaultRollout"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "DefaultRollouts_Delete",
        "tags": [
          "DefaultRollouts"
        ],
        "description": "Deletes the rollout resource. Rollout must be in terminal state.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "rolloutName",
            "in": "path",
            "description": "The rollout name.",
            "required": true,
            "type": "string",
            "maxLength": 260,
            "pattern": "^[-\\w\\._\\(\\)]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DefaultRollouts_Delete": {
            "$ref": "./examples/DefaultRollouts_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/defaultRollouts/{rolloutName}/stop": {
      "post": {
        "operationId": "DefaultRollouts_Stop",
        "tags": [
          "DefaultRollouts"
        ],
        "description": "Stops or cancels the rollout, if in progress.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "rolloutName",
            "in": "path",
            "description": "The rollout name.",
            "required": true,
            "type": "string",
            "maxLength": 260,
            "pattern": "^[-\\w\\._\\(\\)]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DefaultRollouts_Stop": {
            "$ref": "./examples/DefaultRollouts_Stop.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/generateManifest": {
      "post": {
        "operationId": "GenerateManifest",
        "tags": [
          "ProviderRegistrations"
        ],
        "description": "Generates the manifest for the given provider.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceProviderManifest"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GenerateManifest": {
            "$ref": "./examples/GenerateManifest.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/generateNewRegionFrontloadManifest": {
      "post": {
        "operationId": "NewRegionFrontloadRelease_GenerateManifest",
        "tags": [
          "ProviderRegistrations"
        ],
        "description": "Generates the new region frontload manifest.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FrontloadPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceProviderManifest"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NewRegionFrontloadRelease_GenerateManifest": {
            "$ref": "./examples/NewRegionFrontloadRelease_GenerateManifest.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/generateOperations": {
      "post": {
        "operationId": "ProviderRegistrations_GenerateOperations",
        "tags": [
          "ProviderRegistrations"
        ],
        "description": "Generates the operations api for the given provider.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OperationsDefinition"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProviderRegistrations_GenerateOperations": {
            "$ref": "./examples/ProviderRegistrations_GenerateOperations.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/newRegionFrontloadRelease/{releaseName}": {
      "get": {
        "operationId": "NewRegionFrontloadRelease_Get",
        "tags": [
          "NewRegionFrontloadRelease"
        ],
        "description": "Gets a new region frontload release.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "releaseName",
            "in": "path",
            "description": "The name of the release.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DefaultRollout"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NewRegionFrontloadRelease_Get": {
            "$ref": "./examples/NewRegionFrontloadRelease_Get.json"
          }
        }
      },
      "put": {
        "operationId": "NewRegionFrontloadRelease_CreateOrUpdate",
        "tags": [
          "NewRegionFrontloadRelease"
        ],
        "description": "Creates or updates a new region frontload release.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "releaseName",
            "in": "path",
            "description": "The name of the release.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FrontloadPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DefaultRollout"
            }
          },
          "201": {
            "description": "Azure create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DefaultRollout"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NewRegionFrontloadRelease_CreateOrUpdate": {
            "$ref": "./examples/NewRegionFrontloadRelease_CreateOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/newRegionFrontloadRelease/{releaseName}/stop": {
      "post": {
        "operationId": "NewRegionFrontloadRelease_Stop",
        "tags": [
          "NewRegionFrontloadRelease"
        ],
        "description": "Stops a new region frontload release.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "releaseName",
            "in": "path",
            "description": "The name of the release.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NewRegionFrontloadRelease_Stop": {
            "$ref": "./examples/NewRegionFrontloadRelease_Stop.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/notificationRegistrations": {
      "get": {
        "operationId": "NotificationRegistrations_ListByProviderRegistration",
        "tags": [
          "NotificationRegistrations"
        ],
        "description": "Gets the list of the notification registrations for the given provider.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NotificationRegistrationArrayResponseWithContinuation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationRegistrations_ListByProviderRegistration": {
            "$ref": "./examples/NotificationRegistrations_ListByProviderRegistration.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/notificationRegistrations/{notificationRegistrationName}": {
      "get": {
        "operationId": "NotificationRegistrations_Get",
        "tags": [
          "NotificationRegistrations"
        ],
        "description": "Gets the notification registration details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "notificationRegistrationName",
            "in": "path",
            "description": "The notification registration.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NotificationRegistration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationRegistrations_Get": {
            "$ref": "./examples/NotificationRegistrations_Get.json"
          }
        }
      },
      "put": {
        "operationId": "NotificationRegistrations_CreateOrUpdate",
        "tags": [
          "NotificationRegistrations"
        ],
        "description": "Creates or updates a notification registration.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "notificationRegistrationName",
            "in": "path",
            "description": "The notification registration.",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The required body parameters supplied to the notification registration operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationRegistration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NotificationRegistration' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NotificationRegistration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationRegistrations_CreateOrUpdate": {
            "$ref": "./examples/NotificationRegistrations_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "NotificationRegistrations_Delete",
        "tags": [
          "NotificationRegistrations"
        ],
        "description": "Deletes a notification registration.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "notificationRegistrationName",
            "in": "path",
            "description": "The notification registration.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationRegistrations_Delete": {
            "$ref": "./examples/NotificationRegistrations_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/operations/default": {
      "get": {
        "operationId": "Operations_ListByProviderRegistration",
        "tags": [
          "OperationsPutContents"
        ],
        "description": "Gets the operations supported by the given provider.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OperationsDefinition"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_ListByProviderRegistration": {
            "$ref": "./examples/Operations_ListByProviderRegistration.json"
          }
        }
      },
      "put": {
        "operationId": "Operations_CreateOrUpdate",
        "tags": [
          "OperationsPutContents"
        ],
        "description": "Creates or updates the operation supported by the given provider.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "OperationsPutContent",
            "in": "body",
            "description": "The operations content properties supplied to the CreateOrUpdate operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OperationsPutContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'OperationsPutContent' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/OperationsPutContent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_CreateOrUpdate": {
            "$ref": "./examples/Operations_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "Operations_Delete",
        "tags": [
          "OperationsPutContents"
        ],
        "description": "Deletes an operation.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_Delete": {
            "$ref": "./examples/Operations_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourceActions/{resourceActionName}/deleteResources": {
      "post": {
        "operationId": "ResourceActions_DeleteResources",
        "tags": [
          "ProviderRegistrations"
        ],
        "description": "Deletes resources.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceActionName",
            "in": "path",
            "description": "The resource action name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z][a-z0-9]*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The properties supplied to the DeleteResources operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceManagementAction"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ResourceActions_DeleteResources": {
            "$ref": "./examples/ResourceActions_DeleteResources.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations": {
      "get": {
        "operationId": "ResourceTypeRegistrations_ListByProviderRegistration",
        "tags": [
          "ResourceTypeRegistrations"
        ],
        "description": "Gets the list of the resource types for the given provider.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceTypeRegistrationArrayResponseWithContinuation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ResourceTypeRegistrations_ListByProviderRegistration": {
            "$ref": "./examples/ResourceTypeRegistrations_ListByProviderRegistration.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}": {
      "get": {
        "operationId": "ResourceTypeRegistrations_Get",
        "tags": [
          "ResourceTypeRegistrations"
        ],
        "description": "Gets a resource type details in the given subscription and provider.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "The resource type.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceTypeRegistration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ResourceTypeRegistrations_Get": {
            "$ref": "./examples/ResourceTypeRegistrations_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ResourceTypeRegistrations_CreateOrUpdate",
        "tags": [
          "ResourceTypeRegistrations"
        ],
        "description": "Creates or updates a resource type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "The resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The required request body parameters supplied to the resource type registration CreateOrUpdate operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceTypeRegistration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ResourceTypeRegistration' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ResourceTypeRegistration"
            }
          },
          "201": {
            "description": "Resource 'ResourceTypeRegistration' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ResourceTypeRegistration"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DirectResourceTypeRegistrations_CreateOrUpdate.json": {
            "$ref": "./examples/DirectResourceTypeRegistrations_CreateOrUpdate.json"
          },
          "ResourceTypeRegistrations_CreateOrUpdate": {
            "$ref": "./examples/ResourceTypeRegistrations_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/ResourceTypeRegistration"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ResourceTypeRegistrations_Delete",
        "tags": [
          "ResourceTypeRegistrations"
        ],
        "description": "Deletes a resource type",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "The name of the resource provider hosted within ProviderHub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "The resource type.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ResourceTypeRegistrations_Delete": {
            "$ref": "./examples/ResourceTypeRegistrations_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}/resourcetypeRegistrations/{nestedResourceTypeFirst}/resourcetypeRegistrations/{nestedResourceTypeSecond}/resourcetypeRegistrations/{nestedResourceTypeThird}/skus": {
      "get": {
        "operationId": "Skus_ListByResourceTypeRegistrationsNestedResourceTypeThird",
        "tags": [
          "SkuResourceOperationGroupThird"
        ],
        "description": "Gets the list of skus for the given resource type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "the provider namespace",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "The resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nestedResourceTypeFirst",
            "in": "path",
            "description": "The first child resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nestedResourceTypeSecond",
            "in": "path",
            "description": "The second child resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nestedResourceTypeThird",
            "in": "path",
            "description": "The third child resource type.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SkuResourceArrayResponseWithContinuation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Skus_ListByResourceTypeRegistrationsNestedResourceTypeThird": {
            "$ref": "./examples/Skus_ListByResourceTypeRegistrationsNestedResourceTypeThird.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}/resourcetypeRegistrations/{nestedResourceTypeFirst}/resourcetypeRegistrations/{nestedResourceTypeSecond}/resourcetypeRegistrations/{nestedResourceTypeThird}/skus/{sku}": {
      "get": {
        "operationId": "Skus_GetNestedResourceTypeThird",
        "tags": [
          "SkuResourceOperationGroupThird"
        ],
        "description": "Gets the sku details for the given resource type and sku name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "the provider namespace",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "The resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nestedResourceTypeFirst",
            "in": "path",
            "description": "The first child resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nestedResourceTypeSecond",
            "in": "path",
            "description": "The second child resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nestedResourceTypeThird",
            "in": "path",
            "description": "The third child resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sku",
            "in": "path",
            "description": "The SKU.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SkuResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Skus_GetNestedResourceTypeThird": {
            "$ref": "./examples/Skus_GetNestedResourceTypeThird.json"
          }
        }
      },
      "put": {
        "operationId": "Skus_CreateOrUpdateNestedResourceTypeThird",
        "tags": [
          "SkuResourceOperationGroupThird"
        ],
        "description": "Creates or updates the resource type skus in the given resource type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "the provider namespace",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "The resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nestedResourceTypeFirst",
            "in": "path",
            "description": "The first child resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nestedResourceTypeSecond",
            "in": "path",
            "description": "The second child resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nestedResourceTypeThird",
            "in": "path",
            "description": "The third child resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sku",
            "in": "path",
            "description": "The SKU.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SkuResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SkuResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SkuResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Skus_CreateOrUpdateNestedResourceTypeThird": {
            "$ref": "./examples/Skus_CreateOrUpdateNestedResourceTypeThird.json"
          }
        }
      },
      "delete": {
        "operationId": "Skus_DeleteNestedResourceTypeThird",
        "tags": [
          "SkuResourceOperationGroupThird"
        ],
        "description": "Deletes a resource type sku.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "the provider namespace",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "The resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nestedResourceTypeFirst",
            "in": "path",
            "description": "The first child resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nestedResourceTypeSecond",
            "in": "path",
            "description": "The second child resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nestedResourceTypeThird",
            "in": "path",
            "description": "The third child resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sku",
            "in": "path",
            "description": "The SKU.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Skus_DeleteNestedResourceTypeThird": {
            "$ref": "./examples/Skus_DeleteNestedResourceTypeThird.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}/resourcetypeRegistrations/{nestedResourceTypeFirst}/resourcetypeRegistrations/{nestedResourceTypeSecond}/skus": {
      "get": {
        "operationId": "Skus_ListByResourceTypeRegistrationsNestedResourceTypeSecond",
        "tags": [
          "SkuResourceOperationGroup"
        ],
        "description": "Gets the list of skus for the given resource type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "the provider namespace",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "The resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nestedResourceTypeFirst",
            "in": "path",
            "description": "The first child resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nestedResourceTypeSecond",
            "in": "path",
            "description": "The second child resource type.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SkuResourceArrayResponseWithContinuation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Skus_ListByResourceTypeRegistrationsNestedResourceTypeSecond": {
            "$ref": "./examples/Skus_ListByResourceTypeRegistrationsNestedResourceTypeSecond.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}/resourcetypeRegistrations/{nestedResourceTypeFirst}/resourcetypeRegistrations/{nestedResourceTypeSecond}/skus/{sku}": {
      "get": {
        "operationId": "Skus_GetNestedResourceTypeSecond",
        "tags": [
          "SkuResourceOperationGroup"
        ],
        "description": "Gets the sku details for the given resource type and sku name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "the provider namespace",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "The resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nestedResourceTypeFirst",
            "in": "path",
            "description": "The first child resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nestedResourceTypeSecond",
            "in": "path",
            "description": "The second child resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sku",
            "in": "path",
            "description": "The SKU.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SkuResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Skus_GetNestedResourceTypeSecond": {
            "$ref": "./examples/Skus_GetNestedResourceTypeSecond.json"
          }
        }
      },
      "put": {
        "operationId": "Skus_CreateOrUpdateNestedResourceTypeSecond",
        "tags": [
          "SkuResourceOperationGroup"
        ],
        "description": "Creates or updates the resource type skus in the given resource type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "the provider namespace",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "The resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nestedResourceTypeFirst",
            "in": "path",
            "description": "The first child resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nestedResourceTypeSecond",
            "in": "path",
            "description": "The second child resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sku",
            "in": "path",
            "description": "The SKU.",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The required body parameters supplied to the resource sku operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SkuResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SkuResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SkuResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Skus_CreateOrUpdateNestedResourceTypeSecond": {
            "$ref": "./examples/Skus_CreateOrUpdateNestedResourceTypeSecond.json"
          }
        }
      },
      "delete": {
        "operationId": "Skus_DeleteNestedResourceTypeSecond",
        "tags": [
          "SkuResourceOperationGroup"
        ],
        "description": "Deletes a resource type sku.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "the provider namespace",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "The resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nestedResourceTypeFirst",
            "in": "path",
            "description": "The first child resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nestedResourceTypeSecond",
            "in": "path",
            "description": "The second child resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sku",
            "in": "path",
            "description": "The SKU.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Skus_DeleteNestedResourceTypeSecond": {
            "$ref": "./examples/Skus_DeleteNestedResourceTypeSecond.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}/resourcetypeRegistrations/{nestedResourceTypeFirst}/skus": {
      "get": {
        "operationId": "Skus_ListByResourceTypeRegistrationsNestedResourceTypeFirst",
        "tags": [
          "Skus"
        ],
        "description": "Gets the list of skus for the given resource type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "the provider namespace",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "The resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nestedResourceTypeFirst",
            "in": "path",
            "description": "The first child resource type.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SkuResourceArrayResponseWithContinuation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Skus_ListByResourceTypeRegistrationsNestedResourceTypeFirst": {
            "$ref": "./examples/Skus_ListByResourceTypeRegistrationsNestedResourceTypeFirst.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}/resourcetypeRegistrations/{nestedResourceTypeFirst}/skus/{sku}": {
      "get": {
        "operationId": "Skus_GetNestedResourceTypeFirst",
        "tags": [
          "Skus"
        ],
        "description": "Gets the sku details for the given resource type and sku name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "the provider namespace",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "The resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nestedResourceTypeFirst",
            "in": "path",
            "description": "The first child resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sku",
            "in": "path",
            "description": "The SKU.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SkuResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Skus_GetNestedResourceTypeFirst": {
            "$ref": "./examples/Skus_GetNestedResourceTypeFirst.json"
          }
        }
      },
      "put": {
        "operationId": "Skus_CreateOrUpdateNestedResourceTypeFirst",
        "tags": [
          "Skus"
        ],
        "description": "Creates or updates the resource type skus in the given resource type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "the provider namespace",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "The resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nestedResourceTypeFirst",
            "in": "path",
            "description": "The first child resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sku",
            "in": "path",
            "description": "The SKU.",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The required body parameters supplied to the resource sku operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SkuResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SkuResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SkuResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Skus_CreateOrUpdateNestedResourceTypeFirst": {
            "$ref": "./examples/Skus_CreateOrUpdateNestedResourceTypeFirst.json"
          }
        }
      },
      "delete": {
        "operationId": "Skus_DeleteNestedResourceTypeFirst",
        "tags": [
          "Skus"
        ],
        "description": "Deletes a resource type sku.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "the provider namespace",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "The resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nestedResourceTypeFirst",
            "in": "path",
            "description": "The first child resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sku",
            "in": "path",
            "description": "The SKU.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Skus_DeleteNestedResourceTypeFirst": {
            "$ref": "./examples/Skus_DeleteNestedResourceTypeFirst.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}/skus": {
      "get": {
        "operationId": "Skus_ListByResourceTypeRegistrations",
        "tags": [
          "SkuResources"
        ],
        "description": "Gets the list of skus for the given resource type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "the provider namespace",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "The resource type.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SkuResourceArrayResponseWithContinuation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Skus_ListByResourceTypeRegistrations": {
            "$ref": "./examples/Skus_ListByResourceTypeRegistrations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}/skus/{sku}": {
      "get": {
        "operationId": "Skus_Get",
        "tags": [
          "SkuResources"
        ],
        "description": "Gets the sku details for the given resource type and sku name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "the provider namespace",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "The resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sku",
            "in": "path",
            "description": "The SKU.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SkuResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Skus_Get": {
            "$ref": "./examples/Skus_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Skus_CreateOrUpdate",
        "tags": [
          "SkuResources"
        ],
        "description": "Creates or updates the resource type skus in the given resource type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "the provider namespace",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "The resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sku",
            "in": "path",
            "description": "The SKU.",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The required body parameters supplied to the resource sku operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SkuResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SkuResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SkuResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Skus_CreateOrUpdate": {
            "$ref": "./examples/Skus_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "Skus_Delete",
        "tags": [
          "SkuResources"
        ],
        "description": "Deletes a resource type sku.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "the provider namespace",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "The resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sku",
            "in": "path",
            "description": "The SKU.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Skus_Delete": {
            "$ref": "./examples/Skus_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ProviderHub/providerMonitorSettings": {
      "get": {
        "operationId": "ProviderMonitorSettings_ListByResourceGroup",
        "tags": [
          "ProviderMonitorSettings"
        ],
        "description": "Gets the list of the provider monitor settings in the resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProviderMonitorSettingArrayResponseWithContinuation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProviderMonitorSettings_ListByResourceGroup": {
            "$ref": "./examples/ProviderMonitorSettings_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ProviderHub/providerMonitorSettings/{providerMonitorSettingName}": {
      "get": {
        "operationId": "ProviderMonitorSettings_Get",
        "tags": [
          "ProviderMonitorSettings"
        ],
        "description": "Gets the provider monitor setting details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "providerMonitorSettingName",
            "in": "path",
            "description": "The name of the provider monitor setting.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProviderMonitorSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProviderMonitorSettings_Get": {
            "$ref": "./examples/ProviderMonitorSettings_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ProviderMonitorSettings_Create",
        "tags": [
          "ProviderMonitorSettings"
        ],
        "description": "Creates the provider monitor setting.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "providerMonitorSettingName",
            "in": "path",
            "description": "The name of the provider monitor setting.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The provider monitor setting properties supplied to the create operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProviderMonitorSetting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ProviderMonitorSetting' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ProviderMonitorSetting"
            }
          },
          "201": {
            "description": "Resource 'ProviderMonitorSetting' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ProviderMonitorSetting"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProviderMonitorSettings_Create": {
            "$ref": "./examples/ProviderMonitorSettings_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/ProviderMonitorSetting"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ProviderMonitorSettings_Update",
        "tags": [
          "ProviderMonitorSettings"
        ],
        "description": "Updates the provider monitor setting properties as specified in the request body. Update fails if the specified provider monitor setting does not already exist.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "providerMonitorSettingName",
            "in": "path",
            "description": "The name of the provider monitor setting.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProviderMonitorSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProviderMonitorSettings_Update": {
            "$ref": "./examples/ProviderMonitorSettings_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "ProviderMonitorSettings_Delete",
        "tags": [
          "ProviderMonitorSettings"
        ],
        "description": "Deletes a provider monitor setting.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "providerMonitorSettingName",
            "in": "path",
            "description": "The name of the provider monitor setting.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProviderMonitorSettings_Delete": {
            "$ref": "./examples/ProviderMonitorSettings_Delete.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AdditionalAuthorization": {
      "type": "object",
      "properties": {
        "applicationId": {
          "type": "string"
        },
        "roleDefinitionId": {
          "type": "string"
        }
      }
    },
    "AdditionalOptions": {
      "type": "string",
      "description": "The additional options.",
      "enum": [
        "ProtectedAsyncOperationPolling",
        "ProtectedAsyncOperationPollingAuditOnly"
      ],
      "x-ms-enum": {
        "name": "AdditionalOptions",
        "modelAsString": true,
        "values": [
          {
            "name": "ProtectedAsyncOperationPolling",
            "value": "ProtectedAsyncOperationPolling"
          },
          {
            "name": "ProtectedAsyncOperationPollingAuditOnly",
            "value": "ProtectedAsyncOperationPollingAuditOnly"
          }
        ]
      }
    },
    "AdditionalOptionsAsyncOperation": {
      "type": "string",
      "description": "The additional options.",
      "enum": [
        "ProtectedAsyncOperationPolling",
        "ProtectedAsyncOperationPollingAuditOnly"
      ],
      "x-ms-enum": {
        "name": "AdditionalOptionsAsyncOperation",
        "modelAsString": true,
        "values": [
          {
            "name": "ProtectedAsyncOperationPolling",
            "value": "ProtectedAsyncOperationPolling"
          },
          {
            "name": "ProtectedAsyncOperationPollingAuditOnly",
            "value": "ProtectedAsyncOperationPollingAuditOnly"
          }
        ]
      }
    },
    "AdditionalOptionsResourceTypeRegistration": {
      "type": "string",
      "description": "The additional options.",
      "enum": [
        "ProtectedAsyncOperationPolling",
        "ProtectedAsyncOperationPollingAuditOnly"
      ],
      "x-ms-enum": {
        "name": "AdditionalOptionsResourceTypeRegistration",
        "modelAsString": true,
        "values": [
          {
            "name": "ProtectedAsyncOperationPolling",
            "value": "ProtectedAsyncOperationPolling"
          },
          {
            "name": "ProtectedAsyncOperationPollingAuditOnly",
            "value": "ProtectedAsyncOperationPollingAuditOnly"
          }
        ]
      }
    },
    "AllowedResourceName": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Resource name."
        },
        "getActionVerb": {
          "type": "string",
          "description": "Get action verb."
        }
      }
    },
    "AllowedUnauthorizedActionsExtension": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "description": "The action."
        },
        "intent": {
          "$ref": "#/definitions/Intent",
          "description": "The intent."
        }
      }
    },
    "ApiProfile": {
      "type": "object",
      "properties": {
        "profileVersion": {
          "type": "string",
          "description": "Profile version."
        },
        "apiVersion": {
          "type": "string",
          "description": "Api version."
        }
      }
    },
    "ApplicationDataAuthorization": {
      "type": "object",
      "properties": {
        "role": {
          "$ref": "#/definitions/Role",
          "description": "The ownership role the application has on the resource types. The service owner role gives the application owner permissions. The limited owner role gives elevated permissions but does not allow all the permissions of a service owner, such as read/write on internal metadata."
        },
        "resourceTypes": {
          "type": "array",
          "description": "The resource types from the defined resource types in the provider namespace that the application can access. If no resource types are specified and the role is service owner, the default is * which is all resource types",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "role"
      ]
    },
    "ApplicationProviderAuthorization": {
      "type": "object",
      "properties": {
        "roleDefinitionId": {
          "type": "string",
          "description": "The role definition ID for the application."
        },
        "managedByRoleDefinitionId": {
          "type": "string",
          "description": "The managed by role definition ID for the application."
        }
      }
    },
    "AsyncOperationPollingRules": {
      "type": "object",
      "properties": {
        "authorizationActions": {
          "type": "array",
          "description": "The authorization actions.",
          "items": {
            "type": "string"
          }
        },
        "additionalOptions": {
          "$ref": "#/definitions/AdditionalOptionsAsyncOperation",
          "description": "The additional options."
        }
      }
    },
    "AsyncTimeoutRule": {
      "type": "object",
      "properties": {
        "actionName": {
          "type": "string"
        },
        "timeout": {
          "type": "string",
          "description": "This is a TimeSpan property"
        }
      }
    },
    "AuthenticationScheme": {
      "type": "string",
      "description": "The authentication scheme.",
      "enum": [
        "PoP",
        "Bearer"
      ],
      "x-ms-enum": {
        "name": "AuthenticationScheme",
        "modelAsString": true,
        "values": [
          {
            "name": "PoP",
            "value": "PoP"
          },
          {
            "name": "Bearer",
            "value": "Bearer"
          }
        ]
      }
    },
    "AuthorizationActionMapping": {
      "type": "object",
      "properties": {
        "original": {
          "type": "string",
          "description": "The original action name."
        },
        "desired": {
          "type": "string",
          "description": "The desired action name."
        }
      }
    },
    "AuthorizedApplication": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AuthorizedApplicationProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AuthorizedApplicationArrayResponseWithContinuation": {
      "type": "object",
      "description": "Paged collection of AuthorizedApplication items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AuthorizedApplication items on this page",
          "items": {
            "$ref": "#/definitions/AuthorizedApplication"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AuthorizedApplicationProperties": {
      "type": "object",
      "properties": {
        "providerAuthorization": {
          "$ref": "#/definitions/ApplicationProviderAuthorization"
        },
        "dataAuthorizations": {
          "type": "array",
          "description": "The authorizations that determine the level of data access permissions on the specified resource types.",
          "items": {
            "$ref": "#/definitions/ApplicationDataAuthorization"
          },
          "x-ms-identifiers": [
            "role"
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        }
      }
    },
    "AvailabilityZonePolicy": {
      "type": "string",
      "enum": [
        "NotSpecified",
        "SingleZoned",
        "MultiZoned"
      ],
      "x-ms-enum": {
        "name": "AvailabilityZonePolicy",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "SingleZoned",
            "value": "SingleZoned"
          },
          {
            "name": "MultiZoned",
            "value": "MultiZoned"
          }
        ]
      }
    },
    "AvailableCheckInManifestEnvironment": {
      "type": "string",
      "description": "The environment type.",
      "enum": [
        "NotSpecified",
        "Canary",
        "Prod",
        "All",
        "Mooncake",
        "Fairfax"
      ],
      "x-ms-enum": {
        "name": "AvailableCheckInManifestEnvironment",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "Canary",
            "value": "Canary"
          },
          {
            "name": "Prod",
            "value": "Prod"
          },
          {
            "name": "All",
            "value": "All"
          },
          {
            "name": "Mooncake",
            "value": "Mooncake"
          },
          {
            "name": "Fairfax",
            "value": "Fairfax"
          }
        ]
      }
    },
    "BlockActionVerb": {
      "type": "string",
      "description": "The action verb that will be blocked when the resource group is locked during move.",
      "enum": [
        "NotSpecified",
        "Read",
        "Write",
        "Action",
        "Delete",
        "Unrecognized"
      ],
      "x-ms-enum": {
        "name": "BlockActionVerb",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "Read",
            "value": "Read"
          },
          {
            "name": "Write",
            "value": "Write"
          },
          {
            "name": "Action",
            "value": "Action"
          },
          {
            "name": "Delete",
            "value": "Delete"
          },
          {
            "name": "Unrecognized",
            "value": "Unrecognized"
          }
        ]
      }
    },
    "CanaryTrafficRegionRolloutConfiguration": {
      "type": "object",
      "properties": {
        "skipRegions": {
          "type": "array",
          "description": "The skip regions.",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "description": "The regions.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CapacityPolicy": {
      "type": "string",
      "description": "Capacity policy.",
      "enum": [
        "Default",
        "Restricted"
      ],
      "x-ms-enum": {
        "name": "CapacityPolicy",
        "modelAsString": true,
        "values": [
          {
            "name": "Default",
            "value": "Default"
          },
          {
            "name": "Restricted",
            "value": "Restricted"
          }
        ]
      }
    },
    "CheckNameAvailabilitySpecifications": {
      "type": "object",
      "properties": {
        "enableDefaultValidation": {
          "type": "boolean",
          "description": "Whether default validation is enabled."
        },
        "resourceTypesWithCustomValidation": {
          "type": "array",
          "description": "The resource types with custom validation.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CheckinManifestInfo": {
      "type": "object",
      "properties": {
        "isCheckedIn": {
          "type": "boolean",
          "description": "Whether the manifest is checked in."
        },
        "statusMessage": {
          "type": "string",
          "description": "The status message."
        },
        "pullRequest": {
          "type": "string",
          "description": "The pull request."
        },
        "commitId": {
          "type": "string",
          "description": "The commit id."
        }
      },
      "required": [
        "isCheckedIn",
        "statusMessage"
      ]
    },
    "CheckinManifestParams": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string",
          "description": "The environment supplied to the checkin manifest operation."
        },
        "baselineArmManifestLocation": {
          "type": "string",
          "description": "The baseline ARM manifest location supplied to the checkin manifest operation."
        }
      },
      "required": [
        "environment",
        "baselineArmManifestLocation"
      ]
    },
    "CommonApiVersionsMergeMode": {
      "type": "string",
      "description": "Common api versions merge mode.",
      "enum": [
        "Merge",
        "Overwrite"
      ],
      "x-ms-enum": {
        "name": "CommonApiVersionsMergeMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Merge",
            "value": "Merge"
          },
          {
            "name": "Overwrite",
            "value": "Overwrite"
          }
        ]
      }
    },
    "CrossTenantTokenValidation": {
      "type": "string",
      "description": "The cross tenant token validation.",
      "enum": [
        "EnsureSecureValidation",
        "PassthroughInsecureToken"
      ],
      "x-ms-enum": {
        "name": "CrossTenantTokenValidation",
        "modelAsString": true,
        "values": [
          {
            "name": "EnsureSecureValidation",
            "value": "EnsureSecureValidation"
          },
          {
            "name": "PassthroughInsecureToken",
            "value": "PassthroughInsecureToken"
          }
        ]
      }
    },
    "CustomRollout": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CustomRolloutProperties",
          "description": "Properties of the rollout."
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "CustomRolloutArrayResponseWithContinuation": {
      "type": "object",
      "description": "Paged collection of CustomRollout items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CustomRollout items on this page",
          "items": {
            "$ref": "#/definitions/CustomRollout"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CustomRolloutProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioned state of the resource.",
          "readOnly": true
        },
        "specification": {
          "$ref": "#/definitions/CustomRolloutPropertiesSpecification",
          "description": "The specification."
        },
        "status": {
          "$ref": "#/definitions/CustomRolloutPropertiesStatus",
          "description": "The status."
        }
      },
      "required": [
        "specification"
      ]
    },
    "CustomRolloutPropertiesSpecification": {
      "type": "object",
      "description": "The specification.",
      "allOf": [
        {
          "$ref": "#/definitions/CustomRolloutSpecification"
        }
      ]
    },
    "CustomRolloutPropertiesStatus": {
      "type": "object",
      "description": "The status.",
      "allOf": [
        {
          "$ref": "#/definitions/CustomRolloutStatus"
        }
      ]
    },
    "CustomRolloutSpecification": {
      "type": "object",
      "properties": {
        "autoProvisionConfig": {
          "$ref": "#/definitions/CustomRolloutSpecificationAutoProvisionConfig",
          "description": "The auto provisioning configuration."
        },
        "canary": {
          "$ref": "#/definitions/CustomRolloutSpecificationCanary",
          "description": "The canary region configuration."
        },
        "releaseScopes": {
          "type": "array",
          "description": "The list of ARM regions scoped for the release.",
          "items": {
            "type": "string"
          }
        },
        "refreshSubscriptionRegistration": {
          "type": "boolean",
          "description": "Whether refreshing subscription registration is enabled or disabled."
        },
        "skipReleaseScopeValidation": {
          "type": "boolean",
          "description": "Whether release scope validation should be skipped."
        },
        "providerRegistration": {
          "$ref": "#/definitions/CustomRolloutSpecificationProviderRegistration",
          "description": "The provider registration."
        },
        "resourceTypeRegistrations": {
          "type": "array",
          "description": "The resource type registrations.",
          "items": {
            "$ref": "#/definitions/ResourceTypeRegistration"
          }
        }
      }
    },
    "CustomRolloutSpecificationAutoProvisionConfig": {
      "type": "object",
      "description": "The auto provisioning configuration.",
      "properties": {
        "storage": {
          "type": "boolean"
        },
        "resourceGraph": {
          "type": "boolean"
        }
      }
    },
    "CustomRolloutSpecificationCanary": {
      "type": "object",
      "description": "The canary region configuration.",
      "allOf": [
        {
          "$ref": "#/definitions/TrafficRegions"
        }
      ]
    },
    "CustomRolloutSpecificationProviderRegistration": {
      "type": "object",
      "description": "The provider registration.",
      "allOf": [
        {
          "$ref": "#/definitions/ProviderRegistration"
        }
      ]
    },
    "CustomRolloutStatus": {
      "type": "object",
      "properties": {
        "completedRegions": {
          "type": "array",
          "description": "The completed regions.",
          "items": {
            "type": "string"
          }
        },
        "failedOrSkippedRegions": {
          "type": "object",
          "description": "The failed or skipped regions.",
          "additionalProperties": {
            "$ref": "#/definitions/ExtendedErrorInfo"
          }
        },
        "manifestCheckinStatus": {
          "$ref": "#/definitions/CustomRolloutStatusManifestCheckinStatus",
          "description": "The manifest checkin status."
        }
      }
    },
    "CustomRolloutStatusManifestCheckinStatus": {
      "type": "object",
      "description": "The manifest checkin status.",
      "allOf": [
        {
          "$ref": "#/definitions/CheckinManifestInfo"
        }
      ]
    },
    "DataBoundary": {
      "type": "string",
      "description": "The data boundary.",
      "enum": [
        "NotDefined",
        "Global",
        "EU",
        "US"
      ],
      "x-ms-enum": {
        "name": "DataBoundary",
        "modelAsString": true,
        "values": [
          {
            "name": "NotDefined",
            "value": "NotDefined"
          },
          {
            "name": "Global",
            "value": "Global"
          },
          {
            "name": "EU",
            "value": "EU"
          },
          {
            "name": "US",
            "value": "US"
          }
        ]
      }
    },
    "DefaultRollout": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DefaultRolloutProperties",
          "description": "Properties of the rollout."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DefaultRolloutArrayResponseWithContinuation": {
      "type": "object",
      "description": "Paged collection of DefaultRollout items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DefaultRollout items on this page",
          "items": {
            "$ref": "#/definitions/DefaultRollout"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DefaultRolloutProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioned state of the resource.",
          "readOnly": true
        },
        "specification": {
          "$ref": "#/definitions/DefaultRolloutPropertiesSpecification",
          "description": "The default rollout specification."
        },
        "status": {
          "$ref": "#/definitions/DefaultRolloutPropertiesStatus",
          "description": "The default rollout status."
        }
      }
    },
    "DefaultRolloutPropertiesSpecification": {
      "type": "object",
      "description": "The default rollout specification.",
      "allOf": [
        {
          "$ref": "#/definitions/DefaultRolloutSpecification"
        }
      ]
    },
    "DefaultRolloutPropertiesStatus": {
      "type": "object",
      "description": "The default rollout status.",
      "allOf": [
        {
          "$ref": "#/definitions/DefaultRolloutStatus"
        }
      ]
    },
    "DefaultRolloutSpecification": {
      "type": "object",
      "properties": {
        "expeditedRollout": {
          "$ref": "#/definitions/DefaultRolloutSpecificationExpeditedRollout",
          "description": "The expedited rollout definition."
        },
        "canary": {
          "$ref": "#/definitions/DefaultRolloutSpecificationCanary",
          "description": "The canary traffic region configuration."
        },
        "lowTraffic": {
          "$ref": "#/definitions/DefaultRolloutSpecificationLowTraffic",
          "description": "The low traffic region configuration."
        },
        "mediumTraffic": {
          "$ref": "#/definitions/DefaultRolloutSpecificationMediumTraffic",
          "description": "The medium traffic region configuration."
        },
        "highTraffic": {
          "$ref": "#/definitions/DefaultRolloutSpecificationHighTraffic",
          "description": "The high traffic region configuration."
        },
        "restOfTheWorldGroupOne": {
          "$ref": "#/definitions/DefaultRolloutSpecificationRestOfTheWorldGroupOne",
          "description": "The rest of the world group one region configuration."
        },
        "restOfTheWorldGroupTwo": {
          "$ref": "#/definitions/DefaultRolloutSpecificationRestOfTheWorldGroupTwo",
          "description": "The rest of the world group two region configuration."
        },
        "providerRegistration": {
          "$ref": "#/definitions/DefaultRolloutSpecificationProviderRegistration",
          "description": "The provider registration."
        },
        "resourceTypeRegistrations": {
          "type": "array",
          "description": "The resource type registrations.",
          "items": {
            "$ref": "#/definitions/ResourceTypeRegistration"
          }
        },
        "autoProvisionConfig": {
          "$ref": "#/definitions/DefaultRolloutSpecificationAutoProvisionConfig",
          "description": "The auto provisioning config."
        }
      }
    },
    "DefaultRolloutSpecificationAutoProvisionConfig": {
      "type": "object",
      "description": "The auto provisioning config.",
      "properties": {
        "storage": {
          "type": "boolean",
          "description": "Whether auto provisioning for storage is enabled."
        },
        "resourceGraph": {
          "type": "boolean",
          "description": "Whether auto provisioning for resource graph is enabled."
        }
      }
    },
    "DefaultRolloutSpecificationCanary": {
      "type": "object",
      "description": "The canary traffic region configuration.",
      "allOf": [
        {
          "$ref": "#/definitions/CanaryTrafficRegionRolloutConfiguration"
        }
      ]
    },
    "DefaultRolloutSpecificationExpeditedRollout": {
      "type": "object",
      "description": "The expedited rollout definition.",
      "allOf": [
        {
          "$ref": "#/definitions/ExpeditedRolloutDefinition"
        }
      ]
    },
    "DefaultRolloutSpecificationHighTraffic": {
      "type": "object",
      "description": "The high traffic region configuration.",
      "allOf": [
        {
          "$ref": "#/definitions/TrafficRegionRolloutConfiguration"
        }
      ]
    },
    "DefaultRolloutSpecificationLowTraffic": {
      "type": "object",
      "description": "The low traffic region configuration.",
      "allOf": [
        {
          "$ref": "#/definitions/TrafficRegionRolloutConfiguration"
        }
      ]
    },
    "DefaultRolloutSpecificationMediumTraffic": {
      "type": "object",
      "description": "The medium traffic region configuration.",
      "allOf": [
        {
          "$ref": "#/definitions/TrafficRegionRolloutConfiguration"
        }
      ]
    },
    "DefaultRolloutSpecificationProviderRegistration": {
      "type": "object",
      "description": "The provider registration.",
      "allOf": [
        {
          "$ref": "#/definitions/ProviderRegistration"
        }
      ]
    },
    "DefaultRolloutSpecificationRestOfTheWorldGroupOne": {
      "type": "object",
      "description": "The rest of the world group one region configuration.",
      "allOf": [
        {
          "$ref": "#/definitions/TrafficRegionRolloutConfiguration"
        }
      ]
    },
    "DefaultRolloutSpecificationRestOfTheWorldGroupTwo": {
      "type": "object",
      "description": "The rest of the world group two region configuration.",
      "allOf": [
        {
          "$ref": "#/definitions/TrafficRegionRolloutConfiguration"
        }
      ]
    },
    "DefaultRolloutStatus": {
      "type": "object",
      "properties": {
        "nextTrafficRegion": {
          "$ref": "#/definitions/TrafficRegionCategory",
          "description": "The next traffic region."
        },
        "nextTrafficRegionScheduledTime": {
          "type": "string",
          "format": "date-time",
          "description": "The next traffic region scheduled time."
        },
        "subscriptionReregistrationResult": {
          "$ref": "#/definitions/SubscriptionReregistrationResult",
          "description": "The subscription reregistration result."
        },
        "manifestCheckinStatus": {
          "$ref": "#/definitions/DefaultRolloutStatusManifestCheckinStatus",
          "description": "The manifest checkin status."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/RolloutStatusBase"
        }
      ]
    },
    "DefaultRolloutStatusManifestCheckinStatus": {
      "type": "object",
      "description": "The manifest checkin status.",
      "allOf": [
        {
          "$ref": "#/definitions/CheckinManifestInfo"
        }
      ]
    },
    "DeleteDependency": {
      "type": "object",
      "properties": {
        "requiredFeatures": {
          "type": "array",
          "description": "Required features.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "linkedProperty": {
          "type": "string",
          "description": "Linked property."
        },
        "linkedType": {
          "type": "string",
          "description": "Linked type."
        }
      }
    },
    "DstsConfiguration": {
      "type": "object",
      "properties": {
        "serviceName": {
          "type": "string",
          "description": "The service name."
        },
        "serviceDnsName": {
          "type": "string",
          "description": "This is a URI property."
        }
      },
      "required": [
        "serviceName"
      ]
    },
    "EndpointInformation": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string",
          "description": "The endpoint."
        },
        "endpointType": {
          "$ref": "#/definitions/NotificationEndpointType",
          "description": "The endpoint type."
        },
        "schemaVersion": {
          "type": "string",
          "description": "The schema version."
        }
      }
    },
    "EndpointType": {
      "type": "string",
      "description": "The endpoint type.",
      "enum": [
        "NotSpecified",
        "Canary",
        "Production",
        "TestInProduction"
      ],
      "x-ms-enum": {
        "name": "EndpointType",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "Canary",
            "value": "Canary"
          },
          {
            "name": "Production",
            "value": "Production"
          },
          {
            "name": "TestInProduction",
            "value": "TestInProduction"
          }
        ]
      }
    },
    "EndpointTypeResourceType": {
      "type": "string",
      "description": "The endpoint type.",
      "enum": [
        "NotSpecified",
        "Canary",
        "Production",
        "TestInProduction"
      ],
      "x-ms-enum": {
        "name": "EndpointTypeResourceType",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "Canary",
            "value": "Canary"
          },
          {
            "name": "Production",
            "value": "Production"
          },
          {
            "name": "TestInProduction",
            "value": "TestInProduction"
          }
        ]
      }
    },
    "ExpeditedRolloutDefinition": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Indicates whether expedited rollout is enabled/disabled"
        }
      }
    },
    "ExpeditedRolloutIntent": {
      "type": "string",
      "description": "Expedited rollout intent.",
      "enum": [
        "NotSpecified",
        "Hotfix"
      ],
      "x-ms-enum": {
        "name": "ExpeditedRolloutIntent",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "Hotfix",
            "value": "Hotfix"
          }
        ]
      }
    },
    "ExtendedErrorInfo": {
      "type": "object",
      "description": "Error information.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "message": {
          "type": "string",
          "description": "The error message."
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ExtendedErrorInfo"
          },
          "x-ms-identifiers": [
            "code"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The additional error information.",
          "items": {
            "$ref": "#/definitions/TypedErrorInfo"
          },
          "x-ms-identifiers": [
            "type"
          ]
        }
      }
    },
    "ExtendedLocationOptions": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/ExtendedLocationType",
          "description": "The type."
        },
        "supportedPolicy": {
          "$ref": "#/definitions/ResourceTypeExtendedLocationPolicy"
        }
      }
    },
    "ExtendedLocationType": {
      "type": "string",
      "description": "The extended location type.",
      "enum": [
        "NotSpecified",
        "CustomLocation",
        "EdgeZone",
        "ArcZone"
      ],
      "x-ms-enum": {
        "name": "ExtendedLocationType",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "The extended location type is not specified."
          },
          {
            "name": "CustomLocation",
            "value": "CustomLocation",
            "description": "The extended location type is custom location."
          },
          {
            "name": "EdgeZone",
            "value": "EdgeZone",
            "description": "The extended location type is edge zone."
          },
          {
            "name": "ArcZone",
            "value": "ArcZone",
            "description": "The extended location type is arc zone."
          }
        ]
      }
    },
    "ExtensionCategory": {
      "type": "string",
      "enum": [
        "NotSpecified",
        "ResourceCreationValidate",
        "ResourceCreationBegin",
        "ResourceCreationCompleted",
        "ResourceReadValidate",
        "ResourceReadBegin",
        "ResourcePatchValidate",
        "ResourcePatchCompleted",
        "ResourceDeletionValidate",
        "ResourceDeletionBegin",
        "ResourceDeletionCompleted",
        "ResourcePostAction",
        "SubscriptionLifecycleNotification",
        "ResourcePatchBegin",
        "ResourceMoveBegin",
        "ResourceMoveCompleted",
        "BestMatchOperationBegin",
        "SubscriptionLifecycleNotificationDeletion"
      ],
      "x-ms-enum": {
        "name": "ExtensionCategory",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "ResourceCreationValidate",
            "value": "ResourceCreationValidate"
          },
          {
            "name": "ResourceCreationBegin",
            "value": "ResourceCreationBegin"
          },
          {
            "name": "ResourceCreationCompleted",
            "value": "ResourceCreationCompleted"
          },
          {
            "name": "ResourceReadValidate",
            "value": "ResourceReadValidate"
          },
          {
            "name": "ResourceReadBegin",
            "value": "ResourceReadBegin"
          },
          {
            "name": "ResourcePatchValidate",
            "value": "ResourcePatchValidate"
          },
          {
            "name": "ResourcePatchCompleted",
            "value": "ResourcePatchCompleted"
          },
          {
            "name": "ResourceDeletionValidate",
            "value": "ResourceDeletionValidate"
          },
          {
            "name": "ResourceDeletionBegin",
            "value": "ResourceDeletionBegin"
          },
          {
            "name": "ResourceDeletionCompleted",
            "value": "ResourceDeletionCompleted"
          },
          {
            "name": "ResourcePostAction",
            "value": "ResourcePostAction"
          },
          {
            "name": "SubscriptionLifecycleNotification",
            "value": "SubscriptionLifecycleNotification"
          },
          {
            "name": "ResourcePatchBegin",
            "value": "ResourcePatchBegin"
          },
          {
            "name": "ResourceMoveBegin",
            "value": "ResourceMoveBegin"
          },
          {
            "name": "ResourceMoveCompleted",
            "value": "ResourceMoveCompleted"
          },
          {
            "name": "BestMatchOperationBegin",
            "value": "BestMatchOperationBegin"
          },
          {
            "name": "SubscriptionLifecycleNotificationDeletion",
            "value": "SubscriptionLifecycleNotificationDeletion"
          }
        ]
      }
    },
    "ExtensionOptionType": {
      "type": "string",
      "enum": [
        "NotSpecified",
        "DoNotMergeExistingReadOnlyAndSecretProperties",
        "IncludeInternalMetadata"
      ],
      "x-ms-enum": {
        "name": "ExtensionOptionType",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "DoNotMergeExistingReadOnlyAndSecretProperties",
            "value": "DoNotMergeExistingReadOnlyAndSecretProperties"
          },
          {
            "name": "IncludeInternalMetadata",
            "value": "IncludeInternalMetadata"
          }
        ]
      }
    },
    "ExtensionOptions": {
      "type": "object",
      "properties": {
        "request": {
          "type": "array",
          "description": "The request.",
          "items": {
            "$ref": "#/definitions/ExtensionOptionType"
          }
        },
        "response": {
          "type": "array",
          "description": "The response.",
          "items": {
            "$ref": "#/definitions/ExtensionOptionType"
          }
        }
      }
    },
    "FanoutLinkedNotificationRule": {
      "type": "object",
      "properties": {
        "tokenAuthConfiguration": {
          "$ref": "#/definitions/TokenAuthConfiguration",
          "description": "The token auth configuration."
        },
        "actions": {
          "type": "array",
          "description": "The actions.",
          "items": {
            "type": "string"
          }
        },
        "endpoints": {
          "type": "array",
          "description": "The endpoints.",
          "items": {
            "$ref": "#/definitions/ResourceProviderEndpoint"
          },
          "x-ms-identifiers": []
        },
        "dstsConfiguration": {
          "$ref": "#/definitions/FanoutLinkedNotificationRuleDstsConfiguration",
          "description": "The dsts configuration."
        }
      }
    },
    "FanoutLinkedNotificationRuleDstsConfiguration": {
      "type": "object",
      "description": "The dsts configuration.",
      "allOf": [
        {
          "$ref": "#/definitions/DstsConfiguration"
        }
      ]
    },
    "FeaturesPolicy": {
      "type": "string",
      "description": "The required feature policy.",
      "enum": [
        "Any",
        "All"
      ],
      "x-ms-enum": {
        "name": "FeaturesPolicy",
        "modelAsString": true,
        "values": [
          {
            "name": "Any",
            "value": "Any"
          },
          {
            "name": "All",
            "value": "All"
          }
        ]
      }
    },
    "FeaturesRule": {
      "type": "object",
      "properties": {
        "requiredFeaturesPolicy": {
          "$ref": "#/definitions/FeaturesPolicy",
          "description": "The required feature policy."
        }
      },
      "required": [
        "requiredFeaturesPolicy"
      ]
    },
    "FilterOption": {
      "type": "string",
      "description": "Filter option.",
      "enum": [
        "NotSpecified",
        "EnableSubscriptionFilterOnTenant"
      ],
      "x-ms-enum": {
        "name": "FilterOption",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "EnableSubscriptionFilterOnTenant",
            "value": "EnableSubscriptionFilterOnTenant"
          }
        ]
      }
    },
    "FilterRule": {
      "type": "object",
      "properties": {
        "filterQuery": {
          "type": "string",
          "description": "The filter query."
        },
        "endpointInformation": {
          "type": "array",
          "description": "The endpoint information.",
          "items": {
            "$ref": "#/definitions/EndpointInformation"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "FrontdoorRequestMode": {
      "type": "string",
      "description": "The frontdoor request mode.",
      "enum": [
        "NotSpecified",
        "UseManifest"
      ],
      "x-ms-enum": {
        "name": "FrontdoorRequestMode",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "UseManifest",
            "value": "UseManifest"
          }
        ]
      }
    },
    "FrontloadPayload": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FrontloadPayloadProperties",
          "description": "Properties of the frontload payload."
        }
      },
      "required": [
        "properties"
      ]
    },
    "FrontloadPayloadProperties": {
      "type": "object",
      "properties": {
        "operationType": {
          "type": "string",
          "description": "The operation type."
        },
        "providerNamespace": {
          "type": "string",
          "description": "The provider namespace."
        },
        "frontloadLocation": {
          "type": "string",
          "description": "The frontload location."
        },
        "copyFromLocation": {
          "type": "string",
          "description": "The copy from location."
        },
        "environmentType": {
          "$ref": "#/definitions/AvailableCheckInManifestEnvironment",
          "description": "The environment type."
        },
        "serviceFeatureFlag": {
          "$ref": "#/definitions/ServiceFeatureFlagAction",
          "description": "The service feature flag."
        },
        "includeResourceTypes": {
          "type": "array",
          "description": "The resource types to include.",
          "items": {
            "type": "string"
          }
        },
        "excludeResourceTypes": {
          "type": "array",
          "description": "The resource types to exclude.",
          "items": {
            "type": "string"
          }
        },
        "overrideManifestLevelFields": {
          "$ref": "#/definitions/FrontloadPayloadPropertiesOverrideManifestLevelFields",
          "description": "The manifest level fields to override."
        },
        "overrideEndpointLevelFields": {
          "$ref": "#/definitions/FrontloadPayloadPropertiesOverrideEndpointLevelFields",
          "description": "The endpoint level fields to override."
        },
        "ignoreFields": {
          "type": "array",
          "description": "The fields to ignore.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "operationType",
        "providerNamespace",
        "frontloadLocation",
        "copyFromLocation",
        "environmentType",
        "serviceFeatureFlag",
        "includeResourceTypes",
        "excludeResourceTypes",
        "overrideManifestLevelFields",
        "overrideEndpointLevelFields",
        "ignoreFields"
      ]
    },
    "FrontloadPayloadPropertiesOverrideEndpointLevelFields": {
      "type": "object",
      "description": "The endpoint level fields to override.",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceTypeEndpointBase"
        }
      ]
    },
    "FrontloadPayloadPropertiesOverrideManifestLevelFields": {
      "type": "object",
      "description": "The manifest level fields to override.",
      "allOf": [
        {
          "$ref": "#/definitions/ManifestLevelPropertyBag"
        }
      ]
    },
    "IdentityManagement": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/IdentityManagementTypes",
          "description": "The type."
        }
      }
    },
    "IdentityManagementProperties": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/IdentityManagementTypes",
          "description": "The type."
        },
        "applicationId": {
          "type": "string",
          "description": "The application id."
        },
        "applicationIds": {
          "type": "array",
          "description": "The application ids.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "delegationAppIds": {
          "type": "array",
          "description": "The delegation app ids.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "IdentityManagementTypes": {
      "type": "string",
      "description": "The type.",
      "enum": [
        "NotSpecified",
        "SystemAssigned",
        "UserAssigned",
        "Actor",
        "DelegatedResourceIdentity"
      ],
      "x-ms-enum": {
        "name": "IdentityManagementTypes",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "SystemAssigned",
            "value": "SystemAssigned"
          },
          {
            "name": "UserAssigned",
            "value": "UserAssigned"
          },
          {
            "name": "Actor",
            "value": "Actor"
          },
          {
            "name": "DelegatedResourceIdentity",
            "value": "DelegatedResourceIdentity"
          }
        ]
      }
    },
    "Intent": {
      "type": "string",
      "description": "The intent.",
      "enum": [
        "NOT_SPECIFIED",
        "LOW_PRIVILEGE",
        "DEFERRED_ACCESS_CHECK",
        "RP_CONTRACT"
      ],
      "x-ms-enum": {
        "name": "Intent",
        "modelAsString": true,
        "values": [
          {
            "name": "NOT_SPECIFIED",
            "value": "NOT_SPECIFIED",
            "description": "Default value."
          },
          {
            "name": "LOW_PRIVILEGE",
            "value": "LOW_PRIVILEGE",
            "description": "Data is not sensitive and ok to access."
          },
          {
            "name": "DEFERRED_ACCESS_CHECK",
            "value": "DEFERRED_ACCESS_CHECK",
            "description": "Used for RP's using a custom authorization check outside of ARM."
          },
          {
            "name": "RP_CONTRACT",
            "value": "RP_CONTRACT",
            "description": "RP contract allows certain operations to be unauthorized action."
          }
        ]
      }
    },
    "LegacyDisallowedCondition": {
      "type": "object",
      "properties": {
        "disallowedLegacyOperations": {
          "type": "array",
          "description": "The disallowed legacy operations.",
          "items": {
            "$ref": "#/definitions/LegacyOperation"
          },
          "x-ms-identifiers": []
        },
        "feature": {
          "type": "string",
          "description": "Feature string."
        }
      }
    },
    "LegacyOperation": {
      "type": "string",
      "enum": [
        "NotSpecified",
        "Create",
        "Delete",
        "Waiting",
        "AzureAsyncOperationWaiting",
        "ResourceCacheWaiting",
        "Action",
        "Read",
        "EvaluateDeploymentOutput",
        "DeploymentCleanup"
      ],
      "x-ms-enum": {
        "name": "LegacyOperation",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "Create",
            "value": "Create"
          },
          {
            "name": "Delete",
            "value": "Delete"
          },
          {
            "name": "Waiting",
            "value": "Waiting"
          },
          {
            "name": "AzureAsyncOperationWaiting",
            "value": "AzureAsyncOperationWaiting"
          },
          {
            "name": "ResourceCacheWaiting",
            "value": "ResourceCacheWaiting"
          },
          {
            "name": "Action",
            "value": "Action"
          },
          {
            "name": "Read",
            "value": "Read"
          },
          {
            "name": "EvaluateDeploymentOutput",
            "value": "EvaluateDeploymentOutput"
          },
          {
            "name": "DeploymentCleanup",
            "value": "DeploymentCleanup"
          }
        ]
      }
    },
    "LightHouseAuthorization": {
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal id."
        },
        "roleDefinitionId": {
          "type": "string",
          "description": "The role definition id."
        }
      },
      "required": [
        "principalId",
        "roleDefinitionId"
      ]
    },
    "LinkedAccessCheck": {
      "type": "object",
      "properties": {
        "actionName": {
          "type": "string",
          "description": "The action name."
        },
        "linkedProperty": {
          "type": "string",
          "description": "The linked property."
        },
        "linkedAction": {
          "type": "string",
          "description": "The linked action."
        },
        "linkedActionVerb": {
          "type": "string",
          "description": "The linked action verb."
        },
        "linkedType": {
          "type": "string",
          "description": "The linked type."
        }
      }
    },
    "LinkedAction": {
      "type": "string",
      "description": "The linked action.",
      "enum": [
        "NotSpecified",
        "Blocked",
        "Validate",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "LinkedAction",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "Blocked",
            "value": "Blocked"
          },
          {
            "name": "Validate",
            "value": "Validate"
          },
          {
            "name": "Enabled",
            "value": "Enabled"
          }
        ]
      }
    },
    "LinkedNotificationRule": {
      "type": "object",
      "properties": {
        "actions": {
          "type": "array",
          "description": "The actions.",
          "items": {
            "type": "string"
          }
        },
        "actionsOnFailedOperation": {
          "type": "array",
          "description": "The actions on failed operation.",
          "items": {
            "type": "string"
          }
        },
        "fastPathActions": {
          "type": "array",
          "description": "The fast path actions.",
          "items": {
            "type": "string"
          }
        },
        "fastPathActionsOnFailedOperation": {
          "type": "array",
          "description": "The fast path action on failed operation.",
          "items": {
            "type": "string"
          }
        },
        "linkedNotificationTimeout": {
          "type": "string",
          "format": "duration",
          "description": "This is a TimeSpan property."
        }
      }
    },
    "LinkedOperation": {
      "type": "string",
      "description": "The linked operation.",
      "enum": [
        "None",
        "CrossResourceGroupResourceMove",
        "CrossSubscriptionResourceMove"
      ],
      "x-ms-enum": {
        "name": "LinkedOperation",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "CrossResourceGroupResourceMove",
            "value": "CrossResourceGroupResourceMove"
          },
          {
            "name": "CrossSubscriptionResourceMove",
            "value": "CrossSubscriptionResourceMove"
          }
        ]
      }
    },
    "LinkedOperationRule": {
      "type": "object",
      "properties": {
        "linkedOperation": {
          "$ref": "#/definitions/LinkedOperation",
          "description": "The linked operation."
        },
        "linkedAction": {
          "$ref": "#/definitions/LinkedAction",
          "description": "The linked action."
        },
        "dependsOnTypes": {
          "type": "array",
          "description": "Depends on types.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "linkedOperation",
        "linkedAction"
      ]
    },
    "LocalizedOperationDefinition": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the operation."
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Indicates whether the operation applies to data-plane."
        },
        "origin": {
          "$ref": "#/definitions/OperationOrigins",
          "description": "The origin."
        },
        "display": {
          "$ref": "#/definitions/LocalizedOperationDefinitionDisplay",
          "description": "Display information of the operation."
        },
        "actionType": {
          "$ref": "#/definitions/OperationActionType",
          "description": "The action type."
        }
      },
      "required": [
        "name",
        "display"
      ]
    },
    "LocalizedOperationDefinitionDisplay": {
      "type": "object",
      "description": "Display information of the operation.",
      "allOf": [
        {
          "$ref": "#/definitions/LocalizedOperationDisplayDefinition"
        }
      ]
    },
    "LocalizedOperationDisplayDefinition": {
      "type": "object",
      "properties": {
        "default": {
          "$ref": "#/definitions/LocalizedOperationDisplayDefinitionDefault",
          "description": "Display information of the operation."
        },
        "en": {
          "$ref": "#/definitions/LocalizedOperationDisplayDefinitionEn",
          "description": "Display information of the operation for en locale."
        },
        "cs": {
          "$ref": "#/definitions/LocalizedOperationDisplayDefinitionCs",
          "description": "Display information of the operation for cs locale."
        },
        "de": {
          "$ref": "#/definitions/LocalizedOperationDisplayDefinitionDe",
          "description": "Display information of the operation for de locale."
        },
        "es": {
          "$ref": "#/definitions/LocalizedOperationDisplayDefinitionEs",
          "description": "Display information of the operation for es locale."
        },
        "fr": {
          "$ref": "#/definitions/LocalizedOperationDisplayDefinitionFr",
          "description": "Display information of the operation for fr locale."
        },
        "hu": {
          "$ref": "#/definitions/LocalizedOperationDisplayDefinitionHu",
          "description": "Display information of the operation for hu locale."
        },
        "it": {
          "$ref": "#/definitions/LocalizedOperationDisplayDefinitionIt",
          "description": "Display information of the operation for it locale."
        },
        "ja": {
          "$ref": "#/definitions/LocalizedOperationDisplayDefinitionJa",
          "description": "Display information of the operation for ja locale."
        },
        "ko": {
          "$ref": "#/definitions/LocalizedOperationDisplayDefinitionKo",
          "description": "Display information of the operation for ko locale."
        },
        "nl": {
          "$ref": "#/definitions/LocalizedOperationDisplayDefinitionNl",
          "description": "Display information of the operation for nl locale."
        },
        "pl": {
          "$ref": "#/definitions/LocalizedOperationDisplayDefinitionPl",
          "description": "Display information of the operation for pl locale."
        },
        "ptBR": {
          "$ref": "#/definitions/LocalizedOperationDisplayDefinitionPtBR",
          "description": "Display information of the operation for pt-BR locale."
        },
        "ptPT": {
          "$ref": "#/definitions/LocalizedOperationDisplayDefinitionPtPT",
          "description": "Display information of the operation for pt-PT locale."
        },
        "ru": {
          "$ref": "#/definitions/LocalizedOperationDisplayDefinitionRu",
          "description": "Display information of the operation for ru locale."
        },
        "sv": {
          "$ref": "#/definitions/LocalizedOperationDisplayDefinitionSv",
          "description": "Display information of the operation for sv locale."
        },
        "zhHans": {
          "$ref": "#/definitions/LocalizedOperationDisplayDefinitionZhHans",
          "description": "Display information of the operation for zh-Hans locale."
        },
        "zhHant": {
          "$ref": "#/definitions/LocalizedOperationDisplayDefinitionZhHant",
          "description": "Display information of the operation for zh-Hant locale."
        }
      },
      "required": [
        "default"
      ]
    },
    "LocalizedOperationDisplayDefinitionCs": {
      "type": "object",
      "description": "Display information of the operation for cs locale.",
      "allOf": [
        {
          "$ref": "#/definitions/OperationsDisplayDefinition"
        }
      ]
    },
    "LocalizedOperationDisplayDefinitionDe": {
      "type": "object",
      "description": "Display information of the operation for de locale.",
      "allOf": [
        {
          "$ref": "#/definitions/OperationsDisplayDefinition"
        }
      ]
    },
    "LocalizedOperationDisplayDefinitionDefault": {
      "type": "object",
      "description": "Display information of the operation.",
      "allOf": [
        {
          "$ref": "#/definitions/OperationsDisplayDefinition"
        }
      ]
    },
    "LocalizedOperationDisplayDefinitionEn": {
      "type": "object",
      "description": "Display information of the operation for en locale.",
      "allOf": [
        {
          "$ref": "#/definitions/OperationsDisplayDefinition"
        }
      ]
    },
    "LocalizedOperationDisplayDefinitionEs": {
      "type": "object",
      "description": "Display information of the operation for es locale.",
      "allOf": [
        {
          "$ref": "#/definitions/OperationsDisplayDefinition"
        }
      ]
    },
    "LocalizedOperationDisplayDefinitionFr": {
      "type": "object",
      "description": "Display information of the operation for fr locale.",
      "allOf": [
        {
          "$ref": "#/definitions/OperationsDisplayDefinition"
        }
      ]
    },
    "LocalizedOperationDisplayDefinitionHu": {
      "type": "object",
      "description": "Display information of the operation for hu locale.",
      "allOf": [
        {
          "$ref": "#/definitions/OperationsDisplayDefinition"
        }
      ]
    },
    "LocalizedOperationDisplayDefinitionIt": {
      "type": "object",
      "description": "Display information of the operation for it locale.",
      "allOf": [
        {
          "$ref": "#/definitions/OperationsDisplayDefinition"
        }
      ]
    },
    "LocalizedOperationDisplayDefinitionJa": {
      "type": "object",
      "description": "Display information of the operation for ja locale.",
      "allOf": [
        {
          "$ref": "#/definitions/OperationsDisplayDefinition"
        }
      ]
    },
    "LocalizedOperationDisplayDefinitionKo": {
      "type": "object",
      "description": "Display information of the operation for ko locale.",
      "allOf": [
        {
          "$ref": "#/definitions/OperationsDisplayDefinition"
        }
      ]
    },
    "LocalizedOperationDisplayDefinitionNl": {
      "type": "object",
      "description": "Display information of the operation for nl locale.",
      "allOf": [
        {
          "$ref": "#/definitions/OperationsDisplayDefinition"
        }
      ]
    },
    "LocalizedOperationDisplayDefinitionPl": {
      "type": "object",
      "description": "Display information of the operation for pl locale.",
      "allOf": [
        {
          "$ref": "#/definitions/OperationsDisplayDefinition"
        }
      ]
    },
    "LocalizedOperationDisplayDefinitionPtBR": {
      "type": "object",
      "description": "Display information of the operation for pt-BR locale.",
      "allOf": [
        {
          "$ref": "#/definitions/OperationsDisplayDefinition"
        }
      ]
    },
    "LocalizedOperationDisplayDefinitionPtPT": {
      "type": "object",
      "description": "Display information of the operation for pt-PT locale.",
      "allOf": [
        {
          "$ref": "#/definitions/OperationsDisplayDefinition"
        }
      ]
    },
    "LocalizedOperationDisplayDefinitionRu": {
      "type": "object",
      "description": "Display information of the operation for ru locale.",
      "allOf": [
        {
          "$ref": "#/definitions/OperationsDisplayDefinition"
        }
      ]
    },
    "LocalizedOperationDisplayDefinitionSv": {
      "type": "object",
      "description": "Display information of the operation for sv locale.",
      "allOf": [
        {
          "$ref": "#/definitions/OperationsDisplayDefinition"
        }
      ]
    },
    "LocalizedOperationDisplayDefinitionZhHans": {
      "type": "object",
      "description": "Display information of the operation for zh-Hans locale.",
      "allOf": [
        {
          "$ref": "#/definitions/OperationsDisplayDefinition"
        }
      ]
    },
    "LocalizedOperationDisplayDefinitionZhHant": {
      "type": "object",
      "description": "Display information of the operation for zh-Hant locale.",
      "allOf": [
        {
          "$ref": "#/definitions/OperationsDisplayDefinition"
        }
      ]
    },
    "LocationQuotaRule": {
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "#/definitions/QuotaPolicy",
          "description": "The policy."
        },
        "quotaId": {
          "type": "string",
          "description": "The quota id."
        },
        "location": {
          "type": "string",
          "description": "The location."
        }
      }
    },
    "LoggingDetails": {
      "type": "string",
      "description": "The detail level.",
      "enum": [
        "None",
        "Body"
      ],
      "x-ms-enum": {
        "name": "LoggingDetails",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "Body",
            "value": "Body"
          }
        ]
      }
    },
    "LoggingDirections": {
      "type": "string",
      "description": "The direction.",
      "enum": [
        "None",
        "Request",
        "Response"
      ],
      "x-ms-enum": {
        "name": "LoggingDirections",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "Request",
            "value": "Request"
          },
          {
            "name": "Response",
            "value": "Response"
          }
        ]
      }
    },
    "LoggingHiddenPropertyPath": {
      "type": "object",
      "properties": {
        "hiddenPathsOnRequest": {
          "type": "array",
          "description": "The hidden paths on request.",
          "items": {
            "type": "string"
          }
        },
        "hiddenPathsOnResponse": {
          "type": "array",
          "description": "The hidden paths on response.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LoggingRule": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "description": "The action."
        },
        "direction": {
          "$ref": "#/definitions/LoggingDirections",
          "description": "The direction."
        },
        "detailLevel": {
          "$ref": "#/definitions/LoggingDetails",
          "description": "The detail level."
        },
        "hiddenPropertyPaths": {
          "$ref": "#/definitions/LoggingRuleHiddenPropertyPaths",
          "description": "The hidden property paths."
        }
      },
      "required": [
        "action",
        "direction",
        "detailLevel"
      ]
    },
    "LoggingRuleHiddenPropertyPaths": {
      "type": "object",
      "description": "The hidden property paths.",
      "allOf": [
        {
          "$ref": "#/definitions/LoggingHiddenPropertyPath"
        }
      ]
    },
    "ManifestLevelPropertyBag": {
      "type": "object",
      "properties": {
        "resourceHydrationAccounts": {
          "type": "array",
          "description": "The resource hydration accounts.",
          "items": {
            "$ref": "#/definitions/ResourceHydrationAccount"
          },
          "x-ms-identifiers": [
            "accountName"
          ]
        }
      }
    },
    "ManifestResourceDeletionPolicy": {
      "type": "string",
      "description": "The resource deletion policy.",
      "enum": [
        "NotSpecified",
        "Cascade",
        "Force"
      ],
      "x-ms-enum": {
        "name": "ManifestResourceDeletionPolicy",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "Cascade",
            "value": "Cascade"
          },
          {
            "name": "Force",
            "value": "Force"
          }
        ]
      }
    },
    "MarketplaceType": {
      "type": "string",
      "description": "The marketplace type.",
      "enum": [
        "NotSpecified",
        "AddOn",
        "Bypass",
        "Store"
      ],
      "x-ms-enum": {
        "name": "MarketplaceType",
        "modelAsString": false
      }
    },
    "MessageScope": {
      "type": "string",
      "description": "The message scope.",
      "enum": [
        "NotSpecified",
        "RegisteredSubscriptions"
      ],
      "x-ms-enum": {
        "name": "MessageScope",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "RegisteredSubscriptions",
            "value": "RegisteredSubscriptions"
          }
        ]
      }
    },
    "Notification": {
      "type": "object",
      "properties": {
        "notificationType": {
          "$ref": "#/definitions/NotificationType",
          "description": "The notification type."
        },
        "skipNotifications": {
          "$ref": "#/definitions/SkipNotifications",
          "description": "Whether notifications should be skipped."
        }
      }
    },
    "NotificationEndpoint": {
      "type": "object",
      "properties": {
        "notificationDestination": {
          "type": "string",
          "description": "The notification destination."
        },
        "locations": {
          "type": "array",
          "description": "The locations.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "NotificationEndpointType": {
      "type": "string",
      "description": "The endpoint type.",
      "enum": [
        "Webhook",
        "Eventhub"
      ],
      "x-ms-enum": {
        "name": "NotificationEndpointType",
        "modelAsString": true,
        "values": [
          {
            "name": "Webhook",
            "value": "Webhook"
          },
          {
            "name": "Eventhub",
            "value": "Eventhub"
          }
        ]
      }
    },
    "NotificationMode": {
      "type": "string",
      "description": "The notification mode.",
      "enum": [
        "NotSpecified",
        "EventHub",
        "WebHook"
      ],
      "x-ms-enum": {
        "name": "NotificationMode",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "EventHub",
            "value": "EventHub"
          },
          {
            "name": "WebHook",
            "value": "WebHook"
          }
        ]
      }
    },
    "NotificationOptions": {
      "type": "string",
      "description": "Notification options.",
      "enum": [
        "NotSpecified",
        "None",
        "EmitSpendingLimit"
      ],
      "x-ms-enum": {
        "name": "NotificationOptions",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "EmitSpendingLimit",
            "value": "EmitSpendingLimit"
          }
        ]
      }
    },
    "NotificationRegistration": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NotificationRegistrationProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "NotificationRegistrationArrayResponseWithContinuation": {
      "type": "object",
      "description": "Paged collection of NotificationRegistration items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NotificationRegistration items on this page",
          "items": {
            "$ref": "#/definitions/NotificationRegistration"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NotificationRegistrationProperties": {
      "type": "object",
      "properties": {
        "notificationMode": {
          "$ref": "#/definitions/NotificationMode",
          "description": "The notification mode."
        },
        "messageScope": {
          "$ref": "#/definitions/MessageScope",
          "description": "The message scope."
        },
        "includedEvents": {
          "type": "array",
          "description": "The included events.",
          "items": {
            "type": "string"
          }
        },
        "notificationEndpoints": {
          "type": "array",
          "description": "The notification endpoints.",
          "items": {
            "$ref": "#/definitions/NotificationEndpoint"
          },
          "x-ms-identifiers": [
            "notificationDestination"
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioned state of the resource.",
          "readOnly": true
        }
      }
    },
    "NotificationType": {
      "type": "string",
      "description": "The notification type.",
      "enum": [
        "Unspecified",
        "SubscriptionNotification"
      ],
      "x-ms-enum": {
        "name": "NotificationType",
        "modelAsString": true,
        "values": [
          {
            "name": "Unspecified",
            "value": "Unspecified"
          },
          {
            "name": "SubscriptionNotification",
            "value": "SubscriptionNotification"
          }
        ]
      }
    },
    "OpenApiConfiguration": {
      "type": "object",
      "properties": {
        "validation": {
          "$ref": "#/definitions/OpenApiValidation",
          "description": "The open api validation."
        }
      }
    },
    "OpenApiValidation": {
      "type": "object",
      "properties": {
        "allowNoncompliantCollectionResponse": {
          "type": "boolean",
          "description": "Indicates whether a non compliance response is allowed for a LIST call"
        }
      }
    },
    "OperationActionType": {
      "type": "string",
      "description": "The action type.",
      "enum": [
        "NotSpecified",
        "Internal"
      ],
      "x-ms-enum": {
        "name": "OperationActionType",
        "modelAsString": false
      }
    },
    "OperationOrigins": {
      "type": "string",
      "description": "The origin.",
      "enum": [
        "NotSpecified",
        "User",
        "System"
      ],
      "x-ms-enum": {
        "name": "OperationOrigins",
        "modelAsString": false
      }
    },
    "OperationsContentProperties": {
      "type": "object",
      "properties": {
        "contents": {
          "type": "array",
          "description": "Operations content.",
          "items": {
            "$ref": "#/definitions/LocalizedOperationDefinition"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "OperationsDefinition": {
      "type": "object",
      "description": "Properties of an Operation.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the operation."
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Indicates whether the operation applies to data-plane."
        },
        "origin": {
          "$ref": "#/definitions/OperationOrigins",
          "description": "The origin."
        },
        "display": {
          "$ref": "#/definitions/OperationsDefinitionDisplay",
          "description": "Display information of the operation."
        },
        "actionType": {
          "$ref": "#/definitions/OperationActionType",
          "description": "The action type."
        },
        "properties": {}
      },
      "required": [
        "name",
        "display"
      ]
    },
    "OperationsDefinitionArrayResponseWithContinuation": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "The value.",
          "items": {
            "$ref": "#/definitions/OperationsDefinition"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get to the next set of results, if there are any."
        }
      },
      "required": [
        "value"
      ]
    },
    "OperationsDefinitionDisplay": {
      "type": "object",
      "description": "Display information of the operation.",
      "allOf": [
        {
          "$ref": "#/definitions/OperationsDisplayDefinition"
        }
      ]
    },
    "OperationsDisplayDefinition": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string",
          "description": "The provider."
        },
        "resource": {
          "type": "string",
          "description": "The resource."
        },
        "operation": {
          "type": "string",
          "description": "The operation."
        },
        "description": {
          "type": "string",
          "description": "The description."
        }
      },
      "required": [
        "provider",
        "resource",
        "operation",
        "description"
      ]
    },
    "OperationsPutContent": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/OperationsPutContentProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "OperationsPutContentProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OperationsContentProperties"
        }
      ]
    },
    "OptInHeaderType": {
      "type": "string",
      "description": "The opt in headers.",
      "enum": [
        "NotSpecified",
        "SignedUserToken",
        "ClientGroupMembership",
        "SignedAuxiliaryTokens",
        "UnboundedClientGroupMembership",
        "PrivateLinkId",
        "PrivateLinkResourceId",
        "ManagementGroupAncestorsEncoded",
        "PrivateLinkVnetTrafficTag",
        "ResourceGroupLocation",
        "ClientPrincipalNameEncoded",
        "MSIResourceIdEncoded"
      ],
      "x-ms-enum": {
        "name": "OptInHeaderType",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "SignedUserToken",
            "value": "SignedUserToken"
          },
          {
            "name": "ClientGroupMembership",
            "value": "ClientGroupMembership"
          },
          {
            "name": "SignedAuxiliaryTokens",
            "value": "SignedAuxiliaryTokens"
          },
          {
            "name": "UnboundedClientGroupMembership",
            "value": "UnboundedClientGroupMembership"
          },
          {
            "name": "PrivateLinkId",
            "value": "PrivateLinkId"
          },
          {
            "name": "PrivateLinkResourceId",
            "value": "PrivateLinkResourceId"
          },
          {
            "name": "ManagementGroupAncestorsEncoded",
            "value": "ManagementGroupAncestorsEncoded"
          },
          {
            "name": "PrivateLinkVnetTrafficTag",
            "value": "PrivateLinkVnetTrafficTag"
          },
          {
            "name": "ResourceGroupLocation",
            "value": "ResourceGroupLocation"
          },
          {
            "name": "ClientPrincipalNameEncoded",
            "value": "ClientPrincipalNameEncoded"
          },
          {
            "name": "MSIResourceIdEncoded",
            "value": "MSIResourceIdEncoded"
          }
        ]
      }
    },
    "OptOutHeaderType": {
      "type": "string",
      "description": "The opt out headers.",
      "enum": [
        "NotSpecified",
        "SystemDataCreatedByLastModifiedBy"
      ],
      "x-ms-enum": {
        "name": "OptOutHeaderType",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "SystemDataCreatedByLastModifiedBy",
            "value": "SystemDataCreatedByLastModifiedBy"
          }
        ]
      }
    },
    "Policy": {
      "type": "string",
      "description": "The policy.",
      "enum": [
        "NotSpecified",
        "SynchronizeBeginExtension"
      ],
      "x-ms-enum": {
        "name": "Policy",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "SynchronizeBeginExtension",
            "value": "SynchronizeBeginExtension"
          }
        ]
      }
    },
    "PolicyExecutionType": {
      "type": "string",
      "description": "The policy execution type.",
      "enum": [
        "NotSpecified",
        "ExecutePolicies",
        "BypassPolicies",
        "ExpectPartialPutRequests"
      ],
      "x-ms-enum": {
        "name": "PolicyExecutionType",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "ExecutePolicies",
            "value": "ExecutePolicies"
          },
          {
            "name": "BypassPolicies",
            "value": "BypassPolicies"
          },
          {
            "name": "ExpectPartialPutRequests",
            "value": "ExpectPartialPutRequests"
          }
        ]
      }
    },
    "PreflightOption": {
      "type": "string",
      "enum": [
        "None",
        "ContinueDeploymentOnFailure",
        "DefaultValidationOnly"
      ],
      "x-ms-enum": {
        "name": "PreflightOption",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "ContinueDeploymentOnFailure",
            "value": "ContinueDeploymentOnFailure"
          },
          {
            "name": "DefaultValidationOnly",
            "value": "DefaultValidationOnly"
          }
        ]
      }
    },
    "PrivateResourceProviderConfiguration": {
      "type": "object",
      "properties": {
        "allowedSubscriptions": {
          "type": "array",
          "description": "The allowed subscriptions.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ProviderHubMetadata": {
      "type": "object",
      "properties": {
        "providerAuthorizations": {
          "type": "array",
          "description": "The provider authorizations.",
          "items": {
            "$ref": "#/definitions/ResourceProviderAuthorization"
          },
          "x-ms-identifiers": []
        },
        "providerAuthentication": {
          "$ref": "#/definitions/ProviderHubMetadataProviderAuthentication",
          "description": "The provider authentication."
        },
        "thirdPartyProviderAuthorization": {
          "$ref": "#/definitions/ProviderHubMetadataThirdPartyProviderAuthorization",
          "description": "The third party provider authorization."
        },
        "directRpRoleDefinitionId": {
          "type": "string",
          "description": "The direct RP role definition id."
        },
        "regionalAsyncOperationResourceTypeName": {
          "type": "string",
          "description": "The regional async operation resource type name."
        },
        "globalAsyncOperationResourceTypeName": {
          "type": "string",
          "description": "The global async operation resource type name."
        }
      }
    },
    "ProviderHubMetadataProviderAuthentication": {
      "type": "object",
      "description": "The provider authentication.",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceProviderAuthentication"
        }
      ]
    },
    "ProviderHubMetadataThirdPartyProviderAuthorization": {
      "type": "object",
      "description": "The third party provider authorization.",
      "allOf": [
        {
          "$ref": "#/definitions/ThirdPartyProviderAuthorization"
        }
      ]
    },
    "ProviderMonitorSetting": {
      "type": "object",
      "description": "Concrete tracked resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProviderMonitorSettingProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ProviderMonitorSettingArrayResponseWithContinuation": {
      "type": "object",
      "description": "Paged collection of ProviderMonitorSetting items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ProviderMonitorSetting items on this page",
          "items": {
            "$ref": "#/definitions/ProviderMonitorSetting"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ProviderMonitorSettingProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        }
      }
    },
    "ProviderRegistration": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProviderRegistrationProperties"
        },
        "kind": {
          "type": "string",
          "description": "Provider registration kind. This Metadata is also used by portal/tooling/etc to render different UX experiences for resources of the same type.",
          "default": "Managed",
          "enum": [
            "Managed",
            "Hybrid",
            "Direct"
          ],
          "x-ms-enum": {
            "name": "ProviderRegistrationKind",
            "modelAsString": true,
            "values": [
              {
                "name": "Managed",
                "value": "Managed",
                "description": "Resource Provider with all the resource types 'managed' by the ProviderHub service."
              },
              {
                "name": "Hybrid",
                "value": "Hybrid",
                "description": "Resource Provider with a mix of 'managed' and 'direct' resource types."
              },
              {
                "name": "Direct",
                "value": "Direct",
                "description": "Resource Provider with all the resource types 'managed' on by itself."
              }
            ]
          }
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ProviderRegistrationArrayResponseWithContinuation": {
      "type": "object",
      "description": "Paged collection of ProviderRegistration items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ProviderRegistration items on this page",
          "items": {
            "$ref": "#/definitions/ProviderRegistration"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ProviderRegistrationProperties": {
      "type": "object",
      "properties": {
        "providerHubMetadata": {
          "$ref": "#/definitions/ProviderRegistrationPropertiesProviderHubMetadata",
          "description": "The provider hub metadata."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "subscriptionLifecycleNotificationSpecifications": {
          "$ref": "#/definitions/ProviderRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications",
          "description": "The subscription lifecycle notification specifications."
        },
        "privateResourceProviderConfiguration": {
          "$ref": "#/definitions/ProviderRegistrationPropertiesPrivateResourceProviderConfiguration",
          "description": "The private resource provider configuration."
        },
        "tokenAuthConfiguration": {
          "$ref": "#/definitions/TokenAuthConfiguration",
          "description": "The token auth configuration."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceProviderManifestProperties"
        }
      ]
    },
    "ProviderRegistrationPropertiesPrivateResourceProviderConfiguration": {
      "type": "object",
      "description": "The private resource provider configuration.",
      "allOf": [
        {
          "$ref": "#/definitions/PrivateResourceProviderConfiguration"
        }
      ]
    },
    "ProviderRegistrationPropertiesProviderHubMetadata": {
      "type": "object",
      "description": "The provider hub metadata.",
      "allOf": [
        {
          "$ref": "#/definitions/ProviderHubMetadata"
        }
      ]
    },
    "ProviderRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications": {
      "type": "object",
      "description": "The subscription lifecycle notification specifications.",
      "allOf": [
        {
          "$ref": "#/definitions/SubscriptionLifecycleNotificationSpecifications"
        }
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "enum": [
        "NotSpecified",
        "Accepted",
        "Running",
        "Creating",
        "Created",
        "Deleting",
        "Deleted",
        "Canceled",
        "Failed",
        "Succeeded",
        "MovingResources",
        "TransientFailure",
        "RolloutInProgress"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "Accepted",
            "value": "Accepted"
          },
          {
            "name": "Running",
            "value": "Running"
          },
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Created",
            "value": "Created"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          },
          {
            "name": "Deleted",
            "value": "Deleted"
          },
          {
            "name": "Canceled",
            "value": "Canceled"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "MovingResources",
            "value": "MovingResources"
          },
          {
            "name": "TransientFailure",
            "value": "TransientFailure"
          },
          {
            "name": "RolloutInProgress",
            "value": "RolloutInProgress"
          }
        ]
      }
    },
    "QuotaPolicy": {
      "type": "string",
      "enum": [
        "Default",
        "None",
        "Restricted"
      ],
      "x-ms-enum": {
        "name": "QuotaPolicy",
        "modelAsString": true,
        "values": [
          {
            "name": "Default",
            "value": "Default"
          },
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "Restricted",
            "value": "Restricted"
          }
        ]
      }
    },
    "QuotaRule": {
      "type": "object",
      "properties": {
        "quotaPolicy": {
          "$ref": "#/definitions/QuotaPolicy",
          "description": "The quota policy."
        },
        "locationRules": {
          "type": "array",
          "description": "The location rules.",
          "items": {
            "$ref": "#/definitions/LocationQuotaRule"
          },
          "x-ms-identifiers": []
        },
        "requiredFeatures": {
          "type": "array",
          "description": "The required features.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ReRegisterSubscriptionMetadata": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether it's enabled or not."
        },
        "concurrencyLimit": {
          "type": "integer",
          "format": "int32",
          "description": "The concurrency limit."
        }
      },
      "required": [
        "enabled"
      ]
    },
    "Readiness": {
      "type": "string",
      "description": "The readiness.",
      "enum": [
        "ClosingDown",
        "Deprecated",
        "GA",
        "InDevelopment",
        "InternalOnly",
        "PrivatePreview",
        "PublicPreview",
        "RemovedFromARM",
        "Retired"
      ],
      "x-ms-enum": {
        "name": "Readiness",
        "modelAsString": true,
        "values": [
          {
            "name": "ClosingDown",
            "value": "ClosingDown"
          },
          {
            "name": "Deprecated",
            "value": "Deprecated"
          },
          {
            "name": "GA",
            "value": "GA"
          },
          {
            "name": "InDevelopment",
            "value": "InDevelopment"
          },
          {
            "name": "InternalOnly",
            "value": "InternalOnly"
          },
          {
            "name": "PrivatePreview",
            "value": "PrivatePreview"
          },
          {
            "name": "PublicPreview",
            "value": "PublicPreview"
          },
          {
            "name": "RemovedFromARM",
            "value": "RemovedFromARM"
          },
          {
            "name": "Retired",
            "value": "Retired"
          }
        ]
      }
    },
    "Regionality": {
      "type": "string",
      "description": "The regionality.",
      "enum": [
        "NotSpecified",
        "Global",
        "Regional"
      ],
      "x-ms-enum": {
        "name": "Regionality",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "Global",
            "value": "Global"
          },
          {
            "name": "Regional",
            "value": "Regional"
          }
        ]
      }
    },
    "RequestHeaderOptions": {
      "type": "object",
      "properties": {
        "optInHeaders": {
          "$ref": "#/definitions/OptInHeaderType",
          "description": "The opt in headers."
        },
        "optOutHeaders": {
          "$ref": "#/definitions/OptOutHeaderType",
          "description": "The opt out headers."
        }
      }
    },
    "ResourceAccessPolicy": {
      "type": "string",
      "description": "The resource access policy.",
      "enum": [
        "NotSpecified",
        "AcisReadAllowed",
        "AcisActionAllowed"
      ],
      "x-ms-enum": {
        "name": "ResourceAccessPolicy",
        "modelAsString": false
      }
    },
    "ResourceAccessRole": {
      "type": "object",
      "properties": {
        "allowedGroupClaims": {
          "type": "array",
          "description": "The allowed group claims.",
          "items": {
            "type": "string"
          }
        },
        "actions": {
          "type": "array",
          "description": "The actions.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ResourceConcurrencyControlOption": {
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "#/definitions/Policy",
          "description": "The policy."
        }
      }
    },
    "ResourceDeletionPolicy": {
      "type": "string",
      "description": "The resource deletion policy.",
      "enum": [
        "NotSpecified",
        "CascadeDeleteAll",
        "CascadeDeleteProxyOnlyChildren"
      ],
      "x-ms-enum": {
        "name": "ResourceDeletionPolicy",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "CascadeDeleteAll",
            "value": "CascadeDeleteAll"
          },
          {
            "name": "CascadeDeleteProxyOnlyChildren",
            "value": "CascadeDeleteProxyOnlyChildren"
          }
        ]
      }
    },
    "ResourceGraphConfiguration": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether it's enabled."
        },
        "apiVersion": {
          "type": "string",
          "description": "The api version."
        }
      }
    },
    "ResourceHydrationAccount": {
      "type": "object",
      "properties": {
        "maxChildResourceConsistencyJobLimit": {
          "type": "integer",
          "format": "int64",
          "description": "The max child resource consistency job limit."
        },
        "encryptedKey": {
          "type": "string",
          "format": "password",
          "description": "The encrypted key.",
          "x-ms-secret": true
        },
        "accountName": {
          "type": "string",
          "description": "The account name."
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription id."
        }
      }
    },
    "ResourceManagementAction": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "description": "resource management action content.",
          "items": {
            "$ref": "#/definitions/ResourceManagementEntity"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      }
    },
    "ResourceManagementEntity": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The resource id."
        },
        "homeTenantId": {
          "type": "string",
          "description": "The home tenant id."
        },
        "location": {
          "type": "string",
          "description": "The location."
        },
        "status": {
          "type": "string",
          "description": "The operation status.",
          "readOnly": true
        }
      },
      "required": [
        "resourceId"
      ]
    },
    "ResourceMovePolicy": {
      "type": "object",
      "properties": {
        "validationRequired": {
          "type": "boolean",
          "description": "Whether validation is required."
        },
        "crossResourceGroupMoveEnabled": {
          "type": "boolean",
          "description": "Whether cross resource group move is enabled."
        },
        "crossSubscriptionMoveEnabled": {
          "type": "boolean",
          "description": "Whether cross subscription move is enabled."
        }
      }
    },
    "ResourceProviderAuthentication": {
      "type": "object",
      "properties": {
        "allowedAudiences": {
          "type": "array",
          "description": "The allowed audiences.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "allowedAudiences"
      ]
    },
    "ResourceProviderAuthorization": {
      "type": "object",
      "properties": {
        "applicationId": {
          "type": "string",
          "description": "The application id."
        },
        "roleDefinitionId": {
          "type": "string",
          "description": "The role definition id."
        },
        "managedByRoleDefinitionId": {
          "type": "string",
          "description": "The managed by role definition id."
        },
        "managedByAuthorization": {
          "$ref": "#/definitions/ResourceProviderAuthorizationManagedByAuthorization",
          "description": "Managed by authorization."
        },
        "allowedThirdPartyExtensions": {
          "type": "array",
          "description": "The allowed third party extensions.",
          "items": {
            "$ref": "#/definitions/ThirdPartyExtension"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "groupingTag": {
          "type": "string",
          "description": "The grouping tag."
        }
      }
    },
    "ResourceProviderAuthorizationManagedByAuthorization": {
      "type": "object",
      "description": "Managed by authorization.",
      "properties": {
        "additionalAuthorizations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalAuthorization"
          },
          "x-ms-identifiers": [
            "applicationId",
            "roleDefinitionId"
          ]
        },
        "managedByResourceRoleDefinitionId": {
          "type": "string",
          "description": "The managed by resource role definition ID for the application."
        },
        "allowManagedByInheritance": {
          "type": "boolean",
          "description": "Indicates whether the managed by resource role definition ID should be inherited."
        }
      }
    },
    "ResourceProviderAuthorizationRules": {
      "type": "object",
      "properties": {
        "asyncOperationPollingRules": {
          "$ref": "#/definitions/AsyncOperationPollingRules",
          "description": "The async operation polling rules."
        }
      }
    },
    "ResourceProviderCapabilities": {
      "type": "object",
      "properties": {
        "quotaId": {
          "type": "string",
          "description": "The quota id."
        },
        "effect": {
          "$ref": "#/definitions/ResourceProviderCapabilitiesEffect",
          "description": "The effect."
        },
        "requiredFeatures": {
          "type": "array",
          "description": "The required features.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "quotaId",
        "effect"
      ]
    },
    "ResourceProviderCapabilitiesEffect": {
      "type": "string",
      "description": "The effect.",
      "enum": [
        "NotSpecified",
        "Allow",
        "Disallow"
      ],
      "x-ms-enum": {
        "name": "ResourceProviderCapabilitiesEffect",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "Allow",
            "value": "Allow"
          },
          {
            "name": "Disallow",
            "value": "Disallow"
          }
        ]
      }
    },
    "ResourceProviderEndpoint": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether the endpoint is enabled."
        },
        "apiVersions": {
          "type": "array",
          "description": "The api versions.",
          "items": {
            "type": "string"
          }
        },
        "endpointUri": {
          "type": "string",
          "description": "The endpoint uri."
        },
        "locations": {
          "type": "array",
          "description": "The locations.",
          "items": {
            "type": "string"
          }
        },
        "requiredFeatures": {
          "type": "array",
          "description": "The required features.",
          "items": {
            "type": "string"
          }
        },
        "featuresRule": {
          "$ref": "#/definitions/ResourceProviderEndpointFeaturesRule",
          "description": "The feature rules."
        },
        "timeout": {
          "type": "string",
          "format": "duration",
          "description": "The timeout."
        },
        "endpointType": {
          "$ref": "#/definitions/EndpointType",
          "description": "The endpoint type."
        },
        "skuLink": {
          "type": "string",
          "description": "The sku link."
        }
      }
    },
    "ResourceProviderEndpointFeaturesRule": {
      "type": "object",
      "description": "The feature rules.",
      "allOf": [
        {
          "$ref": "#/definitions/FeaturesRule"
        }
      ]
    },
    "ResourceProviderManagement": {
      "type": "object",
      "properties": {
        "schemaOwners": {
          "type": "array",
          "description": "The schema owners.",
          "items": {
            "type": "string"
          }
        },
        "manifestOwners": {
          "type": "array",
          "description": "The manifest owners.",
          "items": {
            "type": "string"
          }
        },
        "authorizationOwners": {
          "type": "array",
          "description": "The authorization owners.",
          "items": {
            "type": "string"
          }
        },
        "incidentRoutingService": {
          "type": "string",
          "description": "The incident routing service."
        },
        "incidentRoutingTeam": {
          "type": "string",
          "description": "The incident routing team."
        },
        "incidentContactEmail": {
          "type": "string",
          "description": "The incident contact email."
        },
        "serviceTreeInfos": {
          "type": "array",
          "description": "The service tree infos.",
          "items": {
            "$ref": "#/definitions/ServiceTreeInfo"
          },
          "x-ms-identifiers": []
        },
        "resourceAccessPolicy": {
          "$ref": "#/definitions/ResourceAccessPolicy",
          "description": "The resource access policy."
        },
        "resourceAccessRoles": {
          "type": "array",
          "description": "The resource access roles.",
          "items": {
            "$ref": "#/definitions/ResourceAccessRole"
          },
          "x-ms-identifiers": []
        },
        "expeditedRolloutSubmitters": {
          "type": "array",
          "description": "List of expedited rollout submitters.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "errorResponseMessageOptions": {
          "$ref": "#/definitions/ResourceProviderManagementErrorResponseMessageOptions",
          "description": "Options for error response messages."
        },
        "expeditedRolloutMetadata": {
          "$ref": "#/definitions/ResourceProviderManagementExpeditedRolloutMetadata",
          "description": "Metadata for expedited rollout."
        },
        "canaryManifestOwners": {
          "type": "array",
          "description": "List of manifest owners for canary.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "pcCode": {
          "type": "string",
          "description": "The profit center code for the subscription."
        },
        "profitCenterProgramId": {
          "type": "string",
          "description": "The profit center program id for the subscription."
        }
      }
    },
    "ResourceProviderManagementErrorResponseMessageOptions": {
      "type": "object",
      "description": "Options for error response messages.",
      "properties": {
        "serverFailureResponseMessageType": {
          "$ref": "#/definitions/ServerFailureResponseMessageType",
          "description": "Type of server failure response message."
        }
      }
    },
    "ResourceProviderManagementExpeditedRolloutMetadata": {
      "type": "object",
      "description": "Metadata for expedited rollout.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Expedited rollout enabled?"
        },
        "expeditedRolloutIntent": {
          "$ref": "#/definitions/ExpeditedRolloutIntent",
          "description": "Expedited rollout intent."
        }
      }
    },
    "ResourceProviderManifest": {
      "type": "object",
      "properties": {
        "providerAuthentication": {
          "$ref": "#/definitions/ResourceProviderManifestProviderAuthentication",
          "description": "The provider authentication."
        },
        "providerAuthorizations": {
          "type": "array",
          "description": "The provider authorizations.",
          "items": {
            "$ref": "#/definitions/ResourceProviderAuthorization"
          },
          "x-ms-identifiers": []
        },
        "namespace": {
          "type": "string",
          "description": "The namespace."
        },
        "services": {
          "type": "array",
          "description": "The services.",
          "items": {
            "$ref": "#/definitions/ResourceProviderService"
          },
          "x-ms-identifiers": []
        },
        "serviceName": {
          "type": "string",
          "description": "The service name."
        },
        "providerVersion": {
          "type": "string",
          "description": "The provider version."
        },
        "providerType": {
          "$ref": "#/definitions/ResourceProviderType",
          "description": "The provider type."
        },
        "requiredFeatures": {
          "type": "array",
          "description": "The required features.",
          "items": {
            "type": "string"
          }
        },
        "featuresRule": {
          "$ref": "#/definitions/ResourceProviderManifestFeaturesRule",
          "description": "The features rule."
        },
        "requestHeaderOptions": {
          "$ref": "#/definitions/ResourceProviderManifestRequestHeaderOptions",
          "description": "The request header options."
        },
        "resourceTypes": {
          "type": "array",
          "description": "The resource types.",
          "items": {
            "$ref": "#/definitions/ResourceType"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "management": {
          "$ref": "#/definitions/ResourceProviderManifestManagement",
          "description": "The resource provider management."
        },
        "capabilities": {
          "type": "array",
          "description": "The capabilities.",
          "items": {
            "$ref": "#/definitions/ResourceProviderCapabilities"
          },
          "x-ms-identifiers": [
            "quotaId"
          ]
        },
        "crossTenantTokenValidation": {
          "$ref": "#/definitions/CrossTenantTokenValidation",
          "description": "The cross tenant token validation."
        },
        "metadata": {
          "type": "object",
          "description": "The metadata."
        },
        "globalNotificationEndpoints": {
          "type": "array",
          "description": "The global notification endpoints.",
          "items": {
            "$ref": "#/definitions/ResourceProviderEndpoint"
          },
          "x-ms-identifiers": []
        },
        "reRegisterSubscriptionMetadata": {
          "$ref": "#/definitions/ResourceProviderManifestReRegisterSubscriptionMetadata",
          "description": "The re-register subscription metadata."
        },
        "enableTenantLinkedNotification": {
          "type": "boolean",
          "description": "Whether tenant linked notification is enabled.",
          "x-nullable": true
        },
        "notifications": {
          "$ref": "#/definitions/Notification",
          "description": "The notifications."
        },
        "linkedNotificationRules": {
          "type": "array",
          "description": "The linked notification rules.",
          "items": {
            "$ref": "#/definitions/FanoutLinkedNotificationRule"
          },
          "x-ms-identifiers": []
        },
        "resourceProviderAuthorizationRules": {
          "$ref": "#/definitions/ResourceProviderAuthorizationRules",
          "description": "The resource provider authorization rules."
        }
      }
    },
    "ResourceProviderManifestFeaturesRule": {
      "type": "object",
      "description": "The features rule.",
      "allOf": [
        {
          "$ref": "#/definitions/FeaturesRule"
        }
      ]
    },
    "ResourceProviderManifestManagement": {
      "type": "object",
      "description": "The resource provider management.",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceProviderManagement"
        }
      ]
    },
    "ResourceProviderManifestProperties": {
      "type": "object",
      "properties": {
        "providerAuthentication": {
          "$ref": "#/definitions/ResourceProviderManifestPropertiesProviderAuthentication",
          "description": "The provider authentication."
        },
        "providerAuthorizations": {
          "type": "array",
          "description": "The provider authorizations.",
          "items": {
            "$ref": "#/definitions/ResourceProviderAuthorization"
          },
          "x-ms-identifiers": []
        },
        "namespace": {
          "type": "string",
          "description": "The namespace."
        },
        "services": {
          "type": "array",
          "description": "The services.",
          "items": {
            "$ref": "#/definitions/ResourceProviderService"
          },
          "x-ms-identifiers": []
        },
        "serviceName": {
          "type": "string",
          "description": "The service name."
        },
        "providerVersion": {
          "type": "string",
          "description": "The provider version."
        },
        "providerType": {
          "$ref": "#/definitions/ResourceProviderType",
          "description": "The provider type."
        },
        "requiredFeatures": {
          "type": "array",
          "description": "The required features.",
          "items": {
            "type": "string"
          }
        },
        "featuresRule": {
          "$ref": "#/definitions/ResourceProviderManifestPropertiesFeaturesRule",
          "description": "The features rule."
        },
        "requestHeaderOptions": {
          "$ref": "#/definitions/ResourceProviderManifestPropertiesRequestHeaderOptions",
          "description": "The request header options."
        },
        "management": {
          "$ref": "#/definitions/ResourceProviderManifestPropertiesManagement",
          "description": "The resource provider management."
        },
        "capabilities": {
          "type": "array",
          "description": "The capabilities.",
          "items": {
            "$ref": "#/definitions/ResourceProviderCapabilities"
          },
          "x-ms-identifiers": [
            "quotaId"
          ]
        },
        "crossTenantTokenValidation": {
          "$ref": "#/definitions/CrossTenantTokenValidation",
          "description": "The cross tenant token validation."
        },
        "metadata": {
          "type": "object",
          "description": "The metadata."
        },
        "templateDeploymentOptions": {
          "$ref": "#/definitions/ResourceProviderManifestPropertiesTemplateDeploymentOptions",
          "description": "The template deployment options."
        },
        "globalNotificationEndpoints": {
          "type": "array",
          "description": "The global notification endpoints.",
          "items": {
            "$ref": "#/definitions/ResourceProviderEndpoint"
          },
          "x-ms-identifiers": []
        },
        "enableTenantLinkedNotification": {
          "type": "boolean",
          "description": "The enable tenant linked notification.",
          "x-nullable": true
        },
        "notifications": {
          "$ref": "#/definitions/Notification",
          "description": "The notifications."
        },
        "linkedNotificationRules": {
          "type": "array",
          "description": "The linked notification rules.",
          "items": {
            "$ref": "#/definitions/FanoutLinkedNotificationRule"
          },
          "x-ms-identifiers": []
        },
        "resourceProviderAuthorizationRules": {
          "$ref": "#/definitions/ResourceProviderAuthorizationRules",
          "description": "The resource provider authorization rules."
        },
        "dstsConfiguration": {
          "$ref": "#/definitions/ResourceProviderManifestPropertiesDstsConfiguration",
          "description": "The dsts configuration."
        },
        "notificationOptions": {
          "$ref": "#/definitions/NotificationOptions",
          "description": "Notification options."
        },
        "resourceHydrationAccounts": {
          "type": "array",
          "description": "resource hydration accounts",
          "items": {
            "$ref": "#/definitions/ResourceHydrationAccount"
          },
          "x-ms-identifiers": []
        },
        "notificationSettings": {
          "$ref": "#/definitions/ResourceProviderManifestPropertiesNotificationSettings",
          "description": "Notification settings."
        },
        "managementGroupGlobalNotificationEndpoints": {
          "type": "array",
          "description": "Management groups global notification endpoints.",
          "items": {
            "$ref": "#/definitions/ResourceProviderEndpoint"
          },
          "x-ms-identifiers": []
        },
        "optionalFeatures": {
          "type": "array",
          "description": "Optional features.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "resourceGroupLockOptionDuringMove": {
          "$ref": "#/definitions/ResourceProviderManifestPropertiesResourceGroupLockOptionDuringMove",
          "description": "Resource group lock option during move."
        },
        "responseOptions": {
          "$ref": "#/definitions/ResourceProviderManifestPropertiesResponseOptions",
          "description": "Response options."
        },
        "legacyNamespace": {
          "type": "string",
          "description": "Legacy namespace."
        },
        "legacyRegistrations": {
          "type": "array",
          "description": "Legacy registrations.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "customManifestVersion": {
          "type": "string",
          "description": "Custom manifest version."
        }
      }
    },
    "ResourceProviderManifestPropertiesDstsConfiguration": {
      "type": "object",
      "description": "The dsts configuration.",
      "allOf": [
        {
          "$ref": "#/definitions/DstsConfiguration"
        }
      ]
    },
    "ResourceProviderManifestPropertiesFeaturesRule": {
      "type": "object",
      "description": "The features rule.",
      "allOf": [
        {
          "$ref": "#/definitions/FeaturesRule"
        }
      ]
    },
    "ResourceProviderManifestPropertiesManagement": {
      "type": "object",
      "description": "The resource provider management.",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceProviderManagement"
        }
      ]
    },
    "ResourceProviderManifestPropertiesNotificationSettings": {
      "type": "object",
      "description": "Notification settings.",
      "properties": {
        "subscriberSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriberSetting"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ResourceProviderManifestPropertiesProviderAuthentication": {
      "type": "object",
      "description": "The provider authentication.",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceProviderAuthentication"
        }
      ]
    },
    "ResourceProviderManifestPropertiesRequestHeaderOptions": {
      "type": "object",
      "description": "The request header options.",
      "allOf": [
        {
          "$ref": "#/definitions/RequestHeaderOptions"
        }
      ]
    },
    "ResourceProviderManifestPropertiesResourceGroupLockOptionDuringMove": {
      "type": "object",
      "description": "Resource group lock option during move.",
      "properties": {
        "blockActionVerb": {
          "$ref": "#/definitions/BlockActionVerb",
          "description": "The action verb that will be blocked when the resource group is locked during move."
        }
      }
    },
    "ResourceProviderManifestPropertiesResponseOptions": {
      "type": "object",
      "description": "Response options.",
      "properties": {
        "serviceClientOptionsType": {
          "$ref": "#/definitions/ServiceClientOptionsType"
        }
      }
    },
    "ResourceProviderManifestPropertiesTemplateDeploymentOptions": {
      "type": "object",
      "description": "The template deployment options.",
      "allOf": [
        {
          "$ref": "#/definitions/TemplateDeploymentOptions"
        }
      ]
    },
    "ResourceProviderManifestProviderAuthentication": {
      "type": "object",
      "description": "The provider authentication.",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceProviderAuthentication"
        }
      ]
    },
    "ResourceProviderManifestReRegisterSubscriptionMetadata": {
      "type": "object",
      "description": "The re-register subscription metadata.",
      "allOf": [
        {
          "$ref": "#/definitions/ReRegisterSubscriptionMetadata"
        }
      ]
    },
    "ResourceProviderManifestRequestHeaderOptions": {
      "type": "object",
      "description": "The request header options.",
      "allOf": [
        {
          "$ref": "#/definitions/RequestHeaderOptions"
        }
      ]
    },
    "ResourceProviderService": {
      "type": "object",
      "description": "Resource provider service.",
      "properties": {
        "serviceName": {
          "type": "string",
          "description": "The service name."
        },
        "status": {
          "$ref": "#/definitions/ServiceStatus",
          "description": "The status."
        }
      }
    },
    "ResourceProviderType": {
      "type": "string",
      "description": "The provider type.",
      "enum": [
        "NotSpecified",
        "Internal",
        "External",
        "Hidden",
        "RegistrationFree",
        "LegacyRegistrationRequired",
        "TenantOnly",
        "AuthorizationFree"
      ],
      "x-ms-enum": {
        "name": "ResourceProviderType",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "Internal",
            "value": "Internal"
          },
          {
            "name": "External",
            "value": "External"
          },
          {
            "name": "Hidden",
            "value": "Hidden"
          },
          {
            "name": "RegistrationFree",
            "value": "RegistrationFree"
          },
          {
            "name": "LegacyRegistrationRequired",
            "value": "LegacyRegistrationRequired"
          },
          {
            "name": "TenantOnly",
            "value": "TenantOnly"
          },
          {
            "name": "AuthorizationFree",
            "value": "AuthorizationFree"
          }
        ]
      }
    },
    "ResourceSubType": {
      "type": "string",
      "description": "The resource sub type.",
      "enum": [
        "NotSpecified",
        "AsyncOperation"
      ],
      "x-ms-enum": {
        "name": "ResourceSubType",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "AsyncOperation",
            "value": "AsyncOperation"
          }
        ]
      }
    },
    "ResourceType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource type name."
        },
        "routingType": {
          "$ref": "#/definitions/RoutingType",
          "description": "The resource routing type."
        },
        "additionalOptions": {
          "$ref": "#/definitions/AdditionalOptions",
          "description": "The additional options."
        },
        "crossTenantTokenValidation": {
          "$ref": "#/definitions/CrossTenantTokenValidation",
          "description": "The cross tenant token validation."
        },
        "resourceValidation": {
          "$ref": "#/definitions/ResourceValidation",
          "description": "The resource validation."
        },
        "allowedUnauthorizedActions": {
          "type": "array",
          "description": "The allowed unauthorized actions.",
          "items": {
            "type": "string"
          }
        },
        "allowedUnauthorizedActionsExtensions": {
          "type": "array",
          "description": "The allowed unauthorized actions extensions.",
          "items": {
            "$ref": "#/definitions/AllowedUnauthorizedActionsExtension"
          }
        },
        "authorizationActionMappings": {
          "type": "array",
          "description": "The authorization action mappings.",
          "items": {
            "$ref": "#/definitions/AuthorizationActionMapping"
          },
          "x-ms-identifiers": [
            "original"
          ]
        },
        "linkedAccessChecks": {
          "type": "array",
          "description": "The linked access checks.",
          "items": {
            "$ref": "#/definitions/LinkedAccessCheck"
          },
          "x-ms-identifiers": []
        },
        "defaultApiVersion": {
          "type": "string",
          "description": "The default api version."
        },
        "loggingRules": {
          "type": "array",
          "description": "The logging rules.",
          "items": {
            "$ref": "#/definitions/LoggingRule"
          },
          "x-ms-identifiers": []
        },
        "throttlingRules": {
          "type": "array",
          "description": "The throttling rules.",
          "items": {
            "$ref": "#/definitions/ThrottlingRule"
          },
          "x-ms-identifiers": []
        },
        "endpoints": {
          "type": "array",
          "description": "The endpoints.",
          "items": {
            "$ref": "#/definitions/ResourceProviderEndpoint"
          },
          "x-ms-identifiers": []
        },
        "marketplaceType": {
          "$ref": "#/definitions/MarketplaceType",
          "description": "The marketplace type."
        },
        "identityManagement": {
          "$ref": "#/definitions/ResourceTypeIdentityManagement",
          "description": "The identity management."
        },
        "metadata": {
          "type": "object",
          "description": "The metadata."
        },
        "requiredFeatures": {
          "type": "array",
          "description": "The required features.",
          "items": {
            "type": "string"
          }
        },
        "featuresRule": {
          "$ref": "#/definitions/ResourceTypeFeaturesRule",
          "description": "The features rule."
        },
        "subscriptionStateRules": {
          "type": "array",
          "description": "The subscription state rules.",
          "items": {
            "$ref": "#/definitions/SubscriptionStateRule"
          },
          "x-ms-identifiers": []
        },
        "serviceTreeInfos": {
          "type": "array",
          "description": "The service tree infos.",
          "items": {
            "$ref": "#/definitions/ServiceTreeInfo"
          },
          "x-ms-identifiers": []
        },
        "requestHeaderOptions": {
          "$ref": "#/definitions/ResourceTypeRequestHeaderOptions",
          "description": "The request header options."
        },
        "skuLink": {
          "type": "string",
          "description": "The sku link."
        },
        "disallowedActionVerbs": {
          "type": "array",
          "description": "The disallowed action verbs.",
          "items": {
            "type": "string"
          }
        },
        "templateDeploymentPolicy": {
          "$ref": "#/definitions/ResourceTypeTemplateDeploymentPolicy",
          "description": "The template deployment policy."
        },
        "extendedLocations": {
          "type": "array",
          "description": "The extended locations.",
          "items": {
            "$ref": "#/definitions/ExtendedLocationOptions"
          },
          "x-ms-identifiers": []
        },
        "linkedOperationRules": {
          "type": "array",
          "description": "The linked operation rules.",
          "items": {
            "$ref": "#/definitions/LinkedOperationRule"
          },
          "x-ms-identifiers": []
        },
        "resourceDeletionPolicy": {
          "$ref": "#/definitions/ManifestResourceDeletionPolicy",
          "description": "The resource deletion policy."
        },
        "quotaRule": {
          "$ref": "#/definitions/QuotaRule",
          "description": "The quota rule."
        },
        "notifications": {
          "$ref": "#/definitions/Notification",
          "description": "The notifications."
        },
        "linkedNotificationRules": {
          "type": "array",
          "description": "The linked notification rules.",
          "items": {
            "$ref": "#/definitions/LinkedNotificationRule"
          },
          "x-ms-identifiers": []
        },
        "resourceProviderAuthorizationRules": {
          "$ref": "#/definitions/ResourceProviderAuthorizationRules",
          "description": "The resource provider authorization rules."
        }
      }
    },
    "ResourceTypeCategory": {
      "type": "string",
      "description": "The category.",
      "enum": [
        "None",
        "FreeForm",
        "Internal",
        "PureProxy"
      ],
      "x-ms-enum": {
        "name": "ResourceTypeCategory",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "FreeForm",
            "value": "FreeForm"
          },
          {
            "name": "Internal",
            "value": "Internal"
          },
          {
            "name": "PureProxy",
            "value": "PureProxy"
          }
        ]
      }
    },
    "ResourceTypeEndpoint": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type endpoint kind. This Metadata is also used by portal/tooling/etc to render different UX experiences for resources of the same type.",
          "default": "Managed",
          "enum": [
            "Managed",
            "Direct"
          ],
          "x-ms-enum": {
            "name": "ResourceTypeEndpointKind",
            "modelAsString": true,
            "values": [
              {
                "name": "Managed",
                "value": "Managed",
                "description": "Endpoint served by ProviderHub service"
              },
              {
                "name": "Direct",
                "value": "Direct",
                "description": "Endpoint served by the onboarded Resource Provider Service."
              }
            ]
          }
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether the endpoint is enabled."
        },
        "apiVersions": {
          "type": "array",
          "description": "The api versions.",
          "items": {
            "type": "string"
          }
        },
        "locations": {
          "type": "array",
          "description": "The locations.",
          "items": {
            "type": "string"
          }
        },
        "requiredFeatures": {
          "type": "array",
          "description": "The required features.",
          "items": {
            "type": "string"
          }
        },
        "featuresRule": {
          "$ref": "#/definitions/ResourceTypeEndpointFeaturesRule",
          "description": "The features rule."
        },
        "extensions": {
          "type": "array",
          "description": "The extensions.",
          "items": {
            "$ref": "#/definitions/ResourceTypeExtension"
          },
          "x-ms-identifiers": [
            "endpointUri"
          ]
        },
        "timeout": {
          "type": "string",
          "format": "duration",
          "description": "The timeout."
        },
        "endpointType": {
          "$ref": "#/definitions/EndpointTypeResourceType",
          "description": "The endpoint type."
        },
        "tokenAuthConfiguration": {
          "$ref": "#/definitions/TokenAuthConfiguration",
          "description": "The token auth configuration."
        },
        "skuLink": {
          "type": "string",
          "description": "The sku link."
        },
        "endpointUri": {
          "type": "string",
          "description": "The endpoint uri."
        },
        "apiVersion": {
          "type": "string",
          "description": "Api version."
        },
        "zones": {
          "type": "array",
          "description": "List of zones.",
          "items": {
            "type": "string"
          }
        },
        "dstsConfiguration": {
          "$ref": "#/definitions/ResourceTypeEndpointDstsConfiguration",
          "description": "The dsts configuration."
        },
        "dataBoundary": {
          "$ref": "#/definitions/DataBoundary",
          "description": "The data boundary."
        }
      }
    },
    "ResourceTypeEndpointBase": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether it's enabled."
        },
        "apiVersions": {
          "type": "array",
          "description": "The api versions.",
          "items": {
            "type": "string"
          }
        },
        "endpointUri": {
          "type": "string",
          "description": "The endpoint uri."
        },
        "locations": {
          "type": "array",
          "description": "The locations.",
          "items": {
            "type": "string"
          }
        },
        "requiredFeatures": {
          "type": "array",
          "description": "The required features.",
          "items": {
            "type": "string"
          }
        },
        "featuresRule": {
          "$ref": "#/definitions/ResourceTypeEndpointBaseFeaturesRule",
          "description": "The features rule."
        },
        "timeout": {
          "type": "string",
          "format": "duration",
          "description": "This is a TimeSpan property."
        },
        "endpointType": {
          "$ref": "#/definitions/EndpointType",
          "description": "The endpoint type."
        },
        "dstsConfiguration": {
          "$ref": "#/definitions/ResourceTypeEndpointBaseDstsConfiguration",
          "description": "The dsts configuration."
        },
        "skuLink": {
          "type": "string",
          "description": "The sku link."
        },
        "apiVersion": {
          "type": "string",
          "description": "The api version."
        },
        "zones": {
          "type": "array",
          "description": "The zones.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "enabled",
        "apiVersions",
        "endpointUri",
        "locations",
        "requiredFeatures",
        "featuresRule",
        "timeout",
        "endpointType",
        "dstsConfiguration",
        "skuLink",
        "apiVersion",
        "zones"
      ]
    },
    "ResourceTypeEndpointBaseDstsConfiguration": {
      "type": "object",
      "description": "The dsts configuration.",
      "allOf": [
        {
          "$ref": "#/definitions/DstsConfiguration"
        }
      ]
    },
    "ResourceTypeEndpointBaseFeaturesRule": {
      "type": "object",
      "description": "The features rule.",
      "allOf": [
        {
          "$ref": "#/definitions/FeaturesRule"
        }
      ]
    },
    "ResourceTypeEndpointDstsConfiguration": {
      "type": "object",
      "description": "The dsts configuration.",
      "allOf": [
        {
          "$ref": "#/definitions/DstsConfiguration"
        }
      ]
    },
    "ResourceTypeEndpointFeaturesRule": {
      "type": "object",
      "description": "The features rule.",
      "allOf": [
        {
          "$ref": "#/definitions/FeaturesRule"
        }
      ]
    },
    "ResourceTypeExtendedLocationPolicy": {
      "type": "string",
      "enum": [
        "NotSpecified",
        "All"
      ],
      "x-ms-enum": {
        "name": "ResourceTypeExtendedLocationPolicy",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "All",
            "value": "All"
          }
        ]
      }
    },
    "ResourceTypeExtension": {
      "type": "object",
      "properties": {
        "endpointUri": {
          "type": "string",
          "description": "The endpoint uri."
        },
        "extensionCategories": {
          "type": "array",
          "description": "The extension categories.",
          "items": {
            "$ref": "#/definitions/ExtensionCategory"
          }
        },
        "timeout": {
          "type": "string",
          "format": "duration",
          "description": "The timeout."
        }
      }
    },
    "ResourceTypeExtensionOptions": {
      "type": "object",
      "properties": {
        "resourceCreationBegin": {
          "$ref": "#/definitions/ResourceTypeExtensionOptionsResourceCreationBegin",
          "description": "Resource creation begin."
        }
      }
    },
    "ResourceTypeExtensionOptionsResourceCreationBegin": {
      "type": "object",
      "description": "Resource creation begin.",
      "allOf": [
        {
          "$ref": "#/definitions/ExtensionOptions"
        }
      ]
    },
    "ResourceTypeFeaturesRule": {
      "type": "object",
      "description": "The features rule.",
      "allOf": [
        {
          "$ref": "#/definitions/FeaturesRule"
        }
      ]
    },
    "ResourceTypeIdentityManagement": {
      "type": "object",
      "description": "The identity management.",
      "allOf": [
        {
          "$ref": "#/definitions/IdentityManagement"
        }
      ]
    },
    "ResourceTypeOnBehalfOfToken": {
      "type": "object",
      "properties": {
        "actionName": {
          "type": "string",
          "description": "The action name."
        },
        "lifeTime": {
          "type": "string",
          "description": "This is a TimeSpan property."
        }
      }
    },
    "ResourceTypeRegistration": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ResourceTypeRegistrationProperties"
        },
        "kind": {
          "type": "string",
          "description": "Resource type registration kind. This Metadata is also used by portal/tooling/etc to render different UX experiences for resources of the same type.",
          "default": "Managed",
          "enum": [
            "Managed",
            "Hybrid",
            "Direct"
          ],
          "x-ms-enum": {
            "name": "ResourceTypeRegistrationKind",
            "modelAsString": true,
            "values": [
              {
                "name": "Managed",
                "value": "Managed",
                "description": "Resource type served by the ProviderHub service."
              },
              {
                "name": "Hybrid",
                "value": "Hybrid",
                "description": "Resource type served by both the ProviderHub & the onboarded Resource Provider Services (i.e. The type has a mix of managed and direct endpoints)."
              },
              {
                "name": "Direct",
                "value": "Direct",
                "description": "Resource type served by the onboarded Resource Provider Service."
              }
            ]
          }
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ResourceTypeRegistrationArrayResponseWithContinuation": {
      "type": "object",
      "description": "Paged collection of ResourceTypeRegistration items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ResourceTypeRegistration items on this page",
          "items": {
            "$ref": "#/definitions/ResourceTypeRegistration"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ResourceTypeRegistrationProperties": {
      "type": "object",
      "properties": {
        "routingType": {
          "$ref": "#/definitions/RoutingType",
          "description": "The resource routing type."
        },
        "additionalOptions": {
          "$ref": "#/definitions/AdditionalOptionsResourceTypeRegistration",
          "description": "The additional options."
        },
        "crossTenantTokenValidation": {
          "$ref": "#/definitions/CrossTenantTokenValidation",
          "description": "The cross tenant token validation."
        },
        "regionality": {
          "$ref": "#/definitions/Regionality",
          "description": "The regionality."
        },
        "endpoints": {
          "type": "array",
          "description": "The extensions.",
          "items": {
            "$ref": "#/definitions/ResourceTypeEndpoint"
          },
          "x-ms-identifiers": []
        },
        "extensionOptions": {
          "$ref": "#/definitions/ResourceTypeRegistrationPropertiesExtensionOptions",
          "description": "The extension options."
        },
        "marketplaceType": {
          "$ref": "#/definitions/MarketplaceType",
          "description": "The marketplace type."
        },
        "swaggerSpecifications": {
          "type": "array",
          "description": "The swagger specifications.",
          "items": {
            "$ref": "#/definitions/SwaggerSpecification"
          },
          "x-ms-identifiers": [
            "swaggerSpecFolderUri"
          ]
        },
        "allowedUnauthorizedActions": {
          "type": "array",
          "description": "The allowed unauthorized actions.",
          "items": {
            "type": "string"
          }
        },
        "allowedUnauthorizedActionsExtensions": {
          "type": "array",
          "description": "The allowed unauthorized actions extensions.",
          "items": {
            "$ref": "#/definitions/AllowedUnauthorizedActionsExtension"
          }
        },
        "authorizationActionMappings": {
          "type": "array",
          "description": "The authorization action mappings",
          "items": {
            "$ref": "#/definitions/AuthorizationActionMapping"
          },
          "x-ms-identifiers": [
            "original"
          ]
        },
        "linkedAccessChecks": {
          "type": "array",
          "description": "The linked access checks.",
          "items": {
            "$ref": "#/definitions/LinkedAccessCheck"
          },
          "x-ms-identifiers": []
        },
        "defaultApiVersion": {
          "type": "string",
          "description": "The default api version."
        },
        "loggingRules": {
          "type": "array",
          "description": "The logging rules.",
          "items": {
            "$ref": "#/definitions/LoggingRule"
          },
          "x-ms-identifiers": []
        },
        "throttlingRules": {
          "type": "array",
          "description": "The throttling rules.",
          "items": {
            "$ref": "#/definitions/ThrottlingRule"
          },
          "x-ms-identifiers": []
        },
        "requiredFeatures": {
          "type": "array",
          "description": "The required features.",
          "items": {
            "type": "string"
          }
        },
        "featuresRule": {
          "$ref": "#/definitions/ResourceTypeRegistrationPropertiesFeaturesRule",
          "description": "The features rule."
        },
        "enableAsyncOperation": {
          "type": "boolean",
          "description": "Whether async operation is enabled."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "enableThirdPartyS2S": {
          "type": "boolean",
          "description": "Whether third party S2S is enabled."
        },
        "subscriptionLifecycleNotificationSpecifications": {
          "$ref": "#/definitions/ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications",
          "description": "The subscription lifecycle notification specifications."
        },
        "isPureProxy": {
          "type": "boolean",
          "description": "Whether it is pure proxy."
        },
        "identityManagement": {
          "$ref": "#/definitions/ResourceTypeRegistrationPropertiesIdentityManagement",
          "description": "The identity management."
        },
        "checkNameAvailabilitySpecifications": {
          "$ref": "#/definitions/ResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecifications",
          "description": "The check name availability specifications."
        },
        "disallowedActionVerbs": {
          "type": "array",
          "description": "The disallowed action verbs.",
          "items": {
            "type": "string"
          }
        },
        "serviceTreeInfos": {
          "type": "array",
          "description": "The service tree infos.",
          "items": {
            "$ref": "#/definitions/ServiceTreeInfo"
          },
          "x-ms-identifiers": []
        },
        "requestHeaderOptions": {
          "$ref": "#/definitions/ResourceTypeRegistrationPropertiesRequestHeaderOptions",
          "description": "The request header options."
        },
        "subscriptionStateRules": {
          "type": "array",
          "description": "The subscription state rules.",
          "items": {
            "$ref": "#/definitions/SubscriptionStateRule"
          },
          "x-ms-identifiers": []
        },
        "templateDeploymentOptions": {
          "$ref": "#/definitions/ResourceTypeRegistrationPropertiesTemplateDeploymentOptions",
          "description": "The template deployment options."
        },
        "extendedLocations": {
          "type": "array",
          "description": "The extended locations.",
          "items": {
            "$ref": "#/definitions/ExtendedLocationOptions"
          },
          "x-ms-identifiers": []
        },
        "resourceMovePolicy": {
          "$ref": "#/definitions/ResourceTypeRegistrationPropertiesResourceMovePolicy",
          "description": "The resource move policy."
        },
        "resourceDeletionPolicy": {
          "$ref": "#/definitions/ResourceDeletionPolicy",
          "description": "The resource deletion policy."
        },
        "resourceConcurrencyControlOptions": {
          "type": "object",
          "description": "The resource concurrency control options.",
          "additionalProperties": {
            "$ref": "#/definitions/ResourceConcurrencyControlOption"
          }
        },
        "resourceGraphConfiguration": {
          "$ref": "#/definitions/ResourceTypeRegistrationPropertiesResourceGraphConfiguration",
          "description": "The resource graph configuration."
        },
        "management": {
          "$ref": "#/definitions/ResourceTypeRegistrationPropertiesManagement",
          "description": "The resource provider management."
        },
        "openApiConfiguration": {
          "$ref": "#/definitions/OpenApiConfiguration",
          "description": "The open api configuration."
        },
        "onBehalfOfTokens": {
          "$ref": "#/definitions/ResourceTypeOnBehalfOfToken",
          "description": "The on behalf of tokens."
        },
        "category": {
          "$ref": "#/definitions/ResourceTypeCategory",
          "description": "The category."
        },
        "resourceValidation": {
          "$ref": "#/definitions/ResourceValidation",
          "description": "The resource validation."
        },
        "disallowedEndUserOperations": {
          "type": "array",
          "description": "The disallowed end user operations.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "metadata": {
          "type": "object",
          "description": "The metadata.",
          "additionalProperties": {
            "type": "object"
          }
        },
        "skuLink": {
          "type": "string",
          "description": "The sku link."
        },
        "quotaRule": {
          "$ref": "#/definitions/QuotaRule",
          "description": "The quota rule."
        },
        "notifications": {
          "$ref": "#/definitions/Notification",
          "description": "The notifications."
        },
        "linkedNotificationRules": {
          "type": "array",
          "description": "The linked notification rules.",
          "items": {
            "$ref": "#/definitions/LinkedNotificationRule"
          },
          "x-ms-identifiers": []
        },
        "resourceProviderAuthorizationRules": {
          "$ref": "#/definitions/ResourceProviderAuthorizationRules",
          "description": "The resource provider authorization rules."
        },
        "tokenAuthConfiguration": {
          "$ref": "#/definitions/TokenAuthConfiguration",
          "description": "The token auth configuration."
        },
        "templateDeploymentPolicy": {
          "$ref": "#/definitions/ResourceTypeRegistrationPropertiesTemplateDeploymentPolicy",
          "description": "The template deployment policy."
        },
        "allowEmptyRoleAssignments": {
          "type": "boolean",
          "description": "The allow empty role assignments."
        },
        "policyExecutionType": {
          "$ref": "#/definitions/PolicyExecutionType",
          "description": "The policy execution type."
        },
        "availabilityZoneRule": {
          "$ref": "#/definitions/ResourceTypeRegistrationPropertiesAvailabilityZoneRule",
          "description": "The availability zone rule."
        },
        "dstsConfiguration": {
          "$ref": "#/definitions/ResourceTypeRegistrationPropertiesDstsConfiguration",
          "description": "The dsts configuration."
        },
        "asyncTimeoutRules": {
          "type": "array",
          "description": "Async timeout rules",
          "items": {
            "$ref": "#/definitions/AsyncTimeoutRule"
          },
          "x-ms-identifiers": []
        },
        "commonApiVersions": {
          "type": "array",
          "description": "Common API versions for the resource type.",
          "items": {
            "type": "string"
          }
        },
        "apiProfiles": {
          "type": "array",
          "description": "The api profiles.",
          "items": {
            "$ref": "#/definitions/ApiProfile"
          },
          "x-ms-identifiers": [
            "profileVersion",
            "apiVersion"
          ]
        },
        "linkedOperationRules": {
          "type": "array",
          "description": "The linked operation rules.",
          "items": {
            "$ref": "#/definitions/LinkedOperationRule"
          },
          "x-ms-identifiers": [
            "linkedOperation",
            "linkedAction"
          ]
        },
        "legacyName": {
          "type": "string",
          "description": "The legacy name."
        },
        "legacyNames": {
          "type": "array",
          "description": "The legacy names.",
          "items": {
            "type": "string"
          }
        },
        "allowedTemplateDeploymentReferenceActions": {
          "type": "array",
          "description": "Allowed template deployment reference actions.",
          "items": {
            "type": "string"
          }
        },
        "legacyPolicy": {
          "$ref": "#/definitions/ResourceTypeRegistrationPropertiesLegacyPolicy",
          "description": "The legacy policy."
        },
        "manifestLink": {
          "type": "string",
          "description": "Manifest link."
        },
        "capacityRule": {
          "$ref": "#/definitions/ResourceTypeRegistrationPropertiesCapacityRule",
          "description": "Capacity rule."
        },
        "marketplaceOptions": {
          "$ref": "#/definitions/ResourceTypeRegistrationPropertiesMarketplaceOptions",
          "description": "Marketplace options."
        },
        "allowedResourceNames": {
          "type": "array",
          "description": "The allowed resource names.",
          "items": {
            "$ref": "#/definitions/AllowedResourceName"
          },
          "x-ms-identifiers": [
            "name",
            "getActionVerb"
          ]
        },
        "resourceCache": {
          "$ref": "#/definitions/ResourceTypeRegistrationPropertiesResourceCache",
          "description": "Resource cache options."
        },
        "resourceQueryManagement": {
          "$ref": "#/definitions/ResourceTypeRegistrationPropertiesResourceQueryManagement",
          "description": "Resource query management options."
        },
        "supportsTags": {
          "type": "boolean",
          "description": "Whether tags are supported."
        },
        "resourceManagementOptions": {
          "$ref": "#/definitions/ResourceTypeRegistrationPropertiesResourceManagementOptions",
          "description": "Resource management options."
        },
        "groupingTag": {
          "type": "string",
          "description": "Grouping tag."
        },
        "addResourceListTargetLocations": {
          "type": "boolean",
          "description": "Add resource list target locations?"
        },
        "resourceTypeCommonAttributeManagement": {
          "$ref": "#/definitions/ResourceTypeRegistrationPropertiesResourceTypeCommonAttributeManagement",
          "description": "Resource type common attribute management."
        },
        "routingRule": {
          "$ref": "#/definitions/ResourceTypeRegistrationPropertiesRoutingRule",
          "description": "Routing rule."
        },
        "frontdoorRequestMode": {
          "$ref": "#/definitions/FrontdoorRequestMode",
          "description": "The frontdoor request mode."
        },
        "resourceSubType": {
          "$ref": "#/definitions/ResourceSubType",
          "description": "The resource sub type."
        },
        "asyncOperationResourceTypeName": {
          "type": "string",
          "description": "The async operation resource type name."
        }
      }
    },
    "ResourceTypeRegistrationPropertiesAvailabilityZoneRule": {
      "type": "object",
      "description": "The availability zone rule.",
      "properties": {
        "availabilityZonePolicy": {
          "$ref": "#/definitions/AvailabilityZonePolicy"
        }
      }
    },
    "ResourceTypeRegistrationPropertiesCapacityRule": {
      "type": "object",
      "description": "Capacity rule.",
      "properties": {
        "capacityPolicy": {
          "$ref": "#/definitions/CapacityPolicy",
          "description": "Capacity policy."
        },
        "skuAlias": {
          "type": "string",
          "description": "Sku alias"
        }
      }
    },
    "ResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecifications": {
      "type": "object",
      "description": "The check name availability specifications.",
      "allOf": [
        {
          "$ref": "#/definitions/CheckNameAvailabilitySpecifications"
        }
      ]
    },
    "ResourceTypeRegistrationPropertiesDstsConfiguration": {
      "type": "object",
      "description": "The dsts configuration.",
      "allOf": [
        {
          "$ref": "#/definitions/DstsConfiguration"
        }
      ]
    },
    "ResourceTypeRegistrationPropertiesExtensionOptions": {
      "type": "object",
      "description": "The extension options.",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceTypeExtensionOptions"
        }
      ]
    },
    "ResourceTypeRegistrationPropertiesFeaturesRule": {
      "type": "object",
      "description": "The features rule.",
      "allOf": [
        {
          "$ref": "#/definitions/FeaturesRule"
        }
      ]
    },
    "ResourceTypeRegistrationPropertiesIdentityManagement": {
      "type": "object",
      "description": "The identity management.",
      "allOf": [
        {
          "$ref": "#/definitions/IdentityManagementProperties"
        }
      ]
    },
    "ResourceTypeRegistrationPropertiesLegacyPolicy": {
      "type": "object",
      "description": "The legacy policy.",
      "properties": {
        "disallowedLegacyOperations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LegacyOperation"
          },
          "x-ms-identifiers": []
        },
        "disallowedConditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LegacyDisallowedCondition"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ResourceTypeRegistrationPropertiesManagement": {
      "type": "object",
      "description": "The resource provider management.",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceProviderManagement"
        }
      ]
    },
    "ResourceTypeRegistrationPropertiesMarketplaceOptions": {
      "type": "object",
      "description": "Marketplace options.",
      "properties": {
        "addOnPlanConversionAllowed": {
          "type": "boolean",
          "description": "Add-on plan conversion allowed."
        }
      }
    },
    "ResourceTypeRegistrationPropertiesRequestHeaderOptions": {
      "type": "object",
      "description": "The request header options.",
      "allOf": [
        {
          "$ref": "#/definitions/RequestHeaderOptions"
        }
      ]
    },
    "ResourceTypeRegistrationPropertiesResourceCache": {
      "type": "object",
      "description": "Resource cache options.",
      "properties": {
        "enableResourceCache": {
          "type": "boolean",
          "description": "Enable resource cache."
        },
        "resourceCacheExpirationTimespan": {
          "type": "string",
          "description": "Resource cache expiration timespan. This is a TimeSpan property."
        }
      }
    },
    "ResourceTypeRegistrationPropertiesResourceGraphConfiguration": {
      "type": "object",
      "description": "The resource graph configuration.",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceGraphConfiguration"
        }
      ]
    },
    "ResourceTypeRegistrationPropertiesResourceManagementOptions": {
      "type": "object",
      "description": "Resource management options.",
      "properties": {
        "batchProvisioningSupport": {
          "$ref": "#/definitions/ResourceTypeRegistrationPropertiesResourceManagementOptionsBatchProvisioningSupport",
          "description": "Batch provisioning support."
        },
        "deleteDependencies": {
          "type": "array",
          "description": "Delete dependencies.",
          "items": {
            "$ref": "#/definitions/DeleteDependency"
          },
          "x-ms-identifiers": [
            "linkedType",
            "linkedProperty",
            "requiredFeatures"
          ]
        },
        "nestedProvisioningSupport": {
          "$ref": "#/definitions/ResourceTypeRegistrationPropertiesResourceManagementOptionsNestedProvisioningSupport",
          "description": "Nested provisioning support."
        }
      }
    },
    "ResourceTypeRegistrationPropertiesResourceManagementOptionsBatchProvisioningSupport": {
      "type": "object",
      "description": "Batch provisioning support.",
      "properties": {
        "supportedOperations": {
          "$ref": "#/definitions/SupportedOperations",
          "description": "Supported operations."
        }
      }
    },
    "ResourceTypeRegistrationPropertiesResourceManagementOptionsNestedProvisioningSupport": {
      "type": "object",
      "description": "Nested provisioning support.",
      "properties": {
        "minimumApiVersion": {
          "type": "string",
          "description": "Minimum API version."
        }
      }
    },
    "ResourceTypeRegistrationPropertiesResourceMovePolicy": {
      "type": "object",
      "description": "The resource move policy.",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceMovePolicy"
        }
      ]
    },
    "ResourceTypeRegistrationPropertiesResourceQueryManagement": {
      "type": "object",
      "description": "Resource query management options.",
      "properties": {
        "filterOption": {
          "$ref": "#/definitions/FilterOption",
          "description": "Filter option."
        }
      }
    },
    "ResourceTypeRegistrationPropertiesResourceTypeCommonAttributeManagement": {
      "type": "object",
      "description": "Resource type common attribute management.",
      "properties": {
        "commonApiVersionsMergeMode": {
          "$ref": "#/definitions/CommonApiVersionsMergeMode",
          "description": "Common api versions merge mode."
        }
      }
    },
    "ResourceTypeRegistrationPropertiesRoutingRule": {
      "type": "object",
      "description": "Routing rule.",
      "properties": {
        "hostResourceType": {
          "type": "string",
          "description": "Hosted resource type."
        }
      }
    },
    "ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications": {
      "type": "object",
      "description": "The subscription lifecycle notification specifications.",
      "allOf": [
        {
          "$ref": "#/definitions/SubscriptionLifecycleNotificationSpecifications"
        }
      ]
    },
    "ResourceTypeRegistrationPropertiesTemplateDeploymentOptions": {
      "type": "object",
      "description": "The template deployment options.",
      "allOf": [
        {
          "$ref": "#/definitions/TemplateDeploymentOptions"
        }
      ]
    },
    "ResourceTypeRegistrationPropertiesTemplateDeploymentPolicy": {
      "type": "object",
      "description": "The template deployment policy.",
      "allOf": [
        {
          "$ref": "#/definitions/TemplateDeploymentPolicy"
        }
      ]
    },
    "ResourceTypeRequestHeaderOptions": {
      "type": "object",
      "description": "The request header options.",
      "allOf": [
        {
          "$ref": "#/definitions/RequestHeaderOptions"
        }
      ]
    },
    "ResourceTypeSku": {
      "type": "object",
      "properties": {
        "skuSettings": {
          "type": "array",
          "description": "The sku settings.",
          "items": {
            "$ref": "#/definitions/SkuSetting"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        }
      },
      "required": [
        "skuSettings"
      ]
    },
    "ResourceTypeTemplateDeploymentPolicy": {
      "type": "object",
      "description": "The template deployment policy.",
      "allOf": [
        {
          "$ref": "#/definitions/TemplateDeploymentPolicy"
        }
      ]
    },
    "ResourceValidation": {
      "type": "string",
      "description": "The resource validation.",
      "enum": [
        "NotSpecified",
        "ReservedWords",
        "ProfaneWords"
      ],
      "x-ms-enum": {
        "name": "ResourceValidation",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "ReservedWords",
            "value": "ReservedWords"
          },
          {
            "name": "ProfaneWords",
            "value": "ProfaneWords"
          }
        ]
      }
    },
    "Role": {
      "type": "string",
      "description": "The ownership role the application has on the resource types. The service owner role gives the application owner permissions. The limited owner role gives elevated permissions but does not allow all the permissions of a service owner, such as read/write on internal metadata.",
      "enum": [
        "ServiceOwner",
        "LimitedOwner"
      ],
      "x-ms-enum": {
        "name": "Role",
        "modelAsString": true,
        "values": [
          {
            "name": "ServiceOwner",
            "value": "ServiceOwner"
          },
          {
            "name": "LimitedOwner",
            "value": "LimitedOwner"
          }
        ]
      }
    },
    "RolloutStatusBase": {
      "type": "object",
      "properties": {
        "completedRegions": {
          "type": "array",
          "description": "The completed regions.",
          "items": {
            "type": "string"
          }
        },
        "failedOrSkippedRegions": {
          "type": "object",
          "description": "The failed or skipped regions.",
          "additionalProperties": {
            "$ref": "#/definitions/ExtendedErrorInfo"
          }
        }
      }
    },
    "RoutingType": {
      "type": "string",
      "description": "The routing type.",
      "enum": [
        "Default",
        "ProxyOnly",
        "HostBased",
        "Extension",
        "Tenant",
        "Fanout",
        "LocationBased",
        "Failover",
        "CascadeExtension",
        "ChildFanout",
        "CascadeAuthorizedExtension",
        "BypassEndpointSelectionOptimization",
        "LocationMapping",
        "ServiceFanout"
      ],
      "x-ms-enum": {
        "name": "RoutingType",
        "modelAsString": true,
        "values": [
          {
            "name": "Default",
            "value": "Default",
            "description": "The resource routing type is default."
          },
          {
            "name": "ProxyOnly",
            "value": "ProxyOnly",
            "description": "The resource routing type is proxy only."
          },
          {
            "name": "HostBased",
            "value": "HostBased",
            "description": "The resource routing type is host based."
          },
          {
            "name": "Extension",
            "value": "Extension",
            "description": "The resource routing type is extension."
          },
          {
            "name": "Tenant",
            "value": "Tenant",
            "description": "The resource routing type is tenant."
          },
          {
            "name": "Fanout",
            "value": "Fanout",
            "description": "The resource routing type is fanout."
          },
          {
            "name": "LocationBased",
            "value": "LocationBased",
            "description": "The resource routing type is location based."
          },
          {
            "name": "Failover",
            "value": "Failover",
            "description": "The resource routing type is failover."
          },
          {
            "name": "CascadeExtension",
            "value": "CascadeExtension",
            "description": "The resource routing type is cascade extension."
          },
          {
            "name": "ChildFanout",
            "value": "ChildFanout",
            "description": "The resource routing type is child fanout."
          },
          {
            "name": "CascadeAuthorizedExtension",
            "value": "CascadeAuthorizedExtension",
            "description": "The resource routing type is cascade authorized extension."
          },
          {
            "name": "BypassEndpointSelectionOptimization",
            "value": "BypassEndpointSelectionOptimization",
            "description": "The resource routing type is bypass endpoint selection optimization."
          },
          {
            "name": "LocationMapping",
            "value": "LocationMapping",
            "description": "The resource routing type is location mapping."
          },
          {
            "name": "ServiceFanout",
            "value": "ServiceFanout",
            "description": "The resource routing type is service fanout."
          }
        ]
      }
    },
    "ServerFailureResponseMessageType": {
      "type": "string",
      "description": "Type of server failure response message.",
      "enum": [
        "NotSpecified",
        "OutageReporting"
      ],
      "x-ms-enum": {
        "name": "ServerFailureResponseMessageType",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "OutageReporting",
            "value": "OutageReporting"
          }
        ]
      }
    },
    "ServiceClientOptionsType": {
      "type": "string",
      "enum": [
        "NotSpecified",
        "DisableAutomaticDecompression"
      ],
      "x-ms-enum": {
        "name": "ServiceClientOptionsType",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "DisableAutomaticDecompression",
            "value": "DisableAutomaticDecompression"
          }
        ]
      }
    },
    "ServiceFeatureFlagAction": {
      "type": "string",
      "description": "The service feature flag.",
      "enum": [
        "DoNotCreate",
        "Create"
      ],
      "x-ms-enum": {
        "name": "ServiceFeatureFlagAction",
        "modelAsString": true,
        "values": [
          {
            "name": "DoNotCreate",
            "value": "DoNotCreate"
          },
          {
            "name": "Create",
            "value": "Create"
          }
        ]
      }
    },
    "ServiceStatus": {
      "type": "string",
      "description": "The status.",
      "enum": [
        "Active",
        "Inactive"
      ],
      "x-ms-enum": {
        "name": "ServiceStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Active",
            "value": "Active"
          },
          {
            "name": "Inactive",
            "value": "Inactive"
          }
        ]
      }
    },
    "ServiceTreeInfo": {
      "type": "object",
      "properties": {
        "serviceId": {
          "type": "string",
          "description": "The service id."
        },
        "componentId": {
          "type": "string",
          "description": "The component id."
        },
        "readiness": {
          "$ref": "#/definitions/Readiness",
          "description": "The readiness."
        }
      }
    },
    "SignedRequestScope": {
      "type": "string",
      "description": "The signed request scope.",
      "enum": [
        "ResourceUri",
        "Endpoint"
      ],
      "x-ms-enum": {
        "name": "SignedRequestScope",
        "modelAsString": true,
        "values": [
          {
            "name": "ResourceUri",
            "value": "ResourceUri"
          },
          {
            "name": "Endpoint",
            "value": "Endpoint"
          }
        ]
      }
    },
    "SkipNotifications": {
      "type": "string",
      "description": "Whether notifications should be skipped.",
      "enum": [
        "Unspecified",
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "SkipNotifications",
        "modelAsString": true,
        "values": [
          {
            "name": "Unspecified",
            "value": "Unspecified"
          },
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "SkuCapability": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name."
        },
        "value": {
          "type": "string",
          "description": "The value."
        }
      },
      "required": [
        "name",
        "value"
      ]
    },
    "SkuCapacity": {
      "type": "object",
      "properties": {
        "minimum": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum."
        },
        "maximum": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum."
        },
        "default": {
          "type": "integer",
          "format": "int32",
          "description": "The default."
        },
        "scaleType": {
          "$ref": "#/definitions/SkuScaleType",
          "description": "The scale type."
        }
      },
      "required": [
        "minimum"
      ]
    },
    "SkuCost": {
      "type": "object",
      "properties": {
        "meterId": {
          "type": "string",
          "description": "The meter id."
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "description": "The quantity."
        },
        "extendedUnit": {
          "type": "string",
          "description": "The extended unit."
        }
      },
      "required": [
        "meterId"
      ]
    },
    "SkuLocationInfo": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "The location."
        },
        "zones": {
          "type": "array",
          "description": "The zones.",
          "items": {
            "type": "string"
          }
        },
        "zoneDetails": {
          "type": "array",
          "description": "The zone details.",
          "items": {
            "$ref": "#/definitions/SkuZoneDetail"
          },
          "x-ms-identifiers": []
        },
        "extendedLocations": {
          "type": "array",
          "description": "The extended locations.",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "$ref": "#/definitions/ExtendedLocationType",
          "description": "The type."
        }
      },
      "required": [
        "location"
      ]
    },
    "SkuResource": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SkuResourceProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SkuResourceArrayResponseWithContinuation": {
      "type": "object",
      "description": "Paged collection of SkuResource items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SkuResource items on this page",
          "items": {
            "$ref": "#/definitions/SkuResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SkuResourceProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceTypeSku"
        }
      ]
    },
    "SkuScaleType": {
      "type": "string",
      "description": "The scale type.",
      "enum": [
        "None",
        "Manual",
        "Automatic"
      ],
      "x-ms-enum": {
        "name": "SkuScaleType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "Manual",
            "value": "Manual"
          },
          {
            "name": "Automatic",
            "value": "Automatic"
          }
        ]
      }
    },
    "SkuSetting": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name."
        },
        "tier": {
          "type": "string",
          "description": "The tier."
        },
        "size": {
          "type": "string",
          "description": "The size."
        },
        "family": {
          "type": "string",
          "description": "The family."
        },
        "kind": {
          "type": "string",
          "description": "The kind."
        },
        "locations": {
          "type": "array",
          "description": "The locations.",
          "items": {
            "type": "string"
          }
        },
        "locationInfo": {
          "type": "array",
          "description": "The location info.",
          "items": {
            "$ref": "#/definitions/SkuLocationInfo"
          },
          "x-ms-identifiers": [
            "location"
          ]
        },
        "requiredQuotaIds": {
          "type": "array",
          "description": "The required quota ids.",
          "items": {
            "type": "string"
          }
        },
        "requiredFeatures": {
          "type": "array",
          "description": "The required features.",
          "items": {
            "type": "string"
          }
        },
        "capacity": {
          "$ref": "#/definitions/SkuSettingCapacity",
          "description": "The capacity."
        },
        "costs": {
          "type": "array",
          "description": "The costs.",
          "items": {
            "$ref": "#/definitions/SkuCost"
          },
          "x-ms-identifiers": [
            "meterId"
          ]
        },
        "capabilities": {
          "type": "array",
          "description": "The capabilities.",
          "items": {
            "$ref": "#/definitions/SkuCapability"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuSettingCapacity": {
      "type": "object",
      "description": "The capacity.",
      "allOf": [
        {
          "$ref": "#/definitions/SkuCapacity"
        }
      ]
    },
    "SkuZoneDetail": {
      "type": "object",
      "properties": {
        "name": {
          "type": "array",
          "description": "The name.",
          "items": {
            "type": "string"
          }
        },
        "capabilities": {
          "type": "array",
          "description": "The capabilities.",
          "items": {
            "$ref": "#/definitions/SkuCapability"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "SubscriberSetting": {
      "type": "object",
      "properties": {
        "filterRules": {
          "type": "array",
          "description": "The filter rules.",
          "items": {
            "$ref": "#/definitions/FilterRule"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "SubscriptionLifecycleNotificationSpecifications": {
      "type": "object",
      "properties": {
        "subscriptionStateOverrideActions": {
          "type": "array",
          "description": "The subscription state override actions.",
          "items": {
            "$ref": "#/definitions/SubscriptionStateOverrideAction"
          },
          "x-ms-identifiers": []
        },
        "softDeleteTTL": {
          "type": "string",
          "format": "duration",
          "description": "The soft delete TTL."
        }
      }
    },
    "SubscriptionNotificationOperation": {
      "type": "string",
      "description": "The action.",
      "enum": [
        "NotDefined",
        "DeleteAllResources",
        "SoftDeleteAllResources",
        "NoOp",
        "BillingCancellation",
        "UndoSoftDelete"
      ],
      "x-ms-enum": {
        "name": "SubscriptionNotificationOperation",
        "modelAsString": true,
        "values": [
          {
            "name": "NotDefined",
            "value": "NotDefined"
          },
          {
            "name": "DeleteAllResources",
            "value": "DeleteAllResources"
          },
          {
            "name": "SoftDeleteAllResources",
            "value": "SoftDeleteAllResources"
          },
          {
            "name": "NoOp",
            "value": "NoOp"
          },
          {
            "name": "BillingCancellation",
            "value": "BillingCancellation"
          },
          {
            "name": "UndoSoftDelete",
            "value": "UndoSoftDelete"
          }
        ]
      }
    },
    "SubscriptionReregistrationResult": {
      "type": "string",
      "description": "The subscription reregistration result.",
      "enum": [
        "NotApplicable",
        "ConditionalUpdate",
        "ForcedUpdate",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "SubscriptionReregistrationResult",
        "modelAsString": true,
        "values": [
          {
            "name": "NotApplicable",
            "value": "NotApplicable"
          },
          {
            "name": "ConditionalUpdate",
            "value": "ConditionalUpdate"
          },
          {
            "name": "ForcedUpdate",
            "value": "ForcedUpdate"
          },
          {
            "name": "Failed",
            "value": "Failed"
          }
        ]
      }
    },
    "SubscriptionState": {
      "type": "string",
      "description": "The subscription state.",
      "enum": [
        "NotDefined",
        "Enabled",
        "Warned",
        "PastDue",
        "Disabled",
        "Deleted"
      ],
      "x-ms-enum": {
        "name": "SubscriptionState",
        "modelAsString": true,
        "values": [
          {
            "name": "NotDefined",
            "value": "NotDefined"
          },
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Warned",
            "value": "Warned"
          },
          {
            "name": "PastDue",
            "value": "PastDue"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          },
          {
            "name": "Deleted",
            "value": "Deleted"
          }
        ]
      }
    },
    "SubscriptionStateOverrideAction": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/SubscriptionTransitioningState",
          "description": "The state."
        },
        "action": {
          "$ref": "#/definitions/SubscriptionNotificationOperation",
          "description": "The action."
        }
      },
      "required": [
        "state",
        "action"
      ]
    },
    "SubscriptionStateRule": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/SubscriptionState",
          "description": "The subscription state."
        },
        "allowedActions": {
          "type": "array",
          "description": "The allowed actions.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SubscriptionTransitioningState": {
      "type": "string",
      "description": "The state.",
      "enum": [
        "Registered",
        "Unregistered",
        "Warned",
        "Suspended",
        "Deleted",
        "WarnedToRegistered",
        "WarnedToSuspended",
        "WarnedToDeleted",
        "WarnedToUnregistered",
        "SuspendedToRegistered",
        "SuspendedToWarned",
        "SuspendedToDeleted",
        "SuspendedToUnregistered"
      ],
      "x-ms-enum": {
        "name": "SubscriptionTransitioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Registered",
            "value": "Registered"
          },
          {
            "name": "Unregistered",
            "value": "Unregistered"
          },
          {
            "name": "Warned",
            "value": "Warned"
          },
          {
            "name": "Suspended",
            "value": "Suspended"
          },
          {
            "name": "Deleted",
            "value": "Deleted"
          },
          {
            "name": "WarnedToRegistered",
            "value": "WarnedToRegistered"
          },
          {
            "name": "WarnedToSuspended",
            "value": "WarnedToSuspended"
          },
          {
            "name": "WarnedToDeleted",
            "value": "WarnedToDeleted"
          },
          {
            "name": "WarnedToUnregistered",
            "value": "WarnedToUnregistered"
          },
          {
            "name": "SuspendedToRegistered",
            "value": "SuspendedToRegistered"
          },
          {
            "name": "SuspendedToWarned",
            "value": "SuspendedToWarned"
          },
          {
            "name": "SuspendedToDeleted",
            "value": "SuspendedToDeleted"
          },
          {
            "name": "SuspendedToUnregistered",
            "value": "SuspendedToUnregistered"
          }
        ]
      }
    },
    "SupportedOperations": {
      "type": "string",
      "description": "Supported operations.",
      "enum": [
        "NotSpecified",
        "Get",
        "Delete"
      ],
      "x-ms-enum": {
        "name": "SupportedOperations",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "Get",
            "value": "Get"
          },
          {
            "name": "Delete",
            "value": "Delete"
          }
        ]
      }
    },
    "SwaggerSpecification": {
      "type": "object",
      "properties": {
        "apiVersions": {
          "type": "array",
          "description": "The api versions.",
          "items": {
            "type": "string"
          }
        },
        "swaggerSpecFolderUri": {
          "type": "string",
          "description": "The swagger spec folder uri."
        }
      }
    },
    "TemplateDeploymentCapabilities": {
      "type": "string",
      "description": "The capabilities.",
      "enum": [
        "Default",
        "Preflight"
      ],
      "x-ms-enum": {
        "name": "TemplateDeploymentCapabilities",
        "modelAsString": true,
        "values": [
          {
            "name": "Default",
            "value": "Default"
          },
          {
            "name": "Preflight",
            "value": "Preflight"
          }
        ]
      }
    },
    "TemplateDeploymentOptions": {
      "type": "object",
      "properties": {
        "preflightSupported": {
          "type": "boolean",
          "description": "Whether preflight is supported."
        },
        "preflightOptions": {
          "type": "array",
          "description": "The preflight options.",
          "items": {
            "$ref": "#/definitions/PreflightOption"
          }
        }
      }
    },
    "TemplateDeploymentPolicy": {
      "type": "object",
      "properties": {
        "capabilities": {
          "$ref": "#/definitions/TemplateDeploymentCapabilities",
          "description": "The capabilities."
        },
        "preflightOptions": {
          "$ref": "#/definitions/TemplateDeploymentPreflightOptions",
          "description": "The preflight options."
        },
        "preflightNotifications": {
          "$ref": "#/definitions/TemplateDeploymentPreflightNotifications",
          "description": "The preflight notifications."
        }
      },
      "required": [
        "capabilities",
        "preflightOptions"
      ]
    },
    "TemplateDeploymentPreflightNotifications": {
      "type": "string",
      "description": "The preflight notifications.",
      "enum": [
        "None",
        "UnregisteredSubscriptions"
      ],
      "x-ms-enum": {
        "name": "TemplateDeploymentPreflightNotifications",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "UnregisteredSubscriptions",
            "value": "UnregisteredSubscriptions"
          }
        ]
      }
    },
    "TemplateDeploymentPreflightOptions": {
      "type": "string",
      "description": "The preflight options.",
      "enum": [
        "None",
        "ValidationRequests",
        "DeploymentRequests",
        "TestOnly",
        "RegisteredOnly"
      ],
      "x-ms-enum": {
        "name": "TemplateDeploymentPreflightOptions",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "ValidationRequests",
            "value": "ValidationRequests"
          },
          {
            "name": "DeploymentRequests",
            "value": "DeploymentRequests"
          },
          {
            "name": "TestOnly",
            "value": "TestOnly"
          },
          {
            "name": "RegisteredOnly",
            "value": "RegisteredOnly"
          }
        ]
      }
    },
    "ThirdPartyExtension": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of third party extension."
        }
      }
    },
    "ThirdPartyProviderAuthorization": {
      "type": "object",
      "properties": {
        "authorizations": {
          "type": "array",
          "description": "The authorizations.",
          "items": {
            "$ref": "#/definitions/LightHouseAuthorization"
          },
          "x-ms-identifiers": []
        },
        "managedByTenantId": {
          "type": "string",
          "description": "The managed by tenant id."
        }
      }
    },
    "ThrottlingMetric": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/ThrottlingMetricType",
          "description": "The throttling metric type"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "The limit."
        },
        "interval": {
          "type": "string",
          "format": "duration",
          "description": "The interval."
        }
      },
      "required": [
        "type",
        "limit"
      ]
    },
    "ThrottlingMetricType": {
      "type": "string",
      "description": "The throttling metric type",
      "enum": [
        "NotSpecified",
        "NumberOfRequests",
        "NumberOfResources"
      ],
      "x-ms-enum": {
        "name": "ThrottlingMetricType",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "NumberOfRequests",
            "value": "NumberOfRequests"
          },
          {
            "name": "NumberOfResources",
            "value": "NumberOfResources"
          }
        ]
      }
    },
    "ThrottlingRule": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "description": "The action."
        },
        "metrics": {
          "type": "array",
          "description": "The metrics.",
          "items": {
            "$ref": "#/definitions/ThrottlingMetric"
          },
          "x-ms-identifiers": []
        },
        "requiredFeatures": {
          "type": "array",
          "description": "The required features.",
          "items": {
            "type": "string"
          }
        },
        "applicationId": {
          "type": "array",
          "description": "The application id.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "action",
        "metrics"
      ]
    },
    "TokenAuthConfiguration": {
      "type": "object",
      "properties": {
        "authenticationScheme": {
          "$ref": "#/definitions/AuthenticationScheme",
          "description": "The authentication scheme."
        },
        "signedRequestScope": {
          "$ref": "#/definitions/SignedRequestScope",
          "description": "The signed request scope."
        },
        "disableCertificateAuthenticationFallback": {
          "type": "boolean",
          "description": "Whether certification authentication fallback is disabled."
        }
      }
    },
    "TrafficRegionCategory": {
      "type": "string",
      "description": "The next traffic region.",
      "enum": [
        "NotSpecified",
        "Canary",
        "LowTraffic",
        "MediumTraffic",
        "HighTraffic",
        "None",
        "RestOfTheWorldGroupOne",
        "RestOfTheWorldGroupTwo"
      ],
      "x-ms-enum": {
        "name": "TrafficRegionCategory",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "Canary",
            "value": "Canary"
          },
          {
            "name": "LowTraffic",
            "value": "LowTraffic"
          },
          {
            "name": "MediumTraffic",
            "value": "MediumTraffic"
          },
          {
            "name": "HighTraffic",
            "value": "HighTraffic"
          },
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "RestOfTheWorldGroupOne",
            "value": "RestOfTheWorldGroupOne"
          },
          {
            "name": "RestOfTheWorldGroupTwo",
            "value": "RestOfTheWorldGroupTwo"
          }
        ]
      }
    },
    "TrafficRegionRolloutConfiguration": {
      "type": "object",
      "properties": {
        "waitDuration": {
          "type": "string",
          "format": "duration",
          "description": "The wait duration."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrafficRegions"
        }
      ]
    },
    "TrafficRegions": {
      "type": "object",
      "properties": {
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TypedErrorInfo": {
      "type": "object",
      "description": "Error information.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of the error."
        },
        "info": {
          "type": "object",
          "description": "The error information.",
          "readOnly": true
        }
      },
      "required": [
        "type"
      ]
    }
  },
  "parameters": {}
}
