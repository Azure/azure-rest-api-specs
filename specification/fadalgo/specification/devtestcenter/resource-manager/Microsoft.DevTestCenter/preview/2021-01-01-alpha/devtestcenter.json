{
  "swagger": "2.0",
  "info": {
    "version": "2021-01-01-alpha",
    "title": "DevTestCenter",
    "description": "DevTestCenter provider"
  },
  "host": "centralus.api-dogfood.resources.windows-int.net",
  "schemes": ["https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "security": [
    {
      "azure_auth": ["user_impersonation"]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevTestCenter/organizations": {
      "get": {
        "tags": ["Organization"],
        "description": "Lists all organizations in a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "operationId": "Organizations_ListBySubscription",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OrganizationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Organizations_ListBySubscription": {
            "$ref": "./examples/Organizations_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/OrganizationListResult"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestCenter/organizations": {
      "get": {
        "tags": ["Organization"],
        "description": "Lists all organizations in a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "operationId": "Organizations_ListByResourceGroup",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OrganizationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Organizations_ListByResourceGroup": {
            "$ref": "./examples/Organizations_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/OrganizationListResult"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestCenter/organizations/{organization}": {
      "get": {
        "tags": ["Organization"],
        "description": "Gets an organization.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          }
        ],
        "operationId": "Organizations_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Organizations_Get": {
            "$ref": "./examples/Organizations_Get.json"
          }
        }
      },
      "put": {
        "tags": ["Organization"],
        "description": "Creates or updates an organization resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents an organization.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          }
        ],
        "operationId": "Organizations_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Organizations_CreateOrUpdate": {
            "$ref": "./examples/Organizations_Put.json"
          }
        }
      },
      "patch": {
        "tags": ["Organization"],
        "description": "Partially updates an organization.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updatable organization properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrganizationUpdate"
            }
          }
        ],
        "operationId": "Organizations_Update",
        "responses": {
          "200": {
            "description": "Succeeded",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Organizations_Update": {
            "$ref": "./examples/Organizations_Patch.json"
          }
        }
      },
      "delete": {
        "tags": ["Organization"],
        "description": "Deletes an organization",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          }
        ],
        "operationId": "Organizations_Delete",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "200": {
            "description": "OK. Resource has been deleted"
          },
          "202": {
            "description": "Accepted. Operation will complete asynchronously."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Organizations_Delete": {
            "$ref": "./examples/Organizations_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestCenter/organizations/{organization}/projects": {
      "get": {
        "tags": ["Project"],
        "description": "Lists all projects in the organization.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "operationId": "Projects_ListByOrganization",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProjectListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Projects_ListByOrganization": {
            "$ref": "./examples/Projects_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/ProjectListResult"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestCenter/organizations/{organization}/projects/{project}": {
      "get": {
        "tags": ["Project"],
        "description": "Gets a specific project in the organization.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          }
        ],
        "operationId": "Projects_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Projects_Get": {
            "$ref": "./examples/Projects_Get.json"
          }
        }
      },
      "put": {
        "tags": ["Project"],
        "description": "Creates or updates a project.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents a project.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "operationId": "Projects_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "201": {
            "description": "Accepted. Operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "200": {
            "description": "Succeeded",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Projects_CreateOrUpdate": {
            "$ref": "./examples/Projects_Put.json"
          }
        }
      },
      "patch": {
        "tags": ["Project"],
        "description": "Partially updates a project.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updatable project properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectUpdate"
            }
          }
        ],
        "operationId": "Projects_Update",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "201": {
            "description": "Accepted. Operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "200": {
            "description": "Succeeded",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Projects_Update": {
            "$ref": "./examples/Projects_Patch.json"
          }
        }
      },
      "delete": {
        "tags": ["Project"],
        "description": "Deletes a project resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          }
        ],
        "operationId": "Projects_Delete",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "200": {
            "description": "OK. Resource has been deleted"
          },
          "202": {
            "description": "Accepted. Operation will complete asynchronously."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Projects_Delete": {
            "$ref": "./examples/Projects_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestCenter/organizations/{organization}/projects/{project}/environments": {
      "get": {
        "tags": ["Environment"],
        "description": "Lists the environments for a project.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "operationId": "Environments_ListByProject",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EnvironmentListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Environments_ListByProject": {
            "$ref": "./examples/Environments_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/EnvironmentListResult"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestCenter/organizations/{organization}/projects/{project}/environments/{environment}": {
      "get": {
        "tags": ["Environment"],
        "description": "Gets an environment",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentNameParameter"
          }
        ],
        "operationId": "Environments_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Environments_Get": {
            "$ref": "./examples/Environments_Get.json"
          }
        }
      },
      "put": {
        "tags": ["Environment"],
        "description": "Creates or updates an environment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents a environment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          }
        ],
        "operationId": "Environments_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "201": {
            "description": "Accepted. Operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          },
          "200": {
            "description": "Succeeded",
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Environments_CreateOrUpdate": {
            "$ref": "./examples/Environments_Put.json"
          }
        }
      },
      "patch": {
        "tags": ["Environment"],
        "description": "Partially updates an environment",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updatable environment properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentUpdate"
            }
          }
        ],
        "operationId": "Environments_Update",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "201": {
            "description": "Accepted. Operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          },
          "200": {
            "description": "Succeeded",
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Environments_Update": {
            "$ref": "./examples/Environments_Patch.json"
          }
        }
      },
      "delete": {
        "tags": ["Environment"],
        "description": "Deletes an environment and all it's associated resources",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentNameParameter"
          }
        ],
        "operationId": "Environments_Delete",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "200": {
            "description": "OK. Environment has been deleted."
          },
          "202": {
            "description": "Accepted. Operation will complete asynchronously."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Environments_Delete": {
            "$ref": "./examples/Environments_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestCenter/organizations/{organization}/projects/{project}/environments/{environment}/deploy": {
      "post": {
        "tags": ["Environment"],
        "description": "Deploys an environment's resources",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentNameParameter"
          },
          {
            "name": "deployment",
            "in": "body",
            "description": "Deployment properties overriding the environment's default values.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EnvironmentDeploy"
            }
          }
        ],
        "operationId": "Environments_Deploy",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "201": {
            "description": "Created. Operation will complete asynchronously."
          },
          "202": {
            "description": "Accepted. Operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Environments_Deploy": {
            "$ref": "./examples/Environments_Deploy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestCenter/organizations/{organization}/projects/{project}/environments/{environment}/deployments": {
      "get": {
        "tags": ["Environment"],
        "description": "Lists the deployments for an environment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "operationId": "Deployments_ListByEnvironment",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deployments_List": {
            "$ref": "./examples/Deployments_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/DeploymentListResult"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestCenter/organizations/{organization}/projects/{project}/environments/{environment}/deployments/{deploymentName}": {
      "get": {
        "tags": ["Environment"],
        "description": "Gets details of a deployment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          }
        ],
        "operationId": "Deployments_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deployments_Get": {
            "$ref": "./examples/Deployments_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestCenter/organizations/{organization}/projects/{project}/templates": {
      "get": {
        "tags": ["Project"],
        "description": "Lists all templates available for a project.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "operationId": "ProjectTemplates_List",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TemplateListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Projects_ListTemplates": {
            "$ref": "./examples/Projects_ListTemplates.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/TemplateListResult"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestCenter/organizations/{organization}/templatesources": {
      "get": {
        "tags": ["Template Source"],
        "description": "Lists template sources for an organization.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "operationId": "TemplateSources_ListByOrganization",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TemplateSourceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TemplateSources_ListByOrganization": {
            "$ref": "./examples/TemplateSources_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/TemplateSourceListResult"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestCenter/organizations/{organization}/templatesources/{templateSource}": {
      "get": {
        "tags": ["Template Source"],
        "description": "Gets a template source",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/TemplateSourceNameParameter"
          }
        ],
        "operationId": "TemplateSources_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TemplateSource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TemplateSources_Get": {
            "$ref": "./examples/TemplateSources_Get.json"
          }
        }
      },
      "put": {
        "tags": ["Template Source"],
        "description": "Creates or updates a template source.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/TemplateSourceNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents a template source.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TemplateSource"
            }
          }
        ],
        "operationId": "TemplateSources_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "Succeeded",
            "schema": {
              "$ref": "#/definitions/TemplateSource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TemplateSources_CreateOrUpdate": {
            "$ref": "./examples/TemplateSources_Put.json"
          }
        }
      },
      "patch": {
        "tags": ["Template Source"],
        "description": "Partially updates a template source.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/TemplateSourceNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updatable template source properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TemplateSourceUpdate"
            }
          }
        ],
        "operationId": "TemplateSources_Update",
        "responses": {
          "200": {
            "description": "The resource was updated.",
            "schema": {
              "$ref": "#/definitions/TemplateSource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TemplateSources_Update": {
            "$ref": "./examples/TemplateSources_Patch.json"
          }
        }
      },
      "delete": {
        "tags": ["Template Source"],
        "description": "Deletes a Template Source resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/TemplateSourceNameParameter"
          }
        ],
        "operationId": "TemplateSources_Delete",
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TemplateSources_Delete": {
            "$ref": "./examples/TemplateSources_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestCenter/organizations/{organization}/templatesources/{templateSource}/templates": {
      "get": {
        "tags": ["Template Source"],
        "description": "Lists Template resources by template source",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/TemplateSourceNameParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "operationId": "Templates_ListBySource",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TemplateListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/TemplateListResult",
        "x-ms-examples": {
          "Templates_ListBySource": {
            "$ref": "./examples/Templates_ListByTemplateSource.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestCenter/organizations/{organization}/templatesources/{templateSource}/templates/{template}": {
      "get": {
        "tags": ["Template Source"],
        "description": "Gets a Template resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/TemplateSourceNameParameter"
          },
          {
            "$ref": "#/parameters/TemplateNameParameter"
          }
        ],
        "operationId": "Templates_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Template"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Templates_Get": {
            "$ref": "./examples/Templates_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestCenter/organizations/{organization}/projects/{project}/mappings": {
      "get": {
        "tags": ["Environment Mapping"],
        "description": "Lists mappings for a project.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "operationId": "EnvironmentMappings_ListByProject",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EnvironmentMappingListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnvironmentMappings_ListByProject": {
            "$ref": "./examples/EnvironmentMappings_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/EnvironmentMappingListResult"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestCenter/organizations/{organization}/projects/{project}/mappings/{mapping}": {
      "get": {
        "tags": ["Environment Mapping"],
        "description": "Gets a mapping.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/MappingNameParameter"
          }
        ],
        "operationId": "EnvironmentMappings_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EnvironmentMapping"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnvironmentMappings_Get": {
            "$ref": "./examples/EnvironmentMappings_Get.json"
          }
        }
      },
      "put": {
        "tags": ["Environment Mapping"],
        "description": "Creates or updates a mapping.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/MappingNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents an Azure mapping.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentMapping"
            }
          }
        ],
        "operationId": "EnvironmentMappings_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "Succeeded",
            "schema": {
              "$ref": "#/definitions/EnvironmentMapping"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnvironmentMappings_CreateOrUpdate": {
            "$ref": "./examples/EnvironmentMappings_Put.json"
          }
        }
      },
      "patch": {
        "tags": ["Environment Mapping"],
        "description": "Partially updates a mapping.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/MappingNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updatable Azure mapping properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentMappingUpdate"
            }
          }
        ],
        "operationId": "EnvironmentMappings_Update",
        "responses": {
          "200": {
            "description": "The resource was updated.",
            "schema": {
              "$ref": "#/definitions/EnvironmentMapping"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnvironmentMappings_Update": {
            "$ref": "./examples/EnvironmentMappings_Patch.json"
          }
        }
      },
      "delete": {
        "tags": ["Environment Mapping"],
        "description": "Deletes a mapping.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/MappingNameParameter"
          }
        ],
        "operationId": "EnvironmentMappings_Delete",
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnvironmentMappings_Delete": {
            "$ref": "./examples/EnvironmentMappings_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestCenter/organizations/{organization}/environmentTypes": {
      "get": {
        "tags": ["Environment Type"],
        "description": "Lists environment types for the organization.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "operationId": "EnvironmentTypes_ListByOrganization",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EnvironmentTypeListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnvironmentTypes_ListByOrganization": {
            "$ref": "./examples/EnvironmentTypes_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/EnvironmentTypeListResult"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestCenter/organizations/{organization}/environmentTypes/{environmentType}": {
      "get": {
        "tags": ["Environment Type"],
        "description": "Gets an environment type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentTypeNameParameter"
          }
        ],
        "operationId": "EnvironmentTypes_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EnvironmentType"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnvironmentTypes_Get": {
            "$ref": "./examples/EnvironmentTypes_Get.json"
          }
        }
      },
      "put": {
        "tags": ["Environment Type"],
        "description": "Creates or updates an environment type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentTypeNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents an Environment Type.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentType"
            }
          }
        ],
        "operationId": "EnvironmentTypes_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "Succeeded",
            "schema": {
              "$ref": "#/definitions/EnvironmentType"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnvironmentTypes_CreateOrUpdate": {
            "$ref": "./examples/EnvironmentTypes_Put.json"
          }
        }
      },
      "patch": {
        "tags": ["Environment Type"],
        "description": "Partially updates an environment type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentTypeNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updatable environment type properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentTypeUpdate"
            }
          }
        ],
        "operationId": "EnvironmentTypes_Update",
        "responses": {
          "200": {
            "description": "The resource was updated.",
            "schema": {
              "$ref": "#/definitions/EnvironmentType"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnvironmentTypes_Update": {
            "$ref": "./examples/EnvironmentTypes_Patch.json"
          }
        }
      },
      "delete": {
        "tags": ["Environment Type"],
        "description": "Deletes an environment type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/OrganizationNameParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentTypeNameParameter"
          }
        ],
        "operationId": "EnvironmentTypes_Delete",
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EnvironmentTypes_Delete": {
            "$ref": "./examples/EnvironmentTypes_Delete.json"
          }
        }
      }
    },
    "/providers/Microsoft.DevTestCenter/operations": {
      "get": {
        "tags": ["Operations"],
        "description": "Lists all of the available resource provider operations.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AvailableOperations"
            }
          },
          "default": {
            "description": "Resource Provider error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_Get": {
            "$ref": "./examples/Operations_Get.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.DevTestCenter/locations/{location}/operationStatuses/{operationId}": {
      "get": {
        "description": "Gets the current status of an async operation.",
        "operationId": "OperationStatuses_Get",
        "summary": "Get Operation Status",
        "tags": [
          "OperationStatus"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested operation status",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Resource Provider error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get OperationStatus": {
            "$ref": "./examples/OperationStatus_Get.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Organization": {
      "type": "object",
      "description": "Represents an organization resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Organization properties",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OrganizationProperties"
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        }
      }
    },
    "OrganizationUpdateProperties": {
      "description": "Properties of the organization. These properties can be updated after the resource has been created.",
      "properties": {
        "displayName": {
          "description": "Display name for the organization.",
          "type": "string"
        },
        "description": {
          "description": "Organization description.",
          "type": "string"
        }
      }
    },
    "OrganizationProperties": {
      "description": "Properties of the organization.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OrganizationUpdateProperties"
        }
      ],
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        }
      }
    },
    "OrganizationUpdate": {
      "description": "The organization resource for partial updates. Properties not provided in the update request will not be changed.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Organization properties to be updated.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OrganizationUpdateProperties"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": ["read", "create", "update"],
          "description": "Resource tags."
        }
      }
    },
    "OrganizationListResult": {
      "description": "Result of the list organizations operation",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Organization"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Project": {
      "description": "Represents a project resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ProjectProperties",
          "description": "Properties of a project."
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        },
        "identity": {
          "description": "Managed identity properties",
          "$ref": "#/definitions/IdentityProperties"
        }
      }
    },
    "ProjectUpdateProperties": {
      "description": "Properties of a project. These properties can be updated after the resource has been created.",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the project."
        },
        "description": {
          "type": "string",
          "description": "Description of the project."
        }
      }
    },
    "ProjectProperties": {
      "description": "Properties of a project.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProjectUpdateProperties"
        }
      ],
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        }
      }
    },
    "ProjectUpdate": {
      "description": "The project properties for partial update. Properties not provided in the update request will not be changed.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ProjectUpdateProperties",
          "description": "Properties of a project to be updated."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": ["read", "create", "update"],
          "description": "Resource tags."
        }
      }
    },
    "ProjectListResult": {
      "description": "Results of the project list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Project"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Environment": {
      "description": "Represents an environment resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/EnvironmentProperties",
          "description": "Environment properties."
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        }
      }
    },
    "EnvironmentUpdateProperties": {
      "description": "Properties of an environment. These properties can be updated after the resource has been created.",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the environment."
        },
        "type": {
          "type": "string",
          "description": "Environment type resource identifier."
        },
        "templateId": {
          "type": "string",
          "description": "Resource id of the template."
        },
        "deploymentParameters": {
          "description": "Deployment parameters passed to template.",
          "type": "object"
        }
      }
    },
    "EnvironmentProperties": {
      "description": "Properties of an environment.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EnvironmentUpdateProperties"
        }
      ],
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the environment.",
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentResource"
          },
          "readOnly": true,
          "description": "List of resource information for the environment."
        }
      }
    },
    "EnvironmentResource": {
      "description": "Represents a resource deployed inside an environment.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource's identifier.",
          "type": "string",
          "readOnly": true
        },
        "endpoint": {
          "description": "An entry point URL for the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The Azure resource type.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EnvironmentUpdate": {
      "description": "The environment properties for partial update. Properties not provided in the update request will not be changed.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/EnvironmentUpdateProperties",
          "description": "Environment properties to be updated."
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": ["read", "create", "update"]
        }
      }
    },
    "EnvironmentListResult": {
      "description": "Results of the environment list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Environment"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EnvironmentDeploy": {
      "description": "An environment deployment",
      "type": "object",
      "properties": {
        "parameters": {
          "description": "Deployment parameters passed to template.",
          "type": "object"
        }
      }
    },
    "DeploymentListResult": {
      "description": "Results of the deployment list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Deployment"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Deployment": {
      "description": "Details of a specific deployment of an environment.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Deployment properties",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DeploymentProperties"
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        }
      }
    },
    "DeploymentProperties": {
      "description": "Deployment properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Current provisioning state of the deployment.",
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        },
        "logs": {
          "description": "Deployment logs.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "TemplateSource": {
      "description": "Represents a resource containing environment templates.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TemplateSourceProperties",
          "description": "Template source properties."
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        }
      }
    },
    "TemplateSourceUpdateProperties": {
      "description": "Properties of a template source. These properties can be updated after the resource has been created.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name of the template source.",
          "type": "string"
        },
        "gitHub": {
          "description": "Properties for a GitHub source type.",
          "type": "object",
          "$ref": "#/definitions/GitHubTemplateSource"
        }
      }
    },
    "TemplateSourceProperties": {
      "description": "Properties of a template source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TemplateSourceUpdateProperties"
        }
      ],
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        }
      }
    },
    "GitHubTemplateSource": {
      "description": "Properties for a GitHub repository template source.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "GitHub URI.",
          "type": "string"
        },
        "branch": {
          "description": "GitHub branch.",
          "type": "string"
        },
        "securityTokenId": {
          "description": "A reference to the Key Vault secret containing a security token to authenticate to a non-public GitHub repository.",
          "type": "string"
        },
        "templatePath": {
          "description": "The folder where the templates can be found inside the repository.",
          "type": "string"
        }
      }
    },
    "TemplateSourceUpdate": {
      "description": "The template source's properties for parital update. Properties not provided in the update request will not be changed.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TemplateSourceUpdateProperties",
          "description": "Template source properties for update."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": ["read", "create", "update"],
          "description": "Resource tags."
        }
      }
    },
    "TemplateSourceListResult": {
      "description": "Results of the template source list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateSource"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TemplateListResult": {
      "description": "Results of the template list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Template"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Template": {
      "description": "A template.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TemplateProperties",
          "description": "Properties of a template."
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        }
      }
    },
    "TemplateProperties": {
      "description": "Properties of a template.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the template.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "enum": ["ARM"],
          "description": "The type of template used to deploy the environment.",
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "TemplateType",
            "modelAsString": true
          }
        },
        "parameters": {
          "description": "Parameters that can be provided to the template.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateParameterProperties"
          },
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        }
      }
    },
    "TemplateParameterProperties": {
      "description": "Properties of a template parameter.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the parameter.",
          "type": "string"
        },
        "type": {
          "description": "The type accepted for the parameter value.",
          "type": "string"
        },
        "description": {
          "description": "Description of the parameter.",
          "type": "string"
        }
      }
    },
    "EnvironmentMapping": {
      "description": "Represents a mapping between a subscription and an environment type, or between a management group and an environment type.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/EnvironmentMappingProperties",
          "description": "Properties to configure a mapping between an environment type and a subscription or management group. Resources for environments of this configured type will be deployed to this subscription or management group."
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        }
      }
    },
    "EnvironmentMappingUpdateProperties": {
      "description": "Properties of an environment mapping. These properties can be updated after the resource has been created",
      "type": "object",
      "properties": {
      }
    },
    "EnvironmentMappingProperties": {
      "description": "Properties of an environment mapping.",
      "type": "object",
      "properties": {
        "subscriptionId": {
          "description": "Id of a subscription that the environment type will be mapped to.",
          "type": "string",
          "x-ms-mutability": ["read", "create"]
        },
        "environmentType": {
          "description": "Environment type (e.g. Dev/Test)",
          "type": "string",
          "x-ms-mutability": [ "read", "create" ]
        },
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        }
      }
    },
    "EnvironmentMappingUpdate": {
      "description": "The environment mapping for partial update. Properties not provided in the update request will not be changed.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/EnvironmentMappingUpdateProperties",
          "description": "Properties to configure a mapping between an environment type and a subscription or management group. Resources for environments of this configured type will be deployed to this subscription or management group."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": ["read", "create", "update"],
          "description": "Resource tags."
        }
      }
    },
    "EnvironmentMappingListResult": {
      "description": "Result of the mapping list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentMapping"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EnvironmentType": {
      "description": "Represents an environment type.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/EnvironmentTypeProperties",
          "description": "Properties of an environment type."
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        }
      }
    },
    "EnvironmentTypeUpdateProperties": {
      "description": "Properties of an environment type. These properties can be updated after the resource has been created.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the environment type.",
          "type": "string"
        }
      }
    },
    "EnvironmentTypeProperties": {
      "description": "Properties of an environment type.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EnvironmentTypeUpdateProperties"
        }
      ],
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        }
      }
    },
    "EnvironmentTypeUpdate": {
      "description": "The environment type for partial update. Properties not provided in the update request will not be changed.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/EnvironmentTypeUpdateProperties",
          "description": "Properties to configure an environment type."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": ["read", "create", "update"],
          "description": "Resource tags."
        }
      }
    },
    "EnvironmentTypeListResult": {
      "description": "Result of the environment type list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentType"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IdentityProperties": {
      "description": "Properties of a managed identity",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of identity (None, SystemAssigned)",
          "enum": ["None", "SystemAssigned"],
          "type": "string",
          "x-ms-enum": {
            "name": "ManagedIdentityType",
            "modelAsString": true
          }
        },
        "principalId": {
          "description": "The principal id of resource identity.",
          "type": "string"
        },
        "tenantId": {
          "description": "The tenant identifier of resource.",
          "type": "string"
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the resource.",
      "readOnly": true
    },
    "AvailableOperations": {
      "description": "Available operations of the service",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of available operation details",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationDetail"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OperationDetail": {
      "description": "Operation detail payload",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the operation",
          "type": "string"
        },
        "isDataAction": {
          "description": "Indicates whether the operation is a data action",
          "type": "boolean"
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay",
          "description": "Display of the operation"
        },
        "origin": {
          "description": "Origin of the operation",
          "type": "string"
        }
      }
    },
    "OperationDisplay": {
      "description": "Operation display payload",
      "type": "object",
      "properties": {
        "provider": {
          "description": "Resource provider of the operation",
          "type": "string"
        },
        "resource": {
          "description": "Resource of the operation",
          "type": "string"
        },
        "operation": {
          "description": "Localized friendly name for the operation",
          "type": "string"
        },
        "description": {
          "description": "Localized friendly description for the operation",
          "type": "string"
        }
      }
    },
    "OperationStatus": {
      "description": "The current status of an async operation",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified ID for the operation status.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The operation id name",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Provisioning state of the resource.",
          "type": "string",
          "readOnly": true
        },
        "startTime": {
          "description": "The start time of the operation",
          "type": "string",
          "readOnly": true,
          "format": "date-time"
        },
        "endTime": {
          "description": "The end time of the operation",
          "type": "string",
          "readOnly": true,
          "format": "date-time"
        },
        "percentComplete": {
          "description": "Percent of the operation that is complete",
          "type": "number",
          "readOnly": true,
          "minimum": 0,
          "maximum": 100
        },
        "error": {
          "description": "Operation Error message",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse",
          "x-ms-client-flatten": true
        }
      }
    },
    "EnableStatus": {
      "description": "Enable or disable status. Indicates whether the property applied to is either enabled or disabled.",
      "enum": ["Enabled", "Disabled"],
      "type": "string",
      "x-ms-enum": {
        "name": "EnableStatus",
        "modelAsString": true
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Unique identifier of the Azure subscription. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)."
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the resource group within the Azure subscription.",
      "x-ms-parameter-location": "method"
    },
    "OrganizationNameParameter": {
      "name": "organization",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the organization.",
      "x-ms-parameter-location": "method"
    },
    "ProjectNameParameter": {
      "name": "project",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the project.",
      "x-ms-parameter-location": "method"
    },
    "EnvironmentNameParameter": {
      "name": "environment",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the environment.",
      "x-ms-parameter-location": "method"
    },
    "TemplateSourceNameParameter": {
      "name": "templateSource",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Template Source.",
      "x-ms-parameter-location": "method"
    },
    "TemplateNameParameter": {
      "name": "template",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Template.",
      "x-ms-parameter-location": "method"
    },
    "DeploymentNameParameter": {
      "name": "deploymentName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The deployment id.",
      "x-ms-parameter-location": "method"
    },
    "MappingNameParameter": {
      "name": "mapping",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Mapping name.",
      "x-ms-parameter-location": "method"
    },
    "EnvironmentTypeNameParameter": {
      "name": "environmentType",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the environment type.",
      "x-ms-parameter-location": "method"
    },
    "FilterParameter": {
      "name": "$filter",
      "in": "query",
      "description": "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
      "type": "string",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "TopParameter": {
      "name": "$top",
      "in": "query",
      "description": "The maximum number of resources to return from the operation. Example: '$top=10'",
      "type": "integer",
      "format": "int32",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The Azure region",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
