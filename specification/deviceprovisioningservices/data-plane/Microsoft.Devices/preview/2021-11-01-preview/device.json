{
  "swagger": "2.0",
  "info": {
    "version": "2021-11-01-preview",
    "title": "ProvisioningDeviceClient",
    "description": "API for device runtime operations with the Azure IoT Hub Device Provisioning Service"
  },
  "host": "global.azure-devices-provisioning.net",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/{idScope}/devices/{registrationId}/certificates/{certificateId}": {
      "get": {
        "tags": [
          "GET"
        ],
        "summary": "Obtains the issued certificate.",
        "operationId": "CertificateIssuance_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "registrationId",
            "in": "path",
            "description": "The device registration ID. A case-insensitive string (up to 128 characters long) of alphanumeric characters plus certain special characters : . _ -. No special characters allowed at start or end.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateId",
            "in": "path",
            "description": "Certificate ID. A case-insensitive string (up to 128 characters long) of alphanumeric characters plus certain special characters : . _ -. No special characters allowed at start or end.",
            "required": true,
            "type": "string"
          },
          {
            "name": "idScope",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CertificateIssuanceResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/ProvisioningServiceErrorDetails"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/{idScope}/devices/{registrationId}/operations/{operationId}": {
      "get": {
        "tags": [
          "GET"
        ],
        "summary": "Obtains the device operation status.",
        "operationId": "Device_OperationStatusLookup",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "registrationId",
            "in": "path",
            "description": "The device registration ID. A case-insensitive string (up to 128 characters long) of alphanumeric characters plus certain special characters : . _ -. No special characters allowed at start or end.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation ID. A case-insensitive string (up to 128 characters long) of alphanumeric characters plus certain special characters : . _ -. No special characters allowed at start or end.",
            "required": true,
            "type": "string"
          },
          {
            "name": "idScope",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeviceOperationStatusResponse"
            },
            "headers": {
              "retry-after": {
                "description": "The retry interval in seconds.",
                "type": "integer"
              },
              "location": {
                "description": "The location of the resource.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeviceOperationStatusResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/ProvisioningServiceErrorDetails"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/{idScope}/registrations/{registrationId}/operations/{operationId}": {
      "get": {
        "tags": [
          "GET",
          "RuntimeRegistration"
        ],
        "summary": "Gets the registration operation status.",
        "operationId": "RuntimeRegistration_OperationStatusLookup",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "registrationId",
            "in": "path",
            "description": "Registration ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "idScope",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegistrationOperationStatus"
            },
            "headers": {
              "retry-after": {
                "description": "The retry interval in seconds.",
                "type": "integer"
              },
              "Location": {
                "description": "The location of the resource.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegistrationOperationStatus"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/ProvisioningServiceErrorDetails"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/{idScope}/devices/{registrationId}/certificates/issue": {
      "post": {
        "tags": [
          "POST"
        ],
        "summary": "API to issue certificates for IoT devices.",
        "operationId": "CertificateIssuance_IssueCertificate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "registrationId",
            "in": "path",
            "description": "The device registration ID. A case-insensitive string (up to 128 characters long) of alphanumeric characters plus certain special characters : . _ -. No special characters allowed at start or end.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Certificate signing request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CertificateIssuanceRequest"
            }
          },
          {
            "name": "idScope",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeviceOperationStatusResponse"
            },
            "headers": {
              "location": {
                "description": "The location of the resource.",
                "type": "string"
              },
              "retry-after": {
                "description": "The retry interval in seconds.",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/ProvisioningServiceErrorDetails"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/{idScope}/registrations/{registrationId}": {
      "post": {
        "tags": [
          "POST",
          "RuntimeRegistration"
        ],
        "summary": "Gets the device registration status.",
        "operationId": "RuntimeRegistration_DeviceRegistrationStatusLookup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "registrationId",
            "in": "path",
            "description": "Registration ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceRegistration",
            "in": "body",
            "description": "Device registration.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceRegistration"
            }
          },
          {
            "name": "idScope",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeviceRegistrationResult"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/ProvisioningServiceErrorDetails"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/{idScope}/registrations/{registrationId}/register": {
      "put": {
        "tags": [
          "PUT",
          "RuntimeRegistration"
        ],
        "summary": "Registers the devices.",
        "operationId": "RuntimeRegistration_RegisterDevice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "registrationId",
            "in": "path",
            "description": "The registration ID is alphanumeric, lowercase, and may contain hyphens.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceRegistration",
            "in": "body",
            "description": "Device registration request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceRegistration"
            }
          },
          {
            "name": "idScope",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegistrationOperationStatus"
            }
          },
          "202": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegistrationOperationStatus"
            },
            "headers": {
              "Location": {
                "description": "The location of the resource.",
                "type": "string"
              },
              "retry-after": {
                "description": "The retry interval in seconds.",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/ProvisioningServiceErrorDetails"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CertificateIssuanceResponse": {
      "type": "object",
      "properties": {
        "issuedCertificate": {
          "description": "The end-entity certificate issued to a client.",
          "type": "string",
          "readOnly": true
        },
        "certificateChain": {
          "description": "The issuing certificate authority chain.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "ProvisioningServiceErrorDetails": {
      "description": "Contains the properties of an error returned by the Azure IoT Hub Provisioning Service.",
      "type": "object",
      "properties": {
        "errorCode": {
          "format": "int32",
          "type": "integer"
        },
        "trackingId": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "info": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "timestampUtc": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "DeviceOperationStatusResponse": {
      "type": "object",
      "properties": {
        "operationId": {
          "description": "Operation ID.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Device operation status.",
          "enum": [
            "unknown",
            "notStarted",
            "running",
            "failed",
            "succeeded"
          ],
          "type": "string",
          "readOnly": true
        },
        "createdDateTimeUtc": {
          "format": "date-time",
          "description": "Operation created timestamp in UTC.",
          "type": "string",
          "readOnly": true
        },
        "lastActionDateTimeUtc": {
          "format": "date-time",
          "description": "Optional operation status entered timestamp in UTC.",
          "type": "string",
          "readOnly": true
        },
        "resourceLocation": {
          "description": "Optional resource location URI.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "RegistrationOperationStatus": {
      "description": "Registration operation status.",
      "required": [
        "operationId"
      ],
      "type": "object",
      "properties": {
        "operationId": {
          "description": "Operation ID.",
          "type": "string"
        },
        "status": {
          "description": "Device enrollment status.",
          "enum": [
            "unassigned",
            "assigning",
            "assigned",
            "failed",
            "disabled"
          ],
          "type": "string"
        },
        "registrationState": {
          "$ref": "#/definitions/DeviceRegistrationResult",
          "description": "Device registration status."
        }
      }
    },
    "DeviceRegistrationResult": {
      "description": "Device registration result.",
      "type": "object",
      "properties": {
        "tpm": {
          "$ref": "#/definitions/TpmRegistrationResult",
          "description": "Registration result returned when using TPM attestation.",
          "readOnly": true
        },
        "x509": {
          "$ref": "#/definitions/X509RegistrationResult",
          "description": "Registration result returned when using X509 attestation.",
          "readOnly": true
        },
        "symmetricKey": {
          "$ref": "#/definitions/SymmetricKeyRegistrationResult",
          "description": "Registration result returned when using SymmetricKey attestation.",
          "readOnly": true
        },
        "registrationId": {
          "description": "This id is used to uniquely identify a device registration of an enrollment.\r\nA case-insensitive string (up to 128 characters long) of alphanumeric characters plus certain special characters : . _ -. No special characters allowed at start or end.",
          "type": "string",
          "readOnly": true
        },
        "createdDateTimeUtc": {
          "format": "date-time",
          "description": "Registration create date time (in UTC).",
          "type": "string",
          "readOnly": true
        },
        "assignedHub": {
          "description": "Assigned Azure IoT Hub.",
          "type": "string",
          "readOnly": true
        },
        "deviceId": {
          "description": "Device ID.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Enrollment status.",
          "enum": [
            "unassigned",
            "assigning",
            "assigned",
            "failed",
            "disabled"
          ],
          "type": "string",
          "readOnly": true
        },
        "substatus": {
          "description": "Substatus for 'Assigned' devices. Possible values include - 'initialAssignment': Device has been assigned to an IoT hub for the first time, 'deviceDataMigrated': Device has been assigned to a different IoT hub and its device data was migrated from the previously assigned IoT hub. Device data was removed from the previously assigned IoT hub, 'deviceDataReset':  Device has been assigned to a different IoT hub and its device data was populated from the initial state stored in the enrollment. Device data was removed from the previously assigned IoT hub, 'reprovisionedToInitialAssignment': Device has been re-provisioned to a previously assigned IoT hub.",
          "enum": [
            "initialAssignment",
            "deviceDataMigrated",
            "deviceDataReset",
            "reprovisionedToInitialAssignment"
          ],
          "type": "string",
          "readOnly": true
        },
        "errorCode": {
          "format": "int32",
          "description": "Error code.",
          "type": "integer",
          "readOnly": true
        },
        "errorMessage": {
          "description": "Error message.",
          "type": "string",
          "readOnly": true
        },
        "lastUpdatedDateTimeUtc": {
          "format": "date-time",
          "description": "Last updated date time (in UTC).",
          "type": "string",
          "readOnly": true
        },
        "etag": {
          "description": "The entity tag associated with the resource.",
          "type": "string",
          "readOnly": true
        },
        "payload": {
          "description": "Custom allocation payload returned from the webhook to the device.",
          "type": "object",
          "readOnly": true
        },
        "trustBundle": {
          "$ref": "#/definitions/TrustBundle",
          "description": "The optional trust bundle result returned after a successful device registation.",
          "readOnly": true
        },
        "issuedClientCertificate": {
          "description": "Client certificate issued to the device in PEM format.",
          "type": "string",
          "readOnly": true
        },
        "deviceCertificateIssuanceSettings": {
          "$ref": "#/definitions/DeviceCertificateIssuanceSettings",
          "description": "Certificate issuance settings specification for the device.",
          "readOnly": true
        },
        "deviceHostname": {
          "description": "The configured hostname for the device.\r\nUsed for server certificate issuance.",
          "type": "string",
          "readOnly": true
        },
        "deviceIpAddress": {
          "description": "The configured IP address for the device.\r\nUsed for server certificate issuance.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TpmRegistrationResult": {
      "description": "TPM registration result.",
      "type": "object",
      "properties": {
        "authenticationKey": {
          "description": "Encrypted authentication key.",
          "type": "string"
        }
      }
    },
    "X509RegistrationResult": {
      "description": "X509 registration result.",
      "type": "object",
      "properties": {
        "certificateInfo": {
          "$ref": "#/definitions/X509CertificateInfo"
        },
        "enrollmentGroupId": {
          "type": "string"
        },
        "signingCertificateInfo": {
          "$ref": "#/definitions/X509CertificateInfo"
        }
      }
    },
    "SymmetricKeyRegistrationResult": {
      "description": "Registration result returned when using SymmetricKey attestation.",
      "type": "object",
      "properties": {
        "enrollmentGroupId": {
          "type": "string"
        }
      }
    },
    "TrustBundle": {
      "description": "A collection of trusted root or intermediate certificates associated with one or more device enrollments.",
      "required": [
        "certificates"
      ],
      "type": "object",
      "properties": {
        "certificates": {
          "description": "The certificates in the trust bundle.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/X509CertificateWithMetadata"
          }
        },
        "id": {
          "description": "The trust bundle ID. A case-insensitive string (up to 128 characters long) of alphanumeric characters plus certain special characters : . _ -. No special characters allowed at start or end.",
          "type": "string",
          "readOnly": true
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "The DateTime this resource was created in UTC.",
          "type": "string",
          "readOnly": true
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The DateTime this resource was last updated in UTC.",
          "type": "string",
          "readOnly": true
        },
        "etag": {
          "description": "The ETag of the trust bundle.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DeviceCertificateIssuanceSettings": {
      "description": "Certificate issuance policy.",
      "type": "object",
      "properties": {
        "certificateIssuanceEndpoint": {
          "description": "Certificate issuance endpoint which devices can access",
          "type": "string",
          "readOnly": true
        },
        "certificateType": {
          "description": "The certificate issuance type.",
          "enum": [
            "none",
            "serverCertificate"
          ],
          "type": "string",
          "readOnly": true
        }
      }
    },
    "X509CertificateInfo": {
      "description": "X509 certificate info.",
      "required": [
        "subjectName",
        "sha1Thumbprint",
        "sha256Thumbprint",
        "issuerName",
        "notBeforeUtc",
        "notAfterUtc",
        "serialNumber",
        "version"
      ],
      "type": "object",
      "properties": {
        "subjectName": {
          "type": "string"
        },
        "sha1Thumbprint": {
          "type": "string"
        },
        "sha256Thumbprint": {
          "type": "string"
        },
        "issuerName": {
          "type": "string"
        },
        "notBeforeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "notAfterUtc": {
          "format": "date-time",
          "type": "string"
        },
        "serialNumber": {
          "type": "string"
        },
        "version": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "X509CertificateWithMetadata": {
      "required": [
        "certificate"
      ],
      "type": "object",
      "properties": {
        "certificate": {
          "description": "Certificates in PEM format enclosed within these headers:\r\n-----BEGIN CERTIFICATE-----\\r\\n\r\n-----END CERTIFICATE-----\\r\\n",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/X509CertificateMetadata",
          "description": "The certificate information.",
          "readOnly": true
        }
      }
    },
    "X509CertificateMetadata": {
      "type": "object",
      "properties": {
        "subjectName": {
          "description": "Distinguished name from the certificate.",
          "type": "string",
          "readOnly": true
        },
        "sha1Thumbprint": {
          "description": "SHA-1 hash value of the certificate as a hexadecimal string.",
          "type": "string",
          "readOnly": true
        },
        "sha256Thumbprint": {
          "description": "SHA-256 hash value of the certificate as a hexadecimal string.",
          "type": "string",
          "readOnly": true
        },
        "issuerName": {
          "description": "Issuer distinguished name.",
          "type": "string",
          "readOnly": true
        },
        "notBeforeUtc": {
          "format": "date-time",
          "description": "The date on which the certificate becomes valid.",
          "type": "string",
          "readOnly": true
        },
        "notAfterUtc": {
          "format": "date-time",
          "description": "The date on which the certificate is no longer valid.",
          "type": "string",
          "readOnly": true
        },
        "serialNumber": {
          "description": "The serial number.",
          "type": "string",
          "readOnly": true
        },
        "version": {
          "format": "int32",
          "description": "The X509 format version.",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "CertificateIssuanceRequest": {
      "description": "Certificate issuance request.",
      "required": [
        "certificateType",
        "csr"
      ],
      "type": "object",
      "properties": {
        "certificateType": {
          "description": "The certificate issuance type.",
          "enum": [
            "none",
            "serverCertificate"
          ],
          "type": "string"
        },
        "csr": {
          "description": "The certificate signing request for the associated certificate type.\r\nFormat of the CSR is in PKCS 10.",
          "type": "string"
        }
      }
    },
    "DeviceRegistration": {
      "description": "Device registration.",
      "type": "object",
      "properties": {
        "registrationId": {
          "description": "The registration ID is a case-insensitive string (up to 128 characters long) of alphanumeric characters plus certain special characters : . _ -. No special characters allowed at start or end.",
          "type": "string"
        },
        "tpm": {
          "$ref": "#/definitions/TpmAttestation",
          "description": "Tpm."
        },
        "payload": {
          "description": "Custom allocation payload.",
          "type": "object"
        },
        "clientCertificateCsr": {
          "description": "Certificate signing request for device client certificate in PKCS 10 format which is used for authentication after provisioning.",
          "type": "string"
        }
      }
    },
    "TpmAttestation": {
      "description": "Attestation via TPM.",
      "required": [
        "endorsementKey"
      ],
      "type": "object",
      "properties": {
        "endorsementKey": {
          "type": "string"
        },
        "storageRootKey": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for the request. Supported versions include: 2021-11-01-preview",
      "required": true,
      "type": "string",
      "default": "2021-11-01-preview"
    }
  },
  "tags": []
}