{
  "swagger": "2.0",
  "info": {
    "title": "iotDpsClient",
    "version": "2025-02-01-preview",
    "description": "API for using the Azure IoT Hub Device Provisioning Service features.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "CertificateResponses"
    },
    {
      "name": "ProvisioningServiceDescriptions"
    },
    {
      "name": "GroupIdInformations"
    },
    {
      "name": "PrivateEndpointConnections"
    }
  ],
  "paths": {
    "/providers/Microsoft.Devices/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSOperations": {
            "$ref": "./examples/DPSOperations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Devices/checkProvisioningServiceNameAvailability": {
      "post": {
        "operationId": "IotDpsResource_CheckProvisioningServiceNameAvailability",
        "summary": "Check if a provisioning service name is available.",
        "description": "Check if a provisioning service name is available. This will validate if the name is syntactically valid and if the name is usable",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OperationInputs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NameAvailabilityInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSCheckName": {
            "$ref": "./examples/DPSCheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Devices/provisioningServices": {
      "get": {
        "operationId": "IotDpsResource_ListBySubscription",
        "tags": [
          "ProvisioningServiceDescriptions"
        ],
        "description": "List all the provisioning services for a given subscription id.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningServiceDescriptionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSListBySubscription": {
            "$ref": "./examples/DPSListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/privateEndpointConnections": {
      "get": {
        "operationId": "IotDpsResource_ListPrivateEndpointConnections",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "List private endpoint connection properties",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PrivateEndpointConnection"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_List": {
            "$ref": "./examples/DPSListPrivateEndpointConnections.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "IotDpsResource_GetPrivateEndpointConnection",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Get private endpoint connection properties",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_Get": {
            "$ref": "./examples/DPSGetPrivateEndpointConnection.json"
          }
        }
      },
      "put": {
        "operationId": "IotDpsResource_CreateOrUpdatePrivateEndpointConnection",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Create or update the status of a private endpoint connection with the specified name",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnection",
            "in": "body",
            "description": "The private endpoint connection with updated properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateEndpointConnection' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "201": {
            "description": "Resource 'PrivateEndpointConnection' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_CreateOrUpdate": {
            "$ref": "./examples/DPSCreateOrUpdatePrivateEndpointConnection.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "IotDpsResource_DeletePrivateEndpointConnection",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Delete private endpoint connection with the specified name",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_Delete": {
            "$ref": "./examples/DPSDeletePrivateEndpointConnection.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/privateLinkResources": {
      "get": {
        "operationId": "IotDpsResource_ListPrivateLinkResources",
        "tags": [
          "GroupIdInformations"
        ],
        "description": "List private link resources for the given provisioning service",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResources"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateLinkResources_List": {
            "$ref": "./examples/DPSListPrivateLinkResources.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/privateLinkResources/{groupId}": {
      "get": {
        "operationId": "IotDpsResource_GetPrivateLinkResources",
        "tags": [
          "GroupIdInformations"
        ],
        "description": "Get the specified private link resource for the given provisioning service",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "The name of the private link resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GroupIdInformation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateLinkResources_List": {
            "$ref": "./examples/DPSGetPrivateLinkResources.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices": {
      "get": {
        "operationId": "IotDpsResource_ListByResourceGroup",
        "tags": [
          "ProvisioningServiceDescriptions"
        ],
        "description": "Get a list of all provisioning services in the given resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningServiceDescriptionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSListByResourceGroup": {
            "$ref": "./examples/DPSListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}": {
      "get": {
        "operationId": "IotDpsResource_Get",
        "tags": [
          "ProvisioningServiceDescriptions"
        ],
        "description": "Get the metadata of the provisioning service without SAS keys.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningServiceDescription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSGet": {
            "$ref": "./examples/DPSGet.json"
          }
        }
      },
      "put": {
        "operationId": "IotDpsResource_CreateOrUpdate",
        "tags": [
          "ProvisioningServiceDescriptions"
        ],
        "description": "Create or update the metadata of the provisioning service. The usual pattern to modify a property is to retrieve the provisioning service metadata and security metadata, and then combine them with the modified values in a new body to update the provisioning service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iotDpsDescription",
            "in": "body",
            "description": "Description of the provisioning service to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProvisioningServiceDescription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ProvisioningServiceDescription' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ProvisioningServiceDescription"
            }
          },
          "201": {
            "description": "Resource 'ProvisioningServiceDescription' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ProvisioningServiceDescription"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSCreate": {
            "$ref": "./examples/DPSCreate.json"
          },
          "DPSUpdate": {
            "$ref": "./examples/DPSUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "IotDpsResource_Update",
        "tags": [
          "ProvisioningServiceDescriptions"
        ],
        "description": "Update an existing provisioning service's tags. to update other fields use the CreateOrUpdate method",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ProvisioningServiceTags",
            "in": "body",
            "description": "Updated tag information to set into the provisioning service instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagsResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningServiceDescription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSPatch": {
            "$ref": "./examples/DPSPatch.json"
          }
        }
      },
      "delete": {
        "operationId": "IotDpsResource_Delete",
        "tags": [
          "ProvisioningServiceDescriptions"
        ],
        "description": "Deletes the Provisioning Service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSDelete": {
            "$ref": "./examples/DPSDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/{operationId}/{operationId}": {
      "get": {
        "operationId": "IotDpsResource_GetOperationResult",
        "tags": [
          "ProvisioningServiceDescriptions"
        ],
        "description": "Gets the status of a long running operation, such as create, update or delete a provisioning service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation id corresponding to long running operation. Use this to poll for the status.",
            "required": true,
            "type": "string"
          },
          {
            "name": "asyncinfo",
            "in": "query",
            "description": "Async header used to poll on the status of the operation, obtained while creating the long running operation.",
            "required": true,
            "type": "string",
            "default": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AsyncOperationResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSGetOperationResult": {
            "$ref": "./examples/DPSGetOperationResult.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/{keyName}/listkeys": {
      "post": {
        "operationId": "IotDpsResource_ListKeysForKeyName",
        "tags": [
          "ProvisioningServiceDescriptions"
        ],
        "description": "List primary and secondary keys for a specific key name",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyName",
            "in": "path",
            "description": "Logical key name to get key-values for.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SharedAccessSignatureAuthorizationRuleAccessRightsDescription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSGetKey": {
            "$ref": "./examples/DPSGetKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates": {
      "get": {
        "operationId": "DpsCertificate_List",
        "tags": [
          "CertificateResponses"
        ],
        "description": "Get all the certificates tied to the provisioning service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CertificateListDescription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSGetCertificates": {
            "$ref": "./examples/DPSGetCertificates.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}": {
      "get": {
        "operationId": "DpsCertificate_Get",
        "tags": [
          "CertificateResponses"
        ],
        "description": "Get the certificate from the provisioning service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the certificate to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the certificate.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "If-Match"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CertificateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSGetCertificate": {
            "$ref": "./examples/DPSGetCertificate.json"
          }
        }
      },
      "put": {
        "operationId": "DpsCertificate_CreateOrUpdate",
        "tags": [
          "CertificateResponses"
        ],
        "description": "Add new certificate or update an existing certificate.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the certificate to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the certificate. This is required to update an existing certificate, and ignored while creating a brand new certificate.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "If-Match"
          },
          {
            "name": "certificateDescription",
            "in": "body",
            "description": "The certificate body.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CertificateResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CertificateResponse' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/CertificateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSCreateOrUpdateCertificate": {
            "$ref": "./examples/DPSCertificateCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "DpsCertificate_Delete",
        "tags": [
          "CertificateResponses"
        ],
        "description": "Deletes the specified certificate associated with the Provisioning Service",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the certificate to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the certificate",
            "required": true,
            "type": "string",
            "x-ms-client-name": "If-Match"
          },
          {
            "name": "certificate.name",
            "in": "query",
            "description": "This is optional, and it is the Common Name of the certificate.",
            "required": false,
            "type": "string"
          },
          {
            "name": "certificate.rawBytes",
            "in": "query",
            "description": "Raw data within the certificate.",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "certificate.isVerified",
            "in": "query",
            "description": "Indicates if certificate has been verified by owner of the private key.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "certificate.purpose",
            "in": "query",
            "description": "A description that mentions the purpose of the certificate.",
            "required": false,
            "type": "string",
            "enum": [
              "clientAuthentication",
              "serverAuthentication"
            ],
            "x-ms-enum": {
              "name": "CertificatePurpose",
              "modelAsString": true,
              "values": [
                {
                  "name": "clientAuthentication",
                  "value": "clientAuthentication"
                },
                {
                  "name": "serverAuthentication",
                  "value": "serverAuthentication"
                }
              ]
            }
          },
          {
            "name": "certificate.created",
            "in": "query",
            "description": "Time the certificate is created.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "certificate.lastUpdated",
            "in": "query",
            "description": "Time the certificate is last updated.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "certificate.hasPrivateKey",
            "in": "query",
            "description": "Indicates if the certificate contains a private key.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "certificate.nonce",
            "in": "query",
            "description": "Random number generated to indicate Proof of Possession.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSDeleteCertificate": {
            "$ref": "./examples/DPSDeleteCertificate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}/generateVerificationCode": {
      "post": {
        "operationId": "DpsCertificate_GenerateVerificationCode",
        "tags": [
          "CertificateResponses"
        ],
        "description": "Generate verification code for Proof of Possession.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the certificate to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the certificate. This is required to update an existing certificate, and ignored while creating a brand new certificate.",
            "required": true,
            "type": "string",
            "x-ms-client-name": "If-Match"
          },
          {
            "name": "certificate.name",
            "in": "query",
            "description": "Common Name for the certificate.",
            "required": false,
            "type": "string"
          },
          {
            "name": "certificate.rawBytes",
            "in": "query",
            "description": "Raw data of certificate.",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "certificate.isVerified",
            "in": "query",
            "description": "Indicates if the certificate has been verified by owner of the private key.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "certificate.purpose",
            "in": "query",
            "description": "Description mentioning the purpose of the certificate.",
            "required": false,
            "type": "string",
            "enum": [
              "clientAuthentication",
              "serverAuthentication"
            ],
            "x-ms-enum": {
              "name": "CertificatePurpose",
              "modelAsString": true,
              "values": [
                {
                  "name": "clientAuthentication",
                  "value": "clientAuthentication"
                },
                {
                  "name": "serverAuthentication",
                  "value": "serverAuthentication"
                }
              ]
            }
          },
          {
            "name": "certificate.created",
            "in": "query",
            "description": "Certificate creation time.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "certificate.lastUpdated",
            "in": "query",
            "description": "Certificate last updated time.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "certificate.hasPrivateKey",
            "in": "query",
            "description": "Indicates if the certificate contains private key.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "certificate.nonce",
            "in": "query",
            "description": "Random number generated to indicate Proof of Possession.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VerificationCodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSGenerateVerificationCode": {
            "$ref": "./examples/DPSGenerateVerificationCode.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}/verify": {
      "post": {
        "operationId": "DpsCertificate_VerifyCertificate",
        "tags": [
          "CertificateResponses"
        ],
        "description": "Verifies the certificate's private key possession by providing the leaf cert issued by the verifying pre uploaded certificate.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the certificate to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the certificate.",
            "required": true,
            "type": "string",
            "x-ms-client-name": "If-Match"
          },
          {
            "name": "certificate.name",
            "in": "query",
            "description": "Common Name for the certificate.",
            "required": false,
            "type": "string"
          },
          {
            "name": "certificate.rawBytes",
            "in": "query",
            "description": "Raw data of certificate.",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "certificate.isVerified",
            "in": "query",
            "description": "Indicates if the certificate has been verified by owner of the private key.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "certificate.purpose",
            "in": "query",
            "description": "Describe the purpose of the certificate.",
            "required": false,
            "type": "string",
            "enum": [
              "clientAuthentication",
              "serverAuthentication"
            ],
            "x-ms-enum": {
              "name": "CertificatePurpose",
              "modelAsString": true,
              "values": [
                {
                  "name": "clientAuthentication",
                  "value": "clientAuthentication"
                },
                {
                  "name": "serverAuthentication",
                  "value": "serverAuthentication"
                }
              ]
            }
          },
          {
            "name": "certificate.created",
            "in": "query",
            "description": "Certificate creation time.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "certificate.lastUpdated",
            "in": "query",
            "description": "Certificate last updated time.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "certificate.hasPrivateKey",
            "in": "query",
            "description": "Indicates if the certificate contains private key.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "certificate.nonce",
            "in": "query",
            "description": "Random number generated to indicate Proof of Possession.",
            "required": false,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The name of the certificate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerificationCodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CertificateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSVerifyCertificate": {
            "$ref": "./examples/DPSVerifyCertificate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/listkeys": {
      "post": {
        "operationId": "IotDpsResource_ListKeys",
        "tags": [
          "ProvisioningServiceDescriptions"
        ],
        "description": "List the primary and secondary keys for a provisioning service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SharedAccessSignatureAuthorizationRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSListKeys": {
            "$ref": "./examples/DPSListKeys.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/skus": {
      "get": {
        "operationId": "IotDpsResource_listValidSkus",
        "tags": [
          "ProvisioningServiceDescriptions"
        ],
        "description": "Gets the list of valid SKUs and tiers for a provisioning service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IotDpsSkuDefinitionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSGetValidSku": {
            "$ref": "./examples/DPSGetValidSku.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "AccessRightsDescription": {
      "type": "string",
      "description": "Rights that this key has.",
      "enum": [
        "ServiceConfig",
        "EnrollmentRead",
        "EnrollmentWrite",
        "DeviceConnect",
        "RegistrationStatusRead",
        "RegistrationStatusWrite"
      ],
      "x-ms-enum": {
        "name": "AccessRightsDescription",
        "modelAsString": true,
        "values": [
          {
            "name": "ServiceConfig",
            "value": "ServiceConfig"
          },
          {
            "name": "EnrollmentRead",
            "value": "EnrollmentRead"
          },
          {
            "name": "EnrollmentWrite",
            "value": "EnrollmentWrite"
          },
          {
            "name": "DeviceConnect",
            "value": "DeviceConnect"
          },
          {
            "name": "RegistrationStatusRead",
            "value": "RegistrationStatusRead"
          },
          {
            "name": "RegistrationStatusWrite",
            "value": "RegistrationStatusWrite"
          }
        ]
      }
    },
    "AllocationPolicy": {
      "type": "string",
      "description": "Allocation policy to be used by this provisioning service.",
      "enum": [
        "Hashed",
        "GeoLatency",
        "Static"
      ],
      "x-ms-enum": {
        "name": "AllocationPolicy",
        "modelAsString": true,
        "values": [
          {
            "name": "Hashed",
            "value": "Hashed"
          },
          {
            "name": "GeoLatency",
            "value": "GeoLatency"
          },
          {
            "name": "Static",
            "value": "Static"
          }
        ]
      }
    },
    "AsyncOperationResult": {
      "type": "object",
      "description": "Result of a long running operation.",
      "properties": {
        "status": {
          "type": "string",
          "description": "current status of a long running operation."
        },
        "error": {
          "$ref": "#/definitions/ErrorMessage",
          "description": "Error message containing code, description and details"
        }
      }
    },
    "CertificateListDescription": {
      "type": "object",
      "description": "The JSON-serialized array of Certificate objects.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The array of Certificate objects.",
          "items": {
            "$ref": "#/definitions/CertificateResponse"
          }
        }
      }
    },
    "CertificateProperties": {
      "type": "object",
      "description": "The description of an X509 CA Certificate.",
      "properties": {
        "subject": {
          "type": "string",
          "description": "The certificate's subject name.",
          "readOnly": true
        },
        "expiry": {
          "type": "string",
          "format": "date-time",
          "description": "The certificate's expiration date and time.",
          "readOnly": true
        },
        "thumbprint": {
          "type": "string",
          "description": "The certificate's thumbprint.",
          "readOnly": true
        },
        "isVerified": {
          "type": "boolean",
          "description": "Determines whether certificate has been verified."
        },
        "certificate": {
          "type": "string",
          "format": "byte",
          "description": "base-64 representation of X509 certificate .cer file or just .pem file content."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The certificate's creation date and time.",
          "readOnly": true
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "The certificate's last update date and time.",
          "readOnly": true
        }
      }
    },
    "CertificateResponse": {
      "type": "object",
      "description": "The X509 Certificate.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CertificateProperties",
          "description": "properties of a certificate",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true,
          "x-ms-client-name": "eTag"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ErrorMessage": {
      "type": "object",
      "description": "Error response containing message and code.",
      "properties": {
        "code": {
          "type": "string",
          "description": "standard error code"
        },
        "message": {
          "type": "string",
          "description": "standard error description"
        },
        "details": {
          "type": "string",
          "description": "detailed summary of error"
        }
      }
    },
    "GroupIdInformation": {
      "type": "object",
      "description": "The group information for creating a private endpoint on a provisioning service",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GroupIdInformationProperties",
          "description": "The properties for a group information object",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "GroupIdInformationProperties": {
      "type": "object",
      "description": "The properties for a group information object",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The group id"
        },
        "requiredMembers": {
          "type": "array",
          "description": "The required members for a specific group id",
          "items": {
            "type": "string"
          }
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "The required DNS zones for a specific group id",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IotDpsPropertiesDescription": {
      "type": "object",
      "description": "the service specific properties of a provisioning service, including keys, linked iot hubs, current state, and system generated properties such as hostname and idScope",
      "properties": {
        "state": {
          "$ref": "#/definitions/State",
          "description": "Current state of the provisioning service."
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Whether requests from Public Network are allowed"
        },
        "ipFilterRules": {
          "type": "array",
          "description": "The IP filter rules.",
          "items": {
            "$ref": "#/definitions/IpFilterRule"
          },
          "x-ms-identifiers": []
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "Private endpoint connections created on this IotHub",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "provisioningState": {
          "type": "string",
          "description": "The ARM provisioning state of the provisioning service."
        },
        "iotHubs": {
          "type": "array",
          "description": "List of IoT hubs associated with this provisioning service.",
          "items": {
            "$ref": "#/definitions/IotHubDefinitionDescription"
          },
          "x-ms-identifiers": []
        },
        "allocationPolicy": {
          "$ref": "#/definitions/AllocationPolicy",
          "description": "Allocation policy to be used by this provisioning service."
        },
        "serviceOperationsHostName": {
          "type": "string",
          "description": "Service endpoint for provisioning service.",
          "readOnly": true
        },
        "deviceProvisioningHostName": {
          "type": "string",
          "description": "Device endpoint for this provisioning service.",
          "readOnly": true
        },
        "idScope": {
          "type": "string",
          "description": "Unique identifier of this provisioning service.",
          "readOnly": true
        },
        "authorizationPolicies": {
          "type": "array",
          "description": "List of authorization keys for a provisioning service.",
          "items": {
            "$ref": "#/definitions/SharedAccessSignatureAuthorizationRuleAccessRightsDescription"
          },
          "x-ms-identifiers": []
        },
        "enableDataResidency": {
          "type": "boolean",
          "description": "Optional.\nIndicates if the DPS instance has Data Residency enabled, removing the cross geo-pair disaster recovery."
        },
        "portalOperationsHostName": {
          "type": "string",
          "description": "Portal endpoint to enable CORS for this provisioning service."
        }
      }
    },
    "IotDpsSku": {
      "type": "string",
      "description": "Sku name.",
      "enum": [
        "S1"
      ],
      "x-ms-enum": {
        "name": "IotDpsSku",
        "modelAsString": true,
        "values": [
          {
            "name": "S1",
            "value": "S1"
          }
        ]
      }
    },
    "IotDpsSkuDefinition": {
      "type": "object",
      "description": "Available SKUs of tier and units.",
      "properties": {
        "name": {
          "$ref": "#/definitions/IotDpsSku",
          "description": "Sku name."
        }
      }
    },
    "IotDpsSkuDefinitionListResult": {
      "type": "object",
      "description": "List of available SKUs.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IotDpsSkuDefinition items on this page",
          "items": {
            "$ref": "#/definitions/IotDpsSkuDefinition"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "IotDpsSkuInfo": {
      "type": "object",
      "description": "List of possible provisioning service SKUs.",
      "properties": {
        "name": {
          "$ref": "#/definitions/IotDpsSku",
          "description": "Sku name."
        },
        "tier": {
          "type": "string",
          "description": "Pricing tier name of the provisioning service.",
          "readOnly": true
        },
        "capacity": {
          "type": "integer",
          "format": "int64",
          "description": "The number of units to provision"
        }
      }
    },
    "IotHubAuthenticationType": {
      "type": "string",
      "description": "IotHub MI authentication type: KeyBased, UserAssigned, SystemAssigned.",
      "enum": [
        "KeyBased",
        "UserAssigned",
        "SystemAssigned"
      ],
      "x-ms-enum": {
        "name": "IotHubAuthenticationType",
        "modelAsString": true,
        "values": [
          {
            "name": "KeyBased",
            "value": "KeyBased"
          },
          {
            "name": "UserAssigned",
            "value": "UserAssigned"
          },
          {
            "name": "SystemAssigned",
            "value": "SystemAssigned"
          }
        ]
      }
    },
    "IotHubDefinitionDescription": {
      "type": "object",
      "description": "Description of the IoT hub.",
      "properties": {
        "applyAllocationPolicy": {
          "type": "boolean",
          "description": "flag for applying allocationPolicy or not for a given iot hub."
        },
        "allocationWeight": {
          "type": "integer",
          "format": "int32",
          "description": "weight to apply for a given iot h."
        },
        "name": {
          "type": "string",
          "description": "Host name of the IoT hub.",
          "readOnly": true
        },
        "connectionString": {
          "type": "string",
          "description": "Connection string of the IoT hub."
        },
        "location": {
          "type": "string",
          "description": "ARM region of the IoT hub."
        },
        "authenticationType": {
          "$ref": "#/definitions/IotHubAuthenticationType",
          "description": "IotHub MI authentication type: KeyBased, UserAssigned, SystemAssigned."
        },
        "selectedUserAssignedIdentityResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The selected user-assigned identity resource Id associated with IoT Hub. This is required when authenticationType is UserAssigned.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedIdentity/userAssignedIdentities"
              }
            ]
          }
        }
      },
      "required": [
        "location"
      ]
    },
    "IpFilterActionType": {
      "type": "string",
      "description": "The desired action for requests captured by this rule.",
      "enum": [
        "Accept",
        "Reject"
      ],
      "x-ms-enum": {
        "name": "IpFilterActionType",
        "modelAsString": false
      }
    },
    "IpFilterRule": {
      "type": "object",
      "description": "The IP filter rules for a provisioning Service.",
      "properties": {
        "filterName": {
          "type": "string",
          "description": "The name of the IP filter rule."
        },
        "action": {
          "$ref": "#/definitions/IpFilterActionType",
          "description": "The desired action for requests captured by this rule."
        },
        "ipMask": {
          "type": "string",
          "description": "A string that contains the IP address range in CIDR notation for the rule."
        },
        "target": {
          "$ref": "#/definitions/IpFilterTargetType",
          "description": "Target for requests captured by this rule."
        }
      },
      "required": [
        "filterName",
        "action",
        "ipMask"
      ]
    },
    "IpFilterTargetType": {
      "type": "string",
      "description": "Target for requests captured by this rule.",
      "enum": [
        "all",
        "serviceApi",
        "deviceApi"
      ],
      "x-ms-enum": {
        "name": "IpFilterTargetType",
        "modelAsString": false
      }
    },
    "NameAvailabilityInfo": {
      "type": "object",
      "description": "Description of name availability.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "specifies if a name is available or not"
        },
        "reason": {
          "$ref": "#/definitions/NameUnavailabilityReason",
          "description": "specifies the reason a name is unavailable"
        },
        "message": {
          "type": "string",
          "description": "message containing a detailed reason name is unavailable"
        }
      }
    },
    "NameUnavailabilityReason": {
      "type": "string",
      "description": "specifies the reason a name is unavailable",
      "enum": [
        "Invalid",
        "AlreadyExists"
      ],
      "x-ms-enum": {
        "name": "NameUnavailabilityReason",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "AlreadyExists",
            "value": "AlreadyExists"
          }
        ]
      }
    },
    "OperationInputs": {
      "type": "object",
      "description": "Input values for operation results call.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the Provisioning Service to check."
        }
      },
      "required": [
        "name"
      ]
    },
    "PrivateEndpoint": {
      "type": "object",
      "description": "The private endpoint property of a private endpoint connection",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        }
      }
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "description": "The private endpoint connection of a provisioning service",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "The properties of a private endpoint connection",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "description": "The properties of a private endpoint connection",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The private endpoint property of a private endpoint connection"
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "The current state of a private endpoint connection"
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ]
    },
    "PrivateLinkResources": {
      "type": "object",
      "description": "The available private link resources for a provisioning service",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of available private link resources for a provisioning service",
          "items": {
            "$ref": "#/definitions/GroupIdInformation"
          }
        }
      }
    },
    "PrivateLinkServiceConnectionState": {
      "type": "object",
      "description": "The current state of a private endpoint connection",
      "properties": {
        "status": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionStatus",
          "description": "The status of a private endpoint connection"
        },
        "description": {
          "type": "string",
          "description": "The description for the current state of a private endpoint connection"
        },
        "actionsRequired": {
          "type": "string",
          "description": "Actions required for a private endpoint connection"
        }
      },
      "required": [
        "status",
        "description"
      ]
    },
    "PrivateLinkServiceConnectionStatus": {
      "type": "string",
      "description": "The status of a private endpoint connection",
      "enum": [
        "Pending",
        "Approved",
        "Rejected",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "PrivateLinkServiceConnectionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Pending",
            "value": "Pending"
          },
          {
            "name": "Approved",
            "value": "Approved"
          },
          {
            "name": "Rejected",
            "value": "Rejected"
          },
          {
            "name": "Disconnected",
            "value": "Disconnected"
          }
        ]
      }
    },
    "ProvisioningServiceDescription": {
      "type": "object",
      "description": "The description of the provisioning service.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IotDpsPropertiesDescription",
          "description": "Service specific properties for a provisioning service",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention."
        },
        "sku": {
          "$ref": "#/definitions/IotDpsSkuInfo",
          "description": "Sku info for a provisioning Service."
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "required": [
        "properties",
        "sku"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ProvisioningServiceDescriptionListResult": {
      "type": "object",
      "description": "The response of a ProvisioningServiceDescription list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ProvisioningServiceDescription items on this page",
          "items": {
            "$ref": "#/definitions/ProvisioningServiceDescription"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PublicNetworkAccess": {
      "type": "string",
      "description": "Whether requests from Public Network are allowed",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "PublicNetworkAccess",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "SharedAccessSignatureAuthorizationRuleAccessRightsDescription": {
      "type": "object",
      "description": "Description of the shared access key.",
      "properties": {
        "keyName": {
          "type": "string",
          "description": "Name of the key."
        },
        "primaryKey": {
          "type": "string",
          "description": "Primary SAS key value."
        },
        "secondaryKey": {
          "type": "string",
          "description": "Secondary SAS key value."
        },
        "rights": {
          "$ref": "#/definitions/AccessRightsDescription",
          "description": "Rights that this key has."
        }
      },
      "required": [
        "keyName",
        "rights"
      ]
    },
    "SharedAccessSignatureAuthorizationRuleListResult": {
      "type": "object",
      "description": "List of shared access keys.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SharedAccessSignatureAuthorizationRuleAccessRightsDescription items on this page",
          "items": {
            "$ref": "#/definitions/SharedAccessSignatureAuthorizationRuleAccessRightsDescription"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "State": {
      "type": "string",
      "description": "Current state of the provisioning service.",
      "enum": [
        "Activating",
        "Active",
        "Deleting",
        "Deleted",
        "ActivationFailed",
        "DeletionFailed",
        "Transitioning",
        "Suspending",
        "Suspended",
        "Resuming",
        "FailingOver",
        "FailoverFailed"
      ],
      "x-ms-enum": {
        "name": "State",
        "modelAsString": true,
        "values": [
          {
            "name": "Activating",
            "value": "Activating"
          },
          {
            "name": "Active",
            "value": "Active"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          },
          {
            "name": "Deleted",
            "value": "Deleted"
          },
          {
            "name": "ActivationFailed",
            "value": "ActivationFailed"
          },
          {
            "name": "DeletionFailed",
            "value": "DeletionFailed"
          },
          {
            "name": "Transitioning",
            "value": "Transitioning"
          },
          {
            "name": "Suspending",
            "value": "Suspending"
          },
          {
            "name": "Suspended",
            "value": "Suspended"
          },
          {
            "name": "Resuming",
            "value": "Resuming"
          },
          {
            "name": "FailingOver",
            "value": "FailingOver"
          },
          {
            "name": "FailoverFailed",
            "value": "FailoverFailed"
          }
        ]
      }
    },
    "TagsResource": {
      "type": "object",
      "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a Provisioning Service instance.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "VerificationCodeRequest": {
      "type": "object",
      "description": "The JSON-serialized leaf certificate",
      "properties": {
        "certificate": {
          "type": "string",
          "description": "base-64 representation of X509 certificate .cer file or just .pem file content."
        }
      }
    },
    "VerificationCodeResponse": {
      "type": "object",
      "description": "Description of the response of the verification code.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of certificate.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "Request etag.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/VerificationCodeResponseProperties"
        }
      }
    },
    "VerificationCodeResponseProperties": {
      "type": "object",
      "properties": {
        "verificationCode": {
          "type": "string",
          "description": "Verification code."
        },
        "subject": {
          "type": "string",
          "description": "Certificate subject."
        },
        "expiry": {
          "type": "string",
          "description": "Code expiry."
        },
        "thumbprint": {
          "type": "string",
          "description": "Certificate thumbprint."
        },
        "isVerified": {
          "type": "boolean",
          "description": "Indicate if the certificate is verified by owner of private key."
        },
        "certificate": {
          "type": "string",
          "format": "byte",
          "description": "base-64 representation of X509 certificate .cer file or just .pem file content."
        },
        "created": {
          "type": "string",
          "description": "Certificate created time."
        },
        "updated": {
          "type": "string",
          "description": "Certificate updated time."
        }
      }
    }
  },
  "parameters": {}
}
