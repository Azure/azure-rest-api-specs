{
  "swagger": "2.0",
  "info": {
    "title": "iotDpsClient",
    "version": "2022-02-05",
    "description": "API for using the Azure IoT Hub Device Provisioning Service features.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "AadOauth2Auth": [
        "https://management.azure.com/.default"
      ]
    }
  ],
  "securityDefinitions": {
    "AadOauth2Auth": {
      "type": "oauth2",
      "description": "The Azure Active Directory OAuth2 Flow",
      "flow": "accessCode",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "https://management.azure.com/.default": ""
      },
      "tokenUrl": "https://login.microsoftonline.com/common/oauth2/token"
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "CertificateResponses"
    },
    {
      "name": "ProvisioningServiceDescriptions"
    },
    {
      "name": "GroupIdInformations"
    },
    {
      "name": "PrivateEndpointConnections"
    }
  ],
  "paths": {
    "/providers/Microsoft.Devices/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Devices/provisioningServices": {
      "get": {
        "operationId": "IotDpsResource_ListBySubscription",
        "tags": [
          "ProvisioningServiceDescriptions"
        ],
        "description": "List all the provisioning services for a given subscription id.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningServiceDescriptionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSListBySubscription": {
            "$ref": "./examples/IotDpsResource_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/{keyName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/listKeysForKeyName": {
      "post": {
        "operationId": "IotDpsResource_ListKeysForKeyName",
        "tags": [
          "ProvisioningServiceDescriptions"
        ],
        "description": "List primary and secondary keys for a specific key name",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "keyName",
            "in": "path",
            "description": "Logical key name to get key-values for.",
            "required": true,
            "type": "string"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SharedAccessSignatureAuthorizationRuleAccessRightsDescription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSGetKey": {
            "$ref": "./examples/IotDpsResource_ListKeysForKeyName.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices": {
      "get": {
        "operationId": "IotDpsResource_ListByResourceGroup",
        "tags": [
          "ProvisioningServiceDescriptions"
        ],
        "description": "Get a list of all provisioning services in the given resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningServiceDescriptionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSListByResourceGroup": {
            "$ref": "./examples/IotDpsResource_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}": {
      "get": {
        "operationId": "IotDpsResource_Get",
        "tags": [
          "ProvisioningServiceDescriptions"
        ],
        "description": "Get the metadata of the provisioning service without SAS keys.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningServiceDescription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSGet": {
            "$ref": "./examples/IotDpsResource_Get.json"
          }
        }
      },
      "put": {
        "operationId": "IotDpsResource_CreateOrUpdate",
        "tags": [
          "ProvisioningServiceDescriptions"
        ],
        "description": "Create or update the metadata of the provisioning service. The usual pattern to modify a property is to retrieve the provisioning service metadata and security metadata, and then combine them with the modified values in a new body to update the provisioning service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iotDpsDescription",
            "in": "body",
            "description": "Description of the provisioning service to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProvisioningServiceDescription"
            },
            "x-ms-client-name": "iotDpsDescription"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ProvisioningServiceDescription' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ProvisioningServiceDescription"
            }
          },
          "201": {
            "description": "Resource 'ProvisioningServiceDescription' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ProvisioningServiceDescription"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSCreate": {
            "$ref": "./examples/IotDpsResource_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "IotDpsResource_Update",
        "tags": [
          "ProvisioningServiceDescriptions"
        ],
        "description": "Update an existing provisioning service's tags. to update other fields use the CreateOrUpdate method",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ProvisioningServiceTags",
            "in": "body",
            "description": "Updated tag information to set into the provisioning service instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagsResource"
            },
            "x-ms-client-name": "ProvisioningServiceTags"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningServiceDescription"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSPatch": {
            "$ref": "./examples/IotDpsResource_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "IotDpsResource_Delete",
        "tags": [
          "ProvisioningServiceDescriptions"
        ],
        "description": "Deletes the Provisioning Service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSDelete": {
            "$ref": "./examples/IotDpsResource_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates": {
      "get": {
        "operationId": "DpsCertificate_List",
        "tags": [
          "CertificateResponses"
        ],
        "description": "Get all the certificates tied to the provisioning service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CertificateResponseListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSGetCertificates": {
            "$ref": "./examples/DpsCertificate_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}": {
      "get": {
        "operationId": "DpsCertificate_Get",
        "tags": [
          "CertificateResponses"
        ],
        "description": "Get the certificate from the provisioning service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the certificate.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "If-Match"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the certificate to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CertificateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSGetCertificate": {
            "$ref": "./examples/DpsCertificate_Get.json"
          }
        }
      },
      "put": {
        "operationId": "DpsCertificate_CreateOrUpdate",
        "tags": [
          "CertificateResponses"
        ],
        "description": "Add new certificate or update an existing certificate.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the certificate. This is required to update an existing certificate, and ignored while creating a brand new certificate.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "If-Match"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the certificate to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateDescription",
            "in": "body",
            "description": "The certificate body.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CertificateResponse"
            },
            "x-ms-client-name": "certificateDescription"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CertificateResponse' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/CertificateResponse"
            }
          },
          "201": {
            "description": "Resource 'CertificateResponse' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/CertificateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSCreateOrUpdateCertificate": {
            "$ref": "./examples/DpsCertificate_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "DpsCertificate_Delete",
        "tags": [
          "CertificateResponses"
        ],
        "description": "Deletes the specified certificate associated with the Provisioning Service",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the certificate",
            "required": true,
            "type": "string",
            "x-ms-client-name": "If-Match"
          },
          {
            "name": "certificateCommonName",
            "in": "query",
            "description": "This is optional, and it is the Common Name of the certificate.",
            "required": false,
            "type": "string"
          },
          {
            "name": "certificate.rawBytes",
            "in": "query",
            "description": "Raw data within the certificate.",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "certificate.isVerified",
            "in": "query",
            "description": "Indicates if certificate has been verified by owner of the private key.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "certificate.purpose",
            "in": "query",
            "description": "A description that mentions the purpose of the certificate.",
            "required": false,
            "type": "string",
            "enum": [
              "clientAuthentication",
              "serverAuthentication"
            ],
            "x-ms-enum": {
              "name": "CertificatePurpose",
              "modelAsString": true
            }
          },
          {
            "name": "certificateCreatedOn",
            "in": "query",
            "description": "Time the certificate is created.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "certificateLastUpdatedOn",
            "in": "query",
            "description": "Time the certificate is last updated.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "certificate.hasPrivateKey",
            "in": "query",
            "description": "Indicates if the certificate contains a private key.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "certificate.nonce",
            "in": "query",
            "description": "Random number generated to indicate Proof of Possession.",
            "required": false,
            "type": "string"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the certificate to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSDeleteCertificate": {
            "$ref": "./examples/DpsCertificate_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}/generateVerificationCode": {
      "post": {
        "operationId": "DpsCertificate_GenerateVerificationCode",
        "tags": [
          "CertificateResponses"
        ],
        "description": "Generate verification code for Proof of Possession.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the certificate. This is required to update an existing certificate, and ignored while creating a brand new certificate.",
            "required": true,
            "type": "string",
            "x-ms-client-name": "If-Match"
          },
          {
            "name": "certificateCommonName",
            "in": "query",
            "description": "Common Name for the certificate.",
            "required": false,
            "type": "string"
          },
          {
            "name": "certificate.rawBytes",
            "in": "query",
            "description": "Raw data of certificate.",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "certificate.isVerified",
            "in": "query",
            "description": "Indicates if the certificate has been verified by owner of the private key.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "certificate.purpose",
            "in": "query",
            "description": "Description mentioning the purpose of the certificate.",
            "required": false,
            "type": "string",
            "enum": [
              "clientAuthentication",
              "serverAuthentication"
            ],
            "x-ms-enum": {
              "name": "CertificatePurpose",
              "modelAsString": true
            }
          },
          {
            "name": "certificateCreatedOn",
            "in": "query",
            "description": "Certificate creation time.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "certificateLastUpdatedOn",
            "in": "query",
            "description": "Certificate last updated time.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "certificate.hasPrivateKey",
            "in": "query",
            "description": "Indicates if the certificate contains private key.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "certificate.nonce",
            "in": "query",
            "description": "Random number generated to indicate Proof of Possession.",
            "required": false,
            "type": "string"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the certificate to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VerificationCodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSGenerateVerificationCode": {
            "$ref": "./examples/DpsCertificate_GenerateVerificationCode.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}/verifyCertificate": {
      "post": {
        "operationId": "DpsCertificate_VerifyCertificate",
        "tags": [
          "CertificateResponses"
        ],
        "description": "Verifies the certificate's private key possession by providing the leaf cert issued by the verifying pre uploaded certificate.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the certificate.",
            "required": true,
            "type": "string",
            "x-ms-client-name": "If-Match"
          },
          {
            "name": "certificateCommonName",
            "in": "query",
            "description": "Common Name for the certificate.",
            "required": false,
            "type": "string"
          },
          {
            "name": "certificate.rawBytes",
            "in": "query",
            "description": "Raw data of certificate.",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "certificate.isVerified",
            "in": "query",
            "description": "Indicates if the certificate has been verified by owner of the private key.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "certificate.purpose",
            "in": "query",
            "description": "Describe the purpose of the certificate.",
            "required": false,
            "type": "string",
            "enum": [
              "clientAuthentication",
              "serverAuthentication"
            ],
            "x-ms-enum": {
              "name": "CertificatePurpose",
              "modelAsString": true
            }
          },
          {
            "name": "certificateCreatedOn",
            "in": "query",
            "description": "Certificate creation time.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "certificateLastUpdatedOn",
            "in": "query",
            "description": "Certificate last updated time.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "certificate.hasPrivateKey",
            "in": "query",
            "description": "Indicates if the certificate contains private key.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "certificate.nonce",
            "in": "query",
            "description": "Random number generated to indicate Proof of Possession.",
            "required": false,
            "type": "string"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the certificate to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The name of the certificate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerificationCodeRequest"
            },
            "x-ms-client-name": "request"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CertificateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSVerifyCertificate": {
            "$ref": "./examples/DpsCertificate_VerifyCertificate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/listKeys": {
      "post": {
        "operationId": "IotDpsResource_ListKeys",
        "tags": [
          "ProvisioningServiceDescriptions"
        ],
        "description": "List the primary and secondary keys for a provisioning service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PagedSharedAccessSignatureAuthorizationRuleAccessRightsDescription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DPSListKeys": {
            "$ref": "./examples/IotDpsResource_ListKeys.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/privateEndpointConnections": {
      "get": {
        "operationId": "IotDpsResource_ListPrivateEndpointConnections",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "List private endpoint connection properties",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_List": {
            "$ref": "./examples/IotDpsResource_ListPrivateEndpointConnections.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "IotDpsResource_GetPrivateEndpointConnection",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Get private endpoint connection properties",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_Get": {
            "$ref": "./examples/IotDpsResource_GetPrivateEndpointConnection.json"
          }
        }
      },
      "put": {
        "operationId": "IotDpsResource_CreateOrUpdatePrivateEndpointConnection",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Create or update the status of a private endpoint connection with the specified name",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnection",
            "in": "body",
            "description": "The private endpoint connection with updated properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            },
            "x-ms-client-name": "privateEndpointConnection"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateEndpointConnection' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "201": {
            "description": "Resource 'PrivateEndpointConnection' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_CreateOrUpdate": {
            "$ref": "./examples/IotDpsResource_CreateOrUpdatePrivateEndpointConnection.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "IotDpsResource_DeletePrivateEndpointConnection",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Delete private endpoint connection with the specified name",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_Delete": {
            "$ref": "./examples/IotDpsResource_DeletePrivateEndpointConnection.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/privateLinkResources": {
      "get": {
        "operationId": "IotDpsResource_ListPrivateLinkResources",
        "tags": [
          "GroupIdInformations"
        ],
        "description": "List private link resources for the given provisioning service",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GroupIdInformationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateLinkResources_List": {
            "$ref": "./examples/IotDpsResource_ListPrivateLinkResources.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/privateLinkResources/{groupId}": {
      "get": {
        "operationId": "IotDpsResource_GetPrivateLinkResources",
        "tags": [
          "GroupIdInformations"
        ],
        "description": "Get the specified private link resource for the given provisioning service",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of the provisioning service to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "The name of the private link resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GroupIdInformation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateLinkResources_List": {
            "$ref": "./examples/IotDpsResource_GetPrivateLinkResources.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/skus/{provisioningServiceName}/{subscriptionId}/{resourceGroupName}": {
      "get": {
        "operationId": "IotDpsResource_listValidSkus",
        "tags": [
          "ProvisioningServiceDescriptions"
        ],
        "summary": "Get the list of valid SKUs for a provisioning service.",
        "description": "Gets the list of valid SKUs and tiers for a provisioning service.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "Name of provisioning service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedIotDpsSkuDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "DPSGetValidSku": {
            "$ref": "./examples/IotDpsResource_listValidSkus.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "AccessRightsDescription": {
      "type": "string",
      "description": "Rights that this key has.",
      "enum": [
        "ServiceConfig",
        "EnrollmentRead",
        "EnrollmentWrite",
        "DeviceConnect",
        "RegistrationStatusRead",
        "RegistrationStatusWrite"
      ],
      "x-ms-enum": {
        "name": "AccessRightsDescription",
        "modelAsString": true
      }
    },
    "AllocationPolicy": {
      "type": "string",
      "description": "Allocation policy to be used by this provisioning service.",
      "enum": [
        "Hashed",
        "GeoLatency",
        "Static"
      ],
      "x-ms-enum": {
        "name": "AllocationPolicy",
        "modelAsString": true
      }
    },
    "AsyncOperationResult": {
      "type": "object",
      "description": "Result of a long running operation.",
      "properties": {
        "status": {
          "type": "string",
          "description": "current status of a long running operation."
        },
        "error": {
          "$ref": "#/definitions/ErrorMessage",
          "description": "Error message containing code, description and details"
        }
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "CertificateBodyDescription": {
      "type": "object",
      "description": "The JSON-serialized X509 Certificate.",
      "properties": {
        "certificate": {
          "type": "string",
          "description": "Base-64 representation of the X509 leaf certificate .cer file or just .pem file content."
        },
        "isVerified": {
          "type": "boolean",
          "description": "True indicates that the certificate will be created in verified state and proof of possession will not be required."
        }
      }
    },
    "CertificateProperties": {
      "type": "object",
      "description": "The description of an X509 CA Certificate.",
      "properties": {
        "subject": {
          "type": "string",
          "description": "The certificate's subject name.",
          "readOnly": true
        },
        "expiry": {
          "type": "string",
          "format": "date-time",
          "description": "The certificate's expiration date and time.",
          "readOnly": true
        },
        "thumbprint": {
          "type": "string",
          "description": "The certificate's thumbprint.",
          "readOnly": true
        },
        "isVerified": {
          "type": "boolean",
          "description": "Determines whether certificate has been verified."
        },
        "certificate": {
          "type": "string",
          "description": "base-64 representation of X509 certificate .cer file or just .pem file content."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The certificate's creation date and time.",
          "readOnly": true
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "The certificate's last update date and time.",
          "readOnly": true
        }
      }
    },
    "CertificatePurpose": {
      "type": "string",
      "enum": [
        "clientAuthentication",
        "serverAuthentication"
      ],
      "x-ms-enum": {
        "name": "CertificatePurpose",
        "modelAsString": true
      }
    },
    "CertificateResponse": {
      "type": "object",
      "description": "The X509 Certificate.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "The entity tag.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/CertificateProperties",
          "description": "properties of a certificate",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "CertificateResponseListResult": {
      "type": "object",
      "description": "The response of a CertificateResponse list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CertificateResponse items on this page",
          "items": {
            "$ref": "#/definitions/CertificateResponse"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ErrorDetails": {
      "type": "object",
      "description": "Error details.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "httpStatusCode": {
          "type": "string",
          "description": "The HTTP status code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "details": {
          "type": "string",
          "description": "The error details.",
          "readOnly": true
        }
      }
    },
    "ErrorMessage": {
      "type": "object",
      "description": "Error response containing message and code.",
      "properties": {
        "code": {
          "type": "string",
          "description": "standard error code"
        },
        "message": {
          "type": "string",
          "description": "standard error description"
        },
        "details": {
          "type": "string",
          "description": "detailed summary of error"
        }
      }
    },
    "GroupIdInformation": {
      "type": "object",
      "description": "The group information for creating a private endpoint on a provisioning service",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GroupIdInformationProperties",
          "description": "The properties for a group information object",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "GroupIdInformationListResult": {
      "type": "object",
      "description": "The response of a GroupIdInformation list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The GroupIdInformation items on this page",
          "items": {
            "$ref": "#/definitions/GroupIdInformation"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "GroupIdInformationProperties": {
      "type": "object",
      "description": "The properties for a group information object",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The group id"
        },
        "requiredMembers": {
          "type": "array",
          "description": "The required members for a specific group id",
          "items": {
            "type": "string"
          }
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "The required DNS zones for a specific group id",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IotDpsPropertiesDescription": {
      "type": "object",
      "description": "the service specific properties of a provisioning service, including keys, linked iot hubs, current state, and system generated properties such as hostname and idScope",
      "properties": {
        "state": {
          "$ref": "#/definitions/State",
          "description": "Current state of the provisioning service."
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Whether requests from Public Network are allowed"
        },
        "ipFilterRules": {
          "type": "array",
          "description": "The IP filter rules.",
          "items": {
            "$ref": "#/definitions/IpFilterRule"
          },
          "x-ms-identifiers": []
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "Private endpoint connections created on this IotHub",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "provisioningState": {
          "type": "string",
          "description": "The ARM provisioning state of the provisioning service."
        },
        "iotHubs": {
          "type": "array",
          "description": "List of IoT hubs associated with this provisioning service.",
          "items": {
            "$ref": "#/definitions/IotHubDefinitionDescription"
          },
          "x-ms-identifiers": []
        },
        "allocationPolicy": {
          "$ref": "#/definitions/AllocationPolicy",
          "description": "Allocation policy to be used by this provisioning service."
        },
        "serviceOperationsHostName": {
          "type": "string",
          "description": "Service endpoint for provisioning service.",
          "readOnly": true
        },
        "deviceProvisioningHostName": {
          "type": "string",
          "description": "Device endpoint for this provisioning service.",
          "readOnly": true
        },
        "idScope": {
          "type": "string",
          "description": "Unique identifier of this provisioning service.",
          "readOnly": true
        },
        "authorizationPolicies": {
          "type": "array",
          "description": "List of authorization keys for a provisioning service.",
          "items": {
            "$ref": "#/definitions/SharedAccessSignatureAuthorizationRuleAccessRightsDescription"
          },
          "x-ms-identifiers": []
        },
        "enableDataResidency": {
          "type": "boolean",
          "description": "Optional.\nIndicates if the DPS instance has Data Residency enabled, removing the cross geo-pair disaster recovery."
        }
      }
    },
    "IotDpsSku": {
      "type": "string",
      "description": "Sku name.",
      "enum": [
        "S1"
      ],
      "x-ms-enum": {
        "name": "IotDpsSku",
        "modelAsString": true
      }
    },
    "IotDpsSkuDefinition": {
      "type": "object",
      "description": "Available SKUs of tier and units.",
      "properties": {
        "name": {
          "$ref": "#/definitions/IotDpsSku",
          "description": "Sku name."
        }
      }
    },
    "IotDpsSkuInfo": {
      "type": "object",
      "description": "List of possible provisioning service SKUs.",
      "properties": {
        "name": {
          "$ref": "#/definitions/IotDpsSku",
          "description": "Sku name."
        },
        "tier": {
          "type": "string",
          "description": "Pricing tier name of the provisioning service.",
          "readOnly": true
        },
        "capacity": {
          "type": "integer",
          "format": "int64",
          "description": "The number of units to provision"
        }
      }
    },
    "IotHubDefinitionDescription": {
      "type": "object",
      "description": "Description of the IoT hub.",
      "properties": {
        "applyAllocationPolicy": {
          "type": "boolean",
          "description": "flag for applying allocationPolicy or not for a given iot hub."
        },
        "allocationWeight": {
          "type": "integer",
          "format": "int32",
          "description": "weight to apply for a given iot h."
        },
        "name": {
          "type": "string",
          "description": "Host name of the IoT hub.",
          "readOnly": true
        },
        "connectionString": {
          "type": "string",
          "description": "Connection string of the IoT hub."
        },
        "location": {
          "type": "string",
          "description": "ARM region of the IoT hub."
        }
      },
      "required": [
        "connectionString",
        "location"
      ]
    },
    "IpFilterActionType": {
      "type": "string",
      "description": "The desired action for requests captured by this rule.",
      "enum": [
        "Accept",
        "Reject"
      ],
      "x-ms-enum": {
        "name": "IpFilterActionType",
        "modelAsString": false
      }
    },
    "IpFilterRule": {
      "type": "object",
      "description": "The IP filter rules for a provisioning Service.",
      "properties": {
        "filterName": {
          "type": "string",
          "description": "The name of the IP filter rule."
        },
        "action": {
          "$ref": "#/definitions/IpFilterActionType",
          "description": "The desired action for requests captured by this rule."
        },
        "ipMask": {
          "type": "string",
          "description": "A string that contains the IP address range in CIDR notation for the rule."
        },
        "target": {
          "$ref": "#/definitions/IpFilterTargetType",
          "description": "Target for requests captured by this rule."
        }
      },
      "required": [
        "filterName",
        "action",
        "ipMask"
      ]
    },
    "IpFilterTargetType": {
      "type": "string",
      "description": "Target for requests captured by this rule.",
      "enum": [
        "all",
        "serviceApi",
        "deviceApi"
      ],
      "x-ms-enum": {
        "name": "IpFilterTargetType",
        "modelAsString": false
      }
    },
    "NameAvailabilityInfo": {
      "type": "object",
      "description": "Description of name availability.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "specifies if a name is available or not"
        },
        "reason": {
          "$ref": "#/definitions/NameUnavailabilityReason",
          "description": "specifies the reason a name is unavailable"
        },
        "message": {
          "type": "string",
          "description": "message containing a detailed reason name is unavailable"
        }
      }
    },
    "NameUnavailabilityReason": {
      "type": "string",
      "description": "specifies the reason a name is unavailable",
      "enum": [
        "Invalid",
        "AlreadyExists"
      ],
      "x-ms-enum": {
        "name": "NameUnavailabilityReason",
        "modelAsString": true
      }
    },
    "OperationInputs": {
      "type": "object",
      "description": "Input values for operation results call.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the Provisioning Service to check."
        }
      },
      "required": [
        "name"
      ]
    },
    "PagedIotDpsSkuDefinition": {
      "type": "object",
      "description": "List of available SKUs.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IotDpsSkuDefinition items on this page",
          "items": {
            "$ref": "#/definitions/IotDpsSkuDefinition"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedSharedAccessSignatureAuthorizationRuleAccessRightsDescription": {
      "type": "object",
      "description": "List of shared access keys.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SharedAccessSignatureAuthorizationRuleAccessRightsDescription items on this page",
          "items": {
            "$ref": "#/definitions/SharedAccessSignatureAuthorizationRuleAccessRightsDescription"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateEndpoint": {
      "type": "object",
      "description": "The private endpoint property of a private endpoint connection",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        }
      }
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "description": "The private endpoint connection of a provisioning service",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "The properties of a private endpoint connection",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "description": "The response of a PrivateEndpointConnection list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateEndpointConnection items on this page",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "description": "The properties of a private endpoint connection",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The private endpoint property of a private endpoint connection"
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "The current state of a private endpoint connection"
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ]
    },
    "PrivateLinkServiceConnectionState": {
      "type": "object",
      "description": "The current state of a private endpoint connection",
      "properties": {
        "status": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionStatus",
          "description": "The status of a private endpoint connection"
        },
        "description": {
          "type": "string",
          "description": "The description for the current state of a private endpoint connection"
        },
        "actionsRequired": {
          "type": "string",
          "description": "Actions required for a private endpoint connection"
        }
      },
      "required": [
        "status",
        "description"
      ]
    },
    "PrivateLinkServiceConnectionStatus": {
      "type": "string",
      "description": "The status of a private endpoint connection",
      "enum": [
        "Pending",
        "Approved",
        "Rejected",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "PrivateLinkServiceConnectionStatus",
        "modelAsString": true
      }
    },
    "ProvisioningServiceDescription": {
      "type": "object",
      "description": "The description of the provisioning service.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention."
        },
        "properties": {
          "$ref": "#/definitions/IotDpsPropertiesDescription",
          "description": "Service specific properties for a provisioning service",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ProvisioningServiceDescriptionListResult": {
      "type": "object",
      "description": "The response of a ProvisioningServiceDescription list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ProvisioningServiceDescription items on this page",
          "items": {
            "$ref": "#/definitions/ProvisioningServiceDescription"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PublicNetworkAccess": {
      "type": "string",
      "description": "Whether requests from Public Network are allowed",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "PublicNetworkAccess",
        "modelAsString": true
      }
    },
    "Resource": {
      "type": "object",
      "description": "The common properties of an Azure resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The resource location."
        },
        "tags": {
          "type": "object",
          "description": "The resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "location"
      ]
    },
    "SharedAccessSignatureAuthorizationRuleAccessRightsDescription": {
      "type": "object",
      "description": "Description of the shared access key.",
      "properties": {
        "keyName": {
          "type": "string",
          "description": "Name of the key."
        },
        "primaryKey": {
          "type": "string",
          "description": "Primary SAS key value."
        },
        "secondaryKey": {
          "type": "string",
          "description": "Secondary SAS key value."
        },
        "rights": {
          "$ref": "#/definitions/AccessRightsDescription",
          "description": "Rights that this key has."
        }
      },
      "required": [
        "keyName",
        "rights"
      ]
    },
    "State": {
      "type": "string",
      "description": "Current state of the provisioning service.",
      "enum": [
        "Activating",
        "Active",
        "Deleting",
        "Deleted",
        "ActivationFailed",
        "DeletionFailed",
        "Transitioning",
        "Suspending",
        "Suspended",
        "Resuming",
        "FailingOver",
        "FailoverFailed"
      ],
      "x-ms-enum": {
        "name": "State",
        "modelAsString": true
      }
    },
    "TagsResource": {
      "type": "object",
      "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a Provisioning Service instance.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "VerificationCodeRequest": {
      "type": "object",
      "description": "The JSON-serialized leaf certificate",
      "properties": {
        "certificate": {
          "type": "string",
          "description": "base-64 representation of X509 certificate .cer file or just .pem file content."
        }
      }
    },
    "VerificationCodeResponse": {
      "type": "object",
      "description": "Description of the response of the verification code.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of certificate.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "Request etag.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/VerificationCodeResponseProperties"
        }
      }
    },
    "VerificationCodeResponseProperties": {
      "type": "object",
      "properties": {
        "verificationCode": {
          "type": "string",
          "description": "Verification code."
        },
        "subject": {
          "type": "string",
          "description": "Certificate subject."
        },
        "expiry": {
          "type": "string",
          "format": "date-time",
          "description": "Code expiry."
        },
        "thumbprint": {
          "type": "string",
          "description": "Certificate thumbprint."
        },
        "isVerified": {
          "type": "boolean",
          "description": "Indicate if the certificate is verified by owner of private key."
        },
        "certificate": {
          "type": "string",
          "description": "base-64 representation of X509 certificate .cer file or just .pem file content."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Certificate created time."
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Certificate updated time."
        }
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2022-02-05"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2022_02_05",
            "value": "2022-02-05",
            "description": "The 2022-02-05 API version."
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
