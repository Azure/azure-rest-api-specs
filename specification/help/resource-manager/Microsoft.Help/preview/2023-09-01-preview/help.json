{
  "swagger": "2.0",
  "info": {
    "title": "HelpRP",
    "description": "Help RP provider",
    "version": "2023-09-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.Help/operations": {
      "get": {
        "tags": [
          "operations"
        ],
        "description": "Returns list of operations.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation details.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List All Operations": {
            "$ref": "./examples/ListOperations.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Help/checkNameAvailability": {
      "post": {
        "tags": [
          "checkNameAvailability"
        ],
        "description": "This API is used to check the uniqueness of a resource name used for a diagnostic, troubleshooter or solutions",
        "operationId": "CheckNameAvailability_Post",
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "CheckNameAvailabilityRequest",
            "description": "The required parameters for availability check.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/CheckNameAvailabilityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the availability of the requested resource name.",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Example when name is available for a Diagnostic resource": {
            "$ref": "./examples/CheckNameAvailabilityForDiagnosticWhenNameIsAvailable.json"
          },
          "Example when name is not available for a Diagnostic resource": {
            "$ref": "./examples/CheckNameAvailabilityForDiagnosticWhenNameIsNotAvailable.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Help/diagnostics/{diagnosticsResourceName}": {
      "put": {
        "tags": [
          "diagnostics"
        ],
        "description": "Creates a diagnostic for the specific resource using solutionId and requiredInputs* from discovery solutions. <br/>Diagnostics are powerful solutions that access product resources or other relevant data and provide the root cause of the issue and the steps to address the issue.<br/><br/> <b>Note: </b> ‘requiredInputs’ from Discovery solutions response must be passed via ‘additionalParameters’ as an input to Diagnostics API.",
        "operationId": "Diagnostics_Create",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticsResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "diagnosticResourceRequest",
            "description": "The required request body for this insightResource invocation.",
            "schema": {
              "$ref": "#/definitions/DiagnosticResource"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Create or Update diagnostics successfully.",
            "schema": {
              "$ref": "#/definitions/DiagnosticResource"
            }
          },
          "200": {
            "description": "Create or Update diagnostics successfully.",
            "schema": {
              "$ref": "#/definitions/DiagnosticResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Creates a Diagnostic for a KeyVault resource": {
            "$ref": "./examples/CreateDiagnosticForKeyVaultResource.json"
          }
        }
      },
      "get": {
        "tags": [
          "diagnostics"
        ],
        "description": "Get the diagnostics using the 'diagnosticsResourceName' you chose while creating the diagnostic.",
        "operationId": "Diagnostics_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticsResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful fetched insight diagnostic (may contain errors).",
            "schema": {
              "$ref": "#/definitions/DiagnosticResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets a Diagnostic for a KeyVault resource": {
            "$ref": "./examples/GetDiagnosticForKeyVaultResource.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Help/discoverySolutions": {
      "get": {
        "tags": [
          "discoverySolutions"
        ],
        "description": "Lists the relevant Azure diagnostics and solutions using [problemClassification API](https://learn.microsoft.com/rest/api/support/problem-classifications/list?tabs=HTTP)) AND  resourceUri or resourceType.<br/> Discovery Solutions is the initial entry point within Help API, which identifies relevant Azure diagnostics and solutions. <br/><br/> Required Input :  problemClassificationId (Use the [problemClassification API](https://learn.microsoft.com/rest/api/support/problem-classifications/list?tabs=HTTP)) <br/>Optional input: resourceUri OR resource Type <br/><br/> <b>Note: </b>  ‘requiredInputs’ from Discovery solutions response must be passed via ‘additionalParameters’ as an input to Diagnostics and Solutions API.",
        "operationId": "DiscoverySolution_List",
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/SkipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful fetched list of solution metadata.",
            "schema": {
              "$ref": "#/definitions/DiscoveryResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List DiscoverySolutions at resource scope": {
            "$ref": "./examples/ListDiscoverySolutionsAtResourceScope.json"
          },
          "List DiscoverySolutions at subscription scope": {
            "$ref": "./examples/ListDiscoverySolutionsAtSubscriptionScope.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Help/solutions/{solutionResourceName}": {
      "put": {
        "tags": [
          "solutions"
        ],
        "description": "Creates a solution for the specific Azure resource or subscription using the inputs ‘solutionId and requiredInputs’ from discovery solutions. <br/> Azure solutions comprise a comprehensive library of self-help resources that have been thoughtfully curated by Azure engineers to aid customers in resolving typical troubleshooting issues. These solutions encompass (1.) dynamic and context-aware diagnostics, guided troubleshooting wizards, and data visualizations, (2.) rich instructional video tutorials and illustrative diagrams and images, and (3.) thoughtfully assembled textual troubleshooting instructions. All these components are seamlessly converged into unified solutions tailored to address a specific support problem area. Each solution type may require one or more ‘requiredParameters’ that are required to execute the individual solution component. In the absence of the ‘requiredParameters’ it is likely that some of the solutions might fail execution, and you might see an empty response. <br/><br/> <b>Note:</b>  <br/>1. ‘requiredInputs’ from Discovery solutions response must be passed via ‘parameters’ in the request body of Solutions API. <br/>2. ‘requiredParameters’ from the Solutions response is the same as ‘ additionalParameters’ in the request for diagnostics <br/>3. ‘requiredParameters’ from the Solutions response is the same as ‘properties.parameters’ in the request for Troubleshooters",
        "operationId": "Solution_Create",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/SolutionResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "solutionRequestBody",
            "description": "The required request body for this solution resource creation.",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SolutionResource"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Create or Update solution invocation.",
            "schema": {
              "$ref": "#/definitions/SolutionResource"
            }
          },
          "200": {
            "description": "Create or Update solution invocation.",
            "schema": {
              "$ref": "#/definitions/SolutionResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Solution_Create": {
            "$ref": "./examples/Solution_Create.json"
          }
        }
      },
      "get": {
        "tags": [
          "solutions"
        ],
        "description": "Get the solution using the applicable solutionResourceName while creating the solution.",
        "operationId": "Solution_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/SolutionResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful fetched solution result.",
            "schema": {
              "$ref": "#/definitions/SolutionResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Solution_Get": {
            "$ref": "./examples/Solution_Get.json"
          }
        }
      },
      "patch": {
        "tags": [
          "solutions"
        ],
        "description": "Update the requiredInputs or additional information needed to execute the solution ",
        "operationId": "Solution_Update",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/SolutionResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "solutionPatchRequestBody",
            "description": "The required request body for updating a solution resource.",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SolutionPatchRequestBody"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Successful updated solution resource.",
            "headers": {
              "Location": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/SolutionResource"
            }
          },
          "200": {
            "description": "Successful updated solution resource.",
            "headers": {
              "Location": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/SolutionResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Solution_Update": {
            "$ref": "./examples/Solution_Update.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Help/troubleshooters/{troubleshooterName}": {
      "put": {
        "tags": [
          "troubleshooter"
        ],
        "description": "Creates the specific troubleshooter action under a resource or subscription using the ‘solutionId’ and  ‘properties.parameters’ as the trigger. <br/> Azure Troubleshooters help with hard to classify issues, reducing the gap between customer observed problems and solutions by guiding the user effortlessly through the troubleshooting process. Each Troubleshooter flow represents a problem area within Azure and has a complex tree-like structure that addresses many root causes. These flows are prepared with the help of Subject Matter experts and customer support engineers by carefully considering previous support requests raised by customers. Troubleshooters terminate at a well curated solution based off of resource backend signals and customer manual selections.",
        "operationId": "Troubleshooters_Create",
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/TroubleshooterNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "createTroubleshooterRequestBody",
            "description": "The required request body for this Troubleshooter resource creation.",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TroubleshooterResource"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Troubleshooter create invocation.",
            "schema": {
              "$ref": "#/definitions/TroubleshooterResource"
            }
          },
          "200": {
            "description": "Successful Troubleshooter update invocation.",
            "schema": {
              "$ref": "#/definitions/TroubleshooterResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Troubleshooters_Create": {
            "$ref": "./examples/Troubleshooter_Create.json"
          }
        }
      },
      "get": {
        "tags": [
          "troubleshooter"
        ],
        "description": "Gets troubleshooter instance result which includes the step status/result of the troubleshooter resource name that is being executed.<br/> Get API is used to retrieve the result of a Troubleshooter instance, which includes the status and result of each step in the Troubleshooter workflow. This API requires the Troubleshooter resource name that was created using the Create API.",
        "operationId": "Troubleshooters_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/TroubleshooterNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful fetched Troubleshooter instance.",
            "schema": {
              "$ref": "#/definitions/TroubleshooterResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Troubleshooters_Get": {
            "$ref": "./examples/Troubleshooter_Get.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Help/troubleshooters/{troubleshooterName}/continue": {
      "post": {
        "tags": [
          "troubleshooter"
        ],
        "description": "Uses ‘stepId’ and ‘responses’ as the trigger to continue the troubleshooting steps for the respective troubleshooter resource name. <br/>Continue API is used to provide inputs that are required for the specific troubleshooter to progress into the next step in the process. This API is used after the Troubleshooter has been created using the Create API.",
        "operationId": "Troubleshooters_Continue",
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/TroubleshooterNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "continueRequestBody",
            "description": "The required request body for going to next step in Troubleshooter resource.",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ContinueRequestBody"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Continued to next step",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Troubleshooter_Continue": {
            "$ref": "./examples/Troubleshooter_Continue.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Help/troubleshooters/{troubleshooterName}/end": {
      "post": {
        "tags": [
          "troubleshooter"
        ],
        "description": "Ends the troubleshooter action",
        "operationId": "Troubleshooters_End",
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/TroubleshooterNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully ended the Troubleshooter instance",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Troubleshooters_End": {
            "$ref": "./examples/Troubleshooter_End.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Help/troubleshooters/{troubleshooterName}/restart": {
      "post": {
        "tags": [
          "troubleshooter"
        ],
        "description": "Restarts the troubleshooter API using applicable troubleshooter resource name as the input.<br/> It returns new resource name which should be used in subsequent request. The old resource name is obsolete after this API is invoked.",
        "operationId": "Troubleshooters_Restart",
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/TroubleshooterNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully restarted troubleshooter instance.",
            "headers": {
              "Location": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/RestartTroubleshooterResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Troubleshooters_Restart": {
            "$ref": "./examples/Troubleshooter_Restart.json"
          }
        }
      }
    }
  },
  "definitions": {
    "CheckNameAvailabilityResponse": {
      "description": "Response for whether the requested resource name is available or not.",
      "type": "object",
      "properties": {
        "nameAvailable": {
          "description": "Returns true or false depending on the availability of the name",
          "type": "boolean"
        },
        "reason": {
          "description": "Reason for why value is not available. This field is returned if nameAvailable is false.",
          "type": "string"
        },
        "message": {
          "description": "Gets an error message explaining the 'reason' value with more details. This field is returned iif nameAvailable is false.",
          "type": "string"
        }
      }
    },
    "DiagnosticInvocation": {
      "description": "Solution Invocation with additional params needed for invocation.",
      "type": "object",
      "properties": {
        "solutionId": {
          "description": "Solution Id to invoke.",
          "type": "string"
        },
        "additionalParameters": {
          "description": "Additional parameters required to invoke the solutionId.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "DiagnosticResource": {
      "description": "Diagnostic resource",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DiagnosticResourceProperties",
          "description": "Diagnostic Resource properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DiagnosticResourceProperties": {
      "description": "Diagnostic resource properties.",
      "type": "object",
      "properties": {
        "globalParameters": {
          "description": "Global parameters is an optional map which can be used to add key and  value to request body to improve the diagnostics results",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "insights": {
          "description": "SolutionIds that are needed to be invoked.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiagnosticInvocation"
          },
          "x-ms-identifiers": [
            "solutionId"
          ]
        },
        "acceptedAt": {
          "description": "Diagnostic Request Accepted time.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Status of diagnostic provisioning.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "PartialComplete",
            "Failed",
            "Running",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "DiagnosticProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "value": "Succeeded",
                "description": "All Diagnostics in the Batch succeeded."
              },
              {
                "value": "PartialComplete",
                "description": "Some Diagnostics are still running or failed."
              },
              {
                "value": "Failed",
                "description": "All Diagnostics failed to run."
              },
              {
                "value": "Running",
                "description": "All Diagnostics are still running."
              },
              {
                "value": "Canceled",
                "description": "When Diagnostic request gets canceled."
              }
            ]
          }
        },
        "diagnostics": {
          "description": "Array of Diagnostics.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Diagnostic"
          },
          "x-ms-identifiers": [
            "solutionId"
          ]
        }
      }
    },
    "Diagnostic": {
      "description": "Properties returned with in an insight.",
      "type": "object",
      "properties": {
        "solutionId": {
          "description": "Solution Id",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/DiagnosticStatus"
        },
        "insights": {
          "description": "The problems (if any) detected by this insight.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Insight"
          },
          "x-ms-identifiers": []
        },
        "error": {
          "$ref": "#/definitions/Error"
        }
      }
    },
    "DiagnosticStatus": {
      "description": "Denotes the status of the diagnostic resource.",
      "type": "string",
      "enum": [
        "Failed",
        "MissingInputs",
        "Running",
        "Succeeded",
        "Timeout"
      ],
      "x-ms-enum": {
        "name": "Status",
        "modelAsString": true,
        "values": [
          {
            "value": "Failed",
            "description": "Diagnostic creation failed."
          },
          {
            "value": "MissingInputs",
            "description": "Request is missing required inputs to run."
          },
          {
            "value": "Running",
            "description": "Diagnostic is still running."
          },
          {
            "value": "Succeeded",
            "description": "Diagnostic creation succeeded."
          },
          {
            "value": "Timeout",
            "description": "Diagnostic was timed out."
          }
        ]
      }
    },
    "Error": {
      "description": "Error definition.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Service specific error code which serves as the substatus for the HTTP error code.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Service specific error type which serves as additional context for the error herein.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "Description of the error.",
          "type": "string",
          "readOnly": true
        },
        "details": {
          "description": "An array of additional nested error response info objects, as described by this contract.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "x-ms-identifiers": [
            "type",
            "message"
          ]
        }
      }
    },
    "DiscoveryResponse": {
      "description": "Discovery response.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of metadata.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolutionMetadataResource"
          }
        },
        "nextLink": {
          "description": "The link used to get the next page of solution metadata.",
          "type": "string"
        }
      }
    },
    "SolutionMetadataResource": {
      "description": "Metadata resource",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/Solutions",
          "description": "Solution metadata Resource properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "Solutions": {
      "description": "List of solutions",
      "type": "object",
      "properties": {
        "solutions": {
          "description": "List of metadata.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolutionMetadataProperties"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "SolutionMetadataProperties": {
      "description": "Metadata Properties",
      "type": "object",
      "properties": {
        "solutionId": {
          "description": "Solution Id.",
          "type": "string"
        },
        "solutionType": {
          "$ref": "#/definitions/SolutionType"
        },
        "description": {
          "description": "A detailed description of solution.",
          "type": "string",
          "readOnly": true
        },
        "requiredInputs": {
          "description": "Required parameters for invoking this particular solution.",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "SolutionType": {
      "description": "Solution Type.",
      "type": "string",
      "readOnly": true,
      "enum": [
        "Diagnostics",
        "Solutions"
      ],
      "x-ms-enum": {
        "name": "SolutionType",
        "modelAsString": true,
        "values": [
          {
            "value": "Diagnostics",
            "description": "Diagnostics resource type."
          },
          {
            "value": "Solutions",
            "description": "Solutions resource type."
          }
        ]
      }
    },
    "TriggerCriterion": {
      "description": "Solution request trigger criterion. SolutionId/ProblemClassificationId is the only supported trigger type for Solution PUT request. ReplacementKey is the only supported trigger type for Solution PATCH request.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Trigger criterion name.",
          "type": "string",
          "enum": [
            "SolutionId",
            "ProblemClassificationId",
            "ReplacementKey"
          ],
          "x-ms-enum": {
            "name": "name",
            "modelAsString": true
          }
        },
        "value": {
          "description": "Trigger criterion value.",
          "type": "string"
        }
      }
    },
    "SolutionPatchRequestBody": {
      "description": "Solution response",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "$ref": "#/definitions/SolutionResourceProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "SolutionResource": {
      "description": "Solution response.",
      "type": "object",
      "x-ms-azure-resource": true,
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/SolutionResourceProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "SolutionResourceProperties": {
      "description": "Solution result",
      "type": "object",
      "properties": {
        "triggerCriteria": {
          "description": "Solution request trigger criteria",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TriggerCriterion"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "parameters": {
          "description": "Client input parameters to run Solution",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "solutionId": {
          "description": "Solution Id to identify single solution.",
          "readOnly": true,
          "type": "string"
        },
        "provisioningState": {
          "description": "Status of solution provisioning.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "PartialComplete",
            "Failed",
            "Running",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "SolutionProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "value": "Succeeded",
                "description": "All Solutions in the Batch succeeded."
              },
              {
                "value": "PartialComplete",
                "description": "Some Solutions are still running or failed."
              },
              {
                "value": "Failed",
                "description": "All Solutions failed to run."
              },
              {
                "value": "Running",
                "description": "All Solutions are still running."
              },
              {
                "value": "Canceled",
                "description": "When Solutions request gets canceled."
              }
            ]
          }
        },
        "title": {
          "description": "The title.",
          "readOnly": true,
          "type": "string"
        },
        "content": {
          "description": "The HTML content that needs to be rendered and shown to customer.",
          "readOnly": true,
          "type": "string"
        },
        "replacementMaps": {
          "$ref": "#/definitions/ReplacementMaps",
          "readOnly": true
        },
        "sections": {
          "description": "List of section object.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Section"
          },
          "x-ms-identifiers": [
            "title"
          ]
        }
      }
    },
    "Section": {
      "description": "Part of the solution and are dividers in the solution rendering.",
      "type": "object",
      "properties": {
        "title": {
          "description": "Solution sections title.",
          "type": "string"
        },
        "content": {
          "description": "Solution sections content.",
          "type": "string"
        },
        "replacementMaps": {
          "$ref": "#/definitions/ReplacementMaps"
        }
      }
    },
    "ReplacementMaps": {
      "description": "Solution replacement maps.",
      "type": "object",
      "properties": {
        "webResults": {
          "description": "Solution AzureKB results",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebResult"
          },
          "x-ms-identifiers": []
        },
        "diagnostics": {
          "description": "Solution diagnostics results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolutionsDiagnostic"
          },
          "x-ms-identifiers": [
            "solutionId"
          ]
        },
        "troubleshooters": {
          "description": "Solutions Troubleshooters",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolutionsTroubleshooters"
          },
          "x-ms-identifiers": [
            "solutionId"
          ]
        },
        "metricsBasedCharts": {
          "description": "Solution metrics based charts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricsBasedChart"
          },
          "x-ms-identifiers": []
        },
        "videos": {
          "description": "Video solutions, which have the power to engage the customer by stimulating their senses",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Video"
          },
          "x-ms-identifiers": []
        },
        "videoGroups": {
          "description": "Group of Videos",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VideoGroup"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "WebResult": {
      "description": "AzureKB web result",
      "type": "object",
      "properties": {
        "replacementKey": {
          "description": "Place holder used in HTML Content replace control with the content",
          "type": "string"
        },
        "searchResults": {
          "description": "AzureKB search results",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchResult"
          },
          "x-ms-identifiers": [
            "solutionId"
          ]
        }
      }
    },
    "SearchResult": {
      "description": "Details of an AzureKB search result.",
      "type": "object",
      "properties": {
        "solutionId": {
          "description": "Unique id of the result.",
          "type": "string"
        },
        "content": {
          "description": "Content of the search result.",
          "type": "string"
        },
        "title": {
          "description": "Title of the search result.",
          "type": "string"
        },
        "confidence": {
          "description": "Confidence of the search result.",
          "type": "string",
          "enum": [
            "Low",
            "Medium",
            "High"
          ],
          "x-ms-enum": {
            "name": "confidence",
            "modelAsString": true
          }
        },
        "source": {
          "description": "Source of the search result.",
          "type": "string"
        },
        "resultType": {
          "description": "Result type of the search result.",
          "type": "string",
          "enum": [
            "Community",
            "Documentation"
          ],
          "x-ms-enum": {
            "name": "resultType",
            "modelAsString": true
          }
        },
        "rank": {
          "description": "rank of the search result",
          "type": "integer",
          "format": "int32"
        },
        "link": {
          "description": "Link to the document.",
          "type": "string"
        }
      }
    },
    "SolutionsDiagnostic": {
      "description": "Solutions Diagnostic",
      "type": "object",
      "properties": {
        "solutionId": {
          "description": "Solution Id to identify single Solutions Diagnostic",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "statusDetails": {
          "description": "Details of the status",
          "type": "string"
        },
        "replacementKey": {
          "description": "Place holder used in HTML Content replace control with the content",
          "type": "string"
        },
        "requiredParameters": {
          "description": "Required parameters of this item",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "insights": {
          "description": "Diagnostic insights",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Insight"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "SolutionsTroubleshooters": {
      "description": "Troubleshooters in Solutions",
      "type": "object",
      "properties": {
        "solutionId": {
          "description": "Solution Id to identify single Solutions Troubleshooter",
          "type": "string"
        },
        "title": {
          "description": "Troubleshooter title",
          "type": "string"
        },
        "summary": {
          "description": "Troubleshooter summary",
          "type": "string"
        }
      }
    },
    "Status": {
      "description": "The status of the resource.",
      "type": "string",
      "enum": [
        "Failed",
        "MissingInputs",
        "Running",
        "Succeeded",
        "Timeout"
      ],
      "x-ms-enum": {
        "name": "status",
        "modelAsString": true
      }
    },
    "MetricsBasedChart": {
      "description": "Solutions metrics based chart",
      "type": "object",
      "properties": {
        "name": {
          "description": "Chart name",
          "type": "string"
        },
        "aggregationType": {
          "description": "Allowed values are Sum, Avg, Count, Min, Max. Default is Sum",
          "type": "string",
          "enum": [
            "Sum",
            "Avg",
            "Count",
            "Min",
            "Max"
          ],
          "x-ms-enum": {
            "name": "aggregationType",
            "modelAsString": true
          }
        },
        "timeSpanDuration": {
          "description": "Time span duration",
          "type": "string"
        },
        "title": {
          "description": "Chart title",
          "type": "string"
        },
        "filterGroup": {
          "$ref": "#/definitions/FilterGroup"
        },
        "replacementKey": {
          "description": "Place holder used in HTML Content replace control with the content",
          "type": "string"
        }
      }
    },
    "FilterGroup": {
      "description": "Filter group",
      "type": "object",
      "properties": {
        "filter": {
          "description": "List of filters",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Filter"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Filter": {
      "description": "Filter criterion",
      "type": "object",
      "properties": {
        "name": {
          "description": "Filter name",
          "type": "string"
        },
        "values": {
          "description": "Filter values",
          "type": "string"
        },
        "operator": {
          "description": "Filter operator",
          "type": "string"
        }
      }
    },
    "Video": {
      "allOf": [
        {
          "$ref": "#/definitions/VideoGroupVideo"
        }
      ],
      "description": "Video detail",
      "type": "object",
      "properties": {
        "replacementKey": {
          "description": "Place holder used in HTML Content replace control with the insight content",
          "type": "string"
        }
      }
    },
    "VideoGroup": {
      "description": "Video group detail",
      "type": "object",
      "properties": {
        "videos": {
          "description": "List of videos will be shown to customers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VideoGroupVideo"
          },
          "x-ms-identifiers": []
        },
        "replacementKey": {
          "description": "Place holder used in HTML Content replace control with the insight content",
          "type": "string"
        }
      }
    },
    "VideoGroupVideo": {
      "description": "VideoGroup video detail",
      "type": "object",
      "properties": {
        "src": {
          "description": "Link to the video",
          "type": "string"
        },
        "title": {
          "description": "Title of the video",
          "type": "string"
        }
      }
    },
    "ContinueRequestBody": {
      "description": "Troubleshooter ContinueRequest body.",
      "type": "object",
      "properties": {
        "stepId": {
          "description": "Unique id of the result.",
          "type": "string"
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TroubleshooterResponse"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "RestartTroubleshooterResponse": {
      "description": "Troubleshooter restart response",
      "type": "object",
      "properties": {
        "troubleshooterResourceName": {
          "description": "Updated TroubleshooterResource Name .",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TroubleshooterResource": {
      "description": "Troubleshooter response.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "$ref": "#/definitions/TroubleshooterInstanceProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "TroubleshooterInstanceProperties": {
      "description": "Troubleshooter Instance properties.",
      "type": "object",
      "properties": {
        "solutionId": {
          "description": "Solution Id to identify single troubleshooter.",
          "type": "string"
        },
        "parameters": {
          "description": "Client input parameters to run Troubleshooter Resource",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "provisioningState": {
          "description": "Status of troubleshooter provisioning.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Running",
            "AutoContinue"
          ],
          "x-ms-enum": {
            "name": "TroubleshooterProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "required": [
            "solutionId",
            "parameters"
          ]
        },
        "steps": {
          "description": "List of step object.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Step"
          },
          "x-ms-identifiers": [
            "id"
          ]
        }
      }
    },
    "Step": {
      "description": "Troubleshooter step",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique step id.",
          "type": "string"
        },
        "title": {
          "description": "Step title.",
          "type": "string"
        },
        "description": {
          "description": "Step description.",
          "type": "string"
        },
        "guidance": {
          "description": "Get or sets the Step guidance.",
          "type": "string"
        },
        "executionStatus": {
          "description": "Status of Troubleshooter Step execution.",
          "type": "string",
          "enum": [
            "Success",
            "Running",
            "Failed",
            "Warning"
          ],
          "x-ms-enum": {
            "name": "executionStatus",
            "modelAsString": true,
            "values": [
              {
                "value": "Success",
                "description": "Step execution succeeded."
              },
              {
                "value": "Running",
                "description": "Step execution running"
              },
              {
                "value": "Failed",
                "description": "Step execution failed"
              },
              {
                "value": "Warning",
                "description": "Step execution warning"
              }
            ]
          }
        },
        "executionStatusDescription": {
          "description": "This field has more detailed status description of the execution status.",
          "type": "string"
        },
        "type": {
          "description": "Type of Troubleshooting step.",
          "type": "string",
          "enum": [
            "Decision",
            "Solution",
            "Insight",
            "AutomatedCheck"
          ],
          "x-ms-enum": {
            "name": "type",
            "modelAsString": true
          }
        },
        "isLastStep": {
          "description": "is this last step of the workflow.",
          "type": "boolean"
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StepInput"
          },
          "x-ms-identifiers": [
            "questionId"
          ]
        },
        "automatedCheckResults": {
          "$ref": "#/definitions/AutomatedCheckResult"
        },
        "insights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Insight"
          },
          "x-ms-identifiers": [
            "id"
          ]
        },
        "error": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail"
        }
      }
    },
    "AutomatedCheckResult": {
      "description": "Only for AutomatedStep type",
      "type": "object",
      "properties": {
        "result": {
          "description": "Insight Article Content",
          "type": "string"
        },
        "type": {
          "description": "Type of Result.",
          "type": "string",
          "enum": [
            "Success",
            "Warning",
            "Error",
            "Information"
          ],
          "x-ms-enum": {
            "name": "automatedCheckResultType",
            "modelAsString": true
          }
        }
      }
    },
    "StepInput": {
      "description": "Details of step input.",
      "type": "object",
      "properties": {
        "questionId": {
          "description": "Use Index as QuestionId.",
          "type": "string"
        },
        "questionType": {
          "$ref": "#/definitions/QuestionType"
        },
        "questionContent": {
          "description": "User question content.",
          "type": "string"
        },
        "questionContentType": {
          "description": "Default is Text.",
          "type": "string",
          "enum": [
            "Text",
            "Html",
            "Markdown"
          ],
          "x-ms-enum": {
            "name": "questionContentType,",
            "modelAsString": true
          }
        },
        "responseHint": {
          "description": "Place holder text for response hints.",
          "type": "string"
        },
        "recommendedOption": {
          "description": "Result of Automate step.",
          "type": "string"
        },
        "selectedOptionValue": {
          "description": "Text of response that was selected.",
          "type": "string"
        },
        "responseValidationProperties": {
          "$ref": "#/definitions/ResponseValidationProperties"
        },
        "responseOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseOption"
          },
          "x-ms-identifiers": [
            "key"
          ]
        }
      }
    },
    "ResponseValidationProperties": {
      "description": "Troubleshooter step input response validation properties",
      "type": "object",
      "properties": {
        "regex": {
          "description": "Regex used for the input validation.",
          "type": "string"
        },
        "isRequired": {
          "description": "Default True",
          "type": "boolean"
        },
        "validationErrorMessage": {
          "description": "Validation Error Message.",
          "type": "string"
        },
        "maxLength": {
          "description": "Max text input (open Ended Text).",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ResponseOption": {
      "description": "The status of the resource.",
      "type": "object",
      "properties": {
        "key": {
          "description": "Unique string.",
          "type": "string"
        },
        "value": {
          "description": "Option description",
          "type": "string"
        }
      }
    },
    "TroubleshooterResponse": {
      "description": "User Response for Troubleshooter continue request",
      "type": "object",
      "properties": {
        "questionId": {
          "description": "id of the question.",
          "type": "string"
        },
        "questionType": {
          "$ref": "#/definitions/QuestionType"
        },
        "response": {
          "description": "Response key for SingleInput. For Multi-line test/open ended question it is free form text",
          "type": "string"
        }
      }
    },
    "QuestionType": {
      "description": "Type of Question",
      "type": "string",
      "enum": [
        "RadioButton",
        "Dropdown",
        "TextInput",
        "MultiLineInfoBox"
      ],
      "x-ms-enum": {
        "name": "questionType",
        "modelAsString": true,
        "values": [
          {
            "value": "RadioButton",
            "description": "SingleChoice radio button"
          },
          {
            "value": "Dropdown",
            "description": "SingleChoice dropdown."
          },
          {
            "value": "TextInput",
            "description": "Text Input"
          },
          {
            "value": "MultiLineInfoBox",
            "description": "MultiLineInfoBox"
          }
        ]
      }
    },
    "Insight": {
      "description": "Detailed insights(s) obtained via the invocation of an insight diagnostic",
      "type": "object",
      "properties": {
        "id": {
          "description": "Article id.",
          "type": "string"
        },
        "title": {
          "description": "This insight's title.",
          "type": "string"
        },
        "results": {
          "description": "Detailed result content.",
          "type": "string"
        },
        "importanceLevel": {
          "description": "Importance level of the insight.",
          "type": "string",
          "enum": [
            "Critical",
            "Warning",
            "Information"
          ],
          "x-ms-enum": {
            "name": "importanceLevel",
            "modelAsString": true,
            "values": [
              {
                "value": "Critical",
                "description": "A critical insight has been found after running the diagnostic."
              },
              {
                "value": "Warning",
                "description": "A warning insight has been found after running the diagnostic."
              },
              {
                "value": "Information",
                "description": "An information insight has been found after running the diagnostic."
              }
            ]
          }
        }
      }
    }
  },
  "parameters": {
    "SolutionResourceNameParameter": {
      "name": "solutionResourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Solution resource Name.",
      "x-ms-parameter-location": "method",
      "minLength": 1,
      "maxLength": 100,
      "pattern": "^[A-Za-z0-9-+@()_]+$"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "scope = resourceUri of affected resource.<br/> For example: /subscriptions/0d0fcd2e-c4fd-4349-8497-200edb3923c6/resourcegroups/myresourceGroup/providers/Microsoft.KeyVault/vaults/test-keyvault-non-read ",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version.",
      "x-ms-parameter-location": "client"
    },
    "DiagnosticsResourceNameParameter": {
      "name": "diagnosticsResourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 100,
      "pattern": "^[A-Za-z0-9-+@()_]+$",
      "description": "Unique resource name for insight resources",
      "x-ms-parameter-location": "method"
    },
    "FilterParameter": {
      "name": "$filter",
      "description": "'ProblemClassificationId' is a mandatory filter to get solutions ids. It also supports optional 'ResourceType' and 'SolutionType' filters. The [$filter](https://learn.microsoft.com/en-us/odata/webapi/first-odata-api#filter) supports only 'and', 'or' and 'eq' operators. Example: $filter=ProblemClassificationId eq '1ddda5b4-cf6c-4d4f-91ad-bc38ab0e811e'",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "SkipTokenParameter": {
      "name": "$skiptoken",
      "description": "Skiptoken is only used if a previous operation returned a partial result.",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "TroubleshooterNameParameter": {
      "name": "troubleshooterName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Troubleshooter resource Name.",
      "x-ms-parameter-location": "method",
      "minLength": 1,
      "maxLength": 100,
      "pattern": "([A-Za-z0-9]+(-[A-Za-z0-9]+)+)"
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The Azure subscription ID.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    }
  }
}
