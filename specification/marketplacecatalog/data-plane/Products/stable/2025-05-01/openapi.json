{
  "swagger": "2.0",
  "info": {
    "title": "Products",
    "version": "2025-05-01",
    "description": "Microsoft Marketplace Discovery APIs",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "catalogapi.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "DiscoveryApiKey": []
    }
  ],
  "securityDefinitions": {
    "DiscoveryApiKey": {
      "type": "apiKey",
      "description": "Use key provided by Marketplace Catalog Team as a parameter provided in the header",
      "name": "X-API-Key",
      "in": "header"
    }
  },
  "tags": [],
  "paths": {
    "/product/{uniqueProductId}": {
      "get": {
        "operationId": "ProductOperations_Get",
        "description": "Retrieves a single product by ID from the marketplace catalog.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "uniqueProductId",
            "in": "path",
            "description": "Unique product identifier",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/MarketParameter"
          },
          {
            "$ref": "#/parameters/LanguageParameter"
          },
          {
            "$ref": "#/parameters/LocationsParameter"
          },
          {
            "$ref": "#/parameters/IncludeStopSoldPlansParameter"
          },
          {
            "$ref": "#/parameters/HideKeysParameter"
          },
          {
            "$ref": "#/parameters/ExcludeSkuDetailsParameter"
          },
          {
            "$ref": "#/parameters/IncludeFutureAvailabilitiesParameter"
          },
          {
            "$ref": "#/parameters/SkuIdParameter"
          },
          {
            "$ref": "#/parameters/PricingAudienceHeaderParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ProductDetails"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Example of request to get single SaaS product details": {
            "$ref": "./examples/SinglePublicProduct_SaaS_Get.json"
          },
          "Example of request to get single VM product details": {
            "$ref": "./examples/SinglePublicProduct_VM_Get.json"
          }
        }
      }
    },
    "/products": {
      "get": {
        "operationId": "ProductOperations_List",
        "description": "Retrieves a list of products available in the marketplace catalog.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/LanguageParameter"
          },
          {
            "$ref": "#/parameters/LocationsParameter"
          },
          {
            "$ref": "#/parameters/MarketParameter"
          },
          {
            "$ref": "#/parameters/HideKeysParameter"
          },
          {
            "$ref": "#/parameters/OdataSelectParameter"
          },
          {
            "$ref": "#/parameters/OdataFilterParameter"
          },
          {
            "$ref": "#/parameters/OdataExpandParameter"
          },
          {
            "$ref": "#/parameters/OdataOrderByParameter"
          },
          {
            "$ref": "#/parameters/SearchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedProductSummary"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Lists publically available products in the marketplace.": {
            "$ref": "./examples/PublicProducts_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/skus": {
      "get": {
        "operationId": "SkusOperations_List",
        "description": "Retrieves a list of SKUs available in the marketplace catalog.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ServiceParameter"
          },
          {
            "$ref": "#/parameters/ServiceFamilyParameter"
          },
          {
            "$ref": "#/parameters/LanguageParameter"
          },
          {
            "$ref": "#/parameters/LocationsParameter"
          },
          {
            "$ref": "#/parameters/MarketParameter"
          },
          {
            "$ref": "#/parameters/OdataSelectParameter"
          },
          {
            "$ref": "#/parameters/OdataFilterParameter"
          },
          {
            "$ref": "#/parameters/OdataOrderByParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedSkuSummary"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Lists publically available skus in the marketplace.": {
            "$ref": "./examples/PublicSkus_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "Artifact": {
      "type": "object",
      "description": "Plan level resources and configuration files",
      "properties": {
        "name": {
          "type": "string",
          "description": "Artifact name"
        },
        "uri": {
          "type": "string",
          "description": "Artifact uri"
        },
        "artifactType": {
          "type": "string",
          "description": "The type of the artifact. Possible values include \n- `Template` - Contains link to the main ARM template\n- `Fragment` - Contains link to the nested ARM template\n- `Custom` - Custom artifact type\n- `Metadata` - Metadata artifact type"
        }
      },
      "required": [
        "artifactType"
      ]
    },
    "Attribute": {
      "type": "object",
      "description": "Represents a SKU attribute, which consists of a key and value. The attributes may differ across various services.",
      "properties": {
        "key": {
          "type": "string",
          "description": "The attribute key"
        },
        "value": {
          "type": "string",
          "description": "The attribute value"
        }
      }
    },
    "Availability": {
      "type": "object",
      "description": "Availability for a given plan",
      "properties": {
        "id": {
          "type": "string",
          "description": "The document id"
        },
        "actions": {
          "type": "array",
          "description": "List of allowed actions",
          "items": {
            "type": "string"
          }
        },
        "meter": {
          "$ref": "#/definitions/Meter",
          "description": "Applicable billing meter information"
        },
        "pricingAudience": {
          "type": "string",
          "description": "Supported pricing audiences. Possible values include \n- `DirectCommercial` - Available to commercial direct channel\n- `PartnerCommercial` - Available to Cloud Solution Providers (CSP)"
        },
        "terms": {
          "type": "array",
          "description": "List of applicable terms",
          "items": {
            "$ref": "#/definitions/Term"
          }
        },
        "hasFreeTrials": {
          "type": "boolean",
          "description": "A value indicating whether it has free trials"
        },
        "consumptionUnitType": {
          "type": "string",
          "description": "Consumption unit type"
        },
        "displayRank": {
          "type": "integer",
          "format": "int32",
          "description": "Display rank"
        }
      },
      "required": [
        "pricingAudience",
        "hasFreeTrials",
        "displayRank"
      ]
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          }
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/microsoft/api-guidelines/blob/vNext/azure/Guidelines.md#handling-errors.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "BillingComponent": {
      "type": "object",
      "description": "Represents a billing component model",
      "properties": {
        "billingTag": {
          "type": "string",
          "description": "Billing Tag"
        },
        "customMeterIds": {
          "type": "object",
          "description": "Custom Meter Ids",
          "additionalProperties": {
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "type": "array"
          }
        }
      }
    },
    "BillingPlan": {
      "type": "object",
      "description": "Renew Billing Plan",
      "properties": {
        "billingPeriod": {
          "type": "string",
          "description": "Billing period"
        },
        "title": {
          "type": "string",
          "description": "Title"
        },
        "description": {
          "type": "string",
          "description": "Description"
        },
        "price": {
          "$ref": "#/definitions/Price",
          "description": "Retail price with currency"
        }
      }
    },
    "DiscoveryApiKey": {
      "type": "object",
      "description": "Use key provided by Marketplace Catalog Team as a parameter provided in the header",
      "properties": {
        "type": {
          "type": "string",
          "description": "API key authentication",
          "enum": [
            "apiKey"
          ]
        },
        "in": {
          "type": "string",
          "description": "location of the API key",
          "enum": [
            "header"
          ]
        },
        "name": {
          "type": "string",
          "description": "name of the API key",
          "enum": [
            "X-API-Key"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "type",
        "in",
        "name"
      ]
    },
    "Image": {
      "type": "object",
      "description": "Includes link to the product image",
      "properties": {
        "id": {
          "type": "string",
          "description": "Image id"
        },
        "uri": {
          "type": "string",
          "description": "Image uri"
        },
        "type": {
          "type": "string",
          "description": "Image type"
        }
      }
    },
    "ImageGroup": {
      "type": "object",
      "description": "List of image objects",
      "properties": {
        "context": {
          "type": "string",
          "description": "context"
        },
        "items": {
          "type": "array",
          "description": "List of images",
          "items": {
            "$ref": "#/definitions/Image"
          }
        }
      }
    },
    "IncludedQuantityProperty": {
      "type": "object",
      "description": "Included quantity properties",
      "properties": {
        "termId": {
          "type": "string",
          "description": "Term id"
        },
        "quantity": {
          "type": "string",
          "description": "Quantity"
        }
      }
    },
    "LinkProperties": {
      "type": "object",
      "description": "Represents a link item read from the gallery item package",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the link"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the link"
        },
        "uri": {
          "type": "string",
          "description": "Uri of the link"
        }
      }
    },
    "MarketStartPrice": {
      "type": "object",
      "description": "Retail price of the product's cheapest plan",
      "properties": {
        "market": {
          "type": "string",
          "description": "The market for which the starting price is calculated"
        },
        "termUnits": {
          "type": "string",
          "description": "The terms pricing model units"
        },
        "meterUnits": {
          "type": "string",
          "description": "The meters pricing model units"
        },
        "minTermPrice": {
          "type": "number",
          "format": "float",
          "description": "Starting (minimal) terms price"
        },
        "minMeterPrice": {
          "type": "number",
          "format": "float",
          "description": "Starting (minimal) meters price"
        },
        "currency": {
          "type": "string",
          "description": "Currency for price"
        }
      }
    },
    "MarketingMaterial": {
      "type": "object",
      "description": "Includes links to the learning and marketing materials as configured by the publisher",
      "properties": {
        "path": {
          "type": "string",
          "description": "Path to the marketing site"
        },
        "learnUri": {
          "type": "string",
          "description": "Path to the learn site"
        }
      }
    },
    "Meter": {
      "type": "object",
      "description": "Applicable billing meter information",
      "properties": {
        "meterId": {
          "type": "string",
          "description": "Meter id"
        },
        "partNumber": {
          "type": "string",
          "description": "Compute part number"
        },
        "consumptionResourceId": {
          "type": "string",
          "description": "Consumption resource id"
        },
        "price": {
          "$ref": "#/definitions/Price",
          "description": "Retail price with currency"
        },
        "type": {
          "type": "string",
          "description": "Type of this meter"
        },
        "includedQuantityProperties": {
          "type": "array",
          "description": "Included quantity properties",
          "items": {
            "$ref": "#/definitions/IncludedQuantityProperty"
          }
        }
      }
    },
    "OfferingProperties": {
      "type": "object",
      "description": "SKU price related properties",
      "properties": {
        "productCode": {
          "type": "string",
          "description": "The product code (UPN)"
        },
        "termId": {
          "type": "string",
          "description": "The term id"
        },
        "meterType": {
          "type": "string",
          "description": "The meter type"
        },
        "billingMeterId": {
          "type": "string",
          "description": "The billing meter id"
        },
        "offeringId": {
          "type": "string",
          "description": "The offering id"
        },
        "type": {
          "type": "string",
          "description": "Entitlement, Consumption or Reservation"
        }
      }
    },
    "PagedProductSummary": {
      "type": "object",
      "description": "Paged collection of ProductSummary items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ProductSummary items on this page",
          "items": {
            "$ref": "#/definitions/ProductSummary"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedSkuSummary": {
      "type": "object",
      "description": "Paged collection of SkuSummary items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SkuSummary items on this page",
          "items": {
            "$ref": "#/definitions/SkuSummary"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PlanDetails": {
      "type": "object",
      "description": "Returns a subset of Plan attributes",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id"
        },
        "availabilities": {
          "type": "array",
          "description": "List of availabilities for this plan",
          "items": {
            "$ref": "#/definitions/Availability"
          }
        },
        "uiDefinitionUri": {
          "type": "string",
          "description": "What blade to open when someone wants to create a marketplace item"
        },
        "artifacts": {
          "type": "array",
          "description": "Files related to the marketplace item",
          "items": {
            "$ref": "#/definitions/Artifact"
          }
        },
        "version": {
          "type": "string",
          "description": "Version of the marketplace item"
        },
        "isHidden": {
          "type": "boolean",
          "description": "A value indicating whether the plan is hidden"
        },
        "isStopSell": {
          "type": "boolean",
          "description": "A value indicating whether plan has been stopped from selling"
        },
        "stopSellInfo": {
          "$ref": "#/definitions/StopSellInfo",
          "description": "A StopSellInfo object providing stop sell related data"
        },
        "minQuantity": {
          "type": "integer",
          "format": "int32",
          "description": "Min quantity"
        },
        "maxQuantity": {
          "type": "integer",
          "format": "int32",
          "description": "Max quantity"
        },
        "isQuantifiable": {
          "type": "boolean",
          "description": "A value indicating whether the plan is quantifiable"
        },
        "billingComponents": {
          "type": "array",
          "description": "Billing components",
          "items": {
            "$ref": "#/definitions/BillingComponent"
          }
        },
        "purchaseDurationDiscounts": {
          "type": "array",
          "description": "List of purchase duration discounts",
          "items": {
            "$ref": "#/definitions/PurchaseDurationDiscount"
          }
        },
        "isHiddenPrivateOffer": {
          "type": "boolean",
          "description": "A value indicating whether the plan is used as hidden private offer requiring a quote"
        },
        "certifications": {
          "type": "array",
          "description": "List of certifications",
          "items": {
            "$ref": "#/definitions/LinkProperties"
          }
        },
        "customerInstruction": {
          "type": "string",
          "description": "Plan's customer instruction for purchasing"
        },
        "planLabels": {
          "type": "array",
          "description": "Plan labels",
          "items": {
            "type": "string"
          }
        },
        "skuType": {
          "type": "string",
          "description": "SKU type"
        },
        "skuTitle": {
          "type": "string",
          "description": "Sku title localized"
        },
        "location": {
          "type": "string",
          "description": "SKU location"
        },
        "armRegionName": {
          "type": "string",
          "description": "The Arm region name"
        },
        "cloud": {
          "type": "string",
          "description": "Applicable cloud, such as 'Global'"
        },
        "locationType": {
          "type": "string",
          "description": "The location type, such as 'Region'"
        },
        "region": {
          "type": "string",
          "description": "The region"
        },
        "skuGroupId": {
          "type": "string",
          "description": "The sku group id"
        },
        "zone": {
          "type": "string",
          "description": "The zone, such as 'Zone 1'"
        },
        "feature": {
          "type": "string",
          "description": "The feature, such as 'Spot'"
        },
        "serviceType": {
          "type": "string",
          "description": "The service type"
        },
        "skuAttributes": {
          "type": "array",
          "description": "Set of SKU attributes (varies per sku type), where each attribute is represented by a pair of key (attribute name) and value(attribute value)",
          "items": {
            "$ref": "#/definitions/Attribute"
          }
        },
        "skuProperties": {
          "$ref": "#/definitions/SkuProperties",
          "description": "The sku properties"
        },
        "offeringProperties": {
          "type": "array",
          "description": "SKU price related properties.",
          "items": {
            "$ref": "#/definitions/OfferingProperties"
          }
        }
      },
      "required": [
        "isHidden",
        "isStopSell",
        "isQuantifiable"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/PlanSummary"
        }
      ]
    },
    "PlanMetadata": {
      "type": "object",
      "description": "Additional metadata",
      "properties": {
        "generation": {
          "type": "string",
          "description": "The VM image generation (applicable to Virtual Machine products only)"
        },
        "altStackReference": {
          "type": "string",
          "description": "Pointing to a planId which holds the alternative stack reference"
        },
        "relatedSkus": {
          "type": "array",
          "description": "Pointing to a planId of plans that are related to this plan",
          "items": {
            "$ref": "#/definitions/PlanSkuRelation"
          }
        }
      }
    },
    "PlanSkuRelation": {
      "type": "object",
      "description": "Pointing to a related SKU object",
      "properties": {
        "sku": {
          "$ref": "#/definitions/RelatedSku",
          "description": "The Sku"
        },
        "relationType": {
          "type": "string",
          "description": "Relation Type"
        }
      }
    },
    "PlanSummary": {
      "type": "object",
      "description": "Returns a subset of Plan attributes",
      "properties": {
        "planId": {
          "type": "string",
          "description": "Plan id"
        },
        "uniquePlanId": {
          "type": "string",
          "description": "Unique plan Id which is prefixed by combining uniqueProductId and PlanId with no separator in between"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the plan / sku"
        },
        "vmArchitectureType": {
          "type": "string",
          "description": "VM Architecture Type. Applicable to Virtual Machine products only. Possible values include \n- `X64Gen1` - The VM image architecture of the plan is X64 Generation1\n- `X64Gen2` - The VM image architecture of the plan is X64 Generation2\n- `Arm64` - The VM image architecture of the plan is Arm64"
        },
        "cspState": {
          "type": "string",
          "description": "Value showing whether the plan is available for purchase through CSP channel. Possible values include \n- `OptIn` - Plan configured CSP program opt-in for any partner in the CSP Program\n- `OptOut` - Plan configured CSP program opt-out\n- `SelectiveOptIn` - Plan configured CSP program opt-in for specific partners in the CSP program ISV selects"
        },
        "metadata": {
          "$ref": "#/definitions/PlanMetadata",
          "description": "Expanded plan/SKU metadata."
        },
        "altStackReference": {
          "type": "string",
          "description": "Alternative stack reference"
        },
        "stackType": {
          "type": "string",
          "description": "Stack type : Classic, Gen1, Gen2"
        },
        "altArchitectureReference": {
          "type": "string",
          "description": "The alternative architecture reference"
        },
        "categoryIds": {
          "type": "array",
          "description": "Plan CategoryIds",
          "items": {
            "type": "string"
          }
        },
        "hasProtectedArtifacts": {
          "type": "boolean",
          "description": "Set to true if plan has artifacts that are to be hidden for non authenticated users"
        },
        "pricingTypes": {
          "type": "array",
          "description": "The pricing types for which this plan is designated. Possible values include \n- `Free` - Product has at least one plan that is free of charge\n- `FreeTrial` - Product has at least one plan that is free trial\n- `Byol` - Product has at least one plan that is bring your own license\n- `Payg` - Product has at least one plan that is Pay as you go\n- `Ri` - Product has at least one plan that is Reserved Instance billing model",
          "items": {
            "type": "string"
          }
        },
        "vmSecuritytypes": {
          "type": "array",
          "description": "VM security type. Applicable to Virtual Machine products only. Possible values include \n- `None` - Default value\n- `Trusted` - Trusted Launch security\n- `Confidential` - Confidential security",
          "items": {
            "type": "string"
          }
        },
        "summary": {
          "type": "string",
          "description": "The plan summary text"
        },
        "description": {
          "type": "string",
          "description": "Plan / sku description"
        },
        "skuId": {
          "type": "string",
          "description": "The SKU id"
        },
        "planType": {
          "type": "string",
          "description": "The delivery method or deployment model. Possible values include \n- `None` - Default value\n- `DevService` - Dev Service\n- `ManagedApplication` - Managed Application plan type\n- `VirtualMachine` - Virtual Machine\n- `AzureApplication` - Azure Application\n- `Container` - Container\n- `SaaS` - Software as a Service\n- `SolutionTemplate` - Solution Template\n- `IotEdgeModules` - IoT Edge Module\n- `ManagedServices` - Managed Service\n- `ContainerApps` - Container App\n- `VisualStudioExtension` - Visual Studio Extension\n- `DynamicsOps` - Dynamics Operations\n- `DynamicsCE` - Dynamics CE\n- `DynamicsBC` - Dynamics Business Central\n- `PowerBI` - Power BI\n- `ConsultingServices` - Consulting Services\n- `CosellOnly` - Co-sell Only\n- `CoreVirtualMachine` - Core Virtual Machine\n- `PowerBIVisuals` - Power BI Visuals\n- `Office365` - Office 365\n- `AADApps` - Azure Active Directory Applications\n- `AzureServices` - Azure Services\n- `AppService` - App Service\n- `LogAnalytics` - Log Analytics\n- `MicrosoftProduct` - Microsoft Product"
        },
        "displayRank": {
          "type": "string",
          "description": "The order the plan is displayed in the 'Plans' table"
        },
        "isPrivate": {
          "type": "boolean",
          "description": "Indication that the plan is accessible to restricted audience only"
        },
        "hasRi": {
          "type": "boolean",
          "description": "Indication whether the SKU supports reservations"
        }
      },
      "required": [
        "planType"
      ]
    },
    "PreviewImage": {
      "type": "object",
      "description": "Video preview image",
      "properties": {
        "caption": {
          "type": "string",
          "description": "caption"
        },
        "uri": {
          "type": "string",
          "description": "uri"
        },
        "imagePurpose": {
          "type": "string",
          "description": "imagePurpose"
        }
      }
    },
    "Price": {
      "type": "object",
      "description": "Retail price with currency",
      "properties": {
        "currencyCode": {
          "type": "string",
          "description": "Currency code i.e. 'USD'"
        },
        "isPiRequired": {
          "type": "boolean",
          "description": "A value indicating whether a payment instrument is required"
        },
        "listPrice": {
          "type": "number",
          "format": "float",
          "description": "Retail price for the item"
        },
        "msrp": {
          "type": "number",
          "format": "float",
          "description": "Manufacturer's suggested retail price for the item"
        }
      },
      "required": [
        "isPiRequired",
        "listPrice",
        "msrp"
      ]
    },
    "ProductDetails": {
      "type": "object",
      "description": "Summary description of the product",
      "properties": {
        "videos": {
          "type": "array",
          "description": "List of product videos",
          "items": {
            "$ref": "#/definitions/ProductVideo"
          }
        },
        "images": {
          "type": "array",
          "description": "List of Images",
          "items": {
            "$ref": "#/definitions/ImageGroup"
          }
        },
        "linkedAddIns": {
          "type": "array",
          "description": "List of linked Add Ins provided for the item",
          "items": {
            "type": "string"
          }
        },
        "links": {
          "type": "array",
          "description": "List of Links provided for the item",
          "items": {
            "$ref": "#/definitions/LinkProperties"
          }
        },
        "additionalProductProperties": {
          "type": "object",
          "description": "Dictionary of additional properties provided for the item",
          "additionalProperties": {
            "type": "string"
          }
        },
        "language": {
          "type": "string",
          "description": "The product language"
        },
        "hasStandardContractAmendments": {
          "type": "boolean",
          "description": "A value indicating whether standard contract amendments are present"
        },
        "offerId": {
          "type": "string",
          "description": "The offer id"
        },
        "standardContractAmendmentsRevisionId": {
          "type": "string",
          "description": "Standard contract amendments for the product"
        },
        "universalAmendmentUrl": {
          "type": "string",
          "description": "The universal amendment link for an enterprise contract"
        },
        "isPrivate": {
          "type": "boolean",
          "description": "A value indicating whether the item is private"
        },
        "isStopSell": {
          "type": "boolean",
          "description": "A value indicating whether sale of this item is stopped"
        },
        "legalTermsUri": {
          "type": "string",
          "description": "Legal terms URI"
        },
        "legalTermsType": {
          "type": "string",
          "description": "Supported legal terms type. Possible values include \n- `None` - No specific legal terms\n- `EA` - Microsoft Enterprise Agreement"
        },
        "supportUri": {
          "type": "string",
          "description": "Support uri of the product"
        },
        "uiDefinitionUri": {
          "type": "string",
          "description": "User interface definition uri"
        },
        "screenshotUris": {
          "type": "array",
          "description": "List of screenshot image URIs",
          "items": {
            "type": "string"
          }
        },
        "mediumIconUri": {
          "type": "string",
          "description": "URI to the medium product icon"
        },
        "largeIconUri": {
          "type": "string",
          "description": "URI to the large product icon"
        },
        "wideIconUri": {
          "type": "string",
          "description": "URI to the wide product icon"
        },
        "pricingDetailsUri": {
          "type": "string",
          "description": "Pricing details uri of the product"
        },
        "isReseller": {
          "type": "boolean",
          "description": "A value indicating whether microsoft is acting as a reseller"
        },
        "productOwnershipSellingMotion": {
          "type": "string",
          "description": "Product ownership selling motion"
        },
        "disableSendEmailOnPurchase": {
          "type": "boolean",
          "description": "Indication to disable sending email on purchase"
        },
        "isCoreVm": {
          "type": "boolean",
          "description": "Indicates if VM was originally CoreVirtualMachine"
        },
        "stopSellInfo": {
          "$ref": "#/definitions/StopSellInfo",
          "description": "A StopSellInfo object providing stop sell related data"
        },
        "marketingMaterial": {
          "$ref": "#/definitions/MarketingMaterial",
          "description": "Includes links to the learning and marketing materials as configured by the publisher"
        },
        "artifacts": {
          "type": "array",
          "description": "List of artifacts",
          "items": {
            "$ref": "#/definitions/Artifact"
          }
        },
        "plans": {
          "type": "array",
          "description": "Full set of plan/SKU attributes",
          "items": {
            "$ref": "#/definitions/PlanDetails"
          }
        },
        "productId": {
          "type": "string",
          "description": "The unique id of the product"
        }
      },
      "required": [
        "isPrivate",
        "isStopSell",
        "productId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ProductSummary"
        }
      ]
    },
    "ProductSummary": {
      "type": "object",
      "description": "Returns a subset of Product attributes",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Product display name"
        },
        "popularity": {
          "type": "number",
          "format": "double",
          "description": "Popularity of the product"
        },
        "categoryIds": {
          "type": "array",
          "description": "Array of product categories",
          "items": {
            "type": "string"
          }
        },
        "industryIds": {
          "type": "array",
          "description": "List of industry IDs the item belongs to",
          "items": {
            "type": "string"
          }
        },
        "publisherId": {
          "type": "string",
          "description": "Publisher id"
        },
        "azureBenefit": {
          "type": "string",
          "description": "Eligibility for Azure consumption commitment benefit. For more details see: https://docs.microsoft.com/en-us/marketplace/azure-consumption-commitment-benefit. Possible values include \n- `Eligible` - The product is eligible for Azure consumption commitment benefit\n- `NotEligible` - The product is not eligible for Azure consumption commitment benefit"
        },
        "badges": {
          "type": "array",
          "description": "Badge type. Possible values include \n- `PreferredSolution` - Preferred Solution badge\n- `PowerBICertified` - Power BI Certified badge\n- `AdditionalPurchaseRequirement` - Additional Purchase Requirement badge",
          "items": {
            "type": "string"
          }
        },
        "publisherType": {
          "type": "string",
          "description": "A value indicating whether this is a Microsoft or third party product. Possible values include \n- `Microsoft` - Product is published by Microsoft (1st party product)\n- `ThirdParty` - Product is published by Third Party Vendor"
        },
        "publishingStage": {
          "type": "string",
          "description": "Product publishing stage. Possible values include \n- `Preview` - Product is available to restricted audience\n- `Public` - Product is publicly available in the Marketplace"
        },
        "uniqueProductId": {
          "type": "string",
          "description": "Unique product identifier",
          "readOnly": true
        },
        "productType": {
          "type": "string",
          "description": "The delivery method or deployment model. Possible values include \n- `None` - Default value\n- `DevService` - Dev Service\n- `ManagedApplication` - Managed Application plan type\n- `VirtualMachine` - Virtual Machine\n- `AzureApplication` - Azure Application\n- `Container` - Container\n- `SaaS` - Software as a Service\n- `SolutionTemplate` - Solution Template\n- `IotEdgeModules` - IoT Edge Module\n- `ManagedServices` - Managed Service\n- `ContainerApps` - Container App\n- `VisualStudioExtension` - Visual Studio Extension\n- `DynamicsOps` - Dynamics Operations\n- `DynamicsCE` - Dynamics CE\n- `DynamicsBC` - Dynamics Business Central\n- `PowerBI` - Power BI\n- `ConsultingServices` - Consulting Services\n- `CosellOnly` - Co-sell Only\n- `CoreVirtualMachine` - Core Virtual Machine\n- `PowerBIVisuals` - Power BI Visuals\n- `Office365` - Office 365\n- `AADApps` - Azure Active Directory Applications\n- `AzureServices` - Azure Services\n- `AppService` - App Service\n- `LogAnalytics` - Log Analytics\n- `MicrosoftProduct` - Microsoft Product"
        },
        "productSubType": {
          "type": "string",
          "description": "Product sub type"
        },
        "productFamily": {
          "type": "string",
          "description": "Product Family"
        },
        "operatingSystems": {
          "type": "array",
          "description": "Operating system info for this product",
          "items": {
            "type": "string"
          }
        },
        "pricingTypes": {
          "type": "array",
          "description": "The pricing types for which this plan is designated. Possible values include \n- `Free` - Product has at least one plan that is free of charge\n- `FreeTrial` - Product has at least one plan that is free trial\n- `Byol` - Product has at least one plan that is bring your own license\n- `Payg` - Product has at least one plan that is Pay as you go\n- `Ri` - Product has at least one plan that is Reserved Instance billing model",
          "items": {
            "type": "string"
          }
        },
        "publisherDisplayName": {
          "type": "string",
          "description": "Publisher display name"
        },
        "longSummary": {
          "type": "string",
          "description": "Product long summary"
        },
        "summary": {
          "type": "string",
          "description": "Product summary"
        },
        "linkedAddInsTypes": {
          "type": "object",
          "description": "Linked add-in types",
          "additionalProperties": {
            "type": "string"
          }
        },
        "smallIconUri": {
          "type": "string",
          "description": "URI to the small product icon"
        },
        "description": {
          "type": "string",
          "description": "The product description text"
        },
        "cspLegalTermsUri": {
          "type": "string",
          "description": "The legal terms of the product for the CSP"
        },
        "privacyPolicyUri": {
          "type": "string",
          "description": "The privacy policy of the product"
        },
        "ratingBuckets": {
          "type": "array",
          "description": "Rating Bucket. Possible values include \n- `AboveOne` - Above one star rating\n- `AboveTwo` - Above two stars rating\n- `AboveThree` - Above three stars rating\n- `AboveFour` - Above four stars rating",
          "items": {
            "type": "string"
          }
        },
        "ratingAverage": {
          "type": "number",
          "format": "double",
          "description": "Average rating for the offer"
        },
        "ratingCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of ratings for the offer"
        },
        "startingPrice": {
          "$ref": "#/definitions/MarketStartPrice",
          "description": "Retail price of the product's cheapest plan"
        },
        "plans": {
          "type": "array",
          "description": "Full set of plan/SKU attributes",
          "items": {
            "$ref": "#/definitions/PlanSummary"
          }
        },
        "supportedProducts": {
          "type": "array",
          "description": "Maps to the list of compatible products",
          "items": {
            "type": "string"
          }
        },
        "applicableProducts": {
          "type": "array",
          "description": "Product categories the offer belongs to",
          "items": {
            "type": "string"
          }
        },
        "lastModifiedDateTime": {
          "type": "string",
          "description": "Latest update date of the product"
        },
        "locations": {
          "type": "array",
          "description": "List of locations which are available on the SKUs",
          "items": {
            "type": "string"
          }
        },
        "serviceFamily": {
          "type": "string",
          "description": "The service family of the product, such as 'Compute'"
        },
        "service": {
          "type": "string",
          "description": "The service name of the product, such as 'Virtual Machines'"
        },
        "productId": {
          "type": "string",
          "description": "The unique id of the product"
        },
        "hasRiPlans": {
          "type": "boolean",
          "description": "Indication whether the product has plans with reservations"
        },
        "hasMarketplaceFootprint": {
          "type": "boolean",
          "description": "Indication if product has a representation in the marketplace"
        },
        "attributes": {
          "type": "array",
          "description": "Set of products attributes",
          "items": {
            "$ref": "#/definitions/Attribute"
          }
        }
      },
      "required": [
        "uniqueProductId",
        "productType"
      ]
    },
    "ProductVideo": {
      "type": "object",
      "description": "Product Video",
      "properties": {
        "caption": {
          "type": "string",
          "description": "Caption"
        },
        "uri": {
          "type": "string",
          "description": "Video uri"
        },
        "videoPurpose": {
          "type": "string",
          "description": "Video purpose"
        },
        "previewImage": {
          "$ref": "#/definitions/PreviewImage",
          "description": "Preview image"
        }
      }
    },
    "ProrationPolicy": {
      "type": "object",
      "description": "Proration policy",
      "properties": {
        "minimumProratedUnits": {
          "type": "string",
          "description": "Minimum prorated units"
        }
      }
    },
    "PurchaseDurationDiscount": {
      "type": "object",
      "description": "The percentage discount for 3rd party virtual machines software reservations",
      "properties": {
        "duration": {
          "type": "string",
          "description": "The duration"
        },
        "discountPercentage": {
          "type": "number",
          "format": "float",
          "description": "The discount percentage"
        }
      },
      "required": [
        "discountPercentage"
      ]
    },
    "RelatedSku": {
      "type": "object",
      "description": "The sku",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name"
        },
        "generation": {
          "type": "string",
          "description": "The generation"
        },
        "identity": {
          "type": "string",
          "description": "The identity"
        }
      }
    },
    "SkuProperties": {
      "type": "object",
      "description": "The SKU properties, contains some of the attributes for faster OData filter",
      "properties": {
        "category": {
          "type": "string",
          "description": "The sku category"
        },
        "dataDiskType": {
          "type": "string",
          "description": "The data disk type, such as 'Ssd'"
        },
        "diskType": {
          "type": "string",
          "description": "The disk type, such as 'Ssd'"
        },
        "numberOfCores": {
          "type": "string",
          "description": "The number of cores"
        },
        "ram": {
          "type": "string",
          "description": "The RAM"
        },
        "vCpu": {
          "type": "string",
          "description": "The number of virtual CPUs"
        },
        "armSkuName": {
          "type": "string",
          "description": "The ARM SKU name"
        },
        "accessTier": {
          "type": "string",
          "description": "The access tier, such as 'Standard'"
        }
      }
    },
    "SkuSummary": {
      "type": "object",
      "description": "Summary description of the SKU",
      "properties": {
        "productId": {
          "type": "string",
          "description": "The unique id of the product",
          "readOnly": true
        },
        "productDisplayName": {
          "type": "string",
          "description": "Product display name"
        },
        "productDescription": {
          "type": "string",
          "description": "The product description text"
        },
        "serviceFamily": {
          "type": "string",
          "description": "The service family of the product, such as 'Compute'"
        },
        "service": {
          "type": "string",
          "description": "The service name of the product, such as 'Virtual Machines'"
        },
        "publisherId": {
          "type": "string",
          "description": "Publisher id"
        },
        "publisherType": {
          "type": "string",
          "description": "A value indicating whether this is a Microsoft or third party product. Possible values include \n- `Microsoft` - Product is published by Microsoft (1st party product)\n- `ThirdParty` - Product is published by Third Party Vendor"
        },
        "productType": {
          "type": "string",
          "description": "The delivery method or deployment model. Possible values include \n- `None` - Default value\n- `DevService` - Dev Service\n- `ManagedApplication` - Managed Application plan type\n- `VirtualMachine` - Virtual Machine\n- `AzureApplication` - Azure Application\n- `Container` - Container\n- `SaaS` - Software as a Service\n- `SolutionTemplate` - Solution Template\n- `IotEdgeModules` - IoT Edge Module\n- `ManagedServices` - Managed Service\n- `ContainerApps` - Container App\n- `VisualStudioExtension` - Visual Studio Extension\n- `DynamicsOps` - Dynamics Operations\n- `DynamicsCE` - Dynamics CE\n- `DynamicsBC` - Dynamics Business Central\n- `PowerBI` - Power BI\n- `ConsultingServices` - Consulting Services\n- `CosellOnly` - Co-sell Only\n- `CoreVirtualMachine` - Core Virtual Machine\n- `PowerBIVisuals` - Power BI Visuals\n- `Office365` - Office 365\n- `AADApps` - Azure Active Directory Applications\n- `AzureServices` - Azure Services\n- `AppService` - App Service\n- `LogAnalytics` - Log Analytics\n- `MicrosoftProduct` - Microsoft Product"
        },
        "productSubType": {
          "type": "string",
          "description": "Product sub type"
        },
        "summary": {
          "type": "string",
          "description": "Product summary"
        },
        "productAttributes": {
          "type": "array",
          "description": "The product attributes",
          "items": {
            "$ref": "#/definitions/Attribute"
          }
        },
        "skuName": {
          "type": "string",
          "description": "Sku name"
        },
        "skuId": {
          "type": "string",
          "description": "Sku id"
        },
        "skuType": {
          "type": "string",
          "description": "Sku type"
        },
        "language": {
          "type": "string",
          "description": "Language"
        },
        "skuDescription": {
          "type": "string",
          "description": "Sku description localized"
        },
        "skuTitle": {
          "type": "string",
          "description": "Sku title localized"
        },
        "lastModifiedDateTime": {
          "type": "string",
          "description": "Latest update date of the SKU"
        },
        "location": {
          "type": "string",
          "description": "Location (region)"
        },
        "armRegionName": {
          "type": "string",
          "description": "The Arm region name"
        },
        "cloud": {
          "type": "string",
          "description": "The cloud, such as 'Global'"
        },
        "locationType": {
          "type": "string",
          "description": "The location type, such as 'Region'"
        },
        "region": {
          "type": "string",
          "description": "The region"
        },
        "skuGroupId": {
          "type": "string",
          "description": "The sku group id"
        },
        "zone": {
          "type": "string",
          "description": "The zone, such as 'Zone 1'"
        },
        "feature": {
          "type": "string",
          "description": "The feature"
        },
        "serviceType": {
          "type": "string",
          "description": "The service type"
        },
        "minQuantity": {
          "type": "integer",
          "format": "int32",
          "description": "Min quantity"
        },
        "maxQuantity": {
          "type": "integer",
          "format": "int32",
          "description": "Max quantity"
        },
        "cspState": {
          "type": "string",
          "description": "Value showing whether the plan is available for purchase through CSP channel. Possible values include \n- `OptIn` - Plan configured CSP program opt-in for any partner in the CSP Program\n- `OptOut` - Plan configured CSP program opt-out\n- `SelectiveOptIn` - Plan configured CSP program opt-in for specific partners in the CSP program ISV selects"
        },
        "hasRi": {
          "type": "boolean",
          "description": "Indication whether the SKU supports reservations"
        },
        "skuAttributes": {
          "type": "array",
          "description": "The SKU attributes",
          "items": {
            "$ref": "#/definitions/Attribute"
          }
        },
        "skuProperties": {
          "$ref": "#/definitions/SkuProperties",
          "description": "The sku properties"
        },
        "offeringProperties": {
          "type": "array",
          "description": "SKU price related properties",
          "items": {
            "$ref": "#/definitions/OfferingProperties"
          }
        }
      },
      "required": [
        "productId"
      ]
    },
    "StopSellInfo": {
      "type": "object",
      "description": "Represents a model for stop sell related information",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "A value indicating when the sale of this item is going to be stopped"
        },
        "reason": {
          "type": "string",
          "description": "Reason for stopping to sell an item. Possible values include \n- `EndOfSupport` - End of support for the item\n- `SecurityIssue` - Security issue with the item\n- `Other` - Other reason"
        },
        "alternativeOfferId": {
          "type": "string",
          "description": "A value indicating an ID of an alternative offer provided by the same publisher"
        },
        "alternativePlanId": {
          "type": "string",
          "description": "A value indicating an ID of an alternative plan of the same offer"
        }
      }
    },
    "Term": {
      "type": "object",
      "description": "Applicable term",
      "properties": {
        "termDescriptionParameters": {
          "type": "array",
          "description": "Term description parameters",
          "items": {
            "$ref": "#/definitions/TermDescriptionParameter"
          }
        },
        "termId": {
          "type": "string",
          "description": "Term id"
        },
        "termUnit": {
          "type": "string",
          "description": "Term unit"
        },
        "prorationPolicy": {
          "$ref": "#/definitions/ProrationPolicy",
          "description": "Proration policy"
        },
        "termDescription": {
          "type": "string",
          "description": "Term description"
        },
        "price": {
          "$ref": "#/definitions/Price",
          "description": "Retail price with currency"
        },
        "renewTermId": {
          "type": "string",
          "description": "Renew term id"
        },
        "renewTermUnits": {
          "type": "string",
          "description": "Renew term units"
        },
        "billingPlan": {
          "$ref": "#/definitions/BillingPlan",
          "description": "Billing Plan"
        },
        "renewToTermBillingPlan": {
          "type": "string",
          "description": "Renew Billing Plan"
        },
        "isAutorenewable": {
          "type": "boolean",
          "description": "Indicates if autorenew is enabled"
        }
      }
    },
    "TermDescriptionParameter": {
      "type": "object",
      "description": "Term description parameters",
      "properties": {
        "parameter": {
          "type": "string",
          "description": "Parameter"
        },
        "value": {
          "type": "string",
          "description": "Value"
        }
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    },
    "ExcludeSkuDetailsParameter": {
      "name": "excludeSkuDetails",
      "in": "query",
      "description": "By default SKU details are included (excludeSkuDetails = FALSE ), to exclude SKU details in the response, set excludeSkuDetails to TRUE.",
      "required": false,
      "type": "boolean",
      "default": false,
      "x-ms-parameter-location": "method"
    },
    "HideKeysParameter": {
      "name": "hideKeys",
      "in": "query",
      "description": "This key is utilized to retrieve preview products and is generated within the Partner Center during the offer publishing process.",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "csv",
      "x-ms-parameter-location": "method"
    },
    "IncludeFutureAvailabilitiesParameter": {
      "name": "includeFutureAvailabilities",
      "in": "query",
      "description": "Indicates whether to include the product's plans/SKU availabilities with future dates in the response. By default, includeFutureAvailabilities is set to FALSE.",
      "required": false,
      "type": "boolean",
      "default": false,
      "x-ms-parameter-location": "method"
    },
    "IncludeStopSoldPlansParameter": {
      "name": "includeStopSoldPlans",
      "in": "query",
      "description": "Indicates whether to include in the response the product's plans/SKUs that are no longer available for purchase. By default, includeStopSoldPlans is set to FALSE.",
      "required": false,
      "type": "boolean",
      "default": false,
      "x-ms-parameter-location": "method"
    },
    "LanguageParameter": {
      "name": "language",
      "in": "query",
      "description": "Language to search, ISO 639-1 two-letter code, possible values - 'en,cs,de,es,fr,hu,it,ja,ko,nl,pl,pt-br,pt-pt,ru,sv,tr,zh-hans,zh-hant'. Default is \"en\"",
      "required": false,
      "type": "string",
      "default": "en",
      "x-ms-parameter-location": "method"
    },
    "LocationsParameter": {
      "name": "locations",
      "in": "query",
      "description": "Return products available in selected location. Enumeration of the Azure datacenter regions. See https://azure.microsoft.com/regions/",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "csv",
      "x-ms-parameter-location": "method"
    },
    "MarketParameter": {
      "name": "market",
      "in": "query",
      "description": "Product market value  (the response will include only products that can be sold in the specified market)\nPossible values can be found at https://docs.microsoft.com/en-us/azure/marketplace/marketplace-geo-availability-currencies. Example: 'US'",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "OdataExpandParameter": {
      "name": "$expand",
      "in": "query",
      "description": "Expands related entities inline. Example: $expand=startingPrice",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "OdataFilterParameter": {
      "name": "$filter",
      "in": "query",
      "description": "Filters the results, based on a Boolean condition. Example: $filter=productType eq 'VirtualMachine'. Fields that can be filtered by are:\n- `displayName`\n- `productId`\n- `popularity`\n- `categoryIds`\n- `industryIds`\n- `publisherId`\n- `uniqueProductId`\n- `productType`\n- `operatingSystems`\n- `pricingTypes`\n- `publisherDisplayName`\n- `longSummary`\n- `summary`\n- `linkedAddinsTypes`\n- `description`\n- `supportedProducts`\n- `applicableProducts`\n- `lastModifiedDateTime`\n- `plan.planId`\n- `plan.displayName`\n- `plan.cspState`\n- `plan.altStackReference`\n- `plan.stackType`\n- `plan.categoryIds`\n- `plan.hasProtectedArtifacts`\n- `plan.pricingTypes`\n- `plan.summary`\n- `plan.description`\n- `plan.skuId`\n- `plan.displayRank`\n- `plan.isPrivate`",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "OdataOrderByParameter": {
      "name": "$orderBy",
      "in": "query",
      "description": "Ordering expression for the results using OData notation. Avoid using orderby unless essential as this may impact the latency of your request.  Example: $orderby=displayName desc.This API only supports ordering by a single field. Fields that can be ordered by are:\n- `lastModifiedDateTime`\n- `uniqueProductId`\n- `productType`\n- `displayName`\n- `publisherId`'",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "OdataSelectParameter": {
      "name": "$select",
      "in": "query",
      "description": "Selects which properties to include in the results. Example: $select=displayName",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "PricingAudienceHeaderParameter": {
      "name": "x-ms-pricing-audience",
      "in": "header",
      "description": "DirectCommercial or PartnerCommercial, DirectCommercial is the default",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "pricingAudience"
    },
    "SearchParameter": {
      "name": "$search",
      "in": "query",
      "description": "Optional search by display name, publisher display name, or keywords. Example $search=Microsoft",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ServiceFamilyParameter": {
      "name": "serviceFamily",
      "in": "query",
      "description": "The service family of the product, such as 'Compute'",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ServiceParameter": {
      "name": "service",
      "in": "query",
      "description": "The service name of the product, such as 'Virtual Machines'",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SkuIdParameter": {
      "name": "skuId",
      "in": "query",
      "description": "Apply SKU ID filtering to the results and only return products that include SKUs matching the selected SKU ID.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
