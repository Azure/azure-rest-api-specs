{
  "swagger": "2.0",
  "info": {
    "title": "Products",
    "version": "2025-05-01",
    "description": "Microsoft Marketplace Catalog Browse API",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "catalogapi.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "tags": [
    {
      "name": "ListingPublicProducts"
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "operationId": "Operations_GetProducts",
        "tags": [
          "ListingPublicProducts"
        ],
        "description": "Public Products API provides an unauthenticated endpoint for consuming commercial 3rd party Marketplace public products and 1st party Azure products. In addition, it enables Odata filtering on selected product properties.  Each API request must include an API key allocated to you (see X-API-Key description). Send an email to MKPL_Platform_API_DL@microsoft.com including the following details to get the API Key:\n- Customer name\n- Service/Product name\n- AD Registered App ID (if available)\n- Focal point email\n- Use case/scenario\n- Expected traffic volume, including peak requests per second (daily)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the REST API used for the request.",
            "required": true,
            "type": "string",
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "storefront",
            "in": "query",
            "description": "Return products available in Azure Portal Marketplace, AppSource or Azure Marketplace portal. The possible values are: \n- `azure` - Azure Portal Marketplace\n- `amp` - Azure Marketplace portal\n- `appsource` - AppSource portal\nThe default value is 'azure'",
            "required": false,
            "type": "string",
            "default": "azure"
          },
          {
            "name": "language",
            "in": "query",
            "description": "Language to search, ISO 639-1 two-letter code, possible values - 'en,cs,de,es,fr,hu,it,ja,ko,nl,pl,pt-br,pt-pt,ru,sv,tr,zh-hans,zh-hant'. Default is \"en\"",
            "required": false,
            "type": "string",
            "default": "en"
          },
          {
            "name": "locations",
            "in": "query",
            "description": "Return products available in selected location. Enumeration of the Azure datacenter regions. See https://azure.microsoft.com/regions/",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "market",
            "in": "query",
            "description": "Product market value  (the response will include only products that can be sold in the specified market)\nPossible values can be found at https://docs.microsoft.com/en-us/azure/marketplace/marketplace-geo-availability-currencies. Example: 'US'",
            "required": false,
            "type": "string"
          },
          {
            "name": "hideKeys",
            "in": "query",
            "description": "This key is utilized to retrieve preview products and is generated within the Partner Center during the offer publishing process.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Selects which properties to include in the results. Example: 'select=displayName'",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition. Example: 'filter=productType eq \"VirtualMachine\"'. Fields that can be filtered by are:\n- `displayName`\n- `productId`\n- `popularity`\n- `categoryIds`\n- `industryIds`\n- `publisherId`\n- `uniqueProductId`\n- `productType`\n- `operatingSystems`\n- `pricingTypes`\n- `publisherDisplayName`\n- `longSummary`\n- `summary`\n- `linkedAddinsTypes`\n- `description`\n- `supportedProducts`\n- `applicableProducts`\n- `lastModifiedDateTime`\n- `plan.planId`\n- `plan.displayName`\n- `plan.cspState`\n- `plan.altStackReference`\n- `plan.stackType`\n- `plan.categoryIds`\n- `plan.hasProtectedArtifacts`\n- `plan.pricingTypes`\n- `plan.summary`\n- `plan.description`\n- `plan.skuId`\n- `plan.displayRank`\n- `plan.isPrivate`",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Expands related entities inline. Example: 'expand=startingPrice'",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Ordering expression for the results using OData notation. Avoid using orderby unless essential as this may impact the latency of your request.  Example: 'orderby=displayName desc'.This API only supports ordering by a single field. Fields that can be ordered by are:\n- `lastModifiedDateTime`\n- `uniqueProductId`\n- `productType`\n- `displayName`\n- `publisherId`",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Use Api key provided by Marketplace Catalog Team as a parameter provided in the header",
            "required": true,
            "type": "string",
            "x-ms-client-name": "apiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of public or preview products",
            "schema": {
              "$ref": "#/definitions/CatalogApiResponse"
            }
          },
          "default": {
            "description": "The API error response object",
            "schema": {
              "$ref": "#/definitions/ErrorResponseDetails"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "The error code returned in the response header."
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Attribute": {
      "type": "object",
      "description": "Represents a SKU attribute",
      "properties": {
        "key": {
          "type": "string",
          "description": "The attribute key"
        },
        "value": {
          "type": "string",
          "description": "The attribute value"
        }
      }
    },
    "AzureBenefit": {
      "type": "string",
      "description": "Eligibility for Azure consumption commitment benefit",
      "enum": [
        "Eligible",
        "NotEligible"
      ],
      "x-ms-enum": {
        "name": "AzureBenefit",
        "modelAsString": false,
        "values": [
          {
            "name": "Eligible",
            "value": "Eligible",
            "description": "The product is eligible for Azure consumption commitment benefit"
          },
          {
            "name": "NotEligible",
            "value": "NotEligible",
            "description": "The product is not eligible for Azure consumption commitment benefit"
          }
        ]
      }
    },
    "Badge": {
      "type": "string",
      "description": "Badge type",
      "enum": [
        "PreferredSolution",
        "PowerBICertified",
        "AdditionalPurchaseRequirement"
      ],
      "x-ms-enum": {
        "name": "Badge",
        "modelAsString": false,
        "values": [
          {
            "name": "PreferredSolution",
            "value": "PreferredSolution",
            "description": "Preferred Solution badge"
          },
          {
            "name": "PowerBICertified",
            "value": "PowerBICertified",
            "description": "Power BI Certified badge"
          },
          {
            "name": "AdditionalPurchaseRequirement",
            "value": "AdditionalPurchaseRequirement",
            "description": "Additional Purchase Requirement badge"
          }
        ]
      }
    },
    "CatalogApiResponse": {
      "type": "object",
      "description": "Response page composed of a list of Product objects together with a next page link.",
      "properties": {
        "items": {
          "type": "array",
          "description": "The list of returned items",
          "items": {
            "$ref": "#/definitions/ProductSummary"
          },
          "x-ms-identifiers": []
        },
        "nextPageLink": {
          "type": "string",
          "description": "Link to the next page where request returns more than a single page of results"
        }
      }
    },
    "CspState": {
      "type": "string",
      "description": "Value showing whether the plan is available for purchase through CSP channel",
      "enum": [
        "OptIn",
        "OptOut",
        "SelectiveOptIn"
      ],
      "x-ms-enum": {
        "name": "CspState",
        "modelAsString": false,
        "values": [
          {
            "name": "OptIn",
            "value": "OptIn",
            "description": "Plan configured CSP program opt-in for any partner in the CSP Program"
          },
          {
            "name": "OptOut",
            "value": "OptOut",
            "description": "Plan configured CSP program opt-out"
          },
          {
            "name": "SelectiveOptIn",
            "value": "SelectiveOptIn",
            "description": "Plan configured CSP program opt-in for specific partners in the CSP program ISV selects"
          }
        ]
      }
    },
    "ErrorResponseDetails": {
      "type": "object",
      "description": "The API error response details object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code description. Such as code=InternalError"
        },
        "message": {
          "type": "string",
          "description": "The error message. Such as message=Internal server error"
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "MarketStartPrice": {
      "type": "object",
      "description": "Retail price of the product's cheapest plan",
      "properties": {
        "market": {
          "type": "string",
          "description": "The market for which the starting price is calculated"
        },
        "termUnits": {
          "type": "string",
          "description": "The terms pricing model units"
        },
        "meterUnits": {
          "type": "string",
          "description": "The meters pricing model units"
        },
        "minTermPrice": {
          "type": "number",
          "format": "float",
          "description": "Starting (minimal) terms price"
        },
        "minMeterPrice": {
          "type": "number",
          "format": "float",
          "description": "Starting (minimal) meters price"
        },
        "currency": {
          "type": "string",
          "description": "Currency for price"
        }
      }
    },
    "PlanMetadata": {
      "type": "object",
      "description": "Plan/SKU metadata",
      "properties": {
        "generation": {
          "type": "string",
          "description": "The VM image generation (applicable to Virtual Machine products only)"
        },
        "altStackReference": {
          "type": "string",
          "description": "Pointing to a planId which holds the alternative stack reference"
        },
        "relatedSkus": {
          "type": "array",
          "description": "Pointing to a planId of plans that are related to this plan",
          "items": {
            "$ref": "#/definitions/PlanSkuRelation"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "PlanSkuRelation": {
      "type": "object",
      "description": "Related SKU relation",
      "properties": {
        "sku": {
          "$ref": "#/definitions/RelatedSku",
          "description": "The Sku"
        },
        "relationType": {
          "type": "string",
          "description": "Relation Type"
        }
      }
    },
    "PlanSummary": {
      "type": "object",
      "description": "Returns a subset of Plan attributes",
      "properties": {
        "planId": {
          "type": "string",
          "description": "Plan id"
        },
        "uniquePlanId": {
          "type": "string",
          "description": "Unique plan Id which is prefixed by combining uniqueProductId and PlanId with no separator in between"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the plan / sku"
        },
        "vmArchitectureType": {
          "$ref": "#/definitions/VmArchitectureType",
          "description": "VM Architecture Type. Applicable to Virtual Machine products only."
        },
        "cspState": {
          "$ref": "#/definitions/CspState",
          "description": "Value showing whether the plan is available for purchase through CSP channel."
        },
        "metadata": {
          "$ref": "#/definitions/PlanMetadata",
          "description": "Expanded plan/SKU metadata."
        },
        "altStackReference": {
          "type": "string",
          "description": "Alternative stack reference"
        },
        "stackType": {
          "type": "string",
          "description": "Stack type : Classic, Gen1, Gen2"
        },
        "altArchitectureReference": {
          "type": "string",
          "description": "The alternative architecture reference"
        },
        "categoryIds": {
          "type": "array",
          "description": "Plan CategoryIds",
          "items": {
            "type": "string"
          }
        },
        "hasProtectedArtifacts": {
          "type": "boolean",
          "description": "Set to true if plan has artifacts that are to be hidden for non authenticated users"
        },
        "pricingTypes": {
          "type": "array",
          "description": "The list of the pricing types for which this plan is designated",
          "items": {
            "$ref": "#/definitions/PricingType"
          }
        },
        "vmSecuritytypes": {
          "type": "array",
          "description": "VM security types",
          "items": {
            "$ref": "#/definitions/VmSecurityType"
          }
        },
        "summary": {
          "type": "string",
          "description": "The plan summary text"
        },
        "description": {
          "type": "string",
          "description": "Plan / sku description"
        },
        "skuId": {
          "type": "string",
          "description": "The SKU id"
        },
        "planType": {
          "$ref": "#/definitions/ProductType",
          "description": "Managed Application or Solution template plan type"
        },
        "displayRank": {
          "type": "string",
          "description": "The order the plan is displayed in the 'Plans' table"
        },
        "isPrivate": {
          "type": "boolean",
          "description": "Indication that the plan is accessible to restricted audience only"
        },
        "hasRI": {
          "type": "boolean",
          "description": "Indication whether the SKU supports reservations"
        }
      },
      "required": [
        "planType"
      ]
    },
    "PricingType": {
      "type": "string",
      "description": "The pricing types for which this plan is designated",
      "enum": [
        "Free",
        "FreeTrial",
        "Byol",
        "Payg",
        "Ri"
      ],
      "x-ms-enum": {
        "name": "PricingType",
        "modelAsString": false,
        "values": [
          {
            "name": "Free",
            "value": "Free",
            "description": "Product has at least one plan that is free of charge"
          },
          {
            "name": "FreeTrial",
            "value": "FreeTrial",
            "description": "Product has at least one plan that is free trial"
          },
          {
            "name": "Byol",
            "value": "Byol",
            "description": "Product has at least one plan that is bring your own license"
          },
          {
            "name": "Payg",
            "value": "Payg",
            "description": "Product has at least one plan that is Pay as you go"
          },
          {
            "name": "Ri",
            "value": "Ri",
            "description": "Product has at least one plan that is Reserved Instance billing model"
          }
        ]
      }
    },
    "ProductSummary": {
      "type": "object",
      "description": "Returns a subset of Product attributes",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Product display name"
        },
        "popularity": {
          "type": "number",
          "format": "double",
          "description": "Popularity of the product"
        },
        "categoryIds": {
          "type": "array",
          "description": "Array of product categories",
          "items": {
            "type": "string"
          }
        },
        "industryIds": {
          "type": "array",
          "description": "List of industry IDs the item belongs to",
          "items": {
            "type": "string"
          }
        },
        "publisherId": {
          "type": "string",
          "description": "Publisher id"
        },
        "azureBenefit": {
          "$ref": "#/definitions/AzureBenefit",
          "description": "Eligibility for Azure consumption commitment benefit"
        },
        "badges": {
          "type": "array",
          "description": "The product badges",
          "items": {
            "$ref": "#/definitions/Badge"
          }
        },
        "publisherType": {
          "$ref": "#/definitions/PublisherType",
          "description": "Publisher type"
        },
        "publishingStage": {
          "$ref": "#/definitions/PublishingStage",
          "description": "Product publishing stage"
        },
        "uniqueProductId": {
          "type": "string",
          "description": "Unique product identifier"
        },
        "productType": {
          "$ref": "#/definitions/ProductType",
          "description": "The delivery method or deployment model"
        },
        "productSubType": {
          "type": "string",
          "description": "Product sub type"
        },
        "productFamily": {
          "type": "string",
          "description": "Product Family"
        },
        "operatingSystems": {
          "type": "array",
          "description": "Operating system info for this product",
          "items": {
            "type": "string"
          }
        },
        "pricingTypes": {
          "type": "array",
          "description": "The pricing types for this offer",
          "items": {
            "$ref": "#/definitions/PricingType"
          }
        },
        "publisherDisplayName": {
          "type": "string",
          "description": "Publisher display name"
        },
        "longSummary": {
          "type": "string",
          "description": "Product long summary"
        },
        "summary": {
          "type": "string",
          "description": "Product summary"
        },
        "linkedAddInsTypes": {
          "type": "object",
          "description": "Linked add-in types",
          "additionalProperties": {
            "type": "string"
          }
        },
        "smallIconUri": {
          "type": "string",
          "description": "URI to the small product icon"
        },
        "description": {
          "type": "string",
          "description": "The product description text"
        },
        "cspLegalTermsUri": {
          "type": "string",
          "description": "The legal terms of the product for the CSP"
        },
        "privacyPolicyUri": {
          "type": "string",
          "description": "The privacy policy of the product"
        },
        "ratingBuckets": {
          "type": "array",
          "description": "Rating buckets",
          "items": {
            "$ref": "#/definitions/RatingBucket"
          }
        },
        "ratingAverage": {
          "type": "number",
          "format": "double",
          "description": "Average rating for the offer"
        },
        "ratingCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of ratings for the offer"
        },
        "startingPrice": {
          "$ref": "#/definitions/MarketStartPrice",
          "description": "Retail price of the product's cheapest plan"
        },
        "plans": {
          "type": "array",
          "description": "Full set of plan/SKU attributes",
          "items": {
            "$ref": "#/definitions/PlanSummary"
          },
          "x-ms-identifiers": []
        },
        "supportedProducts": {
          "type": "array",
          "description": "Maps to the list of compatible products",
          "items": {
            "type": "string"
          }
        },
        "applicableProducts": {
          "type": "array",
          "description": "Product categories the offer belongs to",
          "items": {
            "type": "string"
          }
        },
        "lastModifiedDateTime": {
          "type": "string",
          "description": "Latest update date of the product"
        },
        "locations": {
          "type": "array",
          "description": "List of locations which are available on the SKUs",
          "items": {
            "type": "string"
          }
        },
        "serviceFamily": {
          "type": "string",
          "description": "The service family of the product, such as 'Compute'"
        },
        "service": {
          "type": "string",
          "description": "The service name of the product, such as 'Virtual Machines'"
        },
        "productId": {
          "type": "string",
          "description": "The unique id of the product"
        },
        "hasRIPlans": {
          "type": "boolean",
          "description": "Indication whether the product has plans with reservations"
        },
        "hasMarketplaceFootprint": {
          "type": "boolean",
          "description": "Indication if product has a representation in the marketplace"
        },
        "attributes": {
          "type": "array",
          "description": "Set of products attributes",
          "items": {
            "$ref": "#/definitions/Attribute"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "productType"
      ]
    },
    "ProductType": {
      "type": "string",
      "description": "Delivery method or deployment model",
      "enum": [
        "None",
        "DevService",
        "ManagedApplication",
        "VirtualMachine",
        "AzureApplication",
        "Container",
        "SaaS",
        "SolutionTemplate",
        "IotEdgeModules",
        "ManagedServices",
        "ContainerApps",
        "VisualStudioExtension",
        "DynamicsOps",
        "DynamicsCE",
        "DynamicsBC",
        "PowerBI",
        "ConsultingServices",
        "CosellOnly",
        "CoreVirtualMachine",
        "PowerBIVisuals",
        "Office365",
        "AADApps",
        "AzureServices",
        "AppService",
        "LogAnalytics",
        "MicrosoftProduct"
      ],
      "x-ms-enum": {
        "name": "ProductType",
        "modelAsString": false,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "Default value"
          },
          {
            "name": "DevService",
            "value": "DevService",
            "description": "Dev Service"
          },
          {
            "name": "ManagedApplication",
            "value": "ManagedApplication",
            "description": "Managed Application plan type"
          },
          {
            "name": "VirtualMachine",
            "value": "VirtualMachine",
            "description": "Virtual Machine"
          },
          {
            "name": "AzureApplication",
            "value": "AzureApplication",
            "description": "Azure Application"
          },
          {
            "name": "Container",
            "value": "Container",
            "description": "Container"
          },
          {
            "name": "SaaS",
            "value": "SaaS",
            "description": "Software as a Service"
          },
          {
            "name": "SolutionTemplate",
            "value": "SolutionTemplate",
            "description": "Solution Template"
          },
          {
            "name": "IotEdgeModules",
            "value": "IotEdgeModules",
            "description": "IoT Edge Module"
          },
          {
            "name": "ManagedServices",
            "value": "ManagedServices",
            "description": "Managed Service"
          },
          {
            "name": "ContainerApps",
            "value": "ContainerApps",
            "description": "Container App"
          },
          {
            "name": "VisualStudioExtension",
            "value": "VisualStudioExtension",
            "description": "Visual Studio Extension"
          },
          {
            "name": "DynamicsOps",
            "value": "DynamicsOps",
            "description": "Dynamics Operations"
          },
          {
            "name": "DynamicsCE",
            "value": "DynamicsCE",
            "description": "Dynamics CE"
          },
          {
            "name": "DynamicsBC",
            "value": "DynamicsBC",
            "description": "Dynamics Business Central"
          },
          {
            "name": "PowerBI",
            "value": "PowerBI",
            "description": "Power BI"
          },
          {
            "name": "ConsultingServices",
            "value": "ConsultingServices",
            "description": "Consulting Services"
          },
          {
            "name": "CosellOnly",
            "value": "CosellOnly",
            "description": "Co-sell Only"
          },
          {
            "name": "CoreVirtualMachine",
            "value": "CoreVirtualMachine",
            "description": "Core Virtual Machine"
          },
          {
            "name": "PowerBIVisuals",
            "value": "PowerBIVisuals",
            "description": "Power BI Visuals"
          },
          {
            "name": "Office365",
            "value": "Office365",
            "description": "Office 365"
          },
          {
            "name": "AADApps",
            "value": "AADApps",
            "description": "Azure Active Directory Applications"
          },
          {
            "name": "AzureServices",
            "value": "AzureServices",
            "description": "Azure Services"
          },
          {
            "name": "AppService",
            "value": "AppService",
            "description": "App Service"
          },
          {
            "name": "LogAnalytics",
            "value": "LogAnalytics",
            "description": "Log Analytics"
          },
          {
            "name": "MicrosoftProduct",
            "value": "MicrosoftProduct",
            "description": "Microsoft Product"
          }
        ]
      }
    },
    "PublisherType": {
      "type": "string",
      "description": "Publisher type",
      "enum": [
        "Microsoft",
        "ThirdParty"
      ],
      "x-ms-enum": {
        "name": "PublisherType",
        "modelAsString": false,
        "values": [
          {
            "name": "Microsoft",
            "value": "Microsoft",
            "description": "Product is published by Microsoft (1st party product)"
          },
          {
            "name": "ThirdParty",
            "value": "ThirdParty",
            "description": "Product is published by Third Party Vendor"
          }
        ]
      }
    },
    "PublishingStage": {
      "type": "string",
      "description": "Product publishing stage",
      "enum": [
        "Preview",
        "Public"
      ],
      "x-ms-enum": {
        "name": "PublishingStage",
        "modelAsString": false,
        "values": [
          {
            "name": "Preview",
            "value": "Preview",
            "description": "Product is available to restricted audience"
          },
          {
            "name": "Public",
            "value": "Public",
            "description": "Product is publicly available in the Marketplace"
          }
        ]
      }
    },
    "RatingBucket": {
      "type": "string",
      "description": "Rating Bucket",
      "enum": [
        "AboveOne",
        "AboveTwo",
        "AboveThree",
        "AboveFour"
      ],
      "x-ms-enum": {
        "name": "RatingBucket",
        "modelAsString": false,
        "values": [
          {
            "name": "AboveOne",
            "value": "AboveOne",
            "description": "Above one star rating"
          },
          {
            "name": "AboveTwo",
            "value": "AboveTwo",
            "description": "Above two stars rating"
          },
          {
            "name": "AboveThree",
            "value": "AboveThree",
            "description": "Above three stars rating"
          },
          {
            "name": "AboveFour",
            "value": "AboveFour",
            "description": "Above four stars rating"
          }
        ]
      }
    },
    "RelatedSku": {
      "type": "object",
      "description": "Related SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name"
        },
        "generation": {
          "type": "string",
          "description": "The generation"
        },
        "identity": {
          "type": "string",
          "description": "The identity"
        }
      }
    },
    "VmArchitectureType": {
      "type": "string",
      "description": "VM Architecture Type",
      "enum": [
        "X64Gen1",
        "X64Gen2",
        "Arm64"
      ],
      "x-ms-enum": {
        "name": "VmArchitectureType",
        "modelAsString": false,
        "values": [
          {
            "name": "X64Gen1",
            "value": "X64Gen1",
            "description": "The VM image architecture of the plan is X64 Generation1"
          },
          {
            "name": "X64Gen2",
            "value": "X64Gen2",
            "description": "The VM image architecture of the plan is X64 Generation2"
          },
          {
            "name": "Arm64",
            "value": "Arm64",
            "description": "The VM image architecture of the plan is Arm64"
          }
        ]
      }
    },
    "VmSecurityType": {
      "type": "string",
      "description": "VM security type",
      "enum": [
        "None",
        "Trusted",
        "Confidential"
      ],
      "x-ms-enum": {
        "name": "VmSecurityType",
        "modelAsString": false,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "Default value"
          },
          {
            "name": "Trusted",
            "value": "Trusted",
            "description": "Trusted Launch security"
          },
          {
            "name": "Confidential",
            "value": "Confidential",
            "description": "Confidential security"
          }
        ]
      }
    }
  },
  "parameters": {}
}
