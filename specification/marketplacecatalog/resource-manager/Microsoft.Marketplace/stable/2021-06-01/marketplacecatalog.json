{
  "swagger": "2.0",
  "info": {
    "version": "2021-06-01",
    "title": "Microsoft Marketplace Catalog Browse API",
    "description": "Microsoft Marketplace Catalog Browse API",
    "x-ms-code-generation-settings": {
      "name": "marketplacecatalogClient"
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/Providers/Microsoft.Marketplace/Locations/{location}/EdgeZones/{edgeZone}/offers": {
      "get": {
        "tags": [
          "ARM-Authenticated-Location-EdgeZones-Offers-Listing-By-Subscription"
        ],
        "summary": "Get a list of edge zone offers",
        "operationId": "EdgeZonesOffers_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/EdgeZoneParameter"
          },
          {
            "$ref": "#/parameters/OdataQueryOptionsParameter"
          },
          {
            "$ref": "#/parameters/LanguageParameter"
          },
          {
            "$ref": "#/parameters/MarketParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Returns a list of edge zone offers",
            "schema": {
              "$ref": "#/definitions/PageResultOfCatalogItem"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "In case request malformed",
            "schema": {
              "type": "string"
            }
          }
        },
        "x-ms-examples": {
          "EdgeZonesOffers_List": {
            "$ref": "./examples/EdgeZonesOffers_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/Providers/Microsoft.Marketplace/Locations/{location}/EdgeZones/{edgeZone}/products": {
      "get": {
        "tags": [
          "ARM-Authenticated-Location-EdgeZones-Products-Listing-By-Subscription"
        ],
        "summary": "Get a list of edge zone products",
        "operationId": "EdgeZonesProducts_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/EdgeZoneParameter"
          },
          {
            "$ref": "#/parameters/OdataQueryOptionsParameter"
          },
          {
            "$ref": "#/parameters/LanguageParameter"
          },
          {
            "$ref": "#/parameters/MarketParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Returns a list of edge zone products",
            "schema": {
              "$ref": "#/definitions/PageResultOfCatalogItem"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "In case request malformed",
            "schema": {
              "type": "string"
            }
          }
        },
        "x-ms-examples": {
          "EdgeZonesProducts_List": {
            "$ref": "./examples/EdgeZonesProducts_List.json"
          }
        }
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to use for the request."
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "type": "string",
      "x-ms-parameter-location": "method",
      "required": true,
      "description": "Subscription id of the caller"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "type": "string",
      "x-ms-parameter-location": "method",
      "required": true,
      "description": "Location of the edge zones"
    },
    "EdgeZoneParameter": {
      "name": "edgeZone",
      "in": "path",
      "type": "string",
      "x-ms-parameter-location": "method",
      "required": true,
      "description": "Required edge zone"
    },
    "OdataQueryOptionsParameter": {
      "name": "odataQueryOptions",
      "in": "query",
      "required": false,
      "schema": {
        "$ref": "#/definitions/ODataQueryOptionsOfCatalogItem"
      },
      "x-nullable": true,
      "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip."
    },
    "LanguageParameter": {
      "name": "language",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "The language of the free texts"
    },
    "MarketParameter": {
      "name": "market",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "The required market"
    }
  },
  "definitions": {
    "FuturePricesItem": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Plans": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/FuturePlan"
          }
        }
      }
    },
    "FuturePlan": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Id": {
          "type": "string",
          "x-nullable": true
        },
        "PlanId": {
          "type": "string",
          "x-nullable": true
        },
        "SkuId": {
          "type": "string",
          "x-nullable": true
        },
        "availabilities": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/FutureAvailabilityEntity"
          }
        }
      }
    },
    "FutureAvailabilityEntity": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "actions": {
          "type": "array",
          "description": "List of allowed actions",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "market": {
          "type": "string",
          "description": "Market for the availability collection",
          "x-nullable": true
        },
        "isPIRequired": {
          "type": "boolean",
          "description": "A value indicating whether a payment instrument is required"
        },
        "appId": {
          "type": "string",
          "description": "App id of the availability collection",
          "x-nullable": true
        },
        "planID": {
          "type": "string",
          "description": "Plan Id of the availability collection",
          "x-nullable": true
        },
        "meterId": {
          "type": "string",
          "description": "Applicable billing meter Id",
          "x-nullable": true
        },
        "meter": {
          "description": "Applicable billing meter information",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/Meter"
            }
          ]
        },
        "pricingAudience": {
          "description": "Pricing audience",
          "allOf": [
            {
              "$ref": "#/definitions/PricingAudience"
            }
          ]
        },
        "terms": {
          "type": "array",
          "description": "List of applicable terms",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/Term"
          }
        },
        "piFilter": {
          "description": "Applicable billing meter information",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/PIFilter"
            }
          ]
        },
        "isStopSell": {
          "type": "boolean",
          "description": "A value indicating whether it has been stopped from sell in a market"
        },
        "hasFreeTrials": {
          "type": "boolean",
          "description": "A value indicating whether it has free trials"
        },
        "assetBehaviors": {
          "type": "array",
          "description": "Asset behaviors",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "consumptionUnitType": {
          "type": "string",
          "description": "Consumption unit type",
          "x-nullable": true
        },
        "displayRank": {
          "type": "integer",
          "description": "Display rank",
          "format": "int32"
        },
        "partitionKey": {
          "type": "string",
          "x-nullable": true
        },
        "RemediationRequired": {
          "type": "boolean",
          "description": "A value indicating whether remediation is required to acquire availability"
        },
        "Remediations": {
          "type": "array",
          "description": "Remediation actions for acquiring availability if RemediationRequired is true",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/Remediation"
          }
        },
        "startDate": {
          "type": "integer",
          "description": "Availability effectiveness start date - in epoch minutes",
          "format": "int32",
          "x-nullable": true
        },
        "endDate": {
          "type": "integer",
          "description": "Availability effectiveness end date - in epoch minutes",
          "format": "int32",
          "x-nullable": true
        },
        "planAvailabilities": {
          "type": "array",
          "description": "Plan availabilities",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/AvailabilityEntity"
          }
        },
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "_ts": {
          "type": "integer",
          "format": "int64"
        },
        "CurrentAvailabilityId": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "Meter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "meterId": {
          "type": "string",
          "description": "Meter id",
          "x-nullable": true
        },
        "partNumber": {
          "type": "string",
          "description": "Compute part number",
          "x-nullable": true
        },
        "consumptionResourceId": {
          "type": "string",
          "description": "Consumption resource id",
          "x-nullable": true
        },
        "price": {
          "description": "Price for this meter",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/Price"
            }
          ]
        },
        "type": {
          "type": "string",
          "description": "Type for this meter",
          "x-nullable": true
        },
        "includedQuantityProperties": {
          "type": "array",
          "description": "Included quantity properties",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/IncludedQuantityProperty"
          }
        }
      }
    },
    "Price": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "currencyCode": {
          "type": "string",
          "description": "Currency code i.e. 'USD'",
          "x-nullable": true
        },
        "isPIRequired": {
          "type": "boolean",
          "description": "A value indicating whether a payment instrument is required"
        },
        "listPrice": {
          "type": "number",
          "description": "Retail price for the item",
          "format": "decimal"
        },
        "msrp": {
          "type": "number",
          "description": "Manufacturer's suggested retail price for the item",
          "format": "decimal"
        }
      }
    },
    "IncludedQuantityProperty": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "TermId": {
          "type": "string",
          "description": "Term id",
          "x-nullable": true
        },
        "Quantity": {
          "type": "string",
          "description": "Quantity",
          "x-nullable": true
        }
      }
    },
    "PricingAudience": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "None",
        "DirectCommercial",
        "PartnerCommercial",
        "Custom",
        "IndirectCommercial",
        "IndirectGov",
        "DirectChk",
        "DirectBlue",
        "DirectRock"
      ],
      "enum": [
        "None",
        "DirectCommercial",
        "PartnerCommercial",
        "Custom",
        "IndirectCommercial",
        "IndirectGov",
        "DirectChk",
        "DirectBlue",
        "DirectRock"
      ]
    },
    "Term": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "termDescriptionParameters": {
          "type": "array",
          "description": "Term description parameters",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/TermDescriptionParameter"
          }
        },
        "termId": {
          "type": "string",
          "description": "Term id",
          "x-nullable": true
        },
        "termUnits": {
          "type": "string",
          "description": "Term unit",
          "x-nullable": true
        },
        "prorationPolicy": {
          "description": "Proration policy",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ProrationPolicy"
            }
          ]
        },
        "termDescription": {
          "type": "string",
          "description": "Term description",
          "x-nullable": true
        },
        "price": {
          "description": "Price for the term",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/Price"
            }
          ]
        },
        "renewTermId": {
          "type": "string",
          "description": "Renew term id",
          "x-nullable": true
        },
        "renewTermUnits": {
          "type": "string",
          "description": "Renew term units",
          "x-nullable": true
        },
        "billingPlan": {
          "description": "Billing Plan",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/BillingPlan"
            }
          ]
        },
        "renewToTermBillingPlan": {
          "type": "string",
          "description": "Renew Billing Plan",
          "x-nullable": true
        }
      }
    },
    "TermDescriptionParameter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "parameter": {
          "type": "string",
          "description": "Parameter",
          "x-nullable": true
        },
        "value": {
          "type": "string",
          "description": "Value",
          "x-nullable": true
        }
      }
    },
    "ProrationPolicy": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "minimumProratedUnits": {
          "type": "string",
          "description": "Minimum prorated units",
          "x-nullable": true
        }
      }
    },
    "BillingPlan": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "billingPeriod": {
          "type": "string",
          "description": "Billing period",
          "x-nullable": true
        },
        "title": {
          "type": "string",
          "description": "Title",
          "x-nullable": true
        },
        "description": {
          "type": "string",
          "description": "Description",
          "x-nullable": true
        },
        "price": {
          "description": "Price",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/Price"
            }
          ]
        }
      }
    },
    "PIFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "exclusionProperties": {
          "type": "array",
          "description": "List of exclusion properties",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "inclusionProperties": {
          "type": "array",
          "description": "List of inclusion properties",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Remediation": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "RemediationId": {
          "type": "string",
          "description": "Remediation identifier",
          "x-nullable": true
        },
        "Type": {
          "type": "string",
          "description": "Remediation type",
          "x-nullable": true
        }
      }
    },
    "AvailabilityEntity": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "partitionKey": {
          "type": "string",
          "description": "Partition key",
          "x-nullable": true
        },
        "_ts": {
          "type": "integer",
          "format": "int64"
        },
        "actions": {
          "type": "array",
          "description": "List of allowed actions",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "market": {
          "type": "string",
          "description": "Market for the availability collection",
          "x-nullable": true
        },
        "isPIRequired": {
          "type": "boolean",
          "description": "A value indicating whether a payment instrument is required"
        },
        "appId": {
          "type": "string",
          "description": "App id of the availability collection",
          "x-nullable": true
        },
        "planID": {
          "type": "string",
          "description": "Plan Id of the availability collection",
          "x-nullable": true
        },
        "meterId": {
          "type": "string",
          "description": "Applicable billing meter Id",
          "x-nullable": true
        },
        "meter": {
          "description": "Applicable billing meter information",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/Meter"
            }
          ]
        },
        "pricingAudience": {
          "description": "Pricing audience",
          "allOf": [
            {
              "$ref": "#/definitions/PricingAudience"
            }
          ]
        },
        "terms": {
          "type": "array",
          "description": "List of applicable terms",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/Term"
          }
        },
        "piFilter": {
          "description": "Applicable billing meter information",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/PIFilter"
            }
          ]
        },
        "isStopSell": {
          "type": "boolean",
          "description": "A value indicating whether it has been stopped from sell in a market"
        },
        "hasFreeTrials": {
          "type": "boolean",
          "description": "A value indicating whether it has free trials"
        },
        "assetBehaviors": {
          "type": "array",
          "description": "Asset behaviors",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "consumptionUnitType": {
          "type": "string",
          "description": "Consumption unit type",
          "x-nullable": true
        },
        "displayRank": {
          "type": "integer",
          "description": "Display rank",
          "format": "int32"
        },
        "RemediationRequired": {
          "type": "boolean",
          "description": "A value indicating whether remediation is required to acquire availability"
        },
        "Remediations": {
          "type": "array",
          "description": "Remediation actions for acquiring availability if RemediationRequired is true",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/Remediation"
          }
        },
        "startDate": {
          "type": "integer",
          "description": "Availability effectiveness start date - in epoch minutes",
          "format": "int32",
          "x-nullable": true
        },
        "endDate": {
          "type": "integer",
          "description": "Availability effectiveness end date - in epoch minutes",
          "format": "int32",
          "x-nullable": true
        },
        "planAvailabilities": {
          "type": "array",
          "description": "Plan availabilities",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/AvailabilityEntity"
          }
        }
      }
    },
    "CreateResponseItem": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "version": {
          "type": "string",
          "x-nullable": true
        },
        "text": {
          "type": "string",
          "x-nullable": true
        },
        "icon": {
          "type": "string",
          "x-nullable": true
        },
        "learnLink": {
          "type": "string",
          "x-nullable": true
        },
        "galleryItemAccess": {
          "$ref": "#/definitions/GalleryItemAccess"
        },
        "friendlyText": {
          "type": "string",
          "x-nullable": true
        },
        "publisher": {
          "type": "string",
          "x-nullable": true
        },
        "offerType": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "GalleryItemAccess": {
      "type": "integer",
      "description": "0 = NotSet\n1 = Allowed\n2 = NotAllowed",
      "x-enumNames": [
        "NotSet",
        "Allowed",
        "NotAllowed"
      ],
      "enum": [
        0,
        1,
        2
      ]
    },
    "CreateResponseMenu": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "text": {
          "type": "string",
          "x-nullable": true
        },
        "items": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/CreateResponseItem"
          }
        }
      }
    },
    "CuratedCatalogItem": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "language",
        "offerId",
        "legacyId",
        "bigId"
      ],
      "properties": {
        "searchScore": {
          "type": "number",
          "description": "Gets or sets the search relevance score when it is linked to a search score",
          "format": "double",
          "x-nullable": true
        },
        "capabilities": {
          "type": "array",
          "description": "Office capabilities",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/OfficeCapabilityType"
          }
        },
        "language": {
          "type": "string",
          "description": "Language"
        },
        "displayName": {
          "type": "string",
          "description": "Display name",
          "x-nullable": true
        },
        "hasStandardContractAmendments": {
          "type": "boolean",
          "description": "A value indicating whether standard contract amendments are present for this product"
        },
        "publisherMpnId": {
          "type": "string",
          "description": "The publisher's Microsoft Partner Network (MPN) Id",
          "x-nullable": true
        },
        "sellerId": {
          "type": "string",
          "description": "Partner Center Seller Id",
          "x-nullable": true
        },
        "publisherId": {
          "type": "string",
          "description": "Publisher id",
          "x-nullable": true
        },
        "partnerCenterId": {
          "type": "string",
          "description": "Partner center id",
          "x-nullable": true
        },
        "publisherDisplayName": {
          "type": "string",
          "description": "Publisher display name",
          "x-nullable": true
        },
        "offerId": {
          "type": "string",
          "description": "Offer id"
        },
        "legacyId": {
          "type": "string",
          "description": "Offer legacy id"
        },
        "determinedStorefronts": {
          "type": "array",
          "description": "The list of the storefronts for which this offer is designated",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/Store"
          }
        },
        "standardContractAmendmentsRevisionId": {
          "type": "string",
          "description": "Standard contract amendments for this product",
          "format": "guid"
        },
        "universalAmendmentUrl": {
          "type": "string",
          "description": "The universal amendment link for an enterprise contract.",
          "x-nullable": true
        },
        "summary": {
          "type": "string",
          "description": "Summary",
          "x-nullable": true
        },
        "longSummary": {
          "type": "string",
          "description": "Long summary",
          "x-nullable": true
        },
        "description": {
          "type": "string",
          "description": "Description",
          "x-nullable": true
        },
        "offerType": {
          "description": "Offer type",
          "allOf": [
            {
              "$ref": "#/definitions/OfferType"
            }
          ]
        },
        "isPrivate": {
          "type": "boolean",
          "description": "A value indicating whether the item is private"
        },
        "isPreview": {
          "type": "boolean",
          "description": "A value indicating whether the item is preview"
        },
        "isStopSell": {
          "type": "boolean",
          "description": "A value indicating whether sale of this item is stopped"
        },
        "stopSellInfo": {
          "description": "A StopSellInfo object providing stop sell related data",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/StopSellInfo"
            }
          ]
        },
        "fulfillBeforeChargeEligible": {
          "type": "boolean",
          "description": "A value indicating whether this item is eligible for fulfill before charge"
        },
        "marketingMaterial": {
          "description": "Marketing material added by the publisher",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/MarketingMaterial"
            }
          ]
        },
        "Markets": {
          "type": "array",
          "description": "Markets for the item",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "IsvContactDetails": {
          "type": "object",
          "description": "ISV contact details",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "bigId": {
          "type": "string",
          "description": "Big catalog id"
        },
        "ocpSolutionId": {
          "type": "string",
          "description": "OCP solution id of the product",
          "x-nullable": true
        },
        "legalTermsUri": {
          "type": "string",
          "description": "Legal terms URI",
          "x-nullable": true
        },
        "cspLegalTermsUri": {
          "type": "string",
          "description": "CSP legal terms URI",
          "x-nullable": true
        },
        "legalTermsType": {
          "description": "Type of to the legal terms",
          "allOf": [
            {
              "$ref": "#/definitions/LegalTermsType"
            }
          ]
        },
        "privacyPolicyUri": {
          "type": "string",
          "description": "Uri to the privacy policy of the product",
          "x-nullable": true
        },
        "helpLink": {
          "type": "string",
          "description": "Help link for the product",
          "x-nullable": true
        },
        "supportUri": {
          "type": "string",
          "description": "Support uri of the product",
          "x-nullable": true
        },
        "version": {
          "type": "string",
          "description": "Big Cat submission version",
          "x-nullable": true
        },
        "uiDefinitionUri": {
          "type": "string",
          "description": "User interface definition uri",
          "x-nullable": true
        },
        "categoryIds": {
          "type": "array",
          "description": "List of category IDs the marketplace item belongs to",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "operatingSystems": {
          "type": "array",
          "description": "List of operating systems the marketplace item supports",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "marketCode": {
          "type": "string",
          "description": "Market code of a service offer",
          "x-nullable": true
        },
        "marketStates": {
          "type": "array",
          "description": "Market states of a service offer",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "industryIds": {
          "type": "array",
          "description": "List of industry IDs the item belongs to",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "PrimaryIndustry": {
          "type": "array",
          "description": "List of industry IDs the item belongs to",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "PrimaryCategories": {
          "type": "array",
          "description": "List of category IDs the item belongs to",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "cloudIndustryCategories": {
          "type": "array",
          "description": "List of cloud industry IDs the item belongs to",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "primaryProduct": {
          "type": "string",
          "description": "Primary product for the offer",
          "x-nullable": true
        },
        "supportedProducts": {
          "type": "array",
          "description": "It maps to the list of products the publisher provides with which their offer works",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "applicableProducts": {
          "type": "array",
          "description": "Product categories the offer belongs to",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "serviceType": {
          "type": "string",
          "description": "Service type that applies to the offer",
          "x-nullable": true
        },
        "competencies": {
          "type": "array",
          "description": "Competencies that apply to the offer",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/Competency"
          }
        },
        "hasPrices": {
          "type": "boolean",
          "description": "A value indicating whether the item has prices",
          "x-nullable": true
        },
        "duration": {
          "description": "The duration that applies to the item",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/Duration"
            }
          ]
        },
        "marketPricingDetails": {
          "type": "array",
          "description": "The pricing details of each market to the item",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/MarketPricingDetailsItem"
          }
        },
        "startingPrice": {
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/MarketStartPrice"
            }
          ]
        },
        "pricing": {
          "description": "The pricing that applies to the item",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/Pricing"
            }
          ]
        },
        "solutionAreas": {
          "type": "array",
          "description": "The states that apply to the item",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "screenshotUris": {
          "type": "array",
          "description": "List of screenshot image URIs provided for the item",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "links": {
          "type": "array",
          "description": "List of Links provided for the item",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/LinkProperties"
          }
        },
        "filters": {
          "type": "array",
          "description": "List of filters for the item",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/Filter"
          }
        },
        "iconFileUris": {
          "type": "object",
          "description": "Dictionary of icon image URIs by icon type",
          "x-nullable": true,
          "x-dictionaryKey": {
            "$ref": "#/definitions/IconKind"
          },
          "additionalProperties": {
            "type": "string"
          }
        },
        "artifacts": {
          "type": "array",
          "description": "List of artifacts",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/Artifact"
          }
        },
        "metadata": {
          "description": "Custom item metadata",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/OfferMetadata"
            }
          ]
        },
        "properties": {
          "type": "object",
          "description": "Dictionary of properties provided for the item",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "images": {
          "type": "array",
          "description": "List of Images",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/ImageGroup"
          }
        },
        "videos": {
          "type": "array",
          "description": "List of product videos",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/ProductVideo"
          }
        },
        "plans": {
          "type": "array",
          "description": "Plans available for the offer details",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/Plan"
          }
        },
        "resourceGroupName": {
          "type": "string",
          "description": "Resource group name the gallery item belongs to",
          "x-nullable": true
        },
        "definitionTemplates": {
          "description": "Definition templates",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/DefinitionTemplates"
            }
          ]
        },
        "additionalProperties": {
          "type": "object",
          "description": "Dictionary of additional properties provided for the item",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "restrictedAudience": {
          "description": "This fields supports setting explicit audience like subscription, tenant or user",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/RestrictedAudience"
            }
          ]
        },
        "isDeleted": {
          "type": "boolean",
          "description": "A value indicating is the marketplace item deleted"
        },
        "isThirdParty": {
          "type": "boolean",
          "description": "A value indicating whether the product is third party offer or not"
        },
        "groupId": {
          "type": "string",
          "description": "This value is used to merge different entities to a single item",
          "x-nullable": true
        },
        "hideKeys": {
          "type": "array",
          "description": "List of hide keys provided for the item",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "keywords": {
          "type": "array",
          "description": "List of keywords provided for the item",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "popularity": {
          "type": "number",
          "description": "Popularity of the product",
          "format": "double"
        },
        "pricingDetailsUri": {
          "type": "string",
          "description": "Pricing details uri of the product",
          "x-nullable": true
        },
        "hasFreeTrials": {
          "type": "boolean",
          "description": "A value indicating whether it has free trials"
        },
        "isByol": {
          "type": "boolean",
          "description": "A value indicating whether it has licensed plans"
        },
        "isMacc": {
          "type": "boolean",
          "description": "A value indicating whether it is MACC eligible"
        },
        "hasFreePlans": {
          "type": "boolean",
          "description": "A value indicating whether it has free plans"
        },
        "isQuantifiable": {
          "type": "boolean",
          "description": "A value indicating whether product is quantifiable"
        },
        "altStackReference": {
          "type": "string",
          "description": "Alternative stack reference",
          "x-nullable": true
        },
        "hasPaygPlans": {
          "type": "boolean",
          "description": "A value indicating whether an offer has a 'Pay As You Go' plan"
        },
        "isReseller": {
          "type": "boolean",
          "description": "A value indicating whether microsoft is acting as a reseller"
        },
        "ttl": {
          "type": "integer",
          "description": "Expiration policy in seconds",
          "format": "int32",
          "x-nullable": true
        },
        "isExcludedFromSearch": {
          "type": "boolean",
          "description": "A value indicating whether the offer should be excluded from search"
        },
        "applicableStoreFronts": {
          "description": "A value indicating which storefront this offer should surface on",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/StoreFrontOptions"
            }
          ]
        },
        "offerVersion": {
          "type": "string",
          "description": "Offer version specified by the publisher on publishing portal",
          "x-nullable": true
        },
        "isMicrosoftProduct": {
          "type": "boolean",
          "description": "A value indicating whether it is a microsoft product",
          "x-nullable": true
        },
        "productOwnershipSellingMotion": {
          "type": "string",
          "description": "Product ownership selling motion",
          "x-nullable": true
        },
        "documentLinks": {
          "type": "array",
          "description": "The list of document links provided for the item",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/LinkProperties"
          }
        },
        "offerEnvironment": {
          "description": "A value indicating offer's environment",
          "allOf": [
            {
              "$ref": "#/definitions/EnvironmentInfo"
            }
          ]
        },
        "linkedAddIns": {
          "type": "array",
          "description": "List of linked Add Ins provided for the item",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "linkedAddInsTypes": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "excludeFromBootstrap": {
          "type": "boolean",
          "description": "A value indicating whether the offer should not be re-ingest during bootstrap session"
        },
        "hydrationNotificationReceivedAt": {
          "type": "string",
          "description": "Notification creation time",
          "format": "date-time",
          "x-nullable": true
        },
        "bigCatLastModifiedDate": {
          "type": "string",
          "description": "Last modified date",
          "format": "date-time",
          "x-nullable": true
        },
        "disableSendEmailOnPurchase": {
          "type": "boolean",
          "description": "Indication to disable sending email on purchase"
        },
        "hideFromSaasBlade": {
          "type": "boolean",
          "description": "Indication to hide from SaaS blade"
        },
        "integratedWithMicrosoftGraphApi": {
          "type": "boolean",
          "description": "Indication if there is integrated with Microsoft graph API"
        },
        "multiTenantAadAppId": {
          "type": "string",
          "description": "Multi tenant AAD app id",
          "x-nullable": true
        },
        "licenseManagementType": {
          "type": "string",
          "description": "License management type",
          "x-nullable": true
        },
        "licenseModel": {
          "type": "string",
          "description": "License model",
          "x-nullable": true
        },
        "pbiServicePrincipalIds": {
          "type": "array",
          "description": "PBI service principals",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "isCoreVm": {
          "type": "boolean",
          "description": "Set to true only for offers of OfferType.VirtualMachine to indicate that it was originally of OfferType.CoreVirtualMachine",
          "x-nullable": true
        },
        "m365CertificationInfo": {
          "description": "M365 Certification info",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/M365CertificationInfo"
            }
          ]
        },
        "downloadLink": {
          "type": "string",
          "description": "Download link for offers of type OfferType.PowerBIVisuals",
          "x-nullable": true
        },
        "downloadSampleLink": {
          "type": "string",
          "description": "Download sample report link for offers of type OfferType.PowerBIVisuals",
          "x-nullable": true
        },
        "omexAssetId": {
          "type": "string",
          "description": "Asset ID for offers of type OfferType.PowerBIVisuals",
          "x-nullable": true
        },
        "mixProductId": {
          "type": "string",
          "description": "Product ID for offers of type OfferType.PowerBIVisuals",
          "x-nullable": true
        },
        "appFreeType": {
          "type": "string",
          "description": "Whether an offer has additional purchases required",
          "x-nullable": true
        },
        "storeFrontPricings": {
          "type": "object",
          "description": "storefront pricings parameters for AppSource and AMP",
          "x-nullable": true,
          "x-dictionaryKey": {
            "$ref": "#/definitions/Store"
          },
          "additionalProperties": {
            "$ref": "#/definitions/UIPricing"
          }
        },
        "hasRIPlans": {
          "type": "boolean",
          "description": "Has plans with reservations"
        },
        "enrichedData": {
          "description": "Enriched offer data",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/EnrichedData"
            }
          ]
        },
        "releaseDate": {
          "type": "string",
          "description": "release date",
          "format": "date-time",
          "x-nullable": true
        },
        "hideFromAdminPortal": {
          "type": "boolean",
          "description": "the flag is used in embedded views"
        },
        "awards": {
          "type": "array",
          "description": "the flag is used in embedded views",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "powerBIVisualId": {
          "type": "string",
          "description": "the ID is used to correlate to a Visual for PowerBI",
          "x-nullable": true
        },
        "pricingTypes": {
          "type": "array",
          "description": "The list of the pricing types for which this offer is designated",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/PricingType"
          }
        },
        "autoRunLaunchEvents": {
          "type": "array",
          "description": "A list of auto run launch events for office products",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "service": {
          "type": "string",
          "description": "BigCat Service",
          "x-nullable": true
        },
        "serviceId": {
          "type": "string",
          "description": "BigCat Service Id",
          "x-nullable": true
        },
        "productType": {
          "type": "string",
          "description": "BigCat Product Type",
          "x-nullable": true
        },
        "productFamily": {
          "type": "string",
          "description": "BigCat Product Family",
          "x-nullable": true
        },
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "partitionKey": {
          "type": "string",
          "x-nullable": true
        },
        "_ts": {
          "type": "integer",
          "format": "int64"
        },
        "ItemType": {
          "$ref": "#/definitions/CuratedCatalogItemType"
        },
        "IsAllowedByDefault": {
          "type": "boolean"
        },
        "IsFirstParty": {
          "type": "boolean"
        },
        "IsResellerOffer": {
          "type": "boolean"
        },
        "isAzureBenefitEligible": {
          "type": "boolean"
        },
        "vmSecurityType": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "vmImageType": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "vmGeneration": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "privateStores": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OfficeCapabilityType": {
      "type": "integer",
      "description": "1 = Capability1\n2 = Capability2\n3 = Capability3\n4 = Capability4\n5 = Capability5\n6 = Capability6\n7 = Capability7\n8 = Capability8\n9 = Capability9\n10 = Capability10\n11 = Capability11",
      "x-enumNames": [
        "Capability1",
        "Capability2",
        "Capability3",
        "Capability4",
        "Capability5",
        "Capability6",
        "Capability7",
        "Capability8",
        "Capability9",
        "Capability10",
        "Capability11"
      ],
      "enum": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11
      ]
    },
    "Store": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Appsource",
        "AMP",
        "Ibiza",
        "Cosell",
        "DakotaDownstream"
      ],
      "enum": [
        "Appsource",
        "AMP",
        "Ibiza",
        "Cosell",
        "DakotaDownstream"
      ]
    },
    "OfferType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "None",
        "DevService",
        "ManagedApplication",
        "VirtualMachine",
        "AzureApplication",
        "Container",
        "SaaS",
        "SolutionTemplate",
        "IotEdgeModules",
        "ManagedServices",
        "ContainerApps",
        "VisualStudioExtension",
        "DynamicsOps",
        "DynamicsCE",
        "DynamicsBC",
        "PowerBI",
        "ConsultingServices",
        "CosellOnly",
        "CoreVirtualMachine",
        "PowerBIVisuals",
        "Office365",
        "AADApps"
      ],
      "enum": [
        "None",
        "DevService",
        "ManagedApplication",
        "VirtualMachine",
        "AzureApplication",
        "Container",
        "SaaS",
        "SolutionTemplate",
        "IotEdgeModules",
        "ManagedServices",
        "ContainerApps",
        "VisualStudioExtension",
        "DynamicsOps",
        "DynamicsCE",
        "DynamicsBC",
        "PowerBI",
        "ConsultingServices",
        "CosellOnly",
        "CoreVirtualMachine",
        "PowerBIVisuals",
        "Office365",
        "AADApps"
      ]
    },
    "StopSellInfo": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "startDate": {
          "type": "string",
          "description": "A value indicating when the sale of this item is going to be stopped",
          "format": "date-time",
          "x-nullable": true
        },
        "reason": {
          "description": "A value indicating the reason for stopping to sell this item",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/StopSellReason"
            }
          ]
        },
        "alternativeOfferId": {
          "type": "string",
          "description": "A value indicating an ID of an alternative offer provided by the same publisher",
          "x-nullable": true
        },
        "alternativePlanId": {
          "type": "string",
          "description": "A value indicating an ID of an alternative plan of the same offer",
          "x-nullable": true
        }
      }
    },
    "StopSellReason": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "EndOfSupport",
        "SecurityIssue",
        "Other"
      ],
      "enum": [
        "EndOfSupport",
        "SecurityIssue",
        "Other"
      ]
    },
    "MarketingMaterial": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Path": {
          "type": "string",
          "description": "Path to the marketing site",
          "x-nullable": true
        },
        "LearnUri": {
          "type": "string",
          "description": "Path to the learn site",
          "x-nullable": true
        }
      }
    },
    "LegalTermsType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "None",
        "EA"
      ],
      "enum": [
        "None",
        "EA"
      ]
    },
    "Competency": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "competencyName": {
          "type": "string",
          "description": "Competency name",
          "x-nullable": true
        },
        "competencyLevel": {
          "type": "string",
          "description": "Competency level",
          "x-nullable": true
        }
      }
    },
    "Duration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "durationValue": {
          "type": "integer",
          "description": "Duration value",
          "format": "int64"
        },
        "durationUnit": {
          "description": "Duration unit",
          "allOf": [
            {
              "$ref": "#/definitions/ServiceDurationUnit"
            }
          ]
        }
      }
    },
    "ServiceDurationUnit": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Days",
        "Hours",
        "Weeks",
        "Months"
      ],
      "enum": [
        "Days",
        "Hours",
        "Weeks",
        "Months"
      ]
    },
    "MarketPricingDetailsItem": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "pricing": {
          "description": "Pricing that applies to the item",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/Pricing"
            }
          ]
        },
        "marketCode": {
          "type": "string",
          "description": "Market code of a service offer",
          "x-nullable": true
        },
        "marketStates": {
          "type": "array",
          "description": "Market states of a service offer",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Pricing": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "currencyCode": {
          "type": "string",
          "description": "Currency code",
          "x-nullable": true
        },
        "planPrices": {
          "type": "array",
          "description": "Plan prices",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/PlanPrice"
          }
        }
      }
    },
    "PlanPrice": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "planId": {
          "type": "string",
          "description": "Plan id",
          "x-nullable": true
        },
        "currencyDecorator": {
          "description": "Currency decorator",
          "allOf": [
            {
              "$ref": "#/definitions/CurrencyDecorator"
            }
          ]
        },
        "price": {
          "type": "number",
          "description": "Price of the item",
          "format": "double"
        }
      }
    },
    "CurrencyDecorator": {
      "type": "integer",
      "description": "0 = Fixed\n1 = Estimated",
      "x-enumNames": [
        "Fixed",
        "Estimated"
      ],
      "enum": [
        0,
        1
      ]
    },
    "MarketStartPrice": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "market",
        "currency"
      ],
      "properties": {
        "market": {
          "type": "string",
          "description": "The market."
        },
        "termUnits": {
          "type": "string",
          "description": "The terms pricing model units.",
          "x-nullable": true
        },
        "meterUnits": {
          "type": "string",
          "description": "The meters pricing model units.",
          "x-nullable": true
        },
        "minTermPrice": {
          "type": "number",
          "description": "Starting (minimal) terms price.",
          "format": "decimal",
          "x-nullable": true
        },
        "minMeterPrice": {
          "type": "number",
          "description": "Starting (minimal) meters price.",
          "format": "decimal",
          "x-nullable": true
        },
        "currency": {
          "type": "string",
          "description": "Currency for price."
        }
      }
    },
    "LinkProperties": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the link",
          "x-nullable": true
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the link",
          "x-nullable": true
        },
        "uri": {
          "type": "string",
          "description": "URI of the link",
          "x-nullable": true
        }
      }
    },
    "Filter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "description": "Filter type",
          "x-nullable": true
        },
        "value": {
          "type": "string",
          "description": "Filter value",
          "x-nullable": true
        }
      }
    },
    "IconKind": {
      "type": "integer",
      "description": "0 = Small\n1 = Medium\n2 = Large\n3 = Wide\n4 = Hero",
      "x-enumNames": [
        "Small",
        "Medium",
        "Large",
        "Wide",
        "Hero"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4
      ]
    },
    "Artifact": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "description": "Artifact name",
          "x-nullable": true
        },
        "uri": {
          "type": "string",
          "description": "Artifact uri",
          "x-nullable": true
        },
        "type": {
          "description": "Artifact type",
          "allOf": [
            {
              "$ref": "#/definitions/ArtifactType"
            }
          ]
        }
      }
    },
    "ArtifactType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Template",
        "Fragment",
        "Custom",
        "Metadata"
      ],
      "enum": [
        "Template",
        "Fragment",
        "Custom",
        "Metadata"
      ]
    },
    "OfferMetadata": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "leadGeneration": {
          "description": "Lead generation info",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/LeadGeneration"
            }
          ]
        },
        "testDrive": {
          "description": "Test Drive info",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/TestDrive"
            }
          ]
        }
      }
    },
    "LeadGeneration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "productId": {
          "type": "string",
          "description": "Product Id",
          "x-nullable": true
        },
        "leadGenEnabled": {
          "type": "boolean",
          "description": "An indicator if lead generation is enabled",
          "x-nullable": true
        }
      }
    },
    "TestDrive": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "description": {
          "type": "string",
          "description": "Description",
          "x-nullable": true
        },
        "userManual": {
          "type": "string",
          "description": "User manual",
          "x-nullable": true
        },
        "testDriveDuration": {
          "type": "string",
          "description": "Test Drive Duration",
          "x-nullable": true
        },
        "accessInformation": {
          "type": "string",
          "description": "Access Information",
          "x-nullable": true
        },
        "orchestrationType": {
          "type": "string",
          "description": "Orchestration Type",
          "x-nullable": true
        },
        "labId": {
          "type": "string",
          "description": "Lab identifier",
          "x-nullable": true
        },
        "demoId": {
          "type": "string",
          "description": "Demo identifier",
          "x-nullable": true
        },
        "video": {
          "description": "Walk-through video",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ProductVideo"
            }
          ]
        },
        "powerBiDashboardLink": {
          "type": "string",
          "description": "Power Bi dashboard link",
          "x-nullable": true
        }
      }
    },
    "ProductVideo": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "caption": {
          "type": "string",
          "description": "Caption",
          "x-nullable": true
        },
        "uri": {
          "type": "string",
          "description": "Video uri",
          "format": "uri",
          "x-nullable": true
        },
        "videoPurpose": {
          "type": "string",
          "description": "Video purpose",
          "x-nullable": true
        },
        "previewImage": {
          "description": "Preview image",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/PreviewImage"
            }
          ]
        }
      }
    },
    "PreviewImage": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "caption": {
          "type": "string",
          "description": "Caption",
          "x-nullable": true
        },
        "uri": {
          "type": "string",
          "description": "Image uri",
          "format": "uri",
          "x-nullable": true
        },
        "imagePurpose": {
          "type": "string",
          "description": "Image purpose",
          "x-nullable": true
        }
      }
    },
    "ImageGroup": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "context": {
          "type": "string",
          "description": "context",
          "x-nullable": true
        },
        "items": {
          "type": "array",
          "description": "List of images",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/Image"
          }
        }
      }
    },
    "Image": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "description": "Image id",
          "x-nullable": true
        },
        "uri": {
          "type": "string",
          "description": "Image uri",
          "x-nullable": true
        },
        "type": {
          "type": "string",
          "description": "Image type",
          "x-nullable": true
        }
      }
    },
    "Plan": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "description": "Plan id",
          "x-nullable": true
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the plan",
          "x-nullable": true
        },
        "summary": {
          "type": "string",
          "description": "Summary of the plan",
          "x-nullable": true
        },
        "description": {
          "type": "string",
          "description": "Description of the plan",
          "x-nullable": true
        },
        "restrictedAudience": {
          "description": "Restricted audience",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/RestrictedAudience"
            }
          ]
        },
        "skuId": {
          "type": "string",
          "description": "Sku id",
          "x-nullable": true
        },
        "planId": {
          "type": "string",
          "description": "Plan id",
          "x-nullable": true
        },
        "legacyPlanId": {
          "type": "string",
          "description": "Legacy plan Id which is obtained by combining Offer->LegacyId and PlanId with no separator in between",
          "x-nullable": true
        },
        "Keywords": {
          "type": "array",
          "description": "List of keywords",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "type": {
          "description": "Offer type",
          "allOf": [
            {
              "$ref": "#/definitions/OfferType"
            }
          ]
        },
        "leadGeneration": {
          "description": "Lead generation info",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/LeadGeneration"
            }
          ]
        },
        "testDrive": {
          "description": "Test Drive info",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/TestDrive"
            }
          ]
        },
        "availabilities": {
          "type": "array",
          "description": "List of availabilities for this plan",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/AvailabilityEntity"
          }
        },
        "categoryIds": {
          "type": "array",
          "description": "Category IDs for this plan",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "conversionPaths": {
          "type": "array",
          "description": "Conversion paths for this plan",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Metadata for this plan",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/OpenProperty"
            }
          ]
        },
        "operatingSystem": {
          "description": "Operating system info for this plan",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/OperatingSystem"
            }
          ]
        },
        "uiDefinitionUri": {
          "type": "string",
          "description": "What blade to open when someone wants to create a marketplace item",
          "x-nullable": true
        },
        "artifacts": {
          "type": "array",
          "description": "Files related to the marketplace item",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/Artifact"
          }
        },
        "version": {
          "type": "string",
          "description": "Version of the marketplace item",
          "x-nullable": true
        },
        "itemName": {
          "type": "string",
          "description": "Item name",
          "x-nullable": true
        },
        "isPrivate": {
          "type": "boolean",
          "description": "A value indicating whether the item is private"
        },
        "isHidden": {
          "type": "boolean",
          "description": "A value indicating whether the plan is hidden"
        },
        "hasFreeTrials": {
          "type": "boolean",
          "description": "A value indicating whether it has free trials"
        },
        "isByol": {
          "type": "boolean",
          "description": "A value indicating whether it has licensed plans"
        },
        "isFree": {
          "type": "boolean",
          "description": "A value indicating whether it has at least one free availability in any market"
        },
        "isPayg": {
          "type": "boolean",
          "description": "A value indicating whether the plan is 'Pay As You Go'"
        },
        "isStopSell": {
          "type": "boolean",
          "description": "A value indicating whether plan has been stopped from selling"
        },
        "stopSellInfo": {
          "description": "A StopSellInfo object providing stop sell related data",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/StopSellInfo"
            }
          ]
        },
        "altStackReference": {
          "type": "string",
          "description": "Alternative stack reference",
          "x-nullable": true
        },
        "stackType": {
          "type": "string",
          "description": "Stack type : Classic, Gen1, Gen2",
          "x-nullable": true
        },
        "altArchitectureReference": {
          "type": "string",
          "x-nullable": true
        },
        "architectureType": {
          "type": "string",
          "x-nullable": true
        },
        "cspState": {
          "description": "A value indicating whether the product is available for purchase through CSP channel",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/CSPState"
            }
          ]
        },
        "resourceProviderNamespace": {
          "type": "string",
          "description": "Resource Provider Namespace",
          "x-nullable": true
        },
        "resourceType": {
          "type": "string",
          "description": "Resource Provider type",
          "x-nullable": true
        },
        "minQuantity": {
          "type": "integer",
          "description": "Min quantity",
          "format": "int32",
          "x-nullable": true
        },
        "maxQuantity": {
          "type": "integer",
          "description": "Max quantity",
          "format": "int32",
          "x-nullable": true
        },
        "isQuantifiable": {
          "type": "boolean",
          "description": "A value indicating whether the plan is quantifiable"
        },
        "callToAction": {
          "type": "string",
          "description": "The action that can be performed on this plan, on the storefronts",
          "x-nullable": true
        },
        "redirectUrl": {
          "type": "string",
          "description": "URL to redirect the user to post the performed action on the storefronts",
          "x-nullable": true
        },
        "serviceIdentifier": {
          "type": "string",
          "description": "Service identifier",
          "x-nullable": true
        },
        "vmSecurityType": {
          "description": "VM security type",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/VmSecurityType"
            }
          ]
        },
        "displayRank": {
          "type": "string",
          "description": "Display rank",
          "x-nullable": true
        },
        "billingComponents": {
          "type": "array",
          "description": "Billing components",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/BillingComponent"
          }
        },
        "purchaseDurationDiscounts": {
          "type": "array",
          "description": "List of purchase duration discounts",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/PurchaseDurationDiscount"
          }
        },
        "upns": {
          "type": "array",
          "description": "List of user principal names(UPNs)",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/TermUpn"
          }
        },
        "hasRI": {
          "type": "boolean",
          "description": "A value indicating whether the plan supports reservations"
        },
        "isHiddenPrivateOffer": {
          "type": "boolean",
          "description": "A value indicating whether the plan is used as hidden private offer requiring a quote",
          "x-nullable": true
        },
        "certifications": {
          "type": "array",
          "description": "List of certifications",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/LinkProperties"
          }
        },
        "pricingTypes": {
          "type": "array",
          "description": "The list of the pricing types for which this plan is designated",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/PricingType"
          }
        }
      }
    },
    "RestrictedAudience": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "subscriptions": {
          "type": "array",
          "description": "Subscription based restricted audience",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "tenants": {
          "type": "array",
          "description": "Tenant based restricted audience",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "users": {
          "type": "array",
          "description": "User based restricted audience",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "description": "User groups restricted audience",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OpenProperty": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Properties": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {}
        }
      }
    },
    "OperatingSystem": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "family": {
          "type": "string",
          "description": "Operating system family",
          "x-nullable": true
        },
        "type": {
          "type": "string",
          "description": "Operating system type",
          "x-nullable": true
        },
        "name": {
          "type": "string",
          "description": "Operating system name",
          "x-nullable": true
        }
      }
    },
    "CSPState": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "OptIn",
        "OptOut",
        "Terminated",
        "SelectiveOptIn"
      ],
      "enum": [
        "OptIn",
        "OptOut",
        "Terminated",
        "SelectiveOptIn"
      ]
    },
    "VmSecurityType": {
      "type": "string",
      "description": "",
      "x-enumFlags": true,
      "x-enumNames": [
        "None",
        "Trusted",
        "Confidential"
      ],
      "enum": [
        "None",
        "Trusted",
        "Confidential"
      ]
    },
    "BillingComponent": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "billingTag": {
          "type": "string",
          "description": "Billing Tag",
          "x-nullable": true
        },
        "customMeterIds": {
          "type": "object",
          "description": "Custom Meter Ids",
          "x-nullable": true,
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "PurchaseDurationDiscount": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Duration": {
          "type": "string",
          "x-nullable": true
        },
        "DiscountPercentage": {
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "TermUpn": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "TermId": {
          "type": "string",
          "x-nullable": true
        },
        "Upn": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "PricingType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Free",
        "FreeTrial",
        "Byol",
        "Payg",
        "Ri"
      ],
      "enum": [
        "Free",
        "FreeTrial",
        "Byol",
        "Payg",
        "Ri"
      ]
    },
    "DefinitionTemplates": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "uiDefinitionFileUri": {
          "type": "string",
          "description": "UI definition file URI",
          "x-nullable": true
        },
        "defaultDeploymentTemplateId": {
          "type": "string",
          "description": "Default deployment template id",
          "x-nullable": true
        },
        "deploymentTemplateFileUris": {
          "type": "object",
          "description": "A dictionary containing the deployment template file IDs defined in the package manifest and corresponding URIs",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "deploymentFragmentFileUris": {
          "type": "object",
          "description": "a dictionary containing the deployment fragment file IDs defined in the package manifest and corresponding URIs",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "StoreFrontOptions": {
      "type": "integer",
      "description": "0 = None\n1 = Azure\n2 = AMP\n4 = AppSource\n8 = Any",
      "x-enumFlags": true,
      "x-enumNames": [
        "None",
        "Azure",
        "AMP",
        "AppSource",
        "Any"
      ],
      "enum": [
        0,
        1,
        2,
        4,
        8
      ]
    },
    "EnvironmentInfo": {
      "type": "integer",
      "description": "1 = DogFood\n2 = Canary\n3 = Production\n4 = FairFax\n5 = Unknown",
      "x-enumNames": [
        "DogFood",
        "Canary",
        "Production",
        "FairFax",
        "Unknown"
      ],
      "enum": [
        1,
        2,
        3,
        4,
        5
      ]
    },
    "M365CertificationInfo": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "m365CertificationType": {
          "description": "M365 Certification Type",
          "allOf": [
            {
              "$ref": "#/definitions/CertificationType"
            }
          ]
        },
        "m365CertificationDetailsUrl": {
          "type": "string",
          "description": "M365 Certification Url",
          "x-nullable": true
        },
        "m365CertificationId": {
          "type": "string",
          "description": "M365 Certification Id",
          "x-nullable": true
        }
      }
    },
    "CertificationType": {
      "type": "integer",
      "description": "0 = Undefined\n1 = None\n2 = SelfAttested\n3 = MicrosoftCertified",
      "x-enumNames": [
        "Undefined",
        "None",
        "SelfAttested",
        "MicrosoftCertified"
      ],
      "enum": [
        0,
        1,
        2,
        3
      ]
    },
    "UIPricing": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "pricingOptions": {
          "description": "A value indicating what pricing options are available on the application",
          "allOf": [
            {
              "$ref": "#/definitions/PricingOptions"
            }
          ]
        },
        "HasPrices": {
          "type": "boolean",
          "description": "Has prices",
          "x-nullable": true
        }
      }
    },
    "PricingOptions": {
      "type": "integer",
      "description": "0 = None\n1 = Free\n2 = FreeTrial\n4 = Paid\n8 = Byol",
      "x-enumFlags": true,
      "x-enumNames": [
        "None",
        "Free",
        "FreeTrial",
        "Paid",
        "Byol"
      ],
      "enum": [
        0,
        1,
        2,
        4,
        8
      ]
    },
    "EnrichedData": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "tags": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "popularity": {
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/PopularityEnrichedData"
            }
          ]
        },
        "rating": {
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/RatingEnrichedData"
            }
          ]
        },
        "isAzureBenefitEligible": {
          "type": "boolean"
        },
        "isSolutionMap": {
          "type": "boolean"
        }
      }
    },
    "PopularityEnrichedData": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "appSourceCs": {
          "type": "number",
          "format": "double"
        },
        "appSourceApps": {
          "type": "number",
          "format": "double"
        },
        "ampCs": {
          "type": "number",
          "format": "double"
        },
        "ampApps": {
          "type": "number",
          "format": "double"
        },
        "azurePortalApps": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "RatingEnrichedData": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "appSource": {
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/RatingSummary"
            }
          ]
        },
        "amp": {
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/RatingSummary"
            }
          ]
        },
        "azurePortal": {
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/RatingSummary"
            }
          ]
        },
        "g2": {
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/RatingSummary"
            }
          ]
        }
      }
    },
    "RatingSummary": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "totalRatings": {
          "type": "integer",
          "format": "int32"
        },
        "source": {
          "$ref": "#/definitions/ReviewSource"
        },
        "averageRating": {
          "type": "number",
          "format": "double"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "externalOfferReference": {
          "type": "string",
          "x-nullable": true
        },
        "starsDistribution": {
          "type": "object",
          "x-nullable": true,
          "x-dictionaryKey": {
            "$ref": "#/definitions/RatingStars"
          },
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        },
        "buckets": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ReviewSource": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "None",
        "AppSource",
        "Amp",
        "Ibiza",
        "G2",
        "Internal",
        "All"
      ],
      "enum": [
        "None",
        "AppSource",
        "Amp",
        "Ibiza",
        "G2",
        "Internal",
        "All"
      ]
    },
    "RatingStars": {
      "type": "integer",
      "description": "0 = None\n1 = One\n2 = Two\n3 = Three\n4 = Four\n5 = Five",
      "x-enumNames": [
        "None",
        "One",
        "Two",
        "Three",
        "Four",
        "Five"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ]
    },
    "CuratedCatalogItemType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Single",
        "Group"
      ],
      "enum": [
        "Single",
        "Group"
      ]
    },
    "ODataQueryOptionsOfCuratedCatalogItem": {
      "type": "object",
      "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
      "additionalProperties": false,
      "properties": {
        "Request": {
          "description": "Gets the request message associated with this instance.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/HttpRequest"
            }
          ]
        },
        "Context": {
          "description": "Gets the given ODataQueryContext\n            ",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ODataQueryContext"
            }
          ]
        },
        "RawValues": {
          "description": "Gets the raw string of all the OData query options",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ODataRawQueryOptions"
            }
          ]
        },
        "SelectExpand": {
          "description": "Gets the SelectExpandQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/SelectExpandQueryOption"
            }
          ]
        },
        "Apply": {
          "description": "Gets the ApplyQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ApplyQueryOption"
            }
          ]
        },
        "Filter": {
          "description": "Gets the FilterQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/FilterQueryOption"
            }
          ]
        },
        "OrderBy": {
          "description": "Gets the OrderByQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/OrderByQueryOption"
            }
          ]
        },
        "Skip": {
          "description": "Gets the SkipQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/SkipQueryOption"
            }
          ]
        },
        "SkipToken": {
          "description": "Gets the SkipTokenQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/SkipTokenQueryOption"
            }
          ]
        },
        "Top": {
          "description": "Gets the TopQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/TopQueryOption"
            }
          ]
        },
        "Count": {
          "description": "Gets the CountQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/CountQueryOption"
            }
          ]
        },
        "Validator": {
          "description": "Gets or sets the query validator.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ODataQueryValidator"
            }
          ]
        },
        "IfMatch": {
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ETagOfCuratedCatalogItem"
            }
          ]
        },
        "IfNoneMatch": {
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ETagOfCuratedCatalogItem"
            }
          ]
        }
      }
    },
    "HttpRequest": {
      "type": "object",
      "description": "Represents the incoming side of an individual HTTP request.",
      "additionalProperties": false,
      "properties": {
        "BodyReader": {
          "description": "Gets the request body PipeReader.",
          "allOf": [
            {
              "$ref": "#/definitions/PipeReader"
            }
          ]
        },
        "RouteValues": {
          "description": "Gets the collection of route values for this request.",
          "allOf": [
            {
              "$ref": "#/definitions/RouteValueDictionary"
            }
          ]
        }
      }
    },
    "PipeReader": {
      "type": "object",
      "description": "Defines a class that provides access to a read side of pipe.",
      "additionalProperties": false
    },
    "RouteValueDictionary": {
      "type": "object",
      "description": "An IDictionary`2 type for route values.",
      "additionalProperties": false,
      "properties": {
        "_arrayStorage": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValuePairOfStringAndObject"
          }
        },
        "_propertyStorage": {
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/PropertyStorage"
            }
          ]
        },
        "Item": {
          "x-nullable": true
        },
        "Comparer": {
          "description": "Gets the comparer for this dictionary.",
          "allOf": [
            {
              "$ref": "#/definitions/IEqualityComparerOfString"
            }
          ]
        },
        "Count": {
          "type": "integer",
          "format": "int32"
        },
        "Keys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Values": {
          "type": "array",
          "items": {
            "x-nullable": true
          }
        }
      }
    },
    "KeyValuePairOfStringAndObject": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Key": {
          "type": "string"
        },
        "Value": {}
      }
    },
    "PropertyStorage": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Value": {},
        "Properties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PropertyHelper"
          }
        }
      }
    },
    "PropertyHelper": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Property": {
          "description": "Gets the backing PropertyInfo.",
          "allOf": [
            {
              "$ref": "#/definitions/PropertyInfo"
            }
          ]
        },
        "Name": {
          "type": "string",
          "description": "Gets (or sets in derived types) the property name."
        },
        "ValueGetter": {
          "description": "Gets the property value getter.",
          "allOf": [
            {
              "$ref": "#/definitions/FuncOfObjectAndObject"
            }
          ]
        },
        "ValueSetter": {
          "description": "Gets the property value setter.",
          "allOf": [
            {
              "$ref": "#/definitions/ActionOfObjectAndObject"
            }
          ]
        }
      }
    },
    "PropertyInfo": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Module": {
          "$ref": "#/definitions/Module"
        },
        "CustomAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeData"
          }
        },
        "IsCollectible": {
          "type": "boolean"
        },
        "MetadataToken": {
          "type": "integer",
          "format": "int32"
        },
        "MemberType": {
          "$ref": "#/definitions/MemberTypes"
        },
        "IsSpecialName": {
          "type": "boolean"
        },
        "GetMethod": {
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/MethodInfo"
            }
          ]
        },
        "SetMethod": {
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/MethodInfo"
            }
          ]
        }
      }
    },
    "Module": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Assembly": {
          "$ref": "#/definitions/Assembly"
        },
        "FullyQualifiedName": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "MDStreamVersion": {
          "type": "integer",
          "format": "int32"
        },
        "ModuleVersionId": {
          "type": "string",
          "format": "guid"
        },
        "ScopeName": {
          "type": "string"
        },
        "ModuleHandle": {
          "$ref": "#/definitions/ModuleHandle"
        },
        "CustomAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeData"
          }
        },
        "MetadataToken": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Assembly": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DefinedTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ExportedTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CodeBase": {
          "type": "string",
          "x-nullable": true
        },
        "EntryPoint": {
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/MethodInfo"
            }
          ]
        },
        "FullName": {
          "type": "string",
          "x-nullable": true
        },
        "ImageRuntimeVersion": {
          "type": "string"
        },
        "IsDynamic": {
          "type": "boolean"
        },
        "Location": {
          "type": "string"
        },
        "ReflectionOnly": {
          "type": "boolean"
        },
        "IsCollectible": {
          "type": "boolean"
        },
        "IsFullyTrusted": {
          "type": "boolean"
        },
        "CustomAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeData"
          }
        },
        "EscapedCodeBase": {
          "type": "string"
        },
        "ManifestModule": {
          "$ref": "#/definitions/Module"
        },
        "Modules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Module"
          }
        },
        "GlobalAssemblyCache": {
          "type": "boolean",
          "deprecated": true,
          "x-deprecatedMessage": "The Global Assembly Cache is not supported."
        },
        "HostContext": {
          "type": "integer",
          "format": "int64"
        },
        "SecurityRuleSet": {
          "$ref": "#/definitions/SecurityRuleSet"
        }
      }
    },
    "MethodInfo": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "MethodImplementationFlags": {
          "$ref": "#/definitions/MethodImplAttributes"
        },
        "CallingConvention": {
          "$ref": "#/definitions/CallingConventions"
        },
        "IsAbstract": {
          "type": "boolean"
        },
        "IsConstructor": {
          "type": "boolean"
        },
        "IsFinal": {
          "type": "boolean"
        },
        "IsHideBySig": {
          "type": "boolean"
        },
        "IsSpecialName": {
          "type": "boolean"
        },
        "IsStatic": {
          "type": "boolean"
        },
        "IsVirtual": {
          "type": "boolean"
        },
        "IsAssembly": {
          "type": "boolean"
        },
        "IsFamily": {
          "type": "boolean"
        },
        "IsFamilyAndAssembly": {
          "type": "boolean"
        },
        "IsFamilyOrAssembly": {
          "type": "boolean"
        },
        "IsPrivate": {
          "type": "boolean"
        },
        "IsPublic": {
          "type": "boolean"
        },
        "IsConstructedGenericMethod": {
          "type": "boolean"
        },
        "IsGenericMethod": {
          "type": "boolean"
        },
        "IsGenericMethodDefinition": {
          "type": "boolean"
        },
        "ContainsGenericParameters": {
          "type": "boolean"
        },
        "IsSecurityCritical": {
          "type": "boolean"
        },
        "IsSecuritySafeCritical": {
          "type": "boolean"
        },
        "IsSecurityTransparent": {
          "type": "boolean"
        },
        "Module": {
          "$ref": "#/definitions/Module"
        },
        "CustomAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeData"
          }
        },
        "IsCollectible": {
          "type": "boolean"
        },
        "MetadataToken": {
          "type": "integer",
          "format": "int32"
        },
        "MemberType": {
          "$ref": "#/definitions/MemberTypes"
        },
        "ReturnParameter": {
          "$ref": "#/definitions/ParameterInfo"
        },
        "ReturnType": {
          "type": "string"
        }
      }
    },
    "MethodImplAttributes": {
      "type": "integer",
      "description": "0 = IL\n0 = Managed\n1 = Native\n2 = OPTIL\n3 = Runtime\n3 = CodeTypeMask\n4 = Unmanaged\n4 = ManagedMask\n8 = NoInlining\n16 = ForwardRef\n32 = Synchronized\n64 = NoOptimization\n128 = PreserveSig\n256 = AggressiveInlining\n512 = AggressiveOptimization\n4096 = InternalCall\n65535 = MaxMethodImplVal",
      "x-enumNames": [
        "IL",
        "Managed",
        "Native",
        "OPTIL",
        "Runtime",
        "CodeTypeMask",
        "Unmanaged",
        "ManagedMask",
        "NoInlining",
        "ForwardRef",
        "Synchronized",
        "NoOptimization",
        "PreserveSig",
        "AggressiveInlining",
        "AggressiveOptimization",
        "InternalCall",
        "MaxMethodImplVal"
      ],
      "enum": [
        0,
        0,
        1,
        2,
        3,
        3,
        4,
        4,
        8,
        16,
        32,
        64,
        128,
        256,
        512,
        4096,
        65535
      ]
    },
    "CallingConventions": {
      "type": "integer",
      "description": "1 = Standard\n2 = VarArgs\n3 = Any\n32 = HasThis\n64 = ExplicitThis",
      "x-enumFlags": true,
      "x-enumNames": [
        "Standard",
        "VarArgs",
        "Any",
        "HasThis",
        "ExplicitThis"
      ],
      "enum": [
        1,
        2,
        3,
        32,
        64
      ]
    },
    "CustomAttributeData": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "AttributeType": {
          "type": "string"
        },
        "Constructor": {
          "$ref": "#/definitions/ConstructorInfo"
        },
        "ConstructorArguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeTypedArgument"
          }
        },
        "NamedArguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeNamedArgument"
          }
        }
      }
    },
    "ConstructorInfo": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "MethodImplementationFlags": {
          "$ref": "#/definitions/MethodImplAttributes"
        },
        "CallingConvention": {
          "$ref": "#/definitions/CallingConventions"
        },
        "IsAbstract": {
          "type": "boolean"
        },
        "IsConstructor": {
          "type": "boolean"
        },
        "IsFinal": {
          "type": "boolean"
        },
        "IsHideBySig": {
          "type": "boolean"
        },
        "IsSpecialName": {
          "type": "boolean"
        },
        "IsStatic": {
          "type": "boolean"
        },
        "IsVirtual": {
          "type": "boolean"
        },
        "IsAssembly": {
          "type": "boolean"
        },
        "IsFamily": {
          "type": "boolean"
        },
        "IsFamilyAndAssembly": {
          "type": "boolean"
        },
        "IsFamilyOrAssembly": {
          "type": "boolean"
        },
        "IsPrivate": {
          "type": "boolean"
        },
        "IsPublic": {
          "type": "boolean"
        },
        "IsConstructedGenericMethod": {
          "type": "boolean"
        },
        "IsGenericMethod": {
          "type": "boolean"
        },
        "IsGenericMethodDefinition": {
          "type": "boolean"
        },
        "ContainsGenericParameters": {
          "type": "boolean"
        },
        "IsSecurityCritical": {
          "type": "boolean"
        },
        "IsSecuritySafeCritical": {
          "type": "boolean"
        },
        "IsSecurityTransparent": {
          "type": "boolean"
        },
        "Module": {
          "$ref": "#/definitions/Module"
        },
        "CustomAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeData"
          }
        },
        "IsCollectible": {
          "type": "boolean"
        },
        "MetadataToken": {
          "type": "integer",
          "format": "int32"
        },
        "MemberType": {
          "$ref": "#/definitions/MemberTypes"
        }
      }
    },
    "MemberTypes": {
      "type": "integer",
      "description": "1 = Constructor\n2 = Event\n4 = Field\n8 = Method\n16 = Property\n32 = TypeInfo\n64 = Custom\n128 = NestedType\n191 = All",
      "x-enumFlags": true,
      "x-enumNames": [
        "Constructor",
        "Event",
        "Field",
        "Method",
        "Property",
        "TypeInfo",
        "Custom",
        "NestedType",
        "All"
      ],
      "enum": [
        1,
        2,
        4,
        8,
        16,
        32,
        64,
        128,
        191
      ]
    },
    "CustomAttributeTypedArgument": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ArgumentType": {
          "type": "string"
        },
        "Value": {
          "x-nullable": true
        }
      }
    },
    "CustomAttributeNamedArgument": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "MemberInfo": {
          "$ref": "#/definitions/MemberInfo"
        },
        "TypedValue": {
          "$ref": "#/definitions/CustomAttributeTypedArgument"
        },
        "MemberName": {
          "type": "string"
        },
        "IsField": {
          "type": "boolean"
        }
      }
    },
    "MemberInfo": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Module": {
          "$ref": "#/definitions/Module"
        },
        "CustomAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeData"
          }
        },
        "IsCollectible": {
          "type": "boolean"
        },
        "MetadataToken": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ParameterInfo": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Attributes": {
          "$ref": "#/definitions/ParameterAttributes"
        },
        "Member": {
          "$ref": "#/definitions/MemberInfo"
        },
        "Name": {
          "type": "string",
          "x-nullable": true
        },
        "ParameterType": {
          "type": "string"
        },
        "Position": {
          "type": "integer",
          "format": "int32"
        },
        "IsIn": {
          "type": "boolean"
        },
        "IsLcid": {
          "type": "boolean"
        },
        "IsOptional": {
          "type": "boolean"
        },
        "IsOut": {
          "type": "boolean"
        },
        "IsRetval": {
          "type": "boolean"
        },
        "DefaultValue": {
          "x-nullable": true
        },
        "RawDefaultValue": {
          "x-nullable": true
        },
        "HasDefaultValue": {
          "type": "boolean"
        },
        "CustomAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeData"
          }
        },
        "MetadataToken": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ParameterAttributes": {
      "type": "integer",
      "description": "0 = None\n1 = In\n2 = Out\n4 = Lcid\n8 = Retval\n16 = Optional\n4096 = HasDefault\n8192 = HasFieldMarshal\n16384 = Reserved3\n32768 = Reserved4\n61440 = ReservedMask",
      "x-enumFlags": true,
      "x-enumNames": [
        "None",
        "In",
        "Out",
        "Lcid",
        "Retval",
        "Optional",
        "HasDefault",
        "HasFieldMarshal",
        "Reserved3",
        "Reserved4",
        "ReservedMask"
      ],
      "enum": [
        0,
        1,
        2,
        4,
        8,
        16,
        4096,
        8192,
        16384,
        32768,
        61440
      ]
    },
    "SecurityRuleSet": {
      "type": "integer",
      "description": "0 = None\n1 = Level1\n2 = Level2",
      "x-enumNames": [
        "None",
        "Level1",
        "Level2"
      ],
      "enum": [
        0,
        1,
        2
      ]
    },
    "ModuleHandle": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "MDStreamVersion": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "FuncOfObjectAndObject": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Target": {
          "x-nullable": true
        },
        "Method": {
          "$ref": "#/definitions/MethodInfo"
        }
      }
    },
    "ActionOfObjectAndObject": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Target": {
          "x-nullable": true
        },
        "Method": {
          "$ref": "#/definitions/MethodInfo"
        }
      }
    },
    "IEqualityComparerOfString": {
      "type": "object",
      "additionalProperties": false
    },
    "ODataQueryContext": {
      "type": "object",
      "description": "This defines some context information used to perform query composition.",
      "additionalProperties": false,
      "properties": {
        "DefaultQuerySettings": {
          "description": "Gets the given DefaultQuerySettings.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/DefaultQuerySettings"
            }
          ]
        },
        "Model": {
          "description": "Gets the given IEdmModel that contains the EntitySet.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/IEdmModel"
            }
          ]
        },
        "ElementType": {
          "description": "Gets the IEdmType of the element.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/IEdmType"
            }
          ]
        },
        "NavigationSource": {
          "description": "Gets the IEdmNavigationSource that contains the element.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/IEdmNavigationSource"
            }
          ]
        },
        "ElementClrType": {
          "type": "string",
          "description": "Gets the CLR type of the element.",
          "x-nullable": true
        },
        "Path": {
          "description": "Gets the ODataPath.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ODataPath"
            }
          ]
        },
        "RequestContainer": {
          "description": "Gets the request container.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/IServiceProvider"
            }
          ]
        }
      }
    },
    "DefaultQuerySettings": {
      "type": "object",
      "description": "This class describes the default settings to use during query composition.",
      "additionalProperties": false,
      "properties": {
        "EnableExpand": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether navigation property can be expanded."
        },
        "EnableSelect": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether property can be selected."
        },
        "EnableCount": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether entity set and property can apply $count."
        },
        "EnableOrderBy": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether property can apply $orderby."
        },
        "EnableFilter": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether property can apply $filter."
        },
        "MaxTop": {
          "type": "integer",
          "description": "Gets or sets the max value of $top that a client can request.",
          "format": "int32",
          "x-nullable": true
        },
        "EnableSkipToken": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the service will use skiptoken or not."
        }
      }
    },
    "IEdmModel": {
      "type": "object",
      "description": "Semantic representation of an EDM model.",
      "additionalProperties": false,
      "properties": {
        "SchemaElements": {
          "type": "array",
          "description": "Gets the collection of schema elements that are contained in this model.",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/IEdmSchemaElement"
          }
        },
        "VocabularyAnnotations": {
          "type": "array",
          "description": "Gets the collection of vocabulary annotations that are contained in this model.",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/IEdmVocabularyAnnotation"
          }
        },
        "ReferencedModels": {
          "type": "array",
          "description": "Gets the collection of models referred to by this model (mainly by the this.References).",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/IEdmModel"
          }
        },
        "DeclaredNamespaces": {
          "type": "array",
          "description": "Gets the collection of namespaces that schema elements use contained in this model.",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "DirectValueAnnotationsManager": {
          "description": "Gets the model's annotations manager.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/IEdmDirectValueAnnotationsManager"
            }
          ]
        },
        "EntityContainer": {
          "description": "Gets the only one entity container of the model.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/IEdmEntityContainer"
            }
          ]
        }
      }
    },
    "IEdmSchemaElement": {
      "type": "object",
      "description": "Common base interface for all named children of EDM schema.",
      "additionalProperties": false,
      "properties": {
        "SchemaElementKind": {
          "description": "Gets the kind of this schema element.",
          "allOf": [
            {
              "$ref": "#/definitions/EdmSchemaElementKind"
            }
          ]
        },
        "Namespace": {
          "type": "string",
          "description": "Gets the namespace this schema element belongs to.",
          "x-nullable": true
        }
      }
    },
    "EdmSchemaElementKind": {
      "type": "integer",
      "description": "Defines EDM schema element types.\n\n0 = None\n1 = TypeDefinition\n2 = Term\n3 = Action\n4 = EntityContainer\n5 = Function",
      "x-enumNames": [
        "None",
        "TypeDefinition",
        "Term",
        "Action",
        "EntityContainer",
        "Function"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ]
    },
    "IEdmVocabularyAnnotation": {
      "type": "object",
      "description": "Represents an EDM vocabulary annotation.",
      "additionalProperties": false,
      "properties": {
        "Qualifier": {
          "type": "string",
          "description": "Gets the qualifier used to discriminate between multiple bindings of the same property or type.",
          "x-nullable": true
        },
        "Term": {
          "description": "Gets the term bound by the annotation.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/IEdmTerm"
            }
          ]
        },
        "Target": {
          "description": "Gets the element the annotation applies to.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/IEdmVocabularyAnnotatable"
            }
          ]
        },
        "Value": {
          "description": "Gets the expression producing the value of the annotation.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/IEdmExpression"
            }
          ]
        }
      }
    },
    "IEdmTerm": {
      "type": "object",
      "description": "Represents an EDM term.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "description": "Gets the type of this term.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/IEdmTypeReference"
            }
          ]
        },
        "AppliesTo": {
          "type": "string",
          "description": "Gets the AppliesTo of this term.",
          "x-nullable": true
        },
        "DefaultValue": {
          "type": "string",
          "description": "Gets the DefaultValue of this term.",
          "x-nullable": true
        }
      }
    },
    "IEdmTypeReference": {
      "type": "object",
      "description": "Represents a references to a type.",
      "additionalProperties": false,
      "properties": {
        "IsNullable": {
          "type": "boolean",
          "description": "Gets a value indicating whether this type is nullable."
        },
        "Definition": {
          "description": "Gets the definition to which this type refers.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/IEdmType"
            }
          ]
        }
      }
    },
    "IEdmType": {
      "type": "object",
      "description": "Represents the definition of an EDM type.",
      "additionalProperties": false,
      "properties": {
        "TypeKind": {
          "description": "Gets the kind of this type.",
          "allOf": [
            {
              "$ref": "#/definitions/EdmTypeKind"
            }
          ]
        }
      }
    },
    "EdmTypeKind": {
      "type": "integer",
      "description": "Defines EDM metatypes.\n\n0 = None\n1 = Primitive\n2 = Entity\n3 = Complex\n4 = Collection\n5 = EntityReference\n6 = Enum\n7 = TypeDefinition\n8 = Untyped\n9 = Path",
      "x-enumNames": [
        "None",
        "Primitive",
        "Entity",
        "Complex",
        "Collection",
        "EntityReference",
        "Enum",
        "TypeDefinition",
        "Untyped",
        "Path"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ]
    },
    "IEdmVocabularyAnnotatable": {
      "type": "object",
      "description": "Represents an element that can be targeted by Vocabulary Annotations",
      "additionalProperties": false
    },
    "IEdmExpression": {
      "type": "object",
      "description": "Represents an EDM expression.",
      "additionalProperties": false,
      "properties": {
        "ExpressionKind": {
          "description": "Gets the kind of this expression.",
          "allOf": [
            {
              "$ref": "#/definitions/EdmExpressionKind"
            }
          ]
        }
      }
    },
    "EdmExpressionKind": {
      "type": "integer",
      "description": "Defines EDM expression kinds.\n\n0 = None\n1 = BinaryConstant\n2 = BooleanConstant\n3 = DateTimeOffsetConstant\n4 = DecimalConstant\n5 = FloatingConstant\n6 = GuidConstant\n7 = IntegerConstant\n8 = StringConstant\n9 = DurationConstant\n10 = Null\n11 = Record\n12 = Collection\n13 = Path\n14 = If\n15 = Cast\n16 = IsType\n17 = FunctionApplication\n18 = LabeledExpressionReference\n19 = Labeled\n20 = PropertyPath\n21 = NavigationPropertyPath\n22 = DateConstant\n23 = TimeOfDayConstant\n24 = EnumMember\n25 = AnnotationPath",
      "x-enumNames": [
        "None",
        "BinaryConstant",
        "BooleanConstant",
        "DateTimeOffsetConstant",
        "DecimalConstant",
        "FloatingConstant",
        "GuidConstant",
        "IntegerConstant",
        "StringConstant",
        "DurationConstant",
        "Null",
        "Record",
        "Collection",
        "Path",
        "If",
        "Cast",
        "IsType",
        "FunctionApplication",
        "LabeledExpressionReference",
        "Labeled",
        "PropertyPath",
        "NavigationPropertyPath",
        "DateConstant",
        "TimeOfDayConstant",
        "EnumMember",
        "AnnotationPath"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25
      ]
    },
    "IEdmDirectValueAnnotationsManager": {
      "type": "object",
      "description": "Manages getting and setting direct annotations on EDM elements.",
      "additionalProperties": false
    },
    "IEdmEntityContainer": {
      "type": "object",
      "description": "Represents an EDM entity container.",
      "additionalProperties": false,
      "properties": {
        "Elements": {
          "type": "array",
          "description": "Gets a collection of the elements of this entity container.",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/IEdmEntityContainerElement"
          }
        }
      }
    },
    "IEdmEntityContainerElement": {
      "type": "object",
      "description": "Represents the common elements of all EDM entity container elements.",
      "additionalProperties": false,
      "properties": {
        "ContainerElementKind": {
          "description": "Gets the kind of element of this container element.",
          "allOf": [
            {
              "$ref": "#/definitions/EdmContainerElementKind"
            }
          ]
        },
        "Container": {
          "description": "Gets the container that contains this element.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/IEdmEntityContainer"
            }
          ]
        }
      }
    },
    "EdmContainerElementKind": {
      "type": "integer",
      "description": "Defines EDM container element types.\n\n0 = None\n1 = EntitySet\n2 = ActionImport\n3 = FunctionImport\n4 = Singleton",
      "x-enumNames": [
        "None",
        "EntitySet",
        "ActionImport",
        "FunctionImport",
        "Singleton"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4
      ]
    },
    "IEdmNavigationSource": {
      "type": "object",
      "description": "Represents an EDM navigation source.",
      "additionalProperties": false,
      "properties": {
        "NavigationPropertyBindings": {
          "type": "array",
          "description": "Gets the navigation property bindings of this navigation source.",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/IEdmNavigationPropertyBinding"
          }
        },
        "Path": {
          "description": "Gets the path of this navigation source.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/IEdmPathExpression"
            }
          ]
        },
        "Type": {
          "description": "Gets the type of this navigation source.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/IEdmType"
            }
          ]
        }
      }
    },
    "IEdmNavigationPropertyBinding": {
      "type": "object",
      "description": "Represents a binding from an EDM navigation property to a navigation source.",
      "additionalProperties": false,
      "properties": {
        "NavigationProperty": {
          "description": "Gets the navigation property.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/IEdmNavigationProperty"
            }
          ]
        },
        "Target": {
          "description": "Gets the target navigation source.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/IEdmNavigationSource"
            }
          ]
        },
        "Path": {
          "description": "Get the path that a navigation property targets.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/IEdmPathExpression"
            }
          ]
        }
      }
    },
    "IEdmNavigationProperty": {
      "type": "object",
      "description": "Represents an EDM navigation property.",
      "additionalProperties": false,
      "properties": {
        "Partner": {
          "description": "Gets the partner of this navigation property.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/IEdmNavigationProperty"
            }
          ]
        },
        "OnDelete": {
          "description": "Gets the action to execute on the deletion of this end of a bidirectional association.",
          "allOf": [
            {
              "$ref": "#/definitions/EdmOnDeleteAction"
            }
          ]
        },
        "ContainsTarget": {
          "type": "boolean",
          "description": "Gets a value indicating whether the navigation target is contained inside the navigation source."
        },
        "ReferentialConstraint": {
          "description": "Gets the referential constraint for this navigation, returning null if this is the principal end or if there is no referential constraint.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/IEdmReferentialConstraint"
            }
          ]
        }
      }
    },
    "EdmOnDeleteAction": {
      "type": "integer",
      "description": "Enumerates the actions EDM can apply on deletes.\n\n0 = None\n1 = Cascade",
      "x-enumNames": [
        "None",
        "Cascade"
      ],
      "enum": [
        0,
        1
      ]
    },
    "IEdmReferentialConstraint": {
      "type": "object",
      "description": "Represents an EDM referential constraint on a navigation property.",
      "additionalProperties": false,
      "properties": {
        "PropertyPairs": {
          "type": "array",
          "description": "Gets the set of property pairs from the referential constraint. No particular ordering should be assumed.",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/EdmReferentialConstraintPropertyPair"
          }
        }
      }
    },
    "EdmReferentialConstraintPropertyPair": {
      "type": "object",
      "description": "Represents a pair of properties as part of a referential constraint.",
      "additionalProperties": false,
      "properties": {
        "DependentProperty": {
          "description": "The local or dependent property in the referential constraint property pair. Will never be null.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/IEdmStructuralProperty"
            }
          ]
        },
        "PrincipalProperty": {
          "description": "The foreign or principal property in the referential constraint property pair. Will never be null.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/IEdmStructuralProperty"
            }
          ]
        }
      }
    },
    "IEdmStructuralProperty": {
      "type": "object",
      "description": "Represents an EDM structural (i.e. non-navigation) property.",
      "additionalProperties": false,
      "properties": {
        "DefaultValueString": {
          "type": "string",
          "description": "Gets the default value of this property.",
          "x-nullable": true
        }
      }
    },
    "IEdmPathExpression": {
      "type": "object",
      "description": "Represents an EDM path expression.",
      "additionalProperties": false,
      "properties": {
        "PathSegments": {
          "type": "array",
          "description": "Gets the path segments as a decomposed qualified name. \"A.B/C/D.E\" is { \"A.B\", \"C\", \"D.E\" }.",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "Path": {
          "type": "string",
          "description": "Gets the path string, like \"A.B/C/D.E\".",
          "x-nullable": true
        }
      }
    },
    "ODataPath": {
      "type": "object",
      "description": "Provides an object representation for an OData path with additional information about the EDM type and entity set for the path.",
      "additionalProperties": false,
      "properties": {
        "EdmType": {
          "description": "Gets the EDM type of the path.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/IEdmType"
            }
          ]
        },
        "NavigationSource": {
          "description": "Gets the navigation source of the path.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/IEdmNavigationSource"
            }
          ]
        },
        "Segments": {
          "type": "array",
          "description": "Gets the path segments for the OData path.",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/ODataPathSegment"
          }
        },
        "PathTemplate": {
          "type": "string",
          "description": "Gets the path template describing the types of segments in the path.",
          "x-nullable": true
        },
        "Path": {
          "type": "array",
          "description": "Gets the ODL path.",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/ODataPathSegment"
          }
        }
      }
    },
    "ODataPathSegment": {
      "type": "object",
      "description": "The semantic representation of a segment in a path.",
      "additionalProperties": false,
      "properties": {
        "Identifier": {
          "type": "string",
          "description": "Returns the identifier for this segment i.e. string part without the keys.",
          "x-nullable": true
        }
      }
    },
    "IServiceProvider": {
      "type": "object",
      "description": "Defines a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.",
      "additionalProperties": false
    },
    "ODataRawQueryOptions": {
      "type": "object",
      "description": "Represents the raw query values in the string format from the incoming request.",
      "additionalProperties": false,
      "properties": {
        "Filter": {
          "type": "string",
          "description": "Gets the raw $filter query value from the incoming request Uri if exists.\n            ",
          "x-nullable": true
        },
        "Apply": {
          "type": "string",
          "description": "Gets the raw $apply query value from the incoming request Uri if exists.\n            ",
          "x-nullable": true
        },
        "OrderBy": {
          "type": "string",
          "description": "Gets the raw $orderby query value from the incoming request Uri if exists.\n            ",
          "x-nullable": true
        },
        "Top": {
          "type": "string",
          "description": "Gets the raw $top query value from the incoming request Uri if exists.\n            ",
          "x-nullable": true
        },
        "Skip": {
          "type": "string",
          "description": "Gets the raw $skip query value from the incoming request Uri if exists.\n            ",
          "x-nullable": true
        },
        "Select": {
          "type": "string",
          "description": "Gets the raw $select query value from the incoming request Uri if exists.\n            ",
          "x-nullable": true
        },
        "Expand": {
          "type": "string",
          "description": "Gets the raw $expand query value from the incoming request Uri if exists.\n            ",
          "x-nullable": true
        },
        "Count": {
          "type": "string",
          "description": "Gets the raw $count query value from the incoming request Uri if exists.\n            ",
          "x-nullable": true
        },
        "Format": {
          "type": "string",
          "description": "Gets the raw $format query value from the incoming request Uri if exists.\n            ",
          "x-nullable": true
        },
        "SkipToken": {
          "type": "string",
          "description": "Gets the raw $skiptoken query value from the incoming request Uri if exists.\n            ",
          "x-nullable": true
        },
        "DeltaToken": {
          "type": "string",
          "description": "Gets the raw $deltatoken query value from the incoming request Uri if exists.\n            ",
          "x-nullable": true
        }
      }
    },
    "SelectExpandQueryOption": {
      "type": "object",
      "description": "Represents the OData $select and $expand query options.",
      "additionalProperties": false,
      "properties": {
        "Context": {
          "description": "Gets the given ODataQueryContext.\n            ",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ODataQueryContext"
            }
          ]
        },
        "RawSelect": {
          "type": "string",
          "description": "Gets the raw $select value.",
          "x-nullable": true
        },
        "RawExpand": {
          "type": "string",
          "description": "Gets the raw $expand value.",
          "x-nullable": true
        },
        "Validator": {
          "description": "Gets or sets the $select and $expand query validator.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/SelectExpandQueryValidator"
            }
          ]
        },
        "SelectExpandClause": {
          "description": "Gets the parsed SelectExpandClause for this query option.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/SelectExpandClause"
            }
          ]
        },
        "LevelsMaxLiteralExpansionDepth": {
          "type": "integer",
          "description": "Gets or sets the number of levels that a top level $expand=NavigationProperty($levels=max)\nwill be expanded.\nThis value will decrease by one with each nesting level in the $expand clause.\nFor example, with a property value 5, the following query $expand=A($expand=B($expand=C($levels=max)))\nwill be interpreted as $expand=A($expand=B($expand=C($levels=3))).\nIf the query gets validated, the MaxExpansionDepth value\nmust be greater than or equal to this value.",
          "format": "int32"
        }
      }
    },
    "SelectExpandQueryValidator": {
      "type": "object",
      "description": "Represents a validator used to validate a SelectExpandQueryOption based on the ODataValidationSettings.",
      "additionalProperties": false
    },
    "SelectExpandClause": {
      "type": "object",
      "description": "Class representing the combined semantic meaning of any select or expand clauses in the uri.",
      "additionalProperties": false,
      "properties": {
        "SelectedItems": {
          "type": "array",
          "description": "Gets the selected properties and operations.",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/SelectItem"
          }
        },
        "AllSelected": {
          "type": "boolean",
          "description": "Gets a flag indicating that everything at this level has been selected."
        }
      }
    },
    "SelectItem": {
      "type": "object",
      "description": "An item that has been selected by the query at the current level of the tree.",
      "additionalProperties": false
    },
    "ApplyQueryOption": {
      "type": "object",
      "description": "This defines a $apply OData query option for querying.",
      "additionalProperties": false,
      "properties": {
        "Context": {
          "description": "Gets the given ODataQueryContext.\n            ",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ODataQueryContext"
            }
          ]
        },
        "ResultClrType": {
          "type": "string",
          "description": "ClrType for result of transformations",
          "x-nullable": true
        },
        "ApplyClause": {
          "description": "Gets the parsed ApplyClause for this query option.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ApplyClause"
            }
          ]
        },
        "RawValue": {
          "type": "string",
          "description": "Gets the raw $apply value.\n            ",
          "x-nullable": true
        }
      }
    },
    "ApplyClause": {
      "type": "object",
      "description": "Represents the set of transformations to perform as part of $apply.",
      "additionalProperties": false,
      "properties": {
        "Transformations": {
          "type": "array",
          "description": "The collection of transformations to perform.",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/TransformationNode"
          }
        }
      }
    },
    "TransformationNode": {
      "type": "object",
      "description": "Base class for all transformation nodes.",
      "additionalProperties": false
    },
    "FilterQueryOption": {
      "type": "object",
      "description": "This defines a $filter OData query option for querying.",
      "additionalProperties": false,
      "properties": {
        "Context": {
          "description": "Gets the given ODataQueryContext.\n            ",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ODataQueryContext"
            }
          ]
        },
        "Validator": {
          "description": "Gets or sets the Filter Query Validator",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/FilterQueryValidator"
            }
          ]
        },
        "FilterClause": {
          "description": "Gets the parsed FilterClause for this query option.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/FilterClause"
            }
          ]
        },
        "RawValue": {
          "type": "string",
          "description": "Gets the raw $filter value.\n            ",
          "x-nullable": true
        }
      }
    },
    "FilterQueryValidator": {
      "type": "object",
      "description": "Represents a validator used to validate a FilterQueryOption based on the ODataValidationSettings.",
      "additionalProperties": false
    },
    "FilterClause": {
      "type": "object",
      "description": "The result of parsing a $filter query option.",
      "additionalProperties": false,
      "properties": {
        "Expression": {
          "description": "Gets the filter expression - this should evaluate to a single boolean value.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/SingleValueNode"
            }
          ]
        },
        "RangeVariable": {
          "description": "Gets the parameter for the expression which represents a single value from the collection.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/RangeVariable"
            }
          ]
        },
        "ItemType": {
          "description": "Gets the type of item returned by this clause.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/IEdmTypeReference"
            }
          ]
        }
      }
    },
    "SingleValueNode": {
      "type": "object",
      "description": "Base class for all semantic metadata bound nodes which represent a single composable value.",
      "additionalProperties": false,
      "properties": {
        "Kind": {
          "description": "Gets the kind of this node.",
          "allOf": [
            {
              "$ref": "#/definitions/QueryNodeKind"
            }
          ]
        }
      }
    },
    "QueryNodeKind": {
      "type": "integer",
      "description": "Public enumeration of kinds of query nodes. A subset of InternalQueryNodeKind\n\n0 = None\n1 = Constant\n2 = Convert\n3 = NonResourceRangeVariableReference\n4 = BinaryOperator\n5 = UnaryOperator\n6 = SingleValuePropertyAccess\n7 = CollectionPropertyAccess\n8 = SingleValueFunctionCall\n9 = Any\n10 = CollectionNavigationNode\n11 = SingleNavigationNode\n12 = SingleValueOpenPropertyAccess\n13 = SingleResourceCast\n14 = All\n15 = CollectionResourceCast\n16 = ResourceRangeVariableReference\n17 = SingleResourceFunctionCall\n18 = CollectionFunctionCall\n19 = CollectionResourceFunctionCall\n20 = NamedFunctionParameter\n21 = ParameterAlias\n22 = EntitySet\n23 = KeyLookup\n24 = SearchTerm\n25 = CollectionOpenPropertyAccess\n26 = CollectionComplexNode\n27 = SingleComplexNode\n28 = Count\n29 = SingleValueCast\n30 = CollectionPropertyNode\n31 = AggregatedCollectionPropertyNode\n32 = In\n33 = CollectionConstant",
      "x-enumNames": [
        "None",
        "Constant",
        "Convert",
        "NonResourceRangeVariableReference",
        "BinaryOperator",
        "UnaryOperator",
        "SingleValuePropertyAccess",
        "CollectionPropertyAccess",
        "SingleValueFunctionCall",
        "Any",
        "CollectionNavigationNode",
        "SingleNavigationNode",
        "SingleValueOpenPropertyAccess",
        "SingleResourceCast",
        "All",
        "CollectionResourceCast",
        "ResourceRangeVariableReference",
        "SingleResourceFunctionCall",
        "CollectionFunctionCall",
        "CollectionResourceFunctionCall",
        "NamedFunctionParameter",
        "ParameterAlias",
        "EntitySet",
        "KeyLookup",
        "SearchTerm",
        "CollectionOpenPropertyAccess",
        "CollectionComplexNode",
        "SingleComplexNode",
        "Count",
        "SingleValueCast",
        "CollectionPropertyNode",
        "AggregatedCollectionPropertyNode",
        "In",
        "CollectionConstant"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33
      ]
    },
    "RangeVariable": {
      "type": "object",
      "description": "A RangeVariable, which represents an iterator variable either over a collection, either of entities or not.\nExists outside of the main SemanticAST, but hooked in via a RangeVariableReferenceNode (either Non-Entity or Entity).",
      "additionalProperties": false
    },
    "OrderByQueryOption": {
      "type": "object",
      "description": "This defines a $orderby OData query option for querying.",
      "additionalProperties": false,
      "properties": {
        "Context": {
          "description": "Gets the given ODataQueryContext.\n            ",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ODataQueryContext"
            }
          ]
        },
        "OrderByNodes": {
          "type": "array",
          "description": "Gets the mutable list of OrderByPropertyNode instances for this query option.",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/OrderByNode"
          }
        },
        "RawValue": {
          "type": "string",
          "description": "Gets the raw $orderby value.\n            ",
          "x-nullable": true
        },
        "Validator": {
          "description": "Gets or sets the OrderBy Query Validator.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/OrderByQueryValidator"
            }
          ]
        },
        "OrderByClause": {
          "description": "Gets the parsed OrderByClause for this query option.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/OrderByClause"
            }
          ]
        }
      }
    },
    "OrderByNode": {
      "type": "object",
      "description": "Represents a single order by expression in the $orderby clause.",
      "additionalProperties": false,
      "properties": {
        "Direction": {
          "description": "Gets the OrderByDirection for the current node.",
          "allOf": [
            {
              "$ref": "#/definitions/OrderByDirection"
            }
          ]
        }
      }
    },
    "OrderByDirection": {
      "type": "integer",
      "description": "Enumeration of order by directions.\n\n0 = Ascending\n1 = Descending",
      "x-enumNames": [
        "Ascending",
        "Descending"
      ],
      "enum": [
        0,
        1
      ]
    },
    "OrderByQueryValidator": {
      "type": "object",
      "description": "Represents a validator used to validate an OrderByQueryOption based on the ODataValidationSettings.",
      "additionalProperties": false
    },
    "OrderByClause": {
      "type": "object",
      "description": "Represents the result of parsing the $orderby query option.",
      "additionalProperties": false,
      "properties": {
        "ThenBy": {
          "description": "Gets the next orderby to perform after performing this orderby, can be null in the case of only a single orderby expression.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/OrderByClause"
            }
          ]
        },
        "Expression": {
          "description": "Gets the order-by expression.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/SingleValueNode"
            }
          ]
        },
        "Direction": {
          "description": "Gets the direction to order.",
          "allOf": [
            {
              "$ref": "#/definitions/OrderByDirection"
            }
          ]
        },
        "RangeVariable": {
          "description": "Gets the rangeVariable for the expression which represents a single value from the collection we iterate over.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/RangeVariable"
            }
          ]
        },
        "ItemType": {
          "description": "Gets the type of a single item from the collection returned after ordering.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/IEdmTypeReference"
            }
          ]
        }
      }
    },
    "SkipQueryOption": {
      "type": "object",
      "description": "This defines a $skip OData query option for querying.",
      "additionalProperties": false,
      "properties": {
        "Context": {
          "description": "Gets the given ODataQueryContext.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ODataQueryContext"
            }
          ]
        },
        "RawValue": {
          "type": "string",
          "description": "Gets the raw $skip value.",
          "x-nullable": true
        },
        "Value": {
          "type": "integer",
          "description": "Gets the value of the $skip as a parsed integer.",
          "format": "int32"
        },
        "Validator": {
          "description": "Gets or sets the Skip Query Validator.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/SkipQueryValidator"
            }
          ]
        }
      }
    },
    "SkipQueryValidator": {
      "type": "object",
      "description": "Represents a validator used to validate a SkipQueryOption based on the ODataValidationSettings.",
      "additionalProperties": false
    },
    "SkipTokenQueryOption": {
      "type": "object",
      "description": "This defines a $skiptoken OData query option for querying.",
      "additionalProperties": false,
      "properties": {
        "RawValue": {
          "type": "string",
          "description": "Gets the raw $skiptoken value.",
          "x-nullable": true
        },
        "Context": {
          "description": "Gets and sets the given ODataQueryContext.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ODataQueryContext"
            }
          ]
        },
        "Validator": {
          "description": "Gets or sets the SkipToken Query Validator.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/SkipTokenQueryValidator"
            }
          ]
        },
        "QuerySettings": {
          "description": "Gets or sets the query setting ",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ODataQuerySettings"
            }
          ]
        },
        "QueryOptions": {
          "description": "Gets or sets the QueryOptions",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ODataQueryOptions"
            }
          ]
        }
      }
    },
    "SkipTokenQueryValidator": {
      "type": "object",
      "description": "Represents a validator used to validate a SkipTokenQueryOption based on the ODataValidationSettings.",
      "additionalProperties": false
    },
    "ODataQuerySettings": {
      "type": "object",
      "description": "This class describes the settings to use during query composition.",
      "additionalProperties": false,
      "properties": {
        "EnsureStableOrdering": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether query composition should\nalter the original query when necessary to ensure a stable sort order."
        },
        "HandleNullPropagation": {
          "description": "Gets or sets a value indicating how null propagation should\nbe handled during query composition.",
          "allOf": [
            {
              "$ref": "#/definitions/HandleNullPropagationOption"
            }
          ]
        },
        "EnableConstantParameterization": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether constants should be parameterized. Parameterizing constants\nwould result in better performance with Entity framework."
        },
        "EnableCorrelatedSubqueryBuffering": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether queries with expanded navigations should be formulated\nto encourage correlated subquery results to be buffered.\nBuffering correlated subquery results can reduce the number of queries from N + 1 to 2\nby buffering results from the subquery."
        },
        "PageSize": {
          "type": "integer",
          "description": "Gets or sets the maximum number of query results to return.",
          "format": "int32",
          "x-nullable": true
        },
        "HandleReferenceNavigationPropertyExpandFilter": {
          "type": "boolean",
          "description": "Honor $filter inside $expand of non-collection navigation property.\nThe expanded property is only populated when the filter evaluates to true.\nThis setting is false by default."
        }
      }
    },
    "HandleNullPropagationOption": {
      "type": "integer",
      "description": "This enum defines how to handle null propagation in queryable support.\n\n0 = Default\n1 = True\n2 = False",
      "x-enumNames": [
        "Default",
        "True",
        "False"
      ],
      "enum": [
        0,
        1,
        2
      ]
    },
    "ODataQueryOptions": {
      "type": "object",
      "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip, and $count.",
      "additionalProperties": false,
      "properties": {
        "Request": {
          "description": "Gets the request message associated with this instance.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/HttpRequest"
            }
          ]
        },
        "Context": {
          "description": "Gets the given ODataQueryContext\n            ",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ODataQueryContext"
            }
          ]
        },
        "RawValues": {
          "description": "Gets the raw string of all the OData query options",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ODataRawQueryOptions"
            }
          ]
        },
        "SelectExpand": {
          "description": "Gets the SelectExpandQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/SelectExpandQueryOption"
            }
          ]
        },
        "Apply": {
          "description": "Gets the ApplyQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ApplyQueryOption"
            }
          ]
        },
        "Filter": {
          "description": "Gets the FilterQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/FilterQueryOption"
            }
          ]
        },
        "OrderBy": {
          "description": "Gets the OrderByQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/OrderByQueryOption"
            }
          ]
        },
        "Skip": {
          "description": "Gets the SkipQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/SkipQueryOption"
            }
          ]
        },
        "SkipToken": {
          "description": "Gets the SkipTokenQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/SkipTokenQueryOption"
            }
          ]
        },
        "Top": {
          "description": "Gets the TopQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/TopQueryOption"
            }
          ]
        },
        "Count": {
          "description": "Gets the CountQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/CountQueryOption"
            }
          ]
        },
        "Validator": {
          "description": "Gets or sets the query validator.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ODataQueryValidator"
            }
          ]
        },
        "IfMatch": {
          "description": "Gets the ETag from IfMatch header.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ETag"
            }
          ]
        },
        "IfNoneMatch": {
          "description": "Gets the ETag from IfNoneMatch header.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ETag"
            }
          ]
        }
      }
    },
    "TopQueryOption": {
      "type": "object",
      "description": "This defines a $top OData query option for querying.",
      "additionalProperties": false,
      "properties": {
        "Context": {
          "description": "Gets the given ODataQueryContext.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ODataQueryContext"
            }
          ]
        },
        "RawValue": {
          "type": "string",
          "description": "Gets the raw $top value.",
          "x-nullable": true
        },
        "Value": {
          "type": "integer",
          "description": "Gets the value of the $top as a parsed integer.",
          "format": "int32"
        },
        "Validator": {
          "description": "Gets or sets the Top Query Validator.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/TopQueryValidator"
            }
          ]
        }
      }
    },
    "TopQueryValidator": {
      "type": "object",
      "description": "Represents a validator used to validate a TopQueryOption based on the ODataValidationSettings.",
      "additionalProperties": false
    },
    "CountQueryOption": {
      "type": "object",
      "description": "Represents the value of the $count query option and exposes a way to retrieve the number of entities that satisfy a query.",
      "additionalProperties": false,
      "properties": {
        "Context": {
          "description": "Gets the given ODataQueryContext.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ODataQueryContext"
            }
          ]
        },
        "RawValue": {
          "type": "string",
          "description": "Gets the raw $count value.",
          "x-nullable": true
        },
        "Value": {
          "type": "boolean",
          "description": "Gets the value of the $count in a parsed form."
        },
        "Validator": {
          "description": "Gets or sets the $count query validator.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/CountQueryValidator"
            }
          ]
        }
      }
    },
    "CountQueryValidator": {
      "type": "object",
      "description": "Represents a validator used to validate a CountQueryOption \nbased on the ODataValidationSettings.",
      "additionalProperties": false
    },
    "ODataQueryValidator": {
      "type": "object",
      "description": "Represents a validator used to validate OData queries based on the ODataValidationSettings.",
      "additionalProperties": false
    },
    "ETag": {
      "type": "object",
      "description": "The ETag parsed from request.",
      "additionalProperties": false,
      "properties": {
        "Item": {
          "x-nullable": true
        },
        "IsWellFormed": {
          "type": "boolean",
          "description": "Gets or sets whether the ETag is well-formed."
        },
        "EntityType": {
          "type": "string",
          "description": "Gets or sets an entity type of the ETag.",
          "x-nullable": true
        },
        "IsAny": {
          "type": "boolean",
          "description": "Gets or sets whether the ETag is corresponding to \"*\"."
        },
        "IsIfNoneMatch": {
          "type": "boolean",
          "description": "Gets or sets whether If-None-Match set in the request header."
        },
        "ConcurrencyProperties": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {}
        }
      }
    },
    "ETagOfCuratedCatalogItem": {
      "type": "object",
      "description": "OData ETag of an entity type .",
      "additionalProperties": false,
      "properties": {
        "Item": {
          "x-nullable": true
        },
        "IsWellFormed": {
          "type": "boolean",
          "description": "Gets or sets whether the ETag is well-formed."
        },
        "EntityType": {
          "type": "string",
          "description": "Gets or sets an entity type of the ETag.",
          "x-nullable": true
        },
        "IsAny": {
          "type": "boolean",
          "description": "Gets or sets whether the ETag is corresponding to \"*\"."
        },
        "IsIfNoneMatch": {
          "type": "boolean",
          "description": "Gets or sets whether If-None-Match set in the request header."
        },
        "ConcurrencyProperties": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {}
        }
      }
    },
    "SubmenuItemsList": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "submenuId": {
          "type": "string",
          "x-nullable": true
        },
        "items": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/CuratedCatalogItem"
          }
        }
      }
    },
    "CatalogItem": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "language",
        "offerId",
        "legacyId",
        "bigId"
      ],
      "properties": {
        "language": {
          "type": "string",
          "description": "Language"
        },
        "displayName": {
          "type": "string",
          "description": "Display name",
          "x-nullable": true
        },
        "hasStandardContractAmendments": {
          "type": "boolean",
          "description": "A value indicating whether standard contract amendments are present for this product"
        },
        "publisherMpnId": {
          "type": "string",
          "description": "The publisher's Microsoft Partner Network (MPN) Id",
          "x-nullable": true
        },
        "sellerId": {
          "type": "string",
          "description": "Partner Center Seller Id",
          "x-nullable": true
        },
        "publisherId": {
          "type": "string",
          "description": "Publisher id",
          "x-nullable": true
        },
        "partnerCenterId": {
          "type": "string",
          "description": "Partner center id",
          "x-nullable": true
        },
        "publisherDisplayName": {
          "type": "string",
          "description": "Publisher display name",
          "x-nullable": true
        },
        "offerId": {
          "type": "string",
          "description": "Offer id"
        },
        "legacyId": {
          "type": "string",
          "description": "Offer legacy id"
        },
        "determinedStorefronts": {
          "type": "array",
          "description": "The list of the storefronts for which this offer is designated",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/Store"
          }
        },
        "standardContractAmendmentsRevisionId": {
          "type": "string",
          "description": "Standard contract amendments for this product",
          "format": "guid"
        },
        "universalAmendmentUrl": {
          "type": "string",
          "description": "The universal amendment link for an enterprise contract.",
          "x-nullable": true
        },
        "summary": {
          "type": "string",
          "description": "Summary",
          "x-nullable": true
        },
        "longSummary": {
          "type": "string",
          "description": "Long summary",
          "x-nullable": true
        },
        "description": {
          "type": "string",
          "description": "Description",
          "x-nullable": true
        },
        "offerType": {
          "description": "Offer type",
          "allOf": [
            {
              "$ref": "#/definitions/OfferType"
            }
          ]
        },
        "isPrivate": {
          "type": "boolean",
          "description": "A value indicating whether the item is private"
        },
        "isPreview": {
          "type": "boolean",
          "description": "A value indicating whether the item is preview"
        },
        "isStopSell": {
          "type": "boolean",
          "description": "A value indicating whether sale of this item is stopped"
        },
        "stopSellInfo": {
          "description": "A StopSellInfo object providing stop sell related data",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/StopSellInfo"
            }
          ]
        },
        "fulfillBeforeChargeEligible": {
          "type": "boolean",
          "description": "A value indicating whether this item is eligible for fulfill before charge"
        },
        "marketingMaterial": {
          "description": "Marketing material added by the publisher",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/MarketingMaterial"
            }
          ]
        },
        "Markets": {
          "type": "array",
          "description": "Markets for the item",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "IsvContactDetails": {
          "type": "object",
          "description": "ISV contact details",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "bigId": {
          "type": "string",
          "description": "Big catalog id"
        },
        "ocpSolutionId": {
          "type": "string",
          "description": "OCP solution id of the product",
          "x-nullable": true
        },
        "legalTermsUri": {
          "type": "string",
          "description": "Legal terms URI",
          "x-nullable": true
        },
        "cspLegalTermsUri": {
          "type": "string",
          "description": "CSP legal terms URI",
          "x-nullable": true
        },
        "legalTermsType": {
          "description": "Type of to the legal terms",
          "allOf": [
            {
              "$ref": "#/definitions/LegalTermsType"
            }
          ]
        },
        "privacyPolicyUri": {
          "type": "string",
          "description": "Uri to the privacy policy of the product",
          "x-nullable": true
        },
        "helpLink": {
          "type": "string",
          "description": "Help link for the product",
          "x-nullable": true
        },
        "supportUri": {
          "type": "string",
          "description": "Support uri of the product",
          "x-nullable": true
        },
        "version": {
          "type": "string",
          "description": "Big Cat submission version",
          "x-nullable": true
        },
        "uiDefinitionUri": {
          "type": "string",
          "description": "User interface definition uri",
          "x-nullable": true
        },
        "categoryIds": {
          "type": "array",
          "description": "List of category IDs the marketplace item belongs to",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "operatingSystems": {
          "type": "array",
          "description": "List of operating systems the marketplace item supports",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "marketCode": {
          "type": "string",
          "description": "Market code of a service offer",
          "x-nullable": true
        },
        "marketStates": {
          "type": "array",
          "description": "Market states of a service offer",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "industryIds": {
          "type": "array",
          "description": "List of industry IDs the item belongs to",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "PrimaryIndustry": {
          "type": "array",
          "description": "List of industry IDs the item belongs to",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "PrimaryCategories": {
          "type": "array",
          "description": "List of category IDs the item belongs to",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "cloudIndustryCategories": {
          "type": "array",
          "description": "List of cloud industry IDs the item belongs to",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "primaryProduct": {
          "type": "string",
          "description": "Primary product for the offer",
          "x-nullable": true
        },
        "supportedProducts": {
          "type": "array",
          "description": "It maps to the list of products the publisher provides with which their offer works",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "applicableProducts": {
          "type": "array",
          "description": "Product categories the offer belongs to",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "serviceType": {
          "type": "string",
          "description": "Service type that applies to the offer",
          "x-nullable": true
        },
        "competencies": {
          "type": "array",
          "description": "Competencies that apply to the offer",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/Competency"
          }
        },
        "hasPrices": {
          "type": "boolean",
          "description": "A value indicating whether the item has prices",
          "x-nullable": true
        },
        "duration": {
          "description": "The duration that applies to the item",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/Duration"
            }
          ]
        },
        "marketPricingDetails": {
          "type": "array",
          "description": "The pricing details of each market to the item",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/MarketPricingDetailsItem"
          }
        },
        "startingPrice": {
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/MarketStartPrice"
            }
          ]
        },
        "pricing": {
          "description": "The pricing that applies to the item",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/Pricing"
            }
          ]
        },
        "solutionAreas": {
          "type": "array",
          "description": "The states that apply to the item",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "screenshotUris": {
          "type": "array",
          "description": "List of screenshot image URIs provided for the item",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "links": {
          "type": "array",
          "description": "List of Links provided for the item",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/LinkProperties"
          }
        },
        "filters": {
          "type": "array",
          "description": "List of filters for the item",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/Filter"
          }
        },
        "iconFileUris": {
          "type": "object",
          "description": "Dictionary of icon image URIs by icon type",
          "x-nullable": true,
          "x-dictionaryKey": {
            "$ref": "#/definitions/IconKind"
          },
          "additionalProperties": {
            "type": "string"
          }
        },
        "artifacts": {
          "type": "array",
          "description": "List of artifacts",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/Artifact"
          }
        },
        "metadata": {
          "description": "Custom item metadata",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/OfferMetadata"
            }
          ]
        },
        "properties": {
          "type": "object",
          "description": "Dictionary of properties provided for the item",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "images": {
          "type": "array",
          "description": "List of Images",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/ImageGroup"
          }
        },
        "videos": {
          "type": "array",
          "description": "List of product videos",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/ProductVideo"
          }
        },
        "plans": {
          "type": "array",
          "description": "Plans available for the offer details",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/Plan"
          }
        },
        "resourceGroupName": {
          "type": "string",
          "description": "Resource group name the gallery item belongs to",
          "x-nullable": true
        },
        "definitionTemplates": {
          "description": "Definition templates",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/DefinitionTemplates"
            }
          ]
        },
        "additionalProperties": {
          "type": "object",
          "description": "Dictionary of additional properties provided for the item",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "restrictedAudience": {
          "description": "This fields supports setting explicit audience like subscription, tenant or user",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/RestrictedAudience"
            }
          ]
        },
        "isDeleted": {
          "type": "boolean",
          "description": "A value indicating is the marketplace item deleted"
        },
        "isThirdParty": {
          "type": "boolean",
          "description": "A value indicating whether the product is third party offer or not"
        },
        "groupId": {
          "type": "string",
          "description": "This value is used to merge different entities to a single item",
          "x-nullable": true
        },
        "hideKeys": {
          "type": "array",
          "description": "List of hide keys provided for the item",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "keywords": {
          "type": "array",
          "description": "List of keywords provided for the item",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "popularity": {
          "type": "number",
          "description": "Popularity of the product",
          "format": "double"
        },
        "pricingDetailsUri": {
          "type": "string",
          "description": "Pricing details uri of the product",
          "x-nullable": true
        },
        "hasFreeTrials": {
          "type": "boolean",
          "description": "A value indicating whether it has free trials"
        },
        "isByol": {
          "type": "boolean",
          "description": "A value indicating whether it has licensed plans"
        },
        "isMacc": {
          "type": "boolean",
          "description": "A value indicating whether it is MACC eligible"
        },
        "hasFreePlans": {
          "type": "boolean",
          "description": "A value indicating whether it has free plans"
        },
        "isQuantifiable": {
          "type": "boolean",
          "description": "A value indicating whether product is quantifiable"
        },
        "altStackReference": {
          "type": "string",
          "description": "Alternative stack reference",
          "x-nullable": true
        },
        "hasPaygPlans": {
          "type": "boolean",
          "description": "A value indicating whether an offer has a 'Pay As You Go' plan"
        },
        "isReseller": {
          "type": "boolean",
          "description": "A value indicating whether microsoft is acting as a reseller"
        },
        "ttl": {
          "type": "integer",
          "description": "Expiration policy in seconds",
          "format": "int32",
          "x-nullable": true
        },
        "isExcludedFromSearch": {
          "type": "boolean",
          "description": "A value indicating whether the offer should be excluded from search"
        },
        "applicableStoreFronts": {
          "description": "A value indicating which storefront this offer should surface on",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/StoreFrontOptions"
            }
          ]
        },
        "offerVersion": {
          "type": "string",
          "description": "Offer version specified by the publisher on publishing portal",
          "x-nullable": true
        },
        "isMicrosoftProduct": {
          "type": "boolean",
          "description": "A value indicating whether it is a microsoft product",
          "x-nullable": true
        },
        "productOwnershipSellingMotion": {
          "type": "string",
          "description": "Product ownership selling motion",
          "x-nullable": true
        },
        "documentLinks": {
          "type": "array",
          "description": "The list of document links provided for the item",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/LinkProperties"
          }
        },
        "offerEnvironment": {
          "description": "A value indicating offer's environment",
          "allOf": [
            {
              "$ref": "#/definitions/EnvironmentInfo"
            }
          ]
        },
        "linkedAddIns": {
          "type": "array",
          "description": "List of linked Add Ins provided for the item",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "linkedAddInsTypes": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "excludeFromBootstrap": {
          "type": "boolean",
          "description": "A value indicating whether the offer should not be re-ingest during bootstrap session"
        },
        "hydrationNotificationReceivedAt": {
          "type": "string",
          "description": "Notification creation time",
          "format": "date-time",
          "x-nullable": true
        },
        "bigCatLastModifiedDate": {
          "type": "string",
          "description": "Last modified date",
          "format": "date-time",
          "x-nullable": true
        },
        "disableSendEmailOnPurchase": {
          "type": "boolean",
          "description": "Indication to disable sending email on purchase"
        },
        "hideFromSaasBlade": {
          "type": "boolean",
          "description": "Indication to hide from SaaS blade"
        },
        "integratedWithMicrosoftGraphApi": {
          "type": "boolean",
          "description": "Indication if there is integrated with Microsoft graph API"
        },
        "multiTenantAadAppId": {
          "type": "string",
          "description": "Multi tenant AAD app id",
          "x-nullable": true
        },
        "licenseManagementType": {
          "type": "string",
          "description": "License management type",
          "x-nullable": true
        },
        "licenseModel": {
          "type": "string",
          "description": "License model",
          "x-nullable": true
        },
        "pbiServicePrincipalIds": {
          "type": "array",
          "description": "PBI service principals",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "isCoreVm": {
          "type": "boolean",
          "description": "Set to true only for offers of OfferType.VirtualMachine to indicate that it was originally of OfferType.CoreVirtualMachine",
          "x-nullable": true
        },
        "m365CertificationInfo": {
          "description": "M365 Certification info",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/M365CertificationInfo"
            }
          ]
        },
        "downloadLink": {
          "type": "string",
          "description": "Download link for offers of type OfferType.PowerBIVisuals",
          "x-nullable": true
        },
        "downloadSampleLink": {
          "type": "string",
          "description": "Download sample report link for offers of type OfferType.PowerBIVisuals",
          "x-nullable": true
        },
        "omexAssetId": {
          "type": "string",
          "description": "Asset ID for offers of type OfferType.PowerBIVisuals",
          "x-nullable": true
        },
        "mixProductId": {
          "type": "string",
          "description": "Product ID for offers of type OfferType.PowerBIVisuals",
          "x-nullable": true
        },
        "appFreeType": {
          "type": "string",
          "description": "Whether an offer has additional purchases required",
          "x-nullable": true
        },
        "storeFrontPricings": {
          "type": "object",
          "description": "storefront pricings parameters for AppSource and AMP",
          "x-nullable": true,
          "x-dictionaryKey": {
            "$ref": "#/definitions/Store"
          },
          "additionalProperties": {
            "$ref": "#/definitions/UIPricing"
          }
        },
        "hasRIPlans": {
          "type": "boolean",
          "description": "Has plans with reservations"
        },
        "enrichedData": {
          "description": "Enriched offer data",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/EnrichedData"
            }
          ]
        },
        "capabilities": {
          "type": "array",
          "description": "Office capabilities",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/OfficeCapabilityType"
          }
        },
        "releaseDate": {
          "type": "string",
          "description": "release date",
          "format": "date-time",
          "x-nullable": true
        },
        "hideFromAdminPortal": {
          "type": "boolean",
          "description": "the flag is used in embedded views"
        },
        "awards": {
          "type": "array",
          "description": "the flag is used in embedded views",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "powerBIVisualId": {
          "type": "string",
          "description": "the ID is used to correlate to a Visual for PowerBI",
          "x-nullable": true
        },
        "pricingTypes": {
          "type": "array",
          "description": "The list of the pricing types for which this offer is designated",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/PricingType"
          }
        },
        "autoRunLaunchEvents": {
          "type": "array",
          "description": "A list of auto run launch events for office products",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "service": {
          "type": "string",
          "description": "BigCat Service",
          "x-nullable": true
        },
        "serviceId": {
          "type": "string",
          "description": "BigCat Service Id",
          "x-nullable": true
        },
        "productType": {
          "type": "string",
          "description": "BigCat Product Type",
          "x-nullable": true
        },
        "productFamily": {
          "type": "string",
          "description": "BigCat Product Family",
          "x-nullable": true
        },
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "partitionKey": {
          "type": "string",
          "x-nullable": true
        },
        "_ts": {
          "type": "integer",
          "format": "int64"
        },
        "searchScore": {
          "type": "number",
          "description": "Gets or sets the search relevance score when it is linked to a search score",
          "format": "double",
          "x-nullable": true
        }
      }
    },
    "CatalogSearchResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Facets": {
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/CatalogSearchFacets"
            }
          ]
        },
        "Results": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/CuratedCatalogItem"
          }
        },
        "TotalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CatalogSearchFacets": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CurationCategoryIds": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/SearchSingleFacetResponse"
          }
        }
      }
    },
    "SearchSingleFacetResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Value": {
          "type": "string",
          "x-nullable": true
        },
        "Count": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        }
      }
    },
    "CuratedData": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "partitionKey": {
          "type": "string",
          "x-nullable": true
        },
        "_ts": {
          "type": "integer",
          "format": "int64"
        },
        "docType": {
          "$ref": "#/definitions/CuratedDocumentType"
        },
        "region": {
          "type": "string",
          "x-nullable": true
        },
        "$schema": {
          "type": "string",
          "x-nullable": true
        },
        "identity": {
          "type": "string",
          "x-nullable": true
        },
        "quotaId": {
          "type": "string",
          "x-nullable": true
        },
        "activityPane": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/GalleryItemMenuReference"
          }
        },
        "gallery": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/MenuItem"
          }
        },
        "create": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/CreateItem"
          }
        },
        "dynamicCreate": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/CreateItem"
          }
        },
        "displayNames": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/CurationDisplayName"
          }
        },
        "itemAccessibility": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/ItemAccessibility"
          }
        },
        "filters": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/CurationFilterGroup"
          }
        },
        "linkableResources": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/LinkableResource"
          }
        },
        "linkableErrorStrings": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/LinkableResource"
          }
        },
        "groups": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/SubMenuItem"
          }
        },
        "createMessageItems": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/CreateMessageItems"
          }
        },
        "language": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "CuratedDocumentType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "CurationItem",
        "CurationData"
      ],
      "enum": [
        "CurationItem",
        "CurationData"
      ]
    },
    "GalleryItemMenuReference": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "type": {
          "$ref": "#/definitions/GalleryItemMenuReferenceType"
        }
      }
    },
    "GalleryItemMenuReferenceType": {
      "type": "integer",
      "description": "0 = GalleryItem\n1 = ItemGroup",
      "x-enumNames": [
        "GalleryItem",
        "ItemGroup"
      ],
      "enum": [
        0,
        1
      ]
    },
    "MenuItem": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "displayName": {
          "type": "string",
          "x-nullable": true
        },
        "summary": {
          "type": "string",
          "x-nullable": true
        },
        "children": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/SubMenuItem"
          }
        }
      }
    },
    "SubMenuItem": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "displayName": {
          "type": "string",
          "x-nullable": true
        },
        "publisherDisplayName": {
          "type": "string",
          "x-nullable": true
        },
        "summary": {
          "type": "string",
          "x-nullable": true
        },
        "longSummary": {
          "type": "string",
          "x-nullable": true
        },
        "template": {
          "type": "string",
          "x-nullable": true
        },
        "itemImagesReference": {
          "type": "string",
          "x-nullable": true
        },
        "icons": {
          "type": "object",
          "x-nullable": true,
          "x-dictionaryKey": {
            "$ref": "#/definitions/IconKind"
          },
          "additionalProperties": {
            "type": "string"
          }
        },
        "rows": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "items": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/GalleryItemMenuReference2"
          }
        },
        "categories": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "publishers": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "itemVersionType": {
          "$ref": "#/definitions/ItemVersionType"
        },
        "curationExclusion": {
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/CurationExclusion"
            }
          ]
        }
      }
    },
    "GalleryItemMenuReference2": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "type": {
          "$ref": "#/definitions/GalleryItemMenuReferenceType2"
        }
      }
    },
    "GalleryItemMenuReferenceType2": {
      "type": "integer",
      "description": "0 = GalleryItem\n1 = ItemGroup",
      "x-enumNames": [
        "GalleryItem",
        "ItemGroup"
      ],
      "enum": [
        0,
        1
      ]
    },
    "ItemVersionType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "All",
        "CreatableOnly"
      ],
      "enum": [
        "all",
        "creatableOnly"
      ]
    },
    "CurationExclusion": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "items": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/GalleryItemMenuReference2"
          }
        },
        "categories": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "publishers": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CreateItem": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "displayName": {
          "type": "string",
          "x-nullable": true
        },
        "items": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/GalleryItemMenuReference2"
          }
        }
      }
    },
    "CurationDisplayName": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "displayName": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "ItemAccessibility": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "accessBehavior": {
          "$ref": "#/definitions/AccessBehavior"
        },
        "exceptions": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "categoryExceptions": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AccessBehavior": {
      "type": "integer",
      "description": "0 = IncludeAll\n1 = ExcludeAll",
      "x-enumNames": [
        "IncludeAll",
        "ExcludeAll"
      ],
      "enum": [
        0,
        1
      ]
    },
    "CurationFilterGroup": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "displayName": {
          "type": "string",
          "x-nullable": true
        },
        "items": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/CurationFilter"
          }
        }
      }
    },
    "CurationFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "displayName": {
          "type": "string",
          "x-nullable": true
        },
        "categories": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "publishers": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "publisherDisplayNames": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "publisherDisplayNameExclusions": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "itemVersionType": {
          "$ref": "#/definitions/ItemVersionType2"
        },
        "curationExclusion": {
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/CurationExclusion"
            }
          ]
        }
      }
    },
    "ItemVersionType2": {
      "type": "integer",
      "description": "0 = All\n1 = CreatableOnly",
      "x-enumNames": [
        "All",
        "CreatableOnly"
      ],
      "enum": [
        0,
        1
      ]
    },
    "LinkableResource": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "displayName": {
          "type": "string",
          "x-nullable": true
        },
        "items": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/GalleryItemMenuReference2"
          }
        },
        "categories": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "publishers": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "itemVersionType": {
          "$ref": "#/definitions/ItemVersionType2"
        }
      }
    },
    "CreateMessageItems": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "items": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CurationItem": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "partitionKey": {
          "type": "string",
          "x-nullable": true
        },
        "_ts": {
          "type": "integer",
          "format": "int64"
        },
        "identity": {
          "type": "string",
          "x-nullable": true
        },
        "IsDefault": {
          "type": "boolean"
        },
        "isPreviousDefault": {
          "type": "boolean"
        },
        "ItemUri": {
          "type": "string",
          "x-nullable": true
        },
        "QuotaId": {
          "type": "string",
          "x-nullable": true
        },
        "IsDefaultForQuota": {
          "type": "boolean"
        },
        "language": {
          "type": "string",
          "x-nullable": true
        },
        "region": {
          "type": "string",
          "x-nullable": true
        },
        "environment": {
          "type": "string",
          "x-nullable": true
        },
        "docType": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "ODataQueryOptionsOfCurationItem": {
      "type": "object",
      "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
      "additionalProperties": false,
      "properties": {
        "Request": {
          "description": "Gets the request message associated with this instance.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/HttpRequest"
            }
          ]
        },
        "Context": {
          "description": "Gets the given ODataQueryContext\n            ",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ODataQueryContext"
            }
          ]
        },
        "RawValues": {
          "description": "Gets the raw string of all the OData query options",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ODataRawQueryOptions"
            }
          ]
        },
        "SelectExpand": {
          "description": "Gets the SelectExpandQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/SelectExpandQueryOption"
            }
          ]
        },
        "Apply": {
          "description": "Gets the ApplyQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ApplyQueryOption"
            }
          ]
        },
        "Filter": {
          "description": "Gets the FilterQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/FilterQueryOption"
            }
          ]
        },
        "OrderBy": {
          "description": "Gets the OrderByQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/OrderByQueryOption"
            }
          ]
        },
        "Skip": {
          "description": "Gets the SkipQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/SkipQueryOption"
            }
          ]
        },
        "SkipToken": {
          "description": "Gets the SkipTokenQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/SkipTokenQueryOption"
            }
          ]
        },
        "Top": {
          "description": "Gets the TopQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/TopQueryOption"
            }
          ]
        },
        "Count": {
          "description": "Gets the CountQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/CountQueryOption"
            }
          ]
        },
        "Validator": {
          "description": "Gets or sets the query validator.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ODataQueryValidator"
            }
          ]
        },
        "IfMatch": {
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ETagOfCurationItem"
            }
          ]
        },
        "IfNoneMatch": {
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ETagOfCurationItem"
            }
          ]
        }
      }
    },
    "ETagOfCurationItem": {
      "type": "object",
      "description": "OData ETag of an entity type .",
      "additionalProperties": false,
      "properties": {
        "Item": {
          "x-nullable": true
        },
        "IsWellFormed": {
          "type": "boolean",
          "description": "Gets or sets whether the ETag is well-formed."
        },
        "EntityType": {
          "type": "string",
          "description": "Gets or sets an entity type of the ETag.",
          "x-nullable": true
        },
        "IsAny": {
          "type": "boolean",
          "description": "Gets or sets whether the ETag is corresponding to \"*\"."
        },
        "IsIfNoneMatch": {
          "type": "boolean",
          "description": "Gets or sets whether If-None-Match set in the request header."
        },
        "ConcurrencyProperties": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {}
        }
      }
    },
    "HttpContent": {
      "type": "object",
      "description": "A base class representing an HTTP entity body and content headers.",
      "additionalProperties": false,
      "properties": {
        "Headers": {
          "description": "Gets the HTTP content headers as defined in RFC 2616.",
          "allOf": [
            {
              "$ref": "#/definitions/HttpContentHeaders"
            }
          ]
        }
      }
    },
    "HttpContentHeaders": {
      "type": "object",
      "description": "Represents the collection of Content Headers as defined in RFC 2616.",
      "additionalProperties": false,
      "properties": {
        "HeaderStore": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {}
        },
        "Allow": {
          "type": "array",
          "description": "Gets the value of the Allow content header on an HTTP response.",
          "items": {
            "type": "string"
          }
        },
        "ContentDisposition": {
          "description": "Gets the value of the Content-Disposition content header on an HTTP response.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ContentDispositionHeaderValue"
            }
          ]
        },
        "ContentEncoding": {
          "type": "array",
          "description": "Gets the value of the Content-Encoding content header on an HTTP response.",
          "items": {
            "type": "string"
          }
        },
        "ContentLanguage": {
          "type": "array",
          "description": "Gets the value of the Content-Language content header on an HTTP response.",
          "items": {
            "type": "string"
          }
        },
        "ContentLength": {
          "type": "integer",
          "description": "Gets or sets the value of the Content-Length content header on an HTTP response.",
          "format": "int64",
          "x-nullable": true
        },
        "ContentLocation": {
          "type": "string",
          "description": "Gets or sets the value of the Content-Location content header on an HTTP response.",
          "format": "uri",
          "x-nullable": true
        },
        "ContentMD5": {
          "type": "string",
          "description": "Gets or sets the value of the Content-MD5 content header on an HTTP response.",
          "format": "byte",
          "x-nullable": true
        },
        "ContentRange": {
          "description": "Gets or sets the value of the Content-Range content header on an HTTP response.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ContentRangeHeaderValue"
            }
          ]
        },
        "ContentType": {
          "description": "Gets or sets the value of the Content-Type content header on an HTTP response.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/MediaTypeHeaderValue"
            }
          ]
        },
        "Expires": {
          "type": "string",
          "description": "Gets or sets the value of the Expires content header on an HTTP response.",
          "format": "date-time",
          "x-nullable": true
        },
        "LastModified": {
          "type": "string",
          "description": "Gets or sets the value of the Last-Modified content header on an HTTP response.",
          "format": "date-time",
          "x-nullable": true
        }
      }
    },
    "ContentDispositionHeaderValue": {
      "type": "object",
      "description": "Represents the value of the Content-Disposition header.",
      "additionalProperties": false,
      "properties": {
        "DispositionType": {
          "type": "string",
          "description": "The disposition type for a content body part."
        },
        "Parameters": {
          "type": "array",
          "description": "A set of parameters included the Content-Disposition header.",
          "items": {
            "$ref": "#/definitions/NameValueHeaderValue"
          }
        },
        "Name": {
          "type": "string",
          "description": "The name for a content body part.",
          "x-nullable": true
        },
        "FileName": {
          "type": "string",
          "description": "A suggestion for how to construct a filename for   storing the message payload to be used if the entity is   detached and stored in a separate file.",
          "x-nullable": true
        },
        "FileNameStar": {
          "type": "string",
          "description": "A suggestion for how to construct filenames for   storing message payloads to be used if the entities are    detached and stored in a separate files.",
          "x-nullable": true
        },
        "CreationDate": {
          "type": "string",
          "description": "The date at which   the file was created.",
          "format": "date-time",
          "x-nullable": true
        },
        "ModificationDate": {
          "type": "string",
          "description": "The date at   which the file was last modified.",
          "format": "date-time",
          "x-nullable": true
        },
        "ReadDate": {
          "type": "string",
          "description": "The date the file was last read.",
          "format": "date-time",
          "x-nullable": true
        },
        "Size": {
          "type": "integer",
          "description": "The approximate size, in bytes, of the file.",
          "format": "int64",
          "x-nullable": true
        }
      }
    },
    "NameValueHeaderValue": {
      "type": "object",
      "description": "Represents a name/value pair used in various headers as defined in RFC 2616.",
      "additionalProperties": false,
      "properties": {
        "Name": {
          "type": "string",
          "description": "Gets the header name."
        },
        "Value": {
          "type": "string",
          "description": "Gets the header value.",
          "x-nullable": true
        }
      }
    },
    "ContentRangeHeaderValue": {
      "type": "object",
      "description": "Represents the value of the Content-Range header.",
      "additionalProperties": false,
      "properties": {
        "Unit": {
          "type": "string",
          "description": "The range units used."
        },
        "From": {
          "type": "integer",
          "description": "Gets the position at which to start sending data.",
          "format": "int64",
          "x-nullable": true
        },
        "To": {
          "type": "integer",
          "description": "Gets the position at which to stop sending data.",
          "format": "int64",
          "x-nullable": true
        },
        "Length": {
          "type": "integer",
          "description": "Gets the length of the full entity-body.",
          "format": "int64",
          "x-nullable": true
        },
        "HasLength": {
          "type": "boolean",
          "description": "Gets whether the Content-Range header has a length specified."
        },
        "HasRange": {
          "type": "boolean",
          "description": "Gets whether the Content-Range has a range specified."
        }
      }
    },
    "MediaTypeHeaderValue": {
      "type": "object",
      "description": "Represents a media type used in a Content-Type header as defined in the RFC 2616.",
      "additionalProperties": false,
      "properties": {
        "CharSet": {
          "type": "string",
          "description": "Gets or sets the character set.",
          "x-nullable": true
        },
        "Parameters": {
          "type": "array",
          "description": "Gets or sets the media-type header value parameters.",
          "items": {
            "$ref": "#/definitions/NameValueHeaderValue"
          }
        },
        "MediaType": {
          "type": "string",
          "description": "Gets or sets the media-type header value.",
          "x-nullable": true
        }
      }
    },
    "Request": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "subscriptionId",
        "accountCurrency",
        "accountRegion",
        "products"
      ],
      "properties": {
        "subscriptionId": {
          "type": "string",
          "format": "guid"
        },
        "accountCurrency": {
          "type": "string"
        },
        "accountRegion": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        }
      }
    },
    "Product": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id",
        "publisher",
        "offer",
        "plan"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "publisher": {
          "type": "string"
        },
        "offer": {
          "type": "string"
        },
        "plan": {
          "type": "string"
        },
        "term": {
          "type": "string",
          "x-nullable": true
        },
        "promotioncode": {
          "type": "string",
          "x-nullable": true
        },
        "meters": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/Meter2"
          }
        }
      }
    },
    "Meter2": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "quantity": {
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "PackageResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "offerType": {
          "type": "string",
          "x-nullable": true
        },
        "uri": {
          "type": "string",
          "x-nullable": true
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        }
      }
    },
    "ODataQueryOptionsOfPackageResponse": {
      "type": "object",
      "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
      "additionalProperties": false,
      "properties": {
        "Request": {
          "description": "Gets the request message associated with this instance.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/HttpRequest"
            }
          ]
        },
        "Context": {
          "description": "Gets the given ODataQueryContext\n            ",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ODataQueryContext"
            }
          ]
        },
        "RawValues": {
          "description": "Gets the raw string of all the OData query options",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ODataRawQueryOptions"
            }
          ]
        },
        "SelectExpand": {
          "description": "Gets the SelectExpandQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/SelectExpandQueryOption"
            }
          ]
        },
        "Apply": {
          "description": "Gets the ApplyQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ApplyQueryOption"
            }
          ]
        },
        "Filter": {
          "description": "Gets the FilterQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/FilterQueryOption"
            }
          ]
        },
        "OrderBy": {
          "description": "Gets the OrderByQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/OrderByQueryOption"
            }
          ]
        },
        "Skip": {
          "description": "Gets the SkipQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/SkipQueryOption"
            }
          ]
        },
        "SkipToken": {
          "description": "Gets the SkipTokenQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/SkipTokenQueryOption"
            }
          ]
        },
        "Top": {
          "description": "Gets the TopQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/TopQueryOption"
            }
          ]
        },
        "Count": {
          "description": "Gets the CountQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/CountQueryOption"
            }
          ]
        },
        "Validator": {
          "description": "Gets or sets the query validator.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ODataQueryValidator"
            }
          ]
        },
        "IfMatch": {
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ETagOfPackageResponse"
            }
          ]
        },
        "IfNoneMatch": {
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ETagOfPackageResponse"
            }
          ]
        }
      }
    },
    "ETagOfPackageResponse": {
      "type": "object",
      "description": "OData ETag of an entity type .",
      "additionalProperties": false,
      "properties": {
        "Item": {
          "x-nullable": true
        },
        "IsWellFormed": {
          "type": "boolean",
          "description": "Gets or sets whether the ETag is well-formed."
        },
        "EntityType": {
          "type": "string",
          "description": "Gets or sets an entity type of the ETag.",
          "x-nullable": true
        },
        "IsAny": {
          "type": "boolean",
          "description": "Gets or sets whether the ETag is corresponding to \"*\"."
        },
        "IsIfNoneMatch": {
          "type": "boolean",
          "description": "Gets or sets whether If-None-Match set in the request header."
        },
        "ConcurrencyProperties": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {}
        }
      }
    },
    "OffersByAudienceRequest": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "restrictedAudience"
      ],
      "properties": {
        "restrictedAudience": {
          "$ref": "#/definitions/RestrictedAudience"
        },
        "skipToken": {
          "type": "string",
          "x-nullable": true
        },
        "legacyIds": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "language": {
          "type": "string",
          "x-nullable": true
        },
        "storefront": {
          "type": "string",
          "x-nullable": true
        },
        "excludePublic": {
          "type": "boolean"
        },
        "includeStopSoldOrHiddenPlans": {
          "type": "boolean"
        }
      }
    },
    "SaaSApp": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "partitionKey": {
          "type": "string",
          "x-nullable": true
        },
        "_ts": {
          "type": "integer",
          "format": "int64"
        },
        "EntityId": {
          "type": "string",
          "x-nullable": true
        },
        "SpzaId": {
          "type": "string",
          "x-nullable": true
        },
        "ActiveDirectoryAppId": {
          "type": "string",
          "x-nullable": true
        },
        "Title": {
          "type": "string",
          "x-nullable": true
        },
        "ShortDescription": {
          "type": "string",
          "x-nullable": true
        },
        "IconUrl": {
          "type": "string",
          "x-nullable": true
        },
        "SaaSAddIns": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/SaaSAddIn"
          }
        },
        "HandOffUrl": {
          "type": "string",
          "x-nullable": true
        },
        "IntegratedWithMicrosoftGraphApi": {
          "type": "boolean"
        },
        "DisableSendEmailOnPurchase": {
          "type": "boolean"
        },
        "HideFromSaasBlade": {
          "type": "boolean"
        }
      }
    },
    "SaaSAddIn": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "AssetId": {
          "type": "string",
          "x-nullable": true
        },
        "SpzaId": {
          "type": "string",
          "x-nullable": true
        },
        "ProductId": {
          "type": "string",
          "x-nullable": true
        },
        "Title": {
          "type": "string",
          "x-nullable": true
        },
        "ShortDescription": {
          "type": "string",
          "x-nullable": true
        },
        "IconUrl": {
          "type": "string",
          "x-nullable": true
        },
        "ProductType": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "ProductLookupResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "bigId": {
          "type": "string",
          "x-nullable": true
        },
        "version": {
          "type": "string",
          "x-nullable": true
        },
        "previewRestrictions": {
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/RestrictedAudience"
            }
          ]
        },
        "planRestrictions": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/PlanRestrictions"
          }
        }
      }
    },
    "PlanRestrictions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "legacyPlanId": {
          "type": "string",
          "x-nullable": true
        },
        "skuId": {
          "type": "string",
          "x-nullable": true
        },
        "privateAudiences": {
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/RestrictedAudience"
            }
          ]
        }
      }
    },
    "CatalogItemWithRestrictedData": {},
    "PageResultOfCatalogItem": {
      "type": "object",
      "description": "Represents a feed of entities that includes additional information that OData formats support.",
      "additionalProperties": false,
      "properties": {
        "NextPageLink": {
          "type": "string",
          "description": "Gets the link for the next page of items in the feed.",
          "format": "uri",
          "nullable": true
        },
        "Count": {
          "type": "integer",
          "description": "Gets the total count of items in the feed.",
          "format": "int64",
          "nullable": true
        },
        "Items": {
          "type": "array",
          "description": "Gets the collection of entities for this feed.",
          "nullable": true,
          "items": {
            "$ref": "#/definitions/CatalogItem"
          }
        }
      }
    },
    "ODataQueryOptionsOfCatalogItem": {
      "type": "object",
      "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
      "additionalProperties": false,
      "properties": {
        "Request": {
          "description": "Gets the request message associated with this instance.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/HttpRequest"
            }
          ]
        },
        "Context": {
          "description": "Gets the given ODataQueryContext\n            ",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ODataQueryContext"
            }
          ]
        },
        "RawValues": {
          "description": "Gets the raw string of all the OData query options",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ODataRawQueryOptions"
            }
          ]
        },
        "SelectExpand": {
          "description": "Gets the SelectExpandQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/SelectExpandQueryOption"
            }
          ]
        },
        "Apply": {
          "description": "Gets the ApplyQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ApplyQueryOption"
            }
          ]
        },
        "Filter": {
          "description": "Gets the FilterQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/FilterQueryOption"
            }
          ]
        },
        "OrderBy": {
          "description": "Gets the OrderByQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/OrderByQueryOption"
            }
          ]
        },
        "Skip": {
          "description": "Gets the SkipQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/SkipQueryOption"
            }
          ]
        },
        "SkipToken": {
          "description": "Gets the SkipTokenQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/SkipTokenQueryOption"
            }
          ]
        },
        "Top": {
          "description": "Gets the TopQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/TopQueryOption"
            }
          ]
        },
        "Count": {
          "description": "Gets the CountQueryOption.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/CountQueryOption"
            }
          ]
        },
        "Validator": {
          "description": "Gets or sets the query validator.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ODataQueryValidator"
            }
          ]
        },
        "IfMatch": {
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ETagOfCatalogItem"
            }
          ]
        },
        "IfNoneMatch": {
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/ETagOfCatalogItem"
            }
          ]
        }
      }
    },
    "ETagOfCatalogItem": {
      "type": "object",
      "description": "OData ETag of an entity type .",
      "additionalProperties": false,
      "properties": {
        "Item": {
          "x-nullable": true
        },
        "IsWellFormed": {
          "type": "boolean",
          "description": "Gets or sets whether the ETag is well-formed."
        },
        "EntityType": {
          "type": "string",
          "description": "Gets or sets an entity type of the ETag.",
          "x-nullable": true
        },
        "IsAny": {
          "type": "boolean",
          "description": "Gets or sets whether the ETag is corresponding to \"*\"."
        },
        "IsIfNoneMatch": {
          "type": "boolean",
          "description": "Gets or sets whether If-None-Match set in the request header."
        },
        "ConcurrencyProperties": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {}
        }
      }
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  }
}
