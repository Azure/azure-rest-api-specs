{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft Marketplace Rating And Reviews API",
    "version": "2023-01-01-preview",
    "description": "Microsoft Marketplace Rating And Reviews API",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "RatingAndReviewsOperations"
    }
  ],
  "paths": {
    "/providers/Microsoft.Marketplace/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Marketplace/products/{uniqueProductId}/reviews/userhasreview": {
      "get": {
        "operationId": "RatingAndReviews_GetUserHasReview",
        "tags": [
          "RatingAndReviewsOperations"
        ],
        "description": "Get whether the user has a review.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "uniqueProductId",
            "in": "path",
            "description": "Unique Product Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/UserHasReview"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RatingAndReviews_GetUserHasReview": {
            "$ref": "./examples/RatingAndReviews_GetUserHasReview.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Product": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProductProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ProductProperties": {
      "type": "object",
      "description": "Properties of the product",
      "properties": {
        "uniqueProductId": {
          "type": "string",
          "description": "The unique product id"
        }
      },
      "required": [
        "uniqueProductId"
      ]
    },
    "UserHasReview": {
      "type": "object",
      "description": "Get if the user has already submitted a review for the product.",
      "properties": {
        "hasReview": {
          "type": "boolean",
          "description": "Indicates whether user has already submitted a review."
        },
        "updatedAt": {
          "type": "string",
          "description": "The date and time when the review was last updated."
        }
      },
      "required": [
        "hasReview",
        "updatedAt"
      ]
    }
  },
  "parameters": {}
}
