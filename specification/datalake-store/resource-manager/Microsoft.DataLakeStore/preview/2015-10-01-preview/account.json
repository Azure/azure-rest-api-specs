{
  "swagger": "2.0",
  "info": {
    "title": "DataLakeStoreAccountManagementClient",
    "description": "Creates an Azure Data Lake Store account management client.",
    "version": "2015-10-01-preview",
    "x-ms-code-generation-settings": {
      "internalConstructors": true
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "text/json",
    "application/octet-stream"
  ],
  "produces": [
    "application/json",
    "text/json",
    "application/octet-stream"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules/{firewallRuleName}": {
      "delete": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_DeleteFirewallRule",
        "description": "Deletes the specified firewall rule from the specified Data Lake Store account",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Store account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Store account from which to delete the firewall rule."
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the firewall rule to delete."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_GetFirewallRule",
        "description": "Gets the specified Data Lake Store firewall rule.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Store account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Store account from which to get the firewall rule."
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the firewall rule to retrieve."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_ListFirewallRules",
        "description": "Lists the Data Lake Store firewall rules within the specified Data Lake Store account.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Store account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Store account from which to get the firewall rules."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DataLakeStoreFirewallRuleListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules/{name}": {
      "put": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_CreateOrUpdateFirewallRule",
        "description": "Creates or updates the specified firewall rule.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Store account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Store account to which to add the firewall rule."
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the firewall rule to create or update."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            },
            "description": "Parameters supplied to create the create firewall rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{name}": {
      "put": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_Create",
        "description": "Creates the specified Data Lake Store account.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Store account."
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Store account to create."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataLakeStoreAccount"
            },
            "description": "Parameters supplied to create the Data Lake Store account."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DataLakeStoreAccount"
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DataLakeStoreAccount"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_Update",
        "description": "Updates the specified Data Lake Store account information.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Store account."
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Store account to update."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataLakeStoreAccount"
            },
            "description": "Parameters supplied to update the Data Lake Store account."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DataLakeStoreAccount"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DataLakeStoreAccount"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}": {
      "delete": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_Delete",
        "description": "Deletes the specified Data Lake Store account.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Store account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Store account to delete."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "204": {
            "description": ""
          },
          "202": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_Get",
        "description": "Gets the specified Data Lake Store account.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Store account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Store account to retrieve."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DataLakeStoreAccount"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/enableKeyVault": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_EnableKeyVault",
        "description": "Attempts to enable a user managed key vault for encryption of the specified Data Lake Store account.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Store account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Store account to attempt to enable the Key Vault for."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully enabled the user managed Key Vault for use encrypting this Data Lake Store account."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_ListByResourceGroup",
        "description": "Lists the Data Lake Store accounts within a specific resource group. The response includes a link to the next page of results, if any.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Store account(s)."
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter. Optional."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of items to return. Optional."
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of items to skip over before returning elements. Optional."
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData expansion. Expand related resources in line with the retrieved resources, e.g. Categories/$expand=Products would expand Product data in line with each Category entry. Optional."
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional."
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional."
          },
          {
            "name": "$count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "A Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional."
          },
          {
            "name": "$search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A free form search. A free-text search expression to match for whether a particular entry should be included in the feed, e.g. Categories?$search=blue OR green. Optional."
          },
          {
            "name": "$format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The desired return format. Return the response in particular format without access to request headers for standard content-type negotiation (e.g Orders?$format=json). Optional."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DataLakeStoreAccountListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/DataLakeStoreAccount"
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/accounts": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_List",
        "description": "Lists the Data Lake Store accounts within the subscription. The response includes a link to the next page of results, if any.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter. Optional."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of items to return. Optional."
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of items to skip over before returning elements. Optional."
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData expansion. Expand related resources in line with the retrieved resources, e.g. Categories/$expand=Products would expand Product data in line with each Category entry. Optional."
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional."
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional."
          },
          {
            "name": "$count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional."
          },
          {
            "name": "$search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A free form search. A free-text search expression to match for whether a particular entry should be included in the feed, e.g. Categories?$search=blue OR green. Optional."
          },
          {
            "name": "$format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The desired return format. Return the response in particular format without access to request headers for standard content-type negotiation (e.g Orders?$format=json). Optional."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DataLakeStoreAccountListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/DataLakeStoreAccount"
      }
    }
  },
  "definitions": {
    "FirewallRuleProperties": {
      "properties": {
        "startIpAddress": {
          "type": "string",
          "description": "the start IP address for the firewall rule."
        },
        "endIpAddress": {
          "type": "string",
          "description": "the end IP address for the firewall rule."
        }
      },
      "description": "Data Lake Store firewall rule properties information"
    },
    "FirewallRule": {
      "properties": {
        "name": {
          "type": "string",
          "description": "the firewall rule's name."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "the namespace and type of the firewall Rule."
        },
        "id": {
          "type": "string",
          "description": "the firewall rule's subscription ID."
        },
        "location": {
          "type": "string",
          "description": "the firewall rule's regional location."
        },
        "properties": {
          "$ref": "#/definitions/FirewallRuleProperties",
          "description": "the properties of the firewall rule."
        }
      },
      "description": "Data Lake Store firewall rule information"
    },
    "DataLakeStoreFirewallRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/FirewallRule"
          },
          "description": "the results of the list operation"
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "the link (url) to the next page of results."
        },
        "count": {
          "type": "integer",
          "readOnly": true,
          "format": "int64",
          "description": "the total count of results that are available, but might not be returned in the current page."
        }
      },
      "description": "Data Lake Store firewall rule list information."
    },
    "EncryptionIdentity": {
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of encryption being used. Currently the only supported type is 'SystemAssigned'.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "EncryptionIdentityType",
            "modelAsString": false
          }
        },
        "principalId": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "description": "The principal identifier associated with the encryption."
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "description": "The tenant identifier associated with the encryption."
        }
      }
    },
    "EncryptionConfig": {
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of encryption configuration being used. Currently the only supported types are 'UserManaged' and 'ServiceManaged'.",
          "enum": [
            "UserManaged",
            "ServiceManaged"
          ],
          "x-ms-enum": {
            "name": "EncryptionConfigType",
            "modelAsString": false
          }
        },
        "keyVaultMetaInfo": {
          "$ref": "#/definitions/KeyVaultMetaInfo",
          "description": "The Key vault information for connecting to user managed encryption keys."
        }
      }
    },
    "KeyVaultMetaInfo": {
      "properties": {
        "keyVaultResourceId": {
          "type": "string",
          "description": "The resource identifier for the user managed Key Vault being used to encrypt."
        },
        "encryptionKeyName": {
          "type": "string",
          "description": "The name of the user managed encryption key."
        },
        "encryptionKeyVersion": {
          "type": "string",
          "description": "The version of the user managed encryption key."
        }
      }
    },
    "DataLakeStoreAccountProperties": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "the status of the Data Lake Store account while being provisioned.",
          "enum": [
            "Failed",
            "Creating",
            "Running",
            "Succeeded",
            "Patching",
            "Suspending",
            "Resuming",
            "Deleting",
            "Deleted"
          ],
          "x-ms-enum": {
            "name": "DataLakeStoreAccountStatus",
            "modelAsString": false
          }
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "description": "the status of the Data Lake Store account after provisioning has completed.",
          "enum": [
            "active",
            "suspended"
          ],
          "x-ms-enum": {
            "name": "DataLakeStoreAccountState",
            "modelAsString": false
          }
        },
        "creationTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "the account creation time."
        },
        "encryptionState": {
          "type": "string",
          "description": "The current state of encryption for this Data Lake store account.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionState",
            "modelAsString": false
          }
        },
        "encryptionProvisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The current state of encryption provisioning for this Data Lake store account.",
          "enum": [
            "Creating",
            "Succeeded"
          ],
          "x-ms-enum": {
            "name": "EncryptionProvisioningState",
            "modelAsString": false
          }
        },
        "encryptionConfig": {
          "$ref": "#/definitions/EncryptionConfig",
          "description": "The Key vault encryption configuration."
        },
        "lastModifiedTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "the account last modified time."
        },
        "endpoint": {
          "type": "string",
          "description": "the gateway host."
        },
        "defaultGroup": {
          "type": "string",
          "description": "the default owner group for all new folders and files created in the Data Lake Store account."
        }
      },
      "description": "Data Lake Store account properties information"
    },
    "DataLakeStoreAccount": {
      "properties": {
        "location": {
          "type": "string",
          "description": "the account regional location."
        },
        "name": {
          "type": "string",
          "description": "the account name."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "the namespace and type of the account."
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "the account subscription ID."
        },
        "identity": {
          "$ref": "#/definitions/EncryptionIdentity",
          "description": "The Key vault encryption identity, if any."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "the value of custom properties."
        },
        "properties": {
          "$ref": "#/definitions/DataLakeStoreAccountProperties",
          "description": "the Data Lake Store account properties."
        }
      },
      "description": "Data Lake Store account information"
    },
    "DataLakeStoreAccountListResult": {
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/DataLakeStoreAccount"
          },
          "description": "the results of the list operation"
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "the link (url) to the next page of results."
        },
        "count": {
          "type": "integer",
          "readOnly": true,
          "format": "int64",
          "description": "the total count of results that are available, but might not be returned in the current page."
        }
      },
      "description": "Data Lake Store account list information response."
    },
    "ErrorDetails": {
      "properties": {
        "code": {
          "type": "string",
          "readOnly": true,
          "description": "the HTTP status code or error code associated with this error"
        },
        "message": {
          "type": "string",
          "readOnly": true,
          "description": "the error message localized based on Accept-Language"
        },
        "target": {
          "type": "string",
          "readOnly": true,
          "description": "the target of the particular error (for example, the name of the property in error)."
        }
      },
      "description": "Data Lake Store error details information"
    },
    "InnerError": {
      "properties": {
        "trace": {
          "type": "string",
          "readOnly": true,
          "description": "the stack trace for the error"
        },
        "context": {
          "type": "string",
          "readOnly": true,
          "description": "the context for the error message"
        }
      },
      "description": "Data Lake Store inner error information"
    },
    "Error": {
      "properties": {
        "code": {
          "type": "string",
          "readOnly": true,
          "description": "the HTTP status code or error code associated with this error"
        },
        "message": {
          "type": "string",
          "readOnly": true,
          "description": "the error message to display."
        },
        "target": {
          "type": "string",
          "readOnly": true,
          "description": "the target of the error."
        },
        "details": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ErrorDetails"
          },
          "description": "the list of error details"
        },
        "innerError": {
          "$ref": "#/definitions/InnerError",
          "readOnly": true,
          "description": "the inner exceptions or errors, if any"
        }
      },
      "description": "Data Lake Store error information"
    },
    "AzureAsyncOperationResult": {
      "properties": {
        "status": {
          "type": "string",
          "readOnly": true,
          "description": "the status of the AzureAsyncOperation",
          "enum": [
            "InProgress",
            "Succeeded",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "OperationStatus",
            "modelAsString": false
          }
        },
        "error": {
          "readOnly": true,
          "$ref": "#/definitions/Error"
        }
      },
      "description": "The response body contains the status of the specified asynchronous operation, indicating whether it has succeeded, is in progress, or has failed. Note that this status is distinct from the HTTP status code returned for the Get Operation Status operation itself. If the asynchronous operation succeeded, the response body includes the HTTP status code for the successful request. If the asynchronous operation failed, the response body includes the HTTP status code for the failed request and error information regarding the failure."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    }
  }
}
