{
  "swagger": "2.0",
  "info": {
    "title": "Azure CodeSigning",
    "version": "2023-06-15-preview",
    "description": "Azure CodeSigning is a service that provides managed code signing for all.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "https://{region}.codesigning.azure.net/",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "region",
        "in": "path",
        "required": true,
        "description": "The Azure region wherein requests for signing will be sent.",
        "type": "string"
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "OAuth2Auth": [
        "https://codesigning.azure.net/.default"
      ]
    }
  ],
  "securityDefinitions": {
    "OAuth2Auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
      "scopes": {
        "https://codesigning.azure.net/.default": ""
      }
    }
  },
  "tags": [],
  "paths": {
    "/codesigningaccounts/{codeSigningAccountName}/certificateprofiles/{certificateProfileName}:sign": {
      "post": {
        "operationId": "CertificateProfileOperations_Sign",
        "summary": "Submit a codesign operation.",
        "description": "Submit a codesign operation under the created codesign account and profile name provided.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "codeSigningAccountName",
            "in": "path",
            "required": true,
            "description": "Azure CodeSigning account name.",
            "type": "string"
          },
          {
            "name": "certificateProfileName",
            "in": "path",
            "required": true,
            "description": "Azure Codesigning certificate profile name under a codesign account.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CodeSigningSubmissionOptions"
            },
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Operation-Location": {
                "description": "The location for monitoring the operation state.",
                "type": "string",
                "format": "uri"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique ID of the operation."
                },
                "status": {
                  "$ref": "#/definitions/Azure.Core.Foundations.OperationState",
                  "description": "The status of the operation"
                },
                "error": {
                  "$ref": "#/definitions/Azure.Core.Foundations.Error",
                  "description": "Error object that describes the error when status is \"Failed\"."
                },
                "result": {
                  "$ref": "#/definitions/CodeSignOperationStatus",
                  "description": "The result of the operation."
                }
              },
              "description": "Provides status details for long running operations.",
              "required": [
                "id",
                "status"
              ],
              "x-typespec-name": "Azure.Core.ResourceOperationStatus<CertificateProfile, CodeSignOperationStatus, Azure.Core.Foundations.Error>"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Sign": {
            "$ref": "./examples/CertificateProfile_Sign.json"
          }
        }
      }
    },
    "/codesigningaccounts/{codeSigningAccountName}/certificateprofiles/{certificateProfileName}/sign/{operationId}": {
      "get": {
        "operationId": "CertificateProfileOperations_GetCodeSigningStatus",
        "summary": "Gets the status of a codesigning operation.",
        "description": "This status operation requires that a Sign request has been submitted and the operationId is known.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the operation.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/CodeSigningOptions.codeSigningAccountName"
          },
          {
            "$ref": "#/parameters/CodeSigningOptions.certificateProfileName"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique ID of the operation."
                },
                "status": {
                  "$ref": "#/definitions/Azure.Core.Foundations.OperationState",
                  "description": "The status of the operation"
                },
                "error": {
                  "$ref": "#/definitions/Azure.Core.Foundations.Error",
                  "description": "Error object that describes the error when status is \"Failed\"."
                },
                "result": {
                  "$ref": "#/definitions/CodeSignResult",
                  "description": "The result of the operation."
                }
              },
              "description": "Provides status details for long running operations.",
              "required": [
                "id",
                "status"
              ],
              "x-typespec-name": "Azure.Core.Foundations.OperationStatus<CodeSignResult, Azure.Core.Foundations.Error>"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetSigningOperationStatus": {
            "$ref": "./examples/CertificateProfile_GetSigningOperationStatus.json"
          }
        }
      }
    },
    "/codesigningaccounts/{codeSigningAccountName}/certificateprofiles/{certificateProfileName}/sign/eku": {
      "get": {
        "operationId": "CertificateProfileOperations_ListSignEkus",
        "summary": "Gets a list of extended key usage object identifiers that are allowed for this account and profile combination.",
        "description": "The list of extended key usages are used to determine the purpose of the certificate usage as part of the codesigning operation.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "codeSigningAccountName",
            "in": "path",
            "required": true,
            "description": "Azure CodeSigning account name.",
            "type": "string"
          },
          {
            "name": "certificateProfileName",
            "in": "path",
            "required": true,
            "description": "Azure Codesigning certificate profile name under a codesign account.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ExtendedKeyUsage"
                  },
                  "x-ms-identifiers": [],
                  "description": "The ExtendedKeyUsage items on this page",
                  "x-typespec-name": "ExtendedKeyUsage[]"
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "x-typespec-name": "TypeSpec.Rest.ResourceLocation"
                }
              },
              "description": "Paged collection of ExtendedKeyUsage items",
              "required": [
                "value"
              ],
              "x-typespec-name": "Azure.Core.Foundations.CustomPage<ExtendedKeyUsage, Azure.Core.(anonymous model)>"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "GetSignEku": {
            "$ref": "./examples/CertificateProfile_GetSignEku.json"
          }
        }
      }
    },
    "/codesigningaccounts/{codeSigningAccountName}/certificateprofiles/{certificateProfileName}/sign/rootcert": {
      "get": {
        "operationId": "CertificateProfileOperations_GetSignRootCertificate",
        "summary": "Gets the codesigning root certificate on the certificate chain for that account and profile name.",
        "description": "The root certificate is generated as part of the initial account creation and it is used to sign the bits for the profile provided.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/CodeSigningOptions.codeSigningAccountName"
          },
          {
            "$ref": "#/parameters/CodeSigningOptions.certificateProfileName"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "produces": [
          "application/x-x509-ca-cert",
          "application/json"
        ],
        "x-ms-examples": {
          "GetSignRootCertificate": {
            "$ref": "./examples/CertificateProfile_GetSignRootCert.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": [],
          "description": "An array of details about specific errors that led to this reported error.",
          "x-typespec-name": "Azure.Core.Foundations.Error[]"
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "description": "The error object.",
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "description": "A response containing error details.",
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      },
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses."
    },
    "Azure.Core.Foundations.OperationState": {
      "type": "string",
      "description": "Enum describing allowed operation states.",
      "enum": [
        "InProgress",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "OperationState",
        "modelAsString": true,
        "values": [
          {
            "name": "InProgress",
            "value": "InProgress",
            "description": "The operation is in progress."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The operation has completed successfully."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The operation has failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "The operation has been canceled by the user."
          }
        ]
      }
    },
    "CertificateProfile": {
      "type": "object",
      "properties": {
        "certificateProfileName": {
          "type": "string",
          "description": "Azure Codesigning certificate profile name under a codesign account.",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        }
      },
      "description": "Azure CodeSigning certificate profile configured on a codesign account.",
      "required": [
        "certificateProfileName"
      ]
    },
    "CodeSignOperationStatus": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique Id of the operation."
        },
        "signResult": {
          "$ref": "#/definitions/CodeSignResult",
          "description": "The result of the codesign operation including the signature and signing certificate."
        }
      },
      "description": "The codesign operation status response.",
      "required": [
        "id"
      ]
    },
    "CodeSignResult": {
      "type": "object",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "Response Id of the codesign operation."
        },
        "signature": {
          "type": "string",
          "format": "byte",
          "description": "Digital signature of the requested content digest."
        },
        "signingCertificate": {
          "type": "string",
          "format": "byte",
          "description": "Signing certificate corresponding to the private key used to codesign the requested\ndigest."
        }
      },
      "description": "The sign status model.",
      "required": [
        "operationId"
      ]
    },
    "CodeSigningAccount": {
      "type": "object",
      "properties": {
        "codeSigningAccountName": {
          "type": "string",
          "description": "Azure CodeSigning account name.",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        }
      },
      "description": "Azure CodeSigning customer account created upon registration on the service.",
      "required": [
        "codeSigningAccountName"
      ]
    },
    "CodeSigningSubmissionOptions": {
      "type": "object",
      "properties": {
        "signatureAlgorithm": {
          "$ref": "#/definitions/SignatureAlgorithm",
          "description": "The supported signature algorithm identifiers."
        },
        "digest": {
          "type": "string",
          "format": "byte",
          "description": "Content digest to codesign."
        },
        "fileHashList": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          },
          "description": "List of full file digital signatures.",
          "x-typespec-name": "bytes[]"
        },
        "authenticodeHashList": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          },
          "description": "List of authenticode digital signatures.",
          "x-typespec-name": "bytes[]"
        }
      },
      "description": "The codesign request information to be signed by the service.",
      "required": [
        "signatureAlgorithm",
        "digest"
      ]
    },
    "ExtendedKeyUsage": {
      "type": "object",
      "properties": {
        "ekus": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An element of ekus.",
          "x-typespec-name": "string[]",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        }
      },
      "description": "Extended key usage object identifier that are allowed.",
      "required": [
        "ekus"
      ]
    },
    "SignatureAlgorithm": {
      "type": "string",
      "description": "Algorithms supported for signing.",
      "enum": [
        "RS256",
        "RS384",
        "RS512",
        "PS256",
        "PS384",
        "PS512",
        "ES256",
        "ES384",
        "ES512",
        "ES256K"
      ],
      "x-ms-enum": {
        "name": "SignatureAlgorithm",
        "modelAsString": true,
        "values": [
          {
            "name": "RS256",
            "value": "RS256",
            "description": "RSASSA-PKCS1-v1_5 using SHA-256 hash algorithm."
          },
          {
            "name": "RS384",
            "value": "RS384",
            "description": "RSASSA-PKCS1-v1_5 using SHA-384 hash algorithm."
          },
          {
            "name": "RS512",
            "value": "RS512",
            "description": "RSASSA-PKCS1-v1_5 using SHA-512 hash algorithm."
          },
          {
            "name": "PS256",
            "value": "PS256",
            "description": "RSASSA-PSS using SHA-256 hash algorithm."
          },
          {
            "name": "PS384",
            "value": "PS384",
            "description": "RSASSA-PSS using SHA-384 hash algorithm."
          },
          {
            "name": "PS512",
            "value": "PS512",
            "description": "RSASSA-PSS using SHA-512 hash algorithm."
          },
          {
            "name": "ES256",
            "value": "ES256",
            "description": "ECDSA using P-256 and SHA-256 hash algorithm."
          },
          {
            "name": "ES384",
            "value": "ES384",
            "description": "ECDSA using P-384 and SHA-384 hash algorithm."
          },
          {
            "name": "ES512",
            "value": "ES512",
            "description": "ECDSA using P-521 and SHA-512 hash algorithm."
          },
          {
            "name": "ES256K",
            "value": "ES256K",
            "description": "ECDSA using secp256k1 and SHA-256 hash algorithm."
          }
        ]
      }
    },
    "Versions": {
      "type": "string",
      "description": "Versions info.",
      "enum": [
        "2023-06-15-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2023_06_15_preview",
            "value": "2023-06-15-preview",
            "description": "The 2023-06-15-preview version."
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "description": "The API version to use for this operation.",
      "x-ms-client-name": "apiVersion",
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "CodeSigningOptions.certificateProfileName": {
      "name": "certificateProfileName",
      "in": "path",
      "required": true,
      "description": "Certificate profile name.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "CodeSigningOptions.codeSigningAccountName": {
      "name": "codeSigningAccountName",
      "in": "path",
      "required": true,
      "description": "CodeSigning account name.",
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
