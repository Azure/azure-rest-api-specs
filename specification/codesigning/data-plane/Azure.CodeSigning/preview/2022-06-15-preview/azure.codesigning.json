{
  "swagger": "2.0",
  "info": {
    "title": "Azure.CodeSigning service",
    "version": "2022-06-15-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "https://{region}.codesigning.azure.net/",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "region",
        "in": "path",
        "required": false,
        "description": "The region where we will sign code.",
        "default": "eus",
        "type": "string"
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "tags": [],
  "paths": {
    "/codesigningaccounts/{codeSigningAccountName}/certificateprofiles/{certificateProfileName}:sign": {
      "post": {
        "operationId": "CertificateProfileOperations_Sign",
        "summary": "Initiates a sign operation.",
        "description": "Initiates a sign operation.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "codeSigningAccountName",
            "in": "path",
            "required": true,
            "description": "Azure Code Signing account name.",
            "type": "string"
          },
          {
            "name": "certificateProfileName",
            "in": "path",
            "required": true,
            "description": "Azure Code Signing certificate profile name.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SignRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    },
    "/codesigningaccounts/{codeSigningAccountName}/certificateprofiles/{certificateProfileName}/sign/{operationId}": {
      "get": {
        "operationId": "CertificateProfileOperations_GetSignOperation",
        "summary": "Gets the status of a sign operation.",
        "description": "Gets the status of a sign operation.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the operation.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/CodeSignStatus.codeSigningAccountName"
          },
          {
            "$ref": "#/parameters/CodeSignStatus.certificateProfileName"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique ID of the operation."
                },
                "status": {
                  "$ref": "#/definitions/Azure.Core.Foundations.OperationState",
                  "description": "The status of the operation"
                },
                "error": {
                  "$ref": "#/definitions/Azure.Core.Foundations.Error",
                  "description": "Error object that describes the error when status is \"Failed\"."
                },
                "result": {
                  "$ref": "#/definitions/OperationStatus",
                  "description": "The result of the operation."
                }
              },
              "description": "Provides status details for long running operations.",
              "required": [
                "id",
                "status"
              ],
              "x-typespec-name": "Azure.Core.Foundations.OperationStatus<OperationStatus, Azure.Core.Foundations.Error>"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    },
    "/codesigningaccounts/{codeSigningAccountName}/certificateprofiles/{certificateProfileName}/sign/eku": {
      "get": {
        "operationId": "CertificateProfileOperations_GetSignEku",
        "summary": "Gets a list of Extended Key Usage OIDs that are allowed.",
        "description": "Gets a list of Extended Key Usage OIDs that are allowed.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "codeSigningAccountName",
            "in": "path",
            "required": true,
            "description": "Azure Code Signing account name.",
            "type": "string"
          },
          {
            "name": "certificateProfileName",
            "in": "path",
            "required": true,
            "description": "Azure Code Signing certificate profile name.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Eku"
                  },
                  "x-ms-identifiers": [],
                  "x-typespec-name": "Eku[]",
                  "description": "The Eku items on this page"
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "x-typespec-name": "Rest.ResourceLocation"
                }
              },
              "description": "Paged collection of Eku items",
              "required": [
                "value"
              ],
              "x-typespec-name": "Azure.Core.Foundations.CustomPage<Eku, Azure.Core.(anonymous model)>"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "Azure.Core.Foundations.Error[]",
          "description": "An array of details about specific errors that led to this reported error."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "description": "The error object.",
      "required": [
        "code",
        "message",
        "details"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "description": "A response containing error details.",
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      },
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "required": [
        "code"
      ]
    },
    "Azure.Core.Foundations.OperationState": {
      "type": "string",
      "enum": [
        "InProgress",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "OperationState",
        "modelAsString": true
      }
    },
    "CertificateProfile": {
      "type": "object",
      "properties": {
        "certificateProfileName": {
          "type": "string",
          "description": "Azure Code Signing certificate profile name.",
          "readOnly": true
        }
      },
      "description": "Certificate Profile",
      "required": [
        "certificateProfileName"
      ]
    },
    "CodeSigningAccount": {
      "type": "object",
      "properties": {
        "codeSigningAccountName": {
          "type": "string",
          "description": "Azure Code Signing account name.",
          "readOnly": true
        }
      },
      "description": "Code Signing Account",
      "required": [
        "codeSigningAccountName"
      ]
    },
    "Eku": {
      "type": "object",
      "properties": {
        "body": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-typespec-name": "string[]",
          "description": "The element of eku list.",
          "readOnly": true
        }
      },
      "description": "Extended Key Usage OIDs that are allowed.",
      "required": [
        "body"
      ]
    },
    "OperationStatus": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique ID of the operation."
        },
        "status": {
          "$ref": "#/definitions/Status",
          "description": "The status of the sign operation."
        },
        "signStatus": {
          "$ref": "#/definitions/SignStatus",
          "description": "The resulting sign operation including the signature and signing certificate."
        }
      },
      "description": "The operation status response model."
    },
    "SignRequest": {
      "type": "object",
      "properties": {
        "signatureAlgorithm": {
          "$ref": "#/definitions/SignatureAlgorithm",
          "description": "The following algorithm identifiers are supported."
        },
        "digest": {
          "type": "string",
          "format": "byte",
          "description": "Digest to sign."
        },
        "fileHashList": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          },
          "x-typespec-name": "bytes[]",
          "description": "List of full file hash."
        },
        "authenticodeHashList": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          },
          "x-typespec-name": "bytes[]",
          "description": "List of authenticode hash."
        }
      },
      "description": "The sign request information to be signed.",
      "required": [
        "signatureAlgorithm",
        "digest"
      ]
    },
    "SignStatus": {
      "type": "object",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "ID of the operation."
        },
        "status": {
          "$ref": "#/definitions/Status",
          "description": "The status of the sign operation."
        },
        "signature": {
          "type": "string",
          "format": "byte",
          "description": "Signature of the requested digest."
        },
        "signingCertificate": {
          "type": "string",
          "format": "byte",
          "description": "Signing certificate corresponding to the private key used to sign the requested\ndigest."
        }
      },
      "description": "The sign status model.",
      "required": [
        "operationId",
        "status"
      ]
    },
    "SignatureAlgorithm": {
      "type": "string",
      "description": "Algorithms supported for signing.",
      "enum": [
        "RS256",
        "RS384",
        "RS512",
        "PS256",
        "PS384",
        "PS512",
        "ES256",
        "ES384",
        "ES512",
        "ES256K"
      ],
      "x-ms-enum": {
        "name": "SignatureAlgorithm",
        "modelAsString": true
      }
    },
    "Status": {
      "type": "string",
      "description": "Sign status of the operation.",
      "enum": [
        "NotStarted",
        "Running",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "Status",
        "modelAsString": true
      }
    },
    "Versions": {
      "type": "string",
      "enum": [
        "2022-06-15-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2022_06_15_preview",
            "value": "2022-06-15-preview"
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "description": "The API version to use for this operation.",
      "x-ms-client-name": "apiVersion",
      "minLength": 1,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "CodeSignStatus.certificateProfileName": {
      "name": "certificateProfileName",
      "in": "path",
      "required": true,
      "description": "Certificate profile name.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "CodeSignStatus.codeSigningAccountName": {
      "name": "codeSigningAccountName",
      "in": "path",
      "required": true,
      "description": "Azure Code Signing account name.",
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
