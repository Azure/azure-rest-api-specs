{
  "swagger": "2.0",
  "info": {
    "title": "Azure Log Analytics",
    "description": "Azure Log Analytics API reference.",
    "version": "2015-03-20"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/storageInsightConfigs/{storageInsightName}": {
      "put": {
        "tags": [
          "StorageInsights"
        ],
        "x-ms-examples": {
          "StorageInsightsCreate": {
            "$ref": "./examples/StorageInsightsCreateOrUpdate.json"
          }
        },
        "operationId": "StorageInsights_CreateOrUpdate",
        "description": "Create or update a storage insight.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "storageInsightName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the storageInsightsConfigs resource"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageInsight"
            },
            "description": "The parameters required to create or update a storage insight."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Created response definition.",
            "schema": {
              "$ref": "#/definitions/StorageInsight"
            }
          },
          "200": {
            "description": "OK response definition.",
            "schema": {
              "$ref": "#/definitions/StorageInsight"
            }
          }
        }
      },
      "get": {
        "tags": [
          "StorageInsights"
        ],
        "x-ms-examples": {
          "StorageInsightsGet": {
            "$ref": "./examples/StorageInsightsGet.json"
          }
        },
        "operationId": "StorageInsights_Get",
        "description": "Gets a storage insight instance.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "storageInsightName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the storageInsightsConfigs resource"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition.",
            "schema": {
              "$ref": "#/definitions/StorageInsight"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StorageInsights"
        ],
        "x-ms-examples": {
          "StorageInsightsDelete": {
            "$ref": "./examples/StorageInsightsDelete.json"
          }
        },
        "operationId": "StorageInsights_Delete",
        "description": "Deletes a storageInsightsConfigs resource",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "storageInsightName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the storageInsightsConfigs resource"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition."
          },
          "204": {
            "description": "NoContent response definition."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/storageInsightConfigs": {
      "get": {
        "tags": [
          "StorageInsights"
        ],
        "x-ms-examples": {
          "StorageInsightsList": {
            "$ref": "./examples/StorageInsightsListByWorkspace.json"
          }
        },
        "operationId": "StorageInsights_ListByWorkspace",
        "description": "Lists the storage insight instances within a workspace",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition.",
            "schema": {
              "$ref": "#/definitions/StorageInsightListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "@odata.nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.OperationalInsights/linkTargets": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "x-ms-examples": {
          "LinkTargetsList": {
            "$ref": "./examples/WorkspacesListLinkTargets.json"
          }
        },
        "operationId": "Workspaces_ListLinkTargets",
        "description": "Get a list of workspaces which the current user has administrator privileges and are not associated with an Azure Subscription. The subscriptionId parameter in the Url is ignored.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LinkTarget"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/savedSearches/{savedSearchId}": {
      "delete": {
        "tags": [
          "SavedSearches"
        ],
        "x-ms-examples": {
          "SavedSearchesDelete": {
            "$ref": "./examples/WorkspacesDeleteSavedSearches.json"
          }
        },
        "operationId": "SavedSearches_Delete",
        "description": "Deletes the specified saved search in a given workspace.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "savedSearchId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The id of the saved search."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition."
          }
        }
      },
      "put": {
        "tags": [
          "SavedSearches"
        ],
        "x-ms-examples": {
          "SavedSearchCreateOrUpdate": {
            "$ref": "./examples/WorkspacesSavedSearchesCreateOrUpdate.json"
          }
        },
        "operationId": "SavedSearches_CreateOrUpdate",
        "description": "Creates or updates a saved search for a given workspace.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "savedSearchId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The id of the saved search."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SavedSearch"
            },
            "description": "The parameters required to save a search."
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition.",
            "schema": {
              "$ref": "#/definitions/SavedSearch"
            }
          }
        }
      },
      "get": {
        "tags": [
          "SavedSearches"
        ],
        "x-ms-examples": {
          "SavedSearchesGet": {
            "$ref": "./examples/WorkspacesSavedSearchesGet.json"
          }
        },
        "operationId": "SavedSearches_Get",
        "description": "Gets the specified saved search for a given workspace.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "savedSearchId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The id of the saved search."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition.",
            "schema": {
              "$ref": "#/definitions/SavedSearch"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/savedSearches": {
      "get": {
        "tags": [
          "SavedSearches"
        ],
        "x-ms-examples": {
          "SavedSearchesList": {
            "$ref": "./examples/SavedSearchesListByWorkspace.json"
          }
        },
        "operationId": "SavedSearches_ListByWorkspace",
        "description": "Gets the saved searches for a given Log Analytics Workspace",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of saved searches for the given Log Analytics Workspace.",
            "schema": {
              "$ref": "#/definitions/SavedSearchesListResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/schema": {
      "post": {
        "tags": [
          "Workspaces"
        ],
        "x-ms-examples": {
          "WorkspacesGetSchema": {
            "$ref": "./examples/SavedSearchesGetSchema.json"
          }
        },
        "operationId": "Workspaces_GetSchema",
        "description": "Gets the schema for a given workspace.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition.",
            "schema": {
              "$ref": "#/definitions/SearchGetSchemaResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/purge": {
      "post": {
        "tags": [
          "Workspaces"
        ],
        "description": "Purges data in an Log Analytics workspace by a set of user-defined filters.\n\nIn order to manage system resources, purge requests are throttled at 50 requests per hour. You should batch the execution of purge requests by sending a single command whose predicate includes all user identities that require purging. Use the in operator to specify multiple identities. You should run the query prior to using for a purge request to verify that the results are expected.",
        "operationId": "Workspaces_Purge",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspacePurgeParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted request for purging an Log Analytics workspace.",
            "schema": {
              "$ref": "#/definitions/WorkspacePurgeResponse"
            },
            "headers": {
              "x-ms-status-location": {
                "type": "string",
                "description": "The location from which to request the operation status."
              }
            }
          }
        },
        "x-ms-examples": {
          "WorkspacePurge": {
            "$ref": "./examples/WorkspacesPurge.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/operations/{purgeId}": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "description": "Gets status of an ongoing purge operation.",
        "operationId": "Workspaces_GetPurgeStatus",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspacePurgeIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status of purge operation in body of response. e.g.:  running, completed.",
            "schema": {
              "$ref": "#/definitions/WorkspacePurgeStatusResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkspacePurgeOperation": {
            "$ref": "./examples/WorkspacesPurgeOperation.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/listKeys": {
      "post": {
        "tags": [
          "Workspaces"
        ],
        "x-ms-examples": {
          "SharedKeysList": {
            "$ref": "./examples/WorkspacesListKeys.json"
          }
        },
        "operationId": "Workspaces_ListKeys",
        "description": "Gets the shared keys for a Log Analytics Workspace. These keys are used to connect Microsoft Operational Insights agents to the workspace.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the shared keys associated with the Log Analytics Workspace.",
            "schema": {
              "$ref": "#/definitions/SharedKeys"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/regenerateSharedKey": {
      "post": {
        "tags": [
          "Workspaces"
        ],
        "x-ms-examples": {
          "RegenerateSharedKeys": {
            "$ref": "./examples/WorkspacesRegenerateSharedKeys.json"
          }
        },
        "operationId": "Workspaces_RegenerateSharedKeys",
        "description": "Regenerates the shared keys for a Log Analytics Workspace. These keys are used to connect Microsoft Operational Insights agents to the workspace.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the new shared keys associated with the Log Analytics Workspace.",
            "schema": {
              "$ref": "#/definitions/SharedKeys"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/gateways/{gatewayId}": {
      "delete": {
        "tags": [
          "Workspaces"
        ],
        "x-ms-examples": {
          "DeleteGateways": {
            "$ref": "./examples/WorkspacesGatewaysDelete.json"
          }
        },
        "operationId": "Workspaces_DeleteGateways",
        "description": "Delete a Log Analytics gateway.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The specified gateway was deleted successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/availableServiceTiers": {
      "get": {
        "tags": [
          "AvailableServiceTiers"
        ],
        "x-ms-examples": {
          "AvailableServiceTiers": {
            "$ref": "./examples/WorkspacesAvailableServiceTiers.json"
          }
        },
        "operationId": "Workspaces_AvailableServiceTiers",
        "description": "Gets the available service tiers for the workspace.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AvailableServiceTier"
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.OperationalInsights/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "x-ms-examples": {
          "OperationsList": {
            "$ref": "./examples/OperationsList.json"
          }
        },
        "operationId": "Operations_List",
        "description": "Lists all of the available OperationalInsights Rest API operations.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "OperationListResult": {
      "description": "Result of the request to list OperationalInsights operations.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "description": "List of operations supported by the OperationalInsights resource provider."
        }
      }
    },
    "Operation": {
      "description": "Supported operation of OperationalInsights resource provider.",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}",
          "type": "string"
        },
        "display": {
          "description": "Display metadata associated with the operation.",
          "properties": {
            "provider": {
              "description": "Service provider: OperationalInsights.",
              "type": "string"
            },
            "resource": {
              "description": "Resource on which the operation is performed etc.",
              "type": "string"
            },
            "operation": {
              "description": "Type of operation: get, read, delete, etc.",
              "type": "string"
            }
          }
        }
      }
    },
    "LinkTarget": {
      "properties": {
        "customerId": {
          "type": "string",
          "description": "The GUID that uniquely identifies the workspace. "
        },
        "accountName": {
          "type": "string",
          "description": "The display name of the workspace.",
          "x-ms-client-name": "DisplayName"
        },
        "workspaceName": {
          "type": "string",
          "description": "The DNS valid workspace name."
        },
        "location": {
          "type": "string",
          "description": "The location of the workspace."
        }
      },
      "description": "Metadata for a workspace that isn't linked to an Azure subscription."
    },
    "Tag": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The tag name."
        },
        "value": {
          "type": "string",
          "description": "The tag value."
        }
      },
      "required": [
        "name",
        "value"
      ],
      "description": "A tag of a saved search."
    },
    "SavedSearchProperties": {
      "properties": {
        "category": {
          "type": "string",
          "description": "The category of the saved search. This helps the user to find a saved search faster. "
        },
        "displayName": {
          "type": "string",
          "description": "Saved search display name."
        },
        "query": {
          "type": "string",
          "description": "The query expression for the saved search. Please see https://docs.microsoft.com/en-us/azure/log-analytics/log-analytics-search-reference for reference."
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "maximum": 2,
          "description": "The version number of the query language. The current version is 2 and is the default."
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          },
          "description": "The tags attached to the saved search."
        }
      },
      "required": [
        "category",
        "displayName",
        "query"
      ],
      "description": "Value object for saved search results."
    },
    "CoreSummary": {
      "properties": {
        "status": {
          "type": "string",
          "description": "The status of a core summary."
        },
        "numberOfDocuments": {
          "type": "integer",
          "format": "int64",
          "description": "The number of documents of a core summary."
        }
      },
      "required": [
        "numberOfDocuments"
      ],
      "description": "The core summary of a search."
    },
    "SearchSort": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the field the search query is sorted on."
        },
        "order": {
          "type": "string",
          "description": "The sort order of the search.",
          "enum": [
            "asc",
            "desc"
          ],
          "x-ms-enum": {
            "name": "SearchSortEnum",
            "modelAsString": true
          }
        }
      },
      "description": "The sort parameters for search."
    },
    "SearchMetadataSchema": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the metadata schema."
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "The version of the metadata schema."
        }
      },
      "description": "Schema metadata for search."
    },
    "SearchMetadata": {
      "properties": {
        "requestId": {
          "x-ms-client-name": "SearchId",
          "type": "string",
          "description": "The request id of the search."
        },
        "resultType": {
          "type": "string",
          "description": "The search result type."
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of search results."
        },
        "top": {
          "type": "integer",
          "format": "int64",
          "description": "The number of top search results."
        },
        "id": {
          "type": "string",
          "description": "The id of the search results request."
        },
        "coreSummaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoreSummary"
          },
          "description": "The core summaries."
        },
        "status": {
          "type": "string",
          "description": "The status of the search results."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time for the search."
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "description": "The time of last update."
        },
        "eTag": {
          "type": "string",
          "description": "The ETag of the search results."
        },
        "sort": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchSort"
          },
          "description": "How the results are sorted."
        },
        "requestTime": {
          "type": "integer",
          "format": "int64",
          "description": "The request time."
        },
        "aggregatedValueField": {
          "type": "string",
          "description": "The aggregated value field."
        },
        "aggregatedGroupingFields": {
          "type": "string",
          "description": "The aggregated grouping fields."
        },
        "sum": {
          "type": "integer",
          "format": "int64",
          "description": "The sum of all aggregates returned in the result set."
        },
        "max": {
          "type": "integer",
          "format": "int64",
          "description": "The max of all aggregates returned in the result set."
        },
        "schema": {
          "$ref": "#/definitions/SearchMetadataSchema",
          "description": "The schema."
        }
      },
      "description": "Metadata for search results."
    },
    "SavedSearch": {
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "The id of the saved search."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the saved search."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "The type of the saved search."
        },
        "eTag": {
          "type": "string",
          "description": "The ETag of the saved search."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SavedSearchProperties",
          "description": "The properties of the saved search."
        }
      },
      "required": [
        "properties"
      ],
      "description": "Value object for saved search results.",
      "x-ms-azure-resource": true
    },
    "SavedSearchesListResult": {
      "properties": {
        "__metadata": {
          "x-ms-client-name": "Metadata",
          "$ref": "#/definitions/SearchMetadata",
          "description": "Unused legacy property, kept here for backward compatibility."
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SavedSearch"
          },
          "description": "The array of result values."
        }
      },
      "description": "The saved search list operation response."
    },
    "SearchSchemaValue": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the schema."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the schema."
        },
        "type": {
          "type": "string",
          "description": "The type."
        },
        "indexed": {
          "type": "boolean",
          "description": "The boolean that indicates the field is searchable as free text."
        },
        "stored": {
          "type": "boolean",
          "description": "The boolean that indicates whether or not the field is stored."
        },
        "facet": {
          "type": "boolean",
          "description": "The boolean that indicates whether or not the field is a facet."
        },
        "ownerType": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The array of workflows containing the field."
        }
      },
      "required": [
        "facet",
        "stored",
        "indexed"
      ],
      "description": "Value object for schema results."
    },
    "SearchGetSchemaResponse": {
      "properties": {
        "metadata": {
          "x-ms-client-name": "Metadata",
          "$ref": "#/definitions/SearchMetadata",
          "description": "The metadata from search results."
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchSchemaValue"
          },
          "description": "The array of result values."
        }
      },
      "description": "The get schema operation response."
    },
    "StorageAccount": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The Azure Resource Manager ID of the storage account resource."
        },
        "key": {
          "type": "string",
          "description": "The storage account key."
        }
      },
      "required": [
        "id",
        "key"
      ],
      "description": "Describes a storage account connection."
    },
    "StorageInsightStatus": {
      "properties": {
        "state": {
          "type": "string",
          "description": "The state of the storage insight connection to the workspace",
          "enum": [
            "OK",
            "ERROR"
          ],
          "x-ms-enum": {
            "name": "StorageInsightState",
            "modelAsString": true
          }
        },
        "description": {
          "type": "string",
          "description": "Description of the state of the storage insight."
        }
      },
      "required": [
        "state"
      ],
      "description": "The status of the storage insight."
    },
    "StorageInsightProperties": {
      "properties": {
        "containers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The names of the blob containers that the workspace should read"
        },
        "tables": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The names of the Azure tables that the workspace should read"
        },
        "storageAccount": {
          "$ref": "#/definitions/StorageAccount",
          "description": "The storage account connection details"
        },
        "status": {
          "$ref": "#/definitions/StorageInsightStatus",
          "description": "The status of the storage insight",
          "readOnly": true
        }
      },
      "required": [
        "storageAccount"
      ],
      "description": "Storage insight properties."
    },
    "StorageInsight": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/StorageInsightProperties",
          "description": "Storage insight properties."
        },
        "eTag": {
          "type": "string",
          "description": "The ETag of the storage insight."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "The top level storage insight resource container.",
      "x-ms-azure-resource": true
    },
    "StorageInsightListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageInsight"
          },
          "description": "A list of storage insight items."
        },
        "@odata.nextLink": {
          "type": "string",
          "description": "The link (url) to the next page of results.",
          "x-ms-client-name": "odataNextLink"
        }
      },
      "description": "The list storage insights operation response."
    },
    "Resource": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "required": [
        "location"
      ],
      "description": "The resource definition.",
      "x-ms-azure-resource": true
    },
    "ProxyResource": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "description": "Common properties of proxy resource."
    },
    "WorkspacePurgeBody": {
      "description": "Describes the body of a purge request for an App Insights Workspace",
      "required": [
        "table",
        "filters"
      ],
      "properties": {
        "table": {
          "type": "string",
          "description": "Table from which to purge data."
        },
        "filters": {
          "type": "array",
          "description": "The set of columns and filters (queries) to run over them to purge the resulting data.",
          "items": {
            "$ref": "#/definitions/WorkspacePurgeBodyFilters"
          }
        }
      }
    },
    "WorkspacePurgeBodyFilters": {
      "description": "User-defined filters to return data which will be purged from the table.",
      "properties": {
        "column": {
          "description": "The column of the table over which the given query should run",
          "type": "string"
        },
        "operator": {
          "description": "A query operator to evaluate over the provided column and value(s). Supported operators are ==, =~, in, in~, >, >=, <, <=, between, and have the same behavior as they would in a KQL query.",
          "type": "string"
        },
        "value": {
          "description": "the value for the operator to function over. This can be a number (e.g., > 100), a string (timestamp >= '2017-09-01') or array of values."
        },
        "key": {
          "description": "When filtering over custom dimensions, this key will be used as the name of the custom dimension.",
          "type": "string"
        }
      }
    },
    "WorkspacePurgeResponse": {
      "description": "Response containing operationId for a specific purge action.",
      "properties": {
        "operationId": {
          "description": "Id to use when querying for status for a particular purge operation.",
          "type": "string"
        }
      },
      "required": [
        "operationId"
      ]
    },
    "WorkspacePurgeStatusResponse": {
      "description": "Response containing status for a specific purge operation.",
      "properties": {
        "status": {
          "description": "Status of the operation represented by the requested Id.",
          "type": "string",
          "enum": [
            "pending",
            "completed"
          ],
          "x-ms-enum": {
            "name": "PurgeState",
            "modelAsString": true
          }
        }
      },
      "required": [
        "status"
      ]
    },
    "SharedKeys": {
      "properties": {
        "primarySharedKey": {
          "type": "string",
          "description": "The primary shared key of a workspace."
        },
        "secondarySharedKey": {
          "type": "string",
          "description": "The secondary shared key of a workspace."
        }
      },
      "description": "The shared keys for a workspace."
    },
    "AvailableServiceTier": {
      "description": "Service Tier details.",
      "properties": {
        "ServiceTier": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the Service Tier.",
          "enum": [
            "Free",
            "Standard",
            "Premium",
            "PerNode",
            "PerGB2018",
            "Standalone",
            "CapacityReservation"
          ],
          "x-ms-enum": {
            "name": "SkuNameEnum",
            "modelAsString": true
          }
        },
        "Enabled": {
          "readOnly": true,
          "type": "boolean",
          "description": "True if the Service Tier is enabled for the workspace."
        },
        "MinimumRetention": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The minimum retention for the Service Tier, in days."
        },
        "MaximumRetention": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The maximum retention for the Service Tier, in days."
        },
        "DefaultRetention": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The default retention for the Service Tier, in days."
        },
        "CapacityReservationLevel": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The capacity reservation level in GB per day. Returned for the Capacity Reservation Service Tier."
        },
        "LastSkuUpdate": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Time when the sku was last updated for the workspace. Returned for the Capacity Reservation Service Tier."
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Subscription ID."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The client API version."
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The Resource Group name.",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "minLength": 1,
      "maxLength": 90
    },
    "WorkspaceNameParameter": {
      "name": "workspaceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Log Analytics Workspace name.",
      "x-ms-parameter-location": "method"
    },
    "WorkspacePurgeParameter": {
      "name": "body",
      "in": "body",
      "description": "Describes the body of a request to purge data in a single table of an Log Analytics Workspace",
      "required": true,
      "schema": {
        "$ref": "#/definitions/WorkspacePurgeBody"
      },
      "x-ms-parameter-location": "client"
    },
    "WorkspacePurgeIdParameter": {
      "name": "purgeId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "In a purge status request, this is the Id of the operation the status of which is returned.",
      "x-ms-parameter-location": "client"
    },
    "GatewayIdParameter": {
      "name": "gatewayId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Log Analytics gateway Id.",
      "x-ms-parameter-location": "method"
    }
  }
}
